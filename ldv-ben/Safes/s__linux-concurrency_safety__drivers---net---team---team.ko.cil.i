/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 245 
struct rw_semaphore;

#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11818 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_180 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_180 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_182 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_183 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_184 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_187 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_186 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_187 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_188 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_189 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_181 {
   int _pad[28U] ;
   struct __anonstruct__kill_182 _kill ;
   struct __anonstruct__timer_183 _timer ;
   struct __anonstruct__rt_184 _rt ;
   struct __anonstruct__sigchld_185 _sigchld ;
   struct __anonstruct__sigfault_186 _sigfault ;
   struct __anonstruct__sigpoll_188 _sigpoll ;
   struct __anonstruct__sigsys_189 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_181 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_196 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_199 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   struct keyring_index_key index_key ;
   struct __anonstruct_199 __anonCompField___anonunion_198_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_200 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_202 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   union __anonunion_payload_202 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_196 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_197 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_198 __anonCompField_key_53 ;
   union __anonunion_type_data_200 type_data ;
   union __anonunion_201 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_217 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_217 __anonCompField_iov_iter_58 ;
   unsigned long nr_segs ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_219 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_219 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_220 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_220 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_221 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_221 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_222 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_222 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_223 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_223 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_224 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_224 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_225 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_225 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_226 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_226 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_227 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_228 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_227 ifr_ifrn ;
   union __anonunion_ifr_ifru_228 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_233 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_232 {
   struct __anonstruct_233 __anonCompField___anonunion_232_59 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_232 __anonCompField_lockref_60 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_235 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_234 {
   struct __anonstruct_235 __anonCompField___anonunion_234_61 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_234 __anonCompField_qstr_62 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_236 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_236 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_240 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_63 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_239 __anonCompField_radix_tree_node_64 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct semaphore {
   raw_spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_244 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_244 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_245 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_245 __anonCompField_kqid_66 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_248 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_249 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_250 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_248 __anonCompField_inode_67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_249 __anonCompField_inode_68 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_250 __anonCompField_inode_69 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_251 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_251 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_253 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_252 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_253 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_252 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_268 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_268 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_25544 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_25544 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_273 __anonCompField_nf_bridge_info_73 ;
   union __anonunion_274 __anonCompField_nf_bridge_info_74 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_277 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_276 {
   u64 v64 ;
   struct __anonstruct_277 __anonCompField___anonunion_276_75 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_276 __anonCompField_skb_mstamp_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_279 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_280 __anonCompField___anonstruct_279_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   struct __anonstruct_279 __anonCompField___anonunion_278_78 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_282 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_281 {
   __wsum csum ;
   struct __anonstruct_282 __anonCompField___anonunion_281_80 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_283 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_278 __anonCompField_sk_buff_79 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_281 __anonCompField_sk_buff_81 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_283 __anonCompField_sk_buff_82 ;
   __u32 secmark ;
   union __anonunion_284 __anonCompField_sk_buff_83 ;
   union __anonunion_285 __anonCompField_sk_buff_84 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/dccp.h"
struct in_addr {
   __be32 s_addr ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_302 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_302 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28475 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28475 phy_interface_t;

#line 126 
enum ldv_28528 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28528 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct scm_creds {
   u32 pid ;
   kuid_t uid ;
   kgid_t gid ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_skb_parms {
   struct scm_creds creds ;
   __u32 portid ;
   __u32 dst_group ;
   __u32 flags ;
   struct sock *sk ;
   bool nsid_is_set ;
   int nsid ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30238 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30239 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30238 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30239 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union inet_addr {
   __u32 all[4U] ;
   __be32 ip ;
   __be32 ip6[4U] ;
   struct in_addr in ;
   struct in6_addr in6 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netpoll.h"
struct netpoll {
   struct net_device *dev ;
   char dev_name[16U] ;
   char const *name ;
   union inet_addr local_ip ;
   union inet_addr remote_ip ;
   bool ipv6 ;
   u16 local_port ;
   u16 remote_port ;
   u8 remote_mac[6U] ;
   struct work_struct cleanup_work ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netpoll.h"
struct netpoll_info {
   atomic_t refcnt ;
   struct semaphore dev_lock ;
   struct sk_buff_head txq ;
   struct delayed_work tx_work ;
   struct netpoll *netpoll ;
   struct callback_head rcu ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct genlmsghdr {
   __u8 cmd ;
   __u8 version ;
   __u16 reserved ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/genetlink.h"
struct genl_multicast_group {
   char name[16U] ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
struct genl_ops;

#line 18 
struct genl_info;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
struct genl_family {
   unsigned int id ;
   unsigned int hdrsize ;
   char name[16U] ;
   unsigned int version ;
   unsigned int maxattr ;
   bool netnsok ;
   bool parallel_ops ;
   int (*pre_doit)(struct genl_ops const *, struct sk_buff *, struct genl_info *) ;
   void (*post_doit)(struct genl_ops const *, struct sk_buff *, struct genl_info *) ;
   int (*mcast_bind)(struct net *, int ) ;
   void (*mcast_unbind)(struct net *, int ) ;
   struct nlattr **attrbuf ;
   struct genl_ops const *ops ;
   struct genl_multicast_group const *mcgrps ;
   unsigned int n_ops ;
   unsigned int n_mcgrps ;
   unsigned int mcgrp_offset ;
   struct list_head family_list ;
   struct module *module ;
};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
struct genl_info {
   u32 snd_seq ;
   u32 snd_portid ;
   struct nlmsghdr *nlhdr ;
   struct genlmsghdr *genlhdr ;
   void *userhdr ;
   struct nlattr **attrs ;
   possible_net_t _net ;
   void *user_ptr[2U] ;
   struct sock *dst_sk ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
struct genl_ops {
   struct nla_policy const *policy ;
   int (*doit)(struct sk_buff *, struct genl_info *) ;
   int (*dumpit)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   u8 cmd ;
   u8 internal_flags ;
   u8 flags ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u32 packets ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_rate_est64 {
   __u64 bps ;
   __u64 pps ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};

#line 61 
struct Qdisc_ops;

#line 62 
struct qdisc_walker;

#line 63 
struct tcf_walker;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops const *ops ;
   struct qdisc_size_table *stab ;
   struct list_head list ;
   u32 handle ;
   u32 parent ;
   int (*reshape_fail)(struct sk_buff *, struct Qdisc *) ;
   void *u32_node ;
   struct Qdisc *__parent ;
   struct netdev_queue *dev_queue ;
   struct gnet_stats_rate_est64 rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct Qdisc *next_sched ;
   struct sk_buff *gso_skb ;
   unsigned long state ;
   struct sk_buff_head q ;
   struct gnet_stats_basic_packed bstats ;
   unsigned int __state ;
   struct gnet_stats_queue qstats ;
   struct callback_head callback_head ;
   int padded ;
   atomic_t refcnt ;
   spinlock_t busylock ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc_class_ops {
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*get)(struct Qdisc *, u32 ) ;
   void (*put)(struct Qdisc *, unsigned long ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_proto **(*tcf_chain)(struct Qdisc *, unsigned long ) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops const *cl_ops ;
   char id[16U] ;
   int priv_size ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   unsigned int (*drop)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *) ;
   void (*attach)(struct Qdisc *) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   struct module *owner ;
};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_result {
   unsigned long class ;
   u32 classid ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto const *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   bool (*destroy)(struct tcf_proto *, bool ) ;
   unsigned long (*get)(struct tcf_proto *, u32 ) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, unsigned long *, bool ) ;
   int (*delete)(struct tcf_proto *, unsigned long ) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *) ;
   int (*dump)(struct net *, struct tcf_proto *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   struct module *owner ;
};

#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto const *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   u32 classid ;
   struct Qdisc *q ;
   void *data ;
   struct tcf_proto_ops const *ops ;
   struct callback_head rcu ;
};

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct qdisc_skb_cb {
   unsigned int pkt_len ;
   u16 slave_dev_queue_mapping ;
   u16 _pad ;
   unsigned char data[20U] ;
};

#line 779 
enum switchdev_trans {
    SWITCHDEV_TRANS_NONE = 0,
    SWITCHDEV_TRANS_PREPARE = 1,
    SWITCHDEV_TRANS_ABORT = 2,
    SWITCHDEV_TRANS_COMMIT = 3
};

#line 786 
enum switchdev_attr_id {
    SWITCHDEV_ATTR_UNDEFINED = 0,
    SWITCHDEV_ATTR_PORT_PARENT_ID = 1,
    SWITCHDEV_ATTR_PORT_STP_STATE = 2,
    SWITCHDEV_ATTR_PORT_BRIDGE_FLAGS = 3
};

#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
union __anonunion_u_341 {
   struct netdev_phys_item_id ppid ;
   u8 stp_state ;
   unsigned long brport_flags ;
};

#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
struct switchdev_attr {
   enum switchdev_attr_id id ;
   enum switchdev_trans trans ;
   u32 flags ;
   union __anonunion_u_341 u ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct fib_info;

#line 44 
enum switchdev_obj_id {
    SWITCHDEV_OBJ_UNDEFINED = 0,
    SWITCHDEV_OBJ_PORT_VLAN = 1,
    SWITCHDEV_OBJ_IPV4_FIB = 2,
    SWITCHDEV_OBJ_PORT_FDB = 3
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_vlan {
   u16 flags ;
   u16 vid_begin ;
   u16 vid_end ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_ipv4_fib {
   u32 dst ;
   int dst_len ;
   struct fib_info *fi ;
   u8 tos ;
   u8 type ;
   u32 nlflags ;
   u32 tb_id ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_fdb {
   unsigned char const *addr ;
   u16 vid ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
union __anonunion_u_342 {
   struct switchdev_obj_vlan vlan ;
   struct switchdev_obj_ipv4_fib ipv4_fib ;
   struct switchdev_obj_fdb fdb ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj {
   enum switchdev_obj_id id ;
   enum switchdev_trans trans ;
   int (*cb)(struct net_device *, struct switchdev_obj *) ;
   union __anonunion_u_342 u ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_ops {
   int (*switchdev_port_attr_get)(struct net_device *, struct switchdev_attr *) ;
   int (*switchdev_port_attr_set)(struct net_device *, struct switchdev_attr *) ;
   int (*switchdev_port_obj_add)(struct net_device *, struct switchdev_obj *) ;
   int (*switchdev_port_obj_del)(struct net_device *, struct switchdev_obj *) ;
   int (*switchdev_port_obj_dump)(struct net_device *, struct switchdev_obj *) ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct team_pcpu_stats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 rx_multicast ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
   u32 rx_dropped ;
   u32 tx_dropped ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_state_343 {
   bool linkup ;
   u32 speed ;
   u8 duplex ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_user_344 {
   bool linkup ;
   bool linkup_enabled ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_orig_345 {
   unsigned char dev_addr[32U] ;
   unsigned int mtu ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_port {
   struct net_device *dev ;
   struct hlist_node hlist ;
   struct list_head list ;
   struct team *team ;
   int index ;
   bool linkup ;
   struct __anonstruct_state_343 state ;
   struct __anonstruct_user_344 user ;
   bool changed ;
   bool removed ;
   struct __anonstruct_orig_345 orig ;
   struct netpoll *np ;
   s32 priority ;
   u16 queue_id ;
   struct list_head qom_list ;
   struct callback_head rcu ;
   long mode_priv[0U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_mode_ops {
   int (*init)(struct team *) ;
   void (*exit)(struct team *) ;
   rx_handler_result_t (*receive)(struct team *, struct team_port *, struct sk_buff *) ;
   bool (*transmit)(struct team *, struct sk_buff *) ;
   int (*port_enter)(struct team *, struct team_port *) ;
   void (*port_leave)(struct team *, struct team_port *) ;
   void (*port_change_dev_addr)(struct team *, struct team_port *) ;
   void (*port_enabled)(struct team *, struct team_port *) ;
   void (*port_disabled)(struct team *, struct team_port *) ;
};

#line 118 
enum team_option_type {
    TEAM_OPTION_TYPE_U32 = 0,
    TEAM_OPTION_TYPE_STRING = 1,
    TEAM_OPTION_TYPE_BINARY = 2,
    TEAM_OPTION_TYPE_BOOL = 3,
    TEAM_OPTION_TYPE_S32 = 4
};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_option_inst_info {
   u32 array_index ;
   struct team_port *port ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_bin_val_347 {
   void const *ptr ;
   u32 len ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
union __anonunion_data_346 {
   u32 u32_val ;
   char const *str_val ;
   struct __anonstruct_bin_val_347 bin_val ;
   bool bool_val ;
   s32 s32_val ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_gsetter_ctx {
   union __anonunion_data_346 data ;
   struct team_option_inst_info *info ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_option {
   struct list_head list ;
   char const *name ;
   bool per_port ;
   unsigned int array_size ;
   enum team_option_type type ;
   int (*init)(struct team *, struct team_option_inst_info *) ;
   int (*getter)(struct team *, struct team_gsetter_ctx *) ;
   int (*setter)(struct team *, struct team_gsetter_ctx *) ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team_mode {
   char const *kind ;
   struct module *owner ;
   size_t priv_size ;
   size_t port_priv_size ;
   struct team_mode_ops const *ops ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_notify_peers_348 {
   unsigned int count ;
   unsigned int interval ;
   atomic_t count_pending ;
   struct delayed_work dw ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct __anonstruct_mcast_rejoin_349 {
   unsigned int count ;
   unsigned int interval ;
   atomic_t count_pending ;
   struct delayed_work dw ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
struct team {
   struct net_device *dev ;
   struct team_pcpu_stats *pcpu_stats ;
   struct mutex lock ;
   int en_port_count ;
   struct hlist_head en_port_hlist[16U] ;
   struct list_head port_list ;
   struct list_head option_list ;
   struct list_head option_inst_list ;
   struct team_mode const *mode ;
   struct team_mode_ops ops ;
   bool user_carrier_enabled ;
   bool queue_override_enabled ;
   struct list_head *qom_lists ;
   bool port_mtu_change_allowed ;
   struct __anonstruct_notify_peers_348 notify_peers ;
   struct __anonstruct_mcast_rejoin_349 mcast_rejoin ;
   long mode_priv[4U] ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_363 {
   void * const __val ;
   char __c[1U] ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct team_option_inst {
   struct list_head list ;
   struct list_head tmp_list ;
   struct team_option *option ;
   struct team_option_inst_info info ;
   bool changed ;
   bool removed ;
};

#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct team_mode_item {
   struct list_head list ;
   struct team_mode const *mode ;
};

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_365 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_367 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_371 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_373 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_375 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_377 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_379 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_381 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_383 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
union __anonunion___u_385 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 2212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
typedef int team_nl_send_func_t(struct sk_buff *, struct team *, u32 );

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/fvtp/.tmp_team.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 4  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
void ldv_atomic_add(int i, atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry)
{
  
#line 145 
  __list_del_entry(entry);
  
#line 146 
  INIT_LIST_HEAD(entry);
  
#line 147 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  
#line 616 
  struct hlist_node *next = n->next;
  
#line 617 
  struct hlist_node **pprev = n->pprev;
  
#line 618 
  *pprev = next;
  
#line 619 
  if (next != (struct hlist_node *)0) 
#line 620 
                                      next->pprev = pprev; else ;
  
#line 621 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/percpu.h"
extern unsigned long __per_cpu_offset[8192U];


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 64 
size_t strlen(char const *);


#line 67 
int strcmp(char const *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 121 
void *kmemdup(void const *, size_t, gfp_t);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 88 
extern struct cpumask const * const cpu_possible_mask;


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_check(unsigned int cpu)
{
  {
    bool __warned;
    
#line 117 
    int __ret_warn_once = cpu >= (unsigned int)nr_cpu_ids;
    
#line 117 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 117 
        int __ret_warn_on = ! __warned;
        
#line 117 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 117 
                                              warn_slowpath_null("include/linux/cpumask.h",117); else ;
        
#line 117 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 117 
      if ((long)tmp != 0L) 
#line 117 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 117 
    long tmp_2 = (long)(__ret_warn_once != 0);
  }
  
#line 119 
  return cpu;
}


#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_next(int n, struct cpumask const *srcp)
{
  unsigned int __retres;
  unsigned long tmp;
  
#line 187 
  if (n != -1) 
#line 188 
               cpumask_check((unsigned int)n); else ;
  
#line 189 
  tmp = find_next_bit((unsigned long const *)(& srcp->bits),(unsigned long)nr_cpu_ids,(unsigned long)(n + 1));
  
#line 189 
  __retres = (unsigned int)tmp;
  
#line 189 
  return __retres;
}


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  unsigned long tmp;
  {
    unsigned long __ret;
    
#line 831 
    unsigned long __edi = __edi;
    
#line 831 
    unsigned long __esi = __esi;
    
#line 831 
    unsigned long __edx = __edx;
    
#line 831 
    unsigned long __ecx = __ecx;
    
#line 831 
    unsigned long __eax = __eax;
    
#line 831 
    if ((long)(pv_irq_ops.save_fl.func == (void *)0) != 0L) {
      
#line 833 
      ldv_inline_asm();
      
#line 831 
      ;
    }
    else ;
    
#line 835 
    ldv_inline_asm();
    
#line 831 
    __ret = __eax;
    
#line 831 
    tmp = __ret;
  }
  
#line 831 
  return tmp;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  
#line 836 
  unsigned long __edi = __edi;
  
#line 836 
  unsigned long __esi = __esi;
  
#line 836 
  unsigned long __edx = __edx;
  
#line 836 
  unsigned long __ecx = __ecx;
  
#line 836 
  unsigned long __eax = __eax;
  
#line 836 
  if ((long)(pv_irq_ops.restore_fl.func == (void *)0) != 0L) {
    
#line 838 
    ldv_inline_asm();
    
#line 836 
    ;
  }
  else ;
  
#line 839 
  ldv_inline_asm();
  
#line 841 
  return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  
#line 841 
  unsigned long __edi = __edi;
  
#line 841 
  unsigned long __esi = __esi;
  
#line 841 
  unsigned long __edx = __edx;
  
#line 841 
  unsigned long __ecx = __ecx;
  
#line 841 
  unsigned long __eax = __eax;
  
#line 841 
  if ((long)(pv_irq_ops.irq_disable.func == (void *)0) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 844 
  ldv_inline_asm();
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void)
{
  unsigned long f;
  
#line 853 
  f = arch_local_save_flags();
  
#line 854 
  arch_local_irq_disable();
  
#line 855 
  return f;
}


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  int __retres;
  
#line 153 
  __retres = (flags & 512UL) == 0UL;
  
#line 153 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqflags.h"
void trace_hardirqs_on(void);


#line 21 
void trace_hardirqs_off(void);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __cmpxchg_wrong_size(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 49 
static void atomic_add(int i, atomic_t *v);


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_cmpxchg(atomic_t *v, int old, int new)
{
  int tmp;
  {
    int __ret;
    
#line 181 
    int __old = old;
    
#line 181 
    int __new = new;
    
#line 181 
    switch (4UL) {
      case (unsigned long)1: 
#line 181 
      ;
      {
        
#line 181 
        u8 volatile *__ptr = (u8 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)2: 
#line 181 
      ;
      {
        
#line 181 
        u16 volatile *__ptr_0 = (u16 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)4: 
#line 181 
      ;
      {
        
#line 181 
        u32 volatile *__ptr_1 = (u32 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)8: 
#line 181 
      ;
      {
        
#line 181 
        u64 volatile *__ptr_2 = (u64 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      default: 
#line 181 
      ;
      
#line 181 
      __cmpxchg_wrong_size();
    }
    ldv_5991: 
#line 181 
    ;
    
#line 181 
    tmp = __ret;
  }
  
#line 181 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/atomic.h"
__inline static int atomic_dec_if_positive(atomic_t *v)
{
  int c;
  int old;
  int dec;
  
#line 100 
  c = atomic_read((atomic_t const *)v);
  ldv_6170: 
#line 101 
  ;
  
#line 102 
  dec = c + -1;
  
#line 103 
  if ((long)(dec < 0) != 0L) 
#line 104 
                             goto ldv_6169; else ;
  
#line 105 
  old = atomic_cmpxchg(v,c,dec);
  
#line 106 
  if ((long)(old == c) != 0L) 
#line 107 
                              goto ldv_6169; else ;
  
#line 108 
  c = old;
  
#line 102 
  goto ldv_6170;
  ldv_6169: 
#line 103 
  ;
  
#line 110 
  return dec;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 362 
static void ldv_spin_lock_78(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_82(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_84(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 411 
static void ldv_spin_unlock_79(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_83(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_85(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_97(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_99(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_105(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_109(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_111(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1);


#line 83 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 85 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 118 
void ldv_spin_model_lock(char *);


#line 119 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_100(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_110(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1);


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
void synchronize_rcu_bh(void);


#line 51 
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));


#line 104 
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 597 
static bool ldv_schedule_delayed_work_86(struct delayed_work *dwork, unsigned long delay);


#line 601 
static bool ldv_schedule_delayed_work_87(struct delayed_work *dwork, unsigned long delay);


#line 605 
static bool ldv_schedule_delayed_work_88(struct delayed_work *dwork, unsigned long delay);


#line 609 
static bool ldv_schedule_delayed_work_89(struct delayed_work *dwork, unsigned long delay);


#line 613 
static bool ldv_schedule_delayed_work_90(struct delayed_work *dwork, unsigned long delay);


#line 617 
static bool ldv_schedule_delayed_work_91(struct delayed_work *dwork, unsigned long delay);


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
__inline static int notifier_to_errno(int ret)
{
  int tmp;
  
#line 179 
  ret &= -32769;
  
#line 180 
  if (ret > 1) 
#line 180 
               tmp = 1 - ret; else 
#line 180 
                                   tmp = 0;
  
#line 180 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu.h"
void *__alloc_percpu(size_t, size_t);


#line 128 
void free_percpu(void *);


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
int __request_module(bool, char const * , ...);


#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
bool try_module_get(struct module *);


#line 588 
void module_put(struct module *);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
void __list_add_rcu(struct list_head *, struct list_head *, struct list_head *);


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void list_add_tail_rcu(struct list_head *new, struct list_head *head)
{
  
#line 102 
  __list_add_rcu(new,head->prev,head);
  
#line 103 
  return;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void list_del_rcu(struct list_head *entry)
{
  
#line 131 
  __list_del_entry(entry);
  
#line 132 
  entry->prev = (struct list_head *)(-2401263026316508672);
  
#line 133 
  return;
}


#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void hlist_del_rcu(struct hlist_node *n)
{
  
#line 345 
  __hlist_del(n);
  
#line 346 
  n->pprev = (struct hlist_node **)(-2401263026316508672);
  
#line 347 
  return;
}


#line 402 
void __compiletime_assert_402(void);


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
__inline static void hlist_add_head_rcu(struct hlist_node *n, struct hlist_head *h)
{
  struct hlist_node * volatile *tmp;
  
#line 398 
  struct hlist_node *first = h->first;
  
#line 400 
  n->next = first;
  
#line 401 
  n->pprev = & h->first;
  {
    
#line 402 
    bool __cond = (_Bool)0;
    
#line 402 
    if ((int)__cond != 0) 
#line 402 
                          __compiletime_assert_402(); else ;
  }
  
#line 404 
  ldv_inline_asm();
  {
    
#line 402 
    struct hlist_node *__var = (struct hlist_node *)0;
    
#line 402 
    tmp = (struct hlist_node * volatile *)(& h->first);
  }
  
#line 402 
  *tmp = n;
  
#line 403 
  if (first != (struct hlist_node *)0) 
#line 404 
                                       first->pprev = & n->next; else ;
  
#line 405 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
extern unsigned char const _ctype[];


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 783 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 842 
struct sk_buff *skb_clone(struct sk_buff *, gfp_t);


#line 1176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_shared(struct sk_buff const *skb)
{
  int __retres;
  int tmp;
  
#line 1178 
  tmp = atomic_read(& skb->users);
  
#line 1178 
  __retres = tmp != 1;
  
#line 1178 
  return __retres;
}


#line 1194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_share_check(struct sk_buff *skb, gfp_t pri)
{
  int tmp_0;
  
#line 1196 
  if ((pri & 16U) != 0U) 
#line 1196 
                         __might_sleep("include/linux/skbuff.h",1196,0); else ;
  
#line 1197 
  tmp_0 = skb_shared((struct sk_buff const *)skb);
  
#line 1197 
  if (tmp_0 != 0) {
    
#line 1198 
    struct sk_buff *nskb = skb_clone(skb,pri);
    
#line 1200 
    if ((long)(nskb != (struct sk_buff *)0) != 0L) 
#line 1201 
                                                   consume_skb(skb); else 
                                                                    
#line 1203 
                                                                    kfree_skb(skb);
    
#line 1204 
    skb = nskb;
  }
  else ;
  
#line 1206 
  return skb;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 2057 
void skb_trim(struct sk_buff *, unsigned int);


#line 3290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_queue_mapping(struct sk_buff *skb, u16 queue_mapping)
{
  
#line 3292 
  skb->queue_mapping = queue_mapping;
  
#line 3293 
  return;
}


#line 3310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_rx_queue(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3312 
  __retres = (unsigned short)((unsigned int)skb->queue_mapping + 65535U);
  
#line 3312 
  return __retres;
}


#line 3315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_rx_queue_recorded(struct sk_buff const *skb)
{
  bool __retres;
  
#line 3317 
  __retres = (_Bool)((unsigned int)skb->queue_mapping != 0U);
  
#line 3317 
  return __retres;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
int __ethtool_get_settings(struct net_device *, struct ethtool_cmd *);


#line 85 
u32 ethtool_op_get_link(struct net_device *);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static void u64_stats_init(struct u64_stats_sync *syncp)
{
  
#line 73 
  return;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static unsigned int u64_stats_fetch_begin_irq(struct u64_stats_sync const *syncp)
{
  unsigned int __retres;
  
#line 131 
  __retres = 0U;
  
#line 131 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static bool u64_stats_fetch_retry_irq(struct u64_stats_sync const *syncp, unsigned int start)
{
  bool __retres;
  
#line 144 
  __retres = (_Bool)0;
  
#line 144 
  return __retres;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
__inline static struct net *read_pnet(possible_net_t const *pnet)
{
  struct net *__retres;
  
#line 253 
  __retres = pnet->net;
  
#line 253 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
int netlink_unicast(struct sock *, struct sk_buff *, __u32, int);


#line 74 
int netlink_broadcast(struct sock *, struct sk_buff *, __u32, __u32, gfp_t);


#line 144 
struct nlmsghdr *__nlmsg_put(struct sk_buff *, u32, u32, int, int, int);


#line 1834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_for_each_tx_queue(struct net_device *dev, void (*f)(struct net_device *, struct netdev_queue *, void *), void *arg)
{
  unsigned int i;
  
#line 1842 
  i = 0U;
  
#line 1842 
  goto ldv_42834;
  ldv_42833: 
#line 1843 
  ;
  
#line 1843 
  (*f)(dev,dev->_tx + i,arg);
  
#line 1842 
  i += 1U;
  ldv_42834: 
#line 1843 
  ;
  
#line 1842 
  if (dev->num_tx_queues > i) 
#line 1844 
                              goto ldv_42833; else 
#line 1847 
                                                   goto ldv_42835;
  ldv_42835: 
#line 1848 
  ;
  
#line 1849 
  return;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net *dev_net(struct net_device const *dev)
{
  struct net *tmp;
  
#line 1856 
  tmp = read_pnet(& dev->nd_net);
  
#line 1856 
  return tmp;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2084 
int register_netdevice_notifier(struct notifier_block *);


#line 2085 
int unregister_netdevice_notifier(struct notifier_block *);


#line 2103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info const *info)
{
  struct net_device *__retres;
  
#line 2105 
  __retres = info->dev;
  
#line 2105 
  return __retres;
}


#line 2108 
int call_netdevice_notifiers(unsigned long, struct net_device *);


#line 2182 
int dev_open(struct net_device *);


#line 2183 
int dev_close(struct net_device *);


#line 2185 
void dev_disable_lro(struct net_device *);


#line 2187 
int dev_queue_xmit_sk(struct sock *, struct sk_buff *);


#line 2188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int dev_queue_xmit(struct sk_buff *skb)
{
  int tmp;
  
#line 2190 
  tmp = dev_queue_xmit_sk(skb->sk,skb);
  
#line 2190 
  return tmp;
}


#line 2193 
int register_netdevice(struct net_device *);


#line 2205 
static void ldv_free_netdev_96(struct net_device *ldv_func_arg1);


#line 2217 
struct net_device *dev_get_by_index(struct net *, int);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2961 
int netdev_rx_handler_register(struct net_device *, rx_handler_func_t *, void *);


#line 2964 
void netdev_rx_handler_unregister(struct net_device *);


#line 2977 
int dev_set_mtu(struct net_device *, int);


#line 2979 
int dev_set_mac_address(struct net_device *, struct sockaddr *);


#line 3003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_put(struct net_device *dev)
{
  {
    
#line 3005 
    void const *__vpp_verify = (void const *)0;
    
#line 3005 
    void const *tmp = __vpp_verify;
  }
  
#line 3005 
  switch (4UL) {
    case (unsigned long)1: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID__ = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43559;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43559;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43559;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43559;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_43559: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_43564;
    case (unsigned long)2: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___0 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43570;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43570;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43570;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43570;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_43570: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_43564;
    case (unsigned long)4: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___1 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43580;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43580;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43580;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43580;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_43580: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_43564;
    case (unsigned long)8: 
#line 3005 
    ;
    {
      
#line 3005 
      int const pao_ID___2 = -1;
      
#line 3005 
      switch (4UL) {
        case (unsigned long)1: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43590;
        case (unsigned long)2: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43590;
        case (unsigned long)4: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43590;
        case (unsigned long)8: 
#line 3005 
        ;
        
#line 3007 
        ldv_inline_asm();
        
#line 3005 
        goto ldv_43590;
        default: 
#line 3005 
        ;
        
#line 3005 
        __bad_percpu_size();
      }
      ldv_43590: 
#line 3005 
      ;
    }
    
#line 3005 
    goto ldv_43564;
    default: 
#line 3005 
    ;
    
#line 3005 
    __bad_size_call_parameter();
    
#line 3005 
    goto ldv_43564;
  }
  ldv_43564: 
#line 3005 
  ;
  
#line 3006 
  return;
}


#line 3014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_hold(struct net_device *dev)
{
  {
    
#line 3016 
    void const *__vpp_verify = (void const *)0;
    
#line 3016 
    void const *tmp = __vpp_verify;
  }
  
#line 3016 
  switch (4UL) {
    case (unsigned long)1: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID__ = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43605;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43605;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43605;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43605;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_43605: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_43610;
    case (unsigned long)2: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___0 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43616;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43616;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43616;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43616;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_43616: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_43610;
    case (unsigned long)4: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___1 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43626;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43626;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43626;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43626;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_43626: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_43610;
    case (unsigned long)8: 
#line 3016 
    ;
    {
      
#line 3016 
      int const pao_ID___2 = 1;
      
#line 3016 
      switch (4UL) {
        case (unsigned long)1: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43636;
        case (unsigned long)2: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43636;
        case (unsigned long)4: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43636;
        case (unsigned long)8: 
#line 3016 
        ;
        
#line 3018 
        ldv_inline_asm();
        
#line 3016 
        goto ldv_43636;
        default: 
#line 3016 
        ;
        
#line 3016 
        __bad_percpu_size();
      }
      ldv_43636: 
#line 3016 
      ;
    }
    
#line 3016 
    goto ldv_43610;
    default: 
#line 3016 
    ;
    
#line 3016 
    __bad_size_call_parameter();
    
#line 3016 
    goto ldv_43610;
  }
  ldv_43610: 
#line 3016 
  ;
  
#line 3017 
  return;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3338 
void ether_setup(struct net_device *);


#line 3384 
int dev_uc_sync_multiple(struct net_device *, struct net_device *);


#line 3385 
void dev_uc_unsync(struct net_device *, struct net_device *);


#line 3386 
void dev_uc_flush(struct net_device *);


#line 3428 
int dev_mc_sync_multiple(struct net_device *, struct net_device *);


#line 3429 
void dev_mc_unsync(struct net_device *, struct net_device *);


#line 3430 
void dev_mc_flush(struct net_device *);


#line 3468 
int dev_set_promiscuity(struct net_device *, int);


#line 3469 
int dev_set_allmulti(struct net_device *, int);


#line 3535 
int netdev_master_upper_dev_link(struct net_device *, struct net_device *);


#line 3540 
void netdev_upper_dev_unlink(struct net_device *, struct net_device *);


#line 3669 
netdev_features_t netdev_increment_features(netdev_features_t, netdev_features_t, netdev_features_t);


#line 3676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static netdev_features_t netdev_add_tso_features(netdev_features_t features, netdev_features_t mask)
{
  netdev_features_t tmp;
  
#line 3679 
  tmp = netdev_increment_features(features,1638400ULL,mask);
  
#line 3679 
  return tmp;
}


#line 3684 
void netdev_change_features(struct net_device *);


#line 3689 
netdev_features_t passthru_features_check(struct sk_buff *, struct net_device *, netdev_features_t);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netpoll.h"
int __netpoll_setup(struct netpoll *, struct net_device *);


#line 62 
void __netpoll_cleanup(struct netpoll *);


#line 65 
void netpoll_send_skb_on_dev(struct netpoll *, struct sk_buff *, struct net_device *);


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netpoll.h"
__inline static void netpoll_send_skb(struct netpoll *np, struct sk_buff *skb)
{
  unsigned long flags;
  int tmp_0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 70 
  flags = arch_local_irq_save();
  
#line 70 
  trace_hardirqs_off();
  
#line 71 
  netpoll_send_skb_on_dev(np,skb,np->dev);
  {
    unsigned long __dummy_2;
    unsigned long __dummy2_2;
    
  }
  
#line 72 
  tmp_0 = arch_irqs_disabled_flags(flags);
  
#line 72 
  if (tmp_0 != 0) {
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 72 
    arch_local_irq_restore(flags);
    
#line 72 
    trace_hardirqs_off();
  }
  else {
    
#line 72 
    trace_hardirqs_on();
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 72 
    arch_local_irq_restore(flags);
  }
  
#line 74 
  return;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netpoll.h"
__inline static bool netpoll_tx_running(struct net_device *dev)
{
  bool __retres;
  int tmp_1;
  {
    unsigned long _flags;
    int tmp_0;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
    }
    
#line 100 
    _flags = arch_local_save_flags();
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 100 
    tmp_0 = arch_irqs_disabled_flags(_flags);
    
#line 100 
    tmp_1 = tmp_0;
  }
  
#line 100 
  __retres = (_Bool)(tmp_1 != 0);
  
#line 100 
  return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_inherit(struct net_device *dst, struct net_device *src)
{
  
#line 297 
  dst->addr_assign_type = src->addr_assign_type;
  
#line 298 
  ether_addr_copy(dst->dev_addr,(u8 const *)src->dev_addr);
  
#line 299 
  return;
}


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_unlock(void);


#line 29 
int rtnl_trylock(void);


#line 36 
int lockdep_rtnl_is_held(void);


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
int vlan_vid_add(struct net_device *, __be16, u16);


#line 192 
void vlan_vid_del(struct net_device *, __be16, u16);


#line 194 
int vlan_vids_add_by_dev(struct net_device *, struct net_device const *);


#line 196 
void vlan_vids_del_by_dev(struct net_device *, struct net_device const *);


#line 199 
bool vlan_uses_dev(struct net_device const *);


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
int nla_parse(struct nlattr **, int, struct nlattr const *, int, struct nla_policy const *);


#line 253 
int nla_put(struct sk_buff *, int, int, void const *);


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nlmsg_msg_size(int payload)
{
  int __retres;
  
#line 267 
  __retres = payload + 16;
  
#line 267 
  return __retres;
}


#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nlmsg_total_size(int payload)
{
  int __retres;
  int tmp;
  
#line 276 
  tmp = nlmsg_msg_size(payload);
  
#line 276 
  __retres = (int)((unsigned int)tmp + 3U) & -4;
  
#line 276 
  return __retres;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static struct nlmsghdr *nlmsg_put(struct sk_buff *skb, u32 portid, u32 seq, int type, int payload, int flags)
{
  struct nlmsghdr *__retres;
  int tmp;
  int tmp_0;
  struct nlmsghdr *tmp_1;
  
#line 449 
  tmp = skb_tailroom((struct sk_buff const *)skb);
  
#line 449 
  tmp_0 = nlmsg_total_size(payload);
  
#line 449 
  if ((long)(tmp < tmp_0) != 0L) {
    
#line 450 
    __retres = (struct nlmsghdr *)0;
    
#line 450 
    goto return_label;
  }
  else ;
  
#line 452 
  tmp_1 = __nlmsg_put(skb,portid,seq,type,payload,flags);
  
#line 452 
  __retres = tmp_1;
  return_label: 
#line 452 
                return __retres;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static struct sk_buff *nlmsg_new(size_t payload, gfp_t flags)
{
  struct sk_buff *tmp_0;
  int tmp;
  
#line 485 
  ;
  
#line 485 
  tmp = nlmsg_total_size((int)payload);
  
#line 485 
  tmp_0 = alloc_skb((unsigned int)tmp,flags);
  
#line 485 
  return tmp_0;
}


#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void nlmsg_end(struct sk_buff *skb, struct nlmsghdr *nlh)
{
  unsigned char *tmp;
  
#line 499 
  tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 499 
  nlh->nlmsg_len = (unsigned int)((long)tmp - (long)nlh);
  
#line 500 
  return;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void nlmsg_trim(struct sk_buff *skb, void const *mark)
{
  
#line 522 
  if (mark != (void const *)0) {
    {
      
#line 523 
      int __ret_warn_on = skb->data > (unsigned char *)mark;
      
#line 523 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 523 
                                            warn_slowpath_null("include/net/netlink.h",523); else ;
      
#line 523 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 524 
    skb_trim(skb,(unsigned int)((long)mark - (long)skb->data));
  }
  else ;
  
#line 526 
  return;
}


#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void nlmsg_cancel(struct sk_buff *skb, struct nlmsghdr *nlh)
{
  
#line 538 
  nlmsg_trim(skb,(void const *)nlh);
  
#line 539 
  return;
}


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void nlmsg_free(struct sk_buff *skb)
{
  
#line 547 
  kfree_skb(skb);
  
#line 548 
  return;
}


#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nlmsg_multicast(struct sock *sk, struct sk_buff *skb, u32 portid, unsigned int group, gfp_t flags)
{
  int err;
  
#line 563 
  ((struct netlink_skb_parms *)(& skb->cb))->dst_group = group;
  
#line 565 
  err = netlink_broadcast(sk,skb,portid,group,flags);
  
#line 566 
  if (err > 0) 
#line 567 
               err = 0; else ;
  
#line 569 
  return err;
}


#line 578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nlmsg_unicast(struct sock *sk, struct sk_buff *skb, u32 portid)
{
  int err;
  
#line 582 
  err = netlink_unicast(sk,skb,portid,64);
  
#line 583 
  if (err > 0) 
#line 584 
               err = 0; else ;
  
#line 586 
  return err;
}


#line 660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_type(struct nlattr const *nla)
{
  int __retres;
  
#line 662 
  __retres = (int)nla->nla_type & -49153;
  
#line 662 
  return __retres;
}


#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void *nla_data(struct nlattr const *nla)
{
  void *__retres;
  
#line 671 
  __retres = (void *)nla + 4U;
  
#line 671 
  return __retres;
}


#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_len(struct nlattr const *nla)
{
  int __retres;
  
#line 680 
  __retres = (int)nla->nla_len + -4;
  
#line 680 
  return __retres;
}


#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_ok(struct nlattr const *nla, int remaining)
{
  int __retres;
  
#line 691 
  __retres = ((remaining > 3 && (unsigned int)nla->nla_len > 3U) && (int)nla->nla_len <= remaining) != 0;
  
#line 691 
  return __retres;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static struct nlattr *nla_next(struct nlattr const *nla, int *remaining)
{
  struct nlattr *__retres;
  
#line 705 
  int totlen = ((int)nla->nla_len + 3) & -4;
  
#line 707 
  *remaining -= totlen;
  
#line 708 
  __retres = (struct nlattr *)nla + totlen;
  
#line 708 
  return __retres;
}


#line 733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_parse_nested(struct nlattr **tb, int maxtype, struct nlattr const *nla, struct nla_policy const *policy)
{
  int tmp_1;
  int tmp;
  void *tmp_0;
  
#line 737 
  ;
  
#line 737 
  tmp = nla_len(nla);
  
#line 737 
  tmp_0 = nla_data(nla);
  
#line 737 
  ;
  
#line 737 
  ;
  
#line 737 
  tmp_1 = nla_parse(tb,maxtype,(struct nlattr const *)tmp_0,tmp,policy);
  
#line 737 
  return tmp_1;
}


#line 746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_u8(struct sk_buff *skb, int attrtype, u8 value)
{
  int tmp;
  
#line 748 
  tmp = nla_put(skb,attrtype,1,(void const *)(& value));
  
#line 748 
  return tmp;
}


#line 801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_u32(struct sk_buff *skb, int attrtype, u32 value)
{
  int tmp;
  
#line 803 
  tmp = nla_put(skb,attrtype,4,(void const *)(& value));
  
#line 803 
  return tmp;
}


#line 911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_s32(struct sk_buff *skb, int attrtype, s32 value)
{
  int tmp;
  
#line 913 
  tmp = nla_put(skb,attrtype,4,(void const *)(& value));
  
#line 913 
  return tmp;
}


#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_string(struct sk_buff *skb, int attrtype, char const *str)
{
  int tmp_0;
  size_t tmp;
  
#line 936 
  ;
  
#line 936 
  tmp = strlen(str);
  
#line 936 
  ;
  
#line 936 
  ;
  
#line 936 
  tmp_0 = nla_put(skb,attrtype,(int)(tmp + (size_t)1U),(void const *)str);
  
#line 936 
  return tmp_0;
}


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_flag(struct sk_buff *skb, int attrtype)
{
  int tmp;
  
#line 946 
  tmp = nla_put(skb,attrtype,0,(void const *)0);
  
#line 946 
  return tmp;
}


#line 992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static u32 nla_get_u32(struct nlattr const *nla)
{
  u32 __retres;
  void *tmp;
  
#line 994 
  tmp = nla_data(nla);
  
#line 994 
  __retres = *((u32 *)tmp);
  
#line 994 
  return __retres;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static u8 nla_get_u8(struct nlattr const *nla)
{
  u8 __retres;
  void *tmp;
  
#line 1039 
  tmp = nla_data(nla);
  
#line 1039 
  __retres = *((u8 *)tmp);
  
#line 1039 
  return __retres;
}


#line 1072  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static s32 nla_get_s32(struct nlattr const *nla)
{
  s32 __retres;
  void *tmp;
  
#line 1074 
  tmp = nla_data(nla);
  
#line 1074 
  __retres = *((s32 *)tmp);
  
#line 1074 
  return __retres;
}


#line 1158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static struct nlattr *nla_nest_start(struct sk_buff *skb, int attrtype)
{
  struct nlattr *__retres;
  int tmp_0;
  
#line 1160 
  struct nlattr *start = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1162 
  tmp_0 = nla_put(skb,attrtype,0,(void const *)0);
  
#line 1162 
  if (tmp_0 < 0) {
    
#line 1163 
    __retres = (struct nlattr *)0;
    
#line 1163 
    goto return_label;
  }
  else ;
  
#line 1165 
  __retres = start;
  return_label: 
#line 1165 
                return __retres;
}


#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_nest_end(struct sk_buff *skb, struct nlattr *start)
{
  int __retres;
  unsigned char *tmp;
  
#line 1180 
  tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1180 
  start->nla_len = (unsigned short)((long)tmp - (long)start);
  
#line 1181 
  __retres = (int)skb->len;
  
#line 1181 
  return __retres;
}


#line 1192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void nla_nest_cancel(struct sk_buff *skb, struct nlattr *start)
{
  
#line 1194 
  nlmsg_trim(skb,(void const *)start);
  
#line 1195 
  return;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
int rtnl_link_register(struct rtnl_link_ops *);


#line 104 
void rtnl_link_unregister(struct rtnl_link_ops *);


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static struct net *genl_info_net(struct genl_info *info)
{
  struct net *tmp;
  
#line 102 
  tmp = read_pnet((possible_net_t const *)(& info->_net));
  
#line 102 
  return tmp;
}


#line 133 
int __genl_register_family(struct genl_family *);


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static int _genl_register_family_with_ops_grps(struct genl_family *family, struct genl_ops const *ops, size_t n_ops, struct genl_multicast_group const *mcgrps, size_t n_mcgrps)
{
  int tmp;
  
#line 168 
  family->module = & __this_module;
  
#line 169 
  family->ops = ops;
  
#line 170 
  family->n_ops = (unsigned int)n_ops;
  
#line 171 
  family->mcgrps = mcgrps;
  
#line 172 
  family->n_mcgrps = (unsigned int)n_mcgrps;
  
#line 173 
  tmp = __genl_register_family(family);
  
#line 173 
  return tmp;
}


#line 185 
int genl_unregister_family(struct genl_family *);


#line 192 
void *genlmsg_put(struct sk_buff *, u32, u32, struct genl_family *, int, u8);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static void genlmsg_end(struct sk_buff *skb, void *hdr)
{
  
#line 270 
  nlmsg_end(skb,(struct nlmsghdr *)(hdr + 18446744073709551596U));
  
#line 271 
  return;
}


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static void genlmsg_cancel(struct sk_buff *skb, void *hdr)
{
  
#line 280 
  if (hdr != (void *)0) 
#line 281 
                        nlmsg_cancel(skb,(struct nlmsghdr *)(hdr + 18446744073709551596U)); else ;
  
#line 282 
  return;
}


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static int genlmsg_multicast_netns(struct genl_family *family, struct net *net, struct sk_buff *skb, u32 portid, unsigned int group, gfp_t flags)
{
  int __retres;
  int tmp_0;
  int tmp_1;
  {
    bool __warned;
    
#line 297 
    int __ret_warn_once = family->n_mcgrps <= group;
    
#line 297 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 297 
        int __ret_warn_on = ! __warned;
        
#line 297 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 297 
                                              warn_slowpath_null("include/net/genetlink.h",297); else ;
        
#line 297 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 297 
      if ((long)tmp != 0L) 
#line 297 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 297 
    tmp_0 = (long)(__ret_warn_once != 0);
  }
  
#line 297 
  if ((long)tmp_0 != 0L) {
    
#line 298 
    __retres = -22;
    
#line 298 
    goto return_label;
  }
  else ;
  
#line 299 
  group = family->mcgrp_offset + group;
  
#line 300 
  tmp_1 = nlmsg_multicast(net->genl_sock,skb,portid,group,flags);
  
#line 300 
  __retres = tmp_1;
  return_label: 
#line 300 
                return __retres;
}


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static int genlmsg_unicast(struct net *net, struct sk_buff *skb, u32 portid)
{
  int tmp;
  
#line 340 
  tmp = nlmsg_unicast(net->genl_sock,skb,portid);
  
#line 340 
  return tmp;
}


#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static int genlmsg_msg_size(int payload)
{
  int __retres;
  
#line 379 
  __retres = (int)((unsigned int)payload + 4U);
  
#line 379 
  return __retres;
}


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static int genlmsg_total_size(int payload)
{
  int __retres;
  int tmp;
  
#line 388 
  tmp = genlmsg_msg_size(payload);
  
#line 388 
  __retres = (int)((unsigned int)tmp + 3U) & -4;
  
#line 388 
  return __retres;
}


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/genetlink.h"
__inline static struct sk_buff *genlmsg_new(size_t payload, gfp_t flags)
{
  struct sk_buff *tmp_0;
  int tmp;
  
#line 398 
  ;
  
#line 398 
  tmp = genlmsg_total_size((int)payload);
  
#line 398 
  tmp_0 = nlmsg_new((unsigned long)tmp,flags);
  
#line 398 
  return tmp_0;
}


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sch_generic.h"
__inline static struct qdisc_skb_cb *qdisc_skb_cb(struct sk_buff const *skb)
{
  struct qdisc_skb_cb *__retres;
  
#line 274 
  __retres = (struct qdisc_skb_cb *)(& skb->cb);
  
#line 274 
  return __retres;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
int switchdev_port_bridge_getlink(struct sk_buff *, u32, u32, struct net_device *, u32, int);


#line 142 
int switchdev_port_bridge_setlink(struct net_device *, struct nlmsghdr *, u16);


#line 144 
int switchdev_port_bridge_dellink(struct net_device *, struct nlmsghdr *, u16);


#line 151 
int switchdev_port_fdb_add(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16, u16);


#line 154 
int switchdev_port_fdb_del(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16);


#line 157 
int switchdev_port_fdb_dump(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
__inline static bool team_port_enabled(struct team_port *port)
{
  bool __retres;
  
#line 78 
  __retres = (_Bool)(port->index != -1);
  
#line 78 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
__inline static void team_netpoll_send_skb(struct team_port *port, struct sk_buff *skb)
{
  
#line 90 
  struct netpoll *np = port->np;
  
#line 92 
  if (np != (struct netpoll *)0) 
#line 93 
                                 netpoll_send_skb(np,skb); else ;
  
#line 94 
  return;
}


#line 116 
int team_modeop_port_enter(struct team *team, struct team_port *port);


#line 117 
void team_modeop_port_change_dev_addr(struct team *team, struct team_port *port);


#line 158 
void team_option_inst_set_change(struct team_option_inst_info *opt_inst_info);


#line 159 
void team_options_change_check(struct team *team);


#line 216 
void __compiletime_assert_217(void);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
__inline static int team_dev_queue_xmit(struct team *team, struct team_port *port, struct sk_buff *skb)
{
  int __retres;
  struct qdisc_skb_cb *tmp;
  bool tmp_0;
  int tmp_1;
  {
    
#line 216 
    bool __cond = (_Bool)0;
    
#line 216 
    if ((int)__cond != 0) 
#line 216 
                          __compiletime_assert_217(); else ;
  }
  
#line 218 
  tmp = qdisc_skb_cb((struct sk_buff const *)skb);
  
#line 218 
  ;
  
#line 218 
  skb_set_queue_mapping(skb,(unsigned short)((int)tmp->slave_dev_queue_mapping));
  
#line 220 
  skb->dev = port->dev;
  
#line 221 
  tmp_0 = netpoll_tx_running(team->dev);
  
#line 221 
  if ((long)((int)tmp_0 != 0) != 0L) {
    
#line 222 
    team_netpoll_send_skb(port,skb);
    
#line 223 
    __retres = 0;
    
#line 223 
    goto return_label;
  }
  else ;
  
#line 225 
  tmp_1 = dev_queue_xmit(skb);
  
#line 225 
  __retres = tmp_1;
  return_label: 
#line 225 
                return __retres;
}


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
__inline static struct hlist_head *team_port_index_hash(struct team *team, int port_index)
{
  struct hlist_head *__retres;
  
#line 231 
  __retres = & team->en_port_hlist[port_index & 15];
  
#line 231 
  return __retres;
}


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_team.h"
__inline static struct team_port *team_get_port_by_index(struct team *team, int port_index)
{
  struct team_port *__retres;
  struct team_port *port;
  struct team_port *tmp_2;
  struct team_port *tmp_5;
  
#line 238 
  struct hlist_head *head = team_port_index_hash(team,port_index);
  {
    struct team_port *tmp_1;
    
#line 240 
    struct hlist_node *____ptr = head->first;
    
#line 240 
    if (____ptr != (struct hlist_node *)0) {
      struct team_port *tmp_0;
      {
        
#line 240 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 240 
        tmp_0 = (struct team_port *)__mptr + 18446744073709551608U;
      }
      
#line 240 
      tmp_1 = tmp_0;
    }
    else 
#line 240 
         tmp_1 = (struct team_port *)0;
    
#line 240 
    tmp_2 = tmp_1;
  }
  
#line 240 
  port = tmp_2;
  
#line 240 
  goto ldv_47908;
  ldv_47907: 
#line 241 
  ;
  
#line 241 
  if (port->index == port_index) {
    
#line 242 
    __retres = port;
    
#line 242 
    goto return_label;
  }
  else ;
  {
    struct team_port *tmp_4;
    
#line 240 
    struct hlist_node *____ptr_0 = port->hlist.next;
    
#line 240 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct team_port *tmp_3;
      {
        
#line 240 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 240 
        tmp_3 = (struct team_port *)__mptr_0 + 18446744073709551608U;
      }
      
#line 240 
      tmp_4 = tmp_3;
    }
    else 
#line 240 
         tmp_4 = (struct team_port *)0;
    
#line 240 
    tmp_5 = tmp_4;
  }
  
#line 240 
  port = tmp_5;
  ldv_47908: 
#line 242 
  ;
  
#line 240 
  if (port != (struct team_port *)0) 
#line 242 
                                     goto ldv_47907; else 
#line 245 
                                                          goto ldv_47909;
  ldv_47909: 
#line 246 
  ;
  
#line 243 
  __retres = (struct team_port *)0;
  return_label: 
#line 243 
                return __retres;
}


#line 287 
int team_options_register(struct team *team, struct team_option const *option, size_t option_count);


#line 290 
void team_options_unregister(struct team *team, struct team_option const *option, size_t option_count);


#line 293 
int team_mode_register(struct team_mode const *mode);


#line 294 
void team_mode_unregister(struct team_mode const *mode);


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_port *team_port_get_rcu(struct net_device const *dev)
{
  struct team_port *__retres;
  void *tmp_3;
  {
    void *tmp_0;
    {
      void *tmp;
      {
        union __anonunion___u_363 __u;
        
#line 46 
        __read_once_size((void const volatile *)(& dev->rx_handler_data),(void *)(& __u.__c),8);
        
#line 46 
        tmp = __u.__val;
      }
      
#line 46 
      void * const _________p1 = tmp;
      
#line 46 
      tmp_0 = _________p1;
    }
    
#line 46 
    void *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 46 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 46 
      if (tmp_1 != 0) {
        
#line 46 
        if (! __warned) {
          int tmp_2;
          
#line 46 
          tmp_2 = rcu_read_lock_held();
          
#line 46 
          if (tmp_2 == 0) {
            
#line 46 
            __warned = (_Bool)1;
            
#line 46 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c",46,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 46 
    tmp_3 = ________p1;
  }
  
#line 46 
  __retres = (struct team_port *)tmp_3;
  
#line 46 
  return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_port *team_port_get_rtnl(struct net_device const *dev)
{
  struct team_port *tmp_1;
  {
    bool __warned;
    int tmp;
    
#line 51 
    tmp = debug_lockdep_rcu_enabled();
    
#line 51 
    if (tmp != 0) {
      
#line 51 
      if (! __warned) {
        int tmp_0;
        
#line 51 
        tmp_0 = lockdep_rtnl_is_held();
        
#line 51 
        if (tmp_0 == 0) {
          
#line 51 
          __warned = (_Bool)1;
          
#line 51 
          lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c",51,"suspicious rcu_dereference_protected() usage");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 51 
  struct team_port *port = (struct team_port *)dev->rx_handler_data;
  
#line 53 
  if ((dev->priv_flags & 262144U) != 0U) 
#line 53 
                                         tmp_1 = port; else 
#line 53 
                                                            tmp_1 = (struct team_port *)0;
  
#line 53 
  return tmp_1;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __set_port_dev_addr(struct net_device *port_dev, unsigned char const *dev_addr)
{
  struct sockaddr addr;
  int tmp;
  
#line 65 
  memcpy((void *)(& addr.sa_data),(void const *)dev_addr,(unsigned long)port_dev->addr_len);
  
#line 66 
  addr.sa_family = port_dev->type;
  
#line 67 
  tmp = dev_set_mac_address(port_dev,& addr);
  
#line 67 
  return tmp;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_set_orig_dev_addr(struct team_port *port)
{
  int tmp;
  
#line 72 
  tmp = __set_port_dev_addr(port->dev,(unsigned char const *)(& port->orig.dev_addr));
  
#line 72 
  return tmp;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_set_team_dev_addr(struct team *team, struct team_port *port)
{
  int tmp;
  
#line 78 
  tmp = __set_port_dev_addr(port->dev,(unsigned char const *)(team->dev)->dev_addr);
  
#line 78 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
int team_modeop_port_enter(struct team *team, struct team_port *port)
{
  int tmp;
  
#line 83 
  tmp = team_port_set_team_dev_addr(team,port);
  
#line 83 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_modeop_port_enter[23U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'o', (char)'p', (char)'_', (char)'p', (char)'o', (char)'r', (char)'t', (char)'_', (char)'e', (char)'n', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 85 
struct kernel_symbol const __ksymtab_team_modeop_port_enter;


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_modeop_port_enter = {.value = (unsigned long)(& team_modeop_port_enter), .name = (char const *)(& __kstrtab_team_modeop_port_enter)};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
void team_modeop_port_change_dev_addr(struct team *team, struct team_port *port)
{
  
#line 90 
  team_port_set_team_dev_addr(team,port);
  
#line 91 
  return;
}


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_modeop_port_change_dev_addr[33U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'o', (char)'p', (char)'_', (char)'p', (char)'o', (char)'r', (char)'t', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'a', (char)'d', (char)'d', (char)'r', (char)'\000'};

#line 92 
struct kernel_symbol const __ksymtab_team_modeop_port_change_dev_addr;


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_modeop_port_change_dev_addr = {.value = (unsigned long)(& team_modeop_port_change_dev_addr), .name = (char const *)(& __kstrtab_team_modeop_port_change_dev_addr)};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_refresh_port_linkup(struct team_port *port)
{
  int tmp;
  
#line 96 
  if ((int)port->user.linkup_enabled != 0) 
#line 96 
                                           tmp = (int)port->user.linkup != 0; else 
                                                                    
#line 96 
                                                                    tmp = (int)port->state.linkup != 0;
  
#line 96 
  port->linkup = (_Bool)(tmp != 0);
  
#line 98 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_option *__team_find_option(struct team *team, char const *opt_name)
{
  struct team_option *__retres;
  struct team_option *option;
  struct team_option *tmp;
  int tmp_0;
  struct team_option *tmp_1;
  {
    
#line 119 
    struct list_head const *__mptr = (struct list_head const *)team->option_list.next;
    
#line 119 
    tmp = (struct team_option *)__mptr;
  }
  
#line 119 
  option = tmp;
  
#line 119 
  goto ldv_48128;
  ldv_48127: 
#line 120 
  ;
  
#line 120 
  tmp_0 = strcmp(option->name,opt_name);
  
#line 120 
  if (tmp_0 == 0) {
    
#line 121 
    __retres = option;
    
#line 121 
    goto return_label;
  }
  else ;
  {
    
#line 119 
    struct list_head const *__mptr_0 = (struct list_head const *)option->list.next;
    
#line 119 
    tmp_1 = (struct team_option *)__mptr_0;
  }
  
#line 119 
  option = tmp_1;
  ldv_48128: 
#line 121 
  ;
  
#line 119 
  if (& option->list != & team->option_list) 
#line 121 
                                             goto ldv_48127; else 
#line 124 
                                                                  goto ldv_48129;
  ldv_48129: 
#line 125 
  ;
  
#line 123 
  __retres = (struct team_option *)0;
  return_label: 
#line 123 
                return __retres;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_option_inst_del(struct team_option_inst *opt_inst)
{
  
#line 128 
  list_del(& opt_inst->list);
  
#line 129 
  kfree((void const *)opt_inst);
  
#line 130 
  return;
}


#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_option_inst_del_option(struct team *team, struct team_option *option)
{
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  struct team_option_inst *tmp_1;
  struct team_option_inst *tmp_2;
  {
    
#line 137 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 137 
    tmp_0 = (struct team_option_inst *)__mptr;
  }
  
#line 137 
  opt_inst = tmp_0;
  {
    
#line 137 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 137 
    tmp_1 = (struct team_option_inst *)__mptr_0;
  }
  
#line 138 
  tmp = tmp_1;
  
#line 137 
  goto ldv_48146;
  ldv_48145: 
#line 138 
  ;
  
#line 138 
  if (opt_inst->option == option) 
#line 139 
                                  __team_option_inst_del(opt_inst); else ;
  
#line 137 
  opt_inst = tmp;
  {
    
#line 137 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp->list.next;
    
#line 137 
    tmp_2 = (struct team_option_inst *)__mptr_1;
  }
  
#line 137 
  tmp = tmp_2;
  ldv_48146: 
#line 139 
  ;
  
#line 137 
  if (& opt_inst->list != & team->option_inst_list) 
#line 139 
                                                    goto ldv_48145; else 
                                                                    
#line 142 
                                                                    goto ldv_48147;
  ldv_48147: 
#line 143 
  ;
  
#line 144 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __team_option_inst_add(struct team *team, struct team_option *option, struct team_port *port)
{
  int __retres;
  struct team_option_inst *opt_inst;
  unsigned int array_size;
  unsigned int i;
  int err;
  
#line 151 
  array_size = option->array_size;
  
#line 152 
  if (array_size == 0U) 
#line 153 
                        array_size = 1U; else ;
  
#line 155 
  i = 0U;
  
#line 155 
  goto ldv_48158;
  ldv_48157: 
#line 156 
  ;
  
#line 156 
  opt_inst = (struct team_option_inst *)kmalloc(64UL,208U);
  
#line 157 
  if (opt_inst == (struct team_option_inst *)0) {
    
#line 158 
    __retres = -12;
    
#line 158 
    goto return_label;
  }
  else ;
  
#line 159 
  opt_inst->option = option;
  
#line 160 
  opt_inst->info.port = port;
  
#line 161 
  opt_inst->info.array_index = i;
  
#line 162 
  opt_inst->changed = (_Bool)1;
  
#line 163 
  opt_inst->removed = (_Bool)0;
  
#line 164 
  list_add_tail(& opt_inst->list,& team->option_inst_list);
  
#line 165 
  if (option->init != (int (*)(struct team *, struct team_option_inst_info *))0) {
    
#line 166 
    err = (*(option->init))(team,& opt_inst->info);
    
#line 167 
    if (err != 0) {
      
#line 168 
      __retres = err;
      
#line 168 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 155 
  i += 1U;
  ldv_48158: 
#line 156 
  ;
  
#line 155 
  if (i < array_size) 
#line 157 
                      goto ldv_48157; else 
#line 160 
                                           goto ldv_48159;
  ldv_48159: 
#line 161 
  ;
  
#line 172 
  __retres = 0;
  return_label: 
#line 172 
                return __retres;
}


#line 175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __team_option_inst_add_option(struct team *team, struct team_option *option)
{
  int __retres;
  int err;
  
#line 180 
  if (! option->per_port) {
    
#line 181 
    err = __team_option_inst_add(team,option,(struct team_port *)0);
    
#line 182 
    if (err != 0) 
#line 183 
                  goto inst_del_option; else ;
  }
  else ;
  
#line 185 
  __retres = 0;
  
#line 185 
  goto return_label;
  inst_del_option: 
#line 187 
  ;
  
#line 188 
  __team_option_inst_del_option(team,option);
  
#line 189 
  __retres = err;
  return_label: 
#line 189 
                return __retres;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_option_inst_mark_removed_option(struct team *team, struct team_option *option)
{
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  {
    
#line 197 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 197 
    tmp = (struct team_option_inst *)__mptr;
  }
  
#line 197 
  opt_inst = tmp;
  
#line 197 
  goto ldv_48176;
  ldv_48175: 
#line 198 
  ;
  
#line 198 
  if (opt_inst->option == option) {
    
#line 199 
    opt_inst->changed = (_Bool)1;
    
#line 200 
    opt_inst->removed = (_Bool)1;
  }
  else ;
  {
    
#line 197 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 197 
    tmp_0 = (struct team_option_inst *)__mptr_0;
  }
  
#line 197 
  opt_inst = tmp_0;
  ldv_48176: 
#line 199 
  ;
  
#line 197 
  if (& opt_inst->list != & team->option_inst_list) 
#line 199 
                                                    goto ldv_48175; else 
                                                                    
#line 202 
                                                                    goto ldv_48177;
  ldv_48177: 
#line 203 
  ;
  
#line 204 
  return;
}


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_option_inst_del_port(struct team *team, struct team_port *port)
{
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  struct team_option_inst *tmp_1;
  struct team_option_inst *tmp_2;
  {
    
#line 210 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 210 
    tmp_0 = (struct team_option_inst *)__mptr;
  }
  
#line 210 
  opt_inst = tmp_0;
  {
    
#line 210 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 210 
    tmp_1 = (struct team_option_inst *)__mptr_0;
  }
  
#line 211 
  tmp = tmp_1;
  
#line 210 
  goto ldv_48191;
  ldv_48190: 
#line 211 
  ;
  
#line 211 
  if ((int)(opt_inst->option)->per_port != 0 && opt_inst->info.port == port) 
    
#line 213 
    __team_option_inst_del(opt_inst); else ;
  
#line 210 
  opt_inst = tmp;
  {
    
#line 210 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp->list.next;
    
#line 210 
    tmp_2 = (struct team_option_inst *)__mptr_1;
  }
  
#line 210 
  tmp = tmp_2;
  ldv_48191: 
#line 212 
  ;
  
#line 210 
  if (& opt_inst->list != & team->option_inst_list) 
#line 212 
                                                    goto ldv_48190; else 
                                                                    
#line 215 
                                                                    goto ldv_48192;
  ldv_48192: 
#line 216 
  ;
  
#line 217 
  return;
}


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __team_option_inst_add_port(struct team *team, struct team_port *port)
{
  int __retres;
  struct team_option *option;
  int err;
  struct team_option *tmp;
  struct team_option *tmp_0;
  {
    
#line 223 
    struct list_head const *__mptr = (struct list_head const *)team->option_list.next;
    
#line 223 
    tmp = (struct team_option *)__mptr;
  }
  
#line 223 
  option = tmp;
  
#line 223 
  goto ldv_48206;
  ldv_48205: 
#line 224 
  ;
  
#line 224 
  if (! option->per_port) 
#line 225 
                          goto ldv_48203; else ;
  
#line 226 
  err = __team_option_inst_add(team,option,port);
  
#line 227 
  if (err != 0) 
#line 228 
                goto inst_del_port; else ;
  ldv_48203: 
#line 229 
  ;
  {
    
#line 223 
    struct list_head const *__mptr_0 = (struct list_head const *)option->list.next;
    
#line 223 
    tmp_0 = (struct team_option *)__mptr_0;
  }
  
#line 223 
  option = tmp_0;
  ldv_48206: 
#line 225 
  ;
  
#line 223 
  if (& option->list != & team->option_list) 
#line 225 
                                             goto ldv_48205; else 
#line 228 
                                                                  goto ldv_48207;
  ldv_48207: 
#line 229 
  ;
  
#line 230 
  __retres = 0;
  
#line 230 
  goto return_label;
  inst_del_port: 
#line 232 
  ;
  
#line 233 
  __team_option_inst_del_port(team,port);
  
#line 234 
  __retres = err;
  return_label: 
#line 234 
                return __retres;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_option_inst_mark_removed_port(struct team *team, struct team_port *port)
{
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  {
    
#line 242 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 242 
    tmp = (struct team_option_inst *)__mptr;
  }
  
#line 242 
  opt_inst = tmp;
  
#line 242 
  goto ldv_48218;
  ldv_48217: 
#line 243 
  ;
  
#line 243 
  if (opt_inst->info.port == port) {
    
#line 244 
    opt_inst->changed = (_Bool)1;
    
#line 245 
    opt_inst->removed = (_Bool)1;
  }
  else ;
  {
    
#line 242 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 242 
    tmp_0 = (struct team_option_inst *)__mptr_0;
  }
  
#line 242 
  opt_inst = tmp_0;
  ldv_48218: 
#line 244 
  ;
  
#line 242 
  if (& opt_inst->list != & team->option_inst_list) 
#line 244 
                                                    goto ldv_48217; else 
                                                                    
#line 247 
                                                                    goto ldv_48219;
  ldv_48219: 
#line 248 
  ;
  
#line 249 
  return;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __team_options_register(struct team *team, struct team_option const *option, size_t option_count)
{
  int __retres;
  int i;
  struct team_option **dst_opts;
  int err;
  struct team_option *tmp_0;
  
#line 258 
  dst_opts = (struct team_option **)kzalloc(option_count * 8UL,208U);
  
#line 260 
  if (dst_opts == (struct team_option **)0) {
    
#line 261 
    __retres = -12;
    
#line 261 
    goto return_label;
  }
  else ;
  
#line 262 
  i = 0;
  
#line 262 
  goto ldv_48230;
  ldv_48229: 
#line 263 
  ;
  
#line 263 
  tmp_0 = __team_find_option(team,option->name);
  
#line 263 
  if (tmp_0 != (struct team_option *)0) {
    
#line 264 
    err = -17;
    
#line 265 
    goto alloc_rollback;
  }
  else ;
  
#line 267 
  *(dst_opts + i) = (struct team_option *)kmemdup((void const *)option,64UL,208U);
  
#line 268 
  if (*(dst_opts + i) == (struct team_option *)0) {
    
#line 269 
    err = -12;
    
#line 270 
    goto alloc_rollback;
  }
  else ;
  
#line 262 
  i += 1;
  
#line 262 
  option += 1;
  ldv_48230: 
#line 263 
  ;
  
#line 262 
  if ((unsigned long)i < option_count) 
#line 264 
                                       goto ldv_48229; else 
#line 267 
                                                            goto ldv_48231;
  ldv_48231: 
#line 268 
  ;
  
#line 274 
  i = 0;
  
#line 274 
  goto ldv_48234;
  ldv_48233: 
#line 275 
  ;
  
#line 275 
  err = __team_option_inst_add_option(team,*(dst_opts + i));
  
#line 276 
  if (err != 0) 
#line 277 
                goto inst_rollback; else ;
  
#line 278 
  list_add_tail(& (*(dst_opts + i))->list,& team->option_list);
  
#line 274 
  i += 1;
  ldv_48234: 
#line 275 
  ;
  
#line 274 
  if ((unsigned long)i < option_count) 
#line 276 
                                       goto ldv_48233; else 
#line 279 
                                                            goto ldv_48235;
  ldv_48235: 
#line 280 
  ;
  
#line 281 
  kfree((void const *)dst_opts);
  
#line 282 
  __retres = 0;
  
#line 282 
  goto return_label;
  inst_rollback: 
#line 284 
  ;
  
#line 285 
  i -= 1;
  
#line 285 
  goto ldv_48237;
  ldv_48236: 
#line 286 
  ;
  
#line 286 
  __team_option_inst_del_option(team,*(dst_opts + i));
  
#line 285 
  i -= 1;
  ldv_48237: 
#line 286 
  ;
  
#line 285 
  if (i >= 0) 
#line 287 
              goto ldv_48236; else 
#line 290 
                                   goto ldv_48238;
  ldv_48238: 
#line 291 
  ;
  
#line 288 
  i = (int)(option_count + (size_t)4294967295U);
  alloc_rollback: 
#line 289 
  ;
  
#line 290 
  i -= 1;
  
#line 290 
  goto ldv_48240;
  ldv_48239: 
#line 291 
  ;
  
#line 291 
  kfree((void const *)*(dst_opts + i));
  
#line 290 
  i -= 1;
  ldv_48240: 
#line 291 
  ;
  
#line 290 
  if (i >= 0) 
#line 292 
              goto ldv_48239; else 
#line 295 
                                   goto ldv_48241;
  ldv_48241: 
#line 296 
  ;
  
#line 293 
  kfree((void const *)dst_opts);
  
#line 294 
  __retres = err;
  return_label: 
#line 294 
                return __retres;
}


#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_options_mark_removed(struct team *team, struct team_option const *option, size_t option_count)
{
  int i;
  
#line 303 
  i = 0;
  
#line 303 
  goto ldv_48250;
  ldv_48249: 
#line 304 
  ;
  {
    struct team_option *del_opt;
    
#line 306 
    del_opt = __team_find_option(team,option->name);
    
#line 307 
    if (del_opt != (struct team_option *)0) 
#line 308 
                                            __team_option_inst_mark_removed_option(team,del_opt); else ;
  }
  
#line 303 
  i += 1;
  
#line 303 
  option += 1;
  ldv_48250: 
#line 304 
  ;
  
#line 303 
  if ((unsigned long)i < option_count) 
#line 305 
                                       goto ldv_48249; else 
#line 308 
                                                            goto ldv_48251;
  ldv_48251: 
#line 309 
  ;
  
#line 310 
  return;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_options_unregister(struct team *team, struct team_option const *option, size_t option_count)
{
  int i;
  
#line 318 
  i = 0;
  
#line 318 
  goto ldv_48260;
  ldv_48259: 
#line 319 
  ;
  {
    struct team_option *del_opt;
    
#line 321 
    del_opt = __team_find_option(team,option->name);
    
#line 322 
    if (del_opt != (struct team_option *)0) {
      
#line 323 
      __team_option_inst_del_option(team,del_opt);
      
#line 324 
      list_del(& del_opt->list);
      
#line 325 
      kfree((void const *)del_opt);
    }
    else ;
  }
  
#line 318 
  i += 1;
  
#line 318 
  option += 1;
  ldv_48260: 
#line 319 
  ;
  
#line 318 
  if ((unsigned long)i < option_count) 
#line 320 
                                       goto ldv_48259; else 
#line 323 
                                                            goto ldv_48261;
  ldv_48261: 
#line 324 
  ;
  
#line 325 
  return;
}


#line 330 
static void __team_options_change_check(struct team *team);


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
int team_options_register(struct team *team, struct team_option const *option, size_t option_count)
{
  int __retres;
  int err;
  
#line 338 
  err = __team_options_register(team,option,option_count);
  
#line 339 
  if (err != 0) {
    
#line 340 
    __retres = err;
    
#line 340 
    goto return_label;
  }
  else ;
  
#line 341 
  __team_options_change_check(team);
  
#line 342 
  __retres = 0;
  return_label: 
#line 342 
                return __retres;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_options_register[22U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'o', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 344 
struct kernel_symbol const __ksymtab_team_options_register;


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_options_register = {.value = (unsigned long)(& team_options_register), .name = (char const *)(& __kstrtab_team_options_register)};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
void team_options_unregister(struct team *team, struct team_option const *option, size_t option_count)
{
  
#line 350 
  __team_options_mark_removed(team,option,option_count);
  
#line 351 
  __team_options_change_check(team);
  
#line 352 
  __team_options_unregister(team,option,option_count);
  
#line 353 
  return;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_options_unregister[24U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'o', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 354 
struct kernel_symbol const __ksymtab_team_options_unregister;


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_options_unregister = {.value = (unsigned long)(& team_options_unregister), .name = (char const *)(& __kstrtab_team_options_unregister)};

#line 356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_option_get(struct team *team, struct team_option_inst *opt_inst, struct team_gsetter_ctx *ctx)
{
  int __retres;
  int tmp;
  
#line 360 
  if ((opt_inst->option)->getter == (int (*)(struct team *, struct team_gsetter_ctx *))0) {
    
#line 361 
    __retres = -95;
    
#line 361 
    goto return_label;
  }
  else ;
  
#line 362 
  tmp = (*((opt_inst->option)->getter))(team,ctx);
  
#line 362 
  __retres = tmp;
  return_label: 
#line 362 
                return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_option_set(struct team *team, struct team_option_inst *opt_inst, struct team_gsetter_ctx *ctx)
{
  int __retres;
  int tmp;
  
#line 369 
  if ((opt_inst->option)->setter == (int (*)(struct team *, struct team_gsetter_ctx *))0) {
    
#line 370 
    __retres = -95;
    
#line 370 
    goto return_label;
  }
  else ;
  
#line 371 
  tmp = (*((opt_inst->option)->setter))(team,ctx);
  
#line 371 
  __retres = tmp;
  return_label: 
#line 371 
                return __retres;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
void team_option_inst_set_change(struct team_option_inst_info *opt_inst_info)
{
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  {
    
#line 378 
    struct team_option_inst_info const *__mptr = (struct team_option_inst_info const *)opt_inst_info;
    
#line 378 
    tmp = (struct team_option_inst *)__mptr + 18446744073709551576U;
  }
  
#line 378 
  opt_inst = tmp;
  
#line 379 
  opt_inst->changed = (_Bool)1;
  
#line 380 
  return;
}


#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_option_inst_set_change[28U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'o', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'_', (char)'i', (char)'n', (char)'s', (char)'t', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'g', (char)'e', (char)'\000'};

#line 381 
struct kernel_symbol const __ksymtab_team_option_inst_set_change;


#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_option_inst_set_change = {.value = (unsigned long)(& team_option_inst_set_change), .name = (char const *)(& __kstrtab_team_option_inst_set_change)};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
void team_options_change_check(struct team *team)
{
  
#line 385 
  __team_options_change_check(team);
  
#line 386 
  return;
}


#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_options_change_check[26U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'o', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'\000'};

#line 387 
struct kernel_symbol const __ksymtab_team_options_change_check;


#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_options_change_check = {.value = (unsigned long)(& team_options_change_check), .name = (char const *)(& __kstrtab_team_options_change_check)};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct list_head mode_list = {.next = & mode_list, .prev = & mode_list};

#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static spinlock_t mode_list_lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "mode_list_lock", .cpu = 0, .ip = 0UL}}}};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_mode_item *__find_mode(char const *kind)
{
  struct team_mode_item *__retres;
  struct team_mode_item *mitem;
  struct team_mode_item *tmp;
  int tmp_0;
  struct team_mode_item *tmp_1;
  {
    
#line 406 
    struct list_head const *__mptr = (struct list_head const *)mode_list.next;
    
#line 406 
    tmp = (struct team_mode_item *)__mptr;
  }
  
#line 406 
  mitem = tmp;
  
#line 406 
  goto ldv_48341;
  ldv_48340: 
#line 407 
  ;
  
#line 407 
  tmp_0 = strcmp((mitem->mode)->kind,kind);
  
#line 407 
  if (tmp_0 == 0) {
    
#line 408 
    __retres = mitem;
    
#line 408 
    goto return_label;
  }
  else ;
  {
    
#line 406 
    struct list_head const *__mptr_0 = (struct list_head const *)mitem->list.next;
    
#line 406 
    tmp_1 = (struct team_mode_item *)__mptr_0;
  }
  
#line 406 
  mitem = tmp_1;
  ldv_48341: 
#line 408 
  ;
  
#line 406 
  if (& mitem->list != & mode_list) 
#line 408 
                                    goto ldv_48340; else 
#line 411 
                                                         goto ldv_48342;
  ldv_48342: 
#line 412 
  ;
  
#line 410 
  __retres = (struct team_mode_item *)0;
  return_label: 
#line 410 
                return __retres;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool is_good_mode_name(char const *name)
{
  bool __retres;
  
#line 415 
  goto ldv_48347;
  ldv_48346: 
#line 416 
  ;
  
#line 416 
  if ((((int)_ctype[(int)((unsigned char)*name)] & 3) == 0 && ((int)_ctype[(int)((unsigned char)*name)] & 4) == 0) && (int)*name != 95) {
    
#line 417 
    __retres = (_Bool)0;
    
#line 417 
    goto return_label;
  }
  else ;
  
#line 418 
  name += 1;
  ldv_48347: 
#line 419 
  ;
  
#line 415 
  if ((int)*name != 0) 
#line 417 
                       goto ldv_48346; else 
#line 420 
                                            goto ldv_48348;
  ldv_48348: 
#line 421 
  ;
  
#line 420 
  __retres = (_Bool)1;
  return_label: 
#line 420 
                return __retres;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
int team_mode_register(struct team_mode const *mode)
{
  int __retres;
  struct team_mode_item *mitem;
  int tmp_0;
  bool tmp;
  struct team_mode_item *tmp_2;
  
#line 425 
  int err = 0;
  
#line 428 
  tmp = is_good_mode_name(mode->kind);
  
#line 428 
  if (tmp) 
#line 428 
           tmp_0 = 0; else 
#line 428 
                           tmp_0 = 1;
  
#line 428 
  if (tmp_0) {
    
#line 430 
    __retres = -22;
    
#line 430 
    goto return_label;
  }
  else 
    
#line 428 
    if (mode->priv_size > 32UL) {
      
#line 430 
      __retres = -22;
      
#line 430 
      goto return_label;
    }
    else ;
  
#line 432 
  mitem = (struct team_mode_item *)kmalloc(24UL,208U);
  
#line 433 
  if (mitem == (struct team_mode_item *)0) {
    
#line 434 
    __retres = -12;
    
#line 434 
    goto return_label;
  }
  else ;
  
#line 436 
  ldv_spin_lock_78(& mode_list_lock);
  
#line 437 
  tmp_2 = __find_mode(mode->kind);
  
#line 437 
  if (tmp_2 != (struct team_mode_item *)0) {
    
#line 438 
    err = -17;
    
#line 439 
    kfree((void const *)mitem);
    
#line 440 
    goto unlock;
  }
  else ;
  
#line 442 
  mitem->mode = mode;
  
#line 443 
  list_add_tail(& mitem->list,& mode_list);
  unlock: 
#line 444 
  ;
  
#line 445 
  ldv_spin_unlock_79(& mode_list_lock);
  
#line 446 
  __retres = err;
  return_label: 
#line 446 
                return __retres;
}


#line 448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_mode_register[19U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 448 
struct kernel_symbol const __ksymtab_team_mode_register;


#line 448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_mode_register = {.value = (unsigned long)(& team_mode_register), .name = (char const *)(& __kstrtab_team_mode_register)};

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
void team_mode_unregister(struct team_mode const *mode)
{
  struct team_mode_item *mitem;
  
#line 454 
  ldv_spin_lock_80(& mode_list_lock);
  
#line 455 
  mitem = __find_mode(mode->kind);
  
#line 456 
  if (mitem != (struct team_mode_item *)0) {
    
#line 457 
    list_del_init(& mitem->list);
    
#line 458 
    kfree((void const *)mitem);
  }
  else ;
  
#line 460 
  ldv_spin_unlock_81(& mode_list_lock);
  
#line 461 
  return;
}


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static char const __kstrtab_team_mode_unregister[21U] = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 462 
struct kernel_symbol const __ksymtab_team_mode_unregister;


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
struct kernel_symbol const __ksymtab_team_mode_unregister = {.value = (unsigned long)(& team_mode_unregister), .name = (char const *)(& __kstrtab_team_mode_unregister)};

#line 464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_mode const *team_mode_get(char const *kind)
{
  struct team_mode_item *mitem;
  
#line 467 
  struct team_mode const *mode = (struct team_mode const *)0;
  
#line 469 
  ldv_spin_lock_82(& mode_list_lock);
  
#line 470 
  mitem = __find_mode(kind);
  
#line 471 
  if (mitem == (struct team_mode_item *)0) {
    
#line 472 
    ldv_spin_unlock_83(& mode_list_lock);
    
#line 473 
    __request_module((_Bool)1,"team-mode-%s",kind);
    
#line 474 
    ldv_spin_lock_84(& mode_list_lock);
    
#line 475 
    mitem = __find_mode(kind);
  }
  else ;
  
#line 477 
  if (mitem != (struct team_mode_item *)0) {
    int tmp_0;
    bool tmp;
    
#line 478 
    mode = mitem->mode;
    
#line 479 
    tmp = try_module_get(mode->owner);
    
#line 479 
    if (tmp) 
#line 479 
             tmp_0 = 0; else 
#line 479 
                             tmp_0 = 1;
    
#line 479 
    if (tmp_0) 
#line 480 
               mode = (struct team_mode const *)0; else ;
  }
  else ;
  
#line 483 
  ldv_spin_unlock_85(& mode_list_lock);
  
#line 484 
  return mode;
}


#line 487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_mode_put(struct team_mode const *mode)
{
  
#line 489 
  module_put(mode->owner);
  
#line 490 
  return;
}


#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool team_dummy_transmit(struct team *team, struct sk_buff *skb)
{
  bool __retres;
  
#line 494 
  dev_kfree_skb_any(skb);
  
#line 495 
  __retres = (_Bool)0;
  
#line 495 
  return __retres;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static rx_handler_result_t team_dummy_receive(struct team *team, struct team_port *port, struct sk_buff *skb)
{
  rx_handler_result_t __retres;
  
#line 502 
  __retres = RX_HANDLER_ANOTHER;
  
#line 502 
  return __retres;
}


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_mode const __team_no_mode = {.kind = "*NOMODE*", .owner = (struct module *)0, .priv_size = 0UL, .port_priv_size = 0UL, .ops = (struct team_mode_ops const *)0};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool team_is_mode_set(struct team *team)
{
  bool __retres;
  
#line 511 
  __retres = (_Bool)(team->mode != & __team_no_mode);
  
#line 511 
  return __retres;
}


#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_set_no_mode(struct team *team)
{
  
#line 516 
  team->user_carrier_enabled = (_Bool)0;
  
#line 517 
  team->mode = & __team_no_mode;
  
#line 518 
  return;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_adjust_ops(struct team *team)
{
  
#line 527 
  if (team->en_port_count == 0) 
#line 527 
                                goto _LOR;
  else {
    int tmp_0;
    bool tmp;
    
#line 527 
    tmp = team_is_mode_set(team);
    
#line 527 
    if (tmp) 
#line 527 
             tmp_0 = 0; else 
#line 527 
                             tmp_0 = 1;
    
#line 527 
    if (tmp_0) 
#line 527 
               goto _LOR;
    else 
      
#line 527 
      if (((team->mode)->ops)->transmit == (bool (*)(struct team *, struct sk_buff *))0) 
        _LOR: 
#line 529 
              team->ops.transmit = & team_dummy_transmit; else 
#line 531 
                                                               team->ops.transmit = ((team->mode)->ops)->transmit;
  }
  
#line 533 
  if (team->en_port_count == 0) 
#line 533 
                                goto _LOR_0;
  else {
    int tmp_2;
    bool tmp_1;
    
#line 533 
    tmp_1 = team_is_mode_set(team);
    
#line 533 
    if (tmp_1) 
#line 533 
               tmp_2 = 0; else 
#line 533 
                               tmp_2 = 1;
    
#line 533 
    if (tmp_2) 
#line 533 
               goto _LOR_0;
    else 
      
#line 533 
      if (((team->mode)->ops)->receive == (rx_handler_result_t (*)(struct team *, struct team_port *, struct sk_buff *))0) 
        _LOR_0: 
#line 535 
                team->ops.receive = & team_dummy_receive; else 
#line 537 
                                                               team->ops.receive = ((team->mode)->ops)->receive;
  }
  
#line 538 
  return;
}


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __team_change_mode(struct team *team, struct team_mode const *new_mode)
{
  int __retres;
  bool tmp;
  
#line 549 
  tmp = team_is_mode_set(team);
  
#line 549 
  if ((int)tmp != 0) {
    
#line 550 
    void (*exit_op)(struct team *) = team->ops.exit;
    
#line 553 
    memset((void *)(& team->ops),0,72UL);
    
#line 554 
    team_adjust_ops(team);
    
#line 556 
    if (exit_op != (void (*)(struct team *))0) 
#line 557 
                                               (*exit_op)(team); else ;
    
#line 558 
    team_mode_put(team->mode);
    
#line 559 
    team_set_no_mode(team);
    
#line 561 
    memset((void *)(& team->mode_priv),0,32UL);
  }
  else ;
  
#line 565 
  if (new_mode == (struct team_mode const *)0) {
    
#line 566 
    __retres = 0;
    
#line 566 
    goto return_label;
  }
  else ;
  
#line 568 
  if ((new_mode->ops)->init != (int (*)(struct team *))0) {
    int err;
    
#line 571 
    err = (*((new_mode->ops)->init))(team);
    
#line 572 
    if (err != 0) {
      
#line 573 
      __retres = err;
      
#line 573 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 576 
  team->mode = new_mode;
  
#line 577 
  memcpy((void *)(& team->ops),(void const *)new_mode->ops,72UL);
  
#line 578 
  team_adjust_ops(team);
  
#line 580 
  __retres = 0;
  return_label: 
#line 580 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_change_mode(struct team *team, char const *kind)
{
  int __retres;
  struct team_mode const *new_mode;
  int err;
  int tmp;
  bool tmp_0;
  
#line 586 
  struct net_device *dev = team->dev;
  
#line 589 
  tmp = list_empty((struct list_head const *)(& team->port_list));
  
#line 589 
  if (tmp == 0) {
    
#line 590 
    netdev_err((struct net_device const *)dev,"No ports can be present during mode change\n");
    
#line 591 
    __retres = -16;
    
#line 591 
    goto return_label;
  }
  else ;
  
#line 594 
  tmp_0 = team_is_mode_set(team);
  
#line 594 
  if ((int)tmp_0 != 0) {
    int tmp_1;
    
#line 594 
    tmp_1 = strcmp((team->mode)->kind,kind);
    
#line 594 
    if (tmp_1 == 0) {
      
#line 595 
      netdev_err((struct net_device const *)dev,"Unable to change to the same mode the team is in\n");
      
#line 596 
      __retres = -22;
      
#line 596 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 599 
  new_mode = team_mode_get(kind);
  
#line 600 
  if (new_mode == (struct team_mode const *)0) {
    
#line 601 
    netdev_err((struct net_device const *)dev,"Mode \"%s\" not found\n",kind);
    
#line 602 
    __retres = -22;
    
#line 602 
    goto return_label;
  }
  else ;
  
#line 605 
  err = __team_change_mode(team,new_mode);
  
#line 606 
  if (err != 0) {
    
#line 607 
    netdev_err((struct net_device const *)dev,"Failed to change to mode \"%s\"\n",kind);
    
#line 608 
    team_mode_put(new_mode);
    
#line 609 
    __retres = err;
    
#line 609 
    goto return_label;
  }
  else ;
  
#line 612 
  netdev_info((struct net_device const *)dev,"Mode changed to \"%s\"\n",kind);
  
#line 613 
  __retres = 0;
  return_label: 
#line 613 
                return __retres;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_notify_peers_work(struct work_struct *work)
{
  struct team *team;
  int val;
  struct team *tmp;
  int tmp_0;
  {
    
#line 626 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 626 
    tmp = (struct team *)__mptr + 18446744073709551136U;
  }
  
#line 626 
  team = tmp;
  
#line 628 
  tmp_0 = rtnl_trylock();
  
#line 628 
  if (tmp_0 == 0) {
    
#line 629 
    ldv_schedule_delayed_work_86(& team->notify_peers.dw,0UL);
    
#line 630 
    goto return_label;
  }
  else ;
  
#line 632 
  val = atomic_dec_if_positive(& team->notify_peers.count_pending);
  
#line 633 
  if (val < 0) {
    
#line 634 
    rtnl_unlock();
    
#line 635 
    goto return_label;
  }
  else ;
  
#line 637 
  call_netdevice_notifiers(19UL,team->dev);
  
#line 638 
  rtnl_unlock();
  
#line 639 
  if (val != 0) {
    unsigned long tmp_1;
    
#line 640 
    tmp_1 = msecs_to_jiffies(team->notify_peers.interval);
    
#line 640 
    ;
    
#line 640 
    ldv_schedule_delayed_work_87(& team->notify_peers.dw,tmp_1);
  }
  else ;
  return_label: 
#line 642 
                return;
}


#line 644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_notify_peers(struct team *team)
{
  
#line 646 
  if (team->notify_peers.count == 0U) 
#line 647 
                                      goto return_label;
  else {
    int tmp_0;
    bool tmp;
    
#line 646 
    tmp = netif_running((struct net_device const *)team->dev);
    
#line 646 
    if (tmp) 
#line 646 
             tmp_0 = 0; else 
#line 646 
                             tmp_0 = 1;
    
#line 646 
    if (tmp_0) 
#line 647 
               goto return_label; else ;
  }
  
#line 648 
  atomic_add((int)team->notify_peers.count,& team->notify_peers.count_pending);
  
#line 649 
  ldv_schedule_delayed_work_88(& team->notify_peers.dw,0UL);
  return_label: 
#line 650 
                return;
}


#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_notify_peers_init(struct team *team)
{
  {
    struct lock_class_key __key;
    
#line 654 
    __init_work(& team->notify_peers.dw.work,0);
    
#line 654 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 654 
    team->notify_peers.dw.work.data = __constr_expr_37;
    
#line 654 
    lockdep_init_map(& team->notify_peers.dw.work.lockdep_map,"(&(&team->notify_peers.dw)->work)",& __key,0);
    
#line 654 
    INIT_LIST_HEAD(& team->notify_peers.dw.work.entry);
    
#line 654 
    team->notify_peers.dw.work.func = & team_notify_peers_work;
  }
  {
    struct lock_class_key __key_0;
    
#line 654 
    init_timer_key(& team->notify_peers.dw.timer,2097152U,"(&(&team->notify_peers.dw)->timer)",& __key_0);
  }
  
#line 654 
  team->notify_peers.dw.timer.function = & delayed_work_timer_fn;
  
#line 654 
  team->notify_peers.dw.timer.data = (unsigned long)(& team->notify_peers.dw);
  
#line 655 
  return;
}


#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_notify_peers_fini(struct team *team)
{
  
#line 659 
  cancel_delayed_work_sync(& team->notify_peers.dw);
  
#line 660 
  return;
}


#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_mcast_rejoin_work(struct work_struct *work)
{
  struct team *team;
  int val;
  struct team *tmp;
  int tmp_0;
  {
    
#line 672 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 672 
    tmp = (struct team *)__mptr + 18446744073709550896U;
  }
  
#line 672 
  team = tmp;
  
#line 674 
  tmp_0 = rtnl_trylock();
  
#line 674 
  if (tmp_0 == 0) {
    
#line 675 
    ldv_schedule_delayed_work_89(& team->mcast_rejoin.dw,0UL);
    
#line 676 
    goto return_label;
  }
  else ;
  
#line 678 
  val = atomic_dec_if_positive(& team->mcast_rejoin.count_pending);
  
#line 679 
  if (val < 0) {
    
#line 680 
    rtnl_unlock();
    
#line 681 
    goto return_label;
  }
  else ;
  
#line 683 
  call_netdevice_notifiers(22UL,team->dev);
  
#line 684 
  rtnl_unlock();
  
#line 685 
  if (val != 0) {
    unsigned long tmp_1;
    
#line 686 
    tmp_1 = msecs_to_jiffies(team->mcast_rejoin.interval);
    
#line 686 
    ;
    
#line 686 
    ldv_schedule_delayed_work_90(& team->mcast_rejoin.dw,tmp_1);
  }
  else ;
  return_label: 
#line 688 
                return;
}


#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_mcast_rejoin(struct team *team)
{
  
#line 692 
  if (team->mcast_rejoin.count == 0U) 
#line 693 
                                      goto return_label;
  else {
    int tmp_0;
    bool tmp;
    
#line 692 
    tmp = netif_running((struct net_device const *)team->dev);
    
#line 692 
    if (tmp) 
#line 692 
             tmp_0 = 0; else 
#line 692 
                             tmp_0 = 1;
    
#line 692 
    if (tmp_0) 
#line 693 
               goto return_label; else ;
  }
  
#line 694 
  atomic_add((int)team->mcast_rejoin.count,& team->mcast_rejoin.count_pending);
  
#line 695 
  ldv_schedule_delayed_work_91(& team->mcast_rejoin.dw,0UL);
  return_label: 
#line 696 
                return;
}


#line 698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_mcast_rejoin_init(struct team *team)
{
  {
    struct lock_class_key __key;
    
#line 700 
    __init_work(& team->mcast_rejoin.dw.work,0);
    
#line 700 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 700 
    team->mcast_rejoin.dw.work.data = __constr_expr_38;
    
#line 700 
    lockdep_init_map(& team->mcast_rejoin.dw.work.lockdep_map,"(&(&team->mcast_rejoin.dw)->work)",& __key,0);
    
#line 700 
    INIT_LIST_HEAD(& team->mcast_rejoin.dw.work.entry);
    
#line 700 
    team->mcast_rejoin.dw.work.func = & team_mcast_rejoin_work;
  }
  {
    struct lock_class_key __key_0;
    
#line 700 
    init_timer_key(& team->mcast_rejoin.dw.timer,2097152U,"(&(&team->mcast_rejoin.dw)->timer)",& __key_0);
  }
  
#line 700 
  team->mcast_rejoin.dw.timer.function = & delayed_work_timer_fn;
  
#line 700 
  team->mcast_rejoin.dw.timer.data = (unsigned long)(& team->mcast_rejoin.dw);
  
#line 701 
  return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_mcast_rejoin_fini(struct team *team)
{
  
#line 705 
  cancel_delayed_work_sync(& team->mcast_rejoin.dw);
  
#line 706 
  return;
}


#line 714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static rx_handler_result_t team_handle_frame(struct sk_buff **pskb)
{
  rx_handler_result_t __retres;
  struct team_port *port;
  struct team *team;
  rx_handler_result_t res;
  int tmp_0;
  bool tmp;
  
#line 716 
  struct sk_buff *skb = *pskb;
  
#line 721 
  skb = skb_share_check(skb,32U);
  
#line 722 
  if (skb == (struct sk_buff *)0) {
    
#line 723 
    __retres = RX_HANDLER_CONSUMED;
    
#line 723 
    goto return_label;
  }
  else ;
  
#line 725 
  *pskb = skb;
  
#line 727 
  port = team_port_get_rcu((struct net_device const *)skb->dev);
  
#line 728 
  team = port->team;
  
#line 729 
  tmp = team_port_enabled(port);
  
#line 729 
  if (tmp) 
#line 729 
           tmp_0 = 0; else 
#line 729 
                           tmp_0 = 1;
  
#line 729 
  if (tmp_0) 
#line 731 
             res = RX_HANDLER_EXACT; else 
#line 733 
                                          res = (*(team->ops.receive))(team,port,skb);
  
#line 735 
  if (res == (unsigned int)RX_HANDLER_ANOTHER) {
    struct team_pcpu_stats *pcpu_stats;
    struct team_pcpu_stats *tmp_2_0;
    {
      struct team_pcpu_stats *tmp_1;
      {
        
#line 738 
        void const *__vpp_verify = (void const *)0;
        
#line 738 
        void const *tmp_2 = __vpp_verify;
      }
      {
        unsigned long tcp_ptr__;
        
#line 739 
        ldv_inline_asm();
        
#line 738 
        tmp_1 = (struct team_pcpu_stats *)tcp_ptr__;
      }
      
#line 738 
      tmp_2_0 = tmp_1;
    }
    
#line 738 
    pcpu_stats = tmp_2_0;
    
#line 739 
    u64_stats_init(& pcpu_stats->syncp);
    
#line 740 
    pcpu_stats->rx_packets += 1ULL;
    
#line 741 
    pcpu_stats->rx_bytes += (unsigned long long)skb->len;
    
#line 742 
    if ((unsigned int)*((unsigned char *)skb + 144UL) == 2U) 
#line 743 
                                                             pcpu_stats->rx_multicast += 1ULL; else ;
    
#line 744 
    u64_stats_init(& pcpu_stats->syncp);
    
#line 746 
    skb->dev = team->dev;
  }
  else {
    {
      
#line 748 
      void const *__vpp_verify_0 = (void const *)0;
      
#line 748 
      void const *tmp_4 = __vpp_verify_0;
    }
    
#line 748 
    switch (4UL) {
      case (unsigned long)1: 
#line 748 
      ;
      {
        
#line 748 
        int const pao_ID__ = 1;
        
#line 748 
        switch (4UL) {
          case (unsigned long)1: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48470;
          case (unsigned long)2: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48470;
          case (unsigned long)4: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48470;
          case (unsigned long)8: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48470;
          default: 
#line 748 
          ;
          
#line 748 
          __bad_percpu_size();
        }
        ldv_48470: 
#line 748 
        ;
      }
      
#line 748 
      goto ldv_48475;
      case (unsigned long)2: 
#line 748 
      ;
      {
        
#line 748 
        int const pao_ID___0 = 1;
        
#line 748 
        switch (4UL) {
          case (unsigned long)1: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48481;
          case (unsigned long)2: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48481;
          case (unsigned long)4: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48481;
          case (unsigned long)8: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48481;
          default: 
#line 748 
          ;
          
#line 748 
          __bad_percpu_size();
        }
        ldv_48481: 
#line 748 
        ;
      }
      
#line 748 
      goto ldv_48475;
      case (unsigned long)4: 
#line 748 
      ;
      {
        
#line 748 
        int const pao_ID___1 = 1;
        
#line 748 
        switch (4UL) {
          case (unsigned long)1: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48491;
          case (unsigned long)2: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48491;
          case (unsigned long)4: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48491;
          case (unsigned long)8: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48491;
          default: 
#line 748 
          ;
          
#line 748 
          __bad_percpu_size();
        }
        ldv_48491: 
#line 748 
        ;
      }
      
#line 748 
      goto ldv_48475;
      case (unsigned long)8: 
#line 748 
      ;
      {
        
#line 748 
        int const pao_ID___2 = 1;
        
#line 748 
        switch (4UL) {
          case (unsigned long)1: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48501;
          case (unsigned long)2: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48501;
          case (unsigned long)4: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48501;
          case (unsigned long)8: 
#line 748 
          ;
          
#line 750 
          ldv_inline_asm();
          
#line 748 
          goto ldv_48501;
          default: 
#line 748 
          ;
          
#line 748 
          __bad_percpu_size();
        }
        ldv_48501: 
#line 748 
        ;
      }
      
#line 748 
      goto ldv_48475;
      default: 
#line 748 
      ;
      
#line 748 
      __bad_size_call_parameter();
      
#line 748 
      goto ldv_48475;
    }
    ldv_48475: 
#line 748 
    ;
  }
  
#line 751 
  __retres = res;
  return_label: 
#line 751 
                return __retres;
}


#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_queue_override_init(struct team *team)
{
  int __retres;
  struct list_head *listarr;
  unsigned int i;
  struct list_head *tmp_0;
  
#line 762 
  unsigned int queue_cnt = (team->dev)->num_tx_queues + 4294967295U;
  
#line 765 
  if (queue_cnt == 0U) {
    
#line 766 
    __retres = 0;
    
#line 766 
    goto return_label;
  }
  else ;
  
#line 767 
  listarr = (struct list_head *)kmalloc((unsigned long)queue_cnt * 16UL,208U);
  
#line 768 
  if (listarr == (struct list_head *)0) {
    
#line 769 
    __retres = -12;
    
#line 769 
    goto return_label;
  }
  else ;
  
#line 770 
  team->qom_lists = listarr;
  
#line 771 
  i = 0U;
  
#line 771 
  goto ldv_48514;
  ldv_48513: 
#line 772 
  ;
  
#line 772 
  tmp_0 = listarr;
  
#line 772 
  listarr += 1;
  
#line 772 
  ;
  
#line 772 
  INIT_LIST_HEAD(tmp_0);
  
#line 771 
  i += 1U;
  ldv_48514: 
#line 772 
  ;
  
#line 771 
  if (i < queue_cnt) 
#line 773 
                     goto ldv_48513; else 
#line 776 
                                          goto ldv_48515;
  ldv_48515: 
#line 777 
  ;
  
#line 773 
  __retres = 0;
  return_label: 
#line 773 
                return __retres;
}


#line 776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_queue_override_fini(struct team *team)
{
  
#line 778 
  kfree((void const *)team->qom_lists);
  
#line 779 
  return;
}


#line 781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct list_head *__team_get_qom_list(struct team *team, u16 queue_id)
{
  struct list_head *__retres;
  
#line 783 
  __retres = team->qom_lists + ((unsigned long)queue_id + 18446744073709551615U);
  
#line 783 
  return __retres;
}


#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool team_queue_override_transmit(struct team *team, struct sk_buff *skb)
{
  bool __retres;
  struct list_head *qom_list;
  struct team_port *port;
  struct team_port *tmp_5;
  int tmp_6;
  struct team_port *tmp_13;
  
#line 794 
  if (! team->queue_override_enabled || (unsigned int)skb->queue_mapping == 0U) {
    
#line 795 
    __retres = (_Bool)0;
    
#line 795 
    goto return_label;
  }
  else ;
  
#line 796 
  qom_list = __team_get_qom_list(team,(unsigned short)((int)skb->queue_mapping));
  {
    struct team_port *tmp_4;
    
#line 797 
    struct list_head *__ptr = qom_list->next;
    {
      struct list_head *tmp_3;
      {
        struct list_head *tmp_0;
        {
          struct list_head *tmp;
          {
            union __anonunion___u_365 __u;
            
#line 797 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 797 
            tmp = __u.__val;
          }
          
#line 797 
          struct list_head *_________p1 = tmp;
          
#line 797 
          tmp_0 = _________p1;
        }
        
#line 797 
        struct list_head *________p1 = tmp_0;
        {
          bool __warned;
          int tmp_2;
          int tmp_1;
          
#line 797 
          tmp_1 = debug_lockdep_rcu_enabled();
          
#line 797 
          if (tmp_1 != 0) 
            
#line 797 
            if (! __warned) 
#line 797 
                            tmp_2 = 1; else 
#line 797 
                                            tmp_2 = 0;
          else 
#line 797 
               tmp_2 = 0;
        }
        
#line 797 
        tmp_3 = ________p1;
      }
      
#line 797 
      struct list_head const *__mptr = (struct list_head const *)tmp_3;
      
#line 797 
      tmp_4 = (struct team_port *)__mptr + 18446744073709551488U;
    }
    
#line 797 
    tmp_5 = tmp_4;
  }
  
#line 797 
  port = tmp_5;
  
#line 797 
  goto ldv_48558;
  ldv_48557: 
#line 798 
  ;
  
#line 798 
  tmp_6 = team_dev_queue_xmit(team,port,skb);
  
#line 798 
  if (tmp_6 == 0) {
    
#line 799 
    __retres = (_Bool)1;
    
#line 799 
    goto return_label;
  }
  else ;
  {
    struct team_port *tmp_12;
    
#line 797 
    struct list_head *__ptr_0 = port->qom_list.next;
    {
      struct list_head *tmp_11;
      {
        struct list_head *tmp_8;
        {
          struct list_head *tmp_7;
          {
            union __anonunion___u_367 __u_0;
            
#line 797 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 797 
            tmp_7 = __u_0.__val;
          }
          
#line 797 
          struct list_head *_________p1_0 = tmp_7;
          
#line 797 
          tmp_8 = _________p1_0;
        }
        
#line 797 
        struct list_head *________p1_0 = tmp_8;
        {
          bool __warned_0;
          int tmp_10;
          int tmp_9;
          
#line 797 
          tmp_9 = debug_lockdep_rcu_enabled();
          
#line 797 
          if (tmp_9 != 0) 
            
#line 797 
            if (! __warned_0) 
#line 797 
                              tmp_10 = 1; else 
#line 797 
                                               tmp_10 = 0;
          else 
#line 797 
               tmp_10 = 0;
        }
        
#line 797 
        tmp_11 = ________p1_0;
      }
      
#line 797 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_11;
      
#line 797 
      tmp_12 = (struct team_port *)__mptr_0 + 18446744073709551488U;
    }
    
#line 797 
    tmp_13 = tmp_12;
  }
  
#line 797 
  port = tmp_13;
  ldv_48558: 
#line 800 
  ;
  
#line 797 
  if (& port->qom_list != qom_list) 
#line 799 
                                    goto ldv_48557; else 
#line 802 
                                                         goto ldv_48559;
  ldv_48559: 
#line 803 
  ;
  
#line 801 
  __retres = (_Bool)0;
  return_label: 
#line 801 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_queue_override_port_del(struct team *team, struct team_port *port)
{
  
#line 807 
  if ((unsigned int)port->queue_id == 0U) 
#line 808 
                                          goto return_label; else ;
  
#line 809 
  list_del_rcu(& port->qom_list);
  return_label: 
#line 810 
                return;
}


#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool team_queue_override_port_has_gt_prio_than(struct team_port *port, struct team_port *cur)
{
  bool __retres;
  
#line 815 
  if (port->priority < cur->priority) {
    
#line 816 
    __retres = (_Bool)1;
    
#line 816 
    goto return_label;
  }
  else ;
  
#line 817 
  if (port->priority > cur->priority) {
    
#line 818 
    __retres = (_Bool)0;
    
#line 818 
    goto return_label;
  }
  else ;
  
#line 819 
  if (port->index < cur->index) {
    
#line 820 
    __retres = (_Bool)1;
    
#line 820 
    goto return_label;
  }
  else ;
  
#line 821 
  __retres = (_Bool)0;
  return_label: 
#line 821 
                return __retres;
}


#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_queue_override_port_add(struct team *team, struct team_port *port)
{
  struct team_port *cur;
  struct list_head *qom_list;
  struct list_head *node;
  struct team_port *tmp;
  bool tmp_0;
  struct team_port *tmp_1;
  
#line 831 
  if ((unsigned int)port->queue_id == 0U) 
#line 832 
                                          goto return_label; else ;
  
#line 833 
  qom_list = __team_get_qom_list(team,(unsigned short)((int)port->queue_id));
  
#line 834 
  node = qom_list;
  {
    
#line 835 
    struct list_head const *__mptr = (struct list_head const *)qom_list->next;
    
#line 835 
    tmp = (struct team_port *)__mptr + 18446744073709551488U;
  }
  
#line 835 
  cur = tmp;
  
#line 835 
  goto ldv_48581;
  ldv_48580: 
#line 836 
  ;
  
#line 836 
  tmp_0 = team_queue_override_port_has_gt_prio_than(port,cur);
  
#line 836 
  if ((int)tmp_0 != 0) 
#line 837 
                       goto ldv_48579; else ;
  
#line 838 
  node = & cur->qom_list;
  {
    
#line 835 
    struct list_head const *__mptr_0 = (struct list_head const *)cur->qom_list.next;
    
#line 835 
    tmp_1 = (struct team_port *)__mptr_0 + 18446744073709551488U;
  }
  
#line 835 
  cur = tmp_1;
  ldv_48581: 
#line 837 
  ;
  
#line 835 
  if (& cur->qom_list != qom_list) 
#line 837 
                                   goto ldv_48580; else 
#line 840 
                                                        goto ldv_48579;
  ldv_48579: 
#line 841 
  ;
  
#line 840 
  list_add_tail_rcu(& port->qom_list,node);
  return_label: 
#line 841 
                return;
}


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_queue_override_enabled_check(struct team *team)
{
  struct team_port *port;
  struct team_port *tmp;
  struct team_port *tmp_0;
  
#line 846 
  bool enabled = (_Bool)0;
  {
    
#line 848 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 848 
    tmp = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 848 
  port = tmp;
  
#line 848 
  goto ldv_48593;
  ldv_48592: 
#line 849 
  ;
  
#line 849 
  if ((unsigned int)port->queue_id != 0U) {
    
#line 850 
    enabled = (_Bool)1;
    
#line 851 
    goto ldv_48591;
  }
  else ;
  {
    
#line 848 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 848 
    tmp_0 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 848 
  port = tmp_0;
  ldv_48593: 
#line 850 
  ;
  
#line 848 
  if (& port->list != & team->port_list) 
#line 850 
                                         goto ldv_48592; else 
#line 853 
                                                              goto ldv_48591;
  ldv_48591: 
#line 854 
  ;
  
#line 854 
  if ((int)team->queue_override_enabled == (int)enabled) 
#line 855 
                                                         goto return_label; else ;
  {
    
#line 856 
    struct _ddebug descriptor = {.modname = "team", .function = "__team_queue_override_enabled_check", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c", .format = "%s queue override\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))857U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 856 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char *tmp_1;
      
#line 856 
      if ((int)enabled != 0) 
#line 856 
                             tmp_1 = (char *)"Enabling"; else 
#line 856 
                                                              tmp_1 = (char *)"Disabling";
      
#line 856 
      ;
      
#line 856 
      __dynamic_netdev_dbg(& descriptor,(struct net_device const *)team->dev,"%s queue override\n",tmp_1);
    }
    else ;
  }
  
#line 858 
  team->queue_override_enabled = enabled;
  return_label: 
#line 859 
                return;
}


#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_queue_override_port_prio_changed(struct team *team, struct team_port *port)
{
  
#line 864 
  if ((unsigned int)port->queue_id == 0U) 
#line 865 
                                          goto return_label;
  else {
    bool tmp;
    
#line 864 
    tmp = team_port_enabled(port);
    
#line 864 
    if ((int)tmp != 0) 
#line 865 
                       goto return_label; else ;
  }
  
#line 866 
  __team_queue_override_port_del(team,port);
  
#line 867 
  __team_queue_override_port_add(team,port);
  
#line 868 
  __team_queue_override_enabled_check(team);
  return_label: 
#line 869 
                return;
}


#line 871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_queue_override_port_change_queue_id(struct team *team, struct team_port *port, u16 new_queue_id)
{
  bool tmp;
  
#line 875 
  tmp = team_port_enabled(port);
  
#line 875 
  if ((int)tmp != 0) {
    
#line 876 
    __team_queue_override_port_del(team,port);
    
#line 877 
    port->queue_id = new_queue_id;
    
#line 878 
    __team_queue_override_port_add(team,port);
    
#line 879 
    __team_queue_override_enabled_check(team);
  }
  else 
#line 881 
       port->queue_id = new_queue_id;
  
#line 882 
  return;
}


#line 885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_queue_override_port_add(struct team *team, struct team_port *port)
{
  
#line 888 
  __team_queue_override_port_add(team,port);
  
#line 889 
  __team_queue_override_enabled_check(team);
  
#line 890 
  return;
}


#line 892  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_queue_override_port_del(struct team *team, struct team_port *port)
{
  
#line 895 
  __team_queue_override_port_del(team,port);
  
#line 896 
  __team_queue_override_enabled_check(team);
  
#line 897 
  return;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static bool team_port_find(struct team const *team, struct team_port const *port)
{
  bool __retres;
  struct team_port *cur;
  struct team_port *tmp;
  struct team_port *tmp_0;
  {
    
#line 909 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 909 
    tmp = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 909 
  cur = tmp;
  
#line 909 
  goto ldv_48623;
  ldv_48622: 
#line 910 
  ;
  
#line 910 
  if ((struct team_port const *)cur == port) {
    
#line 911 
    __retres = (_Bool)1;
    
#line 911 
    goto return_label;
  }
  else ;
  {
    
#line 909 
    struct list_head const *__mptr_0 = (struct list_head const *)cur->list.next;
    
#line 909 
    tmp_0 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 909 
  cur = tmp_0;
  ldv_48623: 
#line 911 
  ;
  
#line 909 
  if ((struct list_head const *)(& cur->list) != & team->port_list) 
#line 911 
                                                                    goto ldv_48622; else 
                                                                    
#line 914 
                                                                    goto ldv_48624;
  ldv_48624: 
#line 915 
  ;
  
#line 912 
  __retres = (_Bool)0;
  return_label: 
#line 912 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_port_enable(struct team *team, struct team_port *port)
{
  bool tmp;
  int tmp_0;
  struct hlist_head *tmp_1;
  
#line 924 
  tmp = team_port_enabled(port);
  
#line 924 
  if ((int)tmp != 0) 
#line 925 
                     goto return_label; else ;
  
#line 926 
  tmp_0 = team->en_port_count;
  
#line 926 
  team->en_port_count += 1;
  
#line 926 
  port->index = tmp_0;
  
#line 927 
  tmp_1 = team_port_index_hash(team,port->index);
  
#line 927 
  ;
  
#line 927 
  hlist_add_head_rcu(& port->hlist,tmp_1);
  
#line 929 
  team_adjust_ops(team);
  
#line 930 
  team_queue_override_port_add(team,port);
  
#line 931 
  if (team->ops.port_enabled != (void (*)(struct team *, struct team_port *))0) 
    
#line 932 
    (*(team->ops.port_enabled))(team,port); else ;
  
#line 933 
  team_notify_peers(team);
  
#line 934 
  team_mcast_rejoin(team);
  return_label: 
#line 935 
                return;
}


#line 937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __reconstruct_port_hlist(struct team *team, int rm_index)
{
  int i;
  struct team_port *port;
  struct hlist_head *tmp;
  
#line 942 
  i = rm_index + 1;
  
#line 942 
  goto ldv_48636;
  ldv_48635: 
#line 943 
  ;
  
#line 943 
  port = team_get_port_by_index(team,i);
  
#line 944 
  hlist_del_rcu(& port->hlist);
  
#line 945 
  port->index -= 1;
  
#line 946 
  tmp = team_port_index_hash(team,port->index);
  
#line 946 
  ;
  
#line 946 
  hlist_add_head_rcu(& port->hlist,tmp);
  
#line 942 
  i += 1;
  ldv_48636: 
#line 943 
  ;
  
#line 942 
  if (team->en_port_count > i) 
#line 944 
                               goto ldv_48635; else 
#line 947 
                                                    goto ldv_48637;
  ldv_48637: 
#line 948 
  ;
  
#line 949 
  return;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_port_disable(struct team *team, struct team_port *port)
{
  int tmp_0;
  bool tmp;
  
#line 954 
  tmp = team_port_enabled(port);
  
#line 954 
  if (tmp) 
#line 954 
           tmp_0 = 0; else 
#line 954 
                           tmp_0 = 1;
  
#line 954 
  if (tmp_0) 
#line 955 
             goto return_label; else ;
  
#line 956 
  if (team->ops.port_disabled != (void (*)(struct team *, struct team_port *))0) 
    
#line 957 
    (*(team->ops.port_disabled))(team,port); else ;
  
#line 958 
  hlist_del_rcu(& port->hlist);
  
#line 959 
  __reconstruct_port_hlist(team,port->index);
  
#line 960 
  port->index = -1;
  
#line 961 
  team->en_port_count -= 1;
  
#line 962 
  team_queue_override_port_del(team,port);
  
#line 963 
  team_adjust_ops(team);
  
#line 964 
  team_notify_peers(team);
  
#line 965 
  team_mcast_rejoin(team);
  return_label: 
#line 966 
                return;
}


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_compute_features(struct team *team)
{
  struct team_port *port;
  struct team_port *tmp;
  netdev_features_t tmp_0;
  struct team_port *tmp_1;
  
#line 975 
  u32 vlan_features = 0U;
  
#line 976 
  unsigned short max_hard_header_len = (unsigned short)14U;
  
#line 977 
  unsigned int dst_release_flag = 4195328U;
  {
    
#line 980 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 980 
    tmp = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 980 
  port = tmp;
  
#line 980 
  goto ldv_48654;
  ldv_48653: 
#line 981 
  ;
  
#line 981 
  tmp_0 = netdev_increment_features((unsigned long long)vlan_features,(port->dev)->vlan_features,1671291ULL);
  
#line 981 
  vlan_features = (unsigned int)tmp_0;
  
#line 985 
  dst_release_flag = (port->dev)->priv_flags & dst_release_flag;
  
#line 986 
  if ((int)(port->dev)->hard_header_len > (int)max_hard_header_len) 
#line 987 
                                                                    max_hard_header_len = (port->dev)->hard_header_len; else ;
  {
    
#line 980 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 980 
    tmp_1 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 980 
  port = tmp_1;
  ldv_48654: 
#line 982 
  ;
  
#line 980 
  if (& port->list != & team->port_list) 
#line 982 
                                         goto ldv_48653; else 
#line 985 
                                                              goto ldv_48655;
  ldv_48655: 
#line 986 
  ;
  
#line 990 
  (team->dev)->vlan_features = (unsigned long long)vlan_features;
  
#line 991 
  (team->dev)->hard_header_len = max_hard_header_len;
  
#line 993 
  (team->dev)->priv_flags &= 4294966271U;
  
#line 994 
  if (dst_release_flag == 4195328U) 
#line 995 
                                    (team->dev)->priv_flags |= 1024U; else ;
  
#line 997 
  netdev_change_features(team->dev);
  
#line 998 
  return;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_compute_features(struct team *team)
{
  
#line 1002 
  ldv_mutex_lock_92(& team->lock);
  
#line 1003 
  __team_compute_features(team);
  
#line 1004 
  ldv_mutex_unlock_93(& team->lock);
  
#line 1005 
  return;
}


#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_enter(struct team *team, struct team_port *port)
{
  int __retres;
  
#line 1009 
  int err = 0;
  
#line 1011 
  dev_hold(team->dev);
  
#line 1012 
  if (team->ops.port_enter != (int (*)(struct team *, struct team_port *))0) {
    
#line 1013 
    err = (*(team->ops.port_enter))(team,port);
    
#line 1014 
    if (err != 0) {
      
#line 1015 
      netdev_err((struct net_device const *)team->dev,"Device %s failed to enter team mode\n",(char *)(& (port->dev)->name));
      
#line 1017 
      goto err_port_enter;
    }
    else ;
  }
  else ;
  
#line 1021 
  __retres = 0;
  
#line 1021 
  goto return_label;
  err_port_enter: 
#line 1023 
  ;
  
#line 1024 
  dev_put(team->dev);
  
#line 1026 
  __retres = err;
  return_label: 
#line 1026 
                return __retres;
}


#line 1029  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_port_leave(struct team *team, struct team_port *port)
{
  
#line 1031 
  if (team->ops.port_leave != (void (*)(struct team *, struct team_port *))0) 
    
#line 1032 
    (*(team->ops.port_leave))(team,port); else ;
  
#line 1033 
  dev_put(team->dev);
  
#line 1034 
  return;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_enable_netpoll(struct team *team, struct team_port *port)
{
  int __retres;
  struct netpoll *np;
  int err;
  
#line 1042 
  if ((team->dev)->npinfo == (struct netpoll_info *)0) {
    
#line 1043 
    __retres = 0;
    
#line 1043 
    goto return_label;
  }
  else ;
  
#line 1045 
  np = (struct netpoll *)kzalloc(160UL,208U);
  
#line 1046 
  if (np == (struct netpoll *)0) {
    
#line 1047 
    __retres = -12;
    
#line 1047 
    goto return_label;
  }
  else ;
  
#line 1049 
  err = __netpoll_setup(np,port->dev);
  
#line 1050 
  if (err != 0) {
    
#line 1051 
    kfree((void const *)np);
    
#line 1052 
    __retres = err;
    
#line 1052 
    goto return_label;
  }
  else ;
  
#line 1054 
  port->np = np;
  
#line 1055 
  __retres = err;
  return_label: 
#line 1055 
                return __retres;
}


#line 1058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_port_disable_netpoll(struct team_port *port)
{
  
#line 1060 
  struct netpoll *np = port->np;
  
#line 1062 
  if (np == (struct netpoll *)0) 
#line 1063 
                                 goto return_label; else ;
  
#line 1064 
  port->np = (struct netpoll *)0;
  
#line 1067 
  synchronize_rcu_bh();
  
#line 1068 
  __netpoll_cleanup(np);
  
#line 1069 
  kfree((void const *)np);
  return_label: 
#line 1070 
                return;
}


#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_upper_dev_link(struct net_device *dev, struct net_device *port_dev)
{
  int __retres;
  int err;
  
#line 1086 
  err = netdev_master_upper_dev_link(port_dev,dev);
  
#line 1087 
  if (err != 0) {
    
#line 1088 
    __retres = err;
    
#line 1088 
    goto return_label;
  }
  else ;
  
#line 1089 
  port_dev->priv_flags |= 262144U;
  
#line 1090 
  __retres = 0;
  return_label: 
#line 1090 
                return __retres;
}


#line 1093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_upper_dev_unlink(struct net_device *dev, struct net_device *port_dev)
{
  
#line 1096 
  netdev_upper_dev_unlink(port_dev,dev);
  
#line 1097 
  port_dev->priv_flags &= 4294705151U;
  
#line 1098 
  return;
}


#line 1100 
static void __team_port_change_port_added(struct team_port *port, bool linkup);


#line 1101 
static int team_dev_type_check_change(struct net_device *dev, struct net_device *port_dev);


#line 1104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_add(struct team *team, struct net_device *port_dev)
{
  int __retres;
  struct team_port *port;
  int err;
  bool tmp_1;
  
#line 1106 
  struct net_device *dev = team->dev;
  
#line 1108 
  char *portname = (char *)(& port_dev->name);
  
#line 1111 
  if ((port_dev->flags & 8U) != 0U) {
    
#line 1112 
    netdev_err((struct net_device const *)dev,"Device %s is loopback device. Loopback devices can\'t be added as a team port\n",portname);
    
#line 1114 
    __retres = -22;
    
#line 1114 
    goto return_label;
  }
  else ;
  
#line 1117 
  if ((port_dev->priv_flags & 262144U) != 0U) {
    
#line 1118 
    netdev_err((struct net_device const *)dev,"Device %s is already a port ",portname);
    
#line 1120 
    __retres = -16;
    
#line 1120 
    goto return_label;
  }
  else ;
  
#line 1123 
  if ((port_dev->features & 1024ULL) != 0ULL) {
    bool tmp;
    
#line 1123 
    tmp = vlan_uses_dev((struct net_device const *)dev);
    
#line 1123 
    if ((int)tmp != 0) {
      
#line 1125 
      netdev_err((struct net_device const *)dev,"Device %s is VLAN challenged and team device has VLAN set up\n",portname);
      
#line 1127 
      __retres = -1;
      
#line 1127 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1130 
  err = team_dev_type_check_change(dev,port_dev);
  
#line 1131 
  if (err != 0) {
    
#line 1132 
    __retres = err;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  if ((port_dev->flags & 1U) != 0U) {
    
#line 1135 
    netdev_err((struct net_device const *)dev,"Device %s is up. Set it down before adding it as a team port\n",portname);
    
#line 1137 
    __retres = -16;
    
#line 1137 
    goto return_label;
  }
  else ;
  
#line 1140 
  port = (struct team_port *)kzalloc((team->mode)->port_priv_size + 160UL,208U);
  
#line 1142 
  if (port == (struct team_port *)0) {
    
#line 1143 
    __retres = -12;
    
#line 1143 
    goto return_label;
  }
  else ;
  
#line 1145 
  port->dev = port_dev;
  
#line 1146 
  port->team = team;
  
#line 1147 
  INIT_LIST_HEAD(& port->qom_list);
  
#line 1149 
  port->orig.mtu = port_dev->mtu;
  
#line 1150 
  err = dev_set_mtu(port_dev,(int)dev->mtu);
  
#line 1151 
  if (err != 0) {
    {
      
#line 1152 
      struct _ddebug descriptor = {.modname = "team", .function = "team_port_add", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c", .format = "Error %d calling dev_set_mtu\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1152U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1152 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1152 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)dev,"Error %d calling dev_set_mtu\n",err); else ;
    }
    
#line 1153 
    goto err_set_mtu;
  }
  else ;
  
#line 1156 
  memcpy((void *)(& port->orig.dev_addr),(void const *)port_dev->dev_addr,(unsigned long)port_dev->addr_len);
  
#line 1158 
  err = team_port_enter(team,port);
  
#line 1159 
  if (err != 0) {
    
#line 1160 
    netdev_err((struct net_device const *)dev,"Device %s failed to enter team mode\n",portname);
    
#line 1162 
    goto err_port_enter;
  }
  else ;
  
#line 1165 
  err = dev_open(port_dev);
  
#line 1166 
  if (err != 0) {
    {
      
#line 1167 
      struct _ddebug descriptor_0 = {.modname = "team", .function = "team_port_add", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c", .format = "Device %s opening failed\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1168U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1167 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1167 
                                                            __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)dev,"Device %s opening failed\n",portname); else ;
    }
    
#line 1169 
    goto err_dev_open;
  }
  else ;
  
#line 1172 
  err = vlan_vids_add_by_dev(port_dev,(struct net_device const *)dev);
  
#line 1173 
  if (err != 0) {
    
#line 1174 
    netdev_err((struct net_device const *)dev,"Failed to add vlan ids to device %s\n",portname);
    
#line 1176 
    goto err_vids_add;
  }
  else ;
  
#line 1179 
  err = team_port_enable_netpoll(team,port);
  
#line 1180 
  if (err != 0) {
    
#line 1181 
    netdev_err((struct net_device const *)dev,"Failed to enable netpoll on device %s\n",portname);
    
#line 1183 
    goto err_enable_netpoll;
  }
  else ;
  
#line 1186 
  if ((dev->features & 32768ULL) == 0ULL) 
#line 1187 
                                          dev_disable_lro(port_dev); else ;
  
#line 1189 
  err = netdev_rx_handler_register(port_dev,& team_handle_frame,(void *)port);
  
#line 1191 
  if (err != 0) {
    
#line 1192 
    netdev_err((struct net_device const *)dev,"Device %s failed to register rx_handler\n",portname);
    
#line 1194 
    goto err_handler_register;
  }
  else ;
  
#line 1197 
  err = team_upper_dev_link(dev,port_dev);
  
#line 1198 
  if (err != 0) {
    
#line 1199 
    netdev_err((struct net_device const *)dev,"Device %s failed to set upper link\n",portname);
    
#line 1201 
    goto err_set_upper_link;
  }
  else ;
  
#line 1204 
  err = __team_option_inst_add_port(team,port);
  
#line 1205 
  if (err != 0) {
    
#line 1206 
    netdev_err((struct net_device const *)dev,"Device %s failed to add per-port options\n",portname);
    
#line 1208 
    goto err_option_port_add;
  }
  else ;
  
#line 1211 
  port->index = -1;
  
#line 1212 
  list_add_tail_rcu(& port->list,& team->port_list);
  
#line 1213 
  team_port_enable(team,port);
  
#line 1214 
  __team_compute_features(team);
  
#line 1215 
  tmp_1 = netif_carrier_ok((struct net_device const *)port_dev);
  
#line 1215 
  ;
  
#line 1215 
  __team_port_change_port_added(port,(_Bool)((int)tmp_1 != 0));
  
#line 1216 
  __team_options_change_check(team);
  
#line 1218 
  netdev_info((struct net_device const *)dev,"Port device %s added\n",portname);
  
#line 1220 
  __retres = 0;
  
#line 1220 
  goto return_label;
  err_option_port_add: 
#line 1222 
  ;
  
#line 1223 
  team_upper_dev_unlink(dev,port_dev);
  err_set_upper_link: 
#line 1225 
  ;
  
#line 1226 
  netdev_rx_handler_unregister(port_dev);
  err_handler_register: 
#line 1228 
  ;
  
#line 1229 
  team_port_disable_netpoll(port);
  err_enable_netpoll: 
#line 1231 
  ;
  
#line 1232 
  vlan_vids_del_by_dev(port_dev,(struct net_device const *)dev);
  err_vids_add: 
#line 1234 
  ;
  
#line 1235 
  dev_close(port_dev);
  err_dev_open: 
#line 1237 
  ;
  
#line 1238 
  team_port_leave(team,port);
  
#line 1239 
  team_port_set_orig_dev_addr(port);
  err_port_enter: 
#line 1241 
  ;
  
#line 1242 
  dev_set_mtu(port_dev,(int)port->orig.mtu);
  err_set_mtu: 
#line 1244 
  ;
  
#line 1245 
  kfree((void const *)port);
  
#line 1247 
  __retres = err;
  return_label: 
#line 1247 
                return __retres;
}


#line 1250 
static void __team_port_change_port_removed(struct team_port *port);


#line 1283 
void __compiletime_assert_1283(void);


#line 1252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_del(struct team *team, struct net_device *port_dev)
{
  int __retres;
  struct team_port *port;
  
#line 1254 
  struct net_device *dev = team->dev;
  
#line 1256 
  char *portname = (char *)(& port_dev->name);
  
#line 1258 
  port = team_port_get_rtnl((struct net_device const *)port_dev);
  
#line 1259 
  if (port == (struct team_port *)0) 
#line 1259 
                                     goto _LOR;
  else {
    int tmp_0;
    bool tmp;
    
#line 1259 
    tmp = team_port_find((struct team const *)team,(struct team_port const *)port);
    
#line 1259 
    if (tmp) 
#line 1259 
             tmp_0 = 0; else 
#line 1259 
                             tmp_0 = 1;
    
#line 1259 
    if (tmp_0) {
      _LOR: {
              
#line 1260 
              netdev_err((struct net_device const *)dev,"Device %s does not act as a port of this team\n",portname);
              
#line 1262 
              __retres = -2;
              
#line 1262 
              goto return_label;
            }
    }
    else ;
  }
  
#line 1265 
  team_port_disable(team,port);
  
#line 1266 
  list_del_rcu(& port->list);
  
#line 1267 
  team_upper_dev_unlink(dev,port_dev);
  
#line 1268 
  netdev_rx_handler_unregister(port_dev);
  
#line 1269 
  team_port_disable_netpoll(port);
  
#line 1270 
  vlan_vids_del_by_dev(port_dev,(struct net_device const *)dev);
  
#line 1271 
  dev_uc_unsync(port_dev,dev);
  
#line 1272 
  dev_mc_unsync(port_dev,dev);
  
#line 1273 
  dev_close(port_dev);
  
#line 1274 
  team_port_leave(team,port);
  
#line 1276 
  __team_option_inst_mark_removed_port(team,port);
  
#line 1277 
  __team_options_change_check(team);
  
#line 1278 
  __team_option_inst_del_port(team,port);
  
#line 1279 
  __team_port_change_port_removed(port);
  
#line 1281 
  team_port_set_orig_dev_addr(port);
  
#line 1282 
  dev_set_mtu(port_dev,(int)port->orig.mtu);
  {
    
#line 1283 
    bool __cond = (_Bool)0;
    
#line 1283 
    if ((int)__cond != 0) 
#line 1283 
                          __compiletime_assert_1283(); else ;
  }
  
#line 1283 
  kfree_call_rcu(& port->rcu,(void (*)(struct callback_head *))144);
  
#line 1284 
  netdev_info((struct net_device const *)dev,"Port device %s removed\n",portname);
  
#line 1285 
  __team_compute_features(team);
  
#line 1287 
  __retres = 0;
  return_label: 
#line 1287 
                return __retres;
}


#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mode_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1297 
  ctx->data.str_val = (team->mode)->kind;
  
#line 1298 
  __retres = 0;
  
#line 1298 
  return __retres;
}


#line 1301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mode_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int tmp;
  
#line 1303 
  tmp = team_change_mode(team,ctx->data.str_val);
  
#line 1303 
  return tmp;
}


#line 1306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_notify_peers_count_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1309 
  ctx->data.u32_val = team->notify_peers.count;
  
#line 1310 
  __retres = 0;
  
#line 1310 
  return __retres;
}


#line 1313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_notify_peers_count_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1316 
  team->notify_peers.count = ctx->data.u32_val;
  
#line 1317 
  __retres = 0;
  
#line 1317 
  return __retres;
}


#line 1320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_notify_peers_interval_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1323 
  ctx->data.u32_val = team->notify_peers.interval;
  
#line 1324 
  __retres = 0;
  
#line 1324 
  return __retres;
}


#line 1327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_notify_peers_interval_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1330 
  team->notify_peers.interval = ctx->data.u32_val;
  
#line 1331 
  __retres = 0;
  
#line 1331 
  return __retres;
}


#line 1334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mcast_rejoin_count_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1337 
  ctx->data.u32_val = team->mcast_rejoin.count;
  
#line 1338 
  __retres = 0;
  
#line 1338 
  return __retres;
}


#line 1341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mcast_rejoin_count_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1344 
  team->mcast_rejoin.count = ctx->data.u32_val;
  
#line 1345 
  __retres = 0;
  
#line 1345 
  return __retres;
}


#line 1348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mcast_rejoin_interval_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1351 
  ctx->data.u32_val = team->mcast_rejoin.interval;
  
#line 1352 
  __retres = 0;
  
#line 1352 
  return __retres;
}


#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_mcast_rejoin_interval_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1358 
  team->mcast_rejoin.interval = ctx->data.u32_val;
  
#line 1359 
  __retres = 0;
  
#line 1359 
  return __retres;
}


#line 1362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_en_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1365 
  struct team_port *port = (ctx->info)->port;
  
#line 1367 
  ctx->data.bool_val = team_port_enabled(port);
  
#line 1368 
  __retres = 0;
  
#line 1368 
  return __retres;
}


#line 1371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_port_en_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1374 
  struct team_port *port = (ctx->info)->port;
  
#line 1376 
  if ((int)ctx->data.bool_val != 0) 
#line 1377 
                                    team_port_enable(team,port); else 
                                                                   
#line 1379 
                                                                   team_port_disable(team,port);
  
#line 1380 
  __retres = 0;
  
#line 1380 
  return __retres;
}


#line 1383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_user_linkup_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1386 
  struct team_port *port = (ctx->info)->port;
  
#line 1388 
  ctx->data.bool_val = port->user.linkup;
  
#line 1389 
  __retres = 0;
  
#line 1389 
  return __retres;
}


#line 1392 
static void __team_carrier_check(struct team *team);


#line 1394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_user_linkup_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1397 
  struct team_port *port = (ctx->info)->port;
  
#line 1399 
  port->user.linkup = ctx->data.bool_val;
  
#line 1400 
  team_refresh_port_linkup(port);
  
#line 1401 
  __team_carrier_check(port->team);
  
#line 1402 
  __retres = 0;
  
#line 1402 
  return __retres;
}


#line 1405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_user_linkup_en_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1408 
  struct team_port *port = (ctx->info)->port;
  
#line 1410 
  ctx->data.bool_val = port->user.linkup_enabled;
  
#line 1411 
  __retres = 0;
  
#line 1411 
  return __retres;
}


#line 1414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_user_linkup_en_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1417 
  struct team_port *port = (ctx->info)->port;
  
#line 1419 
  port->user.linkup_enabled = ctx->data.bool_val;
  
#line 1420 
  team_refresh_port_linkup(port);
  
#line 1421 
  __team_carrier_check(port->team);
  
#line 1422 
  __retres = 0;
  
#line 1422 
  return __retres;
}


#line 1425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_priority_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1428 
  struct team_port *port = (ctx->info)->port;
  
#line 1430 
  ctx->data.s32_val = port->priority;
  
#line 1431 
  __retres = 0;
  
#line 1431 
  return __retres;
}


#line 1434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_priority_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1437 
  struct team_port *port = (ctx->info)->port;
  
#line 1438 
  s32 priority = ctx->data.s32_val;
  
#line 1440 
  if (port->priority == priority) {
    
#line 1441 
    __retres = 0;
    
#line 1441 
    goto return_label;
  }
  else ;
  
#line 1442 
  port->priority = priority;
  
#line 1443 
  team_queue_override_port_prio_changed(team,port);
  
#line 1444 
  __retres = 0;
  return_label: 
#line 1444 
                return __retres;
}


#line 1447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_queue_id_option_get(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1450 
  struct team_port *port = (ctx->info)->port;
  
#line 1452 
  ctx->data.u32_val = (unsigned int)port->queue_id;
  
#line 1453 
  __retres = 0;
  
#line 1453 
  return __retres;
}


#line 1456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_queue_id_option_set(struct team *team, struct team_gsetter_ctx *ctx)
{
  int __retres;
  
#line 1459 
  struct team_port *port = (ctx->info)->port;
  
#line 1460 
  u16 new_queue_id = (unsigned short)ctx->data.u32_val;
  
#line 1462 
  if ((int)port->queue_id == (int)new_queue_id) {
    
#line 1463 
    __retres = 0;
    
#line 1463 
    goto return_label;
  }
  else ;
  
#line 1464 
  if ((unsigned int)new_queue_id >= (team->dev)->real_num_tx_queues) {
    
#line 1465 
    __retres = -22;
    
#line 1465 
    goto return_label;
  }
  else ;
  
#line 1466 
  team_queue_override_port_change_queue_id(team,port,(unsigned short)((int)new_queue_id));
  
#line 1467 
  __retres = 0;
  return_label: 
#line 1467 
                return __retres;
}


#line 1470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team_option const team_options[10U] = {{.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "mode", .per_port = (_Bool)0, .array_size = 0U, .type = TEAM_OPTION_TYPE_STRING, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_mode_option_get, .setter = & team_mode_option_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "notify_peers_count", .per_port = (_Bool)0, .array_size = 0U, .type = TEAM_OPTION_TYPE_U32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_notify_peers_count_get, .setter = & team_notify_peers_count_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "notify_peers_interval", .per_port = (_Bool)0, .array_size = 0U, .type = TEAM_OPTION_TYPE_U32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_notify_peers_interval_get, .setter = & team_notify_peers_interval_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "mcast_rejoin_count", .per_port = (_Bool)0, .array_size = 0U, .type = TEAM_OPTION_TYPE_U32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_mcast_rejoin_count_get, .setter = & team_mcast_rejoin_count_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "mcast_rejoin_interval", .per_port = (_Bool)0, .array_size = 0U, .type = TEAM_OPTION_TYPE_U32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_mcast_rejoin_interval_get, .setter = & team_mcast_rejoin_interval_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "enabled", .per_port = (_Bool)1, .array_size = 0U, .type = TEAM_OPTION_TYPE_BOOL, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_port_en_option_get, .setter = & team_port_en_option_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "user_linkup", .per_port = (_Bool)1, .array_size = 0U, .type = TEAM_OPTION_TYPE_BOOL, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_user_linkup_option_get, .setter = & team_user_linkup_option_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "user_linkup_enabled", .per_port = (_Bool)1, .array_size = 0U, .type = TEAM_OPTION_TYPE_BOOL, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_user_linkup_en_option_get, .setter = & team_user_linkup_en_option_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "priority", .per_port = (_Bool)1, .array_size = 0U, .type = TEAM_OPTION_TYPE_S32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_priority_option_get, .setter = & team_priority_option_set}, {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "queue_id", .per_port = (_Bool)1, .array_size = 0U, .type = TEAM_OPTION_TYPE_U32, .init = (int (*)(struct team *, struct team_option_inst_info *))0, .getter = & team_queue_id_option_get, .setter = & team_queue_id_option_set}};

#line 1538  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct lock_class_key team_netdev_xmit_lock_key;

#line 1539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct lock_class_key team_netdev_addr_lock_key;

#line 1540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct lock_class_key team_tx_busylock_key;

#line 1542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_set_lockdep_class_one(struct net_device *dev, struct netdev_queue *txq, void *unused)
{
  
#line 1546 
  lockdep_init_map(& txq->_xmit_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map,"&team_netdev_xmit_lock_key",& team_netdev_xmit_lock_key,0);
  
#line 1547 
  return;
}


#line 1549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_set_lockdep_class(struct net_device *dev)
{
  
#line 1551 
  lockdep_init_map(& dev->addr_list_lock.__anonCompField_spinlock_18.__anonCompField___anonunion_34_17.dep_map,"&team_netdev_addr_lock_key",& team_netdev_addr_lock_key,0);
  
#line 1552 
  netdev_for_each_tx_queue(dev,& team_set_lockdep_class_one,(void *)0);
  
#line 1553 
  dev->qdisc_tx_busylock = & team_tx_busylock_key;
  
#line 1554 
  return;
}


#line 1556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_init(struct net_device *dev)
{
  int __retres;
  int i;
  int err;
  struct team_pcpu_stats *tmp_4;
  
#line 1558 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1562 
  team->dev = dev;
  {
    struct lock_class_key __key;
    
#line 1563 
    __mutex_init(& team->lock,"&team->lock",& __key);
  }
  
#line 1564 
  team_set_no_mode(team);
  {
    
#line 1566 
    struct team_pcpu_stats *pcpu_stats = __alloc_percpu(48UL,8UL);
    
#line 1566 
    if (pcpu_stats != (struct team_pcpu_stats *)0) {
      int __cpu;
      unsigned int tmp_3;
      
#line 1566 
      __cpu = -1;
      
#line 1566 
      goto ldv_48848;
      ldv_48847: 
#line 1567 
      ;
      {
        struct team_pcpu_stats *stat;
        struct team_pcpu_stats *tmp_2_0;
        {
          struct team_pcpu_stats *tmp_1;
          {
            
#line 1566 
            void const *__vpp_verify = (void const *)0;
            
#line 1566 
            void const *tmp_2 = __vpp_verify;
          }
          {
            unsigned long __ptr;
            
#line 1567 
            ldv_inline_asm();
            
#line 1566 
            tmp_1 = (struct team_pcpu_stats *)(__per_cpu_offset[__cpu] + __ptr);
          }
          
#line 1566 
          tmp_2_0 = tmp_1;
        }
        
#line 1566 
        stat = tmp_2_0;
        
#line 1566 
        u64_stats_init(& stat->syncp);
      }
      ldv_48848: 
#line 1568 
      ;
      
#line 1566 
      tmp_3 = cpumask_next(__cpu,cpu_possible_mask);
      
#line 1566 
      __cpu = (int)tmp_3;
      
#line 1566 
      if (__cpu < nr_cpu_ids) 
#line 1568 
                              goto ldv_48847; else 
#line 1571 
                                                   goto ldv_48849;
      ldv_48849: 
#line 1572 
      ;
    }
    else ;
    
#line 1566 
    tmp_4 = pcpu_stats;
  }
  
#line 1566 
  team->pcpu_stats = tmp_4;
  
#line 1567 
  if (team->pcpu_stats == (struct team_pcpu_stats *)0) {
    
#line 1568 
    __retres = -12;
    
#line 1568 
    goto return_label;
  }
  else ;
  
#line 1570 
  i = 0;
  
#line 1570 
  goto ldv_48852;
  ldv_48851: 
#line 1571 
  ;
  
#line 1571 
  team->en_port_hlist[i].first = (struct hlist_node *)0;
  
#line 1570 
  i += 1;
  ldv_48852: 
#line 1571 
  ;
  
#line 1570 
  if (i <= 15) 
#line 1572 
               goto ldv_48851; else 
#line 1575 
                                    goto ldv_48853;
  ldv_48853: 
#line 1576 
  ;
  
#line 1572 
  INIT_LIST_HEAD(& team->port_list);
  
#line 1573 
  err = team_queue_override_init(team);
  
#line 1574 
  if (err != 0) 
#line 1575 
                goto err_team_queue_override_init; else ;
  
#line 1577 
  team_adjust_ops(team);
  
#line 1579 
  INIT_LIST_HEAD(& team->option_list);
  
#line 1580 
  INIT_LIST_HEAD(& team->option_inst_list);
  
#line 1582 
  team_notify_peers_init(team);
  
#line 1583 
  team_mcast_rejoin_init(team);
  
#line 1585 
  err = team_options_register(team,(struct team_option const *)(& team_options),10UL);
  
#line 1586 
  if (err != 0) 
#line 1587 
                goto err_options_register; else ;
  
#line 1588 
  netif_carrier_off(dev);
  
#line 1590 
  team_set_lockdep_class(dev);
  
#line 1592 
  __retres = 0;
  
#line 1592 
  goto return_label;
  err_options_register: 
#line 1594 
  ;
  
#line 1595 
  team_mcast_rejoin_fini(team);
  
#line 1596 
  team_notify_peers_fini(team);
  
#line 1597 
  team_queue_override_fini(team);
  err_team_queue_override_init: 
#line 1598 
  ;
  
#line 1599 
  free_percpu((void *)team->pcpu_stats);
  
#line 1601 
  __retres = err;
  return_label: 
#line 1601 
                return __retres;
}


#line 1604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_uninit(struct net_device *dev)
{
  struct team_port *port;
  struct team_port *tmp_0;
  struct team_port *tmp_1;
  struct team_port *tmp_2;
  struct team_port *tmp_3;
  
#line 1606 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1610 
  ldv_mutex_lock_94(& team->lock);
  {
    
#line 1611 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1611 
    tmp_1 = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1611 
  port = tmp_1;
  {
    
#line 1611 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1611 
    tmp_2 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1612 
  tmp_0 = tmp_2;
  
#line 1611 
  goto ldv_48872;
  ldv_48871: 
#line 1612 
  ;
  
#line 1612 
  team_port_del(team,port->dev);
  
#line 1611 
  port = tmp_0;
  {
    
#line 1611 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_0->list.next;
    
#line 1611 
    tmp_3 = (struct team_port *)__mptr_1 + 18446744073709551592U;
  }
  
#line 1611 
  tmp_0 = tmp_3;
  ldv_48872: 
#line 1613 
  ;
  
#line 1611 
  if (& port->list != & team->port_list) 
#line 1613 
                                         goto ldv_48871; else 
#line 1616 
                                                              goto ldv_48873;
  ldv_48873: 
#line 1617 
  ;
  
#line 1614 
  __team_change_mode(team,(struct team_mode const *)0);
  
#line 1615 
  __team_options_unregister(team,(struct team_option const *)(& team_options),10UL);
  
#line 1616 
  team_mcast_rejoin_fini(team);
  
#line 1617 
  team_notify_peers_fini(team);
  
#line 1618 
  team_queue_override_fini(team);
  
#line 1619 
  ldv_mutex_unlock_95(& team->lock);
  
#line 1620 
  return;
}


#line 1622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_destructor(struct net_device *dev)
{
  
#line 1624 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1626 
  free_percpu((void *)team->pcpu_stats);
  
#line 1627 
  ldv_free_netdev_96(dev);
  
#line 1628 
  return;
}


#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_open(struct net_device *dev)
{
  int __retres;
  
#line 1632 
  __retres = 0;
  
#line 1632 
  return __retres;
}


#line 1635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_close(struct net_device *dev)
{
  int __retres;
  
#line 1637 
  __retres = 0;
  
#line 1637 
  return __retres;
}


#line 1643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static netdev_tx_t team_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  bool tx_success;
  
#line 1645 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1647 
  unsigned int len = skb->len;
  
#line 1649 
  tx_success = team_queue_override_transmit(team,skb);
  
#line 1650 
  if (! tx_success) 
#line 1651 
                    tx_success = (*(team->ops.transmit))(team,skb); else ;
  
#line 1652 
  if ((int)tx_success != 0) {
    struct team_pcpu_stats *pcpu_stats;
    struct team_pcpu_stats *tmp_1;
    {
      struct team_pcpu_stats *tmp_0;
      {
        
#line 1655 
        void const *__vpp_verify = (void const *)0;
        
#line 1655 
        void const *tmp_2 = __vpp_verify;
      }
      {
        unsigned long tcp_ptr__;
        
#line 1656 
        ldv_inline_asm();
        
#line 1655 
        tmp_0 = (struct team_pcpu_stats *)tcp_ptr__;
      }
      
#line 1655 
      tmp_1 = tmp_0;
    }
    
#line 1655 
    pcpu_stats = tmp_1;
    
#line 1656 
    u64_stats_init(& pcpu_stats->syncp);
    
#line 1657 
    pcpu_stats->tx_packets += 1ULL;
    
#line 1658 
    pcpu_stats->tx_bytes += (unsigned long long)len;
    
#line 1659 
    u64_stats_init(& pcpu_stats->syncp);
  }
  else {
    {
      
#line 1661 
      void const *__vpp_verify_0 = (void const *)0;
      
#line 1661 
      void const *tmp_4 = __vpp_verify_0;
    }
    
#line 1661 
    switch (4UL) {
      case (unsigned long)1: 
#line 1661 
      ;
      {
        
#line 1661 
        int const pao_ID__ = 1;
        
#line 1661 
        switch (4UL) {
          case (unsigned long)1: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48905;
          case (unsigned long)2: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48905;
          case (unsigned long)4: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48905;
          case (unsigned long)8: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48905;
          default: 
#line 1661 
          ;
          
#line 1661 
          __bad_percpu_size();
        }
        ldv_48905: 
#line 1661 
        ;
      }
      
#line 1661 
      goto ldv_48910;
      case (unsigned long)2: 
#line 1661 
      ;
      {
        
#line 1661 
        int const pao_ID___0 = 1;
        
#line 1661 
        switch (4UL) {
          case (unsigned long)1: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48916;
          case (unsigned long)2: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48916;
          case (unsigned long)4: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48916;
          case (unsigned long)8: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48916;
          default: 
#line 1661 
          ;
          
#line 1661 
          __bad_percpu_size();
        }
        ldv_48916: 
#line 1661 
        ;
      }
      
#line 1661 
      goto ldv_48910;
      case (unsigned long)4: 
#line 1661 
      ;
      {
        
#line 1661 
        int const pao_ID___1 = 1;
        
#line 1661 
        switch (4UL) {
          case (unsigned long)1: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48926;
          case (unsigned long)2: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48926;
          case (unsigned long)4: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48926;
          case (unsigned long)8: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48926;
          default: 
#line 1661 
          ;
          
#line 1661 
          __bad_percpu_size();
        }
        ldv_48926: 
#line 1661 
        ;
      }
      
#line 1661 
      goto ldv_48910;
      case (unsigned long)8: 
#line 1661 
      ;
      {
        
#line 1661 
        int const pao_ID___2 = 1;
        
#line 1661 
        switch (4UL) {
          case (unsigned long)1: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48936;
          case (unsigned long)2: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48936;
          case (unsigned long)4: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48936;
          case (unsigned long)8: 
#line 1661 
          ;
          
#line 1663 
          ldv_inline_asm();
          
#line 1661 
          goto ldv_48936;
          default: 
#line 1661 
          ;
          
#line 1661 
          __bad_percpu_size();
        }
        ldv_48936: 
#line 1661 
        ;
      }
      
#line 1661 
      goto ldv_48910;
      default: 
#line 1661 
      ;
      
#line 1661 
      __bad_size_call_parameter();
      
#line 1661 
      goto ldv_48910;
    }
    ldv_48910: 
#line 1661 
    ;
  }
  
#line 1664 
  __retres = NETDEV_TX_OK;
  
#line 1664 
  return __retres;
}


#line 1667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static u16 team_select_queue(struct net_device *dev, struct sk_buff *skb, void *accel_priv, u16 (*fallback)(struct net_device *, struct sk_buff *))
{
  unsigned int tmp_1;
  bool tmp;
  struct qdisc_skb_cb *tmp_2;
  
#line 1676 
  tmp = skb_rx_queue_recorded((struct sk_buff const *)skb);
  
#line 1676 
  if ((int)tmp != 0) {
    u16 tmp_0;
    
#line 1676 
    tmp_0 = skb_get_rx_queue((struct sk_buff const *)skb);
    
#line 1676 
    tmp_1 = (unsigned int)tmp_0;
  }
  else 
#line 1676 
       tmp_1 = 0U;
  
#line 1676 
  u16 txq = (unsigned short)tmp_1;
  
#line 1681 
  tmp_2 = qdisc_skb_cb((struct sk_buff const *)skb);
  
#line 1681 
  tmp_2->slave_dev_queue_mapping = skb->queue_mapping;
  
#line 1683 
  if ((long)((unsigned int)txq >= dev->real_num_tx_queues) != 0L) {
    ldv_48949: 
#line 1685 
    ;
    
#line 1685 
    txq = (unsigned short)((int)txq - (int)((unsigned short)dev->real_num_tx_queues));
    
#line 1686 
    if ((unsigned int)txq >= dev->real_num_tx_queues) 
#line 1688 
                                                      goto ldv_48949; else 
                                                                    
#line 1691 
                                                                    goto ldv_48950;
    ldv_48950: 
#line 1692 
    ;
  }
  else ;
  
#line 1688 
  return txq;
}


#line 1691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_change_rx_flags(struct net_device *dev, int change)
{
  struct team_port *port;
  int inc;
  struct team_port *tmp_6;
  struct team_port *tmp_13;
  
#line 1693 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1697 
  rcu_read_lock();
  {
    struct team_port *tmp_5;
    
#line 1698 
    struct list_head *__ptr = team->port_list.next;
    {
      struct list_head *tmp_4;
      {
        struct list_head *tmp_1;
        {
          struct list_head *tmp_0;
          {
            union __anonunion___u_371 __u;
            
#line 1698 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 1698 
            tmp_0 = __u.__val;
          }
          
#line 1698 
          struct list_head *_________p1 = tmp_0;
          
#line 1698 
          tmp_1 = _________p1;
        }
        
#line 1698 
        struct list_head *________p1 = tmp_1;
        {
          bool __warned;
          int tmp_3;
          int tmp_2;
          
#line 1698 
          tmp_2 = debug_lockdep_rcu_enabled();
          
#line 1698 
          if (tmp_2 != 0) 
            
#line 1698 
            if (! __warned) 
#line 1698 
                            tmp_3 = 1; else 
#line 1698 
                                            tmp_3 = 0;
          else 
#line 1698 
               tmp_3 = 0;
        }
        
#line 1698 
        tmp_4 = ________p1;
      }
      
#line 1698 
      struct list_head const *__mptr = (struct list_head const *)tmp_4;
      
#line 1698 
      tmp_5 = (struct team_port *)__mptr + 18446744073709551592U;
    }
    
#line 1698 
    tmp_6 = tmp_5;
  }
  
#line 1698 
  port = tmp_6;
  
#line 1698 
  goto ldv_48987;
  ldv_48986: 
#line 1699 
  ;
  
#line 1699 
  if ((change & 256) != 0) {
    
#line 1700 
    if ((dev->flags & 256U) != 0U) 
#line 1700 
                                   inc = 1; else 
#line 1700 
                                                 inc = -1;
    
#line 1701 
    dev_set_promiscuity(port->dev,inc);
  }
  else ;
  
#line 1703 
  if ((change & 512) != 0) {
    
#line 1704 
    if ((dev->flags & 512U) != 0U) 
#line 1704 
                                   inc = 1; else 
#line 1704 
                                                 inc = -1;
    
#line 1705 
    dev_set_allmulti(port->dev,inc);
  }
  else ;
  {
    struct team_port *tmp_12;
    
#line 1698 
    struct list_head *__ptr_0 = port->list.next;
    {
      struct list_head *tmp_11;
      {
        struct list_head *tmp_8;
        {
          struct list_head *tmp_7;
          {
            union __anonunion___u_373 __u_0;
            
#line 1698 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 1698 
            tmp_7 = __u_0.__val;
          }
          
#line 1698 
          struct list_head *_________p1_0 = tmp_7;
          
#line 1698 
          tmp_8 = _________p1_0;
        }
        
#line 1698 
        struct list_head *________p1_0 = tmp_8;
        {
          bool __warned_0;
          int tmp_10;
          int tmp_9;
          
#line 1698 
          tmp_9 = debug_lockdep_rcu_enabled();
          
#line 1698 
          if (tmp_9 != 0) 
            
#line 1698 
            if (! __warned_0) 
#line 1698 
                              tmp_10 = 1; else 
#line 1698 
                                               tmp_10 = 0;
          else 
#line 1698 
               tmp_10 = 0;
        }
        
#line 1698 
        tmp_11 = ________p1_0;
      }
      
#line 1698 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_11;
      
#line 1698 
      tmp_12 = (struct team_port *)__mptr_0 + 18446744073709551592U;
    }
    
#line 1698 
    tmp_13 = tmp_12;
  }
  
#line 1698 
  port = tmp_13;
  ldv_48987: 
#line 1701 
  ;
  
#line 1698 
  if (& port->list != & team->port_list) 
#line 1700 
                                         goto ldv_48986; else 
#line 1703 
                                                              goto ldv_48988;
  ldv_48988: 
#line 1704 
  ;
  
#line 1708 
  rcu_read_unlock();
  
#line 1709 
  return;
}


#line 1711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_set_rx_mode(struct net_device *dev)
{
  struct team_port *port;
  struct team_port *tmp_6;
  struct team_port *tmp_13;
  
#line 1713 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1716 
  rcu_read_lock();
  {
    struct team_port *tmp_5;
    
#line 1717 
    struct list_head *__ptr = team->port_list.next;
    {
      struct list_head *tmp_4;
      {
        struct list_head *tmp_1;
        {
          struct list_head *tmp_0;
          {
            union __anonunion___u_375 __u;
            
#line 1717 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 1717 
            tmp_0 = __u.__val;
          }
          
#line 1717 
          struct list_head *_________p1 = tmp_0;
          
#line 1717 
          tmp_1 = _________p1;
        }
        
#line 1717 
        struct list_head *________p1 = tmp_1;
        {
          bool __warned;
          int tmp_3;
          int tmp_2;
          
#line 1717 
          tmp_2 = debug_lockdep_rcu_enabled();
          
#line 1717 
          if (tmp_2 != 0) 
            
#line 1717 
            if (! __warned) 
#line 1717 
                            tmp_3 = 1; else 
#line 1717 
                                            tmp_3 = 0;
          else 
#line 1717 
               tmp_3 = 0;
        }
        
#line 1717 
        tmp_4 = ________p1;
      }
      
#line 1717 
      struct list_head const *__mptr = (struct list_head const *)tmp_4;
      
#line 1717 
      tmp_5 = (struct team_port *)__mptr + 18446744073709551592U;
    }
    
#line 1717 
    tmp_6 = tmp_5;
  }
  
#line 1717 
  port = tmp_6;
  
#line 1717 
  goto ldv_49023;
  ldv_49022: 
#line 1718 
  ;
  
#line 1718 
  dev_uc_sync_multiple(port->dev,dev);
  
#line 1719 
  dev_mc_sync_multiple(port->dev,dev);
  {
    struct team_port *tmp_12;
    
#line 1717 
    struct list_head *__ptr_0 = port->list.next;
    {
      struct list_head *tmp_11;
      {
        struct list_head *tmp_8;
        {
          struct list_head *tmp_7;
          {
            union __anonunion___u_377 __u_0;
            
#line 1717 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 1717 
            tmp_7 = __u_0.__val;
          }
          
#line 1717 
          struct list_head *_________p1_0 = tmp_7;
          
#line 1717 
          tmp_8 = _________p1_0;
        }
        
#line 1717 
        struct list_head *________p1_0 = tmp_8;
        {
          bool __warned_0;
          int tmp_10;
          int tmp_9;
          
#line 1717 
          tmp_9 = debug_lockdep_rcu_enabled();
          
#line 1717 
          if (tmp_9 != 0) 
            
#line 1717 
            if (! __warned_0) 
#line 1717 
                              tmp_10 = 1; else 
#line 1717 
                                               tmp_10 = 0;
          else 
#line 1717 
               tmp_10 = 0;
        }
        
#line 1717 
        tmp_11 = ________p1_0;
      }
      
#line 1717 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_11;
      
#line 1717 
      tmp_12 = (struct team_port *)__mptr_0 + 18446744073709551592U;
    }
    
#line 1717 
    tmp_13 = tmp_12;
  }
  
#line 1717 
  port = tmp_13;
  ldv_49023: 
#line 1720 
  ;
  
#line 1717 
  if (& port->list != & team->port_list) 
#line 1719 
                                         goto ldv_49022; else 
#line 1722 
                                                              goto ldv_49024;
  ldv_49024: 
#line 1723 
  ;
  
#line 1721 
  rcu_read_unlock();
  
#line 1722 
  return;
}


#line 1724  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  struct team_port *port;
  struct team_port *tmp_2;
  struct team_port *tmp_3;
  
#line 1726 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 1727 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1730 
  if ((unsigned int)dev->type == 1U) {
    int tmp_1;
    bool tmp_0;
    
#line 1730 
    tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
    
#line 1730 
    if (tmp_0) 
#line 1730 
               tmp_1 = 0; else 
#line 1730 
                               tmp_1 = 1;
    
#line 1730 
    if (tmp_1) {
      
#line 1731 
      __retres = -99;
      
#line 1731 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1732 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 1733 
  ldv_mutex_lock_97(& team->lock);
  {
    
#line 1734 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1734 
    tmp_2 = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1734 
  port = tmp_2;
  
#line 1734 
  goto ldv_49037;
  ldv_49036: 
#line 1735 
  ;
  
#line 1735 
  if (team->ops.port_change_dev_addr != (void (*)(struct team *, struct team_port *))0) 
    
#line 1736 
    (*(team->ops.port_change_dev_addr))(team,port); else ;
  {
    
#line 1734 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1734 
    tmp_3 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1734 
  port = tmp_3;
  ldv_49037: 
#line 1736 
  ;
  
#line 1734 
  if (& port->list != & team->port_list) 
#line 1736 
                                         goto ldv_49036; else 
#line 1739 
                                                              goto ldv_49038;
  ldv_49038: 
#line 1740 
  ;
  
#line 1737 
  ldv_mutex_unlock_98(& team->lock);
  
#line 1738 
  __retres = 0;
  return_label: 
#line 1738 
                return __retres;
}


#line 1741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  struct team_port *port;
  int err;
  struct team_port *tmp_0;
  struct team_port *tmp_1;
  struct team_port *tmp_2;
  struct team_port *tmp_3;
  
#line 1743 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1751 
  ldv_mutex_lock_99(& team->lock);
  
#line 1752 
  team->port_mtu_change_allowed = (_Bool)1;
  {
    
#line 1753 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1753 
    tmp_0 = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1753 
  port = tmp_0;
  
#line 1753 
  goto ldv_49052;
  ldv_49051: 
#line 1754 
  ;
  
#line 1754 
  err = dev_set_mtu(port->dev,new_mtu);
  
#line 1755 
  if (err != 0) {
    
#line 1756 
    netdev_err((struct net_device const *)dev,"Device %s failed to change mtu",(char *)(& (port->dev)->name));
    
#line 1758 
    goto unwind;
  }
  else ;
  {
    
#line 1753 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1753 
    tmp_1 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1753 
  port = tmp_1;
  ldv_49052: 
#line 1755 
  ;
  
#line 1753 
  if (& port->list != & team->port_list) 
#line 1755 
                                         goto ldv_49051; else 
#line 1758 
                                                              goto ldv_49053;
  ldv_49053: 
#line 1759 
  ;
  
#line 1761 
  team->port_mtu_change_allowed = (_Bool)0;
  
#line 1762 
  ldv_mutex_unlock_100(& team->lock);
  
#line 1764 
  dev->mtu = (unsigned int)new_mtu;
  
#line 1766 
  __retres = 0;
  
#line 1766 
  goto return_label;
  unwind: 
#line 1768 
  ;
  {
    
#line 1769 
    struct list_head const *__mptr_1 = (struct list_head const *)port->list.prev;
    
#line 1769 
    tmp_2 = (struct team_port *)__mptr_1 + 18446744073709551592U;
  }
  
#line 1769 
  port = tmp_2;
  
#line 1769 
  goto ldv_49059;
  ldv_49058: 
#line 1770 
  ;
  
#line 1770 
  dev_set_mtu(port->dev,(int)dev->mtu);
  {
    
#line 1769 
    struct list_head const *__mptr_2 = (struct list_head const *)port->list.prev;
    
#line 1769 
    tmp_3 = (struct team_port *)__mptr_2 + 18446744073709551592U;
  }
  
#line 1769 
  port = tmp_3;
  ldv_49059: 
#line 1771 
  ;
  
#line 1769 
  if (& port->list != & team->port_list) 
#line 1771 
                                         goto ldv_49058; else 
#line 1774 
                                                              goto ldv_49060;
  ldv_49060: 
#line 1775 
  ;
  
#line 1771 
  team->port_mtu_change_allowed = (_Bool)0;
  
#line 1772 
  ldv_mutex_unlock_101(& team->lock);
  
#line 1774 
  __retres = err;
  return_label: 
#line 1774 
                return __retres;
}


#line 1778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct rtnl_link_stats64 *team_get_stats64(struct net_device *dev, struct rtnl_link_stats64 *stats)
{
  struct team_pcpu_stats *p;
  u64 rx_packets;
  u64 rx_bytes;
  u64 rx_multicast;
  u64 tx_packets;
  u64 tx_bytes;
  unsigned int start;
  int i;
  struct team_pcpu_stats *tmp_1;
  bool tmp_2_0;
  unsigned int tmp_3;
  
#line 1780 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1783 
  u32 rx_dropped = 0U;
  
#line 1783 
  u32 tx_dropped = 0U;
  
#line 1787 
  i = -1;
  
#line 1787 
  goto ldv_49083;
  ldv_49082: 
#line 1788 
  ;
  {
    struct team_pcpu_stats *tmp_0;
    {
      
#line 1788 
      void const *__vpp_verify = (void const *)0;
      
#line 1788 
      void const *tmp_2 = __vpp_verify;
    }
    {
      unsigned long __ptr;
      
#line 1789 
      ldv_inline_asm();
      
#line 1788 
      tmp_0 = (struct team_pcpu_stats *)(__per_cpu_offset[i] + __ptr);
    }
    
#line 1788 
    tmp_1 = tmp_0;
  }
  
#line 1788 
  p = tmp_1;
  ldv_49080: 
#line 1791 
  ;
  
#line 1790 
  start = u64_stats_fetch_begin_irq((struct u64_stats_sync const *)(& p->syncp));
  
#line 1791 
  rx_packets = p->rx_packets;
  
#line 1792 
  rx_bytes = p->rx_bytes;
  
#line 1793 
  rx_multicast = p->rx_multicast;
  
#line 1794 
  tx_packets = p->tx_packets;
  
#line 1795 
  tx_bytes = p->tx_bytes;
  
#line 1796 
  tmp_2_0 = u64_stats_fetch_retry_irq((struct u64_stats_sync const *)(& p->syncp),start);
  
#line 1796 
  if ((int)tmp_2_0 != 0) 
#line 1798 
                         goto ldv_49080; else 
#line 1801 
                                              goto ldv_49081;
  ldv_49081: 
#line 1802 
  ;
  
#line 1798 
  stats->rx_packets += rx_packets;
  
#line 1799 
  stats->rx_bytes += rx_bytes;
  
#line 1800 
  stats->multicast += rx_multicast;
  
#line 1801 
  stats->tx_packets += tx_packets;
  
#line 1802 
  stats->tx_bytes += tx_bytes;
  
#line 1807 
  rx_dropped = p->rx_dropped + rx_dropped;
  
#line 1808 
  tx_dropped = p->tx_dropped + tx_dropped;
  ldv_49083: 
#line 1809 
  ;
  
#line 1787 
  tmp_3 = cpumask_next(i,cpu_possible_mask);
  
#line 1787 
  i = (int)tmp_3;
  
#line 1787 
  if (i < nr_cpu_ids) 
#line 1789 
                      goto ldv_49082; else 
#line 1792 
                                           goto ldv_49084;
  ldv_49084: 
#line 1793 
  ;
  
#line 1810 
  stats->rx_dropped = (unsigned long long)rx_dropped;
  
#line 1811 
  stats->tx_dropped = (unsigned long long)tx_dropped;
  
#line 1812 
  return stats;
}


#line 1815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_vlan_rx_add_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  struct team_port *port;
  int err;
  struct team_port *tmp_0;
  struct team_port *tmp_1;
  struct team_port *tmp_2;
  struct team_port *tmp_3;
  
#line 1817 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1825 
  ldv_mutex_lock_102(& team->lock);
  {
    
#line 1826 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1826 
    tmp_0 = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1826 
  port = tmp_0;
  
#line 1826 
  goto ldv_49099;
  ldv_49098: 
#line 1827 
  ;
  
#line 1827 
  err = vlan_vid_add(port->dev,(unsigned short)((int)proto),(unsigned short)((int)vid));
  
#line 1828 
  if (err != 0) 
#line 1829 
                goto unwind; else ;
  {
    
#line 1826 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1826 
    tmp_1 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1826 
  port = tmp_1;
  ldv_49099: 
#line 1828 
  ;
  
#line 1826 
  if (& port->list != & team->port_list) 
#line 1828 
                                         goto ldv_49098; else 
#line 1831 
                                                              goto ldv_49100;
  ldv_49100: 
#line 1832 
  ;
  
#line 1831 
  ldv_mutex_unlock_103(& team->lock);
  
#line 1833 
  __retres = 0;
  
#line 1833 
  goto return_label;
  unwind: 
#line 1835 
  ;
  {
    
#line 1836 
    struct list_head const *__mptr_1 = (struct list_head const *)port->list.prev;
    
#line 1836 
    tmp_2 = (struct team_port *)__mptr_1 + 18446744073709551592U;
  }
  
#line 1836 
  port = tmp_2;
  
#line 1836 
  goto ldv_49106;
  ldv_49105: 
#line 1837 
  ;
  
#line 1837 
  vlan_vid_del(port->dev,(unsigned short)((int)proto),(unsigned short)((int)vid));
  {
    
#line 1836 
    struct list_head const *__mptr_2 = (struct list_head const *)port->list.prev;
    
#line 1836 
    tmp_3 = (struct team_port *)__mptr_2 + 18446744073709551592U;
  }
  
#line 1836 
  port = tmp_3;
  ldv_49106: 
#line 1838 
  ;
  
#line 1836 
  if (& port->list != & team->port_list) 
#line 1838 
                                         goto ldv_49105; else 
#line 1841 
                                                              goto ldv_49107;
  ldv_49107: 
#line 1842 
  ;
  
#line 1838 
  ldv_mutex_unlock_104(& team->lock);
  
#line 1840 
  __retres = err;
  return_label: 
#line 1840 
                return __retres;
}


#line 1843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_vlan_rx_kill_vid(struct net_device *dev, __be16 proto, u16 vid)
{
  int __retres;
  struct team_port *port;
  struct team_port *tmp_6;
  struct team_port *tmp_13;
  
#line 1845 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1848 
  rcu_read_lock();
  {
    struct team_port *tmp_5;
    
#line 1849 
    struct list_head *__ptr = team->port_list.next;
    {
      struct list_head *tmp_4;
      {
        struct list_head *tmp_1;
        {
          struct list_head *tmp_0;
          {
            union __anonunion___u_379 __u;
            
#line 1849 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 1849 
            tmp_0 = __u.__val;
          }
          
#line 1849 
          struct list_head *_________p1 = tmp_0;
          
#line 1849 
          tmp_1 = _________p1;
        }
        
#line 1849 
        struct list_head *________p1 = tmp_1;
        {
          bool __warned;
          int tmp_3;
          int tmp_2;
          
#line 1849 
          tmp_2 = debug_lockdep_rcu_enabled();
          
#line 1849 
          if (tmp_2 != 0) 
            
#line 1849 
            if (! __warned) 
#line 1849 
                            tmp_3 = 1; else 
#line 1849 
                                            tmp_3 = 0;
          else 
#line 1849 
               tmp_3 = 0;
        }
        
#line 1849 
        tmp_4 = ________p1;
      }
      
#line 1849 
      struct list_head const *__mptr = (struct list_head const *)tmp_4;
      
#line 1849 
      tmp_5 = (struct team_port *)__mptr + 18446744073709551592U;
    }
    
#line 1849 
    tmp_6 = tmp_5;
  }
  
#line 1849 
  port = tmp_6;
  
#line 1849 
  goto ldv_49144;
  ldv_49143: 
#line 1850 
  ;
  
#line 1850 
  vlan_vid_del(port->dev,(unsigned short)((int)proto),(unsigned short)((int)vid));
  {
    struct team_port *tmp_12;
    
#line 1849 
    struct list_head *__ptr_0 = port->list.next;
    {
      struct list_head *tmp_11;
      {
        struct list_head *tmp_8;
        {
          struct list_head *tmp_7;
          {
            union __anonunion___u_381 __u_0;
            
#line 1849 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 1849 
            tmp_7 = __u_0.__val;
          }
          
#line 1849 
          struct list_head *_________p1_0 = tmp_7;
          
#line 1849 
          tmp_8 = _________p1_0;
        }
        
#line 1849 
        struct list_head *________p1_0 = tmp_8;
        {
          bool __warned_0;
          int tmp_10;
          int tmp_9;
          
#line 1849 
          tmp_9 = debug_lockdep_rcu_enabled();
          
#line 1849 
          if (tmp_9 != 0) 
            
#line 1849 
            if (! __warned_0) 
#line 1849 
                              tmp_10 = 1; else 
#line 1849 
                                               tmp_10 = 0;
          else 
#line 1849 
               tmp_10 = 0;
        }
        
#line 1849 
        tmp_11 = ________p1_0;
      }
      
#line 1849 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_11;
      
#line 1849 
      tmp_12 = (struct team_port *)__mptr_0 + 18446744073709551592U;
    }
    
#line 1849 
    tmp_13 = tmp_12;
  }
  
#line 1849 
  port = tmp_13;
  ldv_49144: 
#line 1852 
  ;
  
#line 1849 
  if (& port->list != & team->port_list) 
#line 1851 
                                         goto ldv_49143; else 
#line 1854 
                                                              goto ldv_49145;
  ldv_49145: 
#line 1855 
  ;
  
#line 1851 
  rcu_read_unlock();
  
#line 1853 
  __retres = 0;
  
#line 1853 
  return __retres;
}


#line 1857  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_poll_controller(struct net_device *dev)
{
  
#line 1859 
  return;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_netpoll_cleanup(struct team *team)
{
  struct team_port *port;
  struct team_port *tmp;
  struct team_port *tmp_0;
  {
    
#line 1865 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1865 
    tmp = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1865 
  port = tmp;
  
#line 1865 
  goto ldv_49158;
  ldv_49157: 
#line 1866 
  ;
  
#line 1866 
  team_port_disable_netpoll(port);
  {
    
#line 1865 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1865 
    tmp_0 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1865 
  port = tmp_0;
  ldv_49158: 
#line 1867 
  ;
  
#line 1865 
  if (& port->list != & team->port_list) 
#line 1867 
                                         goto ldv_49157; else 
#line 1870 
                                                              goto ldv_49159;
  ldv_49159: 
#line 1871 
  ;
  
#line 1872 
  return;
}


#line 1869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_netpoll_cleanup(struct net_device *dev)
{
  
#line 1871 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1873 
  ldv_mutex_lock_105(& team->lock);
  
#line 1874 
  __team_netpoll_cleanup(team);
  
#line 1875 
  ldv_mutex_unlock_106(& team->lock);
  
#line 1876 
  return;
}


#line 1878  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_netpoll_setup(struct net_device *dev, struct netpoll_info *npifo)
{
  struct team_port *port;
  struct team_port *tmp_0;
  struct team_port *tmp_1;
  
#line 1881 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1883 
  int err = 0;
  
#line 1885 
  ldv_mutex_lock_107(& team->lock);
  {
    
#line 1886 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 1886 
    tmp_0 = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 1886 
  port = tmp_0;
  
#line 1886 
  goto ldv_49177;
  ldv_49176: 
#line 1887 
  ;
  
#line 1887 
  err = team_port_enable_netpoll(team,port);
  
#line 1888 
  if (err != 0) {
    
#line 1889 
    __team_netpoll_cleanup(team);
    
#line 1890 
    goto ldv_49175;
  }
  else ;
  {
    
#line 1886 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 1886 
    tmp_1 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 1886 
  port = tmp_1;
  ldv_49177: 
#line 1888 
  ;
  
#line 1886 
  if (& port->list != & team->port_list) 
#line 1888 
                                         goto ldv_49176; else 
#line 1891 
                                                              goto ldv_49175;
  ldv_49175: 
#line 1892 
  ;
  
#line 1893 
  ldv_mutex_unlock_108(& team->lock);
  
#line 1894 
  return err;
}


#line 1898  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_add_slave(struct net_device *dev, struct net_device *port_dev)
{
  int err;
  
#line 1900 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1903 
  ldv_mutex_lock_109(& team->lock);
  
#line 1904 
  err = team_port_add(team,port_dev);
  
#line 1905 
  ldv_mutex_unlock_110(& team->lock);
  
#line 1906 
  return err;
}


#line 1909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_del_slave(struct net_device *dev, struct net_device *port_dev)
{
  int err;
  
#line 1911 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1914 
  ldv_mutex_lock_111(& team->lock);
  
#line 1915 
  err = team_port_del(team,port_dev);
  
#line 1916 
  ldv_mutex_unlock_112(& team->lock);
  
#line 1917 
  return err;
}


#line 1920  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static netdev_features_t team_fix_features(struct net_device *dev, netdev_features_t features)
{
  struct team_port *port;
  netdev_features_t mask;
  struct team_port *tmp_6;
  struct team_port *tmp_13;
  
#line 1924 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1927 
  mask = features;
  
#line 1928 
  features &= 18446744073707518878ULL;
  
#line 1929 
  features |= 34361835520ULL;
  
#line 1931 
  rcu_read_lock();
  {
    struct team_port *tmp_5;
    
#line 1932 
    struct list_head *__ptr = team->port_list.next;
    {
      struct list_head *tmp_4;
      {
        struct list_head *tmp_1;
        {
          struct list_head *tmp_0;
          {
            union __anonunion___u_383 __u;
            
#line 1932 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 1932 
            tmp_0 = __u.__val;
          }
          
#line 1932 
          struct list_head *_________p1 = tmp_0;
          
#line 1932 
          tmp_1 = _________p1;
        }
        
#line 1932 
        struct list_head *________p1 = tmp_1;
        {
          bool __warned;
          int tmp_3;
          int tmp_2;
          
#line 1932 
          tmp_2 = debug_lockdep_rcu_enabled();
          
#line 1932 
          if (tmp_2 != 0) 
            
#line 1932 
            if (! __warned) 
#line 1932 
                            tmp_3 = 1; else 
#line 1932 
                                            tmp_3 = 0;
          else 
#line 1932 
               tmp_3 = 0;
        }
        
#line 1932 
        tmp_4 = ________p1;
      }
      
#line 1932 
      struct list_head const *__mptr = (struct list_head const *)tmp_4;
      
#line 1932 
      tmp_5 = (struct team_port *)__mptr + 18446744073709551592U;
    }
    
#line 1932 
    tmp_6 = tmp_5;
  }
  
#line 1932 
  port = tmp_6;
  
#line 1932 
  goto ldv_49226;
  ldv_49225: 
#line 1933 
  ;
  
#line 1933 
  features = netdev_increment_features(features,(port->dev)->features,mask);
  {
    struct team_port *tmp_12;
    
#line 1932 
    struct list_head *__ptr_0 = port->list.next;
    {
      struct list_head *tmp_11;
      {
        struct list_head *tmp_8;
        {
          struct list_head *tmp_7;
          {
            union __anonunion___u_385 __u_0;
            
#line 1932 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 1932 
            tmp_7 = __u_0.__val;
          }
          
#line 1932 
          struct list_head *_________p1_0 = tmp_7;
          
#line 1932 
          tmp_8 = _________p1_0;
        }
        
#line 1932 
        struct list_head *________p1_0 = tmp_8;
        {
          bool __warned_0;
          int tmp_10;
          int tmp_9;
          
#line 1932 
          tmp_9 = debug_lockdep_rcu_enabled();
          
#line 1932 
          if (tmp_9 != 0) 
            
#line 1932 
            if (! __warned_0) 
#line 1932 
                              tmp_10 = 1; else 
#line 1932 
                                               tmp_10 = 0;
          else 
#line 1932 
               tmp_10 = 0;
        }
        
#line 1932 
        tmp_11 = ________p1_0;
      }
      
#line 1932 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_11;
      
#line 1932 
      tmp_12 = (struct team_port *)__mptr_0 + 18446744073709551592U;
    }
    
#line 1932 
    tmp_13 = tmp_12;
  }
  
#line 1932 
  port = tmp_13;
  ldv_49226: 
#line 1935 
  ;
  
#line 1932 
  if (& port->list != & team->port_list) 
#line 1934 
                                         goto ldv_49225; else 
#line 1937 
                                                              goto ldv_49227;
  ldv_49227: 
#line 1938 
  ;
  
#line 1937 
  rcu_read_unlock();
  
#line 1939 
  features = netdev_add_tso_features(features,mask);
  
#line 1941 
  return features;
}


#line 1944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_change_carrier(struct net_device *dev, bool new_carrier)
{
  int __retres;
  
#line 1946 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 1948 
  team->user_carrier_enabled = (_Bool)1;
  
#line 1950 
  if ((int)new_carrier != 0) 
#line 1951 
                             netif_carrier_on(dev); else 
#line 1953 
                                                         netif_carrier_off(dev);
  
#line 1954 
  __retres = 0;
  
#line 1954 
  return __retres;
}


#line 1957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct net_device_ops const team_netdev_ops = {.ndo_init = & team_init, .ndo_uninit = & team_uninit, .ndo_open = & team_open, .ndo_stop = & team_close, .ndo_start_xmit = & team_xmit, .ndo_select_queue = & team_select_queue, .ndo_change_rx_flags = & team_change_rx_flags, .ndo_set_rx_mode = & team_set_rx_mode, .ndo_set_mac_address = & team_set_mac_address, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & team_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = & team_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & team_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & team_vlan_rx_kill_vid, .ndo_poll_controller = & team_poll_controller, .ndo_netpoll_setup = & team_netpoll_setup, .ndo_netpoll_cleanup = & team_netpoll_cleanup, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = & team_add_slave, .ndo_del_slave = & team_del_slave, .ndo_fix_features = & team_fix_features, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = & switchdev_port_fdb_add, .ndo_fdb_del = & switchdev_port_fdb_del, .ndo_fdb_dump = & switchdev_port_fdb_dump, .ndo_bridge_setlink = & switchdev_port_bridge_setlink, .ndo_bridge_getlink = & switchdev_port_bridge_getlink, .ndo_bridge_dellink = & switchdev_port_bridge_dellink, .ndo_change_carrier = & team_change_carrier, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = & passthru_features_check, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 1993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_ethtool_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  
#line 1996 
  strlcpy((char *)(& drvinfo->driver),"team",32UL);
  
#line 1997 
  strlcpy((char *)(& drvinfo->version),"4.2.6",32UL);
  
#line 1998 
  return;
}


#line 2000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct ethtool_ops const team_ethtool_ops = {.get_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & team_ethtool_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_setup_by_port(struct net_device *dev, struct net_device *port_dev)
{
  
#line 2012 
  dev->header_ops = port_dev->header_ops;
  
#line 2013 
  dev->type = port_dev->type;
  
#line 2014 
  dev->hard_header_len = port_dev->hard_header_len;
  
#line 2015 
  dev->addr_len = port_dev->addr_len;
  
#line 2016 
  dev->mtu = port_dev->mtu;
  
#line 2017 
  memcpy((void *)(& dev->broadcast),(void const *)(& port_dev->broadcast),(unsigned long)port_dev->addr_len);
  
#line 2018 
  eth_hw_addr_inherit(dev,port_dev);
  
#line 2019 
  return;
}


#line 2021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_dev_type_check_change(struct net_device *dev, struct net_device *port_dev)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 2024 
  struct team *team = netdev_priv((struct net_device const *)dev);
  
#line 2025 
  char *portname = (char *)(& port_dev->name);
  
#line 2028 
  if ((int)dev->type == (int)port_dev->type) {
    
#line 2029 
    __retres = 0;
    
#line 2029 
    goto return_label;
  }
  else ;
  
#line 2030 
  tmp_0 = list_empty((struct list_head const *)(& team->port_list));
  
#line 2030 
  if (tmp_0 == 0) {
    
#line 2031 
    netdev_err((struct net_device const *)dev,"Device %s is of different type\n",portname);
    
#line 2032 
    __retres = -16;
    
#line 2032 
    goto return_label;
  }
  else ;
  
#line 2034 
  err = call_netdevice_notifiers(14UL,dev);
  
#line 2035 
  err = notifier_to_errno(err);
  
#line 2036 
  if (err != 0) {
    
#line 2037 
    netdev_err((struct net_device const *)dev,"Refused to change device type\n");
    
#line 2038 
    __retres = err;
    
#line 2038 
    goto return_label;
  }
  else ;
  
#line 2040 
  dev_uc_flush(dev);
  
#line 2041 
  dev_mc_flush(dev);
  
#line 2042 
  team_setup_by_port(dev,port_dev);
  
#line 2043 
  call_netdevice_notifiers(15UL,dev);
  
#line 2044 
  __retres = 0;
  return_label: 
#line 2044 
                return __retres;
}


#line 2047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_setup(struct net_device *dev)
{
  
#line 2049 
  ether_setup(dev);
  
#line 2051 
  dev->netdev_ops = & team_netdev_ops;
  
#line 2052 
  dev->ethtool_ops = & team_ethtool_ops;
  
#line 2053 
  dev->destructor = & team_destructor;
  
#line 2054 
  dev->tx_queue_len = 0UL;
  
#line 2055 
  dev->flags |= 4096U;
  
#line 2056 
  dev->priv_flags &= 4294900735U;
  
#line 2063 
  dev->priv_flags |= 1179648U;
  
#line 2065 
  dev->features |= 4096ULL;
  
#line 2066 
  dev->features |= 16384ULL;
  
#line 2069 
  dev->features |= 8192ULL;
  
#line 2071 
  dev->hw_features = 1672187ULL;
  
#line 2076 
  dev->hw_features &= 18446744073709551597ULL;
  
#line 2077 
  dev->features |= dev->hw_features;
  
#line 2078 
  return;
}


#line 2080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_newlink(struct net *src_net, struct net_device *dev, struct nlattr **tb, struct nlattr **data)
{
  int tmp;
  
#line 2083 
  if (*(tb + 1U) == (struct nlattr *)0) 
#line 2084 
                                        eth_hw_addr_random(dev); else ;
  
#line 2086 
  tmp = register_netdevice(dev);
  
#line 2086 
  return tmp;
}


#line 2089  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_validate(struct nlattr **tb, struct nlattr **data)
{
  int __retres;
  
#line 2091 
  if (*(tb + 1U) != (struct nlattr *)0) {
    int tmp;
    int tmp_2;
    bool tmp_1;
    void *tmp_0;
    
#line 2092 
    tmp = nla_len((struct nlattr const *)*(tb + 1U));
    
#line 2092 
    if (tmp != 6) {
      
#line 2093 
      __retres = -22;
      
#line 2093 
      goto return_label;
    }
    else ;
    
#line 2094 
    tmp_0 = nla_data((struct nlattr const *)*(tb + 1U));
    
#line 2094 
    tmp_1 = is_valid_ether_addr((u8 const *)tmp_0);
    
#line 2094 
    if (tmp_1) 
#line 2094 
               tmp_2 = 0; else 
#line 2094 
                               tmp_2 = 1;
    
#line 2094 
    if (tmp_2) {
      
#line 2095 
      __retres = -99;
      
#line 2095 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2097 
  __retres = 0;
  return_label: 
#line 2097 
                return __retres;
}


#line 2100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static unsigned int team_get_num_tx_queues(void)
{
  unsigned int __retres;
  
#line 2102 
  __retres = 16U;
  
#line 2102 
  return __retres;
}


#line 2105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static unsigned int team_get_num_rx_queues(void)
{
  unsigned int __retres;
  
#line 2107 
  __retres = 16U;
  
#line 2107 
  return __retres;
}


#line 2110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct rtnl_link_ops team_link_ops = {.list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .kind = "team", .priv_size = 976UL, .setup = & team_setup, .maxtype = 0, .policy = (struct nla_policy const *)0, .validate = & team_validate, .newlink = & team_newlink, .changelink = (int (*)(struct net_device *, struct nlattr **, struct nlattr **))0, .dellink = (void (*)(struct net_device *, struct list_head *))0, .get_size = (size_t (*)(struct net_device const *))0, .fill_info = (int (*)(struct sk_buff *, struct net_device const *))0, .get_xstats_size = (size_t (*)(struct net_device const *))0, .fill_xstats = (int (*)(struct sk_buff *, struct net_device const *))0, .get_num_tx_queues = & team_get_num_tx_queues, .get_num_rx_queues = & team_get_num_rx_queues, .slave_maxtype = 0, .slave_policy = (struct nla_policy const *)0, .slave_validate = (int (*)(struct nlattr **, struct nlattr **))0, .slave_changelink = (int (*)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **))0, .get_slave_size = (size_t (*)(struct net_device const *, struct net_device const *))0, .fill_slave_info = (int (*)(struct sk_buff *, struct net_device const *, struct net_device const *))0, .get_link_net = (struct net *(*)(struct net_device const *))0};

#line 2125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct genl_family team_nl_family = {.id = 0U, .hdrsize = 0U, .name = {(char)'t', (char)'e', (char)'a', (char)'m', (char)'\000'}, .version = 1U, .maxattr = 3U, .netnsok = (_Bool)1, .parallel_ops = (_Bool)0, .pre_doit = (int (*)(struct genl_ops const *, struct sk_buff *, struct genl_info *))0, .post_doit = (void (*)(struct genl_ops const *, struct sk_buff *, struct genl_info *))0, .mcast_bind = (int (*)(struct net *, int ))0, .mcast_unbind = (void (*)(struct net *, int ))0, .attrbuf = (struct nlattr **)0, .ops = (struct genl_ops const *)0, .mcgrps = (struct genl_multicast_group const *)0, .n_ops = 0U, .n_mcgrps = 0U, .mcgrp_offset = 0U, .family_list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .module = (struct module *)0};

#line 2133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct nla_policy const team_nl_policy[4U] = {{.type = (unsigned short)0U, .len = (unsigned short)0}, {.type = (unsigned short)3U, .len = (unsigned short)0}, {.type = (unsigned short)8U, .len = (unsigned short)0}, {.type = (unsigned short)8U, .len = (unsigned short)0}};

#line 2141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct nla_policy const team_nl_option_policy[8U] = {{.type = (unsigned short)0U, .len = (unsigned short)0}, {.type = (unsigned short)5U, .len = (unsigned short)32U}, {.type = (unsigned short)6U, .len = (unsigned short)0}, {.type = (unsigned short)1U, .len = (unsigned short)0}, {.type = (unsigned short)11U, .len = (unsigned short)0}};

#line 2152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_cmd_noop(struct sk_buff *skb, struct genl_info *info)
{
  int __retres;
  struct sk_buff *msg;
  void *hdr;
  int err;
  int tmp_0;
  struct net *tmp;
  
#line 2158 
  msg = nlmsg_new(3760UL,208U);
  
#line 2159 
  if (msg == (struct sk_buff *)0) {
    
#line 2160 
    __retres = -12;
    
#line 2160 
    goto return_label;
  }
  else ;
  
#line 2162 
  hdr = genlmsg_put(msg,info->snd_portid,info->snd_seq,& team_nl_family,0,(unsigned char)0);
  
#line 2164 
  if (hdr == (void *)0) {
    
#line 2165 
    err = -90;
    
#line 2166 
    goto err_msg_put;
  }
  else ;
  
#line 2169 
  genlmsg_end(msg,hdr);
  
#line 2171 
  ;
  
#line 2171 
  ;
  
#line 2171 
  tmp = genl_info_net(info);
  
#line 2171 
  tmp_0 = genlmsg_unicast(tmp,msg,info->snd_portid);
  
#line 2171 
  __retres = tmp_0;
  
#line 2171 
  goto return_label;
  err_msg_put: 
#line 2173 
  ;
  
#line 2174 
  nlmsg_free(msg);
  
#line 2176 
  __retres = err;
  return_label: 
#line 2176 
                return __retres;
}


#line 2183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct team *team_nl_team_get(struct genl_info *info)
{
  struct team *__retres;
  int ifindex;
  struct net_device *dev;
  struct team *team;
  u32 tmp_0;
  
#line 2185 
  struct net *net = genl_info_net(info);
  
#line 2190 
  if (*(info->attrs + 1U) == (struct nlattr *)0) {
    
#line 2191 
    __retres = (struct team *)0;
    
#line 2191 
    goto return_label;
  }
  else ;
  
#line 2193 
  tmp_0 = nla_get_u32((struct nlattr const *)*(info->attrs + 1U));
  
#line 2193 
  ifindex = (int)tmp_0;
  
#line 2194 
  dev = dev_get_by_index(net,ifindex);
  
#line 2195 
  if (dev == (struct net_device *)0 || dev->netdev_ops != & team_netdev_ops) {
    
#line 2196 
    if (dev != (struct net_device *)0) 
#line 2197 
                                       dev_put(dev); else ;
    
#line 2198 
    __retres = (struct team *)0;
    
#line 2198 
    goto return_label;
  }
  else ;
  
#line 2201 
  team = (struct team *)netdev_priv((struct net_device const *)dev);
  
#line 2202 
  ldv_mutex_lock_113(& team->lock);
  
#line 2203 
  __retres = team;
  return_label: 
#line 2203 
                return __retres;
}


#line 2206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_nl_team_put(struct team *team)
{
  
#line 2208 
  ldv_mutex_unlock_114(& team->lock);
  
#line 2209 
  dev_put(team->dev);
  
#line 2210 
  return;
}


#line 2215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_unicast(struct sk_buff *skb, struct team *team, u32 portid)
{
  int tmp_0;
  struct net *tmp;
  
#line 2217 
  ;
  
#line 2217 
  ;
  
#line 2217 
  tmp = dev_net((struct net_device const *)team->dev);
  
#line 2217 
  tmp_0 = genlmsg_unicast(tmp,skb,portid);
  
#line 2217 
  return tmp_0;
}


#line 2220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_fill_one_option_get(struct sk_buff *skb, struct team *team, struct team_option_inst *opt_inst)
{
  int __retres;
  struct nlattr *option_item;
  struct team_gsetter_ctx ctx;
  int err;
  int tmp;
  
#line 2224 
  struct team_option *option = opt_inst->option;
  
#line 2225 
  struct team_option_inst_info *opt_inst_info = & opt_inst->info;
  
#line 2229 
  ctx.info = opt_inst_info;
  
#line 2230 
  err = team_option_get(team,opt_inst,& ctx);
  
#line 2231 
  if (err != 0) {
    
#line 2232 
    __retres = err;
    
#line 2232 
    goto return_label;
  }
  else ;
  
#line 2234 
  option_item = nla_nest_start(skb,1);
  
#line 2235 
  if (option_item == (struct nlattr *)0) {
    
#line 2236 
    __retres = -90;
    
#line 2236 
    goto return_label;
  }
  else ;
  
#line 2238 
  tmp = nla_put_string(skb,1,option->name);
  
#line 2238 
  if (tmp != 0) 
#line 2239 
                goto nest_cancel; else ;
  
#line 2240 
  if (opt_inst_info->port != (struct team_port *)0) {
    int tmp_0;
    
#line 2240 
    tmp_0 = nla_put_u32(skb,6,(unsigned int)((opt_inst_info->port)->dev)->ifindex);
    
#line 2240 
    if (tmp_0 != 0) 
#line 2243 
                    goto nest_cancel; else ;
  }
  else ;
  
#line 2244 
  if ((opt_inst->option)->array_size != 0U) {
    int tmp_1;
    
#line 2244 
    tmp_1 = nla_put_u32(skb,7,opt_inst_info->array_index);
    
#line 2244 
    if (tmp_1 != 0) 
#line 2247 
                    goto nest_cancel; else ;
  }
  else ;
  
#line 2249 
  switch ((unsigned int)option->type) {
    int tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_6;
    int tmp_7;
    int tmp_8;
    int tmp_10;
    int tmp_11;
    case (unsigned int)0: 
#line 2250 
    ;
    
#line 2251 
    tmp_2 = nla_put_u8(skb,3,(unsigned char)3);
    
#line 2251 
    if (tmp_2 != 0) 
#line 2252 
                    goto nest_cancel; else ;
    
#line 2253 
    tmp_3 = nla_put_u32(skb,4,ctx.data.u32_val);
    
#line 2253 
    if (tmp_3 != 0) 
#line 2254 
                    goto nest_cancel; else ;
    
#line 2255 
    goto ldv_49312;
    case (unsigned int)1: 
#line 2256 
    ;
    
#line 2257 
    tmp_4 = nla_put_u8(skb,3,(unsigned char)5);
    
#line 2257 
    if (tmp_4 != 0) 
#line 2258 
                    goto nest_cancel; else ;
    
#line 2259 
    tmp_5 = nla_put_string(skb,4,ctx.data.str_val);
    
#line 2259 
    if (tmp_5 != 0) 
#line 2261 
                    goto nest_cancel; else ;
    
#line 2262 
    goto ldv_49312;
    case (unsigned int)2: 
#line 2263 
    ;
    
#line 2264 
    tmp_6 = nla_put_u8(skb,3,(unsigned char)11);
    
#line 2264 
    if (tmp_6 != 0) 
#line 2265 
                    goto nest_cancel; else ;
    
#line 2266 
    tmp_7 = nla_put(skb,4,(int)ctx.data.bin_val.len,ctx.data.bin_val.ptr);
    
#line 2266 
    if (tmp_7 != 0) 
#line 2268 
                    goto nest_cancel; else ;
    
#line 2269 
    goto ldv_49312;
    case (unsigned int)3: 
#line 2270 
    ;
    
#line 2271 
    tmp_8 = nla_put_u8(skb,3,(unsigned char)6);
    
#line 2271 
    if (tmp_8 != 0) 
#line 2272 
                    goto nest_cancel; else ;
    
#line 2273 
    if ((int)ctx.data.bool_val != 0) {
      int tmp_9;
      
#line 2273 
      tmp_9 = nla_put_flag(skb,4);
      
#line 2273 
      if (tmp_9 != 0) 
#line 2275 
                      goto nest_cancel; else ;
    }
    else ;
    
#line 2276 
    goto ldv_49312;
    case (unsigned int)4: 
#line 2277 
    ;
    
#line 2278 
    tmp_10 = nla_put_u8(skb,3,(unsigned char)14);
    
#line 2278 
    if (tmp_10 != 0) 
#line 2279 
                     goto nest_cancel; else ;
    
#line 2280 
    tmp_11 = nla_put_s32(skb,4,ctx.data.s32_val);
    
#line 2280 
    if (tmp_11 != 0) 
#line 2281 
                     goto nest_cancel; else ;
    
#line 2282 
    goto ldv_49312;
    default: 
#line 2283 
    ;
    
#line 2284 
    ldv_inline_asm();
    
#line 2284 
    ;
  }
  ldv_49312: 
#line 2286 
  ;
  
#line 2286 
  if ((int)opt_inst->removed != 0) {
    int tmp_12;
    
#line 2286 
    tmp_12 = nla_put_flag(skb,5);
    
#line 2286 
    if (tmp_12 != 0) 
#line 2287 
                     goto nest_cancel; else ;
  }
  else ;
  
#line 2288 
  if ((int)opt_inst->changed != 0) {
    int tmp_13;
    
#line 2289 
    tmp_13 = nla_put_flag(skb,2);
    
#line 2289 
    if (tmp_13 != 0) 
#line 2290 
                     goto nest_cancel; else ;
    
#line 2291 
    opt_inst->changed = (_Bool)0;
  }
  else ;
  
#line 2293 
  nla_nest_end(skb,option_item);
  
#line 2294 
  __retres = 0;
  
#line 2294 
  goto return_label;
  nest_cancel: 
#line 2296 
  ;
  
#line 2297 
  nla_nest_cancel(skb,option_item);
  
#line 2298 
  __retres = -90;
  return_label: 
#line 2298 
                return __retres;
}


#line 2301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int __send_and_alloc_skb(struct sk_buff **pskb, struct team *team, u32 portid, team_nl_send_func_t *send_func)
{
  int __retres;
  int err;
  
#line 2307 
  if (*pskb != (struct sk_buff *)0) {
    
#line 2308 
    err = (*send_func)(*pskb,team,portid);
    
#line 2309 
    if (err != 0) {
      
#line 2310 
      __retres = err;
      
#line 2310 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2312 
  *pskb = genlmsg_new(3756UL,208U);
  
#line 2313 
  if (*pskb == (struct sk_buff *)0) {
    
#line 2314 
    __retres = -12;
    
#line 2314 
    goto return_label;
  }
  else ;
  
#line 2315 
  __retres = 0;
  return_label: 
#line 2315 
                return __retres;
}


#line 2318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_options_get(struct team *team, u32 portid, u32 seq, int flags, team_nl_send_func_t *send_func, struct list_head *sel_opt_inst_list)
{
  int __retres;
  struct nlattr *option_list;
  struct nlmsghdr *nlh;
  void *hdr;
  struct team_option_inst *opt_inst;
  int err;
  bool incomplete;
  int i;
  struct team_option_inst *tmp;
  int tmp_0;
  struct team_option_inst *tmp_1;
  int tmp_2;
  
#line 2327 
  struct sk_buff *skb = (struct sk_buff *)0;
  {
    
#line 2331 
    struct list_head const *__mptr = (struct list_head const *)sel_opt_inst_list->next;
    
#line 2331 
    tmp = (struct team_option_inst *)__mptr + 18446744073709551600U;
  }
  
#line 2331 
  opt_inst = tmp;
  start_again: 
#line 2334 
  ;
  
#line 2335 
  err = __send_and_alloc_skb(& skb,team,portid,send_func);
  
#line 2336 
  if (err != 0) {
    
#line 2337 
    __retres = err;
    
#line 2337 
    goto return_label;
  }
  else ;
  
#line 2339 
  hdr = genlmsg_put(skb,portid,seq,& team_nl_family,flags | 2,(unsigned char)2);
  
#line 2341 
  if (hdr == (void *)0) {
    
#line 2342 
    __retres = -90;
    
#line 2342 
    goto return_label;
  }
  else ;
  
#line 2344 
  tmp_0 = nla_put_u32(skb,1,(unsigned int)(team->dev)->ifindex);
  
#line 2344 
  if (tmp_0 != 0) 
#line 2345 
                  goto nla_put_failure; else ;
  
#line 2346 
  option_list = nla_nest_start(skb,2);
  
#line 2347 
  if (option_list == (struct nlattr *)0) 
#line 2348 
                                         goto nla_put_failure; else ;
  
#line 2350 
  i = 0;
  
#line 2351 
  incomplete = (_Bool)0;
  
#line 2352 
  goto ldv_49350;
  ldv_49349: 
#line 2353 
  ;
  
#line 2353 
  err = team_nl_fill_one_option_get(skb,team,opt_inst);
  
#line 2354 
  if (err != 0) {
    
#line 2355 
    if (err == -90) {
      
#line 2356 
      if (i == 0) 
#line 2357 
                  goto errout; else ;
      
#line 2358 
      incomplete = (_Bool)1;
      
#line 2359 
      goto ldv_49348;
    }
    else ;
    
#line 2361 
    goto errout;
  }
  else ;
  
#line 2363 
  i += 1;
  {
    
#line 2352 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->tmp_list.next;
    
#line 2352 
    tmp_1 = (struct team_option_inst *)__mptr_0 + 18446744073709551600U;
  }
  
#line 2352 
  opt_inst = tmp_1;
  ldv_49350: 
#line 2354 
  ;
  
#line 2352 
  if (& opt_inst->tmp_list != sel_opt_inst_list) 
#line 2354 
                                                 goto ldv_49349; else 
                                                                   
#line 2357 
                                                                   goto ldv_49348;
  ldv_49348: 
#line 2358 
  ;
  
#line 2366 
  nla_nest_end(skb,option_list);
  
#line 2367 
  genlmsg_end(skb,hdr);
  
#line 2368 
  if ((int)incomplete != 0) 
#line 2369 
                            goto start_again; else ;
  send_done: 
#line 2371 
  ;
  
#line 2372 
  nlh = nlmsg_put(skb,portid,seq,3,0,flags | 2);
  
#line 2373 
  if (nlh == (struct nlmsghdr *)0) {
    
#line 2374 
    err = __send_and_alloc_skb(& skb,team,portid,send_func);
    
#line 2375 
    if (err != 0) 
#line 2376 
                  goto errout; else ;
    
#line 2377 
    goto send_done;
  }
  else ;
  
#line 2380 
  tmp_2 = (*send_func)(skb,team,portid);
  
#line 2380 
  __retres = tmp_2;
  
#line 2380 
  goto return_label;
  nla_put_failure: 
#line 2382 
  ;
  
#line 2383 
  err = -90;
  errout: 
#line 2384 
  ;
  
#line 2385 
  genlmsg_cancel(skb,hdr);
  
#line 2386 
  nlmsg_free(skb);
  
#line 2387 
  __retres = err;
  return_label: 
#line 2387 
                return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_cmd_options_get(struct sk_buff *skb, struct genl_info *info)
{
  int __retres;
  struct team *team;
  struct team_option_inst *opt_inst;
  int err;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  
#line 2395 
  struct list_head sel_opt_inst_list = {.next = & sel_opt_inst_list, .prev = & sel_opt_inst_list};
  
#line 2397 
  team = team_nl_team_get(info);
  
#line 2398 
  if (team == (struct team *)0) {
    
#line 2399 
    __retres = -22;
    
#line 2399 
    goto return_label;
  }
  else ;
  {
    
#line 2401 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 2401 
    tmp = (struct team_option_inst *)__mptr;
  }
  
#line 2401 
  opt_inst = tmp;
  
#line 2401 
  goto ldv_49365;
  ldv_49364: 
#line 2402 
  ;
  
#line 2402 
  list_add_tail(& opt_inst->tmp_list,& sel_opt_inst_list);
  {
    
#line 2401 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 2401 
    tmp_0 = (struct team_option_inst *)__mptr_0;
  }
  
#line 2401 
  opt_inst = tmp_0;
  ldv_49365: 
#line 2403 
  ;
  
#line 2401 
  if (& opt_inst->list != & team->option_inst_list) 
#line 2403 
                                                    goto ldv_49364; else 
                                                                    
#line 2406 
                                                                    goto ldv_49366;
  ldv_49366: 
#line 2407 
  ;
  
#line 2403 
  err = team_nl_send_options_get(team,info->snd_portid,info->snd_seq,4,& team_nl_send_unicast,& sel_opt_inst_list);
  
#line 2407 
  team_nl_team_put(team);
  
#line 2409 
  __retres = err;
  return_label: 
#line 2409 
                return __retres;
}


#line 2412 
static int team_nl_send_event_options_get(struct team *team, struct list_head *sel_opt_inst_list);


#line 2415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_cmd_options_set(struct sk_buff *skb, struct genl_info *info)
{
  int __retres;
  struct team *team;
  int i;
  struct nlattr *nl_option;
  int tmp_11;
  
#line 2418 
  int err = 0;
  
#line 2421 
  struct list_head opt_inst_list = {.next = & opt_inst_list, .prev = & opt_inst_list};
  
#line 2423 
  team = team_nl_team_get(info);
  
#line 2424 
  if (team == (struct team *)0) {
    
#line 2425 
    __retres = -22;
    
#line 2425 
    goto return_label;
  }
  else ;
  
#line 2427 
  err = -22;
  
#line 2428 
  if (*(info->attrs + 2U) == (struct nlattr *)0) {
    
#line 2429 
    err = -22;
    
#line 2430 
    goto team_put;
  }
  else ;
  
#line 2433 
  nl_option = (struct nlattr *)nla_data((struct nlattr const *)*(info->attrs + 2U));
  
#line 2433 
  i = nla_len((struct nlattr const *)*(info->attrs + 2U));
  
#line 2433 
  goto ldv_49417;
  ldv_49416: 
#line 2434 
  ;
  {
    struct nlattr *opt_attrs[8U];
    struct nlattr *attr;
    struct nlattr *attr_data;
    enum team_option_type opt_type;
    struct team_option_inst *opt_inst;
    char *opt_name;
    int tmp_0;
    u8 tmp_1;
    struct team_option_inst *tmp_4;
    struct team_option_inst *tmp_10;
    
#line 2438 
    int opt_port_ifindex = 0;
    
#line 2439 
    u32 opt_array_index = 0U;
    
#line 2440 
    bool opt_is_array = (_Bool)0;
    
#line 2443 
    bool opt_found = (_Bool)0;
    
#line 2445 
    tmp_0 = nla_type((struct nlattr const *)nl_option);
    
#line 2445 
    if (tmp_0 != 1) {
      
#line 2446 
      err = -22;
      
#line 2447 
      goto team_put;
    }
    else ;
    
#line 2449 
    err = nla_parse_nested((struct nlattr **)(& opt_attrs),7,(struct nlattr const *)nl_option,(struct nla_policy const *)(& team_nl_option_policy));
    
#line 2451 
    if (err != 0) 
#line 2452 
                  goto team_put; else ;
    
#line 2453 
    if (opt_attrs[1] == (struct nlattr *)0 || opt_attrs[3] == (struct nlattr *)0) {
      
#line 2455 
      err = -22;
      
#line 2456 
      goto team_put;
    }
    else ;
    
#line 2458 
    tmp_1 = nla_get_u8((struct nlattr const *)opt_attrs[3]);
    
#line 2458 
    switch ((int)tmp_1) {
      case 3: 
#line 2459 
      ;
      
#line 2460 
      opt_type = TEAM_OPTION_TYPE_U32;
      
#line 2461 
      goto ldv_49391;
      case 5: 
#line 2462 
      ;
      
#line 2463 
      opt_type = TEAM_OPTION_TYPE_STRING;
      
#line 2464 
      goto ldv_49391;
      case 11: 
#line 2465 
      ;
      
#line 2466 
      opt_type = TEAM_OPTION_TYPE_BINARY;
      
#line 2467 
      goto ldv_49391;
      case 6: 
#line 2468 
      ;
      
#line 2469 
      opt_type = TEAM_OPTION_TYPE_BOOL;
      
#line 2470 
      goto ldv_49391;
      case 14: 
#line 2471 
      ;
      
#line 2472 
      opt_type = TEAM_OPTION_TYPE_S32;
      
#line 2473 
      goto ldv_49391;
      default: 
#line 2474 
      ;
      
#line 2475 
      goto team_put;
    }
    ldv_49391: 
#line 2478 
    ;
    
#line 2478 
    attr_data = opt_attrs[4];
    
#line 2479 
    if (opt_type != (unsigned int)TEAM_OPTION_TYPE_BOOL && attr_data == (struct nlattr *)0) {
      
#line 2480 
      err = -22;
      
#line 2481 
      goto team_put;
    }
    else ;
    
#line 2484 
    opt_name = (char *)nla_data((struct nlattr const *)opt_attrs[1]);
    
#line 2485 
    attr = opt_attrs[6];
    
#line 2486 
    if (attr != (struct nlattr *)0) {
      u32 tmp_3;
      
#line 2487 
      tmp_3 = nla_get_u32((struct nlattr const *)attr);
      
#line 2487 
      opt_port_ifindex = (int)tmp_3;
    }
    else ;
    
#line 2489 
    attr = opt_attrs[7];
    
#line 2490 
    if (attr != (struct nlattr *)0) {
      
#line 2491 
      opt_is_array = (_Bool)1;
      
#line 2492 
      opt_array_index = nla_get_u32((struct nlattr const *)attr);
    }
    else ;
    {
      
#line 2495 
      struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
      
#line 2495 
      tmp_4 = (struct team_option_inst *)__mptr;
    }
    
#line 2495 
    opt_inst = tmp_4;
    
#line 2495 
    goto ldv_49414;
    ldv_49413: 
#line 2496 
    ;
    {
      struct team_gsetter_ctx ctx;
      struct team_option_inst_info *opt_inst_info;
      int tmp_ifindex;
      
#line 2496 
      struct team_option *option = opt_inst->option;
      
#line 2501 
      opt_inst_info = & opt_inst->info;
      
#line 2502 
      if (opt_inst_info->port != (struct team_port *)0) 
#line 2502 
                                                        tmp_ifindex = ((opt_inst_info->port)->dev)->ifindex; else 
                                                                    
#line 2502 
                                                                    tmp_ifindex = 0;
      
#line 2504 
      if (option->type != opt_type) 
#line 2504 
                                    goto _LOR;
      else {
        int tmp_5;
        
#line 2504 
        tmp_5 = strcmp(option->name,(char const *)opt_name);
        
#line 2504 
        if (tmp_5 != 0) 
#line 2504 
                        goto _LOR;
        else 
          
#line 2505 
          if (tmp_ifindex != opt_port_ifindex) 
#line 2504 
                                               goto _LOR;
          else 
            
#line 2506 
            if (option->array_size != 0U && ! opt_is_array) 
#line 2504 
                                                            goto _LOR;
            else 
              
#line 2507 
              if (opt_inst_info->array_index != opt_array_index) _LOR: 
#line 2509 
                                                                    goto ldv_49405; else ;
      }
      
#line 2510 
      opt_found = (_Bool)1;
      
#line 2511 
      ctx.info = opt_inst_info;
      
#line 2512 
      switch ((unsigned int)opt_type) {
        int tmp_6;
        int tmp_8;
        case (unsigned int)0: 
#line 2513 
        ;
        
#line 2514 
        ctx.data.u32_val = nla_get_u32((struct nlattr const *)attr_data);
        
#line 2515 
        goto ldv_49407;
        case (unsigned int)1: 
#line 2516 
        ;
        
#line 2517 
        tmp_6 = nla_len((struct nlattr const *)attr_data);
        
#line 2517 
        if (tmp_6 > 32) {
          
#line 2518 
          err = -22;
          
#line 2519 
          goto team_put;
        }
        else ;
        
#line 2521 
        ctx.data.str_val = (char const *)nla_data((struct nlattr const *)attr_data);
        
#line 2522 
        goto ldv_49407;
        case (unsigned int)2: 
#line 2523 
        ;
        
#line 2524 
        tmp_8 = nla_len((struct nlattr const *)attr_data);
        
#line 2524 
        ctx.data.bin_val.len = (unsigned int)tmp_8;
        
#line 2525 
        ctx.data.bin_val.ptr = (void const *)nla_data((struct nlattr const *)attr_data);
        
#line 2526 
        goto ldv_49407;
        case (unsigned int)3: 
#line 2527 
        ;
        
#line 2528 
        ctx.data.bool_val = (_Bool)(attr_data != (struct nlattr *)0);
        
#line 2529 
        goto ldv_49407;
        case (unsigned int)4: 
#line 2530 
        ;
        
#line 2531 
        ctx.data.s32_val = nla_get_s32((struct nlattr const *)attr_data);
        
#line 2532 
        goto ldv_49407;
        default: 
#line 2533 
        ;
        
#line 2534 
        ldv_inline_asm();
        
#line 2534 
        ;
      }
      ldv_49407: 
#line 2536 
      ;
      
#line 2536 
      err = team_option_set(team,opt_inst,& ctx);
      
#line 2537 
      if (err != 0) 
#line 2538 
                    goto team_put; else ;
      
#line 2539 
      opt_inst->changed = (_Bool)1;
      
#line 2540 
      list_add(& opt_inst->tmp_list,& opt_inst_list);
    }
    ldv_49405: 
#line 2542 
    ;
    {
      
#line 2495 
      struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
      
#line 2495 
      tmp_10 = (struct team_option_inst *)__mptr_0;
    }
    
#line 2495 
    opt_inst = tmp_10;
    ldv_49414: 
#line 2497 
    ;
    
#line 2495 
    if (& opt_inst->list != & team->option_inst_list) 
#line 2497 
                                                      goto ldv_49413; else 
                                                                    
#line 2500 
                                                                    goto ldv_49415;
    ldv_49415: 
#line 2501 
    ;
    
#line 2542 
    if (! opt_found) {
      
#line 2543 
      err = -2;
      
#line 2544 
      goto team_put;
    }
    else ;
  }
  
#line 2433 
  nl_option = nla_next((struct nlattr const *)nl_option,& i);
  ldv_49417: 
#line 2434 
  ;
  
#line 2433 
  tmp_11 = nla_ok((struct nlattr const *)nl_option,i);
  
#line 2433 
  if (tmp_11 != 0) 
#line 2435 
                   goto ldv_49416; else 
#line 2438 
                                        goto ldv_49418;
  ldv_49418: 
#line 2439 
  ;
  
#line 2548 
  err = team_nl_send_event_options_get(team,& opt_inst_list);
  team_put: 
#line 2550 
  ;
  
#line 2551 
  team_nl_team_put(team);
  
#line 2553 
  __retres = err;
  return_label: 
#line 2553 
                return __retres;
}


#line 2556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_fill_one_port_get(struct sk_buff *skb, struct team_port *port)
{
  int __retres;
  struct nlattr *port_item;
  int tmp;
  
#line 2561 
  port_item = nla_nest_start(skb,1);
  
#line 2562 
  if (port_item == (struct nlattr *)0) 
#line 2563 
                                       goto nest_cancel; else ;
  
#line 2564 
  tmp = nla_put_u32(skb,1,(unsigned int)(port->dev)->ifindex);
  
#line 2564 
  if (tmp != 0) 
#line 2565 
                goto nest_cancel; else ;
  
#line 2566 
  if ((int)port->changed != 0) {
    int tmp_0;
    
#line 2567 
    tmp_0 = nla_put_flag(skb,2);
    
#line 2567 
    if (tmp_0 != 0) 
#line 2568 
                    goto nest_cancel; else ;
    
#line 2569 
    port->changed = (_Bool)0;
  }
  else ;
  
#line 2571 
  if ((int)port->removed != 0) {
    int tmp_1;
    
#line 2571 
    tmp_1 = nla_put_flag(skb,6);
    
#line 2571 
    if (tmp_1 != 0) 
#line 2577 
                    goto nest_cancel; else 
#line 2571 
                                           goto _LAND_0;
  }
  else {
    _LAND_0: 
#line 2572 
    ;
    
#line 2572 
    if ((int)port->state.linkup != 0) {
      int tmp_2;
      
#line 2573 
      tmp_2 = nla_put_flag(skb,3);
      
#line 2573 
      if (tmp_2 != 0) 
#line 2577 
                      goto nest_cancel; else 
#line 2571 
                                             goto _LAND;
    }
    else {
      int tmp_3;
      _LAND: 
#line 2574 
      tmp_3 = nla_put_u32(skb,4,port->state.speed);
      
#line 2574 
      if (tmp_3 != 0) 
#line 2577 
                      goto nest_cancel;
      else {
        int tmp_4;
        
#line 2575 
        tmp_4 = nla_put_u8(skb,5,(unsigned char)((int)port->state.duplex));
        
#line 2575 
        if (tmp_4 != 0) 
#line 2577 
                        goto nest_cancel; else ;
      }
    }
  }
  
#line 2578 
  nla_nest_end(skb,port_item);
  
#line 2579 
  __retres = 0;
  
#line 2579 
  goto return_label;
  nest_cancel: 
#line 2581 
  ;
  
#line 2582 
  nla_nest_cancel(skb,port_item);
  
#line 2583 
  __retres = -90;
  return_label: 
#line 2583 
                return __retres;
}


#line 2586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_port_list_get(struct team *team, u32 portid, u32 seq, int flags, team_nl_send_func_t *send_func, struct team_port *one_port)
{
  int __retres;
  struct nlattr *port_list;
  struct nlmsghdr *nlh;
  void *hdr;
  struct team_port *port;
  int err;
  bool incomplete;
  int i;
  int tmp;
  int tmp_1;
  int tmp_3;
  
#line 2595 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 2599 
  tmp = list_empty((struct list_head const *)(& team->port_list));
  
#line 2599 
  if (tmp == 0) {
    struct team_port *tmp_0;
    {
      
#line 2599 
      struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
      
#line 2599 
      tmp_0 = (struct team_port *)__mptr + 18446744073709551592U;
    }
    
#line 2599 
    port = tmp_0;
  }
  else 
#line 2599 
       port = (struct team_port *)0;
  start_again: 
#line 2602 
  ;
  
#line 2603 
  err = __send_and_alloc_skb(& skb,team,portid,send_func);
  
#line 2604 
  if (err != 0) {
    
#line 2605 
    __retres = err;
    
#line 2605 
    goto return_label;
  }
  else ;
  
#line 2607 
  hdr = genlmsg_put(skb,portid,seq,& team_nl_family,flags | 2,(unsigned char)3);
  
#line 2609 
  if (hdr == (void *)0) {
    
#line 2610 
    __retres = -90;
    
#line 2610 
    goto return_label;
  }
  else ;
  
#line 2612 
  tmp_1 = nla_put_u32(skb,1,(unsigned int)(team->dev)->ifindex);
  
#line 2612 
  if (tmp_1 != 0) 
#line 2613 
                  goto nla_put_failure; else ;
  
#line 2614 
  port_list = nla_nest_start(skb,3);
  
#line 2615 
  if (port_list == (struct nlattr *)0) 
#line 2616 
                                       goto nla_put_failure; else ;
  
#line 2618 
  i = 0;
  
#line 2619 
  incomplete = (_Bool)0;
  
#line 2624 
  if (one_port != (struct team_port *)0) {
    
#line 2625 
    err = team_nl_fill_one_port_get(skb,one_port);
    
#line 2626 
    if (err != 0) 
#line 2627 
                  goto errout; else ;
  }
  else 
    
#line 2628 
    if (port != (struct team_port *)0) {
      struct team_port *tmp_2;
      
#line 2629 
      goto ldv_49450;
      ldv_49449: 
#line 2630 
      ;
      
#line 2630 
      err = team_nl_fill_one_port_get(skb,port);
      
#line 2631 
      if (err != 0) {
        
#line 2632 
        if (err == -90) {
          
#line 2633 
          if (i == 0) 
#line 2634 
                      goto errout; else ;
          
#line 2635 
          incomplete = (_Bool)1;
          
#line 2636 
          goto ldv_49448;
        }
        else ;
        
#line 2638 
        goto errout;
      }
      else ;
      
#line 2640 
      i += 1;
      {
        
#line 2629 
        struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
        
#line 2629 
        tmp_2 = (struct team_port *)__mptr_0 + 18446744073709551592U;
      }
      
#line 2629 
      port = tmp_2;
      ldv_49450: 
#line 2631 
      ;
      
#line 2629 
      if (& port->list != & team->port_list) 
#line 2631 
                                             goto ldv_49449; else 
#line 2634 
                                                                  goto ldv_49448;
      ldv_49448: 
#line 2635 
      ;
    }
    else ;
  
#line 2644 
  nla_nest_end(skb,port_list);
  
#line 2645 
  genlmsg_end(skb,hdr);
  
#line 2646 
  if ((int)incomplete != 0) 
#line 2647 
                            goto start_again; else ;
  send_done: 
#line 2649 
  ;
  
#line 2650 
  nlh = nlmsg_put(skb,portid,seq,3,0,flags | 2);
  
#line 2651 
  if (nlh == (struct nlmsghdr *)0) {
    
#line 2652 
    err = __send_and_alloc_skb(& skb,team,portid,send_func);
    
#line 2653 
    if (err != 0) 
#line 2654 
                  goto errout; else ;
    
#line 2655 
    goto send_done;
  }
  else ;
  
#line 2658 
  tmp_3 = (*send_func)(skb,team,portid);
  
#line 2658 
  __retres = tmp_3;
  
#line 2658 
  goto return_label;
  nla_put_failure: 
#line 2660 
  ;
  
#line 2661 
  err = -90;
  errout: 
#line 2662 
  ;
  
#line 2663 
  genlmsg_cancel(skb,hdr);
  
#line 2664 
  nlmsg_free(skb);
  
#line 2665 
  __retres = err;
  return_label: 
#line 2665 
                return __retres;
}


#line 2668  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_cmd_port_list_get(struct sk_buff *skb, struct genl_info *info)
{
  int __retres;
  struct team *team;
  int err;
  
#line 2674 
  team = team_nl_team_get(info);
  
#line 2675 
  if (team == (struct team *)0) {
    
#line 2676 
    __retres = -22;
    
#line 2676 
    goto return_label;
  }
  else ;
  
#line 2678 
  err = team_nl_send_port_list_get(team,info->snd_portid,info->snd_seq,4,& team_nl_send_unicast,(struct team_port *)0);
  
#line 2681 
  team_nl_team_put(team);
  
#line 2683 
  __retres = err;
  return_label: 
#line 2683 
                return __retres;
}


#line 2686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct genl_ops const team_nl_ops[4U] = {{.policy = (struct nla_policy const *)(& team_nl_policy), .doit = & team_nl_cmd_noop, .dumpit = (int (*)(struct sk_buff *, struct netlink_callback *))0, .done = (int (*)(struct netlink_callback *))0, .cmd = (unsigned char)0U, .internal_flags = (unsigned char)0, .flags = (unsigned char)0}, {.policy = (struct nla_policy const *)(& team_nl_policy), .doit = & team_nl_cmd_options_set, .dumpit = (int (*)(struct sk_buff *, struct netlink_callback *))0, .done = (int (*)(struct netlink_callback *))0, .cmd = (unsigned char)1U, .internal_flags = (unsigned char)0, .flags = (unsigned char)1U}, {.policy = (struct nla_policy const *)(& team_nl_policy), .doit = & team_nl_cmd_options_get, .dumpit = (int (*)(struct sk_buff *, struct netlink_callback *))0, .done = (int (*)(struct netlink_callback *))0, .cmd = (unsigned char)2U, .internal_flags = (unsigned char)0, .flags = (unsigned char)1U}, {.policy = (struct nla_policy const *)(& team_nl_policy), .doit = & team_nl_cmd_port_list_get, .dumpit = (int (*)(struct sk_buff *, struct netlink_callback *))0, .done = (int (*)(struct netlink_callback *))0, .cmd = (unsigned char)3U, .internal_flags = (unsigned char)0, .flags = (unsigned char)1U}};

#line 2712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct genl_multicast_group const team_nl_mcgrps[1U] = {{.name = {(char)'c', (char)'h', (char)'a', (char)'n', (char)'g', (char)'e', (char)'_', (char)'e', (char)'v', (char)'e', (char)'n', (char)'t', (char)'\000'}}};

#line 2716  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_multicast(struct sk_buff *skb, struct team *team, u32 portid)
{
  int tmp_0;
  struct net *tmp;
  
#line 2719 
  ;
  
#line 2719 
  tmp = dev_net((struct net_device const *)team->dev);
  
#line 2719 
  tmp_0 = genlmsg_multicast_netns(& team_nl_family,tmp,skb,0U,0U,208U);
  
#line 2719 
  return tmp_0;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_event_options_get(struct team *team, struct list_head *sel_opt_inst_list)
{
  int tmp;
  
#line 2726 
  tmp = team_nl_send_options_get(team,0U,0U,0,& team_nl_send_multicast,sel_opt_inst_list);
  
#line 2726 
  return tmp;
}


#line 2730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_send_event_port_get(struct team *team, struct team_port *port)
{
  int tmp;
  
#line 2733 
  tmp = team_nl_send_port_list_get(team,0U,0U,0,& team_nl_send_multicast,port);
  
#line 2733 
  return tmp;
}


#line 2737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_nl_init(void)
{
  int tmp;
  
#line 2739 
  tmp = _genl_register_family_with_ops_grps(& team_nl_family,(struct genl_ops const *)(& team_nl_ops),4UL,(struct genl_multicast_group const *)(& team_nl_mcgrps),1UL);
  
#line 2739 
  return tmp;
}


#line 2743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_nl_fini(void)
{
  
#line 2745 
  genl_unregister_family(& team_nl_family);
  
#line 2746 
  return;
}


#line 2753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_options_change_check(struct team *team)
{
  int err;
  struct team_option_inst *opt_inst;
  struct team_option_inst *tmp;
  struct team_option_inst *tmp_0;
  
#line 2757 
  struct list_head sel_opt_inst_list = {.next = & sel_opt_inst_list, .prev = & sel_opt_inst_list};
  {
    
#line 2759 
    struct list_head const *__mptr = (struct list_head const *)team->option_inst_list.next;
    
#line 2759 
    tmp = (struct team_option_inst *)__mptr;
  }
  
#line 2759 
  opt_inst = tmp;
  
#line 2759 
  goto ldv_49496;
  ldv_49495: 
#line 2760 
  ;
  
#line 2760 
  if ((int)opt_inst->changed != 0) 
#line 2761 
                                   list_add_tail(& opt_inst->tmp_list,& sel_opt_inst_list); else ;
  {
    
#line 2759 
    struct list_head const *__mptr_0 = (struct list_head const *)opt_inst->list.next;
    
#line 2759 
    tmp_0 = (struct team_option_inst *)__mptr_0;
  }
  
#line 2759 
  opt_inst = tmp_0;
  ldv_49496: 
#line 2761 
  ;
  
#line 2759 
  if (& opt_inst->list != & team->option_inst_list) 
#line 2761 
                                                    goto ldv_49495; else 
                                                                    
#line 2764 
                                                                    goto ldv_49497;
  ldv_49497: 
#line 2765 
  ;
  
#line 2763 
  err = team_nl_send_event_options_get(team,& sel_opt_inst_list);
  
#line 2764 
  if (err != 0 && err != -3) 
#line 2765 
                             netdev_warn((struct net_device const *)team->dev,"Failed to send options change via netlink (err %d)\n",err); else ;
  
#line 2766 
  return;
}


#line 2771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_port_change_send(struct team_port *port, bool linkup)
{
  int err;
  
#line 2775 
  port->changed = (_Bool)1;
  
#line 2776 
  port->state.linkup = linkup;
  
#line 2777 
  team_refresh_port_linkup(port);
  
#line 2778 
  if ((int)linkup != 0) {
    struct ethtool_cmd ecmd;
    
#line 2781 
    err = __ethtool_get_settings(port->dev,& ecmd);
    
#line 2782 
    if (err == 0) {
      
#line 2783 
      port->state.speed = ethtool_cmd_speed((struct ethtool_cmd const *)(& ecmd));
      
#line 2784 
      port->state.duplex = ecmd.duplex;
      
#line 2785 
      goto send_event;
    }
    else ;
  }
  else ;
  
#line 2788 
  port->state.speed = 0U;
  
#line 2789 
  port->state.duplex = (unsigned char)0U;
  send_event: 
#line 2791 
  ;
  
#line 2792 
  err = team_nl_send_event_port_get(port->team,port);
  
#line 2793 
  if (err != 0 && err != -3) 
#line 2794 
                             netdev_warn((struct net_device const *)(port->team)->dev,"Failed to send port change of device %s via netlink (err %d)\n",(char *)(& (port->dev)->name),err); else ;
  
#line 2796 
  return;
}


#line 2799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_carrier_check(struct team *team)
{
  struct team_port *port;
  bool team_linkup;
  struct team_port *tmp;
  struct team_port *tmp_0;
  
#line 2804 
  if ((int)team->user_carrier_enabled != 0) 
#line 2805 
                                            goto return_label; else ;
  
#line 2807 
  team_linkup = (_Bool)0;
  {
    
#line 2808 
    struct list_head const *__mptr = (struct list_head const *)team->port_list.next;
    
#line 2808 
    tmp = (struct team_port *)__mptr + 18446744073709551592U;
  }
  
#line 2808 
  port = tmp;
  
#line 2808 
  goto ldv_49516;
  ldv_49515: 
#line 2809 
  ;
  
#line 2809 
  if ((int)port->linkup != 0) {
    
#line 2810 
    team_linkup = (_Bool)1;
    
#line 2811 
    goto ldv_49514;
  }
  else ;
  {
    
#line 2808 
    struct list_head const *__mptr_0 = (struct list_head const *)port->list.next;
    
#line 2808 
    tmp_0 = (struct team_port *)__mptr_0 + 18446744073709551592U;
  }
  
#line 2808 
  port = tmp_0;
  ldv_49516: 
#line 2810 
  ;
  
#line 2808 
  if (& port->list != & team->port_list) 
#line 2810 
                                         goto ldv_49515; else 
#line 2813 
                                                              goto ldv_49514;
  ldv_49514: 
#line 2814 
  ;
  
#line 2815 
  if ((int)team_linkup != 0) 
#line 2816 
                             netif_carrier_on(team->dev); else 
#line 2818 
                                                               netif_carrier_off(team->dev);
  return_label: 
#line 2819 
                return;
}


#line 2821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_port_change_check(struct team_port *port, bool linkup)
{
  
#line 2823 
  if ((int)port->state.linkup != (int)linkup) 
#line 2824 
                                              __team_port_change_send(port,(_Bool)((bool)((int)linkup) != 0)); else ;
  
#line 2825 
  __team_carrier_check(port->team);
  
#line 2826 
  return;
}


#line 2828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_port_change_port_added(struct team_port *port, bool linkup)
{
  
#line 2830 
  __team_port_change_send(port,(_Bool)((bool)((int)linkup) != 0));
  
#line 2831 
  __team_carrier_check(port->team);
  
#line 2832 
  return;
}


#line 2834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void __team_port_change_port_removed(struct team_port *port)
{
  
#line 2836 
  port->removed = (_Bool)1;
  
#line 2837 
  __team_port_change_send(port,(_Bool)0);
  
#line 2838 
  __team_carrier_check(port->team);
  
#line 2839 
  return;
}


#line 2841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_port_change_check(struct team_port *port, bool linkup)
{
  
#line 2843 
  struct team *team = port->team;
  
#line 2845 
  ldv_mutex_lock_115(& team->lock);
  
#line 2846 
  __team_port_change_check(port,(_Bool)((bool)((int)linkup) != 0));
  
#line 2847 
  ldv_mutex_unlock_116(& team->lock);
  
#line 2848 
  return;
}


#line 2855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_device_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  int __retres;
  struct team_port *port;
  
#line 2858 
  struct net_device *dev = netdev_notifier_info_to_dev((struct netdev_notifier_info const *)ptr);
  
#line 2861 
  port = team_port_get_rtnl((struct net_device const *)dev);
  
#line 2862 
  if (port == (struct team_port *)0) {
    
#line 2863 
    __retres = 0;
    
#line 2863 
    goto return_label;
  }
  else ;
  
#line 2865 
  switch (event) {
    bool tmp_0;
    bool tmp_2;
    case (unsigned long)1: 
#line 2866 
    ;
    
#line 2867 
    tmp_0 = netif_carrier_ok((struct net_device const *)dev);
    
#line 2867 
    if ((int)tmp_0 != 0) 
#line 2868 
                         team_port_change_check(port,(_Bool)1); else ;
    
#line 2869 
    goto ldv_49541;
    case (unsigned long)2: 
#line 2870 
    ;
    
#line 2871 
    team_port_change_check(port,(_Bool)0);
    
#line 2872 
    goto ldv_49541;
    case (unsigned long)4: 
#line 2873 
    ;
    
#line 2874 
    tmp_2 = netif_running((struct net_device const *)port->dev);
    
#line 2874 
    if ((int)tmp_2 != 0) {
      bool tmp_1;
      
#line 2875 
      tmp_1 = netif_carrier_ok((struct net_device const *)port->dev);
      
#line 2875 
      ;
      
#line 2875 
      team_port_change_check(port,(_Bool)((int)tmp_1 != 0));
    }
    else ;
    
#line 2877 
    goto ldv_49541;
    case (unsigned long)6: 
#line 2878 
    ;
    
#line 2879 
    team_del_slave((port->team)->dev,dev);
    
#line 2880 
    goto ldv_49541;
    case (unsigned long)11: 
#line 2881 
    ;
    
#line 2882 
    team_compute_features(port->team);
    
#line 2883 
    goto ldv_49541;
    case (unsigned long)23: 
#line 2884 
    ;
    
#line 2886 
    if (! (port->team)->port_mtu_change_allowed) {
      
#line 2887 
      __retres = 32770;
      
#line 2887 
      goto return_label;
    }
    else ;
    
#line 2888 
    goto ldv_49541;
    case (unsigned long)14: 
#line 2889 
    ;
    
#line 2891 
    __retres = 32770;
    
#line 2891 
    goto return_label;
    case (unsigned long)22: 
#line 2892 
    ;
    
#line 2894 
    call_netdevice_notifiers(event,(port->team)->dev);
    
#line 2895 
    goto ldv_49541;
  }
  ldv_49541: 
#line 2897 
  ;
  
#line 2897 
  __retres = 0;
  return_label: 
#line 2897 
                return __retres;
}


#line 2900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static struct notifier_block team_notifier_block = {.notifier_call = & team_device_event, .next = (struct notifier_block *)0, .priority = 0};

#line 2909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static int team_module_init(void)
{
  int __retres;
  int err;
  
#line 2913 
  register_netdevice_notifier(& team_notifier_block);
  
#line 2915 
  err = rtnl_link_register(& team_link_ops);
  
#line 2916 
  if (err != 0) 
#line 2917 
                goto err_rtnl_reg; else ;
  
#line 2919 
  err = team_nl_init();
  
#line 2920 
  if (err != 0) 
#line 2921 
                goto err_nl_init; else ;
  
#line 2923 
  __retres = 0;
  
#line 2923 
  goto return_label;
  err_nl_init: 
#line 2925 
  ;
  
#line 2926 
  rtnl_link_unregister(& team_link_ops);
  err_rtnl_reg: 
#line 2928 
  ;
  
#line 2929 
  unregister_netdevice_notifier(& team_notifier_block);
  
#line 2931 
  __retres = err;
  return_label: 
#line 2931 
                return __retres;
}


#line 2934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/team/team.c"
static void team_module_exit(void)
{
  
#line 2936 
  team_nl_fini();
  
#line 2937 
  rtnl_link_unregister(& team_link_ops);
  
#line 2938 
  unregister_netdevice_notifier(& team_notifier_block);
  
#line 2939 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);


#line 57 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
int ldv_emg_team_module_init(void)
{
  int tmp;
  
#line 62 
  tmp = team_module_init();
  
#line 62 
  return tmp;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
void ldv_emg_team_module_exit(void)
{
  
#line 66 
  team_module_exit();
  
#line 67 
  return;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void atomic_add(int i, atomic_t *v)
{
  
#line 105 
  ldv_atomic_add(i,v);
  
#line 106 
  return;
}


#line 438  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 441 
  tmp = ldv_kmalloc(size,flags);
  
#line 441 
  return tmp;
}


#line 459  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 462 
  tmp = ldv_kzalloc(size,flags);
  
#line 462 
  return tmp;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_lock_78(spinlock_t *lock)
{
  
#line 804 
  ldv_spin_model_lock((char *)"mode_list_lock");
  
#line 806 
  spin_lock(lock);
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_unlock_79(spinlock_t *lock)
{
  
#line 814 
  ldv_spin_model_unlock((char *)"mode_list_lock");
  
#line 816 
  spin_unlock(lock);
  
#line 817 
  return;
}


#line 820  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 824 
  ldv_spin_model_lock((char *)"mode_list_lock");
  
#line 826 
  spin_lock(lock);
  
#line 827 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 834 
  ldv_spin_model_unlock((char *)"mode_list_lock");
  
#line 836 
  spin_unlock(lock);
  
#line 837 
  return;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_lock_82(spinlock_t *lock)
{
  
#line 844 
  ldv_spin_model_lock((char *)"mode_list_lock");
  
#line 846 
  spin_lock(lock);
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_unlock_83(spinlock_t *lock)
{
  
#line 854 
  ldv_spin_model_unlock((char *)"mode_list_lock");
  
#line 856 
  spin_unlock(lock);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_lock_84(spinlock_t *lock)
{
  
#line 864 
  ldv_spin_model_lock((char *)"mode_list_lock");
  
#line 866 
  spin_lock(lock);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_spin_unlock_85(spinlock_t *lock)
{
  
#line 874 
  ldv_spin_model_unlock((char *)"mode_list_lock");
  
#line 876 
  spin_unlock(lock);
  
#line 877 
  return;
}


#line 880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_86(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 884 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 884 
  __retres = tmp != 0;
  
#line 884 
  return __retres;
}


#line 888  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_87(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 892 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 892 
  __retres = tmp != 0;
  
#line 892 
  return __retres;
}


#line 896  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_88(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 900 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 900 
  __retres = tmp != 0;
  
#line 900 
  return __retres;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_89(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 908 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 908 
  __retres = tmp != 0;
  
#line 908 
  return __retres;
}


#line 912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_90(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 916 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 916 
  __retres = tmp != 0;
  
#line 916 
  return __retres;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static bool ldv_schedule_delayed_work_91(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 924 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 924 
  __retres = tmp != 0;
  
#line 924 
  return __retres;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1)
{
  
#line 932 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 933 
  return;
}


#line 936  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 940 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1)
{
  
#line 948 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 949 
  return;
}


#line 952  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1)
{
  
#line 956 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 957 
  return;
}


#line 960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_free_netdev_96(struct net_device *ldv_func_arg1)
{
  
#line 964 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 965 
  return;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_97(struct mutex *ldv_func_arg1)
{
  
#line 972 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 973 
  return;
}


#line 976  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1)
{
  
#line 980 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 981 
  return;
}


#line 984  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_99(struct mutex *ldv_func_arg1)
{
  
#line 988 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 989 
  return;
}


#line 992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_100(struct mutex *ldv_func_arg1)
{
  
#line 996 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1)
{
  
#line 1004 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1005 
  return;
}


#line 1008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1)
{
  
#line 1012 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1)
{
  
#line 1020 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_104(struct mutex *ldv_func_arg1)
{
  
#line 1028 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1029 
  return;
}


#line 1032  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_105(struct mutex *ldv_func_arg1)
{
  
#line 1036 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1037 
  return;
}


#line 1040  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1)
{
  
#line 1044 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1045 
  return;
}


#line 1048  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1)
{
  
#line 1052 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1)
{
  
#line 1060 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1061 
  return;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_109(struct mutex *ldv_func_arg1)
{
  
#line 1068 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1069 
  return;
}


#line 1072  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_110(struct mutex *ldv_func_arg1)
{
  
#line 1076 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1077 
  return;
}


#line 1080  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_111(struct mutex *ldv_func_arg1)
{
  
#line 1084 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1085 
  return;
}


#line 1088  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1)
{
  
#line 1092 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1093 
  return;
}


#line 1096  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1)
{
  
#line 1100 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1101 
  return;
}


#line 1104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1)
{
  
#line 1108 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1109 
  return;
}


#line 1112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1)
{
  
#line 1116 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1117 
  return;
}


#line 1120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/weaver/.tmp_team.c.aux"
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1)
{
  
#line 1124 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_team");
  
#line 1125 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0);


#line 20 
int main(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  _Bool __retres;
  struct work_struct *ldv_3_ldv_param_0_2;
  struct delayed_work *ldv_3_delayed_work;
  int tmp_0;
  
#line 32 
  tmp_0 = ldv_undef_int();
  
#line 32 
  if (tmp_0 != 0) {
    
#line 34 
    ldv_3_delayed_work = arg0;
    
#line 38 
    ldv_3_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 42 
    if (ldv_3_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 44 
      (*(ldv_3_delayed_work->work.func))(ldv_3_ldv_param_0_2); else ;
    
#line 49 
    ldv_free((void *)ldv_3_ldv_param_0_2);
    
#line 53 
    __retres = (_Bool)1;
    
#line 53 
    goto return_label;
  }
  else {
    
#line 60 
    __retres = (_Bool)0;
    
#line 60 
    goto return_label;
  }
  return_label: 
#line 32 
                return __retres;
}


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 76 
  ldv_2_netdev = arg0;
  
#line 77 
  ldv_free((void *)ldv_2_netdev);
  
#line 81 
  goto return_label;
  return_label: 
#line 83 
                return;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 95 
  ldv_1_ret = ldv_emg_team_module_init();
  
#line 96 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 99 
  tmp = ldv_undef_int();
  
#line 99 
  if (tmp != 0) {
    
#line 101 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 105 
    __retres = (void *)0;
    
#line 105 
    goto return_label;
  }
  else {
    
#line 109 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 114 
    ldv_emg_team_module_exit();
    
#line 118 
    __retres = (void *)0;
    
#line 118 
    goto return_label;
  }
  
#line 121 
  __retres = (void *)0;
  return_label: 
#line 121 
                return __retres;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/team/team.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 129 
  ldv_initialize();
  
#line 132 
  ldv_initialization_1((void *)0);
  
#line 134 
  __retres = 0;
  
#line 134 
  return __retres;
}


