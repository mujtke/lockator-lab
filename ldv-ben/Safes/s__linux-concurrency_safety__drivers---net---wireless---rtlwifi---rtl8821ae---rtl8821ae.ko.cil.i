/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s16 int16_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct inode;

#line 34 
struct dentry;

#line 35 
struct user_namespace;

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_46 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_46 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_47 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_47 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_49 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_48 {
   struct __anonstruct_49 __anonCompField___anonunion_48_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_48 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_55 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_56 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_54 {
   struct __anonstruct_55 __anonCompField___anonunion_54_23 ;
   struct __anonstruct_56 __anonCompField___anonunion_54_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_54 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_57 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_57 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_60 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   atomic_t _mapcount ;
   struct __anonstruct_64 __anonCompField___anonunion_63_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   union __anonunion_63 __anonCompField___anonstruct_62_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   unsigned long counters ;
   struct __anonstruct_62 __anonCompField___anonunion_61_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_59 {
   union __anonunion_60 __anonCompField___anonstruct_59_27 ;
   union __anonunion_61 __anonCompField___anonstruct_59_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_66 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_67 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_65 {
   struct list_head lru ;
   struct __anonstruct_66 __anonCompField___anonunion_65_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_67 __anonCompField___anonunion_65_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_68 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_58 __anonCompField_page_26 ;
   struct __anonstruct_59 __anonCompField_page_32 ;
   union __anonunion_65 __anonCompField_page_35 ;
   union __anonunion_68 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_69 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_69 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 14 
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_161 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_161 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_162 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_162 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_163 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_163 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_165 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_166 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_167 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_170 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_169 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_170 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_171 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_172 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_164 {
   int _pad[28U] ;
   struct __anonstruct__kill_165 _kill ;
   struct __anonstruct__timer_166 _timer ;
   struct __anonstruct__rt_167 _rt ;
   struct __anonstruct__sigchld_168 _sigchld ;
   struct __anonstruct__sigfault_169 _sigfault ;
   struct __anonstruct__sigpoll_171 _sigpoll ;
   struct __anonstruct__sigsys_172 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_164 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_179 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_182 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   struct keyring_index_key index_key ;
   struct __anonstruct_182 __anonCompField___anonunion_181_49 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_183 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_185 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_184 {
   union __anonunion_payload_185 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_179 __anonCompField_key_47 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_180 __anonCompField_key_48 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_181 __anonCompField_key_50 ;
   union __anonunion_type_data_183 type_data ;
   union __anonunion_184 __anonCompField_key_51 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_186 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_186 __anonCompField_idr_layer_52 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_203 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_203 __anonCompField_iov_iter_54 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_17242 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_17242 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct net;

#line 72 
struct fasync_struct;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22414 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22414 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_226 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_226 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_227 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_227 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_228 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_228 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_229 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_229 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_230 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_230 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_231 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_231 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_232 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_232 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_233 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_233 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_234 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_235 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_234 ifr_ifrn ;
   union __anonunion_ifr_ifru_235 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_240 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_73 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_239 __anonCompField_lockref_74 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_242 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_241 {
   struct __anonstruct_242 __anonCompField___anonunion_241_75 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_241 __anonCompField_qstr_76 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_243 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_243 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_247 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_77 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_246 __anonCompField_radix_tree_node_78 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_251 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_251 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_252 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_252 __anonCompField_kqid_80 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_255 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_256 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_257 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_255 __anonCompField_inode_81 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_256 __anonCompField_inode_82 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_257 __anonCompField_inode_83 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_258 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_258 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_260 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_259 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_260 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_259 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27980 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27980 phy_interface_t;

#line 126 
enum ldv_28033 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28033 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29745 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29746 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29745 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29746 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
};

#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
};

#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
};

#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
};

#line 751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
};

#line 801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
};

#line 811  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
};

#line 840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
};

#line 905 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5
};

#line 914 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
struct usb_device;

#line 284 
struct wusb_dev;

#line 285 
struct ep_device;

#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};

#line 92 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sysfs_files_created : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ep_devs_created : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) unregistering : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_remote_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_altsetting0 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_binding : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) resetting_device : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   atomic_t pm_usage_cnt ;
   struct work_struct reset_ws ;
};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
};

#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};

#line 344 
struct mon_bus;

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   int busnum ;
   char const *bus_name ;
   u8 uses_dma ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_b_host : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) b_hnp_enable : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_stop_on_short : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   struct list_head bus_list ;
   struct mutex usb_address0_mutex ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};

#line 395 
struct usb_tt;

#line 396 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};

#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_submit : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) persist_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) have_langid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) authorized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) authenticated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wusb : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) lpm_capable : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) usb2_hw_lpm_capable : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) usb2_hw_lpm_besl_capable : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) usb2_hw_lpm_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) usb2_hw_lpm_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) usb3_lpm_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) do_remote_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
};

#line 1200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};

#line 1242 
struct urb;

#line 1243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) poisoned : 1 ;
};

#line 1262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/usb.h"
struct urb {
   struct kref kref ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   int unlinked ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
};

#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2600 
enum nl80211_channel_type {
    NL80211_CHAN_NO_HT = 0,
    NL80211_CHAN_HT20 = 1,
    NL80211_CHAN_HT40MINUS = 2,
    NL80211_CHAN_HT40PLUS = 3
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3596 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_355 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_355 wext ;
};

#line 5244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};

#line 229 
struct ieee80211_vif;

#line 407 
struct ieee80211_sta;

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 const *bssid ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[3U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   struct cfg80211_chan_def chandef ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
};

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) count : 5 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) flags : 11 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_360 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_rts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_cts_prot : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) short_preamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skip_table : 1 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_359 {
   struct __anonstruct_360 __anonCompField___anonunion_359_95 ;
   unsigned long jiffies ;
};

#line 819 
struct ieee80211_key_conf;

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_control_358 {
   union __anonunion_359 __anonCompField___anonstruct_control_358_96 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ack_361 {
   u64 cookie ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_status_362 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   void *status_driver_data[2U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_363 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_357 {
   struct __anonstruct_control_358 control ;
   struct __anonstruct_ack_361 ack ;
   struct __anonstruct_status_362 status ;
   struct __anonstruct_363 __anonCompField___anonunion_357_97 ;
   void *driver_data[5U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id ;
   union __anonunion_357 __anonCompField_ieee80211_tx_info_98 ;
};

#line 923 
struct ieee80211_rx_status;

#line 997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 vht_flag ;
   u8 rate_idx ;
   u8 vht_nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
};

#line 1174 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   int max_sleep_period ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};

#line 1316 
struct ieee80211_txq;

#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   u8 drv_priv[0U] ;
};

#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   u8 flags ;
   s8 keyidx ;
   u8 keylen ;
   u8 key[0U] ;
};

#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};

#line 1590 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_rate_371 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_371 rate[4U] ;
};

#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[3U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   struct ieee80211_txq *txq[16U] ;
   u8 drv_priv[0U] ;
};

#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};

#line 1781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char const *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u8 max_rx_aggregation_subframes ;
   u8 max_tx_aggregation_subframes ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme const *cipher_schemes ;
   int txq_ac_max_pending ;
};

#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
enum intf_type {
    INTF_PCI = 0,
    INTF_USB = 1
};

#line 260 
enum radio_path {
    RF90_PATH_A = 0,
    RF90_PATH_B = 1,
    RF90_PATH_C = 2,
    RF90_PATH_D = 3
};

#line 312 
enum rf_pwrstate {
    ERFON = 0,
    ERFSLEEP = 1,
    ERFOFF = 2
};

#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct bb_reg_def {
   u32 rfintfs ;
   u32 rfintfi ;
   u32 rfintfo ;
   u32 rfintfe ;
   u32 rf3wire_offset ;
   u32 rflssi_select ;
   u32 rftxgain_stage ;
   u32 rfhssi_para1 ;
   u32 rfhssi_para2 ;
   u32 rfsw_ctrl ;
   u32 rfagc_control1 ;
   u32 rfagc_control2 ;
   u32 rfrxiq_imbal ;
   u32 rfrx_afe ;
   u32 rftxiq_imbal ;
   u32 rftx_afe ;
   u32 rf_rb ;
   u32 rf_rbpi ;
};

#line 374 
enum io_type {
    IO_CMD_PAUSE_DM_BY_SCAN = 0,
    IO_CMD_PAUSE_BAND0_DM_BY_SCAN = 0,
    IO_CMD_PAUSE_BAND1_DM_BY_SCAN = 1,
    IO_CMD_RESUME_DM_BY_SCAN = 2
};

#line 483 
enum rt_media_status {
    RT_MEDIA_DISCONNECT = 0,
    RT_MEDIA_CONNECT = 1
};

#line 558 
enum rt_enc_alg {
    NO_ENCRYPTION = 0,
    WEP40_ENCRYPTION = 1,
    TKIP_ENCRYPTION = 2,
    RSERVED_ENCRYPTION = 3,
    AESCCMP_ENCRYPTION = 4,
    WEP104_ENCRYPTION = 5,
    AESCMAC_ENCRYPTION = 6
};

#line 734 
enum rt_psmode {
    EACTIVE = 0,
    EMAXPS = 1,
    EFASTPS = 2,
    EAUTOPS = 3
};

#line 741 
enum led_ctl_mode {
    LED_CTL_POWER_ON = 1,
    LED_CTL_LINK = 2,
    LED_CTL_NO_LINK = 3,
    LED_CTL_TX = 4,
    LED_CTL_RX = 5,
    LED_CTL_SITE_SURVEY = 6,
    LED_CTL_POWER_OFF = 7,
    LED_CTL_START_TO_LINK = 8,
    LED_CTL_START_WPS = 9,
    LED_CTL_STOP_WPS = 10
};

#line 767 
enum macphy_mode {
    SINGLEMAC_SINGLEPHY = 0,
    DUALMAC_DUALPHY = 1,
    DUALMAC_SINGLEPHY = 2
};

#line 773 
enum band_type {
    BAND_ON_2_4G = 0,
    BAND_ON_5G = 1,
    BAND_ON_BOTH = 2,
    BANDMAX = 3
};

#line 851 
enum rtl_link_state {
    MAC80211_NOLINK = 0,
    MAC80211_LINKING = 1,
    MAC80211_LINKED = 2,
    MAC80211_LINKED_SCANNING = 3
};

#line 872 
enum rt_polarity_ctl {
    RT_POLARITY_LOW_ACT = 0,
    RT_POLARITY_HIGH_ACT = 1
};

#line 958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_qos_parameters {
   __le16 cw_min ;
   __le16 cw_max ;
   u8 aifs ;
   u8 flag ;
   __le16 tx_op ;
};

#line 966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rt_smooth_data {
   u32 elements[100U] ;
   u32 index ;
   u32 total_num ;
   u32 total_val ;
};

#line 973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct false_alarm_statistics {
   u32 cnt_parity_fail ;
   u32 cnt_rate_illegal ;
   u32 cnt_crc8_fail ;
   u32 cnt_mcs_fail ;
   u32 cnt_fast_fsync_fail ;
   u32 cnt_sb_search_fail ;
   u32 cnt_ofdm_fail ;
   u32 cnt_cck_fail ;
   u32 cnt_all ;
   u32 cnt_ofdm_cca ;
   u32 cnt_cck_cca ;
   u32 cnt_cca_all ;
   u32 cnt_bw_usc ;
   u32 cnt_bw_lsc ;
};

#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct init_gain {
   u8 xaagccore1 ;
   u8 xbagccore1 ;
   u8 xcagccore1 ;
   u8 xdagccore1 ;
   u8 cca ;
};

#line 998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct wireless_stats {
   unsigned long txbytesunicast ;
   unsigned long txbytesmulticast ;
   unsigned long txbytesbroadcast ;
   unsigned long rxbytesunicast ;
   long rx_snr_db[4U] ;
   long recv_signal_power ;
   long signal_quality ;
   long last_sigstrength_inpercent ;
   u32 rssi_calculate_cnt ;
   u32 pwdb_all_cnt ;
   long signal_strength ;
   u8 rx_rssi_percentage[4U] ;
   u8 rx_evm_dbm[4U] ;
   u8 rx_evm_percentage[2U] ;
   u16 rx_cfo_short[4U] ;
   u16 rx_cfo_tail[4U] ;
   struct rt_smooth_data ui_rssi ;
   struct rt_smooth_data ui_link_quality ;
};

#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rate_adaptive {
   u8 rate_adaptive_disabled ;
   u8 ratr_state ;
   u16 reserve ;
   u32 high_rssi_thresh_for_ra ;
   u32 high2low_rssi_thresh_for_ra ;
   u8 low2high_rssi_thresh_for_ra40m ;
   u32 low_rssi_thresh_for_ra40m ;
   u8 low2high_rssi_thresh_for_ra20m ;
   u32 low_rssi_thresh_for_ra20m ;
   u32 upper_rssi_threshold_ratr ;
   u32 middleupper_rssi_threshold_ratr ;
   u32 middle_rssi_threshold_ratr ;
   u32 middlelow_rssi_threshold_ratr ;
   u32 low_rssi_threshold_ratr ;
   u32 ultralow_rssi_threshold_ratr ;
   u32 low_rssi_threshold_ratr_40m ;
   u32 low_rssi_threshold_ratr_20m ;
   u8 ping_rssi_enable ;
   u32 ping_rssi_ratr ;
   u32 ping_rssi_thresh_for_ra ;
   u32 last_ratr ;
   u8 pre_ratr_state ;
   u8 ldpc_thres ;
   bool use_ldpc ;
   bool lower_rts_rate ;
   bool is_special_data ;
};

#line 1060  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct regd_pair_mapping {
   u16 reg_dmnenum ;
   u16 reg_5ghz_ctl ;
   u16 reg_2ghz_ctl ;
};

#line 1066  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct dynamic_primary_cca {
   u8 pricca_flag ;
   u8 intf_flag ;
   u8 intf_type ;
   u8 dup_rts_flag ;
   u8 monitor_flag ;
   u8 ch_offset ;
   u8 mf_state ;
};

#line 1076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_regulatory {
   char alpha2[2U] ;
   u16 country_code ;
   u16 max_power_level ;
   u32 tp_scale ;
   u16 current_rd ;
   u16 current_rd_ext ;
   int16_t power_limit ;
   struct regd_pair_mapping *regpair ;
};

#line 1087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_rfkill {
   bool rfkill_state ;
};

#line 1098 
enum p2p_ps_state {
    P2P_PS_DISABLE = 0,
    P2P_PS_ENABLE = 1,
    P2P_PS_SCAN = 2,
    P2P_PS_SCAN_DONE = 3,
    P2P_PS_ALLSTASLEEP = 4
};

#line 1106 
enum p2p_ps_mode {
    P2P_PS_NONE = 0,
    P2P_PS_CTWINDOW = 1,
    P2P_PS_NOA = 2,
    P2P_PS_MIX = 3
};

#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_p2p_ps_info {
   enum p2p_ps_mode p2p_ps_mode ;
   enum p2p_ps_state p2p_ps_state ;
   u8 noa_index ;
   u8 ctwindow ;
   u8 opp_ps ;
   u8 noa_num ;
   u8 noa_count_type[2U] ;
   u32 noa_duration[2U] ;
   u32 noa_interval[2U] ;
   u32 noa_start_time[2U] ;
};

#line 1138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct p2p_ps_offload_t {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offload_en : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) role : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ctwindow_en : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) noa0_en : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) noa1_en : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) allstasleep : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) discovery : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved : 1 ;
};

#line 1149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct iqk_matrix_regs {
   bool iqk_done ;
   long value[1U][8U] ;
};

#line 1157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct phy_parameters {
   u16 length ;
   u32 *pdata ;
};

#line 1176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_phy {
   struct bb_reg_def phyreg_def[4U] ;
   struct init_gain initgain_backup ;
   enum io_type current_io_type ;
   u8 rf_mode ;
   u8 rf_type ;
   u8 current_chan_bw ;
   u8 set_bwmode_inprogress ;
   u8 sw_chnl_inprogress ;
   u8 sw_chnl_stage ;
   u8 sw_chnl_step ;
   u8 current_channel ;
   u8 h2c_box_num ;
   u8 set_io_inprogress ;
   u8 lck_inprogress ;
   s32 reg_e94 ;
   s32 reg_e9c ;
   s32 reg_ea4 ;
   s32 reg_eac ;
   s32 reg_eb4 ;
   s32 reg_ebc ;
   s32 reg_ec4 ;
   s32 reg_ecc ;
   u8 rfpienable ;
   u8 reserve_0 ;
   u16 reserve_1 ;
   u32 reg_c04 ;
   u32 reg_c08 ;
   u32 reg_874 ;
   u32 adda_backup[16U] ;
   u32 iqk_mac_backup[4U] ;
   u32 iqk_bb_backup[10U] ;
   bool iqk_initialized ;
   bool rfpath_rx_enable[4U] ;
   u8 reg_837 ;
   bool need_iqk ;
   struct iqk_matrix_regs iqk_matrix[46U] ;
   bool rfpi_enable ;
   bool iqk_in_progress ;
   u8 pwrgroup_cnt ;
   u8 cck_high_power ;
   u32 mcs_txpwrlevel_origoffset[13U][16U] ;
   u32 mcs_offset[13U][16U] ;
   u32 tx_power_by_rate_offset[2U][4U][4U][12U] ;
   u8 txpwr_by_rate_base_24g[4U][4U][6U] ;
   u8 txpwr_by_rate_base_5g[4U][4U][5U] ;
   u8 default_initialgain[4U] ;
   u8 cur_cck_txpwridx ;
   u8 cur_ofdm24g_txpwridx ;
   u8 cur_bw20_txpwridx ;
   u8 cur_bw40_txpwridx ;
   char txpwr_limit_2_4g[4U][4U][6U][14U][4U] ;
   char txpwr_limit_5g[4U][4U][6U][54U][4U] ;
   u32 rfreg_chnlval[2U] ;
   bool apk_done ;
   u32 reg_rf3c[2U] ;
   u32 backup_rf_0x1a ;
   u8 framesync ;
   u32 framesync_c34 ;
   u8 num_total_rfpath ;
   struct phy_parameters hwparam_tables[10U] ;
   u16 rf_pathmap ;
   u8 hw_rof_enable ;
   enum rt_polarity_ctl polarity_ctl ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_ht_agg {
   u16 txq_id ;
   u16 wait_for_ba ;
   u16 start_idx ;
   u64 bitmap ;
   u32 rate_n_flags ;
   u8 agg_state ;
   u8 rx_agg_state ;
};

#line 1294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rssi_sta {
   long undec_sm_pwdb ;
   long undec_sm_cck ;
};

#line 1299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_tid_data {
   u16 seq_number ;
   struct rtl_ht_agg agg ;
};

#line 1304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_sta_info {
   struct list_head list ;
   u8 ratr_index ;
   u8 wireless_mode ;
   u8 mimo_ps ;
   u8 mac_addr[6U] ;
   struct rtl_tid_data tids[9U] ;
   struct rssi_sta rssi_stat ;
};

#line 1316 
struct rtl_priv;

#line 1317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_io {
   struct device *dev ;
   struct mutex bb_mutex ;
   unsigned long pci_mem_end ;
   unsigned long pci_mem_start ;
   unsigned long pci_base_addr ;
   void (*write8_async)(struct rtl_priv *, u32 , u8 ) ;
   void (*write16_async)(struct rtl_priv *, u32 , u16 ) ;
   void (*write32_async)(struct rtl_priv *, u32 , u32 ) ;
   void (*writeN_sync)(struct rtl_priv *, u32 , void *, u16 ) ;
   u8 (*read8_sync)(struct rtl_priv *, u32 ) ;
   u16 (*read16_sync)(struct rtl_priv *, u32 ) ;
   u32 (*read32_sync)(struct rtl_priv *, u32 ) ;
};

#line 1339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_mac {
   u8 mac_addr[6U] ;
   u8 mac80211_registered ;
   u8 beacon_enabled ;
   u32 tx_ss_num ;
   u32 rx_ss_num ;
   struct ieee80211_supported_band bands[3U] ;
   struct ieee80211_hw *hw ;
   struct ieee80211_vif *vif ;
   enum nl80211_iftype opmode ;
   struct rtl_tid_data tids[9U] ;
   enum rtl_link_state link_state ;
   int n_channels ;
   int n_bitrates ;
   bool offchan_delay ;
   u8 p2p ;
   bool p2p_in_use ;
   u32 rx_conf ;
   u16 rx_mgt_filter ;
   u16 rx_ctrl_filter ;
   u16 rx_data_filter ;
   bool act_scanning ;
   u8 cnt_after_linked ;
   bool skip_scan ;
   struct sk_buff_head skb_waitq[9U] ;
   u8 ht_stbc_cap ;
   u8 ht_cur_stbc ;
   u8 vht_enable ;
   u8 bw_80 ;
   u8 vht_cur_ldpc ;
   u8 vht_cur_stbc ;
   u8 vht_stbc_cap ;
   u8 vht_ldpc_cap ;
   bool rdg_en ;
   u8 bssid[6U] ;
   u32 vendor ;
   u8 mcs[16U] ;
   u32 basic_rates ;
   u8 ht_enable ;
   u8 sgi_40 ;
   u8 sgi_20 ;
   u8 bw_40 ;
   u16 mode ;
   u8 slot_time ;
   u8 short_preamble ;
   u8 use_cts_protect ;
   u8 cur_40_prime_sc ;
   u8 cur_40_prime_sc_bk ;
   u8 cur_80_prime_sc ;
   u64 tsf ;
   u8 retry_short ;
   u8 retry_long ;
   u16 assoc_id ;
   bool hiddenssid ;
   int beacon_interval ;
   u8 min_space_cfg ;
   u8 max_mss_density ;
   u8 current_ampdu_factor ;
   u8 current_ampdu_density ;
   struct ieee80211_tx_queue_params edca_param[5U] ;
   struct rtl_qos_parameters ac[4U] ;
   u64 last_txok_cnt ;
   u64 last_rxok_cnt ;
   u32 last_bt_edca_ul ;
   u32 last_bt_edca_dl ;
};

#line 1434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct btdm_8723 {
   bool all_off ;
   bool agc_table_en ;
   bool adc_back_off_on ;
   bool b2_ant_hid_en ;
   bool low_penalty_rate_adaptive ;
   bool rf_rx_lpf_shrink ;
   bool reject_aggre_pkt ;
   bool tra_tdma_on ;
   u8 tra_tdma_nav ;
   u8 tra_tdma_ant ;
   bool tdma_on ;
   u8 tdma_ant ;
   u8 tdma_nav ;
   u8 tdma_dac_swing ;
   u8 fw_dac_swing_lvl ;
   bool ps_tdma_on ;
   u8 ps_tdma_byte[5U] ;
   bool pta_on ;
   u32 val_0x6c0 ;
   u32 val_0x6c8 ;
   u32 val_0x6cc ;
   bool sw_dac_swing_on ;
   u32 sw_dac_swing_lvl ;
   u32 wlan_act_hi ;
   u32 wlan_act_lo ;
   u32 bt_retry_index ;
   bool dec_bt_pwr ;
   bool ignore_wlan_act ;
};

#line 1465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct bt_coexist_8723 {
   u32 high_priority_tx ;
   u32 high_priority_rx ;
   u32 low_priority_tx ;
   u32 low_priority_rx ;
   u8 c2h_bt_info ;
   bool c2h_bt_info_req_sent ;
   bool c2h_bt_inquiry_page ;
   u32 bt_inq_page_start_time ;
   u8 bt_retry_cnt ;
   u8 c2h_bt_info_original ;
   u8 bt_inquiry_page_cnt ;
   struct btdm_8723 btdm ;
};

#line 1480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_hal {
   struct ieee80211_hw *hw ;
   bool driver_is_goingto_unload ;
   bool up_first_time ;
   bool first_init ;
   bool being_init_adapter ;
   bool bbrf_ready ;
   bool mac_func_enable ;
   bool pre_edcca_enable ;
   struct bt_coexist_8723 hal_coex_8723 ;
   enum intf_type interface ;
   u16 hw_type ;
   u8 ic_class ;
   u8 oem_id ;
   u32 version ;
   u8 state ;
   u8 board_type ;
   u8 external_pa ;
   u8 pa_mode ;
   u8 pa_type_2g ;
   u8 pa_type_5g ;
   u8 lna_type_2g ;
   u8 lna_type_5g ;
   u8 external_pa_2g ;
   u8 external_lna_2g ;
   u8 external_pa_5g ;
   u8 external_lna_5g ;
   u8 rfe_type ;
   u32 fwsize ;
   u8 *pfirmware ;
   u16 fw_version ;
   u16 fw_subversion ;
   bool h2c_setinprogress ;
   u8 last_hmeboxnum ;
   bool fw_ready ;
   u8 fw_rsvdpage_startoffset ;
   u8 h2c_txcmd_seq ;
   u8 current_ra_rate ;
   u16 fwcmd_iomap ;
   u32 fwcmd_ioparam ;
   bool set_fwcmd_inprogress ;
   u8 current_fwcmd_io ;
   struct p2p_ps_offload_t p2p_ps_offload ;
   bool fw_clk_change_in_progress ;
   bool allow_sw_to_change_hwclc ;
   u8 fw_ps_state ;
   bool driver_going2unload ;
   u8 minspace_cfg ;
   enum macphy_mode macphymode ;
   enum band_type current_bandtype ;
   enum band_type current_bandtypebackup ;
   enum band_type bandset ;
   u32 interfaceindex ;
   u8 macphyctl_reg ;
   bool earlymode_enable ;
   u8 max_earlymode_num ;
   bool during_mac0init_radiob ;
   bool during_mac1init_radioa ;
   bool reloadtxpowerindex ;
   bool load_imrandiqk_setting_for2g ;
   bool disable_amsdu_8k ;
   bool master_of_dmsp ;
   bool slave_of_dmsp ;
   u16 rx_tag ;
   u8 rts_en ;
   bool wow_enable ;
   bool enter_pnp_sleep ;
   bool wake_from_pnp_sleep ;
   bool wow_enabled ;
   __kernel_time_t last_suspend_sec ;
   u32 wowlan_fwsize ;
   u8 *wowlan_firmware ;
   u8 hw_rof_enable ;
   bool real_wow_v2_enable ;
   bool re_init_llt_table ;
};

#line 1581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_security {
   bool use_sw_sec ;
   bool being_setkey ;
   bool use_defaultkey ;
   enum rt_enc_alg pairwise_enc_algorithm ;
   enum rt_enc_alg group_enc_algorithm ;
   u32 hwsec_cam_bitmap ;
   u8 hwsec_cam_sta_addr[32U][6U] ;
   u8 key_buf[5U][61U] ;
   u8 key_len[5U] ;
   u8 *pairwise_key ;
};

#line 1604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct fast_ant_training {
   u8 bssid[6U] ;
   u8 antsel_rx_keep_0 ;
   u8 antsel_rx_keep_1 ;
   u8 antsel_rx_keep_2 ;
   u32 ant_sum[7U] ;
   u32 ant_cnt[7U] ;
   u32 ant_ave[7U] ;
   u8 fat_state ;
   u32 train_idx ;
   u8 antsel_a[33U] ;
   u8 antsel_b[33U] ;
   u8 antsel_c[33U] ;
   u32 main_ant_sum[33U] ;
   u32 aux_ant_sum[33U] ;
   u32 main_ant_cnt[33U] ;
   u32 aux_ant_cnt[33U] ;
   u8 rx_idle_ant ;
   bool becomelinked ;
};

#line 1627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct dm_phy_dbg_info {
   char rx_snrdb[4U] ;
   u64 num_qry_phy_status ;
   u64 num_qry_phy_status_cck ;
   u64 num_qry_phy_status_ofdm ;
   u16 num_qry_beacon_pkt ;
   u16 num_non_be_pkt ;
   s32 rx_evm[4U] ;
};

#line 1637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_dm {
   long entry_min_undec_sm_pwdb ;
   long undec_sm_cck ;
   long undec_sm_pwdb ;
   long entry_max_undec_sm_pwdb ;
   s32 ofdm_pkt_cnt ;
   bool dm_initialgain_enable ;
   bool dynamic_txpower_enable ;
   bool current_turbo_edca ;
   bool is_any_nonbepkts ;
   bool is_cur_rdlstate ;
   bool txpower_trackinginit ;
   bool disable_framebursting ;
   bool cck_inch14 ;
   bool txpower_tracking ;
   bool useramask ;
   bool rfpath_rxenable[4U] ;
   bool inform_fw_driverctrldm ;
   bool current_mrc_switch ;
   u8 txpowercount ;
   u8 powerindex_backup[6U] ;
   u8 thermalvalue_rxgain ;
   u8 thermalvalue_iqk ;
   u8 thermalvalue_lck ;
   u8 thermalvalue ;
   u8 last_dtp_lvl ;
   u8 thermalvalue_avg[8U] ;
   u8 thermalvalue_avg_index ;
   u8 tm_trigger ;
   bool done_txpower ;
   u8 dynamic_txhighpower_lvl ;
   u8 dm_flag ;
   u8 dm_flag_tmp ;
   u8 dm_type ;
   u8 dm_rssi_sel ;
   u8 txpower_track_control ;
   bool interrupt_migration ;
   bool disable_tx_int ;
   char ofdm_index[4U] ;
   u8 default_ofdm_index ;
   u8 default_cck_index ;
   char cck_index ;
   char delta_power_index[4U] ;
   char delta_power_index_last[4U] ;
   char power_index_offset[4U] ;
   char absolute_ofdm_swing_idx[4U] ;
   char remnant_ofdm_swing_idx[4U] ;
   char remnant_cck_idx ;
   bool modify_txagc_flag_path_a ;
   bool modify_txagc_flag_path_b ;
   bool one_entry_only ;
   struct dm_phy_dbg_info dbginfo ;
   bool atc_status ;
   bool large_cfo_hit ;
   bool is_freeze ;
   int cfo_tail[2U] ;
   int cfo_ave_pre ;
   int crystal_cap ;
   u8 cfo_threshold ;
   u32 packet_count ;
   u32 packet_count_pre ;
   u8 tx_rate ;
   u8 swing_idx_ofdm[4U] ;
   u8 swing_idx_ofdm_cur ;
   u8 swing_idx_ofdm_base[4U] ;
   bool swing_flag_ofdm ;
   u8 swing_idx_cck ;
   u8 swing_idx_cck_cur ;
   u8 swing_idx_cck_base ;
   bool swing_flag_cck ;
   char swing_diff_2g ;
   char swing_diff_5g ;
   u8 delta_swing_table_idx_24gccka_p[30U] ;
   u8 delta_swing_table_idx_24gccka_n[30U] ;
   u8 delta_swing_table_idx_24gcckb_p[30U] ;
   u8 delta_swing_table_idx_24gcckb_n[30U] ;
   u8 delta_swing_table_idx_24ga_p[30U] ;
   u8 delta_swing_table_idx_24ga_n[30U] ;
   u8 delta_swing_table_idx_24gb_p[30U] ;
   u8 delta_swing_table_idx_24gb_n[30U] ;
   u8 delta_swing_table_idx_5ga_p[3U][30U] ;
   u8 delta_swing_table_idx_5ga_n[3U][30U] ;
   u8 delta_swing_table_idx_5gb_p[3U][30U] ;
   u8 delta_swing_table_idx_5gb_n[3U][30U] ;
   u8 delta_swing_table_idx_24ga_p_8188e[30U] ;
   u8 delta_swing_table_idx_24ga_n_8188e[30U] ;
   bool supp_phymode_switch ;
   struct fast_ant_training fat_table ;
   u8 resp_tx_path ;
   u8 path_sel ;
   u32 patha_sum ;
   u32 pathb_sum ;
   u32 patha_cnt ;
   u32 pathb_cnt ;
   u8 pre_channel ;
   u8 *p_channel ;
   u8 linked_interval ;
   u64 last_tx_ok_cnt ;
   u64 last_rx_ok_cnt ;
};

#line 1754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_efuse {
   bool autoLoad_ok ;
   bool bootfromefuse ;
   u16 max_physical_size ;
   u8 efuse_map[2U][512U] ;
   u16 efuse_usedbytes ;
   u8 efuse_usedpercentage ;
   u8 autoload_failflag ;
   u8 autoload_status ;
   short epromtype ;
   u16 eeprom_vid ;
   u16 eeprom_did ;
   u16 eeprom_svid ;
   u16 eeprom_smid ;
   u8 eeprom_oemid ;
   u16 eeprom_channelplan ;
   u8 eeprom_version ;
   u8 board_type ;
   u8 external_pa ;
   u8 dev_addr[6U] ;
   u8 wowlan_enable ;
   u8 antenna_div_cfg ;
   u8 antenna_div_type ;
   bool txpwr_fromeprom ;
   u8 eeprom_crystalcap ;
   u8 eeprom_tssi[2U] ;
   u8 eeprom_tssi_5g[3U][2U] ;
   u8 eeprom_pwrlimit_ht20[12U] ;
   u8 eeprom_pwrlimit_ht40[12U] ;
   u8 eeprom_chnlarea_txpwr_cck[4U][3U] ;
   u8 eeprom_chnlarea_txpwr_ht40_1s[4U][12U] ;
   u8 eprom_chnl_txpwr_ht40_2sdf[4U][12U] ;
   u8 internal_pa_5g[2U] ;
   u8 eeprom_c9 ;
   u8 eeprom_cc ;
   u8 eeprom_pwrgroup[2U][3U] ;
   u8 pwrgroup_ht20[2U][59U] ;
   u8 pwrgroup_ht40[2U][59U] ;
   u8 txpwrlevel_cck[4U][14U] ;
   u8 txpwrlevel_ht40_1s[4U][59U] ;
   u8 txpwrlevel_ht40_2s[4U][59U] ;
   char txpwr_cckdiff[4U][59U] ;
   char txpwr_ht20diff[4U][59U] ;
   char txpwr_ht40diff[4U][59U] ;
   char txpwr_legacyhtdiff[4U][59U] ;
   u8 txpwr_5g_bw40base[4U][59U] ;
   u8 txpwr_5g_bw80base[4U][7U] ;
   char txpwr_5g_ofdmdiff[4U][4U] ;
   char txpwr_5g_bw20diff[4U][4U] ;
   char txpwr_5g_bw40diff[4U][4U] ;
   char txpwr_5g_bw80diff[4U][4U] ;
   u8 txpwr_safetyflag ;
   u16 eeprom_txpowerdiff ;
   u8 legacy_httxpowerdiff ;
   u8 antenna_txpwdiff[3U] ;
   u8 eeprom_regulatory ;
   u8 eeprom_thermalmeter ;
   u8 thermalmeter[2U] ;
   u16 tssi_13dbm ;
   u8 crystalcap ;
   u8 delta_iqk ;
   u8 delta_lck ;
   u8 legacy_ht_txpowerdiff ;
   bool apk_thermalmeterignore ;
   bool b1x1_recvcombine ;
   bool b1ss_support ;
   u8 channel_plan ;
};

#line 1862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_ps_ctl {
   bool pwrdomain_protect ;
   bool in_powersavemode ;
   bool rfchange_inprogress ;
   bool swrf_processing ;
   bool hwradiooff ;
   bool support_aspm ;
   bool support_backdoor ;
   enum rt_psmode dot11_psmode ;
   bool swctrl_lps ;
   bool leisure_ps ;
   bool fwctrl_lps ;
   u8 fwctrl_psmode ;
   u8 reg_fwctrl_lps ;
   bool fw_current_inpsmode ;
   u8 reg_max_lps_awakeintvl ;
   bool report_linked ;
   bool low_power_enable ;
   bool inactiveps ;
   u32 rfoff_reason ;
   u32 cur_ps_level ;
   u32 reg_rfps_level ;
   u8 const_amdpci_aspm ;
   bool pwrdown_mode ;
   enum rf_pwrstate inactive_pwrstate ;
   enum rf_pwrstate rfpwr_state ;
   bool sw_ps_enabled ;
   bool state ;
   bool state_inap ;
   bool multi_buffered ;
   u16 nullfunc_seq ;
   unsigned int dtim_counter ;
   unsigned int sleep_ms ;
   unsigned long last_sleep_jiffies ;
   unsigned long last_awake_jiffies ;
   unsigned long last_delaylps_stamp_jiffies ;
   unsigned long last_dtim ;
   unsigned long last_beacon ;
   unsigned long last_action ;
   unsigned long last_slept ;
   struct rtl_p2p_ps_info p2p_ps_info ;
   u8 pwr_mode ;
   u8 smart_ps ;
   u8 wo_wlan_mode ;
   u8 arp_offload_enable ;
   u8 gtk_offload_enable ;
   u32 wakeup_reason ;
   u64 last_wakeup_time ;
};

#line 1937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_stats {
   u8 psaddr[6U] ;
   u32 mac_time[2U] ;
   s8 rssi ;
   u8 signal ;
   u8 noise ;
   u8 rate ;
   u8 received_channel ;
   u8 control ;
   u8 mask ;
   u8 freq ;
   u16 len ;
   u64 tsf ;
   u32 beacon_time ;
   u8 nic_type ;
   u16 length ;
   u8 signalquality ;
   s32 recvsignalpower ;
   s8 rxpower ;
   u8 signalstrength ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hwerror : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) icv : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) shortpreamble : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) antenna : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) decrypted : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup : 1 ;
   u32 timestamp_low ;
   u32 timestamp_high ;
   bool shift ;
   u8 rx_drvinfo_size ;
   u8 rx_bufshift ;
   bool isampdu ;
   bool isfirst_ampdu ;
   bool rx_is40Mhzpacket ;
   u8 rx_packet_bw ;
   u32 rx_pwdb_all ;
   u8 rx_mimo_signalstrength[4U] ;
   s8 rx_mimo_signalquality[4U] ;
   u8 rx_mimo_evm_dbm[4U] ;
   u16 cfo_short[4U] ;
   u16 cfo_tail[4U] ;
   s8 rx_mimo_sig_qual[4U] ;
   u8 rx_pwr[4U] ;
   u8 rx_snr[4U] ;
   u8 bandwidth ;
   u8 bt_coex_pwr_adjust ;
   bool packet_matchbssid ;
   bool is_cck ;
   bool is_ht ;
   bool packet_toself ;
   bool packet_beacon ;
   char cck_adc_pwdb[4U] ;
   bool is_vht ;
   bool is_short_gi ;
   u8 vht_nss ;
   u8 packet_report_type ;
   u32 macid ;
   u8 wake_match ;
   u32 bt_rx_rssi_percentage ;
   u32 macid_valid_entry[2U] ;
};

#line 2009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rt_link_detect {
   u32 bcn_rx_inperiod ;
   u32 roam_times ;
   u32 num_tx_in4period[4U] ;
   u32 num_rx_in4period[4U] ;
   u32 num_tx_inperiod ;
   u32 num_rx_inperiod ;
   bool busytraffic ;
   bool tx_busy_traffic ;
   bool rx_busy_traffic ;
   bool higher_busytraffic ;
   bool higher_busyrxtraffic ;
   u32 tidtx_in4period[9U][4U] ;
   u32 tidtx_inperiod[9U] ;
   bool higher_busytxtraffic[9U] ;
};

#line 2032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_tcb_desc {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) packet_bw : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multicast : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broadcast : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_stbc : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cts_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_use_shortpreamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_use_shortgi : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_sc : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rts_bw : 1 ;
   u8 rts_rate ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_shortgi : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_shortpreamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_driver_rate : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disable_ratefallback : 1 ;
   u8 ratr_index ;
   u8 mac_id ;
   u8 hw_rate ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_inipkt : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cmd_or_init : 1 ;
   u8 queue_index ;
   u8 empkt_num ;
   u32 empkt_len[10U] ;
   bool tx_enable_sw_calc_duration ;
};

#line 2067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_wow_pattern {
   u8 type ;
   u16 crc ;
   u32 mask[4U] ;
};

#line 2074 
struct rtl8723e_firmware_header;

#line 2075  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_hal_ops {
   int (*init_sw_vars)(struct ieee80211_hw *) ;
   void (*deinit_sw_vars)(struct ieee80211_hw *) ;
   void (*read_chip_version)(struct ieee80211_hw *) ;
   void (*read_eeprom_info)(struct ieee80211_hw *) ;
   void (*interrupt_recognized)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*hw_init)(struct ieee80211_hw *) ;
   void (*hw_disable)(struct ieee80211_hw *) ;
   void (*hw_suspend)(struct ieee80211_hw *) ;
   void (*hw_resume)(struct ieee80211_hw *) ;
   void (*enable_interrupt)(struct ieee80211_hw *) ;
   void (*disable_interrupt)(struct ieee80211_hw *) ;
   int (*set_network_type)(struct ieee80211_hw *, enum nl80211_iftype ) ;
   void (*set_chk_bssid)(struct ieee80211_hw *, bool ) ;
   void (*set_bw_mode)(struct ieee80211_hw *, enum nl80211_channel_type ) ;
   u8 (*switch_channel)(struct ieee80211_hw *) ;
   void (*set_qos)(struct ieee80211_hw *, int ) ;
   void (*set_bcn_reg)(struct ieee80211_hw *) ;
   void (*set_bcn_intv)(struct ieee80211_hw *) ;
   void (*update_interrupt_mask)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_hw_reg)(struct ieee80211_hw *, u8 , u8 *) ;
   void (*set_hw_reg)(struct ieee80211_hw *, u8 , u8 *) ;
   void (*update_rate_tbl)(struct ieee80211_hw *, struct ieee80211_sta *, u8 ) ;
   void (*pre_fill_tx_bd_desc)(struct ieee80211_hw *, u8 *, u8 *, u8 , struct sk_buff *, dma_addr_t ) ;
   void (*update_rate_mask)(struct ieee80211_hw *, u8 ) ;
   u16 (*rx_desc_buff_remained_cnt)(struct ieee80211_hw *, u8 ) ;
   void (*rx_check_dma_ok)(struct ieee80211_hw *, u8 *, u8 ) ;
   void (*fill_tx_desc)(struct ieee80211_hw *, struct ieee80211_hdr *, u8 *, u8 *, struct ieee80211_tx_info *, struct ieee80211_sta *, struct sk_buff *, u8 , struct rtl_tcb_desc *) ;
   void (*fill_fake_txdesc)(struct ieee80211_hw *, u8 *, u32 , bool ) ;
   void (*fill_tx_cmddesc)(struct ieee80211_hw *, u8 *, bool , bool , struct sk_buff *) ;
   bool (*query_rx_desc)(struct ieee80211_hw *, struct rtl_stats *, struct ieee80211_rx_status *, u8 *, struct sk_buff *) ;
   void (*set_channel_access)(struct ieee80211_hw *) ;
   bool (*radio_onoff_checking)(struct ieee80211_hw *, u8 *) ;
   void (*dm_watchdog)(struct ieee80211_hw *) ;
   void (*scan_operation_backup)(struct ieee80211_hw *, u8 ) ;
   bool (*set_rf_power_state)(struct ieee80211_hw *, enum rf_pwrstate ) ;
   void (*led_control)(struct ieee80211_hw *, enum led_ctl_mode ) ;
   void (*set_desc)(struct ieee80211_hw *, u8 *, bool , u8 , u8 *) ;
   u32 (*get_desc)(u8 *, bool , u8 ) ;
   bool (*is_tx_desc_closed)(struct ieee80211_hw *, u8 , u16 ) ;
   void (*tx_polling)(struct ieee80211_hw *, u8 ) ;
   void (*enable_hw_sec)(struct ieee80211_hw *) ;
   void (*set_key)(struct ieee80211_hw *, u32 , u8 *, bool , u8 , bool , bool ) ;
   void (*init_sw_leds)(struct ieee80211_hw *) ;
   void (*deinit_sw_leds)(struct ieee80211_hw *) ;
   u32 (*get_bbreg)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*set_bbreg)(struct ieee80211_hw *, u32 , u32 , u32 ) ;
   u32 (*get_rfreg)(struct ieee80211_hw *, enum radio_path , u32 , u32 ) ;
   void (*set_rfreg)(struct ieee80211_hw *, enum radio_path , u32 , u32 , u32 ) ;
   void (*linked_set_reg)(struct ieee80211_hw *) ;
   void (*chk_switch_dmdp)(struct ieee80211_hw *) ;
   void (*dualmac_easy_concurrent)(struct ieee80211_hw *) ;
   void (*dualmac_switch_to_dmdp)(struct ieee80211_hw *) ;
   bool (*phy_rf6052_config)(struct ieee80211_hw *) ;
   void (*phy_rf6052_set_cck_txpower)(struct ieee80211_hw *, u8 *) ;
   void (*phy_rf6052_set_ofdm_txpower)(struct ieee80211_hw *, u8 *, u8 ) ;
   bool (*config_bb_with_headerfile)(struct ieee80211_hw *, u8 ) ;
   bool (*config_bb_with_pgheaderfile)(struct ieee80211_hw *, u8 ) ;
   void (*phy_lc_calibrate)(struct ieee80211_hw *, bool ) ;
   void (*phy_set_bw_mode_callback)(struct ieee80211_hw *) ;
   void (*dm_dynamic_txpower)(struct ieee80211_hw *) ;
   void (*c2h_command_handle)(struct ieee80211_hw *) ;
   void (*bt_wifi_media_status_notify)(struct ieee80211_hw *, bool ) ;
   void (*bt_coex_off_before_lps)(struct ieee80211_hw *) ;
   void (*fill_h2c_cmd)(struct ieee80211_hw *, u8 , u32 , u8 *) ;
   bool (*get_btc_status)(void) ;
   bool (*is_fw_header)(struct rtl8723e_firmware_header *) ;
   u32 (*rx_command_packet)(struct ieee80211_hw *, struct rtl_stats , struct sk_buff *) ;
   void (*add_wowlan_pattern)(struct ieee80211_hw *, struct rtl_wow_pattern *, u8 ) ;
   u16 (*get_available_desc)(struct ieee80211_hw *, u8 ) ;
};

#line 2188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_intf_ops {
   void (*read_efuse_byte)(struct ieee80211_hw *, u16 , u8 *) ;
   int (*adapter_start)(struct ieee80211_hw *) ;
   void (*adapter_stop)(struct ieee80211_hw *) ;
   bool (*check_buddy_priv)(struct ieee80211_hw *, struct rtl_priv **) ;
   int (*adapter_tx)(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *, struct rtl_tcb_desc *) ;
   void (*flush)(struct ieee80211_hw *, u32 , bool ) ;
   int (*reset_trx_ring)(struct ieee80211_hw *) ;
   bool (*waitq_insert)(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *) ;
   void (*disable_aspm)(struct ieee80211_hw *) ;
   void (*enable_aspm)(struct ieee80211_hw *) ;
};

#line 2211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_mod_params {
   bool sw_crypto ;
   int debug ;
   bool inactiveps ;
   bool swctrl_lps ;
   bool fwctrl_lps ;
   bool msi_support ;
   bool disable_watchdog ;
   bool int_clear ;
};

#line 2241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_hal_usbint_cfg {
   u32 in_ep_num ;
   u32 rx_urb_num ;
   u32 rx_max_size ;
   void (*usb_rx_hdl)(struct ieee80211_hw *, struct sk_buff *) ;
   void (*usb_rx_segregate_hdl)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff_head *) ;
   void (*usb_tx_cleanup)(struct ieee80211_hw *, struct sk_buff *) ;
   int (*usb_tx_post_hdl)(struct ieee80211_hw *, struct urb *, struct sk_buff *) ;
   struct sk_buff *(*usb_tx_aggregate_hdl)(struct ieee80211_hw *, struct sk_buff_head *) ;
   int (*usb_endpoint_mapping)(struct ieee80211_hw *) ;
   u16 (*usb_mq_to_hwq)(__le16 , u16 ) ;
};

#line 2264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_hal_cfg {
   u8 bar_id ;
   bool write_readback ;
   char *name ;
   char *fw_name ;
   char *alt_fw_name ;
   char *wowlan_fw_name ;
   struct rtl_hal_ops *ops ;
   struct rtl_mod_params *mod_params ;
   struct rtl_hal_usbint_cfg *usb_interface_cfg ;
   u32 maps[90U] ;
};

#line 2280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_locks {
   struct mutex conf_mutex ;
   struct mutex ps_mutex ;
   spinlock_t ips_lock ;
   spinlock_t irq_th_lock ;
   spinlock_t irq_pci_lock ;
   spinlock_t tx_lock ;
   spinlock_t h2c_lock ;
   spinlock_t rf_ps_lock ;
   spinlock_t rf_lock ;
   spinlock_t lps_lock ;
   spinlock_t waitq_lock ;
   spinlock_t entry_list_lock ;
   spinlock_t usb_lock ;
   spinlock_t fw_ps_lock ;
   spinlock_t cck_and_rw_pagea_lock ;
   spinlock_t check_sendpkt_lock ;
   spinlock_t iqk_lock ;
};

#line 2311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_works {
   struct ieee80211_hw *hw ;
   struct timer_list watchdog_timer ;
   struct timer_list dualmac_easyconcurrent_retrytimer ;
   struct timer_list fw_clockoff_timer ;
   struct timer_list fast_antenna_training_timer ;
   struct tasklet_struct irq_tasklet ;
   struct tasklet_struct irq_prepare_bcn_tasklet ;
   struct workqueue_struct *rtl_wq ;
   struct delayed_work watchdog_wq ;
   struct delayed_work ips_nic_off_wq ;
   struct delayed_work ps_work ;
   struct delayed_work ps_rfon_wq ;
   struct delayed_work fwevt_wq ;
   struct work_struct lps_change_work ;
   struct work_struct fill_h2c_cmd ;
};

#line 2337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_debug {
   u32 dbgp_type[19U] ;
   int global_debuglevel ;
   u64 global_debugcomponents ;
   struct proc_dir_entry *proc_dir ;
   char proc_name[20U] ;
};

#line 2347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_dualmac_easy_concurrent_ctl {
   enum band_type currentbandtype_backfordmdp ;
   bool close_bbandrf_for_dmsp ;
   bool change_to_dmdp ;
   bool change_to_dmsp ;
   bool switch_in_process ;
};

#line 2359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_dmsp_ctl {
   bool activescan_for_slaveofdmsp ;
   bool scan_for_anothermac_fordmsp ;
   bool scan_for_itself_fordmsp ;
   bool writedig_for_anothermacofdmsp ;
   u32 curdigvalue_for_anothermacofdmsp ;
   bool changecckpdstate_for_anothermacofdmsp ;
   u8 curcckpdstate_for_anothermacofdmsp ;
   bool changetxhighpowerlvl_for_anothermacofdmsp ;
   u8 curtxhighlvl_for_anothermacofdmsp ;
   long rssivalmin_for_anothermacofdmsp ;
};

#line 2372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct ps_t {
   u8 pre_ccastate ;
   u8 cur_ccasate ;
   u8 pre_rfstate ;
   u8 cur_rfstate ;
   u8 initialize ;
   long rssi_val_min ;
};

#line 2381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct dig_t {
   u32 rssi_lowthresh ;
   u32 rssi_highthresh ;
   u32 fa_lowthresh ;
   u32 fa_highthresh ;
   long last_min_undec_pwdb_for_dm ;
   long rssi_highpower_lowthresh ;
   long rssi_highpower_highthresh ;
   u32 recover_cnt ;
   u32 pre_igvalue ;
   u32 cur_igvalue ;
   long rssi_val ;
   u8 dig_enable_flag ;
   u8 dig_ext_port_stage ;
   u8 dig_algorithm ;
   u8 dig_twoport_algorithm ;
   u8 dig_dbgmode ;
   u8 dig_slgorithm_switch ;
   u8 cursta_cstate ;
   u8 presta_cstate ;
   u8 curmultista_cstate ;
   u8 stop_dig ;
   char back_val ;
   char back_range_max ;
   char back_range_min ;
   u8 rx_gain_max ;
   u8 rx_gain_min ;
   u8 min_undec_pwdb_for_dm ;
   u8 rssi_val_min ;
   u8 pre_cck_cca_thres ;
   u8 cur_cck_cca_thres ;
   u8 pre_cck_pd_state ;
   u8 cur_cck_pd_state ;
   u8 pre_cck_fa_state ;
   u8 cur_cck_fa_state ;
   u8 pre_ccastate ;
   u8 cur_ccasate ;
   u8 large_fa_hit ;
   u8 forbidden_igi ;
   u8 dig_state ;
   u8 dig_highpwrstate ;
   u8 cur_sta_cstate ;
   u8 pre_sta_cstate ;
   u8 cur_ap_cstate ;
   u8 pre_ap_cstate ;
   u8 cur_pd_thstate ;
   u8 pre_pd_thstate ;
   u8 cur_cs_ratiostate ;
   u8 pre_cs_ratiostate ;
   u8 backoff_enable_flag ;
   char backoffval_range_max ;
   char backoffval_range_min ;
   u8 dig_min_0 ;
   u8 dig_min_1 ;
   u8 bt30_cur_igi ;
   bool media_connect_0 ;
   bool media_connect_1 ;
   u32 antdiv_rssi_max ;
   u32 rssi_max ;
};

#line 2443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_global_var {
   struct list_head glb_priv_list ;
   spinlock_t glb_list_lock ;
};

#line 2450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_btc_info {
   u8 bt_type ;
   u8 btcoexist ;
   u8 ant_num ;
};

#line 2456 
struct rtl_btc_ops;

#line 2456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct bt_coexist_info {
   struct rtl_btc_ops *btc_ops ;
   struct rtl_btc_info btc_info ;
   u8 eeprom_bt_coexist ;
   u8 eeprom_bt_type ;
   u8 eeprom_bt_ant_num ;
   u8 eeprom_bt_ant_isol ;
   u8 eeprom_bt_radio_shared ;
   u8 bt_coexistence ;
   u8 bt_ant_num ;
   u8 bt_coexist_type ;
   u8 bt_state ;
   u8 bt_cur_state ;
   u8 bt_ant_isolation ;
   u8 bt_pape_ctrl ;
   u8 bt_service ;
   u8 bt_radio_shared_type ;
   u8 bt_rfreg_origin_1e ;
   u8 bt_rfreg_origin_1f ;
   u8 bt_rssi_state ;
   u32 ratio_tx ;
   u32 ratio_pri ;
   u32 bt_edca_ul ;
   u32 bt_edca_dl ;
   bool init_set ;
   bool bt_busy_traffic ;
   bool bt_traffic_mode_set ;
   bool bt_non_traffic_mode_set ;
   bool fw_coexist_all_off ;
   bool sw_coexist_all_off ;
   bool hw_coexist_all_off ;
   u32 cstate ;
   u32 previous_state ;
   u32 cstate_h ;
   u32 previous_state_h ;
   u8 bt_pre_rssi_state ;
   u8 bt_pre_rssi_state1 ;
   u8 reg_bt_iso ;
   u8 reg_bt_sco ;
   bool balance_on ;
   u8 bt_active_zero_cnt ;
   bool cur_bt_disabled ;
   bool pre_bt_disabled ;
   u8 bt_profile_case ;
   u8 bt_profile_action ;
   bool bt_busy ;
   bool hold_for_bt_operation ;
   u8 lps_counter ;
};

#line 2513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_btc_ops {
   void (*btc_init_variables)(struct rtl_priv *) ;
   void (*btc_init_hal_vars)(struct rtl_priv *) ;
   void (*btc_init_hw_config)(struct rtl_priv *) ;
   void (*btc_ips_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_lps_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_scan_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_connect_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_mediastatus_notify)(struct rtl_priv *, enum rt_media_status ) ;
   void (*btc_periodical)(struct rtl_priv *) ;
   void (*btc_halt_notify)(void) ;
   void (*btc_btinfo_notify)(struct rtl_priv *, u8 *, u8 ) ;
   bool (*btc_is_limited_dig)(struct rtl_priv *) ;
   bool (*btc_is_disable_edca_turbo)(struct rtl_priv *) ;
   bool (*btc_is_bt_disabled)(struct rtl_priv *) ;
   void (*btc_special_packet_notify)(struct rtl_priv *, u8 ) ;
};

#line 2533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct proxim {
   bool proxim_on ;
   void *proximity_priv ;
   int (*proxim_rx)(struct ieee80211_hw *, struct rtl_stats *, struct sk_buff *) ;
   u8 (*proxim_get_var)(struct ieee80211_hw *, u8 ) ;
};

#line 2543 
struct rtl_rate_priv;

#line 2543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_priv {
   struct ieee80211_hw *hw ;
   struct completion firmware_loading_complete ;
   struct list_head list ;
   struct rtl_priv *buddy_priv ;
   struct rtl_global_var *glb_var ;
   struct rtl_dualmac_easy_concurrent_ctl easy_concurrent_ctl ;
   struct rtl_dmsp_ctl dmsp_ctl ;
   struct rtl_locks locks ;
   struct rtl_works works ;
   struct rtl_mac mac80211 ;
   struct rtl_hal rtlhal ;
   struct rtl_regulatory regd ;
   struct rtl_rfkill rfkill ;
   struct rtl_io io ;
   struct rtl_phy phy ;
   struct rtl_dm dm ;
   struct rtl_security sec ;
   struct rtl_efuse efuse ;
   struct rtl_ps_ctl psc ;
   struct rate_adaptive ra ;
   struct dynamic_primary_cca primarycca ;
   struct wireless_stats stats ;
   struct rt_link_detect link_info ;
   struct false_alarm_statistics falsealm_cnt ;
   struct rtl_rate_priv *rate_priv ;
   struct list_head entry_list ;
   struct rtl_debug dbg ;
   int max_fw_size ;
   struct rtl_hal_cfg *cfg ;
   struct rtl_intf_ops *intf_ops ;
   unsigned long status ;
   struct dig_t dm_digtable ;
   struct ps_t dm_pstable ;
   u32 reg_874 ;
   u32 reg_c70 ;
   u32 reg_85c ;
   u32 reg_a74 ;
   bool reg_init ;
   bool bt_operation_on ;
   __le32 *usb_data ;
   int usb_data_index ;
   bool initialized ;
   bool enter_ps ;
   u8 rate_mask[5U] ;
   struct proxim proximity ;
   struct bt_coexist_info btcoexist ;
   bool use_new_trx_flow ;
   struct wiphy_wowlan_support wowlan ;
   u8 priv[0U] ;
};

#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.h"
enum pwr_track_control_method {
    BBSWING = 0,
    TXAGC = 1,
    MIX_MODE = 2
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_suseconds_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/time.h"
struct timeval {
   __kernel_time_t tv_sec ;
   __kernel_suseconds_t tv_usec ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/debug.h"
struct txpower_info_2g {
   u8 index_cck_base[4U][6U] ;
   u8 index_bw40_base[4U][6U] ;
   u8 cck_diff[4U][4U] ;
   u8 ofdm_diff[4U][4U] ;
   u8 bw20_diff[4U][4U] ;
   u8 bw40_diff[4U][4U] ;
   u8 bw80_diff[4U][4U] ;
   u8 bw160_diff[4U][4U] ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct txpower_info_5g {
   u8 index_bw40_base[4U][14U] ;
   u8 ofdm_diff[4U][4U] ;
   u8 bw20_diff[4U][4U] ;
   u8 bw40_diff[4U][4U] ;
   u8 bw80_diff[4U][4U] ;
   u8 bw160_diff[4U][4U] ;
};

#line 754 
enum rtl_led_pin {
    LED_PIN_GPIO0 = 0,
    LED_PIN_LED0 = 1,
    LED_PIN_LED1 = 2,
    LED_PIN_LED2 = 3
};

#line 761 
enum acm_method {
    eAcmWay0_SwAndHw = 0,
    eAcmWay1_HW = 1,
    EACMWAY2_SW = 2
};

#line 780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct __anonstruct_f_747 {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) aifsn : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) acm : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) aci : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved : 1 ;
};

#line 780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
union aci_aifsn {
   u8 char_data ;
   struct __anonstruct_f_747 f ;
};

#line 823 
enum wireless_mode {
    WIRELESS_MODE_UNKNOWN = 0,
    WIRELESS_MODE_A = 1,
    WIRELESS_MODE_B = 2,
    WIRELESS_MODE_G = 4,
    WIRELESS_MODE_AUTO = 8,
    WIRELESS_MODE_N_24G = 16,
    WIRELESS_MODE_N_5G = 32,
    WIRELESS_MODE_AC_5G = 64,
    WIRELESS_MODE_AC_24G = 128,
    WIRELESS_MODE_AC_ONLY = 256,
    WIRELESS_MODE_MAX = 2048
};

#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_led {
   void *hw ;
   enum rtl_led_pin ledpin ;
   bool ledon ;
};

#line 952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
struct rtl_led_ctl {
   bool led_opendrain ;
   struct rtl_led sw_led0 ;
   struct rtl_led sw_led1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_748 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_748 __anonCompField_pci_dev_100 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_tx_buffer_desc {
   u32 dword[8U] ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_tx_desc {
   u32 dword[16U] ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_rx_buffer_desc {
   u32 dword[2U] ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_rx_desc {
   u32 dword[8U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl8192_tx_ring {
   struct rtl_tx_desc *desc ;
   dma_addr_t dma ;
   unsigned int idx ;
   unsigned int entries ;
   struct sk_buff_head queue ;
   struct rtl_tx_buffer_desc *buffer_desc ;
   dma_addr_t buffer_desc_dma ;
   u16 avl_desc ;
   u16 cur_tx_wp ;
   u16 cur_tx_rp ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl8192_rx_ring {
   struct rtl_rx_desc *desc ;
   dma_addr_t dma ;
   unsigned int idx ;
   struct sk_buff *rx_buf[512U] ;
   struct rtl_rx_buffer_desc *buffer_desc ;
   u16 next_rx_rp ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_pci {
   struct pci_dev *pdev ;
   bool irq_enabled ;
   bool driver_is_goingto_unload ;
   bool up_first_time ;
   bool first_init ;
   bool being_init_adapter ;
   bool init_ready ;
   struct rtl8192_tx_ring tx_ring[9U] ;
   int txringcount[9U] ;
   u32 transmit_config ;
   struct rtl8192_rx_ring rx_ring[2U] ;
   int rxringcount ;
   u16 rxbuffersize ;
   u32 receive_config ;
   u8 irq_alloc ;
   u32 irq_mask[2U] ;
   u32 sys_irq_mask ;
   u32 reg_bcn_ctrl_val ;
   u8 const_pci_aspm ;
   u8 const_amdpci_aspm ;
   u8 const_hwsw_rfoff_d3 ;
   u8 const_support_pciaspm ;
   u8 const_hostpci_aspm_setting ;
   u8 const_devicepci_aspm_setting ;
   bool support_aspm ;
   bool support_backdoor ;
   enum acm_method acm_method ;
   u16 shortretry_limit ;
   u16 longretry_limit ;
   bool msi_support ;
   bool using_msi ;
   bool int_clear ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct mp_adapter {
   u8 linkctrl_reg ;
   u8 busnumber ;
   u8 devnumber ;
   u8 funcnumber ;
   u8 pcibridge_busnum ;
   u8 pcibridge_devnum ;
   u8 pcibridge_funcnum ;
   u8 pcibridge_vendor ;
   u16 pcibridge_vendorid ;
   u16 pcibridge_deviceid ;
   u8 num4bytes ;
   u8 pcibridge_pciehdr_offset ;
   u8 pcibridge_linkctrlreg ;
   bool amd_l1_patch ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
struct rtl_pci_priv {
   struct rtl_pci dev ;
   struct mp_adapter ndis_adapter ;
   struct rtl_led_ctl ledctl ;
   struct bt_coexist_info bt_coexist ;
};

#line 347 
enum version_8821ae {
    VERSION_TEST_CHIP_1T1R_8812 = 4,
    VERSION_TEST_CHIP_2T2R_8812 = 36,
    VERSION_NORMAL_TSMC_CHIP_1T1R_8812 = 4108,
    VERSION_NORMAL_TSMC_CHIP_2T2R_8812 = 4140,
    VERSION_NORMAL_TSMC_CHIP_1T1R_8812_C_CUT = 8204,
    VERSION_NORMAL_TSMC_CHIP_2T2R_8812_C_CUT = 8236,
    VERSION_TEST_CHIP_8821 = 5,
    VERSION_NORMAL_TSMC_CHIP_8821 = 13,
    VERSION_NORMAL_TSMC_CHIP_8821_B_CUT = 4109,
    VERSION_UNKNOWN = 255
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.h"
struct wlan_pwr_cfg {
   u16 offset ;
   u8 cut_msk ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) fab_msk : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) interface_msk : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) base : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) cmd : 4 ;
   u8 msk ;
   u8 value ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 3165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_1127 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_1127 __anonCompField_kernel_param_101 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_qos_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   __le16 qos_ctrl ;
};

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.h"
struct phy_status_rpt {
   u8 gain_trsw[2U] ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) chl_num : 10 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sub_chnl : 4 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) r_rfmod : 2 ;
   u8 pwdb_all ;
   u8 cfosho[4U] ;
   char cfotail[4U] ;
   char rxevm[2U] ;
   char rxsnr[2U] ;
   u8 pcts_msk_rpt[2U] ;
   u8 pdsnr[2U] ;
   u8 csi_current[2U] ;
   u8 rx_gain_c ;
   u8 rx_gain_d ;
   u8 sigevm ;
   u8 resvd_0 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) antidx_anta : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) antidx_antb : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) resvd_1 : 2 ;
};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.h"
struct rx_fwinfo_8821ae {
   u8 gain_trsw[4U] ;
   u8 pwdb_all ;
   u8 cfosho[4U] ;
   u8 cfotail[4U] ;
   char rxevm[2U] ;
   char rxsnr[4U] ;
   u8 pdsnr[2U] ;
   u8 csi_current[2U] ;
   u8 csi_target[2U] ;
   u8 sigevm ;
   u8 max_ex_pwr ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ex_intf_flag : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sgi_en : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) rxsc : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) reserve : 4 ;
};

#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/def.h"
struct rtl8821a_firmware_header {
   u16 signature ;
   u8 category ;
   u8 function ;
   u16 version ;
   u8 subversion ;
   u8 rsvd1 ;
   u8 month ;
   u8 date ;
   u8 hour ;
   u8 minute ;
   u16 ramcodeSize ;
   u16 rsvd2 ;
   u32 svnindex ;
   u32 rsvd3 ;
   u32 rsvd4 ;
   u32 rsvd5 ;
};

#line 552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
enum ht_channel_width {
    HT_CHANNEL_WIDTH_20 = 0,
    HT_CHANNEL_WIDTH_20_40 = 1,
    HT_CHANNEL_WIDTH_80 = 2
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct ldv_struct_pci_scenario_6 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 16  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_5 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/fvtp/.tmp_dm.c"
void ldv_inline_asm(void);


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_72(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_78(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 395 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_76(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_73(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_79(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 418 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 419 
  return;
}


#line 444 
static void ldv_spin_unlock_bh_75(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 4747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 const *);


#line 2902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u32 rtl_read_dword(struct rtl_priv *rtlpriv, u32 addr)
{
  u32 tmp;
  
#line 2904 
  tmp = (*(rtlpriv->io.read32_sync))(rtlpriv,addr);
  
#line 2904 
  return tmp;
}


#line 2907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static void rtl_write_byte(struct rtl_priv *rtlpriv, u32 addr, u8 val8)
{
  
#line 2909 
  (*(rtlpriv->io.write8_async))(rtlpriv,addr,(unsigned char)((int)val8));
  
#line 2911 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
#line 2912 
                                                (*(rtlpriv->io.read8_sync))(rtlpriv,addr); else ;
  
#line 2913 
  return;
}


#line 2915  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static void rtl_write_word(struct rtl_priv *rtlpriv, u32 addr, u16 val16)
{
  
#line 2917 
  (*(rtlpriv->io.write16_async))(rtlpriv,addr,(unsigned short)((int)val16));
  
#line 2919 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
#line 2920 
                                                (*(rtlpriv->io.read16_sync))(rtlpriv,addr); else ;
  
#line 2921 
  return;
}


#line 2923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static void rtl_write_dword(struct rtl_priv *rtlpriv, u32 addr, u32 val32)
{
  
#line 2926 
  (*(rtlpriv->io.write32_async))(rtlpriv,addr,val32);
  
#line 2928 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
#line 2929 
                                                (*(rtlpriv->io.read32_sync))(rtlpriv,addr); else ;
  
#line 2930 
  return;
}


#line 2932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u32 rtl_get_bbreg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask)
{
  u32 tmp;
  
#line 2935 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2937 
  tmp = (*(((rtlpriv->cfg)->ops)->get_bbreg))(hw,regaddr,bitmask);
  
#line 2937 
  return tmp;
}


#line 2940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static void rtl_set_bbreg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data)
{
  
#line 2943 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2945 
  (*(((rtlpriv->cfg)->ops)->set_bbreg))(hw,regaddr,bitmask,data);
  
#line 2946 
  return;
}


#line 2948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u32 rtl_get_rfreg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask)
{
  u32 tmp;
  
#line 2952 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2954 
  tmp = (*(((rtlpriv->cfg)->ops)->get_rfreg))(hw,rfpath,regaddr,bitmask);
  
#line 2954 
  return tmp;
}


#line 2957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static void rtl_set_rfreg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data)
{
  
#line 2961 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2963 
  (*(((rtlpriv->cfg)->ops)->set_rfreg))(hw,rfpath,regaddr,bitmask,data);
  
#line 2964 
  return;
}


#line 2966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static bool is_hal_stop(struct rtl_hal *rtlhal)
{
  bool __retres;
  
#line 2968 
  __retres = (_Bool)((unsigned int)rtlhal->state == 0U);
  
#line 2968 
  return __retres;
}


#line 3013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static struct ieee80211_sta *rtl_find_sta(struct ieee80211_hw *hw, u8 *mac_addr)
{
  struct ieee80211_sta *tmp;
  
#line 3016 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 3017 
  tmp = ieee80211_find_sta(mac->vif,(u8 const *)mac_addr);
  
#line 3017 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/core.h"
void rtl_dm_diginit(struct ieee80211_hw *, u32);


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.h"
void rtl8821ae_phy_iq_calibrate(struct ieee80211_hw *hw, bool b_recovery);


#line 237 
void rtl8812ae_phy_iq_calibrate(struct ieee80211_hw *hw, bool b_recovery);


#line 240 
void rtl8821ae_phy_lc_calibrate(struct ieee80211_hw *hw);


#line 250 
void rtl8821ae_phy_set_txpower_level_by_path(struct ieee80211_hw *hw, u8 channel, u8 path);


#line 252 
void rtl8812ae_do_iqk(struct ieee80211_hw *hw, u8 delta_thermal_index, u8 thermal_value, u8 threshold);


#line 254 
void rtl8821ae_do_iqk(struct ieee80211_hw *hw, u8 delta_thermal_index, u8 thermal_value, u8 threshold);


#line 257 
u32 phy_get_tx_swing_8812A(struct ieee80211_hw *hw, u8 band, u8 rf_path);


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.h"
void rtl8821ae_dm_set_tx_ant_by_tx_info(struct ieee80211_hw *hw, u8 *pdesc, u32 mac_id);


#line 290 
void rtl8821ae_dm_init(struct ieee80211_hw *hw);


#line 291 
void rtl8821ae_dm_watchdog(struct ieee80211_hw *hw);


#line 292 
void rtl8821ae_dm_write_dig(struct ieee80211_hw *hw, u8 current_igi);


#line 293 
void rtl8821ae_dm_init_edca_turbo(struct ieee80211_hw *hw);


#line 294 
void rtl8821ae_dm_check_txpower_tracking_thermalmeter(struct ieee80211_hw *hw);


#line 295 
void rtl8821ae_dm_init_rate_adaptive_mask(struct ieee80211_hw *hw);


#line 296 
void rtl8821ae_dm_txpower_track_adjust(struct ieee80211_hw *hw, u8 type, u8 *pdirection, u32 *poutwrite_val);


#line 299 
void rtl8821ae_dm_clear_txpower_tracking_state(struct ieee80211_hw *hw);


#line 300 
void rtl8821ae_dm_write_cck_cca_thres(struct ieee80211_hw *hw, u8 current_cca);


#line 301 
void rtl8821ae_dm_initialize_txpower_tracking_thermalmeter(struct ieee80211_hw *hw);


#line 302 
void rtl8812ae_dm_txpwr_track_set_pwr(struct ieee80211_hw *hw, enum pwr_track_control_method method, u8 rf_path, u8 channel_mapped_index);


#line 306 
void rtl8821ae_dm_txpwr_track_set_pwr(struct ieee80211_hw *hw, enum pwr_track_control_method method, u8 rf_path, u8 channel_mapped_index);


#line 310 
void rtl8821ae_dm_update_init_rate(struct ieee80211_hw *hw, u8 rate);


#line 311 
u8 rtl8821ae_hw_rate_to_mrate(struct ieee80211_hw *hw, u8 rate);


#line 312 
void rtl8812ae_dm_txpower_tracking_callback_thermalmeter(struct ieee80211_hw *hw);


#line 313 
void rtl8821ae_dm_txpower_tracking_callback_thermalmeter(struct ieee80211_hw *hw);


#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.h"
void rtl8821ae_fill_h2c_cmd(struct ieee80211_hw *hw, u8 element_id, u32 cmd_len, u8 *cmdbuffer);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u32 const txscaling_tbl[37U] = {129U, 136U, 144U, 153U, 162U, 172U, 182U, 192U, 204U, 216U, 229U, 242U, 257U, 272U, 288U, 305U, 323U, 342U, 362U, 384U, 407U, 431U, 456U, 483U, 512U, 542U, 574U, 609U, 645U, 683U, 723U, 766U, 811U, 860U, 910U, 964U, 1022U};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u32 const rtl8821ae_txscaling_table[37U] = {129U, 136U, 144U, 153U, 162U, 172U, 182U, 192U, 204U, 216U, 229U, 242U, 257U, 272U, 288U, 305U, 323U, 342U, 362U, 384U, 407U, 431U, 456U, 483U, 512U, 542U, 574U, 609U, 645U, 683U, 723U, 766U, 811U, 860U, 910U, 964U, 1022U};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u32 const edca_setting_dl[10U] = {42063U, 6202447U, 6177570U, 6202411U, 42063U, 42544U, 6202928U, 6202411U};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u32 const edca_setting_ul[10U] = {6177570U, 42063U, 6202447U, 6202155U, 6202402U, 6202146U, 4105264U, 6202447U};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8818e_delta_swing_table_idx_24gb_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U};

#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8818e_delta_swing_table_idx_24gb_n[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U};

#line 266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gb_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gb_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U};

#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24ga_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24ga_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gcckb_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U};

#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gcckb_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U};

#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gccka_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U};

#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_24gccka_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U};

#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_5gb_n[3U][30U] = {{(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)13U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)14U, (unsigned char)14U, (unsigned char)15U, (unsigned char)16U, (unsigned char)17U, (unsigned char)17U, (unsigned char)17U, (unsigned char)18U, (unsigned char)18U, (unsigned char)18U}};

#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_5gb_p[3U][30U] = {{(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}};

#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_5ga_n[3U][30U] = {{(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)13U, (unsigned char)13U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)13U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)17U, (unsigned char)17U, (unsigned char)18U, (unsigned char)18U}};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8812ae_delta_swing_table_idx_5ga_p[3U][30U] = {{(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}, {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U, (unsigned char)11U}};

#line 334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gb_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gb_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24ga_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24ga_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U};

#line 350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gcckb_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U};

#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gcckb_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U};

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gccka_n[30U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)10U};

#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_24gccka_p[30U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)5U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)7U, (unsigned char)8U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)10U, (unsigned char)11U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U, (unsigned char)12U};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_5gb_n[3U][30U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}};

#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_5gb_p[3U][30U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}};

#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_5ga_n[3U][30U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}};

#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_delta_swing_table_idx_5ga_p[3U][30U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)15U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U, (unsigned char)16U}};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_txpower_track_adjust(struct ieee80211_hw *hw, u8 type, u8 *pdirection, u32 *poutwrite_val)
{
  
#line 406 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 407 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 408 
  u8 pwr_val = (unsigned char)0U;
  
#line 410 
  if ((unsigned int)type == 0U) 
    
#line 411 
    if ((int)rtlpriv->dm.swing_idx_ofdm[0] <= (int)rtlpriv->dm.swing_idx_ofdm_base[0]) {
      
#line 413 
      *pdirection = (unsigned char)1U;
      
#line 414 
      pwr_val = (unsigned char)((int)rtldm->swing_idx_ofdm_base[0] - (int)rtldm->swing_idx_ofdm[0]);
    }
    else {
      
#line 417 
      *pdirection = (unsigned char)2U;
      
#line 418 
      pwr_val = (unsigned char)((int)rtldm->swing_idx_ofdm[0] - (int)rtldm->swing_idx_ofdm_base[0]);
    }
  else 
    
#line 421 
    if ((unsigned int)type == 1U) 
      
#line 422 
      if ((int)rtldm->swing_idx_cck <= (int)rtldm->swing_idx_cck_base) {
        
#line 423 
        *pdirection = (unsigned char)1U;
        
#line 424 
        pwr_val = (unsigned char)((int)rtldm->swing_idx_cck_base - (int)rtldm->swing_idx_cck);
      }
      else {
        
#line 427 
        *pdirection = (unsigned char)2U;
        
#line 428 
        pwr_val = (unsigned char)((int)rtldm->swing_idx_cck - (int)rtldm->swing_idx_cck_base);
      }
    else ;
  
#line 433 
  if ((unsigned int)pwr_val > 5U && (unsigned int)*pdirection == 1U) 
    
#line 434 
    pwr_val = (unsigned char)6U; else ;
  
#line 436 
  *poutwrite_val = (unsigned int)((((int)pwr_val | ((int)pwr_val << 8)) | ((int)pwr_val << 16)) | ((int)pwr_val << 24));
  
#line 439 
  return;
}


#line 441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_clear_txpower_tracking_state(struct ieee80211_hw *hw)
{
  
#line 443 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 444 
  struct rtl_dm *rtldm = & rtlpriv->dm;
  
#line 445 
  struct rtl_efuse *rtlefuse = & rtlpriv->efuse;
  
#line 446 
  u8 p = (unsigned char)0U;
  
#line 448 
  rtldm->swing_idx_cck_base = rtldm->default_cck_index;
  
#line 449 
  rtldm->swing_idx_cck = rtldm->default_cck_index;
  
#line 450 
  rtldm->cck_index = (char)0;
  
#line 452 
  p = (unsigned char)0U;
  
#line 452 
  goto ldv_56507;
  ldv_56506: 
#line 453 
  ;
  
#line 453 
  rtldm->swing_idx_ofdm_base[(int)p] = rtldm->default_ofdm_index;
  
#line 454 
  rtldm->swing_idx_ofdm[(int)p] = rtldm->default_ofdm_index;
  
#line 455 
  rtldm->ofdm_index[(int)p] = (char)rtldm->default_ofdm_index;
  
#line 457 
  rtldm->power_index_offset[(int)p] = (char)0;
  
#line 458 
  rtldm->delta_power_index[(int)p] = (char)0;
  
#line 459 
  rtldm->delta_power_index_last[(int)p] = (char)0;
  
#line 461 
  rtldm->absolute_ofdm_swing_idx[(int)p] = (char)0;
  
#line 462 
  rtldm->remnant_ofdm_swing_idx[(int)p] = (char)0;
  
#line 452 
  p = (u8)((int)p + 1);
  ldv_56507: 
#line 453 
  ;
  
#line 452 
  if ((unsigned int)p <= 1U) 
#line 454 
                             goto ldv_56506; else 
#line 457 
                                                  goto ldv_56508;
  ldv_56508: 
#line 458 
  ;
  
#line 465 
  rtldm->modify_txagc_flag_path_a = (_Bool)0;
  
#line 467 
  rtldm->modify_txagc_flag_path_b = (_Bool)0;
  
#line 468 
  rtldm->remnant_cck_idx = (char)0;
  
#line 469 
  rtldm->thermalvalue = rtlefuse->eeprom_thermalmeter;
  
#line 470 
  rtldm->thermalvalue_iqk = rtlefuse->eeprom_thermalmeter;
  
#line 471 
  rtldm->thermalvalue_lck = rtlefuse->eeprom_thermalmeter;
  
#line 472 
  return;
}


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static u8 rtl8821ae_dm_get_swing_index(struct ieee80211_hw *hw)
{
  u32 bb_swing;
  
#line 476 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 477 
  u8 i = (unsigned char)0U;
  
#line 480 
  bb_swing = phy_get_tx_swing_8812A(hw,(unsigned char)((int)((unsigned char)rtlhal->current_bandtype)),(unsigned char)0);
  
#line 483 
  i = (unsigned char)0U;
  
#line 483 
  goto ldv_56517;
  ldv_56516: 
#line 484 
  ;
  
#line 484 
  if (rtl8821ae_txscaling_table[(int)i] == bb_swing) 
#line 485 
                                                     goto ldv_56515; else ;
  
#line 483 
  i = (u8)((int)i + 1);
  ldv_56517: 
#line 484 
  ;
  
#line 483 
  if ((unsigned int)i <= 36U) 
#line 485 
                              goto ldv_56516; else 
#line 488 
                                                   goto ldv_56515;
  ldv_56515: 
#line 489 
  ;
  
#line 487 
  return i;
}


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_initialize_txpower_tracking_thermalmeter(struct ieee80211_hw *hw)
{
  
#line 493 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 494 
  struct rtl_dm *rtldm = & rtlpriv->dm;
  
#line 495 
  struct rtl_efuse *rtlefuse = & rtlpriv->efuse;
  
#line 496 
  u8 default_swing_index = (unsigned char)0U;
  
#line 497 
  u8 p = (unsigned char)0U;
  
#line 499 
  rtlpriv->dm.txpower_track_control = (unsigned char)1U;
  
#line 500 
  rtldm->thermalvalue = rtlefuse->eeprom_thermalmeter;
  
#line 501 
  rtldm->thermalvalue_iqk = rtlefuse->eeprom_thermalmeter;
  
#line 502 
  rtldm->thermalvalue_lck = rtlefuse->eeprom_thermalmeter;
  
#line 503 
  default_swing_index = rtl8821ae_dm_get_swing_index(hw);
  
#line 505 
  if ((unsigned int)default_swing_index != 37U) 
#line 505 
                                                rtldm->default_ofdm_index = default_swing_index; else 
                                                                    
#line 505 
                                                                    rtldm->default_ofdm_index = (unsigned char)24U;
  
#line 508 
  rtldm->default_cck_index = (unsigned char)24U;
  
#line 510 
  rtldm->swing_idx_cck_base = rtldm->default_cck_index;
  
#line 511 
  rtldm->cck_index = (char)rtldm->default_cck_index;
  
#line 513 
  p = (unsigned char)0U;
  
#line 513 
  goto ldv_56527;
  ldv_56526: 
#line 514 
  ;
  
#line 514 
  rtldm->swing_idx_ofdm_base[(int)p] = rtldm->default_ofdm_index;
  
#line 516 
  rtldm->ofdm_index[(int)p] = (char)rtldm->default_ofdm_index;
  
#line 517 
  rtldm->delta_power_index[(int)p] = (char)0;
  
#line 518 
  rtldm->power_index_offset[(int)p] = (char)0;
  
#line 519 
  rtldm->delta_power_index_last[(int)p] = (char)0;
  
#line 513 
  p = (u8)((int)p + 1);
  ldv_56527: 
#line 514 
  ;
  
#line 513 
  if ((unsigned int)p <= 3U) 
#line 515 
                             goto ldv_56526; else 
#line 518 
                                                  goto ldv_56528;
  ldv_56528: 
#line 519 
  ;
  
#line 520 
  return;
}


#line 523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_init_edca_turbo(struct ieee80211_hw *hw)
{
  
#line 525 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 527 
  rtlpriv->dm.current_turbo_edca = (_Bool)0;
  
#line 528 
  rtlpriv->dm.is_any_nonbepkts = (_Bool)0;
  
#line 529 
  rtlpriv->dm.is_cur_rdlstate = (_Bool)0;
  
#line 530 
  return;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_init_rate_adaptive_mask(struct ieee80211_hw *hw)
{
  
#line 534 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 535 
  struct rate_adaptive *p_ra = & rtlpriv->ra;
  
#line 537 
  p_ra->ratr_state = (unsigned char)0U;
  
#line 538 
  p_ra->pre_ratr_state = (unsigned char)0U;
  
#line 540 
  rtlpriv->dm.dm_type = (unsigned char)1U;
  
#line 541 
  if ((unsigned int)rtlpriv->dm.dm_type == 1U) 
#line 542 
                                               rtlpriv->dm.useramask = (_Bool)1; else 
                                                                    
#line 544 
                                                                    rtlpriv->dm.useramask = (_Bool)0;
  
#line 546 
  p_ra->high_rssi_thresh_for_ra = 50U;
  
#line 547 
  p_ra->low_rssi_thresh_for_ra40m = 20U;
  
#line 548 
  return;
}


#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_init_dynamic_atc_switch(struct ieee80211_hw *hw)
{
  u32 tmp;
  
#line 552 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 554 
  rtlpriv->dm.crystal_cap = (int)rtlpriv->efuse.crystalcap;
  
#line 556 
  tmp = rtl_get_bbreg(hw,3372U,2048U);
  
#line 556 
  rtlpriv->dm.atc_status = (_Bool)(tmp != 0U);
  
#line 557 
  rtlpriv->dm.cfo_threshold = (unsigned char)10U;
  
#line 558 
  return;
}


#line 560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_common_info_self_init(struct ieee80211_hw *hw)
{
  u8 tmp;
  u32 tmp_0;
  u32 tmp_1;
  
#line 562 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 563 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 566 
  tmp_0 = rtl_get_bbreg(hw,2052U,65536U);
  
#line 566 
  rtlphy->cck_high_power = (unsigned char)(tmp_0 != 0U);
  
#line 570 
  tmp_1 = rtl_get_bbreg(hw,2056U,15U);
  
#line 570 
  tmp = (unsigned char)tmp_1;
  
#line 572 
  if (((unsigned long)tmp & 1UL) != 0UL) 
#line 573 
                                         rtlpriv->dm.rfpath_rxenable[0] = (_Bool)1; else ;
  
#line 574 
  if (((unsigned long)tmp & 2UL) != 0UL) 
#line 575 
                                         rtlpriv->dm.rfpath_rxenable[1] = (_Bool)1; else ;
  
#line 576 
  return;
}


#line 578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_init(struct ieee80211_hw *hw)
{
  
#line 580 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 581 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 582 
  u32 cur_igvalue = rtl_get_bbreg(hw,3152U,127U);
  
#line 584 
  ldv_spin_lock_72(& rtlpriv->locks.iqk_lock);
  
#line 585 
  rtlphy->lck_inprogress = (unsigned char)0U;
  
#line 586 
  ldv_spin_unlock_73(& rtlpriv->locks.iqk_lock);
  
#line 588 
  rtlpriv->dm.dm_type = (unsigned char)1U;
  
#line 589 
  rtl8821ae_dm_common_info_self_init(hw);
  
#line 590 
  rtl_dm_diginit(hw,cur_igvalue);
  
#line 591 
  rtl8821ae_dm_init_rate_adaptive_mask(hw);
  
#line 592 
  rtl8821ae_dm_init_edca_turbo(hw);
  
#line 593 
  rtl8821ae_dm_initialize_txpower_tracking_thermalmeter(hw);
  
#line 594 
  rtl8821ae_dm_init_dynamic_atc_switch(hw);
  
#line 595 
  return;
}


#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_find_minimum_rssi(struct ieee80211_hw *hw)
{
  
#line 599 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 600 
  struct dig_t *rtl_dm_dig = & rtlpriv->dm_digtable;
  
#line 601 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 604 
  if (mac->link_state <= (unsigned int)MAC80211_LINKING && rtlpriv->dm.entry_min_undec_sm_pwdb == 0L) {
    
#line 606 
    rtl_dm_dig->min_undec_pwdb_for_dm = (unsigned char)0U;
    
#line 607 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 262144ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 607 
      tmp = preempt_count();
      
#line 607 
      tmp_0 = preempt_count();
      
#line 607 
      printk("\001","rtl8821ae_dm_find_minimum_rssi",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
  }
  else ;
  
#line 610 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) 
    
#line 611 
    if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP || mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      
#line 613 
      rtl_dm_dig->min_undec_pwdb_for_dm = (unsigned char)rtlpriv->dm.entry_min_undec_sm_pwdb;
      
#line 615 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 262144ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 615 
        ;
        
#line 615 
        tmp_1 = preempt_count();
        
#line 615 
        tmp_2 = preempt_count();
        
#line 615 
        printk("\001","rtl8821ae_dm_find_minimum_rssi",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,rtlpriv->dm.entry_min_undec_sm_pwdb);
      }
      else ;
    }
    else {
      
#line 619 
      rtl_dm_dig->min_undec_pwdb_for_dm = (unsigned char)rtlpriv->dm.undec_sm_pwdb;
      
#line 621 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 262144ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 621 
        ;
        
#line 621 
        tmp_3 = preempt_count();
        
#line 621 
        tmp_4 = preempt_count();
        
#line 621 
        printk("\001","rtl8821ae_dm_find_minimum_rssi",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rtl_dm_dig->min_undec_pwdb_for_dm);
      }
      else ;
    }
  else {
    
#line 626 
    rtl_dm_dig->min_undec_pwdb_for_dm = (unsigned char)rtlpriv->dm.entry_min_undec_sm_pwdb;
    
#line 628 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 262144ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 628 
      ;
      
#line 628 
      tmp_5 = preempt_count();
      
#line 628 
      tmp_6 = preempt_count();
      
#line 628 
      printk("\001","rtl8821ae_dm_find_minimum_rssi",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)rtl_dm_dig->min_undec_pwdb_for_dm);
    }
    else ;
  }
  
#line 632 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_7;
    int tmp_8;
    
#line 632 
    ;
    
#line 632 
    tmp_7 = preempt_count();
    
#line 632 
    tmp_8 = preempt_count();
    
#line 632 
    printk("\001","rtl8821ae_dm_find_minimum_rssi",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,(int)rtl_dm_dig->min_undec_pwdb_for_dm);
  }
  else ;
  
#line 633 
  return;
}


#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8812ae_dm_rssi_dump_to_register(struct ieee80211_hw *hw)
{
  
#line 639 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 641 
  rtl_write_byte(rtlpriv,3056U,(unsigned char)((int)rtlpriv->stats.rx_rssi_percentage[0]));
  
#line 643 
  rtl_write_byte(rtlpriv,3057U,(unsigned char)((int)rtlpriv->stats.rx_rssi_percentage[1]));
  
#line 647 
  rtl_write_byte(rtlpriv,3060U,(unsigned char)((int)rtlpriv->stats.rx_evm_dbm[0]));
  
#line 649 
  rtl_write_byte(rtlpriv,3061U,(unsigned char)((int)rtlpriv->stats.rx_evm_dbm[1]));
  
#line 653 
  rtl_write_byte(rtlpriv,3062U,(unsigned char)((int)((unsigned char)rtlpriv->stats.rx_snr_db[0])));
  
#line 655 
  rtl_write_byte(rtlpriv,3063U,(unsigned char)((int)((unsigned char)rtlpriv->stats.rx_snr_db[1])));
  
#line 659 
  rtl_write_word(rtlpriv,3064U,(unsigned short)((int)rtlpriv->stats.rx_cfo_short[0]));
  
#line 661 
  rtl_write_word(rtlpriv,3066U,(unsigned short)((int)rtlpriv->stats.rx_cfo_short[1]));
  
#line 665 
  rtl_write_word(rtlpriv,3052U,(unsigned short)((int)rtlpriv->stats.rx_cfo_tail[0]));
  
#line 667 
  rtl_write_word(rtlpriv,3054U,(unsigned short)((int)rtlpriv->stats.rx_cfo_tail[1]));
  
#line 669 
  return;
}


#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_check_rssi_monitor(struct ieee80211_hw *hw)
{
  struct rtl_sta_info *drv_priv;
  u64 last_rxokcnt;
  
#line 673 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 674 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 675 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 676 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 678 
  u8 h2c_parameter[4U] = {(unsigned char)0U};
  
#line 679 
  long tmp_entry_max_pwdb = 0L;
  
#line 679 
  long tmp_entry_min_pwdb = 255L;
  
#line 680 
  u8 stbc_tx = (unsigned char)0U;
  
#line 681 
  u64 cur_txokcnt = 0ULL;
  
#line 681 
  u64 cur_rxokcnt = 0ULL;
  
#line 682 
  u64 last_txokcnt = 0ULL;
  
#line 684 
  cur_txokcnt = (unsigned long long)rtlpriv->stats.txbytesunicast - last_txokcnt;
  
#line 685 
  cur_rxokcnt = (unsigned long long)rtlpriv->stats.rxbytesunicast - last_rxokcnt;
  
#line 686 
  last_txokcnt = (unsigned long long)rtlpriv->stats.txbytesunicast;
  
#line 687 
  last_rxokcnt = (unsigned long long)rtlpriv->stats.rxbytesunicast;
  
#line 688 
  if (last_txokcnt * 6ULL < cur_rxokcnt) 
#line 689 
                                         h2c_parameter[3] = (unsigned char)1U; else 
                                                                    
#line 691 
                                                                    h2c_parameter[3] = (unsigned char)0U;
  
#line 694 
  if ((mac->opmode == (unsigned int)NL80211_IFTYPE_AP || mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) || mac->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    struct rtl_sta_info *tmp;
    struct rtl_sta_info *tmp_0;
    
#line 697 
    ldv_spin_lock_bh_74(& rtlpriv->locks.entry_list_lock);
    {
      
#line 698 
      struct list_head const *__mptr = (struct list_head const *)rtlpriv->entry_list.next;
      
#line 698 
      tmp = (struct rtl_sta_info *)__mptr;
    }
    
#line 698 
    drv_priv = tmp;
    
#line 698 
    goto ldv_56586;
    ldv_56585: 
#line 699 
    ;
    
#line 699 
    if (drv_priv->rssi_stat.undec_sm_pwdb < tmp_entry_min_pwdb) 
#line 701 
                                                                tmp_entry_min_pwdb = drv_priv->rssi_stat.undec_sm_pwdb; else ;
    
#line 703 
    if (drv_priv->rssi_stat.undec_sm_pwdb > tmp_entry_max_pwdb) 
#line 705 
                                                                tmp_entry_max_pwdb = drv_priv->rssi_stat.undec_sm_pwdb; else ;
    {
      
#line 698 
      struct list_head const *__mptr_0 = (struct list_head const *)drv_priv->list.next;
      
#line 698 
      tmp_0 = (struct rtl_sta_info *)__mptr_0;
    }
    
#line 698 
    drv_priv = tmp_0;
    ldv_56586: 
#line 700 
    ;
    
#line 698 
    if (& drv_priv->list != & rtlpriv->entry_list) 
#line 700 
                                                   goto ldv_56585; else 
                                                                    
#line 703 
                                                                    goto ldv_56587;
    ldv_56587: 
#line 704 
    ;
    
#line 708 
    ldv_spin_unlock_bh_75(& rtlpriv->locks.entry_list_lock);
    
#line 711 
    if (tmp_entry_max_pwdb != 0L) {
      
#line 712 
      rtlpriv->dm.entry_max_undec_sm_pwdb = tmp_entry_max_pwdb;
      
#line 714 
      if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[13] & 2UL) != 0UL) != 0L) 
        
#line 714 
        printk("\001",tmp_entry_max_pwdb,tmp_entry_max_pwdb); else ;
    }
    else 
#line 718 
         rtlpriv->dm.entry_max_undec_sm_pwdb = 0L;
    
#line 721 
    if (tmp_entry_min_pwdb != 255L) {
      
#line 722 
      rtlpriv->dm.entry_min_undec_sm_pwdb = tmp_entry_min_pwdb;
      
#line 724 
      if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[13] & 2UL) != 0UL) != 0L) 
        
#line 724 
        printk("\001",tmp_entry_min_pwdb,tmp_entry_min_pwdb); else ;
    }
    else 
#line 728 
         rtlpriv->dm.entry_min_undec_sm_pwdb = 0L;
  }
  else ;
  
#line 732 
  if ((int)rtlpriv->dm.useramask != 0) {
    
#line 733 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 734 
      if (((unsigned int)mac->mode == 128U || (unsigned int)mac->mode == 64U) || (unsigned int)mac->mode == 256U) 
        
#line 737 
        stbc_tx = (unsigned char)((unsigned int)((unsigned char)((unsigned long)mac->vht_cur_stbc >> 1)) & 1U); else 
                                                                    
#line 740 
                                                                    stbc_tx = (unsigned char)((unsigned int)((unsigned char)((unsigned long)mac->ht_cur_stbc >> 1)) & 1U);
      
#line 742 
      h2c_parameter[3] = (unsigned char)((int)h2c_parameter[3] | ((int)stbc_tx << 1));
    }
    else ;
    
#line 744 
    h2c_parameter[2] = (unsigned char)rtlpriv->dm.undec_sm_pwdb;
    
#line 746 
    h2c_parameter[1] = (unsigned char)32U;
    
#line 747 
    h2c_parameter[0] = (unsigned char)0U;
    
#line 748 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 749 
                                              rtl8821ae_fill_h2c_cmd(hw,(unsigned char)66,4U,(u8 *)(& h2c_parameter)); else 
                                                                    
#line 752 
                                                                    rtl8821ae_fill_h2c_cmd(hw,(unsigned char)66,3U,(u8 *)(& h2c_parameter));
  }
  else 
#line 755 
       rtl_write_byte(rtlpriv,1278U,(unsigned char)((int)((unsigned char)rtlpriv->dm.undec_sm_pwdb)));
  
#line 757 
  if ((unsigned int)rtlhal->hw_type == 14U) 
#line 758 
                                            rtl8812ae_dm_rssi_dump_to_register(hw); else ;
  
#line 759 
  rtl8821ae_dm_find_minimum_rssi(hw);
  
#line 760 
  dm_digtable->rssi_val_min = rtlpriv->dm_digtable.min_undec_pwdb_for_dm;
  
#line 761 
  return;
}


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_write_cck_cca_thres(struct ieee80211_hw *hw, u8 current_cca)
{
  
#line 765 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 766 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 768 
  if ((int)dm_digtable->cur_cck_cca_thres != (int)current_cca) 
#line 769 
                                                               rtl_write_byte(rtlpriv,2570U,(unsigned char)((int)current_cca)); else ;
  
#line 771 
  dm_digtable->pre_cck_cca_thres = dm_digtable->cur_cck_cca_thres;
  
#line 772 
  dm_digtable->cur_cck_cca_thres = current_cca;
  
#line 773 
  return;
}


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_write_dig(struct ieee80211_hw *hw, u8 current_igi)
{
  
#line 777 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 778 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 780 
  if ((unsigned int)dm_digtable->stop_dig != 0U) 
#line 781 
                                                 goto return_label; else ;
  
#line 783 
  if (dm_digtable->cur_igvalue != (unsigned int)current_igi) {
    
#line 784 
    rtl_set_bbreg(hw,3152U,4294967295U,(unsigned int)current_igi);
    
#line 786 
    if ((unsigned int)rtlpriv->phy.rf_type != 0U) 
#line 787 
                                                  rtl_set_bbreg(hw,3664U,4294967295U,(unsigned int)current_igi); else ;
  }
  else ;
  
#line 790 
  dm_digtable->cur_igvalue = (unsigned int)current_igi;
  return_label: 
#line 791 
                return;
}


#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_dig(struct ieee80211_hw *hw)
{
  u8 dig_min_0;
  u8 dig_max_of_min;
  bool first_connect;
  bool first_disconnect;
  u8 dm_dig_max;
  u8 dm_dig_min;
  u8 offset;
  
#line 795 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 796 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 797 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 798 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 803 
  u8 current_igi = (unsigned char)dm_digtable->cur_igvalue;
  
#line 805 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 805 
    tmp = preempt_count();
    
#line 805 
    tmp_0 = preempt_count();
    
#line 805 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 807 
  if ((int)mac->act_scanning != 0) {
    
#line 808 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 808 
      tmp_1 = preempt_count();
      
#line 808 
      tmp_2 = preempt_count();
      
#line 808 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 810 
    goto return_label;
  }
  else ;
  
#line 814 
  dig_min_0 = dm_digtable->dig_min_0;
  
#line 815 
  first_connect = (_Bool)((mac->link_state > (unsigned int)MAC80211_LINKING && ! dm_digtable->media_connect_0) != 0);
  
#line 817 
  first_disconnect = (_Bool)((mac->link_state <= (unsigned int)MAC80211_LINKING && (int)dm_digtable->media_connect_0 != 0) != 0);
  
#line 822 
  dm_dig_max = (unsigned char)90U;
  
#line 824 
  if ((unsigned int)rtlhal->hw_type != 13U) 
#line 825 
                                            dm_dig_min = (unsigned char)30U; else 
                                                                    
#line 827 
                                                                    dm_dig_min = (unsigned char)28U;
  
#line 829 
  dig_max_of_min = (unsigned char)50U;
  
#line 831 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) {
    
#line 832 
    if ((unsigned int)rtlhal->hw_type != 13U) 
#line 833 
                                              offset = (unsigned char)20U; else 
                                                                    
#line 835 
                                                                    offset = (unsigned char)10U;
    
#line 837 
    if ((int)dm_digtable->rssi_val_min + (int)offset > (int)dm_dig_max) 
      
#line 838 
      dm_digtable->rx_gain_max = dm_dig_max;
    else 
      
#line 839 
      if ((int)dm_digtable->rssi_val_min + (int)offset < (int)dm_dig_min) 
        
#line 840 
        dm_digtable->rx_gain_max = dm_dig_min; else 
#line 842 
                                                    dm_digtable->rx_gain_max = (unsigned char)((int)dm_digtable->rssi_val_min + (int)offset);
    
#line 845 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 845 
      ;
      
#line 845 
      ;
      
#line 845 
      tmp_3 = preempt_count();
      
#line 845 
      tmp_4 = preempt_count();
      
#line 845 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)dm_digtable->rssi_val_min,(int)dm_digtable->rx_gain_max);
    }
    else ;
    
#line 849 
    if ((int)rtlpriv->dm.one_entry_only != 0) {
      
#line 850 
      offset = (unsigned char)0U;
      
#line 852 
      if ((int)dm_digtable->rssi_val_min - (int)offset < (int)dm_dig_min) 
        
#line 853 
        dig_min_0 = dm_dig_min;
      else 
        
#line 854 
        if ((int)dm_digtable->rssi_val_min - (int)offset > (int)dig_max_of_min) 
          
#line 856 
          dig_min_0 = dig_max_of_min; else 
#line 858 
                                           dig_min_0 = (unsigned char)((int)dm_digtable->rssi_val_min - (int)offset);
      
#line 861 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 861 
        ;
        
#line 861 
        tmp_5 = preempt_count();
        
#line 861 
        tmp_6 = preempt_count();
        
#line 861 
        printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)dig_min_0);
      }
      else ;
    }
    else 
#line 865 
         dig_min_0 = dm_dig_min;
  }
  else {
    
#line 868 
    dm_digtable->rx_gain_max = dm_dig_max;
    
#line 869 
    dig_min_0 = dm_dig_min;
    
#line 870 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 870 
      tmp_7 = preempt_count();
      
#line 870 
      tmp_8 = preempt_count();
      
#line 870 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
  }
  
#line 874 
  if (rtlpriv->falsealm_cnt.cnt_all > 10000U) {
    
#line 875 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 875 
      tmp_9 = preempt_count();
      
#line 875 
      tmp_10 = preempt_count();
      
#line 875 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
    }
    else ;
    
#line 878 
    if ((unsigned int)dm_digtable->large_fa_hit != 3U) 
#line 879 
                                                       dm_digtable->large_fa_hit = (u8)((int)dm_digtable->large_fa_hit + 1); else ;
    
#line 880 
    if ((int)dm_digtable->forbidden_igi < (int)current_igi) {
      
#line 881 
      dm_digtable->forbidden_igi = current_igi;
      
#line 882 
      dm_digtable->large_fa_hit = (unsigned char)1U;
    }
    else ;
    
#line 885 
    if ((unsigned int)dm_digtable->large_fa_hit > 2U) {
      
#line 886 
      if ((int)dm_digtable->forbidden_igi + 1 > (int)dm_digtable->rx_gain_max) 
        
#line 888 
        dm_digtable->rx_gain_min = dm_digtable->rx_gain_max; else 
#line 891 
                                                                  dm_digtable->rx_gain_min = (unsigned char)((unsigned int)dm_digtable->forbidden_igi + 1U);
      
#line 893 
      dm_digtable->recover_cnt = 3600U;
    }
    else ;
  }
  else 
    
#line 897 
    if (dm_digtable->recover_cnt != 0U) 
#line 898 
                                        dm_digtable->recover_cnt -= 1U;
    else 
      
#line 900 
      if ((unsigned int)dm_digtable->large_fa_hit <= 2U) 
        
#line 901 
        if ((int)dm_digtable->forbidden_igi + -1 < (int)dig_min_0) {
          
#line 903 
          dm_digtable->forbidden_igi = dig_min_0;
          
#line 905 
          dm_digtable->rx_gain_min = dig_min_0;
          
#line 907 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_11;
            int tmp_12;
            
#line 907 
            tmp_11 = preempt_count();
            
#line 907 
            tmp_12 = preempt_count();
            
#line 907 
            printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
          }
          else ;
        }
        else {
          
#line 910 
          dm_digtable->forbidden_igi = (u8)((int)dm_digtable->forbidden_igi - 1);
          
#line 911 
          dm_digtable->rx_gain_min = (unsigned char)((unsigned int)dm_digtable->forbidden_igi + 1U);
          
#line 913 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_13;
            int tmp_14;
            
#line 913 
            tmp_13 = preempt_count();
            
#line 913 
            tmp_14 = preempt_count();
            
#line 913 
            printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0);
          }
          else ;
        }
      else 
#line 917 
           dm_digtable->large_fa_hit = (unsigned char)0U;
  
#line 921 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_15;
    int tmp_16;
    
#line 921 
    ;
    
#line 921 
    tmp_15 = preempt_count();
    
#line 921 
    tmp_16 = preempt_count();
    
#line 921 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0,(int)dm_digtable->large_fa_hit);
  }
  else ;
  
#line 925 
  if ((unsigned int)rtlpriv->dm.dbginfo.num_qry_beacon_pkt <= 9U) 
#line 926 
                                                                  dm_digtable->rx_gain_min = dm_dig_min; else ;
  
#line 928 
  if ((int)dm_digtable->rx_gain_min > (int)dm_digtable->rx_gain_max) 
    
#line 929 
    dm_digtable->rx_gain_min = dm_digtable->rx_gain_max; else ;
  
#line 932 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) {
    
#line 933 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_17;
      int tmp_18;
      
#line 933 
      tmp_17 = preempt_count();
      
#line 933 
      tmp_18 = preempt_count();
      
#line 933 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0);
    }
    else ;
    
#line 935 
    if ((int)first_connect != 0) {
      
#line 936 
      if ((int)dm_digtable->rssi_val_min <= (int)dig_max_of_min) 
#line 937 
                                                                 current_igi = dm_digtable->rssi_val_min; else 
                                                                    
#line 939 
                                                                    current_igi = dig_max_of_min;
      
#line 940 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_19;
        int tmp_20;
        
#line 940 
        tmp_19 = preempt_count();
        
#line 940 
        tmp_20 = preempt_count();
        
#line 940 
        printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0);
      }
      else ;
    }
    else {
      
#line 943 
      if (rtlpriv->falsealm_cnt.cnt_all > 1024U) 
#line 944 
                                                 current_igi = (unsigned char)((unsigned int)current_igi + 4U);
      else 
        
#line 945 
        if (rtlpriv->falsealm_cnt.cnt_all > 768U) 
#line 946 
                                                  current_igi = (unsigned char)((unsigned int)current_igi + 2U);
        else 
          
#line 947 
          if (rtlpriv->falsealm_cnt.cnt_all <= 199U) 
#line 948 
                                                     current_igi = (unsigned char)((unsigned int)current_igi + 254U); else ;
      
#line 950 
      if ((unsigned int)rtlpriv->dm.dbginfo.num_qry_beacon_pkt <= 9U && rtlpriv->falsealm_cnt.cnt_all <= 767U) {
        
#line 952 
        current_igi = dm_digtable->rx_gain_min;
        
#line 953 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_21;
          int tmp_22;
          
#line 953 
          tmp_21 = preempt_count();
          
#line 953 
          tmp_22 = preempt_count();
          
#line 953 
          printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0);
        }
        else ;
      }
      else ;
    }
  }
  else {
    
#line 958 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_23;
      int tmp_24;
      
#line 958 
      tmp_23 = preempt_count();
      
#line 958 
      tmp_24 = preempt_count();
      
#line 958 
      printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0);
    }
    else ;
    
#line 960 
    if ((int)first_disconnect != 0) {
      
#line 961 
      current_igi = dm_digtable->rx_gain_min;
      
#line 962 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_25;
        int tmp_26;
        
#line 962 
        tmp_25 = preempt_count();
        
#line 962 
        tmp_26 = preempt_count();
        
#line 962 
        printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_26 & 2096896UL,tmp_25 != 0);
      }
      else ;
    }
    else {
      
#line 968 
      if (rtlpriv->falsealm_cnt.cnt_all > 2000U) 
#line 969 
                                                 current_igi = (unsigned char)((unsigned int)current_igi + 4U);
      else 
        
#line 970 
        if (rtlpriv->falsealm_cnt.cnt_all > 600U) 
#line 971 
                                                  current_igi = (unsigned char)((unsigned int)current_igi + 2U);
        else 
          
#line 972 
          if (rtlpriv->falsealm_cnt.cnt_all <= 299U) 
#line 973 
                                                     current_igi = (unsigned char)((unsigned int)current_igi + 254U); else ;
      
#line 975 
      if ((unsigned int)current_igi > 61U) 
#line 976 
                                           current_igi = (unsigned char)62U; else ;
      
#line 978 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_27;
        int tmp_28;
        
#line 978 
        tmp_27 = preempt_count();
        
#line 978 
        tmp_28 = preempt_count();
        
#line 978 
        printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_28 & 2096896UL,tmp_27 != 0);
      }
      else ;
    }
  }
  
#line 981 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_29;
    int tmp_30;
    
#line 981 
    tmp_29 = preempt_count();
    
#line 981 
    tmp_30 = preempt_count();
    
#line 981 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0);
  }
  else ;
  
#line 985 
  if ((int)dm_digtable->rx_gain_max < (int)current_igi) 
#line 986 
                                                        current_igi = dm_digtable->rx_gain_max; else ;
  
#line 987 
  if ((int)dm_digtable->rx_gain_min > (int)current_igi) 
#line 988 
                                                        current_igi = dm_digtable->rx_gain_min; else ;
  
#line 990 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_31;
    int tmp_32;
    
#line 990 
    ;
    
#line 990 
    ;
    
#line 990 
    tmp_31 = preempt_count();
    
#line 990 
    tmp_32 = preempt_count();
    
#line 990 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_32 & 2096896UL,tmp_31 != 0,(int)dm_digtable->rx_gain_max,(int)dm_digtable->rx_gain_min);
  }
  else ;
  
#line 993 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_33;
    int tmp_34;
    
#line 993 
    ;
    
#line 993 
    tmp_33 = preempt_count();
    
#line 993 
    tmp_34 = preempt_count();
    
#line 993 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_34 & 2096896UL,tmp_33 != 0,rtlpriv->falsealm_cnt.cnt_all);
  }
  else ;
  
#line 995 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_35;
    int tmp_36;
    
#line 995 
    ;
    
#line 995 
    tmp_35 = preempt_count();
    
#line 995 
    tmp_36 = preempt_count();
    
#line 995 
    printk("\001","rtl8821ae_dm_dig",(unsigned long)tmp_36 & 2096896UL,tmp_35 != 0,(int)current_igi);
  }
  else ;
  
#line 998 
  rtl8821ae_dm_write_dig(hw,(unsigned char)((int)current_igi));
  
#line 999 
  dm_digtable->media_connect_0 = (_Bool)(mac->link_state > (unsigned int)MAC80211_LINKING);
  
#line 1001 
  dm_digtable->dig_min_0 = dig_min_0;
  return_label: 
#line 1002 
                return;
}


#line 1004  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_common_info_self_update(struct ieee80211_hw *hw)
{
  struct rtl_sta_info *drv_priv;
  
#line 1006 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1007 
  u8 cnt = (unsigned char)0U;
  
#line 1010 
  rtlpriv->dm.tx_rate = (unsigned char)255U;
  
#line 1012 
  rtlpriv->dm.one_entry_only = (_Bool)0;
  
#line 1014 
  if (rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_STATION && rtlpriv->mac80211.link_state > (unsigned int)MAC80211_LINKING) {
    
#line 1016 
    rtlpriv->dm.one_entry_only = (_Bool)1;
    
#line 1017 
    goto return_label;
  }
  else ;
  
#line 1020 
  if ((rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_AP || rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_ADHOC) || rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    struct rtl_sta_info *tmp;
    struct rtl_sta_info *tmp_0;
    
#line 1023 
    ldv_spin_lock_bh_76(& rtlpriv->locks.entry_list_lock);
    {
      
#line 1024 
      struct list_head const *__mptr = (struct list_head const *)rtlpriv->entry_list.next;
      
#line 1024 
      tmp = (struct rtl_sta_info *)__mptr;
    }
    
#line 1024 
    drv_priv = tmp;
    
#line 1024 
    goto ldv_56627;
    ldv_56626: 
#line 1025 
    ;
    
#line 1025 
    cnt = (u8)((int)cnt + 1);
    {
      
#line 1024 
      struct list_head const *__mptr_0 = (struct list_head const *)drv_priv->list.next;
      
#line 1024 
      tmp_0 = (struct rtl_sta_info *)__mptr_0;
    }
    
#line 1024 
    drv_priv = tmp_0;
    ldv_56627: 
#line 1026 
    ;
    
#line 1024 
    if (& drv_priv->list != & rtlpriv->entry_list) 
#line 1026 
                                                   goto ldv_56626; else 
                                                                    
#line 1029 
                                                                    goto ldv_56628;
    ldv_56628: 
#line 1030 
    ;
    
#line 1026 
    ldv_spin_unlock_bh_77(& rtlpriv->locks.entry_list_lock);
    
#line 1028 
    if ((unsigned int)cnt == 1U) 
#line 1029 
                                 rtlpriv->dm.one_entry_only = (_Bool)1; else ;
  }
  else ;
  return_label: 
#line 1031 
                return;
}


#line 1033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_false_alarm_counter_statistics(struct ieee80211_hw *hw)
{
  
#line 1035 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1036 
  struct false_alarm_statistics *falsealm_cnt = & rtlpriv->falsealm_cnt;
  
#line 1037 
  u32 cck_enable = 0U;
  
#line 1040 
  falsealm_cnt->cnt_ofdm_fail = rtl_get_bbreg(hw,3912U,65535U);
  
#line 1042 
  falsealm_cnt->cnt_cck_fail = rtl_get_bbreg(hw,2652U,65535U);
  
#line 1045 
  cck_enable = rtl_get_bbreg(hw,2056U,268435456U);
  
#line 1046 
  if (cck_enable != 0U) 
#line 1047 
                        falsealm_cnt->cnt_all = falsealm_cnt->cnt_ofdm_fail + falsealm_cnt->cnt_cck_fail; else 
                                                                    
#line 1050 
                                                                    falsealm_cnt->cnt_all = falsealm_cnt->cnt_ofdm_fail;
  
#line 1053 
  rtl_set_bbreg(hw,2468U,131072U,1U);
  
#line 1054 
  rtl_set_bbreg(hw,2468U,131072U,0U);
  
#line 1056 
  rtl_set_bbreg(hw,2604U,32768U,0U);
  
#line 1057 
  rtl_set_bbreg(hw,2604U,32768U,1U);
  
#line 1059 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1059 
    ;
    
#line 1059 
    tmp = preempt_count();
    
#line 1059 
    tmp_0 = preempt_count();
    
#line 1059 
    printk("\001","rtl8821ae_dm_false_alarm_counter_statistics",(unsigned long)tmp_0 & 2096896UL,tmp != 0,falsealm_cnt->cnt_cck_fail);
  }
  else ;
  
#line 1061 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1061 
    ;
    
#line 1061 
    tmp_1 = preempt_count();
    
#line 1061 
    tmp_2 = preempt_count();
    
#line 1061 
    printk("\001","rtl8821ae_dm_false_alarm_counter_statistics",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,falsealm_cnt->cnt_ofdm_fail);
  }
  else ;
  
#line 1063 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 1063 
    ;
    
#line 1063 
    tmp_3 = preempt_count();
    
#line 1063 
    tmp_4 = preempt_count();
    
#line 1063 
    printk("\001","rtl8821ae_dm_false_alarm_counter_statistics",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,falsealm_cnt->cnt_all);
  }
  else ;
  
#line 1064 
  return;
}


#line 1067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8812ae_dm_check_txpower_tracking_thermalmeter(struct ieee80211_hw *hw)
{
  
#line 1070 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1072 
  if ((unsigned int)rtlpriv->dm.tm_trigger == 0U) {
    
#line 1073 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,66U,196608U,3U);
    
#line 1075 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1075 
      tmp = preempt_count();
      
#line 1075 
      tmp_0 = preempt_count();
      
#line 1075 
      printk("\001","rtl8812ae_dm_check_txpower_tracking_thermalmeter",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 1077 
    rtlpriv->dm.tm_trigger = (unsigned char)1U;
    
#line 1078 
    goto return_label;
  }
  else ;
  
#line 1080 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1080 
    tmp_1 = preempt_count();
    
#line 1080 
    tmp_2 = preempt_count();
    
#line 1080 
    printk("\001","rtl8812ae_dm_check_txpower_tracking_thermalmeter",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
  }
  else ;
  
#line 1082 
  rtl8812ae_dm_txpower_tracking_callback_thermalmeter(hw);
  return_label: 
#line 1083 
                return;
}


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_iq_calibrate(struct ieee80211_hw *hw)
{
  
#line 1087 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 1088 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1089 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1091 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) {
    
#line 1092 
    if ((unsigned int)rtldm->linked_interval <= 2U) 
#line 1093 
                                                    rtldm->linked_interval = (u8)((int)rtldm->linked_interval + 1); else ;
    
#line 1095 
    if ((unsigned int)rtldm->linked_interval == 2U) 
      
#line 1096 
      if ((unsigned int)rtlhal->hw_type == 14U) 
#line 1097 
                                                rtl8812ae_phy_iq_calibrate(hw,(_Bool)0); else 
                                                                    
#line 1099 
                                                                    rtl8821ae_phy_iq_calibrate(hw,(_Bool)0);
    else ;
  }
  else 
#line 1102 
       rtldm->linked_interval = (unsigned char)0U;
  
#line 1103 
  return;
}


#line 1106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8812ae_get_delta_swing_table(struct ieee80211_hw *hw, u8 **up_a, u8 **down_a, u8 **up_b, u8 **down_b)
{
  
#line 1110 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1111 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1112 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1113 
  u8 channel = rtlphy->current_channel;
  
#line 1114 
  u8 rate = rtldm->tx_rate;
  
#line 1116 
  if ((unsigned int)channel + 255U <= 13U) 
    
#line 1117 
    if ((unsigned int)rate <= 3U) {
      
#line 1118 
      *up_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gccka_p);
      
#line 1119 
      *down_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gccka_n);
      
#line 1120 
      *up_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gcckb_p);
      
#line 1121 
      *down_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gcckb_n);
    }
    else {
      
#line 1123 
      *up_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_24ga_p);
      
#line 1124 
      *down_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_24ga_n);
      
#line 1125 
      *up_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gb_p);
      
#line 1126 
      *down_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_24gb_n);
    }
  else 
    
#line 1128 
    if ((unsigned int)channel + 220U <= 28U) {
      
#line 1129 
      *up_a = (u8 *)(&(rtl8812ae_delta_swing_table_idx_5ga_p[0]));
      
#line 1130 
      *down_a = (u8 *)(&(rtl8812ae_delta_swing_table_idx_5ga_n[0]));
      
#line 1131 
      *up_b = (u8 *)(&(rtl8812ae_delta_swing_table_idx_5gb_p[0]));
      
#line 1132 
      *down_b = (u8 *)(&(rtl8812ae_delta_swing_table_idx_5gb_n[0]));
    }
    else 
      
#line 1133 
      if ((unsigned int)channel + 156U <= 40U) {
        
#line 1134 
        *up_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_5ga_p[1]);
        
#line 1135 
        *down_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_5ga_n[1]);
        
#line 1136 
        *up_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_5gb_p[1]);
        
#line 1137 
        *down_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_5gb_n[1]);
      }
      else 
        
#line 1138 
        if ((unsigned int)channel + 107U <= 24U) {
          
#line 1139 
          *up_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_5ga_p[2]);
          
#line 1140 
          *down_a = (u8 *)(& rtl8812ae_delta_swing_table_idx_5ga_n[2]);
          
#line 1141 
          *up_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_5gb_p[2]);
          
#line 1142 
          *down_b = (u8 *)(& rtl8812ae_delta_swing_table_idx_5gb_n[2]);
        }
        else {
          
#line 1144 
          *up_a = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_p);
          
#line 1145 
          *down_a = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_n);
          
#line 1146 
          *up_b = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_p);
          
#line 1147 
          *down_b = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_n);
        }
  
#line 1149 
  return;
}


#line 1151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_update_init_rate(struct ieee80211_hw *hw, u8 rate)
{
  
#line 1153 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1154 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1155 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1156 
  u8 p = (unsigned char)0U;
  
#line 1158 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1158 
    ;
    
#line 1158 
    tmp = preempt_count();
    
#line 1158 
    tmp_0 = preempt_count();
    
#line 1158 
    printk("\001","rtl8821ae_dm_update_init_rate",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rate);
  }
  else ;
  
#line 1161 
  rtldm->tx_rate = rate;
  
#line 1163 
  if ((unsigned int)rtlhal->hw_type == 13U) 
#line 1164 
                                            rtl8821ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)0,(unsigned char)0);
  else {
    
#line 1166 
    p = (unsigned char)0U;
    
#line 1166 
    goto ldv_56669;
    ldv_56668: 
#line 1167 
    ;
    
#line 1167 
    rtl8812ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)((int)p),(unsigned char)0);
    
#line 1166 
    p = (u8)((int)p + 1);
    ldv_56669: 
#line 1167 
    ;
    
#line 1166 
    if ((unsigned int)p <= 1U) 
#line 1168 
                               goto ldv_56668; else 
#line 1171 
                                                    goto ldv_56670;
    ldv_56670: 
#line 1172 
    ;
  }
  
#line 1174 
  return;
}


#line 1171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
u8 rtl8821ae_hw_rate_to_mrate(struct ieee80211_hw *hw, u8 rate)
{
  
#line 1173 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1174 
  u8 ret_rate = (unsigned char)2U;
  
#line 1176 
  switch ((int)rate) {
    case 0: 
#line 1177 
    ;
    
#line 1178 
    ret_rate = (unsigned char)2U;
    
#line 1179 
    goto ldv_56678;
    case 1: 
#line 1180 
    ;
    
#line 1181 
    ret_rate = (unsigned char)4U;
    
#line 1182 
    goto ldv_56678;
    case 2: 
#line 1183 
    ;
    
#line 1184 
    ret_rate = (unsigned char)11U;
    
#line 1185 
    goto ldv_56678;
    case 3: 
#line 1186 
    ;
    
#line 1187 
    ret_rate = (unsigned char)22U;
    
#line 1188 
    goto ldv_56678;
    case 4: 
#line 1189 
    ;
    
#line 1190 
    ret_rate = (unsigned char)12U;
    
#line 1191 
    goto ldv_56678;
    case 5: 
#line 1192 
    ;
    
#line 1193 
    ret_rate = (unsigned char)18U;
    
#line 1194 
    goto ldv_56678;
    case 6: 
#line 1195 
    ;
    
#line 1196 
    ret_rate = (unsigned char)24U;
    
#line 1197 
    goto ldv_56678;
    case 7: 
#line 1198 
    ;
    
#line 1199 
    ret_rate = (unsigned char)36U;
    
#line 1200 
    goto ldv_56678;
    case 8: 
#line 1201 
    ;
    
#line 1202 
    ret_rate = (unsigned char)48U;
    
#line 1203 
    goto ldv_56678;
    case 9: 
#line 1204 
    ;
    
#line 1205 
    ret_rate = (unsigned char)72U;
    
#line 1206 
    goto ldv_56678;
    case 10: 
#line 1207 
    ;
    
#line 1208 
    ret_rate = (unsigned char)96U;
    
#line 1209 
    goto ldv_56678;
    case 11: 
#line 1210 
    ;
    
#line 1211 
    ret_rate = (unsigned char)108U;
    
#line 1212 
    goto ldv_56678;
    case 12: 
#line 1213 
    ;
    
#line 1214 
    ret_rate = (unsigned char)128U;
    
#line 1215 
    goto ldv_56678;
    case 13: 
#line 1216 
    ;
    
#line 1217 
    ret_rate = (unsigned char)129U;
    
#line 1218 
    goto ldv_56678;
    case 14: 
#line 1219 
    ;
    
#line 1220 
    ret_rate = (unsigned char)130U;
    
#line 1221 
    goto ldv_56678;
    case 15: 
#line 1222 
    ;
    
#line 1223 
    ret_rate = (unsigned char)131U;
    
#line 1224 
    goto ldv_56678;
    case 16: 
#line 1225 
    ;
    
#line 1226 
    ret_rate = (unsigned char)132U;
    
#line 1227 
    goto ldv_56678;
    case 17: 
#line 1228 
    ;
    
#line 1229 
    ret_rate = (unsigned char)133U;
    
#line 1230 
    goto ldv_56678;
    case 18: 
#line 1231 
    ;
    
#line 1232 
    ret_rate = (unsigned char)134U;
    
#line 1233 
    goto ldv_56678;
    case 19: 
#line 1234 
    ;
    
#line 1235 
    ret_rate = (unsigned char)135U;
    
#line 1236 
    goto ldv_56678;
    case 20: 
#line 1237 
    ;
    
#line 1238 
    ret_rate = (unsigned char)136U;
    
#line 1239 
    goto ldv_56678;
    case 21: 
#line 1240 
    ;
    
#line 1241 
    ret_rate = (unsigned char)137U;
    
#line 1242 
    goto ldv_56678;
    case 22: 
#line 1243 
    ;
    
#line 1244 
    ret_rate = (unsigned char)138U;
    
#line 1245 
    goto ldv_56678;
    case 23: 
#line 1246 
    ;
    
#line 1247 
    ret_rate = (unsigned char)139U;
    
#line 1248 
    goto ldv_56678;
    case 24: 
#line 1249 
    ;
    
#line 1250 
    ret_rate = (unsigned char)140U;
    
#line 1251 
    goto ldv_56678;
    case 25: 
#line 1252 
    ;
    
#line 1253 
    ret_rate = (unsigned char)141U;
    
#line 1254 
    goto ldv_56678;
    case 26: 
#line 1255 
    ;
    
#line 1256 
    ret_rate = (unsigned char)142U;
    
#line 1257 
    goto ldv_56678;
    case 27: 
#line 1258 
    ;
    
#line 1259 
    ret_rate = (unsigned char)143U;
    
#line 1260 
    goto ldv_56678;
    case 44: 
#line 1261 
    ;
    
#line 1262 
    ret_rate = (unsigned char)144U;
    
#line 1263 
    goto ldv_56678;
    case 45: 
#line 1264 
    ;
    
#line 1265 
    ret_rate = (unsigned char)145U;
    
#line 1266 
    goto ldv_56678;
    case 46: 
#line 1267 
    ;
    
#line 1268 
    ret_rate = (unsigned char)146U;
    
#line 1269 
    goto ldv_56678;
    case 47: 
#line 1270 
    ;
    
#line 1271 
    ret_rate = (unsigned char)147U;
    
#line 1272 
    goto ldv_56678;
    case 48: 
#line 1273 
    ;
    
#line 1274 
    ret_rate = (unsigned char)148U;
    
#line 1275 
    goto ldv_56678;
    case 49: 
#line 1276 
    ;
    
#line 1277 
    ret_rate = (unsigned char)149U;
    
#line 1278 
    goto ldv_56678;
    case 50: 
#line 1279 
    ;
    
#line 1280 
    ret_rate = (unsigned char)150U;
    
#line 1281 
    goto ldv_56678;
    case 51: 
#line 1282 
    ;
    
#line 1283 
    ret_rate = (unsigned char)151U;
    
#line 1284 
    goto ldv_56678;
    case 52: 
#line 1285 
    ;
    
#line 1286 
    ret_rate = (unsigned char)152U;
    
#line 1287 
    goto ldv_56678;
    case 53: 
#line 1288 
    ;
    
#line 1289 
    ret_rate = (unsigned char)153U;
    
#line 1290 
    goto ldv_56678;
    case 54: 
#line 1291 
    ;
    
#line 1292 
    ret_rate = (unsigned char)154U;
    
#line 1293 
    goto ldv_56678;
    case 55: 
#line 1294 
    ;
    
#line 1295 
    ret_rate = (unsigned char)155U;
    
#line 1296 
    goto ldv_56678;
    case 56: 
#line 1297 
    ;
    
#line 1298 
    ret_rate = (unsigned char)156U;
    
#line 1299 
    goto ldv_56678;
    case 57: 
#line 1300 
    ;
    
#line 1301 
    ret_rate = (unsigned char)157U;
    
#line 1302 
    goto ldv_56678;
    case 58: 
#line 1303 
    ;
    
#line 1304 
    ret_rate = (unsigned char)158U;
    
#line 1305 
    goto ldv_56678;
    case 59: 
#line 1306 
    ;
    
#line 1307 
    ret_rate = (unsigned char)159U;
    
#line 1308 
    goto ldv_56678;
    case 60: 
#line 1309 
    ;
    
#line 1310 
    ret_rate = (unsigned char)160U;
    
#line 1311 
    goto ldv_56678;
    case 61: 
#line 1312 
    ;
    
#line 1313 
    ret_rate = (unsigned char)161U;
    
#line 1314 
    goto ldv_56678;
    case 62: 
#line 1315 
    ;
    
#line 1316 
    ret_rate = (unsigned char)162U;
    
#line 1317 
    goto ldv_56678;
    case 63: 
#line 1318 
    ;
    
#line 1319 
    ret_rate = (unsigned char)163U;
    
#line 1320 
    goto ldv_56678;
    default: 
#line 1321 
    ;
    
#line 1322 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1322 
      ;
      
#line 1322 
      tmp = preempt_count();
      
#line 1322 
      tmp_0 = preempt_count();
      
#line 1322 
      printk("\001","rtl8821ae_hw_rate_to_mrate",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rate);
    }
    else ;
    
#line 1325 
    goto ldv_56678;
  }
  ldv_56678: 
#line 1327 
  ;
  
#line 1327 
  return ret_rate;
}


#line 1348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8812ae_dm_txpwr_track_set_pwr(struct ieee80211_hw *hw, enum pwr_track_control_method method, u8 rf_path, u8 channel_mapped_index)
{
  u32 final_swing_idx[2U];
  
#line 1352 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1353 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1354 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1356 
  u8 pwr_tracking_limit = (unsigned char)26U;
  
#line 1357 
  u8 tx_rate = (unsigned char)255U;
  
#line 1358 
  char final_ofdm_swing_index = (char)0;
  
#line 1360 
  if ((unsigned int)rtldm->tx_rate != 255U) 
#line 1361 
                                            tx_rate = rtl8821ae_hw_rate_to_mrate(hw,(unsigned char)((int)rtldm->tx_rate)); else ;
  
#line 1364 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1364 
    tmp = preempt_count();
    
#line 1364 
    tmp_0 = preempt_count();
    
#line 1364 
    printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1367 
  if ((unsigned int)tx_rate != 255U) 
    
#line 1369 
    if ((unsigned int)tx_rate + 254U <= 20U) 
#line 1370 
                                             pwr_tracking_limit = (unsigned char)32U;
    else 
      
#line 1372 
      if ((unsigned int)tx_rate + 244U <= 84U) 
#line 1373 
                                               pwr_tracking_limit = (unsigned char)30U;
      else 
        
#line 1374 
        if ((unsigned int)tx_rate == 108U) 
#line 1375 
                                           pwr_tracking_limit = (unsigned char)28U;
        else 
          
#line 1378 
          if ((unsigned int)tx_rate + 128U <= 2U) 
#line 1379 
                                                  pwr_tracking_limit = (unsigned char)34U;
          else 
            
#line 1381 
            if ((unsigned int)tx_rate + 125U <= 1U) 
#line 1382 
                                                    pwr_tracking_limit = (unsigned char)30U;
            else 
              
#line 1384 
              if ((unsigned int)tx_rate + 123U <= 2U) 
#line 1385 
                                                      pwr_tracking_limit = (unsigned char)28U;
              else 
                
#line 1387 
                if ((unsigned int)tx_rate + 120U <= 2U) 
#line 1388 
                                                        pwr_tracking_limit = (unsigned char)34U;
                else 
                  
#line 1390 
                  if ((unsigned int)tx_rate + 117U <= 1U) 
#line 1391 
                                                          pwr_tracking_limit = (unsigned char)30U;
                  else 
                    
#line 1393 
                    if ((unsigned int)tx_rate + 115U <= 2U) 
#line 1394 
                                                            pwr_tracking_limit = (unsigned char)28U;
                    else 
                      
#line 1398 
                      if ((unsigned int)tx_rate + 112U <= 2U) 
#line 1400 
                                                              pwr_tracking_limit = (unsigned char)34U;
                      else 
                        
#line 1402 
                        if ((unsigned int)tx_rate + 109U <= 1U) 
#line 1404 
                                                                pwr_tracking_limit = (unsigned char)30U;
                        else 
                          
#line 1406 
                          if ((unsigned int)tx_rate + 107U <= 1U) 
#line 1408 
                                                                  pwr_tracking_limit = (unsigned char)28U;
                          else 
                            
#line 1409 
                            if ((unsigned int)tx_rate == 151U) 
#line 1410 
                                                               pwr_tracking_limit = (unsigned char)26U;
                            else 
                              
#line 1411 
                              if ((unsigned int)tx_rate == 152U) 
#line 1412 
                                                                 pwr_tracking_limit = (unsigned char)24U;
                              else 
                                
#line 1413 
                                if ((unsigned int)tx_rate == 153U) 
#line 1414 
                                                                   pwr_tracking_limit = (unsigned char)22U;
                                else 
                                  
#line 1416 
                                  if ((unsigned int)tx_rate + 102U <= 2U) 
                                    
#line 1418 
                                    pwr_tracking_limit = (unsigned char)34U;
                                  else 
                                    
#line 1420 
                                    if ((unsigned int)tx_rate + 99U <= 1U) 
                                      
#line 1422 
                                      pwr_tracking_limit = (unsigned char)30U;
                                    else 
                                      
#line 1424 
                                      if ((unsigned int)tx_rate + 97U <= 1U) 
                                        
#line 1426 
                                        pwr_tracking_limit = (unsigned char)28U;
                                      else 
                                        
#line 1427 
                                        if ((unsigned int)tx_rate == 161U) 
                                          
#line 1428 
                                          pwr_tracking_limit = (unsigned char)26U;
                                        else 
                                          
#line 1429 
                                          if ((unsigned int)tx_rate == 162U) 
                                            
#line 1430 
                                            pwr_tracking_limit = (unsigned char)24U;
                                          else 
                                            
#line 1431 
                                            if ((unsigned int)tx_rate == 163U) 
                                              
#line 1432 
                                              pwr_tracking_limit = (unsigned char)22U; else 
                                                                    
#line 1434 
                                                                    pwr_tracking_limit = (unsigned char)24U;
  else ;
  
#line 1436 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1436 
    ;
    
#line 1436 
    ;
    
#line 1436 
    tmp_1 = preempt_count();
    
#line 1436 
    tmp_2 = preempt_count();
    
#line 1436 
    printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)tx_rate,(int)pwr_tracking_limit);
  }
  else ;
  
#line 1440 
  if (method == (unsigned int)BBSWING) {
    
#line 1441 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 1441 
      tmp_3 = preempt_count();
      
#line 1441 
      tmp_4 = preempt_count();
      
#line 1441 
      printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 1444 
    if ((unsigned int)rf_path == 0U) {
      u32 tmp_5;
      int tmp_6;
      
#line 1450 
      if ((int)pwr_tracking_limit < (int)rtldm->ofdm_index[0]) 
#line 1450 
                                                               tmp_6 = (int)pwr_tracking_limit; else 
                                                                    
#line 1450 
                                                                    tmp_6 = (int)rtldm->ofdm_index[0];
      
#line 1447 
      final_swing_idx[0] = (unsigned int)tmp_6;
      
#line 1452 
      tmp_5 = final_swing_idx[0];
      
#line 1453 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_7;
        int tmp_8;
        
#line 1453 
        ;
        
#line 1453 
        ;
        
#line 1453 
        tmp_7 = preempt_count();
        
#line 1453 
        tmp_8 = preempt_count();
        
#line 1453 
        printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,(int)rtldm->ofdm_index[0],final_swing_idx[0]);
      }
      else ;
      
#line 1458 
      rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[tmp_5]);
    }
    else {
      u32 tmp_9;
      int tmp_10;
      
#line 1466 
      if ((int)pwr_tracking_limit < (int)rtldm->ofdm_index[1]) 
#line 1466 
                                                               tmp_10 = (int)pwr_tracking_limit; else 
                                                                    
#line 1466 
                                                                    tmp_10 = (int)rtldm->ofdm_index[1];
      
#line 1463 
      final_swing_idx[1] = (unsigned int)tmp_10;
      
#line 1468 
      tmp_9 = final_swing_idx[1];
      
#line 1469 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_11;
        int tmp_12;
        
#line 1469 
        ;
        
#line 1469 
        ;
        
#line 1469 
        tmp_11 = preempt_count();
        
#line 1469 
        tmp_12 = preempt_count();
        
#line 1469 
        printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0,(int)rtldm->ofdm_index[1],final_swing_idx[1]);
      }
      else ;
      
#line 1474 
      rtl_set_bbreg(hw,3612U,4292870144U,txscaling_tbl[tmp_9]);
    }
  }
  else 
    
#line 1477 
    if (method == (unsigned int)MIX_MODE) {
      
#line 1478 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_13;
        int tmp_14;
        
#line 1478 
        ;
        
#line 1478 
        ;
        
#line 1478 
        ;
        
#line 1478 
        tmp_13 = preempt_count();
        
#line 1478 
        tmp_14 = preempt_count();
        
#line 1478 
        printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0,(int)rtldm->default_ofdm_index,(int)rtldm->absolute_ofdm_swing_idx[(int)rf_path],(int)rf_path);
      }
      else ;
      
#line 1484 
      final_ofdm_swing_index = (char)((int)rtldm->default_ofdm_index + (int)rtldm->absolute_ofdm_swing_idx[(int)rf_path]);
      
#line 1487 
      if ((unsigned int)rf_path == 0U) 
        
#line 1489 
        if ((int)final_ofdm_swing_index > (int)pwr_tracking_limit) {
          
#line 1490 
          rtldm->remnant_cck_idx = (char)((int)final_ofdm_swing_index - (int)pwr_tracking_limit);
          
#line 1496 
          rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)((int)final_ofdm_swing_index - (int)pwr_tracking_limit);
          
#line 1500 
          rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[(int)pwr_tracking_limit]);
          
#line 1503 
          rtldm->modify_txagc_flag_path_a = (_Bool)1;
          
#line 1506 
          rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
          
#line 1510 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_15;
            int tmp_16;
            
#line 1510 
            ;
            
#line 1510 
            ;
            
#line 1510 
            tmp_15 = preempt_count();
            
#line 1510 
            tmp_16 = preempt_count();
            
#line 1510 
            printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0,(int)pwr_tracking_limit,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
          }
          else ;
        }
        else 
          
#line 1514 
          if ((int)final_ofdm_swing_index < 0) {
            
#line 1515 
            rtldm->remnant_cck_idx = final_ofdm_swing_index;
            
#line 1517 
            rtldm->remnant_ofdm_swing_idx[(int)rf_path] = final_ofdm_swing_index;
            
#line 1520 
            rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[0]);
            
#line 1523 
            rtldm->modify_txagc_flag_path_a = (_Bool)1;
            
#line 1526 
            rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
            
#line 1529 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_17;
              int tmp_18;
              
#line 1529 
              ;
              
#line 1529 
              tmp_17 = preempt_count();
              
#line 1529 
              tmp_18 = preempt_count();
              
#line 1529 
              printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
            }
            else ;
          }
          else {
            
#line 1533 
            rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[(int)((unsigned char)final_ofdm_swing_index)]);
            
#line 1536 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_19;
              int tmp_20;
              
#line 1536 
              ;
              
#line 1536 
              tmp_19 = preempt_count();
              
#line 1536 
              tmp_20 = preempt_count();
              
#line 1536 
              printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0,(int)final_ofdm_swing_index);
            }
            else ;
            
#line 1540 
            if ((int)rtldm->modify_txagc_flag_path_a != 0) {
              
#line 1541 
              rtldm->remnant_cck_idx = (char)0;
              
#line 1542 
              rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)0;
              
#line 1545 
              rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
              
#line 1547 
              rtldm->modify_txagc_flag_path_a = (_Bool)0;
              
#line 1549 
              if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
                int tmp_21;
                int tmp_22;
                
#line 1549 
                tmp_21 = preempt_count();
                
#line 1549 
                tmp_22 = preempt_count();
                
#line 1549 
                printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0);
              }
              else ;
            }
            else ;
          }
      else ;
      
#line 1556 
      if ((unsigned int)rf_path == 1U) 
        
#line 1557 
        if ((int)final_ofdm_swing_index > (int)pwr_tracking_limit) {
          
#line 1558 
          rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)((int)final_ofdm_swing_index - (int)pwr_tracking_limit);
          
#line 1562 
          rtl_set_bbreg(hw,3612U,4292870144U,txscaling_tbl[(int)pwr_tracking_limit]);
          
#line 1566 
          rtldm->modify_txagc_flag_path_b = (_Bool)1;
          
#line 1569 
          rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)1);
          
#line 1572 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_23;
            int tmp_24;
            
#line 1572 
            ;
            
#line 1572 
            ;
            
#line 1572 
            tmp_23 = preempt_count();
            
#line 1572 
            tmp_24 = preempt_count();
            
#line 1572 
            printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0,(int)pwr_tracking_limit,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
          }
          else ;
        }
        else 
          
#line 1576 
          if ((int)final_ofdm_swing_index < 0) {
            
#line 1577 
            rtldm->remnant_ofdm_swing_idx[(int)rf_path] = final_ofdm_swing_index;
            
#line 1580 
            rtl_set_bbreg(hw,3612U,4292870144U,txscaling_tbl[0]);
            
#line 1583 
            rtldm->modify_txagc_flag_path_b = (_Bool)1;
            
#line 1586 
            rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)1);
            
#line 1589 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_25;
              int tmp_26;
              
#line 1589 
              ;
              
#line 1589 
              tmp_25 = preempt_count();
              
#line 1589 
              tmp_26 = preempt_count();
              
#line 1589 
              printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_26 & 2096896UL,tmp_25 != 0,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
            }
            else ;
          }
          else {
            
#line 1593 
            rtl_set_bbreg(hw,3612U,4292870144U,txscaling_tbl[(int)((unsigned char)final_ofdm_swing_index)]);
            
#line 1596 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_27;
              int tmp_28;
              
#line 1596 
              ;
              
#line 1596 
              tmp_27 = preempt_count();
              
#line 1596 
              tmp_28 = preempt_count();
              
#line 1596 
              printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_28 & 2096896UL,tmp_27 != 0,(int)final_ofdm_swing_index);
            }
            else ;
            
#line 1600 
            if ((int)rtldm->modify_txagc_flag_path_b != 0) {
              
#line 1601 
              rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)0;
              
#line 1604 
              rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)1);
              
#line 1607 
              rtldm->modify_txagc_flag_path_b = (_Bool)0;
              
#line 1610 
              if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
                int tmp_29;
                int tmp_30;
                
#line 1610 
                tmp_29 = preempt_count();
                
#line 1610 
                tmp_30 = preempt_count();
                
#line 1610 
                printk("\001","rtl8812ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0);
              }
              else ;
            }
            else ;
          }
      else ;
    }
    else 
#line 1616 
         goto return_label;
  return_label: 
#line 1617 
                return;
}


#line 1620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8812ae_dm_txpower_tracking_callback_thermalmeter(struct ieee80211_hw *hw)
{
  u8 delta;
  u8 delta_lck;
  u8 delta_iqk;
  u8 *delta_swing_table_idx_tup_a;
  u8 *delta_swing_table_idx_tdown_a;
  u8 *delta_swing_table_idx_tup_b;
  u8 *delta_swing_table_idx_tdown_b;
  u32 tmp_1;
  
#line 1623 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1624 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 1625 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1626 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1627 
  u8 thermal_value = (unsigned char)0U;
  
#line 1627 
  u8 p = (unsigned char)0U;
  
#line 1627 
  u8 i = (unsigned char)0U;
  
#line 1628 
  u8 thermal_value_avg_count = (unsigned char)0U;
  
#line 1629 
  u32 thermal_value_avg = 0U;
  
#line 1631 
  u8 ofdm_min_index = (unsigned char)6U;
  
#line 1633 
  u8 index_for_channel = (unsigned char)0U;
  
#line 1643 
  rtl8812ae_get_delta_swing_table(hw,& delta_swing_table_idx_tup_a,& delta_swing_table_idx_tdown_a,& delta_swing_table_idx_tup_b,& delta_swing_table_idx_tdown_b);
  
#line 1649 
  rtldm->txpower_trackinginit = (_Bool)1;
  
#line 1651 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1651 
    ;
    
#line 1651 
    ;
    
#line 1651 
    ;
    
#line 1651 
    tmp = preempt_count();
    
#line 1651 
    tmp_0 = preempt_count();
    
#line 1651 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtldm->swing_idx_cck_base,(int)rtldm->swing_idx_ofdm_base[0],(int)rtldm->default_ofdm_index);
  }
  else ;
  
#line 1657 
  tmp_1 = rtl_get_rfreg(hw,(enum radio_path)RF90_PATH_A,66U,64512U);
  
#line 1657 
  thermal_value = (unsigned char)tmp_1;
  
#line 1660 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 1660 
    ;
    
#line 1660 
    ;
    
#line 1660 
    tmp_2 = preempt_count();
    
#line 1660 
    tmp_3 = preempt_count();
    
#line 1660 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
  }
  else ;
  
#line 1663 
  if (((unsigned int)rtldm->txpower_track_control == 0U || (unsigned int)rtlefuse->eeprom_thermalmeter == 0U) || (unsigned int)rtlefuse->eeprom_thermalmeter == 255U) 
    
#line 1666 
    goto return_label; else ;
  
#line 1670 
  if ((int)rtlhal->reloadtxpowerindex != 0) {
    
#line 1671 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 1671 
      tmp_4 = preempt_count();
      
#line 1671 
      tmp_5 = preempt_count();
      
#line 1671 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
    }
    else ;
  }
  else ;
  
#line 1675 
  rtldm->thermalvalue_avg[(int)rtldm->thermalvalue_avg_index] = thermal_value;
  
#line 1676 
  rtldm->thermalvalue_avg_index = (u8)((int)rtldm->thermalvalue_avg_index + 1);
  
#line 1677 
  if ((unsigned int)rtldm->thermalvalue_avg_index == 4U) 
#line 1679 
                                                         rtldm->thermalvalue_avg_index = (unsigned char)0U; else ;
  
#line 1681 
  i = (unsigned char)0U;
  
#line 1681 
  goto ldv_56767;
  ldv_56766: 
#line 1682 
  ;
  
#line 1682 
  if ((unsigned int)rtldm->thermalvalue_avg[(int)i] != 0U) {
    
#line 1683 
    thermal_value_avg = (unsigned int)rtldm->thermalvalue_avg[(int)i] + thermal_value_avg;
    
#line 1684 
    thermal_value_avg_count = (u8)((int)thermal_value_avg_count + 1);
  }
  else ;
  
#line 1681 
  i = (u8)((int)i + 1);
  ldv_56767: 
#line 1682 
  ;
  
#line 1681 
  if ((unsigned int)i <= 3U) 
#line 1683 
                             goto ldv_56766; else 
#line 1686 
                                                  goto ldv_56768;
  ldv_56768: 
#line 1687 
  ;
  
#line 1688 
  if ((unsigned int)thermal_value_avg_count != 0U) {
    
#line 1689 
    thermal_value = (unsigned char)(thermal_value_avg / (unsigned int)thermal_value_avg_count);
    
#line 1691 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 1691 
      ;
      
#line 1691 
      ;
      
#line 1691 
      tmp_6 = preempt_count();
      
#line 1691 
      tmp_7 = preempt_count();
      
#line 1691 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
    }
    else ;
  }
  else ;
  
#line 1700 
  if ((int)rtldm->thermalvalue < (int)thermal_value) 
#line 1700 
                                                     delta = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue); else 
                                                                    
#line 1700 
                                                                    delta = (unsigned char)((int)rtldm->thermalvalue - (int)thermal_value);
  
#line 1703 
  if ((int)rtldm->thermalvalue_lck < (int)thermal_value) 
#line 1703 
                                                         delta_lck = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue_lck); else 
                                                                    
#line 1703 
                                                                    delta_lck = (unsigned char)((int)rtldm->thermalvalue_lck - (int)thermal_value);
  
#line 1706 
  if ((int)rtldm->thermalvalue_iqk < (int)thermal_value) 
#line 1706 
                                                         delta_iqk = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue_iqk); else 
                                                                    
#line 1706 
                                                                    delta_iqk = (unsigned char)((int)rtldm->thermalvalue_iqk - (int)thermal_value);
  
#line 1710 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_8;
    int tmp_9;
    
#line 1710 
    ;
    
#line 1710 
    ;
    
#line 1710 
    ;
    
#line 1710 
    tmp_8 = preempt_count();
    
#line 1710 
    tmp_9 = preempt_count();
    
#line 1710 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0,(int)delta,(int)delta_lck,(int)delta_iqk);
  }
  else ;
  
#line 1717 
  if ((unsigned int)delta_lck > 7U) {
    
#line 1718 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_10;
      int tmp_11;
      
#line 1718 
      ;
      
#line 1718 
      tmp_10 = preempt_count();
      
#line 1718 
      tmp_11 = preempt_count();
      
#line 1718 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,(int)delta_lck,8);
    }
    else ;
    
#line 1721 
    rtldm->thermalvalue_lck = thermal_value;
    
#line 1722 
    rtl8821ae_phy_lc_calibrate(hw);
  }
  else ;
  
#line 1727 
  if ((unsigned int)delta != 0U && (unsigned int)rtldm->txpower_track_control != 0U) {
    
#line 1731 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) 
#line 1731 
                                                                 delta = (unsigned char)((int)thermal_value - (int)rtlefuse->eeprom_thermalmeter); else 
                                                                    
#line 1731 
                                                                    delta = (unsigned char)((int)rtlefuse->eeprom_thermalmeter - (int)thermal_value);
    
#line 1735 
    if ((unsigned int)delta > 29U) 
#line 1736 
                                   delta = (unsigned char)29U; else ;
    
#line 1740 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) {
      
#line 1741 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_12;
        int tmp_13;
        
#line 1741 
        ;
        
#line 1741 
        ;
        
#line 1741 
        tmp_12 = preempt_count();
        
#line 1741 
        tmp_13 = preempt_count();
        
#line 1741 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,(int)delta,(int)*(delta_swing_table_idx_tup_a + (int)delta));
      }
      else ;
      
#line 1744 
      rtldm->delta_power_index_last[0] = rtldm->delta_power_index[0];
      
#line 1746 
      rtldm->delta_power_index[0] = (char)*(delta_swing_table_idx_tup_a + (int)delta);
      
#line 1749 
      rtldm->absolute_ofdm_swing_idx[0] = (char)*(delta_swing_table_idx_tup_a + (int)delta);
      
#line 1753 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_14;
        int tmp_15;
        
#line 1753 
        ;
        
#line 1753 
        tmp_14 = preempt_count();
        
#line 1753 
        tmp_15 = preempt_count();
        
#line 1753 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_15 & 2096896UL,tmp_14 != 0,(int)rtldm->absolute_ofdm_swing_idx[0]);
      }
      else ;
      
#line 1757 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_16;
        int tmp_17;
        
#line 1757 
        ;
        
#line 1757 
        ;
        
#line 1757 
        tmp_16 = preempt_count();
        
#line 1757 
        tmp_17 = preempt_count();
        
#line 1757 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_17 & 2096896UL,tmp_16 != 0,(int)delta,(int)*(delta_swing_table_idx_tup_b + (int)delta));
      }
      else ;
      
#line 1760 
      rtldm->delta_power_index_last[1] = rtldm->delta_power_index[1];
      
#line 1762 
      rtldm->delta_power_index[1] = (char)*(delta_swing_table_idx_tup_b + (int)delta);
      
#line 1765 
      rtldm->absolute_ofdm_swing_idx[1] = (char)*(delta_swing_table_idx_tup_b + (int)delta);
      
#line 1769 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_18;
        int tmp_19;
        
#line 1769 
        ;
        
#line 1769 
        tmp_18 = preempt_count();
        
#line 1769 
        tmp_19 = preempt_count();
        
#line 1769 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_19 & 2096896UL,tmp_18 != 0,(int)rtldm->absolute_ofdm_swing_idx[1]);
      }
      else ;
    }
    else {
      
#line 1773 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_20;
        int tmp_21;
        
#line 1773 
        ;
        
#line 1773 
        ;
        
#line 1773 
        tmp_20 = preempt_count();
        
#line 1773 
        tmp_21 = preempt_count();
        
#line 1773 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_21 & 2096896UL,tmp_20 != 0,(int)delta,(int)*(delta_swing_table_idx_tdown_a + (int)delta));
      }
      else ;
      
#line 1777 
      rtldm->delta_power_index_last[0] = rtldm->delta_power_index[0];
      
#line 1779 
      rtldm->delta_power_index[0] = (char)(- ((int)*(delta_swing_table_idx_tdown_a + (int)delta)));
      
#line 1782 
      rtldm->absolute_ofdm_swing_idx[0] = (char)(- ((int)*(delta_swing_table_idx_tdown_a + (int)delta)));
      
#line 1785 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_22;
        int tmp_23;
        
#line 1785 
        ;
        
#line 1785 
        tmp_22 = preempt_count();
        
#line 1785 
        tmp_23 = preempt_count();
        
#line 1785 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_23 & 2096896UL,tmp_22 != 0,(int)rtldm->absolute_ofdm_swing_idx[0]);
      }
      else ;
      
#line 1789 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_24;
        int tmp_25;
        
#line 1789 
        ;
        
#line 1789 
        ;
        
#line 1789 
        tmp_24 = preempt_count();
        
#line 1789 
        tmp_25 = preempt_count();
        
#line 1789 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_25 & 2096896UL,tmp_24 != 0,(int)delta,(int)*(delta_swing_table_idx_tdown_b + (int)delta));
      }
      else ;
      
#line 1793 
      rtldm->delta_power_index_last[1] = rtldm->delta_power_index[1];
      
#line 1795 
      rtldm->delta_power_index[1] = (char)(- ((int)*(delta_swing_table_idx_tdown_b + (int)delta)));
      
#line 1798 
      rtldm->absolute_ofdm_swing_idx[1] = (char)(- ((int)*(delta_swing_table_idx_tdown_b + (int)delta)));
      
#line 1802 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_26;
        int tmp_27;
        
#line 1802 
        ;
        
#line 1802 
        tmp_26 = preempt_count();
        
#line 1802 
        tmp_27 = preempt_count();
        
#line 1802 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_27 & 2096896UL,tmp_26 != 0,(int)rtldm->absolute_ofdm_swing_idx[1]);
      }
      else ;
    }
    
#line 1807 
    p = (unsigned char)0U;
    
#line 1807 
    goto ldv_56770;
    ldv_56769: 
#line 1808 
    ;
    
#line 1808 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_28;
      int tmp_29;
      int tmp_30;
      
#line 1808 
      if ((unsigned int)p == 0U) 
#line 1808 
                                 tmp_28 = 65; else 
#line 1808 
                                                   tmp_28 = 66;
      
#line 1808 
      tmp_29 = preempt_count();
      
#line 1808 
      tmp_30 = preempt_count();
      
#line 1808 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0,tmp_28);
    }
    else ;
    
#line 1812 
    if ((int)rtldm->delta_power_index[(int)p] == (int)rtldm->delta_power_index_last[(int)p]) 
      
#line 1816 
      rtldm->power_index_offset[(int)p] = (char)0; else 
#line 1818 
                                                        rtldm->power_index_offset[(int)p] = (char)((int)rtldm->delta_power_index[(int)p] - (int)rtldm->delta_power_index_last[(int)p]);
    
#line 1824 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_31;
      int tmp_32;
      int tmp_33;
      
#line 1824 
      ;
      
#line 1824 
      ;
      
#line 1824 
      ;
      
#line 1824 
      if ((unsigned int)p == 0U) 
#line 1824 
                                 tmp_31 = 65; else 
#line 1824 
                                                   tmp_31 = 66;
      
#line 1824 
      tmp_32 = preempt_count();
      
#line 1824 
      tmp_33 = preempt_count();
      
#line 1824 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_33 & 2096896UL,tmp_32 != 0,tmp_31,(int)rtldm->power_index_offset[(int)p],(int)rtldm->delta_power_index[(int)p],(int)rtldm->delta_power_index_last[(int)p]);
    }
    else ;
    
#line 1831 
    rtldm->ofdm_index[(int)p] = (char)((int)rtldm->swing_idx_ofdm_base[(int)p] + (int)rtldm->power_index_offset[(int)p]);
    
#line 1834 
    rtldm->cck_index = (char)((int)rtldm->swing_idx_cck_base + (int)rtldm->power_index_offset[(int)p]);
    
#line 1838 
    rtldm->swing_idx_cck = (unsigned char)rtldm->cck_index;
    
#line 1839 
    rtldm->swing_idx_ofdm[(int)p] = (unsigned char)rtldm->ofdm_index[(int)p];
    
#line 1843 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_34;
      int tmp_35;
      
#line 1843 
      ;
      
#line 1843 
      ;
      
#line 1843 
      ;
      
#line 1843 
      tmp_34 = preempt_count();
      
#line 1843 
      tmp_35 = preempt_count();
      
#line 1843 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_35 & 2096896UL,tmp_34 != 0,(int)rtldm->swing_idx_cck,(int)rtldm->swing_idx_cck_base,(int)rtldm->power_index_offset[(int)p]);
    }
    else ;
    
#line 1848 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_36;
      int tmp_37;
      int tmp_38;
      
#line 1848 
      ;
      
#line 1848 
      ;
      
#line 1848 
      if ((unsigned int)p == 0U) 
#line 1848 
                                 tmp_36 = 65; else 
#line 1848 
                                                   tmp_36 = 66;
      
#line 1848 
      ;
      
#line 1848 
      tmp_37 = preempt_count();
      
#line 1848 
      tmp_38 = preempt_count();
      
#line 1848 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_38 & 2096896UL,tmp_37 != 0,(int)rtldm->swing_idx_ofdm[(int)p],tmp_36,(int)rtldm->swing_idx_ofdm_base[(int)p],(int)rtldm->power_index_offset[(int)p]);
    }
    else ;
    
#line 1857 
    if ((int)rtldm->ofdm_index[(int)p] > 36) 
#line 1858 
                                             rtldm->ofdm_index[(int)p] = (char)36;
    else 
      
#line 1859 
      if ((int)rtldm->ofdm_index[(int)p] < (int)ofdm_min_index) 
#line 1860 
                                                                rtldm->ofdm_index[(int)p] = (char)ofdm_min_index; else ;
    
#line 1807 
    p = (u8)((int)p + 1);
    ldv_56770: 
#line 1808 
    ;
    
#line 1807 
    if ((unsigned int)p <= 1U) 
#line 1809 
                               goto ldv_56769; else 
#line 1812 
                                                    goto ldv_56771;
    ldv_56771: 
#line 1813 
    ;
    
#line 1862 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_39;
      int tmp_40;
      
#line 1862 
      tmp_39 = preempt_count();
      
#line 1862 
      tmp_40 = preempt_count();
      
#line 1862 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_40 & 2096896UL,tmp_39 != 0);
    }
    else ;
    
#line 1864 
    if ((int)rtldm->cck_index > 36) 
#line 1865 
                                    rtldm->cck_index = (char)36;
    else 
      
#line 1866 
      if ((int)rtldm->cck_index < 0) 
#line 1867 
                                     rtldm->cck_index = (char)0; else ;
  }
  else {
    
#line 1869 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_41;
      int tmp_42;
      
#line 1869 
      ;
      
#line 1869 
      ;
      
#line 1869 
      ;
      
#line 1869 
      tmp_41 = preempt_count();
      
#line 1869 
      tmp_42 = preempt_count();
      
#line 1869 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_42 & 2096896UL,tmp_41 != 0,(int)rtldm->txpower_track_control,(int)thermal_value,(int)rtldm->thermalvalue);
    }
    else ;
    
#line 1875 
    p = (unsigned char)0U;
    
#line 1875 
    goto ldv_56773;
    ldv_56772: 
#line 1876 
    ;
    
#line 1876 
    rtldm->power_index_offset[(int)p] = (char)0;
    
#line 1875 
    p = (u8)((int)p + 1);
    ldv_56773: 
#line 1876 
    ;
    
#line 1875 
    if ((unsigned int)p <= 1U) 
#line 1877 
                               goto ldv_56772; else 
#line 1880 
                                                    goto ldv_56774;
    ldv_56774: 
#line 1881 
    ;
  }
  
#line 1879 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_43;
    int tmp_44;
    
#line 1879 
    ;
    
#line 1879 
    ;
    
#line 1879 
    tmp_43 = preempt_count();
    
#line 1879 
    tmp_44 = preempt_count();
    
#line 1879 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_44 & 2096896UL,tmp_43 != 0,(int)rtldm->cck_index,(int)rtldm->swing_idx_cck_base);
  }
  else ;
  
#line 1882 
  p = (unsigned char)0U;
  
#line 1882 
  goto ldv_56776;
  ldv_56775: 
#line 1883 
  ;
  
#line 1883 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_45;
    int tmp_46;
    int tmp_47;
    
#line 1883 
    ;
    
#line 1883 
    if ((unsigned int)p == 0U) 
#line 1883 
                               tmp_45 = 65; else 
#line 1883 
                                                 tmp_45 = 66;
    
#line 1883 
    ;
    
#line 1883 
    tmp_46 = preempt_count();
    
#line 1883 
    tmp_47 = preempt_count();
    
#line 1883 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_47 & 2096896UL,tmp_46 != 0,(int)rtldm->ofdm_index[(int)p],tmp_45,(int)rtldm->swing_idx_ofdm_base[(int)p]);
  }
  else ;
  
#line 1882 
  p = (u8)((int)p + 1);
  ldv_56776: 
#line 1883 
  ;
  
#line 1882 
  if ((unsigned int)p <= 1U) 
#line 1884 
                             goto ldv_56775; else 
#line 1887 
                                                  goto ldv_56777;
  ldv_56777: 
#line 1888 
  ;
  
#line 1890 
  if (((int)rtldm->power_index_offset[0] != 0 || (int)rtldm->power_index_offset[1] != 0) && (unsigned int)rtldm->txpower_track_control != 0U) {
    
#line 1903 
    if ((int)rtldm->thermalvalue < (int)thermal_value) {
      
#line 1904 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_48;
        int tmp_49;
        
#line 1904 
        ;
        
#line 1904 
        ;
        
#line 1904 
        ;
        
#line 1904 
        ;
        
#line 1904 
        ;
        
#line 1904 
        tmp_48 = preempt_count();
        
#line 1904 
        tmp_49 = preempt_count();
        
#line 1904 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_49 & 2096896UL,tmp_48 != 0,(int)rtldm->power_index_offset[0],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
      }
      else ;
      
#line 1911 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_50;
        int tmp_51;
        
#line 1911 
        ;
        
#line 1911 
        ;
        
#line 1911 
        ;
        
#line 1911 
        ;
        
#line 1911 
        ;
        
#line 1911 
        tmp_50 = preempt_count();
        
#line 1911 
        tmp_51 = preempt_count();
        
#line 1911 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_51 & 2096896UL,tmp_50 != 0,(int)rtldm->power_index_offset[1],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
      }
      else ;
    }
    else 
      
#line 1917 
      if ((int)rtldm->thermalvalue > (int)thermal_value) {
        
#line 1918 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_52;
          int tmp_53;
          
#line 1918 
          ;
          
#line 1918 
          ;
          
#line 1918 
          ;
          
#line 1918 
          ;
          
#line 1918 
          ;
          
#line 1918 
          tmp_52 = preempt_count();
          
#line 1918 
          tmp_53 = preempt_count();
          
#line 1918 
          printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_53 & 2096896UL,tmp_52 != 0,(int)rtldm->power_index_offset[0],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
        }
        else ;
        
#line 1925 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_54;
          int tmp_55;
          
#line 1925 
          ;
          
#line 1925 
          ;
          
#line 1925 
          ;
          
#line 1925 
          ;
          
#line 1925 
          ;
          
#line 1925 
          tmp_54 = preempt_count();
          
#line 1925 
          tmp_55 = preempt_count();
          
#line 1925 
          printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_55 & 2096896UL,tmp_54 != 0,(int)rtldm->power_index_offset[1],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
        }
        else ;
      }
      else ;
    
#line 1933 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) {
      
#line 1934 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_56;
        int tmp_57;
        
#line 1934 
        ;
        
#line 1934 
        ;
        
#line 1934 
        tmp_56 = preempt_count();
        
#line 1934 
        tmp_57 = preempt_count();
        
#line 1934 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_57 & 2096896UL,tmp_56 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
      }
      else ;
      
#line 1938 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_58;
        int tmp_59;
        
#line 1938 
        tmp_58 = preempt_count();
        
#line 1938 
        tmp_59 = preempt_count();
        
#line 1938 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_59 & 2096896UL,tmp_58 != 0);
      }
      else ;
      
#line 1940 
      p = (unsigned char)0U;
      
#line 1940 
      goto ldv_56779;
      ldv_56778: 
#line 1941 
      ;
      
#line 1941 
      rtl8812ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)((int)p),(unsigned char)0);
      
#line 1940 
      p = (u8)((int)p + 1);
      ldv_56779: 
#line 1941 
      ;
      
#line 1940 
      if ((unsigned int)p <= 1U) 
#line 1942 
                                 goto ldv_56778; else 
#line 1945 
                                                      goto ldv_56780;
      ldv_56780: 
#line 1946 
      ;
    }
    else {
      
#line 1944 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_60;
        int tmp_61;
        
#line 1944 
        ;
        
#line 1944 
        ;
        
#line 1944 
        tmp_60 = preempt_count();
        
#line 1944 
        tmp_61 = preempt_count();
        
#line 1944 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_61 & 2096896UL,tmp_60 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
      }
      else ;
      
#line 1948 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_62;
        int tmp_63;
        
#line 1948 
        tmp_62 = preempt_count();
        
#line 1948 
        tmp_63 = preempt_count();
        
#line 1948 
        printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_63 & 2096896UL,tmp_62 != 0);
      }
      else ;
      
#line 1950 
      p = (unsigned char)0U;
      
#line 1950 
      goto ldv_56782;
      ldv_56781: 
#line 1951 
      ;
      
#line 1951 
      rtl8812ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)((int)p),(unsigned char)((int)index_for_channel));
      
#line 1950 
      p = (u8)((int)p + 1);
      ldv_56782: 
#line 1951 
      ;
      
#line 1950 
      if ((unsigned int)p <= 1U) 
#line 1952 
                                 goto ldv_56781; else 
#line 1955 
                                                      goto ldv_56783;
      ldv_56783: 
#line 1956 
      ;
    }
    
#line 1955 
    rtldm->swing_idx_cck_base = rtldm->swing_idx_cck;
    
#line 1956 
    p = (unsigned char)0U;
    
#line 1956 
    goto ldv_56785;
    ldv_56784: 
#line 1957 
    ;
    
#line 1957 
    rtldm->swing_idx_ofdm_base[(int)p] = rtldm->swing_idx_ofdm[(int)p];
    
#line 1956 
    p = (u8)((int)p + 1);
    ldv_56785: 
#line 1957 
    ;
    
#line 1956 
    if ((unsigned int)p <= 1U) 
#line 1958 
                               goto ldv_56784; else 
#line 1961 
                                                    goto ldv_56786;
    ldv_56786: 
#line 1962 
    ;
    
#line 1960 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_64;
      int tmp_65;
      
#line 1960 
      ;
      
#line 1960 
      ;
      
#line 1960 
      tmp_64 = preempt_count();
      
#line 1960 
      tmp_65 = preempt_count();
      
#line 1960 
      printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_65 & 2096896UL,tmp_64 != 0,(int)rtldm->thermalvalue,(int)thermal_value);
    }
    else ;
    
#line 1964 
    rtldm->thermalvalue = thermal_value;
  }
  else ;
  
#line 1968 
  if ((unsigned int)delta_iqk > 7U) 
#line 1969 
                                    rtl8812ae_do_iqk(hw,(unsigned char)((int)delta_iqk),(unsigned char)((int)thermal_value),(unsigned char)8); else ;
  
#line 1971 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_66;
    int tmp_67;
    
#line 1971 
    tmp_66 = preempt_count();
    
#line 1971 
    tmp_67 = preempt_count();
    
#line 1971 
    printk("\001","rtl8812ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_67 & 2096896UL,tmp_66 != 0);
  }
  else ;
  return_label: 
#line 1972 
                return;
}


#line 1975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_get_delta_swing_table(struct ieee80211_hw *hw, u8 **up_a, u8 **down_a, u8 **up_b, u8 **down_b)
{
  
#line 1978 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1979 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1980 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 1981 
  u8 channel = rtlphy->current_channel;
  
#line 1982 
  u8 rate = rtldm->tx_rate;
  
#line 1984 
  if ((unsigned int)channel + 255U <= 13U) 
    
#line 1985 
    if ((unsigned int)rate <= 3U) {
      
#line 1986 
      *up_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gccka_p);
      
#line 1987 
      *down_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gccka_n);
      
#line 1988 
      *up_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gcckb_p);
      
#line 1989 
      *down_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gcckb_n);
    }
    else {
      
#line 1991 
      *up_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_24ga_p);
      
#line 1992 
      *down_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_24ga_n);
      
#line 1993 
      *up_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gb_p);
      
#line 1994 
      *down_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_24gb_n);
    }
  else 
    
#line 1996 
    if ((unsigned int)channel + 220U <= 28U) {
      
#line 1997 
      *up_a = (u8 *)(&(rtl8821ae_delta_swing_table_idx_5ga_p[0]));
      
#line 1998 
      *down_a = (u8 *)(&(rtl8821ae_delta_swing_table_idx_5ga_n[0]));
      
#line 1999 
      *up_b = (u8 *)(&(rtl8821ae_delta_swing_table_idx_5gb_p[0]));
      
#line 2000 
      *down_b = (u8 *)(&(rtl8821ae_delta_swing_table_idx_5gb_n[0]));
    }
    else 
      
#line 2001 
      if ((unsigned int)channel + 156U <= 40U) {
        
#line 2002 
        *up_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_5ga_p[1]);
        
#line 2003 
        *down_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_5ga_n[1]);
        
#line 2004 
        *up_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_5gb_p[1]);
        
#line 2005 
        *down_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_5gb_n[1]);
      }
      else 
        
#line 2006 
        if ((unsigned int)channel + 107U <= 24U) {
          
#line 2007 
          *up_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_5ga_p[2]);
          
#line 2008 
          *down_a = (u8 *)(& rtl8821ae_delta_swing_table_idx_5ga_n[2]);
          
#line 2009 
          *up_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_5gb_p[2]);
          
#line 2010 
          *down_b = (u8 *)(& rtl8821ae_delta_swing_table_idx_5gb_n[2]);
        }
        else {
          
#line 2012 
          *up_a = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_p);
          
#line 2013 
          *down_a = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_n);
          
#line 2014 
          *up_b = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_p);
          
#line 2015 
          *down_b = (u8 *)(& rtl8818e_delta_swing_table_idx_24gb_n);
        }
  
#line 2017 
  return;
}


#line 2038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_txpwr_track_set_pwr(struct ieee80211_hw *hw, enum pwr_track_control_method method, u8 rf_path, u8 channel_mapped_index)
{
  u32 final_swing_idx[1U];
  
#line 2042 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2043 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 2044 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2046 
  u8 pwr_tracking_limit = (unsigned char)26U;
  
#line 2047 
  u8 tx_rate = (unsigned char)255U;
  
#line 2048 
  char final_ofdm_swing_index = (char)0;
  
#line 2050 
  if ((unsigned int)rtldm->tx_rate != 255U) 
#line 2051 
                                            tx_rate = rtl8821ae_hw_rate_to_mrate(hw,(unsigned char)((int)rtldm->tx_rate)); else ;
  
#line 2053 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2053 
    tmp = preempt_count();
    
#line 2053 
    tmp_0 = preempt_count();
    
#line 2053 
    printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_0 & 2096896UL,tmp != 0,"rtl8821ae_dm_txpwr_track_set_pwr");
  }
  else ;
  
#line 2055 
  if ((unsigned int)tx_rate != 255U) 
    
#line 2057 
    if ((unsigned int)tx_rate + 254U <= 20U) 
#line 2058 
                                             pwr_tracking_limit = (unsigned char)32U;
    else 
      
#line 2060 
      if ((unsigned int)tx_rate + 244U <= 84U) 
#line 2061 
                                               pwr_tracking_limit = (unsigned char)30U;
      else 
        
#line 2062 
        if ((unsigned int)tx_rate == 108U) 
#line 2063 
                                           pwr_tracking_limit = (unsigned char)28U;
        else 
          
#line 2066 
          if ((unsigned int)tx_rate + 128U <= 2U) 
#line 2067 
                                                  pwr_tracking_limit = (unsigned char)34U;
          else 
            
#line 2069 
            if ((unsigned int)tx_rate + 125U <= 1U) 
#line 2070 
                                                    pwr_tracking_limit = (unsigned char)30U;
            else 
              
#line 2072 
              if ((unsigned int)tx_rate + 123U <= 2U) 
#line 2073 
                                                      pwr_tracking_limit = (unsigned char)28U;
              else 
                
#line 2076 
                if ((unsigned int)tx_rate + 112U <= 2U) 
#line 2078 
                                                        pwr_tracking_limit = (unsigned char)34U;
                else 
                  
#line 2080 
                  if ((unsigned int)tx_rate + 109U <= 1U) 
#line 2082 
                                                          pwr_tracking_limit = (unsigned char)30U;
                  else 
                    
#line 2084 
                    if ((unsigned int)tx_rate + 107U <= 1U) 
#line 2086 
                                                            pwr_tracking_limit = (unsigned char)28U;
                    else 
                      
#line 2087 
                      if ((unsigned int)tx_rate == 151U) 
#line 2088 
                                                         pwr_tracking_limit = (unsigned char)26U;
                      else 
                        
#line 2089 
                        if ((unsigned int)tx_rate == 152U) 
#line 2090 
                                                           pwr_tracking_limit = (unsigned char)24U;
                        else 
                          
#line 2091 
                          if ((unsigned int)tx_rate == 153U) 
#line 2092 
                                                             pwr_tracking_limit = (unsigned char)22U; else 
                                                                    
#line 2094 
                                                                    pwr_tracking_limit = (unsigned char)24U;
  else ;
  
#line 2096 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 2096 
    ;
    
#line 2096 
    ;
    
#line 2096 
    tmp_1 = preempt_count();
    
#line 2096 
    tmp_2 = preempt_count();
    
#line 2096 
    printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)tx_rate,(int)pwr_tracking_limit);
  }
  else ;
  
#line 2100 
  if (method == (unsigned int)BBSWING) {
    
#line 2101 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 2101 
      tmp_3 = preempt_count();
      
#line 2101 
      tmp_4 = preempt_count();
      
#line 2101 
      printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,"rtl8821ae_dm_txpwr_track_set_pwr");
    }
    else ;
    
#line 2103 
    if ((unsigned int)rf_path == 0U) {
      int tmp_5;
      
#line 2107 
      if ((int)pwr_tracking_limit < (int)rtldm->ofdm_index[0]) 
#line 2107 
                                                               tmp_5 = (int)pwr_tracking_limit; else 
                                                                    
#line 2107 
                                                                    tmp_5 = (int)rtldm->ofdm_index[0];
      
#line 2104 
      final_swing_idx[0] = (unsigned int)tmp_5;
      
#line 2109 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_6;
        int tmp_7;
        
#line 2109 
        ;
        
#line 2109 
        ;
        
#line 2109 
        tmp_6 = preempt_count();
        
#line 2109 
        tmp_7 = preempt_count();
        
#line 2109 
        printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)rtldm->ofdm_index[0],final_swing_idx[0]);
      }
      else ;
      
#line 2114 
      rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[final_swing_idx[0]]);
    }
    else ;
  }
  else 
    
#line 2117 
    if (method == (unsigned int)MIX_MODE) {
      
#line 2118 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_8;
        int tmp_9;
        
#line 2118 
        ;
        
#line 2118 
        ;
        
#line 2118 
        ;
        
#line 2118 
        tmp_8 = preempt_count();
        
#line 2118 
        tmp_9 = preempt_count();
        
#line 2118 
        printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0,(int)rtldm->default_ofdm_index,(int)rtldm->absolute_ofdm_swing_idx[(int)rf_path],(int)rf_path);
      }
      else ;
      
#line 2124 
      final_ofdm_swing_index = (char)((int)rtldm->default_ofdm_index + (int)rtldm->absolute_ofdm_swing_idx[(int)rf_path]);
      
#line 2128 
      if ((unsigned int)rf_path == 0U) 
        
#line 2129 
        if ((int)final_ofdm_swing_index > (int)pwr_tracking_limit) {
          
#line 2130 
          rtldm->remnant_cck_idx = (char)((int)final_ofdm_swing_index - (int)pwr_tracking_limit);
          
#line 2134 
          rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)((int)final_ofdm_swing_index - (int)pwr_tracking_limit);
          
#line 2138 
          rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[(int)pwr_tracking_limit]);
          
#line 2142 
          rtldm->modify_txagc_flag_path_a = (_Bool)1;
          
#line 2145 
          rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
          
#line 2149 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_10;
            int tmp_11;
            
#line 2149 
            ;
            
#line 2149 
            ;
            
#line 2149 
            tmp_10 = preempt_count();
            
#line 2149 
            tmp_11 = preempt_count();
            
#line 2149 
            printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,(int)pwr_tracking_limit,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
          }
          else ;
        }
        else 
          
#line 2153 
          if ((int)final_ofdm_swing_index < 0) {
            
#line 2154 
            rtldm->remnant_cck_idx = final_ofdm_swing_index;
            
#line 2156 
            rtldm->remnant_ofdm_swing_idx[(int)rf_path] = final_ofdm_swing_index;
            
#line 2159 
            rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[0]);
            
#line 2162 
            rtldm->modify_txagc_flag_path_a = (_Bool)1;
            
#line 2165 
            rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
            
#line 2168 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_12;
              int tmp_13;
              
#line 2168 
              ;
              
#line 2168 
              tmp_12 = preempt_count();
              
#line 2168 
              tmp_13 = preempt_count();
              
#line 2168 
              printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,(int)rtldm->remnant_ofdm_swing_idx[(int)rf_path]);
            }
            else ;
          }
          else {
            
#line 2172 
            rtl_set_bbreg(hw,3100U,4292870144U,txscaling_tbl[(int)((unsigned char)final_ofdm_swing_index)]);
            
#line 2175 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp_14;
              int tmp_15;
              
#line 2175 
              ;
              
#line 2175 
              tmp_14 = preempt_count();
              
#line 2175 
              tmp_15 = preempt_count();
              
#line 2175 
              printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_15 & 2096896UL,tmp_14 != 0,(int)final_ofdm_swing_index);
            }
            else ;
            
#line 2179 
            if ((int)rtldm->modify_txagc_flag_path_a != 0) {
              
#line 2180 
              rtldm->remnant_cck_idx = (char)0;
              
#line 2181 
              rtldm->remnant_ofdm_swing_idx[(int)rf_path] = (char)0;
              
#line 2184 
              rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)rtlphy->current_channel),(unsigned char)0);
              
#line 2187 
              rtldm->modify_txagc_flag_path_a = (_Bool)0;
              
#line 2189 
              if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
                int tmp_16;
                int tmp_17;
                
#line 2189 
                tmp_16 = preempt_count();
                
#line 2189 
                tmp_17 = preempt_count();
                
#line 2189 
                printk("\001","rtl8821ae_dm_txpwr_track_set_pwr",(unsigned long)tmp_17 & 2096896UL,tmp_16 != 0);
              }
              else ;
            }
            else ;
          }
      else ;
    }
    else 
#line 2196 
         goto return_label;
  return_label: 
#line 2197 
                return;
}


#line 2200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_txpower_tracking_callback_thermalmeter(struct ieee80211_hw *hw)
{
  u8 delta;
  u8 delta_lck;
  u8 delta_iqk;
  u8 *delta_swing_table_idx_tup_a;
  u8 *delta_swing_table_idx_tdown_a;
  u8 *delta_swing_table_idx_tup_b;
  u8 *delta_swing_table_idx_tdown_b;
  u32 tmp_1;
  
#line 2203 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2204 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 2205 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 2206 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 2207 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2209 
  u8 thermal_value = (unsigned char)0U;
  
#line 2209 
  u8 p = (unsigned char)0U;
  
#line 2209 
  u8 i = (unsigned char)0U;
  
#line 2210 
  u8 thermal_value_avg_count = (unsigned char)0U;
  
#line 2211 
  u32 thermal_value_avg = 0U;
  
#line 2213 
  u8 ofdm_min_index = (unsigned char)6U;
  
#line 2215 
  u8 index_for_channel = (unsigned char)0U;
  
#line 2226 
  rtl8821ae_get_delta_swing_table(hw,& delta_swing_table_idx_tup_a,& delta_swing_table_idx_tdown_a,& delta_swing_table_idx_tup_b,& delta_swing_table_idx_tdown_b);
  
#line 2231 
  rtldm->txpower_trackinginit = (_Bool)1;
  
#line 2233 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2233 
    ;
    
#line 2233 
    ;
    
#line 2233 
    ;
    
#line 2233 
    tmp = preempt_count();
    
#line 2233 
    tmp_0 = preempt_count();
    
#line 2233 
    printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_0 & 2096896UL,tmp != 0,"rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(int)rtldm->swing_idx_cck_base,(int)rtldm->swing_idx_ofdm_base[0],(int)rtldm->default_ofdm_index);
  }
  else ;
  
#line 2240 
  tmp_1 = rtl_get_rfreg(hw,(enum radio_path)RF90_PATH_A,66U,64512U);
  
#line 2240 
  thermal_value = (unsigned char)tmp_1;
  
#line 2242 
  if (((unsigned int)rtldm->txpower_track_control == 0U || (unsigned int)rtlefuse->eeprom_thermalmeter == 0U) || (unsigned int)rtlefuse->eeprom_thermalmeter == 255U) 
    
#line 2245 
    goto return_label; else ;
  
#line 2249 
  if ((int)rtlhal->reloadtxpowerindex != 0) {
    
#line 2250 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 2250 
      tmp_2 = preempt_count();
      
#line 2250 
      tmp_3 = preempt_count();
      
#line 2250 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
  }
  else ;
  
#line 2255 
  rtldm->thermalvalue_avg[(int)rtldm->thermalvalue_avg_index] = thermal_value;
  
#line 2256 
  rtldm->thermalvalue_avg_index = (u8)((int)rtldm->thermalvalue_avg_index + 1);
  
#line 2257 
  if ((unsigned int)rtldm->thermalvalue_avg_index == 4U) 
#line 2259 
                                                         rtldm->thermalvalue_avg_index = (unsigned char)0U; else ;
  
#line 2261 
  i = (unsigned char)0U;
  
#line 2261 
  goto ldv_56837;
  ldv_56836: 
#line 2262 
  ;
  
#line 2262 
  if ((unsigned int)rtldm->thermalvalue_avg[(int)i] != 0U) {
    
#line 2263 
    thermal_value_avg = (unsigned int)rtldm->thermalvalue_avg[(int)i] + thermal_value_avg;
    
#line 2264 
    thermal_value_avg_count = (u8)((int)thermal_value_avg_count + 1);
  }
  else ;
  
#line 2261 
  i = (u8)((int)i + 1);
  ldv_56837: 
#line 2262 
  ;
  
#line 2261 
  if ((unsigned int)i <= 3U) 
#line 2263 
                             goto ldv_56836; else 
#line 2266 
                                                  goto ldv_56838;
  ldv_56838: 
#line 2267 
  ;
  
#line 2268 
  if ((unsigned int)thermal_value_avg_count != 0U) {
    
#line 2269 
    thermal_value = (unsigned char)(thermal_value_avg / (unsigned int)thermal_value_avg_count);
    
#line 2271 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 2271 
      ;
      
#line 2271 
      ;
      
#line 2271 
      tmp_4 = preempt_count();
      
#line 2271 
      tmp_5 = preempt_count();
      
#line 2271 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
    }
    else ;
  }
  else ;
  
#line 2280 
  if ((int)rtldm->thermalvalue < (int)thermal_value) 
#line 2280 
                                                     delta = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue); else 
                                                                    
#line 2280 
                                                                    delta = (unsigned char)((int)rtldm->thermalvalue - (int)thermal_value);
  
#line 2283 
  if ((int)rtldm->thermalvalue_lck < (int)thermal_value) 
#line 2283 
                                                         delta_lck = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue_lck); else 
                                                                    
#line 2283 
                                                                    delta_lck = (unsigned char)((int)rtldm->thermalvalue_lck - (int)thermal_value);
  
#line 2286 
  if ((int)rtldm->thermalvalue_iqk < (int)thermal_value) 
#line 2286 
                                                         delta_iqk = (unsigned char)((int)thermal_value - (int)rtldm->thermalvalue_iqk); else 
                                                                    
#line 2286 
                                                                    delta_iqk = (unsigned char)((int)rtldm->thermalvalue_iqk - (int)thermal_value);
  
#line 2290 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_6;
    int tmp_7;
    
#line 2290 
    ;
    
#line 2290 
    ;
    
#line 2290 
    ;
    
#line 2290 
    tmp_6 = preempt_count();
    
#line 2290 
    tmp_7 = preempt_count();
    
#line 2290 
    printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)delta,(int)delta_lck,(int)delta_iqk);
  }
  else ;
  
#line 2296 
  if ((unsigned int)delta_lck > 7U) {
    
#line 2297 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 2297 
      ;
      
#line 2297 
      tmp_8 = preempt_count();
      
#line 2297 
      tmp_9 = preempt_count();
      
#line 2297 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0,(int)delta_lck,8);
    }
    else ;
    
#line 2300 
    rtldm->thermalvalue_lck = thermal_value;
    
#line 2301 
    rtl8821ae_phy_lc_calibrate(hw);
  }
  else ;
  
#line 2306 
  if ((unsigned int)delta != 0U && (unsigned int)rtldm->txpower_track_control != 0U) {
    
#line 2310 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) 
#line 2310 
                                                                 delta = (unsigned char)((int)thermal_value - (int)rtlefuse->eeprom_thermalmeter); else 
                                                                    
#line 2310 
                                                                    delta = (unsigned char)((int)rtlefuse->eeprom_thermalmeter - (int)thermal_value);
    
#line 2314 
    if ((unsigned int)delta > 36U) 
#line 2315 
                                   delta = (unsigned char)36U; else ;
    
#line 2319 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) {
      
#line 2320 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_10;
        int tmp_11;
        
#line 2320 
        ;
        
#line 2320 
        ;
        
#line 2320 
        tmp_10 = preempt_count();
        
#line 2320 
        tmp_11 = preempt_count();
        
#line 2320 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,(int)delta,(int)*(delta_swing_table_idx_tup_a + (int)delta));
      }
      else ;
      
#line 2323 
      rtldm->delta_power_index_last[0] = rtldm->delta_power_index[0];
      
#line 2325 
      rtldm->delta_power_index[0] = (char)*(delta_swing_table_idx_tup_a + (int)delta);
      
#line 2328 
      rtldm->absolute_ofdm_swing_idx[0] = (char)*(delta_swing_table_idx_tup_a + (int)delta);
      
#line 2332 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_12;
        int tmp_13;
        
#line 2332 
        ;
        
#line 2332 
        tmp_12 = preempt_count();
        
#line 2332 
        tmp_13 = preempt_count();
        
#line 2332 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,(int)rtldm->absolute_ofdm_swing_idx[0]);
      }
      else ;
    }
    else {
      
#line 2336 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_14;
        int tmp_15;
        
#line 2336 
        ;
        
#line 2336 
        ;
        
#line 2336 
        tmp_14 = preempt_count();
        
#line 2336 
        tmp_15 = preempt_count();
        
#line 2336 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_15 & 2096896UL,tmp_14 != 0,(int)delta,(int)*(delta_swing_table_idx_tdown_a + (int)delta));
      }
      else ;
      
#line 2340 
      rtldm->delta_power_index_last[0] = rtldm->delta_power_index[0];
      
#line 2342 
      rtldm->delta_power_index[0] = (char)(- ((int)*(delta_swing_table_idx_tdown_a + (int)delta)));
      
#line 2345 
      rtldm->absolute_ofdm_swing_idx[0] = (char)(- ((int)*(delta_swing_table_idx_tdown_a + (int)delta)));
      
#line 2348 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_16;
        int tmp_17;
        
#line 2348 
        ;
        
#line 2348 
        tmp_16 = preempt_count();
        
#line 2348 
        tmp_17 = preempt_count();
        
#line 2348 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_17 & 2096896UL,tmp_16 != 0,(int)rtldm->absolute_ofdm_swing_idx[0]);
      }
      else ;
    }
    
#line 2353 
    p = (unsigned char)0U;
    
#line 2353 
    goto ldv_56840;
    ldv_56839: 
#line 2354 
    ;
    
#line 2354 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_18;
      int tmp_19;
      int tmp_20;
      
#line 2354 
      if ((unsigned int)p == 0U) 
#line 2354 
                                 tmp_18 = 65; else 
#line 2354 
                                                   tmp_18 = 66;
      
#line 2354 
      tmp_19 = preempt_count();
      
#line 2354 
      tmp_20 = preempt_count();
      
#line 2354 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0,tmp_18);
    }
    else ;
    
#line 2360 
    if ((int)rtldm->delta_power_index[(int)p] == (int)rtldm->delta_power_index_last[(int)p]) 
      
#line 2363 
      rtldm->power_index_offset[(int)p] = (char)0; else 
#line 2365 
                                                        rtldm->power_index_offset[(int)p] = (char)((int)rtldm->delta_power_index[(int)p] - (int)rtldm->delta_power_index_last[(int)p]);
    
#line 2370 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_21;
      int tmp_22;
      int tmp_23;
      
#line 2370 
      ;
      
#line 2370 
      ;
      
#line 2370 
      ;
      
#line 2370 
      if ((unsigned int)p == 0U) 
#line 2370 
                                 tmp_21 = 65; else 
#line 2370 
                                                   tmp_21 = 66;
      
#line 2370 
      tmp_22 = preempt_count();
      
#line 2370 
      tmp_23 = preempt_count();
      
#line 2370 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_23 & 2096896UL,tmp_22 != 0,tmp_21,(int)rtldm->power_index_offset[(int)p],(int)rtldm->delta_power_index[(int)p],(int)rtldm->delta_power_index_last[(int)p]);
    }
    else ;
    
#line 2377 
    rtldm->ofdm_index[(int)p] = (char)((int)rtldm->swing_idx_ofdm_base[(int)p] + (int)rtldm->power_index_offset[(int)p]);
    
#line 2380 
    rtldm->cck_index = (char)((int)rtldm->swing_idx_cck_base + (int)rtldm->power_index_offset[(int)p]);
    
#line 2384 
    rtldm->swing_idx_cck = (unsigned char)rtldm->cck_index;
    
#line 2385 
    rtldm->swing_idx_ofdm[(int)p] = (unsigned char)rtldm->ofdm_index[(int)p];
    
#line 2389 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_24;
      int tmp_25;
      
#line 2389 
      ;
      
#line 2389 
      ;
      
#line 2389 
      ;
      
#line 2389 
      tmp_24 = preempt_count();
      
#line 2389 
      tmp_25 = preempt_count();
      
#line 2389 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_25 & 2096896UL,tmp_24 != 0,(int)rtldm->swing_idx_cck,(int)rtldm->swing_idx_cck_base,(int)rtldm->power_index_offset[(int)p]);
    }
    else ;
    
#line 2394 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_26;
      int tmp_27;
      int tmp_28;
      
#line 2394 
      ;
      
#line 2394 
      ;
      
#line 2394 
      if ((unsigned int)p == 0U) 
#line 2394 
                                 tmp_26 = 65; else 
#line 2394 
                                                   tmp_26 = 66;
      
#line 2394 
      ;
      
#line 2394 
      tmp_27 = preempt_count();
      
#line 2394 
      tmp_28 = preempt_count();
      
#line 2394 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_28 & 2096896UL,tmp_27 != 0,(int)rtldm->swing_idx_ofdm[(int)p],tmp_26,(int)rtldm->swing_idx_ofdm_base[(int)p],(int)rtldm->power_index_offset[(int)p]);
    }
    else ;
    
#line 2403 
    if ((int)rtldm->ofdm_index[(int)p] > 36) 
#line 2404 
                                             rtldm->ofdm_index[(int)p] = (char)36;
    else 
      
#line 2405 
      if ((int)rtldm->ofdm_index[(int)p] < (int)ofdm_min_index) 
#line 2406 
                                                                rtldm->ofdm_index[(int)p] = (char)ofdm_min_index; else ;
    
#line 2353 
    p = (u8)((int)p + 1);
    ldv_56840: 
#line 2354 
    ;
    
#line 2353 
    if ((unsigned int)p == 0U) 
#line 2355 
                               goto ldv_56839; else 
#line 2358 
                                                    goto ldv_56841;
    ldv_56841: 
#line 2359 
    ;
    
#line 2408 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_29;
      int tmp_30;
      
#line 2408 
      tmp_29 = preempt_count();
      
#line 2408 
      tmp_30 = preempt_count();
      
#line 2408 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0);
    }
    else ;
    
#line 2410 
    if ((int)rtldm->cck_index > 36) 
#line 2411 
                                    rtldm->cck_index = (char)36;
    else 
      
#line 2412 
      if ((int)rtldm->cck_index < 0) 
#line 2413 
                                     rtldm->cck_index = (char)0; else ;
  }
  else {
    
#line 2415 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_31;
      int tmp_32;
      
#line 2415 
      ;
      
#line 2415 
      ;
      
#line 2415 
      ;
      
#line 2415 
      tmp_31 = preempt_count();
      
#line 2415 
      tmp_32 = preempt_count();
      
#line 2415 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_32 & 2096896UL,tmp_31 != 0,(int)rtldm->txpower_track_control,(int)thermal_value,(int)rtldm->thermalvalue);
    }
    else ;
    
#line 2421 
    p = (unsigned char)0U;
    
#line 2421 
    goto ldv_56843;
    ldv_56842: 
#line 2422 
    ;
    
#line 2422 
    rtldm->power_index_offset[(int)p] = (char)0;
    
#line 2421 
    p = (u8)((int)p + 1);
    ldv_56843: 
#line 2422 
    ;
    
#line 2421 
    if ((unsigned int)p == 0U) 
#line 2423 
                               goto ldv_56842; else 
#line 2426 
                                                    goto ldv_56844;
    ldv_56844: 
#line 2427 
    ;
  }
  
#line 2424 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_33;
    int tmp_34;
    
#line 2424 
    ;
    
#line 2424 
    ;
    
#line 2424 
    tmp_33 = preempt_count();
    
#line 2424 
    tmp_34 = preempt_count();
    
#line 2424 
    printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_34 & 2096896UL,tmp_33 != 0,(int)rtldm->cck_index,(int)rtldm->swing_idx_cck_base);
  }
  else ;
  
#line 2428 
  p = (unsigned char)0U;
  
#line 2428 
  goto ldv_56846;
  ldv_56845: 
#line 2429 
  ;
  
#line 2429 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_35;
    int tmp_36;
    int tmp_37;
    
#line 2429 
    ;
    
#line 2429 
    if ((unsigned int)p == 0U) 
#line 2429 
                               tmp_35 = 65; else 
#line 2429 
                                                 tmp_35 = 66;
    
#line 2429 
    ;
    
#line 2429 
    tmp_36 = preempt_count();
    
#line 2429 
    tmp_37 = preempt_count();
    
#line 2429 
    printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_37 & 2096896UL,tmp_36 != 0,(int)rtldm->ofdm_index[(int)p],tmp_35,(int)rtldm->swing_idx_ofdm_base[(int)p]);
  }
  else ;
  
#line 2428 
  p = (u8)((int)p + 1);
  ldv_56846: 
#line 2429 
  ;
  
#line 2428 
  if ((unsigned int)p == 0U) 
#line 2430 
                             goto ldv_56845; else 
#line 2433 
                                                  goto ldv_56847;
  ldv_56847: 
#line 2434 
  ;
  
#line 2436 
  if (((int)rtldm->power_index_offset[0] != 0 || (int)rtldm->power_index_offset[1] != 0) && (unsigned int)rtldm->txpower_track_control != 0U) {
    
#line 2449 
    if ((int)rtldm->thermalvalue < (int)thermal_value) {
      
#line 2450 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_38;
        int tmp_39;
        
#line 2450 
        ;
        
#line 2450 
        ;
        
#line 2450 
        ;
        
#line 2450 
        ;
        
#line 2450 
        ;
        
#line 2450 
        tmp_38 = preempt_count();
        
#line 2450 
        tmp_39 = preempt_count();
        
#line 2450 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_39 & 2096896UL,tmp_38 != 0,(int)rtldm->power_index_offset[0],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
      }
      else ;
    }
    else 
      
#line 2456 
      if ((int)rtldm->thermalvalue > (int)thermal_value) {
        
#line 2457 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_40;
          int tmp_41;
          
#line 2457 
          ;
          
#line 2457 
          ;
          
#line 2457 
          ;
          
#line 2457 
          ;
          
#line 2457 
          ;
          
#line 2457 
          tmp_40 = preempt_count();
          
#line 2457 
          tmp_41 = preempt_count();
          
#line 2457 
          printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_41 & 2096896UL,tmp_40 != 0,(int)rtldm->power_index_offset[0],(int)delta,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter,(int)rtldm->thermalvalue);
        }
        else ;
      }
      else ;
    
#line 2465 
    if ((int)rtlefuse->eeprom_thermalmeter < (int)thermal_value) {
      
#line 2466 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_42;
        int tmp_43;
        
#line 2466 
        ;
        
#line 2466 
        ;
        
#line 2466 
        tmp_42 = preempt_count();
        
#line 2466 
        tmp_43 = preempt_count();
        
#line 2466 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_43 & 2096896UL,tmp_42 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
      }
      else ;
      
#line 2470 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_44;
        int tmp_45;
        
#line 2470 
        tmp_44 = preempt_count();
        
#line 2470 
        tmp_45 = preempt_count();
        
#line 2470 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_45 & 2096896UL,tmp_44 != 0);
      }
      else ;
      
#line 2472 
      p = (unsigned char)0U;
      
#line 2472 
      goto ldv_56849;
      ldv_56848: 
#line 2473 
      ;
      
#line 2473 
      rtl8821ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)((int)p),(unsigned char)((int)index_for_channel));
      
#line 2472 
      p = (u8)((int)p + 1);
      ldv_56849: 
#line 2473 
      ;
      
#line 2472 
      if ((unsigned int)p == 0U) 
#line 2474 
                                 goto ldv_56848; else 
#line 2477 
                                                      goto ldv_56850;
      ldv_56850: 
#line 2478 
      ;
    }
    else {
      
#line 2476 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_46;
        int tmp_47;
        
#line 2476 
        ;
        
#line 2476 
        ;
        
#line 2476 
        tmp_46 = preempt_count();
        
#line 2476 
        tmp_47 = preempt_count();
        
#line 2476 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_47 & 2096896UL,tmp_46 != 0,(int)thermal_value,(int)rtlefuse->eeprom_thermalmeter);
      }
      else ;
      
#line 2480 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_48;
        int tmp_49;
        
#line 2480 
        tmp_48 = preempt_count();
        
#line 2480 
        tmp_49 = preempt_count();
        
#line 2480 
        printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_49 & 2096896UL,tmp_48 != 0);
      }
      else ;
      
#line 2482 
      p = (unsigned char)0U;
      
#line 2482 
      goto ldv_56852;
      ldv_56851: 
#line 2483 
      ;
      
#line 2483 
      rtl8812ae_dm_txpwr_track_set_pwr(hw,(enum pwr_track_control_method)MIX_MODE,(unsigned char)((int)p),(unsigned char)((int)index_for_channel));
      
#line 2482 
      p = (u8)((int)p + 1);
      ldv_56852: 
#line 2483 
      ;
      
#line 2482 
      if ((unsigned int)p == 0U) 
#line 2484 
                                 goto ldv_56851; else 
#line 2487 
                                                      goto ldv_56853;
      ldv_56853: 
#line 2488 
      ;
    }
    
#line 2487 
    rtldm->swing_idx_cck_base = rtldm->swing_idx_cck;
    
#line 2488 
    p = (unsigned char)0U;
    
#line 2488 
    goto ldv_56855;
    ldv_56854: 
#line 2489 
    ;
    
#line 2489 
    rtldm->swing_idx_ofdm_base[(int)p] = rtldm->swing_idx_ofdm[(int)p];
    
#line 2488 
    p = (u8)((int)p + 1);
    ldv_56855: 
#line 2489 
    ;
    
#line 2488 
    if ((unsigned int)p == 0U) 
#line 2490 
                               goto ldv_56854; else 
#line 2493 
                                                    goto ldv_56856;
    ldv_56856: 
#line 2494 
    ;
    
#line 2491 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_50;
      int tmp_51;
      
#line 2491 
      ;
      
#line 2491 
      ;
      
#line 2491 
      tmp_50 = preempt_count();
      
#line 2491 
      tmp_51 = preempt_count();
      
#line 2491 
      printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_51 & 2096896UL,tmp_50 != 0,(int)rtldm->thermalvalue,(int)thermal_value);
    }
    else ;
    
#line 2495 
    rtldm->thermalvalue = thermal_value;
  }
  else ;
  
#line 2500 
  if ((unsigned int)delta_iqk > 7U) {
    
#line 2501 
    if ((unsigned int)rtlphy->lck_inprogress == 0U) {
      
#line 2502 
      ldv_spin_lock_78(& rtlpriv->locks.iqk_lock);
      
#line 2503 
      rtlphy->lck_inprogress = (unsigned char)1U;
      
#line 2504 
      ldv_spin_unlock_79(& rtlpriv->locks.iqk_lock);
      
#line 2506 
      rtl8821ae_do_iqk(hw,(unsigned char)((int)delta_iqk),(unsigned char)((int)thermal_value),(unsigned char)8);
      
#line 2508 
      ldv_spin_lock_80(& rtlpriv->locks.iqk_lock);
      
#line 2509 
      rtlphy->lck_inprogress = (unsigned char)0U;
      
#line 2510 
      ldv_spin_unlock_81(& rtlpriv->locks.iqk_lock);
    }
    else ;
  }
  else ;
  
#line 2514 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_52;
    int tmp_53;
    
#line 2514 
    tmp_52 = preempt_count();
    
#line 2514 
    tmp_53 = preempt_count();
    
#line 2514 
    printk("\001","rtl8821ae_dm_txpower_tracking_callback_thermalmeter",(unsigned long)tmp_53 & 2096896UL,tmp_52 != 0,"rtl8821ae_dm_txpower_tracking_callback_thermalmeter");
  }
  else ;
  return_label: 
#line 2515 
                return;
}


#line 2517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_check_txpower_tracking_thermalmeter(struct ieee80211_hw *hw)
{
  
#line 2519 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2520 
  if ((unsigned int)rtlpriv->dm.tm_trigger == 0U) {
    
#line 2521 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,66U,196608U,3U);
    
#line 2523 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 2523 
      tmp = preempt_count();
      
#line 2523 
      tmp_0 = preempt_count();
      
#line 2523 
      printk("\001","rtl8821ae_dm_check_txpower_tracking_thermalmeter",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 2525 
    rtlpriv->dm.tm_trigger = (unsigned char)1U;
    
#line 2526 
    goto return_label;
  }
  else {
    
#line 2528 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 2528 
      tmp_1 = preempt_count();
      
#line 2528 
      tmp_2 = preempt_count();
      
#line 2528 
      printk("\001","rtl8821ae_dm_check_txpower_tracking_thermalmeter",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 2531 
    rtl8821ae_dm_txpower_tracking_callback_thermalmeter(hw);
    
#line 2532 
    rtlpriv->dm.tm_trigger = (unsigned char)0U;
  }
  return_label: 
#line 2534 
                return;
}


#line 2536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_refresh_rate_adaptive_mask(struct ieee80211_hw *hw)
{
  bool tmp_1;
  
#line 2538 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2539 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 2540 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 2541 
  struct rate_adaptive *p_ra = & rtlpriv->ra;
  
#line 2542 
  u32 low_rssithresh_for_ra = (unsigned int)p_ra->low2high_rssi_thresh_for_ra40m;
  
#line 2543 
  u32 high_rssithresh_for_ra = p_ra->high_rssi_thresh_for_ra;
  
#line 2544 
  u8 go_up_gap = (unsigned char)5U;
  
#line 2545 
  struct ieee80211_sta *sta = (struct ieee80211_sta *)0;
  
#line 2547 
  tmp_1 = is_hal_stop(rtlhal);
  
#line 2547 
  if ((int)tmp_1 != 0) {
    
#line 2548 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2048ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 2548 
      tmp = preempt_count();
      
#line 2548 
      tmp_0 = preempt_count();
      
#line 2548 
      printk("\001","rtl8821ae_dm_refresh_rate_adaptive_mask",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 2550 
    goto return_label;
  }
  else ;
  
#line 2553 
  if (! rtlpriv->dm.useramask) {
    
#line 2554 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2048ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 2554 
      tmp_2 = preempt_count();
      
#line 2554 
      tmp_3 = preempt_count();
      
#line 2554 
      printk("\001","rtl8821ae_dm_refresh_rate_adaptive_mask",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
    
#line 2556 
    goto return_label;
  }
  else ;
  
#line 2559 
  if (mac->link_state == (unsigned int)MAC80211_LINKED && mac->opmode == (unsigned int)NL80211_IFTYPE_STATION) {
    
#line 2561 
    switch ((int)p_ra->pre_ratr_state) {
      case 2: 
#line 2562 
      ;
      
#line 2563 
      high_rssithresh_for_ra = (unsigned int)go_up_gap + high_rssithresh_for_ra;
      
#line 2564 
      goto ldv_56875;
      case 3: 
#line 2565 
      ;
      
#line 2566 
      high_rssithresh_for_ra = (unsigned int)go_up_gap + high_rssithresh_for_ra;
      
#line 2567 
      low_rssithresh_for_ra = (unsigned int)go_up_gap + low_rssithresh_for_ra;
      
#line 2568 
      goto ldv_56875;
      default: 
#line 2569 
      ;
      
#line 2570 
      goto ldv_56875;
    }
    ldv_56875: 
#line 2573 
    ;
    
#line 2573 
    if (rtlpriv->dm.undec_sm_pwdb > (long)high_rssithresh_for_ra) 
#line 2575 
                                                                  p_ra->ratr_state = (unsigned char)1U;
    else 
      
#line 2576 
      if (rtlpriv->dm.undec_sm_pwdb > (long)low_rssithresh_for_ra) 
#line 2578 
                                                                   p_ra->ratr_state = (unsigned char)2U; else 
                                                                    
#line 2580 
                                                                    p_ra->ratr_state = (unsigned char)3U;
    
#line 2582 
    if ((int)p_ra->pre_ratr_state != (int)p_ra->ratr_state) {
      
#line 2583 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2048ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_4;
        int tmp_5;
        
#line 2583 
        ;
        
#line 2583 
        tmp_4 = preempt_count();
        
#line 2583 
        tmp_5 = preempt_count();
        
#line 2583 
        printk("\001","rtl8821ae_dm_refresh_rate_adaptive_mask",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,rtlpriv->dm.undec_sm_pwdb);
      }
      else ;
      
#line 2586 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2048ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_6;
        int tmp_7;
        
#line 2586 
        ;
        
#line 2586 
        tmp_6 = preempt_count();
        
#line 2586 
        tmp_7 = preempt_count();
        
#line 2586 
        printk("\001","rtl8821ae_dm_refresh_rate_adaptive_mask",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)p_ra->ratr_state);
      }
      else ;
      
#line 2588 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2048ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_8;
        int tmp_9;
        
#line 2588 
        ;
        
#line 2588 
        ;
        
#line 2588 
        tmp_8 = preempt_count();
        
#line 2588 
        tmp_9 = preempt_count();
        
#line 2588 
        printk("\001","rtl8821ae_dm_refresh_rate_adaptive_mask",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0,(int)p_ra->pre_ratr_state,(int)p_ra->ratr_state);
      }
      else ;
      
#line 2592 
      rcu_read_lock();
      
#line 2593 
      sta = rtl_find_sta(hw,(u8 *)(& mac->bssid));
      
#line 2594 
      if (sta != (struct ieee80211_sta *)0) 
#line 2595 
                                            (*(((rtlpriv->cfg)->ops)->update_rate_tbl))(hw,sta,(unsigned char)((int)p_ra->ratr_state)); else ;
      
#line 2597 
      rcu_read_unlock();
      
#line 2599 
      p_ra->pre_ratr_state = p_ra->ratr_state;
    }
    else ;
  }
  else ;
  return_label: 
#line 2602 
                return;
}


#line 2604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_refresh_basic_rate_mask(struct ieee80211_hw *hw)
{
  u8 stage;
  
#line 2606 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2607 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 2608 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 2610 
  u8 cur_stage = (unsigned char)0U;
  
#line 2611 
  u16 basic_rate = (unsigned short)31U;
  
#line 2613 
  if (mac->link_state <= (unsigned int)MAC80211_LINKING) 
#line 2614 
                                                         cur_stage = (unsigned char)0U;
  else 
    
#line 2615 
    if ((unsigned int)dm_digtable->rssi_val_min <= 24U) 
#line 2616 
                                                        cur_stage = (unsigned char)1U;
    else 
      
#line 2617 
      if ((unsigned int)dm_digtable->rssi_val_min > 30U) 
#line 2618 
                                                         cur_stage = (unsigned char)3U; else 
                                                                    
#line 2620 
                                                                    cur_stage = (unsigned char)2U;
  
#line 2622 
  if ((int)cur_stage != (int)stage) {
    
#line 2623 
    if ((unsigned int)cur_stage == 1U) {
      
#line 2624 
      basic_rate = (unsigned short)(((unsigned int)basic_rate == mac->basic_rates) & (int)basic_rate);
      
#line 2625 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)2,(u8 *)(& basic_rate));
    }
    else 
      
#line 2627 
      if ((unsigned int)cur_stage == 3U && (unsigned int)stage + 255U <= 1U) 
        
#line 2628 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)2,(u8 *)(& mac->basic_rates)); else ;
  }
  else ;
  
#line 2632 
  stage = cur_stage;
  
#line 2633 
  return;
}


#line 2635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_edca_choose_traffic_idx(struct ieee80211_hw *hw, u64 cur_tx_bytes, u64 cur_rx_bytes, bool b_bias_on_rx, bool *pb_is_cur_rdl_state)
{
  
#line 2640 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2642 
  if ((int)b_bias_on_rx != 0) 
    
#line 2643 
    if (cur_rx_bytes * 4ULL < cur_tx_bytes) {
      
#line 2644 
      *pb_is_cur_rdl_state = (_Bool)0;
      
#line 2645 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp;
        int tmp_0;
        
#line 2645 
        tmp = preempt_count();
        
#line 2645 
        tmp_0 = preempt_count();
        
#line 2645 
        printk("\001","rtl8821ae_dm_edca_choose_traffic_idx",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
      }
      else ;
    }
    else {
      
#line 2648 
      *pb_is_cur_rdl_state = (_Bool)1;
      
#line 2649 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 2649 
        tmp_1 = preempt_count();
        
#line 2649 
        tmp_2 = preempt_count();
        
#line 2649 
        printk("\001","rtl8821ae_dm_edca_choose_traffic_idx",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
      }
      else ;
    }
  else 
    
#line 2653 
    if (cur_tx_bytes * 4ULL < cur_rx_bytes) {
      
#line 2654 
      *pb_is_cur_rdl_state = (_Bool)1;
      
#line 2655 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 2655 
        tmp_3 = preempt_count();
        
#line 2655 
        tmp_4 = preempt_count();
        
#line 2655 
        printk("\001","rtl8821ae_dm_edca_choose_traffic_idx",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
      }
      else ;
    }
    else {
      
#line 2658 
      *pb_is_cur_rdl_state = (_Bool)0;
      
#line 2659 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 2659 
        tmp_5 = preempt_count();
        
#line 2659 
        tmp_6 = preempt_count();
        
#line 2659 
        printk("\001","rtl8821ae_dm_edca_choose_traffic_idx",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
      }
      else ;
    }
  
#line 2663 
  return;
}


#line 2666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_check_edca_turbo(struct ieee80211_hw *hw)
{
  
#line 2668 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2669 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 2670 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 2673 
  u64 cur_tx_ok_cnt = 0ULL;
  
#line 2674 
  u64 cur_rx_ok_cnt = 0ULL;
  
#line 2675 
  u32 edca_be_ul = 6202411U;
  
#line 2676 
  u32 edca_be_dl = 6202411U;
  
#line 2677 
  u32 edca_be = 6202411U;
  
#line 2678 
  u8 iot_peer = (unsigned char)0U;
  
#line 2679 
  bool *pb_is_cur_rdl_state = (bool *)0;
  
#line 2680 
  bool b_last_is_cur_rdl_state = (_Bool)0;
  
#line 2681 
  bool b_bias_on_rx = (_Bool)0;
  
#line 2682 
  bool b_edca_turbo_on = (_Bool)0;
  
#line 2684 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2684 
    tmp = preempt_count();
    
#line 2684 
    tmp_0 = preempt_count();
    
#line 2684 
    printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 2686 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    u32 tmp_1;
    int tmp_2;
    int tmp_3;
    
#line 2686 
    tmp_1 = rtl_read_dword(rtlpriv,1288U);
    
#line 2686 
    tmp_2 = preempt_count();
    
#line 2686 
    tmp_3 = preempt_count();
    
#line 2686 
    printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,tmp_1);
  }
  else ;
  
#line 2690 
  if ((unsigned int)rtlpriv->dm.dbginfo.num_non_be_pkt > 256U) 
#line 2691 
                                                               rtlpriv->dm.is_any_nonbepkts = (_Bool)1; else ;
  
#line 2692 
  rtlpriv->dm.dbginfo.num_non_be_pkt = (unsigned short)0U;
  
#line 2698 
  b_last_is_cur_rdl_state = rtlpriv->dm.is_cur_rdlstate;
  
#line 2699 
  pb_is_cur_rdl_state = & rtlpriv->dm.is_cur_rdlstate;
  
#line 2701 
  cur_tx_ok_cnt = (unsigned long long)rtlpriv->stats.txbytesunicast - rtldm->last_tx_ok_cnt;
  
#line 2702 
  cur_rx_ok_cnt = (unsigned long long)rtlpriv->stats.rxbytesunicast - rtldm->last_rx_ok_cnt;
  
#line 2704 
  rtldm->last_tx_ok_cnt = (unsigned long long)rtlpriv->stats.txbytesunicast;
  
#line 2705 
  rtldm->last_rx_ok_cnt = (unsigned long long)rtlpriv->stats.rxbytesunicast;
  
#line 2707 
  iot_peer = (unsigned char)rtlpriv->mac80211.vendor;
  
#line 2708 
  b_bias_on_rx = (_Bool)0;
  
#line 2709 
  b_edca_turbo_on = (_Bool)((! rtlpriv->dm.is_any_nonbepkts && ! rtlpriv->dm.disable_framebursting) != 0);
  
#line 2713 
  if ((unsigned int)rtlpriv->rtlhal.hw_type != 14U) {
    
#line 2714 
    if ((unsigned int)iot_peer == 6U && (unsigned int)mac->mode == 16U) {
      
#line 2716 
      edca_be_dl = edca_setting_dl[(int)iot_peer];
      
#line 2717 
      edca_be_ul = edca_setting_ul[(int)iot_peer];
    }
    else ;
  }
  else ;
  
#line 2721 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_4;
    int tmp_5;
    
#line 2721 
    ;
    
#line 2721 
    ;
    
#line 2721 
    tmp_4 = preempt_count();
    
#line 2721 
    tmp_5 = preempt_count();
    
#line 2721 
    printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)rtlpriv->dm.is_any_nonbepkts,(int)rtlpriv->dm.disable_framebursting);
  }
  else ;
  
#line 2726 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_6;
    int tmp_7;
    
#line 2726 
    ;
    
#line 2726 
    ;
    
#line 2726 
    tmp_6 = preempt_count();
    
#line 2726 
    tmp_7 = preempt_count();
    
#line 2726 
    printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)b_edca_turbo_on,(int)b_bias_on_rx);
  }
  else ;
  
#line 2730 
  if ((int)b_edca_turbo_on != 0) {
    
#line 2731 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 2731 
      ;
      
#line 2731 
      tmp_8 = preempt_count();
      
#line 2731 
      tmp_9 = preempt_count();
      
#line 2731 
      printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0,cur_tx_ok_cnt);
    }
    else ;
    
#line 2733 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_10;
      int tmp_11;
      
#line 2733 
      ;
      
#line 2733 
      tmp_10 = preempt_count();
      
#line 2733 
      tmp_11 = preempt_count();
      
#line 2733 
      printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,cur_rx_ok_cnt);
    }
    else ;
    
#line 2735 
    if ((int)b_bias_on_rx != 0) 
#line 2736 
                                rtl8821ae_dm_edca_choose_traffic_idx(hw,cur_tx_ok_cnt,cur_rx_ok_cnt,(_Bool)1,pb_is_cur_rdl_state); else 
                                                                    
#line 2739 
                                                                    rtl8821ae_dm_edca_choose_traffic_idx(hw,cur_tx_ok_cnt,cur_rx_ok_cnt,(_Bool)0,pb_is_cur_rdl_state);
    
#line 2742 
    if ((int)*pb_is_cur_rdl_state != 0) 
#line 2742 
                                        edca_be = edca_be_dl; else 
#line 2742 
                                                                   edca_be = edca_be_ul;
    
#line 2744 
    rtl_write_dword(rtlpriv,1288U,edca_be);
    
#line 2746 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_12;
      int tmp_13;
      
#line 2746 
      ;
      
#line 2746 
      tmp_12 = preempt_count();
      
#line 2746 
      tmp_13 = preempt_count();
      
#line 2746 
      printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,edca_be);
    }
    else ;
    
#line 2749 
    rtlpriv->dm.current_turbo_edca = (_Bool)1;
    
#line 2751 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2097152ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_14;
      int tmp_15;
      
#line 2751 
      ;
      
#line 2751 
      ;
      
#line 2751 
      ;
      
#line 2751 
      tmp_14 = preempt_count();
      
#line 2751 
      tmp_15 = preempt_count();
      
#line 2751 
      printk("\001","rtl8821ae_dm_check_edca_turbo",(unsigned long)tmp_15 & 2096896UL,tmp_14 != 0,edca_be_dl,edca_be_ul,edca_be);
    }
    else ;
  }
  else {
    
#line 2755 
    if ((int)rtlpriv->dm.current_turbo_edca != 0) {
      
#line 2756 
      u8 tmp_16 = (unsigned char)0U;
      
#line 2757 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)32,& tmp_16);
    }
    else ;
    
#line 2760 
    rtlpriv->dm.current_turbo_edca = (_Bool)0;
  }
  
#line 2763 
  rtlpriv->dm.is_any_nonbepkts = (_Bool)0;
  
#line 2764 
  rtldm->last_tx_ok_cnt = (unsigned long long)rtlpriv->stats.txbytesunicast;
  
#line 2765 
  rtldm->last_rx_ok_cnt = (unsigned long long)rtlpriv->stats.rxbytesunicast;
  
#line 2766 
  return;
}


#line 2768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_cck_packet_detection_thresh(struct ieee80211_hw *hw)
{
  u8 cur_cck_cca_thresh;
  
#line 2770 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2771 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 2774 
  if (rtlpriv->mac80211.link_state > (unsigned int)MAC80211_LINKING) 
    
#line 2775 
    if ((unsigned int)dm_digtable->rssi_val_min > 25U) 
#line 2776 
                                                       cur_cck_cca_thresh = (unsigned char)205U;
    else 
      
#line 2777 
      if ((unsigned int)dm_digtable->rssi_val_min + 245U <= 14U) 
#line 2779 
                                                                 cur_cck_cca_thresh = (unsigned char)131U;
      else 
        
#line 2781 
        if (rtlpriv->falsealm_cnt.cnt_cck_fail > 1000U) 
#line 2782 
                                                        cur_cck_cca_thresh = (unsigned char)131U; else 
                                                                    
#line 2784 
                                                                    cur_cck_cca_thresh = (unsigned char)64U;
  else 
    
#line 2787 
    if (rtlpriv->falsealm_cnt.cnt_cck_fail > 1000U) 
#line 2788 
                                                    cur_cck_cca_thresh = (unsigned char)131U; else 
                                                                    
#line 2790 
                                                                    cur_cck_cca_thresh = (unsigned char)64U;
  
#line 2793 
  if ((int)dm_digtable->cur_cck_cca_thres != (int)cur_cck_cca_thresh) 
    
#line 2794 
    rtl_write_byte(rtlpriv,2570U,(unsigned char)((int)cur_cck_cca_thresh)); else ;
  
#line 2797 
  dm_digtable->pre_cck_cca_thres = dm_digtable->cur_cck_cca_thres;
  
#line 2798 
  dm_digtable->cur_cck_cca_thres = cur_cck_cca_thresh;
  
#line 2799 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2799 
    ;
    
#line 2799 
    tmp = preempt_count();
    
#line 2799 
    tmp_0 = preempt_count();
    
#line 2799 
    printk("\001","rtl8821ae_dm_cck_packet_detection_thresh",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)dm_digtable->cur_cck_cca_thres);
  }
  else ;
  
#line 2800 
  return;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
static void rtl8821ae_dm_dynamic_atc_switch(struct ieee80211_hw *hw)
{
  u8 crystal_cap;
  u32 packet_count;
  int cfo_khz_a;
  int cfo_khz_b;
  int cfo_ave_diff;
  
#line 2805 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2806 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 2809 
  int cfo_ave = 0;
  
#line 2809 
  int adjust_xtal = 0;
  
#line 2812 
  if (rtlpriv->mac80211.link_state <= (unsigned int)MAC80211_LINKING) {
    
#line 2814 
    if (! rtldm->atc_status) {
      
#line 2815 
      rtl_set_bbreg(hw,2144U,16384U,1U);
      
#line 2816 
      rtldm->atc_status = (_Bool)1;
    }
    else ;
    
#line 2819 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 2819 
      tmp = preempt_count();
      
#line 2819 
      tmp_0 = preempt_count();
      
#line 2819 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 2820 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 2820 
      ;
      
#line 2820 
      tmp_1 = preempt_count();
      
#line 2820 
      tmp_2 = preempt_count();
      
#line 2820 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rtldm->atc_status);
    }
    else ;
    
#line 2823 
    if (rtldm->crystal_cap != (int)rtlpriv->efuse.crystalcap) {
      
#line 2824 
      rtldm->crystal_cap = (int)rtlpriv->efuse.crystalcap;
      
#line 2825 
      crystal_cap = (unsigned char)((unsigned int)((unsigned char)rtldm->crystal_cap) & 63U);
      
#line 2826 
      crystal_cap = (unsigned char)((unsigned int)crystal_cap & 63U);
      
#line 2827 
      if ((unsigned int)rtlpriv->rtlhal.hw_type == 14U) 
#line 2828 
                                                        rtl_set_bbreg(hw,44U,2146959360U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6))); else 
                                                                    
#line 2832 
                                                                    rtl_set_bbreg(hw,44U,16773120U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6)));
    }
    else ;
    
#line 2836 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 2836 
      ;
      
#line 2836 
      tmp_3 = preempt_count();
      
#line 2836 
      tmp_4 = preempt_count();
      
#line 2836 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,rtldm->crystal_cap);
    }
    else ;
  }
  else {
    
#line 2840 
    cfo_khz_a = (rtldm->cfo_tail[0] * 3125) / 1280;
    
#line 2841 
    cfo_khz_b = (rtldm->cfo_tail[1] * 3125) / 1280;
    
#line 2842 
    packet_count = rtldm->packet_count;
    
#line 2845 
    if (rtldm->packet_count_pre == packet_count) {
      
#line 2846 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 2846 
        tmp_5 = preempt_count();
        
#line 2846 
        tmp_6 = preempt_count();
        
#line 2846 
        printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
      }
      else ;
      
#line 2848 
      goto return_label;
    }
    else ;
    
#line 2851 
    rtldm->packet_count_pre = packet_count;
    
#line 2852 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 2852 
      ;
      
#line 2852 
      tmp_7 = preempt_count();
      
#line 2852 
      tmp_8 = preempt_count();
      
#line 2852 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,rtldm->packet_count);
    }
    else ;
    
#line 2857 
    if ((unsigned int)rtlpriv->phy.rf_type == 0U) 
#line 2858 
                                                  cfo_ave = cfo_khz_a; else 
                                                                    
#line 2860 
                                                                    cfo_ave = (cfo_khz_a + cfo_khz_b) >> 1;
    
#line 2862 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 2862 
      ;
      
#line 2862 
      ;
      
#line 2862 
      ;
      
#line 2862 
      tmp_9 = preempt_count();
      
#line 2862 
      tmp_10 = preempt_count();
      
#line 2862 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0,cfo_khz_a,cfo_khz_b,cfo_ave);
    }
    else ;
    
#line 2867 
    if (rtldm->cfo_ave_pre >= cfo_ave) 
#line 2867 
                                       cfo_ave_diff = rtldm->cfo_ave_pre - cfo_ave; else 
                                                                    
#line 2867 
                                                                    cfo_ave_diff = cfo_ave - rtldm->cfo_ave_pre;
    
#line 2871 
    if (cfo_ave_diff > 20 && ! rtldm->large_cfo_hit) {
      
#line 2872 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_11;
        int tmp_12;
        
#line 2872 
        tmp_11 = preempt_count();
        
#line 2872 
        tmp_12 = preempt_count();
        
#line 2872 
        printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
      }
      else ;
      
#line 2874 
      rtldm->large_cfo_hit = (_Bool)1;
      
#line 2875 
      goto return_label;
    }
    else 
#line 2877 
         rtldm->large_cfo_hit = (_Bool)0;
    
#line 2879 
    rtldm->cfo_ave_pre = cfo_ave;
    
#line 2884 
    if ((- ((int)rtldm->cfo_threshold) <= cfo_ave && (int)rtldm->cfo_threshold >= cfo_ave) && ! rtldm->is_freeze) 
      
#line 2887 
      if ((unsigned int)rtldm->cfo_threshold == 10U) {
        
#line 2888 
        rtldm->cfo_threshold = (unsigned char)20U;
        
#line 2889 
        rtldm->is_freeze = (_Bool)1;
      }
      else 
#line 2891 
           rtldm->cfo_threshold = (unsigned char)10U;
    else ;
    
#line 2894 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_13;
      int tmp_14;
      
#line 2894 
      ;
      
#line 2894 
      tmp_13 = preempt_count();
      
#line 2894 
      tmp_14 = preempt_count();
      
#line 2894 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0,(int)rtldm->cfo_threshold);
    }
    else ;
    
#line 2899 
    if ((int)rtldm->cfo_threshold < cfo_ave && rtldm->crystal_cap <= 62) 
      
#line 2900 
      adjust_xtal = ((cfo_ave + -10) >> 2) + 1;
    else 
      
#line 2901 
      if (- ((int)rtlpriv->dm.cfo_threshold) > cfo_ave && rtlpriv->dm.crystal_cap > 0) 
        
#line 2903 
        adjust_xtal = ((cfo_ave + 10) >> 2) + -1; else ;
    
#line 2904 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_15;
      int tmp_16;
      
#line 2904 
      ;
      
#line 2904 
      ;
      
#line 2904 
      tmp_15 = preempt_count();
      
#line 2904 
      tmp_16 = preempt_count();
      
#line 2904 
      printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0,rtldm->crystal_cap,adjust_xtal);
    }
    else ;
    
#line 2909 
    if (adjust_xtal != 0) {
      
#line 2910 
      rtldm->is_freeze = (_Bool)0;
      
#line 2911 
      rtldm->crystal_cap += adjust_xtal;
      
#line 2913 
      if (rtldm->crystal_cap > 63) 
#line 2914 
                                   rtldm->crystal_cap = 63;
      else 
        
#line 2915 
        if (rtldm->crystal_cap < 0) 
#line 2916 
                                    rtldm->crystal_cap = 0; else ;
      
#line 2918 
      crystal_cap = (unsigned char)((unsigned int)((unsigned char)rtldm->crystal_cap) & 63U);
      
#line 2919 
      crystal_cap = (unsigned char)((unsigned int)crystal_cap & 63U);
      
#line 2920 
      if ((unsigned int)rtlpriv->rtlhal.hw_type == 14U) 
#line 2921 
                                                        rtl_set_bbreg(hw,44U,2146959360U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6))); else 
                                                                    
#line 2925 
                                                                    rtl_set_bbreg(hw,44U,16773120U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6)));
      
#line 2928 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_17;
        int tmp_18;
        
#line 2928 
        ;
        
#line 2928 
        tmp_17 = preempt_count();
        
#line 2928 
        tmp_18 = preempt_count();
        
#line 2928 
        printk("\001","rtl8821ae_dm_dynamic_atc_switch",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0,rtldm->crystal_cap);
      }
      else ;
    }
    else ;
  }
  return_label: 
#line 2931 
                return;
}


#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_watchdog(struct ieee80211_hw *hw)
{
  
#line 2937 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2938 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 2939 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 2940 
  bool fw_current_inpsmode = (_Bool)0;
  
#line 2941 
  bool fw_ps_awake = (_Bool)1;
  
#line 2943 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inpsmode));
  
#line 2946 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)86,(u8 *)(& fw_ps_awake));
  
#line 2949 
  if (ppsc->p2p_ps_info.p2p_ps_mode != (unsigned int)P2P_PS_NONE) 
#line 2950 
                                                                  fw_ps_awake = (_Bool)0; else ;
  
#line 2952 
  if ((ppsc->rfpwr_state == (unsigned int)ERFON && (! fw_current_inpsmode && (int)fw_ps_awake != 0)) && ! ppsc->rfchange_inprogress) {
    
#line 2955 
    rtl8821ae_dm_common_info_self_update(hw);
    
#line 2956 
    rtl8821ae_dm_false_alarm_counter_statistics(hw);
    
#line 2957 
    rtl8821ae_dm_check_rssi_monitor(hw);
    
#line 2958 
    rtl8821ae_dm_dig(hw);
    
#line 2959 
    rtl8821ae_dm_cck_packet_detection_thresh(hw);
    
#line 2960 
    rtl8821ae_dm_refresh_rate_adaptive_mask(hw);
    
#line 2961 
    rtl8821ae_dm_refresh_basic_rate_mask(hw);
    
#line 2962 
    rtl8821ae_dm_check_edca_turbo(hw);
    
#line 2963 
    rtl8821ae_dm_dynamic_atc_switch(hw);
    
#line 2964 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 2965 
                                              rtl8812ae_dm_check_txpower_tracking_thermalmeter(hw); else 
                                                                    
#line 2967 
                                                                    rtl8821ae_dm_check_txpower_tracking_thermalmeter(hw);
    
#line 2968 
    rtl8821ae_dm_iq_calibrate(hw);
  }
  else ;
  
#line 2971 
  rtlpriv->dm.dbginfo.num_qry_beacon_pkt = (unsigned short)0U;
  
#line 2972 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8192ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2972 
    tmp = preempt_count();
    
#line 2972 
    tmp_0 = preempt_count();
    
#line 2972 
    printk("\001","rtl8821ae_dm_watchdog",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 2973 
  return;
}


#line 2975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/dm.c"
void rtl8821ae_dm_set_tx_ant_by_tx_info(struct ieee80211_hw *hw, u8 *pdesc, u32 mac_id)
{
  
#line 2978 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 2979 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 2980 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 2981 
  struct fast_ant_training *pfat_table = & rtldm->fat_table;
  
#line 2983 
  if ((unsigned int)rtlhal->hw_type != 14U) 
#line 2984 
                                            goto return_label; else ;
  
#line 2986 
  if ((unsigned int)rtlefuse->antenna_div_type == 1U) 
#line 2987 
                                                      *((u32 *)(pdesc + 20U)) = (*((__le32 *)(pdesc + 20U)) & 4043309055U) | (((unsigned int)pfat_table->antsel_a[mac_id] << 24) & 251658240U); else ;
  return_label: 
#line 2988 
                return;
}


#line 731  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_lock_72(spinlock_t *lock)
{
  
#line 735 
  ldv_spin_model_lock((char *)"iqk_lock_of_rtl_locks");
  
#line 737 
  spin_lock(lock);
  
#line 738 
  return;
}


#line 741  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_unlock_73(spinlock_t *lock)
{
  
#line 745 
  ldv_spin_model_unlock((char *)"iqk_lock_of_rtl_locks");
  
#line 747 
  spin_unlock(lock);
  
#line 748 
  return;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 755 
  ldv_spin_model_lock((char *)"entry_list_lock_of_rtl_locks");
  
#line 757 
  spin_lock_bh(lock);
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_unlock_bh_75(spinlock_t *lock)
{
  
#line 765 
  ldv_spin_model_unlock((char *)"entry_list_lock_of_rtl_locks");
  
#line 767 
  spin_unlock_bh(lock);
  
#line 768 
  return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_lock_bh_76(spinlock_t *lock)
{
  
#line 775 
  ldv_spin_model_lock((char *)"entry_list_lock_of_rtl_locks");
  
#line 777 
  spin_lock_bh(lock);
  
#line 778 
  return;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 785 
  ldv_spin_model_unlock((char *)"entry_list_lock_of_rtl_locks");
  
#line 787 
  spin_unlock_bh(lock);
  
#line 788 
  return;
}


#line 791  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_lock_78(spinlock_t *lock)
{
  
#line 795 
  ldv_spin_model_lock((char *)"iqk_lock_of_rtl_locks");
  
#line 797 
  spin_lock(lock);
  
#line 798 
  return;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_unlock_79(spinlock_t *lock)
{
  
#line 805 
  ldv_spin_model_unlock((char *)"iqk_lock_of_rtl_locks");
  
#line 807 
  spin_unlock(lock);
  
#line 808 
  return;
}


#line 811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 815 
  ldv_spin_model_lock((char *)"iqk_lock_of_rtl_locks");
  
#line 817 
  spin_lock(lock);
  
#line 818 
  return;
}


#line 821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_dm.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 825 
  ldv_spin_model_unlock((char *)"iqk_lock_of_rtl_locks");
  
#line 827 
  spin_unlock(lock);
  
#line 828 
  return;
}

void __builtin_unreachable(void);


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
void print_hex_dump(char const *, char const *, int, int, int, void const *, size_t, bool);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_91(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_94(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 395 
static void ldv_spin_lock_bh_74_0(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_76_0(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_82(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_87(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_92(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_93(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_95(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 422 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 423 
  return;
}


#line 448 
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_83(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_88(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 492 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 493 
  return;
}


#line 522 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
void do_gettimeofday(struct timeval *);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_81(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_90(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head const *list_)
{
  
#line 1261 
  struct sk_buff *skb = list_->next;
  
#line 1263 
  if (skb == (struct sk_buff *)list_) 
#line 1264 
                                      skb = (struct sk_buff *)0; else ;
  
#line 1265 
  return skb;
}


#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head const *list_)
{
  __u32 __retres;
  
#line 1318 
  __retres = list_->qlen;
  
#line 1318 
  return __retres;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  struct sk_buff *next;
  struct sk_buff *prev;
  struct sk_buff *tmp;
  
#line 1524 
  list->qlen -= 1U;
  
#line 1525 
  next = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  
#line 1526 
  prev = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev;
  
#line 1527 
  tmp = (struct sk_buff *)0;
  
#line 1527 
  skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = tmp;
  
#line 1527 
  skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = tmp;
  
#line 1528 
  next->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = prev;
  
#line 1529 
  prev->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = next;
  
#line 1530 
  return;
}


#line 1541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  
#line 1543 
  struct sk_buff *skb = skb_peek((struct sk_buff_head const *)list);
  
#line 1544 
  if (skb != (struct sk_buff *)0) 
#line 1545 
                                  __skb_unlink(skb,list); else ;
  
#line 1546 
  return skb;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 2892  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u8 rtl_read_byte(struct rtl_priv *rtlpriv, u32 addr)
{
  u8 tmp;
  
#line 2894 
  tmp = (*(rtlpriv->io.read8_sync))(rtlpriv,addr);
  
#line 2894 
  return tmp;
}


#line 2897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u16 rtl_read_word(struct rtl_priv *rtlpriv, u32 addr)
{
  u16 tmp;
  
#line 2899 
  tmp = (*(rtlpriv->io.read16_sync))(rtlpriv,addr);
  
#line 2899 
  return tmp;
}


#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static u8 get_rf_type(struct rtl_phy *rtlphy)
{
  u8 __retres;
  
#line 2983 
  __retres = rtlphy->rf_type;
  
#line 2983 
  return __retres;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/efuse.h"
void rtl_efuse_shadow_map_update(struct ieee80211_hw *);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/cam.h"
void rtl_cam_reset_all_entry(struct ieee80211_hw *);


#line 39 
u8 rtl_cam_add_one_entry(struct ieee80211_hw *, u8 *, u32, u32, u32, u32, u8 *);


#line 42 
int rtl_cam_delete_one_entry(struct ieee80211_hw *, u8 *, u32);


#line 44 
void rtl_cam_mark_invalid(struct ieee80211_hw *, u8);


#line 45 
void rtl_cam_empty_entry(struct ieee80211_hw *, u8);


#line 47 
u8 rtl_cam_get_free_entry(struct ieee80211_hw *, u8 *);


#line 48 
void rtl_cam_del_entry(struct ieee80211_hw *, u8 *);


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.h"
bool rtl8821ae_phy_mac_config(struct ieee80211_hw *hw);


#line 219 
bool rtl8821ae_phy_bb_config(struct ieee80211_hw *hw);


#line 220 
bool rtl8821ae_phy_rf_config(struct ieee80211_hw *hw);


#line 221 
void rtl8821ae_phy_switch_wirelessband(struct ieee80211_hw *hw, u8 band);


#line 246 
bool rtl8821ae_phy_set_io_cmd(struct ieee80211_hw *hw, enum io_type iotype);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.h"
int rtl8821ae_download_fw(struct ieee80211_hw *hw, bool buse_wake_on_wlan_fw);


#line 324 
void rtl8821ae_set_fw_related_for_wowlan(struct ieee80211_hw *hw, bool used_wowlan_fw);


#line 330 
void rtl8821ae_firmware_selfreset(struct ieee80211_hw *hw);


#line 331 
void rtl8821ae_set_fw_pwrmode_cmd(struct ieee80211_hw *hw, u8 mode);


#line 332 
void rtl8821ae_set_fw_media_status_rpt_cmd(struct ieee80211_hw *hw, u8 mstatus);


#line 336 
void rtl8821ae_set_fw_rsvdpagepkt(struct ieee80211_hw *hw, bool b_dl_finished, bool dl_whole_packets);


#line 338 
void rtl8812ae_set_fw_rsvdpagepkt(struct ieee80211_hw *hw, bool b_dl_finished, bool dl_whole_packets);


#line 340 
void rtl8821ae_set_p2p_ps_offload_cmd(struct ieee80211_hw *hw, u8 p2p_ps_state);


#line 342 
void rtl8821ae_set_fw_wowlan_mode(struct ieee80211_hw *hw, bool func_en);


#line 343 
void rtl8821ae_set_fw_remote_wake_ctrl_cmd(struct ieee80211_hw *hw, u8 enable);


#line 345 
void rtl8821ae_set_fw_keep_alive_cmd(struct ieee80211_hw *hw, bool func_en);


#line 346 
void rtl8821ae_set_fw_disconnect_decision_ctrl_cmd(struct ieee80211_hw *hw, bool enabled);


#line 348 
void rtl8821ae_set_fw_global_info_cmd(struct ieee80211_hw *hw);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.h"
void rtl8821ae_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled);


#line 31 
void rtl8812ae_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled);


#line 32 
void rtl8821ae_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled);


#line 33 
void rtl8812ae_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.h"
void rtl8821ae_get_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val);


#line 30 
void rtl8821ae_read_eeprom_info(struct ieee80211_hw *hw);


#line 32 
void rtl8821ae_interrupt_recognized(struct ieee80211_hw *hw, u32 *p_inta, u32 *p_intb);


#line 34 
int rtl8821ae_hw_init(struct ieee80211_hw *hw);


#line 35 
void rtl8821ae_card_disable(struct ieee80211_hw *hw);


#line 36 
void rtl8821ae_enable_interrupt(struct ieee80211_hw *hw);


#line 37 
void rtl8821ae_disable_interrupt(struct ieee80211_hw *hw);


#line 38 
int rtl8821ae_set_network_type(struct ieee80211_hw *hw, enum nl80211_iftype type);


#line 40 
void rtl8821ae_set_check_bssid(struct ieee80211_hw *hw, bool check_bssid);


#line 41 
void rtl8821ae_set_qos(struct ieee80211_hw *hw, int aci);


#line 42 
void rtl8821ae_set_beacon_related_registers(struct ieee80211_hw *hw);


#line 43 
void rtl8821ae_set_beacon_interval(struct ieee80211_hw *hw);


#line 44 
void rtl8821ae_update_interrupt_mask(struct ieee80211_hw *hw, u32 add_msr, u32 rm_msr);


#line 46 
void rtl8821ae_set_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val);


#line 47 
void rtl8821ae_update_hal_rate_tbl(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level);


#line 50 
void rtl8821ae_update_channel_access_setting(struct ieee80211_hw *hw);


#line 51 
bool rtl8821ae_gpio_radio_on_off_checking(struct ieee80211_hw *hw, u8 *valid);


#line 52 
void rtl8821ae_enable_hw_security_config(struct ieee80211_hw *hw);


#line 53 
void rtl8821ae_set_key(struct ieee80211_hw *hw, u32 key_index, u8 *p_macaddr, bool is_group, u8 enc_algo, bool is_wepkey, bool clear_all);


#line 57 
void rtl8821ae_bt_reg_init(struct ieee80211_hw *hw);


#line 58 
void rtl8821ae_bt_hw_init(struct ieee80211_hw *hw);


#line 59 
void rtl8821ae_suspend(struct ieee80211_hw *hw);


#line 60 
void rtl8821ae_resume(struct ieee80211_hw *hw);


#line 61 
void rtl8821ae_allow_all_destaddr(struct ieee80211_hw *hw, bool allow_all_da, bool write_into_reg);


#line 64 
void _rtl8821ae_stop_tx_beacon(struct ieee80211_hw *hw);


#line 65 
void _rtl8821ae_resume_tx_beacon(struct ieee80211_hw *hw);


#line 66 
void rtl8821ae_add_wowlan_pattern(struct ieee80211_hw *hw, struct rtl_wow_pattern *rtl_pattern, u8 index);


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pwrseqcmd.h"
bool rtl_hal_pwrseqcmdparsing(struct rtl_priv *, u8, u8, u8, struct wlan_pwr_cfg *);


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.h"
struct wlan_pwr_cfg rtl8812_card_disable_flow[41U];


#line 336 
struct wlan_pwr_cfg rtl8812_card_enable_flow[41U];


#line 689 
struct wlan_pwr_cfg rtl8821A_card_disable_flow[31U];


#line 693 
struct wlan_pwr_cfg rtl8821A_card_enable_flow[41U];


#line 709 
struct wlan_pwr_cfg rtl8821A_enter_lps_flow[16U];


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_return_beacon_queue_skb(struct ieee80211_hw *hw)
{
  unsigned long flags;
  __u32 tmp_1;
  
#line 48 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 49 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 50 
  struct rtl8192_tx_ring *ring = & rtlpci->tx_ring[4];
  
#line 53 
  ldv___ldv_spin_lock_72(& rtlpriv->locks.irq_th_lock);
  
#line 54 
  goto ldv_56403;
  ldv_56402: 
#line 55 
  ;
  {
    u32 tmp_0;
    
#line 55 
    struct rtl_tx_desc *entry = ring->desc + ring->idx;
    
#line 56 
    struct sk_buff *skb = __skb_dequeue(& ring->queue);
    
#line 58 
    ;
    
#line 59 
    tmp_0 = (*(((rtlpriv->cfg)->ops)->get_desc))((u8 *)entry,(_Bool)1,(unsigned char)3);
    
#line 58 
    ;
    
#line 58 
    pci_unmap_single(rtlpci->pdev,(unsigned long long)tmp_0,(unsigned long)skb->len,1);
    
#line 62 
    kfree_skb(skb);
    
#line 63 
    ring->idx = (ring->idx + 1U) % ring->entries;
  }
  ldv_56403: 
#line 65 
  ;
  
#line 54 
  tmp_1 = skb_queue_len((struct sk_buff_head const *)(& ring->queue));
  
#line 54 
  if (tmp_1 != 0U) 
#line 56 
                   goto ldv_56402; else 
#line 59 
                                        goto ldv_56404;
  ldv_56404: 
#line 60 
  ;
  
#line 65 
  ldv_spin_unlock_irqrestore_73(& rtlpriv->locks.irq_th_lock,flags);
  
#line 66 
  return;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_set_bcn_ctrl_reg(struct ieee80211_hw *hw, u8 set_bits, u8 clear_bits)
{
  
#line 71 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 72 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 74 
  rtlpci->reg_bcn_ctrl_val |= (unsigned int)set_bits;
  
#line 75 
  rtlpci->reg_bcn_ctrl_val &= (unsigned int)(~ ((int)clear_bits));
  
#line 77 
  rtl_write_byte(rtlpriv,1360U,(unsigned char)((int)((unsigned char)rtlpci->reg_bcn_ctrl_val)));
  
#line 78 
  return;
}


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void _rtl8821ae_stop_tx_beacon(struct ieee80211_hw *hw)
{
  u8 tmp1byte;
  
#line 82 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 85 
  tmp1byte = rtl_read_byte(rtlpriv,1058U);
  
#line 86 
  rtl_write_byte(rtlpriv,1058U,(unsigned char)((int)tmp1byte & 191));
  
#line 87 
  rtl_write_byte(rtlpriv,1345U,(unsigned char)100);
  
#line 88 
  tmp1byte = rtl_read_byte(rtlpriv,1346U);
  
#line 89 
  tmp1byte = (unsigned char)((unsigned int)tmp1byte & 254U);
  
#line 90 
  rtl_write_byte(rtlpriv,1346U,(unsigned char)((int)tmp1byte));
  
#line 91 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void _rtl8821ae_resume_tx_beacon(struct ieee80211_hw *hw)
{
  u8 tmp1byte;
  
#line 95 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 98 
  tmp1byte = rtl_read_byte(rtlpriv,1058U);
  
#line 99 
  rtl_write_byte(rtlpriv,1058U,(unsigned char)((int)((unsigned int)tmp1byte | 64U)));
  
#line 100 
  rtl_write_byte(rtlpriv,1345U,(unsigned char)255);
  
#line 101 
  tmp1byte = rtl_read_byte(rtlpriv,1346U);
  
#line 102 
  tmp1byte = (unsigned char)((unsigned int)tmp1byte | 1U);
  
#line 103 
  rtl_write_byte(rtlpriv,1346U,(unsigned char)((int)tmp1byte));
  
#line 104 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_enable_bcn_sub_func(struct ieee80211_hw *hw)
{
  
#line 108 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)0,(unsigned char)2);
  
#line 109 
  return;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_disable_bcn_sub_func(struct ieee80211_hw *hw)
{
  
#line 113 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)2,(unsigned char)0);
  
#line 114 
  return;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_set_fw_clock_on(struct ieee80211_hw *hw, u8 rpwm_val, bool b_need_turn_off_ckk)
{
  bool b_support_remote_wake_up;
  u32 isr_regaddr;
  u32 content;
  
#line 119 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 120 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 122 
  u32 count = 0U;
  
#line 123 
  bool b_schedule_timer = b_need_turn_off_ckk;
  
#line 125 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)92,(u8 *)(& b_support_remote_wake_up));
  
#line 128 
  if (! rtlhal->fw_ready) 
#line 129 
                          goto return_label; else ;
  
#line 130 
  if (! rtlpriv->psc.fw_current_inpsmode) 
#line 131 
                                          goto return_label; else ;
  ldv_56444: 
#line 132 
  ;
  
#line 134 
  ldv_spin_lock_bh_74_0(& rtlpriv->locks.fw_ps_lock);
  
#line 135 
  if ((int)rtlhal->fw_clk_change_in_progress != 0) {
    
#line 136 
    goto ldv_56442;
    ldv_56441: 
#line 137 
    ;
    
#line 137 
    ldv_spin_unlock_bh_75_0(& rtlpriv->locks.fw_ps_lock);
    
#line 138 
    count += 1U;
    
#line 139 
    __const_udelay(429500UL);
    
#line 140 
    if (count > 1000U) 
#line 141 
                       goto change_done; else ;
    
#line 142 
    ldv_spin_lock_bh_76_0(& rtlpriv->locks.fw_ps_lock);
    ldv_56442: 
#line 143 
    ;
    
#line 136 
    if ((int)rtlhal->fw_clk_change_in_progress != 0) 
#line 138 
                                                     goto ldv_56441; else 
                                                                    
#line 141 
                                                                    goto ldv_56443;
    ldv_56443: 
#line 142 
    ;
    
#line 144 
    ldv_spin_unlock_bh_77_0(& rtlpriv->locks.fw_ps_lock);
  }
  else {
    
#line 146 
    rtlhal->fw_clk_change_in_progress = (_Bool)0;
    
#line 147 
    ldv_spin_unlock_bh_78(& rtlpriv->locks.fw_ps_lock);
    
#line 148 
    goto change_done;
  }
  
#line 134 
  goto ldv_56444;
  change_done: 
#line 151 
  ;
  
#line 152 
  if (((unsigned int)rtlhal->fw_ps_state & 15U) == 1U) {
    
#line 153 
    (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)60,& rpwm_val);
    
#line 155 
    if (((unsigned long)rpwm_val & 64UL) != 0UL) {
      
#line 156 
      isr_regaddr = 180U;
      
#line 157 
      content = rtl_read_dword(rtlpriv,isr_regaddr);
      
#line 158 
      goto ldv_56446;
      ldv_56445: 
#line 159 
      ;
      
#line 159 
      __const_udelay(214750UL);
      
#line 160 
      count += 1U;
      
#line 161 
      content = rtl_read_dword(rtlpriv,isr_regaddr);
      ldv_56446: 
#line 162 
      ;
      
#line 158 
      if (((unsigned long)content & 256UL) == 0UL && count <= 499U) 
#line 160 
                                                                    goto ldv_56445; else 
                                                                    
#line 163 
                                                                    goto ldv_56447;
      ldv_56447: 
#line 164 
      ;
      
#line 164 
      if (((unsigned long)content & 256UL) != 0UL) {
        
#line 165 
        rtl_write_word(rtlpriv,isr_regaddr,(unsigned short)256);
        
#line 166 
        rtlhal->fw_ps_state = (unsigned char)0U;
        
#line 167 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp;
          int tmp_0;
          
#line 167 
          ;
          
#line 167 
          tmp = preempt_count();
          
#line 167 
          tmp_0 = preempt_count();
          
#line 167 
          printk("\001","_rtl8821ae_set_fw_clock_on",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtlhal->fw_ps_state);
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 173 
    ldv_spin_lock_bh_79(& rtlpriv->locks.fw_ps_lock);
    
#line 174 
    rtlhal->fw_clk_change_in_progress = (_Bool)0;
    
#line 175 
    ldv_spin_unlock_bh_80(& rtlpriv->locks.fw_ps_lock);
    
#line 176 
    if ((int)b_schedule_timer != 0) {
      unsigned long tmp_1;
      
#line 177 
      tmp_1 = msecs_to_jiffies(10U);
      
#line 177 
      ;
      
#line 177 
      ;
      
#line 177 
      ldv_mod_timer_81(& rtlpriv->works.fw_clockoff_timer,tmp_1 + jiffies);
    }
    else ;
  }
  else {
    
#line 180 
    ldv_spin_lock_bh_82(& rtlpriv->locks.fw_ps_lock);
    
#line 181 
    rtlhal->fw_clk_change_in_progress = (_Bool)0;
    
#line 182 
    ldv_spin_unlock_bh_83(& rtlpriv->locks.fw_ps_lock);
  }
  return_label: 
#line 184 
                return;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_set_fw_clock_off(struct ieee80211_hw *hw, u8 rpwm_val)
{
  struct rtl8192_tx_ring *ring;
  enum rf_pwrstate rtstate;
  u8 queue;
  __u32 tmp;
  
#line 189 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 190 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 191 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 194 
  bool b_schedule_timer = (_Bool)0;
  
#line 197 
  if (! rtlhal->fw_ready) 
#line 198 
                          goto return_label; else ;
  
#line 199 
  if (! rtlpriv->psc.fw_current_inpsmode) 
#line 200 
                                          goto return_label; else ;
  
#line 201 
  if (! rtlhal->allow_sw_to_change_hwclc) 
#line 202 
                                          goto return_label; else ;
  
#line 203 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)40,(u8 *)(& rtstate));
  
#line 204 
  if (rtstate == (unsigned int)ERFOFF || rtlpriv->psc.inactive_pwrstate == (unsigned int)ERFOFF) 
    
#line 205 
    goto return_label; else ;
  
#line 207 
  queue = (unsigned char)0U;
  
#line 207 
  goto ldv_56462;
  ldv_56461: 
#line 208 
  ;
  
#line 208 
  ring = & rtlpci->tx_ring[(int)queue];
  
#line 209 
  tmp = skb_queue_len((struct sk_buff_head const *)(& ring->queue));
  
#line 209 
  if (tmp != 0U) {
    
#line 210 
    b_schedule_timer = (_Bool)1;
    
#line 211 
    goto ldv_56460;
  }
  else ;
  
#line 207 
  queue = (u8)((int)queue + 1);
  ldv_56462: 
#line 208 
  ;
  
#line 207 
  if ((unsigned int)queue <= 8U) 
#line 209 
                                 goto ldv_56461; else 
#line 212 
                                                      goto ldv_56460;
  ldv_56460: 
#line 213 
  ;
  
#line 215 
  if ((int)b_schedule_timer != 0) {
    unsigned long tmp_0;
    
#line 216 
    tmp_0 = msecs_to_jiffies(10U);
    
#line 216 
    ;
    
#line 216 
    ;
    
#line 216 
    ldv_mod_timer_84(& rtlpriv->works.fw_clockoff_timer,tmp_0 + jiffies);
    
#line 218 
    goto return_label;
  }
  else ;
  
#line 221 
  if (((unsigned int)rtlhal->fw_ps_state & 15U) != 1U) {
    
#line 223 
    ldv_spin_lock_bh_85(& rtlpriv->locks.fw_ps_lock);
    
#line 224 
    if (! rtlhal->fw_clk_change_in_progress) {
      
#line 225 
      rtlhal->fw_clk_change_in_progress = (_Bool)1;
      
#line 226 
      ldv_spin_unlock_bh_86(& rtlpriv->locks.fw_ps_lock);
      
#line 227 
      rtlhal->fw_ps_state = (unsigned char)((unsigned int)rpwm_val & 15U);
      
#line 228 
      rtl_write_word(rtlpriv,180U,(unsigned short)256);
      
#line 229 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)60,& rpwm_val);
      
#line 231 
      ldv_spin_lock_bh_87(& rtlpriv->locks.fw_ps_lock);
      
#line 232 
      rtlhal->fw_clk_change_in_progress = (_Bool)0;
      
#line 233 
      ldv_spin_unlock_bh_88(& rtlpriv->locks.fw_ps_lock);
    }
    else {
      unsigned long tmp_1;
      
#line 235 
      ldv_spin_unlock_bh_89(& rtlpriv->locks.fw_ps_lock);
      
#line 236 
      tmp_1 = msecs_to_jiffies(10U);
      
#line 236 
      ;
      
#line 236 
      ;
      
#line 236 
      ldv_mod_timer_90(& rtlpriv->works.fw_clockoff_timer,tmp_1 + jiffies);
    }
  }
  else ;
  return_label: 
#line 240 
                return;
}


#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_set_fw_ps_rf_on(struct ieee80211_hw *hw)
{
  
#line 244 
  u8 rpwm_val = (unsigned char)0U;
  
#line 246 
  rpwm_val = (unsigned char)((unsigned int)rpwm_val | 64U);
  
#line 247 
  _rtl8821ae_set_fw_clock_on(hw,(unsigned char)((int)rpwm_val),(_Bool)1);
  
#line 248 
  return;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_fwlps_leave(struct ieee80211_hw *hw)
{
  
#line 252 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 253 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 254 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 255 
  bool fw_current_inps = (_Bool)0;
  
#line 256 
  u8 rpwm_val = (unsigned char)0U;
  
#line 256 
  u8 fw_pwrmode = (unsigned char)0U;
  
#line 258 
  if ((int)ppsc->low_power_enable != 0) {
    
#line 259 
    rpwm_val = (unsigned char)64U;
    
#line 260 
    _rtl8821ae_set_fw_clock_on(hw,(unsigned char)((int)rpwm_val),(_Bool)0);
    
#line 261 
    rtlhal->allow_sw_to_change_hwclc = (_Bool)0;
    
#line 262 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& fw_pwrmode);
    
#line 264 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
  }
  else {
    
#line 267 
    rpwm_val = (unsigned char)0U;
    
#line 268 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)60,& rpwm_val);
    
#line 270 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& fw_pwrmode);
    
#line 272 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
  }
  
#line 275 
  return;
}


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_fwlps_enter(struct ieee80211_hw *hw)
{
  u8 rpwm_val;
  
#line 279 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 280 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 281 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 282 
  bool fw_current_inps = (_Bool)1;
  
#line 285 
  if ((int)ppsc->low_power_enable != 0) {
    
#line 286 
    rpwm_val = (unsigned char)1U;
    
#line 287 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
    
#line 290 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& ppsc->fwctrl_psmode);
    
#line 293 
    rtlhal->allow_sw_to_change_hwclc = (_Bool)1;
    
#line 294 
    _rtl8821ae_set_fw_clock_off(hw,(unsigned char)((int)rpwm_val));
  }
  else {
    
#line 296 
    rpwm_val = (unsigned char)0U;
    
#line 297 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
    
#line 300 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& ppsc->fwctrl_psmode);
    
#line 303 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)60,& rpwm_val);
  }
  
#line 307 
  return;
}


#line 309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_download_rsvd_page(struct ieee80211_hw *hw, bool dl_whole_packets)
{
  u8 tmp_regcr;
  u8 tmp_reg422;
  u8 bcnvalid_reg;
  
#line 312 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 313 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 315 
  u8 count = (unsigned char)0U;
  
#line 315 
  u8 dlbcn_count = (unsigned char)0U;
  
#line 316 
  bool send_beacon = (_Bool)0;
  
#line 318 
  tmp_regcr = rtl_read_byte(rtlpriv,257U);
  
#line 319 
  rtl_write_byte(rtlpriv,257U,(unsigned char)((int)((unsigned int)tmp_regcr | 1U)));
  
#line 321 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)0,(unsigned char)8);
  
#line 322 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)16,(unsigned char)0);
  
#line 324 
  tmp_reg422 = rtl_read_byte(rtlpriv,1058U);
  
#line 325 
  rtl_write_byte(rtlpriv,1058U,(unsigned char)((int)tmp_reg422 & 191));
  
#line 327 
  if (((unsigned long)tmp_reg422 & 64UL) != 0UL) 
#line 328 
                                                 send_beacon = (_Bool)1; else ;
  ldv_56499: 
#line 329 
  ;
  
#line 331 
  bcnvalid_reg = rtl_read_byte(rtlpriv,522U);
  
#line 332 
  rtl_write_byte(rtlpriv,522U,(unsigned char)((int)((unsigned int)bcnvalid_reg | 1U)));
  
#line 334 
  _rtl8821ae_return_beacon_queue_skb(hw);
  
#line 336 
  if ((unsigned int)rtlhal->hw_type == 14U) 
#line 337 
                                            rtl8812ae_set_fw_rsvdpagepkt(hw,(_Bool)0,(_Bool)((bool)((int)dl_whole_packets) != 0)); else 
                                                                    
#line 340 
                                                                    rtl8821ae_set_fw_rsvdpagepkt(hw,(_Bool)0,(_Bool)((bool)((int)dl_whole_packets) != 0));
  
#line 343 
  bcnvalid_reg = rtl_read_byte(rtlpriv,522U);
  
#line 344 
  count = (unsigned char)0U;
  
#line 345 
  goto ldv_56497;
  ldv_56496: 
#line 346 
  ;
  
#line 346 
  count = (u8)((int)count + 1);
  
#line 347 
  __const_udelay(42950UL);
  
#line 348 
  bcnvalid_reg = rtl_read_byte(rtlpriv,522U);
  ldv_56497: 
#line 349 
  ;
  
#line 345 
  if (((unsigned long)bcnvalid_reg & 1UL) == 0UL && (unsigned int)count <= 19U) 
    
#line 347 
    goto ldv_56496; else 
#line 350 
                         goto ldv_56498;
  ldv_56498: 
#line 351 
  ;
  
#line 350 
  dlbcn_count = (u8)((int)dlbcn_count + 1);
  
#line 351 
  if (((unsigned long)bcnvalid_reg & 1UL) == 0UL && (unsigned int)dlbcn_count <= 4U) 
    
#line 353 
    goto ldv_56499; else 
#line 356 
                         goto ldv_56500;
  ldv_56500: 
#line 357 
  ;
  
#line 353 
  if (((unsigned long)bcnvalid_reg & 1UL) == 0UL) {
    
#line 354 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 354 
      tmp = preempt_count();
      
#line 354 
      tmp_0 = preempt_count();
      
#line 354 
      printk("\001","_rtl8821ae_download_rsvd_page",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
  }
  else ;
  
#line 356 
  if (((unsigned long)bcnvalid_reg & 1UL) != 0UL && (int)rtlhal->enter_pnp_sleep != 0) {
    
#line 357 
    rtl_write_byte(rtlpriv,522U,(unsigned char)((int)((unsigned int)bcnvalid_reg | 1U)));
    
#line 358 
    _rtl8821ae_return_beacon_queue_skb(hw);
    
#line 359 
    if ((int)send_beacon != 0) {
      
#line 360 
      dlbcn_count = (unsigned char)0U;
      ldv_56505: 
#line 361 
      ;
      
#line 362 
      rtl_write_byte(rtlpriv,522U,(unsigned char)((int)((unsigned int)bcnvalid_reg | 1U)));
      
#line 365 
      _rtl8821ae_return_beacon_queue_skb(hw);
      
#line 367 
      if ((unsigned int)rtlhal->hw_type == 14U) 
#line 368 
                                                rtl8812ae_set_fw_rsvdpagepkt(hw,(_Bool)1,(_Bool)0); else 
                                                                    
#line 371 
                                                                    rtl8821ae_set_fw_rsvdpagepkt(hw,(_Bool)1,(_Bool)0);
      
#line 375 
      bcnvalid_reg = rtl_read_byte(rtlpriv,522U);
      
#line 377 
      count = (unsigned char)0U;
      
#line 378 
      goto ldv_56503;
      ldv_56502: 
#line 379 
      ;
      
#line 379 
      count = (u8)((int)count + 1);
      
#line 380 
      __const_udelay(42950UL);
      
#line 381 
      bcnvalid_reg = rtl_read_byte(rtlpriv,522U);
      ldv_56503: 
#line 383 
      ;
      
#line 378 
      if (((unsigned long)bcnvalid_reg & 1UL) == 0UL && (unsigned int)count <= 19U) 
        
#line 380 
        goto ldv_56502; else 
#line 383 
                             goto ldv_56504;
      ldv_56504: 
#line 384 
      ;
      
#line 385 
      dlbcn_count = (u8)((int)dlbcn_count + 1);
      
#line 386 
      if (((unsigned long)bcnvalid_reg & 1UL) == 0UL && (unsigned int)dlbcn_count <= 4U) 
        
#line 388 
        goto ldv_56505; else 
#line 391 
                             goto ldv_56506;
      ldv_56506: 
#line 392 
      ;
      
#line 388 
      if (((unsigned long)bcnvalid_reg & 1UL) == 0UL) {
        
#line 389 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_1;
          int tmp_2;
          
#line 389 
          tmp_1 = preempt_count();
          
#line 389 
          tmp_2 = preempt_count();
          
#line 389 
          printk("\001","_rtl8821ae_download_rsvd_page",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 394 
  if (((unsigned long)bcnvalid_reg & 1UL) != 0UL) 
#line 395 
                                                  rtl_write_byte(rtlpriv,522U,(unsigned char)1); else ;
  
#line 397 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)8,(unsigned char)0);
  
#line 398 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)0,(unsigned char)16);
  
#line 400 
  if ((int)send_beacon != 0) 
#line 401 
                             rtl_write_byte(rtlpriv,1058U,(unsigned char)((int)tmp_reg422)); else ;
  
#line 403 
  if (! rtlhal->enter_pnp_sleep) {
    
#line 404 
    tmp_regcr = rtl_read_byte(rtlpriv,257U);
    
#line 405 
    rtl_write_byte(rtlpriv,257U,(unsigned char)((int)tmp_regcr & 254));
  }
  else ;
  
#line 407 
  return;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_get_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val)
{
  
#line 411 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 412 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 413 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 414 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 416 
  switch ((int)variable) {
    u8 tmp;
    case 0: 
#line 417 
    ;
    
#line 418 
    *((u32 *)val) = rtl_read_dword(rtlpriv,1552U);
    
#line 419 
    *((u16 *)(val + 4U)) = rtl_read_word(rtlpriv,1556U);
    
#line 420 
    goto ldv_56517;
    case 3: 
#line 421 
    ;
    
#line 422 
    *((u32 *)val) = rtl_read_dword(rtlpriv,1560U);
    
#line 423 
    *((u16 *)(val + 4U)) = rtl_read_word(rtlpriv,1564U);
    
#line 424 
    goto ldv_56517;
    case 4: 
#line 425 
    ;
    
#line 426 
    tmp = rtl_read_byte(rtlpriv,258U);
    
#line 426 
    *val = (unsigned char)((unsigned int)tmp & 3U);
    
#line 427 
    goto ldv_56517;
    case 18: 
#line 428 
    ;
    
#line 429 
    *val = mac->slot_time;
    
#line 430 
    goto ldv_56517;
    case 6: 
#line 431 
    ;
    
#line 432 
    *((u16 *)val) = rtl_read_word(rtlpriv,1364U);
    
#line 433 
    goto ldv_56517;
    case 7: 
#line 434 
    ;
    
#line 435 
    *((u16 *)val) = rtl_read_word(rtlpriv,1370U);
    
#line 436 
    goto ldv_56517;
    case 44: 
#line 437 
    ;
    
#line 438 
    *((u32 *)val) = rtlpci->receive_config;
    
#line 439 
    goto ldv_56517;
    case 40: 
#line 440 
    ;
    
#line 441 
    *((enum rf_pwrstate *)val) = ppsc->rfpwr_state;
    
#line 442 
    goto ldv_56517;
    case 86: 
#line 443 
    ;
    {
      enum rf_pwrstate rfstate;
      u32 val_rcr;
      
#line 447 
      (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)40,(u8 *)(& rfstate));
      
#line 450 
      if (rfstate == (unsigned int)ERFOFF) 
#line 451 
                                           *((bool *)val) = (_Bool)1;
      else {
        
#line 453 
        val_rcr = rtl_read_dword(rtlpriv,1544U);
        
#line 454 
        val_rcr &= 458752U;
        
#line 455 
        if (val_rcr != 0U) 
#line 456 
                           *((bool *)val) = (_Bool)0; else 
#line 458 
                                                           *((bool *)val) = (_Bool)1;
      }
      
#line 460 
      goto ldv_56517;
    }
    case 65: 
#line 461 
    ;
    
#line 462 
    *((bool *)val) = ppsc->fw_current_inpsmode;
    
#line 463 
    goto ldv_56517;
    case 84: 
#line 464 
    ;
    {
      u64 tsf;
      
#line 466 
      u32 *ptsf_low = (u32 *)(& tsf);
      
#line 467 
      u32 *ptsf_high = (u32 *)(& tsf) + 1U;
      
#line 469 
      *ptsf_high = rtl_read_dword(rtlpriv,1380U);
      
#line 470 
      *ptsf_low = rtl_read_dword(rtlpriv,1376U);
      
#line 472 
      *((u64 *)val) = tsf;
      
#line 474 
      goto ldv_56517;
    }
    case 92: 
#line 475 
    ;
    
#line 476 
    if ((unsigned int)ppsc->wo_wlan_mode != 0U) 
#line 477 
                                                *((bool *)val) = (_Bool)1; else 
                                                                    
#line 479 
                                                                    *((bool *)val) = (_Bool)0;
    
#line 480 
    goto ldv_56517;
    default: 
#line 481 
    ;
    
#line 482 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 482 
      ;
      
#line 482 
      tmp_0 = preempt_count();
      
#line 482 
      tmp_1 = preempt_count();
      
#line 482 
      printk("\001","rtl8821ae_get_hw_reg",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,(int)variable);
    }
    else ;
    
#line 484 
    goto ldv_56517;
  }
  ldv_56517: 
#line 486 
  ;
  
#line 487 
  return;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val)
{
  u8 idx;
  
#line 490 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 491 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 492 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 493 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 494 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 495 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 498 
  switch ((int)variable) {
    case 0: 
#line 499 
    ;
    
#line 500 
    idx = (unsigned char)0U;
    
#line 500 
    goto ldv_56550;
    ldv_56549: 
#line 501 
    ;
    
#line 501 
    rtl_write_byte(rtlpriv,(unsigned int)((int)idx + 1552),(unsigned char)((int)*(val + (int)idx)));
    
#line 500 
    idx = (u8)((int)idx + 1);
    ldv_56550: 
#line 501 
    ;
    
#line 500 
    if ((unsigned int)idx <= 5U) 
#line 502 
                                 goto ldv_56549; else 
#line 505 
                                                      goto ldv_56551;
    ldv_56551: 
#line 506 
    ;
    
#line 504 
    goto ldv_56552;
    case 2: 
#line 506 
    ;
    {
      
#line 507 
      u16 b_rate_cfg = *((u16 *)val);
      
#line 508 
      b_rate_cfg = (unsigned short)((unsigned int)b_rate_cfg & 351U);
      
#line 509 
      rtl_write_word(rtlpriv,1088U,(unsigned short)((int)b_rate_cfg));
      
#line 510 
      goto ldv_56552;
    }
    case 3: 
#line 512 
    ;
    
#line 513 
    idx = (unsigned char)0U;
    
#line 513 
    goto ldv_56557;
    ldv_56556: 
#line 514 
    ;
    
#line 514 
    rtl_write_byte(rtlpriv,(unsigned int)((int)idx + 1560),(unsigned char)((int)*(val + (int)idx)));
    
#line 513 
    idx = (u8)((int)idx + 1);
    ldv_56557: 
#line 514 
    ;
    
#line 513 
    if ((unsigned int)idx <= 5U) 
#line 515 
                                 goto ldv_56556; else 
#line 518 
                                                      goto ldv_56558;
    ldv_56558: 
#line 519 
    ;
    
#line 517 
    goto ldv_56552;
    case 14: 
#line 519 
    ;
    
#line 520 
    rtl_write_byte(rtlpriv,1301U,(unsigned char)((int)*val));
    
#line 521 
    rtl_write_byte(rtlpriv,1303U,(unsigned char)((int)*val));
    
#line 523 
    rtl_write_byte(rtlpriv,1065U,(unsigned char)((int)*val));
    
#line 524 
    rtl_write_byte(rtlpriv,1595U,(unsigned char)((int)*val));
    
#line 526 
    rtl_write_byte(rtlpriv,1599U,(unsigned char)((int)*val));
    
#line 527 
    rtl_write_byte(rtlpriv,1598U,(unsigned char)((int)*val));
    
#line 528 
    goto ldv_56552;
    case 15: 
#line 529 
    ;
    
#line 530 
    rtl_write_byte(rtlpriv,1599U,(unsigned char)((int)*val));
    
#line 531 
    goto ldv_56552;
    case 18: 
#line 532 
    ;
    {
      u8 e_aci;
      
#line 535 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 32ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp;
        int tmp_0;
        
#line 535 
        ;
        
#line 535 
        tmp = preempt_count();
        
#line 535 
        tmp_0 = preempt_count();
        
#line 535 
        printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)*val);
      }
      else ;
      
#line 538 
      rtl_write_byte(rtlpriv,1307U,(unsigned char)((int)*val));
      
#line 540 
      e_aci = (unsigned char)0U;
      
#line 540 
      goto ldv_56565;
      ldv_56564: 
#line 541 
      ;
      
#line 541 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)32,& e_aci);
      
#line 540 
      e_aci = (u8)((int)e_aci + 1);
      ldv_56565: 
#line 541 
      ;
      
#line 540 
      if ((unsigned int)e_aci <= 3U) 
#line 542 
                                     goto ldv_56564; else 
#line 545 
                                                          goto ldv_56566;
      ldv_56566: 
#line 546 
      ;
      
#line 545 
      goto ldv_56552;
    }
    case 19: 
#line 546 
    ;
    {
      u8 reg_tmp;
      
#line 548 
      u8 short_preamble = (unsigned char)((unsigned int)*val != 0U);
      
#line 550 
      reg_tmp = rtl_read_byte(rtlpriv,1642U);
      
#line 551 
      if ((unsigned int)short_preamble != 0U) {
        
#line 552 
        reg_tmp = (unsigned char)((unsigned int)reg_tmp | 2U);
        
#line 553 
        rtl_write_byte(rtlpriv,1642U,(unsigned char)((int)reg_tmp));
      }
      else {
        
#line 556 
        reg_tmp = (unsigned char)((unsigned int)reg_tmp & 253U);
        
#line 557 
        rtl_write_byte(rtlpriv,1642U,(unsigned char)((int)reg_tmp));
      }
      
#line 561 
      goto ldv_56552;
    }
    case 27: 
#line 562 
    ;
    
#line 563 
    rtl_write_byte(rtlpriv,1664U,(unsigned char)((int)*val));
    
#line 564 
    goto ldv_56552;
    case 28: 
#line 565 
    ;
    {
      u8 min_spacing_to_set;
      u8 sec_min_space;
      
#line 569 
      min_spacing_to_set = *val;
      
#line 570 
      if ((unsigned int)min_spacing_to_set <= 7U) {
        
#line 571 
        sec_min_space = (unsigned char)0U;
        
#line 573 
        if ((int)min_spacing_to_set < (int)sec_min_space) 
#line 574 
                                                          min_spacing_to_set = sec_min_space; else ;
        
#line 576 
        mac->min_space_cfg = (unsigned char)(((int)mac->min_space_cfg & -8) | (int)min_spacing_to_set);
        
#line 580 
        *val = min_spacing_to_set;
        
#line 582 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 32ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_1;
          int tmp_2;
          
#line 582 
          ;
          
#line 582 
          tmp_1 = preempt_count();
          
#line 582 
          tmp_2 = preempt_count();
          
#line 582 
          printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)mac->min_space_cfg);
        }
        else ;
        
#line 586 
        rtl_write_byte(rtlpriv,1116U,(unsigned char)((int)mac->min_space_cfg));
      }
      else ;
      
#line 589 
      goto ldv_56552;
    }
    case 29: 
#line 590 
    ;
    {
      u8 density_to_set;
      
#line 593 
      density_to_set = *val;
      
#line 594 
      mac->min_space_cfg = (unsigned char)((int)mac->min_space_cfg | ((int)density_to_set << 3));
      
#line 596 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 32ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 596 
        ;
        
#line 596 
        tmp_3 = preempt_count();
        
#line 596 
        tmp_4 = preempt_count();
        
#line 596 
        printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)mac->min_space_cfg);
      }
      else ;
      
#line 600 
      rtl_write_byte(rtlpriv,1116U,(unsigned char)((int)mac->min_space_cfg));
      
#line 603 
      goto ldv_56552;
    }
    case 30: 
#line 604 
    ;
    {
      
#line 605 
      u32 ampdu_len = (unsigned int)*val;
      
#line 607 
      if ((unsigned int)rtlhal->hw_type == 14U) 
        
#line 608 
        if (ampdu_len <= 3U) 
#line 609 
                             ampdu_len = (unsigned int)((8192 << (int)*val) + -1); else 
                                                                    
#line 612 
                                                                    ampdu_len = 131071U;
      else 
        
#line 613 
        if ((unsigned int)rtlhal->hw_type == 13U) 
          
#line 614 
          if (ampdu_len <= 2U) 
#line 615 
                               ampdu_len = (unsigned int)((8192 << (int)*val) + -1); else 
                                                                    
#line 618 
                                                                    ampdu_len = 65535U;
        else ;
      
#line 620 
      ampdu_len |= 2147483648U;
      
#line 622 
      rtl_write_dword(rtlpriv,1112U,ampdu_len);
      
#line 624 
      goto ldv_56552;
    }
    case 32: 
#line 625 
    ;
    {
      
#line 626 
      u8 e_aci_0 = *val;
      
#line 628 
      rtl8821ae_dm_init_edca_turbo(hw);
      
#line 629 
      if (rtlpci->acm_method != (unsigned int)EACMWAY2_SW) 
#line 630 
                                                           (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)33,& e_aci_0); else ;
      
#line 633 
      goto ldv_56552;
    }
    case 33: 
#line 634 
    ;
    {
      
#line 635 
      u8 e_aci_1 = *val;
      
#line 636 
      union aci_aifsn *p_aci_aifsn = (union aci_aifsn *)(& mac->ac[0].aifs);
      
#line 638 
      u8 acm = (unsigned char)p_aci_aifsn->f.acm;
      
#line 639 
      u8 acm_ctrl = rtl_read_byte(rtlpriv,1472U);
      
#line 641 
      acm_ctrl = (unsigned char)((rtlpci->acm_method != (unsigned int)EACMWAY2_SW) | (int)acm_ctrl);
      
#line 644 
      if ((unsigned int)acm != 0U) {
        
#line 645 
        switch ((int)e_aci_1) {
          case 0: 
#line 646 
          ;
          
#line 647 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 2U);
          
#line 648 
          goto ldv_56586;
          case 2: 
#line 649 
          ;
          
#line 650 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 4U);
          
#line 651 
          goto ldv_56586;
          case 3: 
#line 652 
          ;
          
#line 653 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 8U);
          
#line 654 
          goto ldv_56586;
          default: 
#line 655 
          ;
          
#line 656 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
            int tmp_6;
            int tmp_7;
            
#line 656 
            ;
            
#line 656 
            tmp_6 = preempt_count();
            
#line 656 
            tmp_7 = preempt_count();
            
#line 656 
            printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)acm);
          }
          else ;
          
#line 659 
          goto ldv_56586;
        }
        ldv_56586: 
#line 661 
        ;
      }
      else {
        
#line 662 
        switch ((int)e_aci_1) {
          case 0: 
#line 663 
          ;
          
#line 664 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 253U);
          
#line 665 
          goto ldv_56591;
          case 2: 
#line 666 
          ;
          
#line 667 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 251U);
          
#line 668 
          goto ldv_56591;
          case 3: 
#line 669 
          ;
          
#line 670 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 247U);
          
#line 671 
          goto ldv_56591;
          default: 
#line 672 
          ;
          
#line 673 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
            int tmp_8;
            int tmp_9;
            
#line 673 
            tmp_8 = preempt_count();
            
#line 673 
            tmp_9 = preempt_count();
            
#line 673 
            printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
          }
          else ;
          
#line 675 
          goto ldv_56591;
        }
        ldv_56591: 
#line 677 
        ;
      }
      
#line 679 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 33554432ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp_10;
        int tmp_11;
        
#line 679 
        ;
        
#line 679 
        tmp_10 = preempt_count();
        
#line 679 
        tmp_11 = preempt_count();
        
#line 679 
        printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,(int)acm_ctrl);
      }
      else ;
      
#line 682 
      rtl_write_byte(rtlpriv,1472U,(unsigned char)((int)acm_ctrl));
      
#line 683 
      goto ldv_56552;
    }
    case 44: 
#line 684 
    ;
    
#line 685 
    rtl_write_dword(rtlpriv,1544U,*((u32 *)val));
    
#line 686 
    rtlpci->receive_config = *((u32 *)val);
    
#line 687 
    goto ldv_56552;
    case 53: 
#line 688 
    ;
    {
      
#line 689 
      u8 retry_limit = *val;
      
#line 691 
      rtl_write_word(rtlpriv,1066U,(unsigned short)((int)((unsigned short)(((int)retry_limit << 8) | (int)retry_limit))));
      
#line 694 
      goto ldv_56552;
    }
    case 87: 
#line 695 
    ;
    
#line 696 
    rtl_write_byte(rtlpriv,1363U,(unsigned char)3);
    
#line 697 
    goto ldv_56552;
    case 57: 
#line 698 
    ;
    
#line 699 
    rtlefuse->efuse_usedbytes = *((u16 *)val);
    
#line 700 
    goto ldv_56552;
    case 56: 
#line 701 
    ;
    
#line 702 
    rtlefuse->efuse_usedpercentage = *val;
    
#line 703 
    goto ldv_56552;
    case 72: 
#line 704 
    ;
    
#line 705 
    rtl8821ae_phy_set_io_cmd(hw,*((enum io_type *)val));
    
#line 706 
    goto ldv_56552;
    case 60: 
#line 707 
    ;
    {
      u8 rpwm_val;
      
#line 710 
      rpwm_val = rtl_read_byte(rtlpriv,865U);
      
#line 711 
      __const_udelay(4295UL);
      
#line 713 
      if ((int)rpwm_val < 0) 
#line 714 
                             rtl_write_byte(rtlpriv,865U,(unsigned char)((int)*val)); else 
                                                                    
#line 717 
                                                                    rtl_write_byte(rtlpriv,865U,(unsigned char)((int)((unsigned int)*val | 128U)));
      
#line 721 
      goto ldv_56552;
    }
    case 61: 
#line 722 
    ;
    
#line 723 
    rtl8821ae_set_fw_pwrmode_cmd(hw,(unsigned char)((int)*val));
    
#line 724 
    goto ldv_56552;
    case 65: 
#line 725 
    ;
    
#line 726 
    ppsc->fw_current_inpsmode = *((bool *)val);
    
#line 727 
    goto ldv_56552;
    case 66: 
#line 728 
    ;
    
#line 729 
    goto ldv_56552;
    case 67: 
#line 730 
    ;
    
#line 731 
    _rtl8821ae_set_fw_ps_rf_on(hw);
    
#line 732 
    goto ldv_56552;
    case 68: 
#line 733 
    ;
    {
      
#line 734 
      bool b_enter_fwlps = *((bool *)val);
      
#line 736 
      if ((int)b_enter_fwlps != 0) 
#line 737 
                                   _rtl8821ae_fwlps_enter(hw); else 
#line 739 
                                                                    _rtl8821ae_fwlps_leave(hw);
      
#line 740 
      goto ldv_56552;
    }
    case 62: 
#line 741 
    ;
    {
      
#line 742 
      u8 mstatus = *val;
      
#line 744 
      if ((unsigned int)mstatus == 1U) {
        
#line 745 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)82,(u8 *)0U);
        
#line 747 
        _rtl8821ae_download_rsvd_page(hw,(_Bool)0);
      }
      else ;
      
#line 749 
      rtl8821ae_set_fw_media_status_rpt_cmd(hw,(unsigned char)((int)mstatus));
      
#line 751 
      goto ldv_56552;
    }
    case 64: 
#line 752 
    ;
    
#line 753 
    rtl8821ae_set_p2p_ps_offload_cmd(hw,(unsigned char)((int)*val));
    
#line 754 
    goto ldv_56552;
    case 82: 
#line 755 
    ;
    {
      u16 u2btmp;
      
#line 757 
      u2btmp = rtl_read_word(rtlpriv,1704U);
      
#line 758 
      u2btmp = (unsigned short)((unsigned int)u2btmp & 49152U);
      
#line 759 
      rtl_write_word(rtlpriv,1704U,(unsigned short)((int)mac->assoc_id | (int)u2btmp));
      
#line 761 
      goto ldv_56552;
    }
    case 84: 
#line 762 
    ;
    {
      
#line 763 
      u8 btype_ibss = *val;
      
#line 765 
      if ((unsigned int)btype_ibss != 0U) 
#line 766 
                                          _rtl8821ae_stop_tx_beacon(hw); else ;
      
#line 768 
      _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)0,(unsigned char)8);
      
#line 770 
      rtl_write_dword(rtlpriv,1376U,(unsigned int)mac->tsf);
      
#line 772 
      rtl_write_dword(rtlpriv,1380U,(unsigned int)(mac->tsf >> 32));
      
#line 775 
      _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)8,(unsigned char)0);
      
#line 777 
      if ((unsigned int)btype_ibss != 0U) 
#line 778 
                                          _rtl8821ae_resume_tx_beacon(hw); else ;
      
#line 779 
      goto ldv_56552;
    }
    case 95: 
#line 780 
    ;
    {
      
#line 781 
      u32 us_nav_upper = (unsigned int)*val;
      
#line 783 
      if (us_nav_upper > 32640U) {
        
#line 784 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
          int tmp_12;
          int tmp_13;
          
#line 784 
          ;
          
#line 784 
          tmp_12 = preempt_count();
          
#line 784 
          tmp_13 = preempt_count();
          
#line 784 
          printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,us_nav_upper,128);
        }
        else ;
        
#line 787 
        goto ldv_56552;
      }
      else ;
      
#line 789 
      rtl_write_byte(rtlpriv,1618U,(unsigned char)((int)((unsigned char)((us_nav_upper + 127U) / 128U))));
      
#line 793 
      goto ldv_56552;
    }
    case 94: 
#line 794 
    ;
    {
      u8 array[2U];
      
#line 796 
      array[0] = (unsigned char)255U;
      
#line 797 
      array[1] = *val;
      
#line 798 
      rtl8821ae_fill_h2c_cmd(hw,(unsigned char)3,2U,(u8 *)(& array));
      
#line 800 
      goto ldv_56552;
    }
    default: 
#line 801 
    ;
    
#line 802 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_14;
      int tmp_15;
      
#line 802 
      ;
      
#line 802 
      tmp_14 = preempt_count();
      
#line 802 
      tmp_15 = preempt_count();
      
#line 802 
      printk("\001","rtl8821ae_set_hw_reg",(unsigned long)tmp_15 & 2096896UL,tmp_14 != 0,(int)variable);
    }
    else ;
    
#line 804 
    goto ldv_56552;
  }
  ldv_56552: 
#line 806 
  ;
  
#line 807 
  return;
}


#line 808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_llt_write(struct ieee80211_hw *hw, u32 address, u32 data)
{
  
#line 810 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 811 
  bool status = (_Bool)1;
  
#line 812 
  long count = 0L;
  
#line 813 
  u32 value = (((address << 8) & 65535U) | (data & 255U)) | 1073741824U;
  
#line 816 
  rtl_write_dword(rtlpriv,480U,value);
  ldv_56633: 
#line 817 
  ;
  
#line 819 
  value = rtl_read_dword(rtlpriv,480U);
  
#line 820 
  if (value >> 30 == 0U) 
#line 821 
                         goto ldv_56631; else ;
  
#line 823 
  if (count > 20L) {
    
#line 824 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp;
      int tmp_0;
      
#line 824 
      ;
      
#line 824 
      tmp = preempt_count();
      
#line 824 
      tmp_0 = preempt_count();
      
#line 824 
      printk("\001","_rtl8821ae_llt_write",(unsigned long)tmp_0 & 2096896UL,tmp != 0,address);
    }
    else ;
    
#line 827 
    status = (_Bool)0;
    
#line 828 
    goto ldv_56631;
  }
  else ;
  
#line 830 
  count += 1L;
  
#line 830 
  if (count != 0L) 
#line 832 
                   goto ldv_56633; else 
#line 835 
                                        goto ldv_56631;
  ldv_56631: 
#line 836 
  ;
  
#line 832 
  return status;
}


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_llt_table_init(struct ieee80211_hw *hw)
{
  bool __retres;
  unsigned short i;
  u8 txpktbuf_bndy;
  u32 rqpn;
  u8 maxpage;
  bool status;
  
#line 837 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 844 
  maxpage = (unsigned char)255U;
  
#line 845 
  txpktbuf_bndy = (unsigned char)248U;
  
#line 846 
  rqpn = 2162624520U;
  
#line 847 
  if ((unsigned int)rtlpriv->rtlhal.hw_type == 14U) {
    
#line 848 
    txpktbuf_bndy = (unsigned char)250U;
    
#line 849 
    rqpn = 2162755592U;
  }
  else ;
  
#line 852 
  rtl_write_byte(rtlpriv,276U,(unsigned char)((int)txpktbuf_bndy));
  
#line 853 
  rtl_write_word(rtlpriv,278U,(unsigned short)15999);
  
#line 855 
  rtl_write_byte(rtlpriv,521U,(unsigned char)((int)txpktbuf_bndy));
  
#line 857 
  rtl_write_byte(rtlpriv,1060U,(unsigned char)((int)txpktbuf_bndy));
  
#line 858 
  rtl_write_byte(rtlpriv,1061U,(unsigned char)((int)txpktbuf_bndy));
  
#line 860 
  rtl_write_byte(rtlpriv,260U,(unsigned char)49);
  
#line 861 
  rtl_write_byte(rtlpriv,1551U,(unsigned char)4);
  
#line 863 
  i = (unsigned short)0U;
  
#line 863 
  goto ldv_56644;
  ldv_56643: 
#line 864 
  ;
  
#line 864 
  status = _rtl8821ae_llt_write(hw,(unsigned int)i,(unsigned int)((int)i + 1));
  
#line 865 
  if (! status) {
    
#line 866 
    __retres = status;
    
#line 866 
    goto return_label;
  }
  else ;
  
#line 863 
  i = (unsigned short)((int)i + 1);
  ldv_56644: 
#line 864 
  ;
  
#line 863 
  if ((int)i < (int)txpktbuf_bndy + -1) 
#line 865 
                                        goto ldv_56643; else 
#line 868 
                                                             goto ldv_56645;
  ldv_56645: 
#line 869 
  ;
  
#line 869 
  status = _rtl8821ae_llt_write(hw,(unsigned int)((int)txpktbuf_bndy + -1),255U);
  
#line 870 
  if (! status) {
    
#line 871 
    __retres = status;
    
#line 871 
    goto return_label;
  }
  else ;
  
#line 873 
  i = (unsigned short)txpktbuf_bndy;
  
#line 873 
  goto ldv_56647;
  ldv_56646: 
#line 874 
  ;
  
#line 874 
  status = _rtl8821ae_llt_write(hw,(unsigned int)i,(unsigned int)((int)i + 1));
  
#line 875 
  if (! status) {
    
#line 876 
    __retres = status;
    
#line 876 
    goto return_label;
  }
  else ;
  
#line 873 
  i = (unsigned short)((int)i + 1);
  ldv_56647: 
#line 874 
  ;
  
#line 873 
  if ((int)((unsigned short)maxpage) > (int)i) 
#line 875 
                                               goto ldv_56646; else 
#line 878 
                                                                    goto ldv_56648;
  ldv_56648: 
#line 879 
  ;
  
#line 879 
  status = _rtl8821ae_llt_write(hw,(unsigned int)maxpage,(unsigned int)txpktbuf_bndy);
  
#line 880 
  if (! status) {
    
#line 881 
    __retres = status;
    
#line 881 
    goto return_label;
  }
  else ;
  
#line 883 
  rtl_write_dword(rtlpriv,512U,rqpn);
  
#line 885 
  rtl_write_byte(rtlpriv,532U,(unsigned char)0);
  
#line 887 
  __retres = (_Bool)1;
  return_label: 
#line 887 
                return __retres;
}


#line 890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_gen_refresh_led_state(struct ieee80211_hw *hw)
{
  
#line 892 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 893 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 894 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 895 
  struct rtl_led *pled0 = & pcipriv->ledctl.sw_led0;
  
#line 896 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 898 
  if ((int)rtlpriv->rtlhal.up_first_time != 0) 
#line 899 
                                               goto return_label; else ;
  
#line 901 
  if (ppsc->rfoff_reason == 268435456U) 
    
#line 902 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 903 
                                              rtl8812ae_sw_led_on(hw,pled0); else 
                                                                    
#line 905 
                                                                    rtl8821ae_sw_led_on(hw,pled0);
  else 
    
#line 906 
    if (ppsc->rfoff_reason == 0U) 
      
#line 907 
      if ((unsigned int)rtlhal->hw_type == 14U) 
#line 908 
                                                rtl8812ae_sw_led_on(hw,pled0); else 
                                                                    
#line 910 
                                                                    rtl8821ae_sw_led_on(hw,pled0);
    else 
      
#line 912 
      if ((unsigned int)rtlhal->hw_type == 14U) 
#line 913 
                                                rtl8812ae_sw_led_off(hw,pled0); else 
                                                                    
#line 915 
                                                                    rtl8821ae_sw_led_off(hw,pled0);
  return_label: 
#line 916 
                return;
}


#line 918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_init_mac(struct ieee80211_hw *hw)
{
  bool __retres;
  u8 tmp;
  u8 tmp_8;
  
#line 920 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 921 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 922 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 924 
  u8 bytetmp = (unsigned char)0U;
  
#line 925 
  u16 wordtmp = (unsigned short)0U;
  
#line 926 
  bool mac_func_enable = rtlhal->mac_func_enable;
  
#line 928 
  rtl_write_byte(rtlpriv,28U,(unsigned char)0);
  
#line 931 
  tmp = rtl_read_byte(rtlpriv,5U);
  
#line 931 
  bytetmp = (unsigned char)((unsigned int)tmp & 127U);
  
#line 932 
  rtl_write_byte(rtlpriv,5U,(unsigned char)((int)bytetmp));
  
#line 934 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    int tmp_3;
    bool tmp_2;
    
#line 936 
    tmp_2 = rtl_hal_pwrseqcmdparsing(rtlpriv,(unsigned char)255,(unsigned char)15,(unsigned char)4,(struct wlan_pwr_cfg *)(& rtl8812_card_enable_flow));
    
#line 936 
    if (tmp_2) 
#line 936 
               tmp_3 = 0; else 
#line 936 
                               tmp_3 = 1;
    
#line 936 
    if (tmp_3) {
      
#line 939 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_0;
        int tmp_1;
        
#line 939 
        tmp_0 = preempt_count();
        
#line 939 
        tmp_1 = preempt_count();
        
#line 939 
        printk("\001","_rtl8821ae_init_mac",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
      }
      else ;
      
#line 941 
      __retres = (_Bool)0;
      
#line 941 
      goto return_label;
    }
    else ;
  }
  else {
    int tmp_7;
    bool tmp_6;
    
#line 945 
    tmp_6 = rtl_hal_pwrseqcmdparsing(rtlpriv,(unsigned char)2,(unsigned char)15,(unsigned char)4,(struct wlan_pwr_cfg *)(& rtl8821A_card_enable_flow));
    
#line 945 
    if (tmp_6) 
#line 945 
               tmp_7 = 0; else 
#line 945 
                               tmp_7 = 1;
    
#line 945 
    if (tmp_7) {
      
#line 948 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_4;
        int tmp_5;
        
#line 948 
        tmp_4 = preempt_count();
        
#line 948 
        tmp_5 = preempt_count();
        
#line 948 
        printk("\001","_rtl8821ae_init_mac",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
      }
      else ;
      
#line 950 
      __retres = (_Bool)0;
      
#line 950 
      goto return_label;
    }
    else ;
  }
  
#line 954 
  tmp_8 = rtl_read_byte(rtlpriv,4U);
  
#line 954 
  bytetmp = (unsigned char)((unsigned int)tmp_8 | 16U);
  
#line 955 
  rtl_write_byte(rtlpriv,4U,(unsigned char)((int)bytetmp));
  
#line 957 
  bytetmp = rtl_read_byte(rtlpriv,256U);
  
#line 958 
  bytetmp = (unsigned char)255U;
  
#line 959 
  rtl_write_byte(rtlpriv,256U,(unsigned char)((int)bytetmp));
  
#line 960 
  if (1) 
#line 960 
         __const_udelay(8590000UL);
  else {
    
#line 960 
    unsigned long __ms = 2UL;
    {
      unsigned long tmp_9;
      
#line 960 
      goto ldv_56669;
      ldv_56668: 
#line 961 
      ;
      
#line 960 
      __const_udelay(4295000UL);
      ldv_56669: 
#line 962 
      ;
      
#line 960 
      tmp_9 = __ms;
      
#line 960 
      __ms -= 1UL;
      
#line 960 
      ;
      
#line 960 
      if (tmp_9 != 0UL) 
#line 962 
                        goto ldv_56668; else 
#line 965 
                                             goto ldv_56670;
      ldv_56670: 
#line 966 
      ;
    }
  }
  
#line 962 
  bytetmp = (unsigned char)255U;
  
#line 963 
  rtl_write_byte(rtlpriv,1059U,(unsigned char)((int)bytetmp));
  
#line 964 
  if (1) 
#line 964 
         __const_udelay(8590000UL);
  else {
    
#line 964 
    unsigned long __ms_0 = 2UL;
    {
      unsigned long tmp_10;
      
#line 964 
      goto ldv_56673;
      ldv_56672: 
#line 965 
      ;
      
#line 964 
      __const_udelay(4295000UL);
      ldv_56673: 
#line 966 
      ;
      
#line 964 
      tmp_10 = __ms_0;
      
#line 964 
      __ms_0 -= 1UL;
      
#line 964 
      ;
      
#line 964 
      if (tmp_10 != 0UL) 
#line 966 
                         goto ldv_56672; else 
#line 969 
                                              goto ldv_56674;
      ldv_56674: 
#line 970 
      ;
    }
  }
  
#line 966 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 967 
    bytetmp = rtl_read_byte(rtlpriv,243U);
    
#line 968 
    if (((unsigned long)bytetmp & 1UL) != 0UL) {
      
#line 969 
      bytetmp = rtl_read_byte(rtlpriv,124U);
      
#line 970 
      bytetmp = (unsigned char)((unsigned int)bytetmp | 64U);
      
#line 971 
      rtl_write_byte(rtlpriv,124U,(unsigned char)((int)bytetmp));
    }
    else ;
  }
  else ;
  
#line 975 
  bytetmp = rtl_read_byte(rtlpriv,65U);
  
#line 976 
  bytetmp = (unsigned char)((unsigned int)bytetmp & 239U);
  
#line 977 
  rtl_write_byte(rtlpriv,65U,(unsigned char)((int)bytetmp));
  
#line 979 
  rtl_write_word(rtlpriv,256U,(unsigned short)767);
  
#line 981 
  if (! mac_func_enable) {
    int tmp_12;
    bool tmp_11;
    
#line 982 
    tmp_11 = _rtl8821ae_llt_table_init(hw);
    
#line 982 
    if (tmp_11) 
#line 982 
                tmp_12 = 0; else 
#line 982 
                                 tmp_12 = 1;
    
#line 982 
    if (tmp_12) {
      
#line 983 
      __retres = (_Bool)0;
      
#line 983 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 986 
  rtl_write_dword(rtlpriv,180U,4294967295U);
  
#line 987 
  rtl_write_dword(rtlpriv,188U,4294967295U);
  
#line 990 
  bytetmp = rtl_read_byte(rtlpriv,307U);
  
#line 991 
  rtl_write_byte(rtlpriv,307U,(unsigned char)((int)((unsigned int)bytetmp | 64U)));
  
#line 993 
  wordtmp = rtl_read_word(rtlpriv,268U);
  
#line 994 
  wordtmp = (unsigned short)((unsigned int)wordtmp & 15U);
  
#line 995 
  wordtmp = (unsigned short)((unsigned int)wordtmp | 62897U);
  
#line 996 
  rtl_write_word(rtlpriv,268U,(unsigned short)((int)wordtmp));
  
#line 998 
  rtl_write_byte(rtlpriv,1057U,(unsigned char)31);
  
#line 999 
  rtl_write_dword(rtlpriv,1544U,rtlpci->receive_config);
  
#line 1000 
  rtl_write_word(rtlpriv,1700U,(unsigned short)65535);
  
#line 1002 
  rtl_write_dword(rtlpriv,776U,(unsigned int)rtlpci->tx_ring[4].dma);
  
#line 1004 
  rtl_write_dword(rtlpriv,792U,(unsigned int)rtlpci->tx_ring[6].dma);
  
#line 1006 
  rtl_write_dword(rtlpriv,800U,(unsigned int)rtlpci->tx_ring[3].dma);
  
#line 1008 
  rtl_write_dword(rtlpriv,808U,(unsigned int)rtlpci->tx_ring[2].dma);
  
#line 1010 
  rtl_write_dword(rtlpriv,816U,(unsigned int)rtlpci->tx_ring[1].dma);
  
#line 1012 
  rtl_write_dword(rtlpriv,824U,(unsigned int)rtlpci->tx_ring[0].dma);
  
#line 1014 
  rtl_write_dword(rtlpriv,784U,(unsigned int)rtlpci->tx_ring[7].dma);
  
#line 1016 
  rtl_write_dword(rtlpriv,832U,(unsigned int)rtlpci->rx_ring[0].dma);
  
#line 1019 
  rtl_write_byte(rtlpriv,771U,(unsigned char)119);
  
#line 1021 
  rtl_write_dword(rtlpriv,772U,0U);
  
#line 1023 
  rtl_write_dword(rtlpriv,448U,0U);
  
#line 1025 
  rtl_write_byte(rtlpriv,1399U,(unsigned char)3);
  
#line 1026 
  _rtl8821ae_gen_refresh_led_state(hw);
  
#line 1028 
  __retres = (_Bool)1;
  return_label: 
#line 1028 
                return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_hw_configure(struct ieee80211_hw *hw)
{
  u32 reg_rrsr;
  
#line 1033 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1034 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 1037 
  reg_rrsr = 4095U;
  
#line 1039 
  rtl_write_dword(rtlpriv,1088U,reg_rrsr);
  
#line 1041 
  rtl_write_dword(rtlpriv,1096U,4294963200U);
  
#line 1043 
  rtl_write_dword(rtlpriv,1104U,4190208U);
  
#line 1045 
  rtl_write_dword(rtlpriv,1164U,21U);
  
#line 1046 
  rtl_write_dword(rtlpriv,1168U,4190208U);
  
#line 1048 
  rtl_write_dword(rtlpriv,1172U,21U);
  
#line 1049 
  rtl_write_dword(rtlpriv,1176U,4291817472U);
  
#line 1051 
  rtl_write_word(rtlpriv,1056U,(unsigned short)7936);
  
#line 1052 
  rtl_write_byte(rtlpriv,1110U,(unsigned char)112);
  
#line 1055 
  rtl_write_word(rtlpriv,1066U,(unsigned short)1799);
  
#line 1058 
  rtl_write_dword(rtlpriv,1072U,16777216U);
  
#line 1059 
  rtl_write_dword(rtlpriv,1076U,117835012U);
  
#line 1060 
  rtl_write_dword(rtlpriv,1080U,16777216U);
  
#line 1061 
  rtl_write_dword(rtlpriv,1084U,117835012U);
  
#line 1063 
  rtlpci->reg_bcn_ctrl_val = 29U;
  
#line 1064 
  rtl_write_byte(rtlpriv,1360U,(unsigned char)((int)((unsigned char)rtlpci->reg_bcn_ctrl_val)));
  
#line 1067 
  rtl_write_byte(rtlpriv,1345U,(unsigned char)255);
  
#line 1070 
  rtl_write_word(rtlpriv,1350U,(unsigned short)64);
  
#line 1073 
  rtl_write_dword(rtlpriv,1120U,50882150U);
  
#line 1075 
  rtl_write_byte(rtlpriv,1223U,(unsigned char)128);
  
#line 1076 
  rtl_write_byte(rtlpriv,1548U,(unsigned char)32);
  
#line 1077 
  rtl_write_word(rtlpriv,1226U,(unsigned short)7967);
  
#line 1078 
  return;
}


#line 1080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u16 _rtl8821ae_mdio_read(struct rtl_priv *rtlpriv, u8 addr)
{
  u8 tmp_0;
  u8 tmp_1;
  
#line 1082 
  u16 ret = (unsigned short)0U;
  
#line 1083 
  u8 tmp = (unsigned char)0U;
  
#line 1083 
  u8 count = (unsigned char)0U;
  
#line 1085 
  rtl_write_byte(rtlpriv,856U,(unsigned char)((int)((unsigned int)addr | 64U)));
  
#line 1086 
  tmp_0 = rtl_read_byte(rtlpriv,856U);
  
#line 1086 
  tmp = (unsigned char)((unsigned int)tmp_0 & 64U);
  
#line 1087 
  count = (unsigned char)0U;
  
#line 1088 
  goto ldv_56689;
  ldv_56688: 
#line 1089 
  ;
  
#line 1089 
  __const_udelay(42950UL);
  
#line 1090 
  tmp_1 = rtl_read_byte(rtlpriv,856U);
  
#line 1090 
  tmp = (unsigned char)((unsigned int)tmp_1 & 64U);
  
#line 1091 
  count = (u8)((int)count + 1);
  ldv_56689: 
#line 1092 
  ;
  
#line 1088 
  if ((unsigned int)tmp != 0U && (unsigned int)count <= 19U) 
#line 1090 
                                                             goto ldv_56688; else 
                                                                    
#line 1093 
                                                                    goto ldv_56690;
  ldv_56690: 
#line 1094 
  ;
  
#line 1093 
  if ((unsigned int)tmp == 0U) 
#line 1094 
                               ret = rtl_read_word(rtlpriv,854U); else ;
  
#line 1096 
  return ret;
}


#line 1099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_mdio_write(struct rtl_priv *rtlpriv, u8 addr, u16 data)
{
  u8 tmp_0;
  u8 tmp_1;
  
#line 1101 
  u8 tmp = (unsigned char)0U;
  
#line 1101 
  u8 count = (unsigned char)0U;
  
#line 1103 
  rtl_write_word(rtlpriv,852U,(unsigned short)((int)data));
  
#line 1104 
  rtl_write_byte(rtlpriv,856U,(unsigned char)((int)((unsigned int)addr | 32U)));
  
#line 1105 
  tmp_0 = rtl_read_byte(rtlpriv,856U);
  
#line 1105 
  tmp = (unsigned char)((unsigned int)tmp_0 & 32U);
  
#line 1106 
  count = (unsigned char)0U;
  
#line 1107 
  goto ldv_56699;
  ldv_56698: 
#line 1108 
  ;
  
#line 1108 
  __const_udelay(42950UL);
  
#line 1109 
  tmp_1 = rtl_read_byte(rtlpriv,856U);
  
#line 1109 
  tmp = (unsigned char)((unsigned int)tmp_1 & 32U);
  
#line 1110 
  count = (u8)((int)count + 1);
  ldv_56699: 
#line 1111 
  ;
  
#line 1107 
  if ((unsigned int)tmp != 0U && (unsigned int)count <= 19U) 
#line 1109 
                                                             goto ldv_56698; else 
                                                                    
#line 1112 
                                                                    goto ldv_56700;
  ldv_56700: 
#line 1113 
  ;
  
#line 1114 
  return;
}


#line 1114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_dbi_read(struct rtl_priv *rtlpriv, u16 addr)
{
  
#line 1116 
  u16 read_addr = (unsigned short)((unsigned int)addr & 65532U);
  
#line 1117 
  u8 tmp = (unsigned char)0U;
  
#line 1117 
  u8 count = (unsigned char)0U;
  
#line 1117 
  u8 ret = (unsigned char)0U;
  
#line 1119 
  rtl_write_word(rtlpriv,848U,(unsigned short)((int)read_addr));
  
#line 1120 
  rtl_write_byte(rtlpriv,850U,(unsigned char)2);
  
#line 1121 
  tmp = rtl_read_byte(rtlpriv,850U);
  
#line 1122 
  count = (unsigned char)0U;
  
#line 1123 
  goto ldv_56710;
  ldv_56709: 
#line 1124 
  ;
  
#line 1124 
  __const_udelay(42950UL);
  
#line 1125 
  tmp = rtl_read_byte(rtlpriv,850U);
  
#line 1126 
  count = (u8)((int)count + 1);
  ldv_56710: 
#line 1127 
  ;
  
#line 1123 
  if ((unsigned int)tmp != 0U && (unsigned int)count <= 19U) 
#line 1125 
                                                             goto ldv_56709; else 
                                                                    
#line 1128 
                                                                    goto ldv_56711;
  ldv_56711: 
#line 1129 
  ;
  
#line 1128 
  if ((unsigned int)tmp == 0U) {
    u16 tmp_0;
    
#line 1129 
    read_addr = (unsigned short)(((unsigned int)addr & 3U) + 844U);
    
#line 1130 
    tmp_0 = rtl_read_word(rtlpriv,(unsigned int)read_addr);
    
#line 1130 
    ret = (unsigned char)tmp_0;
  }
  else ;
  
#line 1132 
  return ret;
}


#line 1135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_dbi_write(struct rtl_priv *rtlpriv, u16 addr, u8 data)
{
  u16 wrtie_addr;
  
#line 1137 
  u8 tmp = (unsigned char)0U;
  
#line 1137 
  u8 count = (unsigned char)0U;
  
#line 1138 
  u16 remainder = (unsigned short)((unsigned int)addr & 3U);
  
#line 1140 
  wrtie_addr = (unsigned short)((unsigned int)remainder + 840U);
  
#line 1141 
  rtl_write_byte(rtlpriv,(unsigned int)wrtie_addr,(unsigned char)((int)data));
  
#line 1143 
  wrtie_addr = (unsigned short)(((unsigned int)addr & 65532U) | (unsigned int)((unsigned short)(1UL << ((int)remainder + 12))));
  
#line 1144 
  rtl_write_word(rtlpriv,848U,(unsigned short)((int)wrtie_addr));
  
#line 1146 
  rtl_write_byte(rtlpriv,850U,(unsigned char)1);
  
#line 1148 
  tmp = rtl_read_byte(rtlpriv,850U);
  
#line 1149 
  count = (unsigned char)0U;
  
#line 1150 
  goto ldv_56722;
  ldv_56721: 
#line 1151 
  ;
  
#line 1151 
  __const_udelay(42950UL);
  
#line 1152 
  tmp = rtl_read_byte(rtlpriv,850U);
  
#line 1153 
  count = (u8)((int)count + 1);
  ldv_56722: 
#line 1154 
  ;
  
#line 1150 
  if ((unsigned int)tmp != 0U && (unsigned int)count <= 19U) 
#line 1152 
                                                             goto ldv_56721; else 
                                                                    
#line 1155 
                                                                    goto ldv_56723;
  ldv_56723: 
#line 1156 
  ;
  
#line 1157 
  return;
}


#line 1157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_enable_aspm_back_door(struct ieee80211_hw *hw)
{
  u8 tmp;
  
#line 1159 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1160 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1163 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    u16 tmp_0;
    u16 tmp_1;
    
#line 1164 
    tmp_0 = _rtl8821ae_mdio_read(rtlpriv,(unsigned char)4);
    
#line 1164 
    if ((unsigned int)tmp_0 != 34116U) 
#line 1165 
                                       _rtl8821ae_mdio_write(rtlpriv,(unsigned char)4,(unsigned short)34116); else ;
    
#line 1167 
    tmp_1 = _rtl8821ae_mdio_read(rtlpriv,(unsigned char)11);
    
#line 1167 
    if ((unsigned int)tmp_1 != 112U) 
#line 1168 
                                     _rtl8821ae_mdio_write(rtlpriv,(unsigned char)11,(unsigned short)112); else ;
  }
  else ;
  
#line 1171 
  tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)1807);
  
#line 1172 
  _rtl8821ae_dbi_write(rtlpriv,(unsigned short)1807,(unsigned char)((int)((unsigned int)tmp | 128U)));
  
#line 1174 
  tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)1817);
  
#line 1175 
  _rtl8821ae_dbi_write(rtlpriv,(unsigned short)1817,(unsigned char)((int)((unsigned int)tmp | 24U)));
  
#line 1177 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 1178 
    tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)1816);
    
#line 1179 
    _rtl8821ae_dbi_write(rtlpriv,(unsigned short)1816,(unsigned char)((int)((unsigned int)tmp | 16U)));
  }
  else ;
  
#line 1181 
  return;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_enable_hw_security_config(struct ieee80211_hw *hw)
{
  u8 sec_reg_value;
  u8 tmp;
  
#line 1185 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1189 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 1189 
    ;
    
#line 1189 
    ;
    
#line 1189 
    tmp_0 = preempt_count();
    
#line 1189 
    tmp_1 = preempt_count();
    
#line 1189 
    printk("\001","rtl8821ae_enable_hw_security_config",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,(unsigned int)rtlpriv->sec.pairwise_enc_algorithm,(unsigned int)rtlpriv->sec.group_enc_algorithm);
  }
  else ;
  
#line 1194 
  if ((int)((rtlpriv->cfg)->mod_params)->sw_crypto != 0 || (int)rtlpriv->sec.use_sw_sec != 0) {
    
#line 1195 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1195 
      tmp_2 = preempt_count();
      
#line 1195 
      tmp_3 = preempt_count();
      
#line 1195 
      printk("\001","rtl8821ae_enable_hw_security_config",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
    
#line 1197 
    goto return_label;
  }
  else ;
  
#line 1200 
  sec_reg_value = (unsigned char)12U;
  
#line 1202 
  if ((int)rtlpriv->sec.use_defaultkey != 0) {
    
#line 1203 
    sec_reg_value = (unsigned char)((unsigned int)sec_reg_value | 1U);
    
#line 1204 
    sec_reg_value = (unsigned char)((unsigned int)sec_reg_value | 2U);
  }
  else ;
  
#line 1207 
  sec_reg_value = (unsigned char)((unsigned int)sec_reg_value | 192U);
  
#line 1209 
  tmp = rtl_read_byte(rtlpriv,257U);
  
#line 1210 
  rtl_write_byte(rtlpriv,257U,(unsigned char)((int)((unsigned int)tmp | 2U)));
  
#line 1212 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp_4;
    int tmp_5;
    
#line 1212 
    ;
    
#line 1212 
    tmp_4 = preempt_count();
    
#line 1212 
    tmp_5 = preempt_count();
    
#line 1212 
    printk("\001","rtl8821ae_enable_hw_security_config",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)sec_reg_value);
  }
  else ;
  
#line 1215 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)27,& sec_reg_value);
  return_label: 
#line 1216 
                return;
}


#line 1225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void rtl8821ae_macid_initialize_mediastatus(struct ieee80211_hw *hw)
{
  
#line 1227 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1228 
  u8 media_rpt[4U] = {(unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)3U};
  
#line 1232 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)63,(u8 *)(& media_rpt));
  
#line 1235 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1235 
    tmp = preempt_count();
    
#line 1235 
    tmp_0 = preempt_count();
    
#line 1235 
    printk("\001","rtl8821ae_macid_initialize_mediastatus",(unsigned long)tmp_0 & 2096896UL,tmp != 0,1,3);
  }
  else ;
  
#line 1236 
  return;
}


#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_check_pcie_dma_hang(struct ieee80211_hw *hw)
{
  bool __retres;
  u8 tmp;
  
#line 1243 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1247 
  tmp = rtl_read_byte(rtlpriv,851U);
  
#line 1248 
  if (((unsigned long)tmp & 4UL) == 0UL) {
    
#line 1249 
    rtl_write_byte(rtlpriv,851U,(unsigned char)((int)((unsigned int)tmp | 4U)));
    {
      
#line 1250 
      unsigned long __ms = 100UL;
      {
        unsigned long tmp_0;
        
#line 1250 
        goto ldv_56750;
        ldv_56749: 
#line 1251 
        ;
        
#line 1250 
        __const_udelay(4295000UL);
        ldv_56750: 
#line 1252 
        ;
        
#line 1250 
        tmp_0 = __ms;
        
#line 1250 
        __ms -= 1UL;
        
#line 1250 
        ;
        
#line 1250 
        if (tmp_0 != 0UL) 
#line 1252 
                          goto ldv_56749; else 
#line 1255 
                                               goto ldv_56751;
        ldv_56751: 
#line 1256 
        ;
      }
    }
  }
  else ;
  
#line 1255 
  tmp = rtl_read_byte(rtlpriv,851U);
  
#line 1256 
  if (((unsigned long)tmp & 1UL) != 0UL || ((unsigned long)tmp & 2UL) != 0UL) {
    
#line 1257 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1257 
      tmp_1 = preempt_count();
      
#line 1257 
      tmp_2 = preempt_count();
      
#line 1257 
      printk("\001","_rtl8821ae_check_pcie_dma_hang",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1259 
    __retres = (_Bool)1;
    
#line 1259 
    goto return_label;
  }
  else {
    
#line 1261 
    __retres = (_Bool)0;
    
#line 1261 
    goto return_label;
  }
  return_label: 
#line 1256 
                return __retres;
}


#line 1265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_reset_pcie_interface_dma(struct ieee80211_hw *hw, bool mac_power_on, bool in_watchdog)
{
  bool __retres;
  u8 tmp;
  bool release_mac_rx_pause;
  u8 backup_pcie_dma_pause;
  
#line 1269 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1270 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1275 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 1275 
    tmp_0 = preempt_count();
    
#line 1275 
    tmp_1 = preempt_count();
    
#line 1275 
    printk("\001","_rtl8821ae_reset_pcie_interface_dma",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
  }
  else ;
  
#line 1278 
  tmp = rtl_read_byte(rtlpriv,28U);
  
#line 1279 
  tmp = (unsigned char)((unsigned int)tmp & 253U);
  
#line 1280 
  rtl_write_byte(rtlpriv,28U,(unsigned char)((int)tmp));
  
#line 1281 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 1283 
    tmp = rtl_read_byte(rtlpriv,204U);
    
#line 1284 
    tmp = (unsigned char)((unsigned int)tmp | 4U);
    
#line 1285 
    rtl_write_byte(rtlpriv,204U,(unsigned char)((int)tmp));
  }
  else ;
  
#line 1291 
  tmp = rtl_read_byte(rtlpriv,646U);
  
#line 1292 
  if (((unsigned long)tmp & 4UL) != 0UL) 
#line 1294 
                                         release_mac_rx_pause = (_Bool)0;
  else {
    
#line 1296 
    rtl_write_byte(rtlpriv,646U,(unsigned char)((int)((unsigned int)tmp | 4U)));
    
#line 1297 
    release_mac_rx_pause = (_Bool)1;
  }
  
#line 1299 
  backup_pcie_dma_pause = rtl_read_byte(rtlpriv,769U);
  
#line 1300 
  if ((unsigned int)backup_pcie_dma_pause != 255U) 
#line 1301 
                                                   rtl_write_byte(rtlpriv,769U,(unsigned char)255); else ;
  
#line 1303 
  if ((int)mac_power_on != 0) 
#line 1306 
                              rtl_write_byte(rtlpriv,256U,(unsigned char)0); else ;
  
#line 1310 
  tmp = rtl_read_byte(rtlpriv,3U);
  
#line 1311 
  tmp = (unsigned char)((unsigned int)tmp & 254U);
  
#line 1312 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmp));
  
#line 1315 
  tmp = rtl_read_byte(rtlpriv,3U);
  
#line 1316 
  tmp = (unsigned char)((unsigned int)tmp | 1U);
  
#line 1317 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmp));
  
#line 1319 
  if ((int)mac_power_on != 0) 
#line 1322 
                              rtl_write_byte(rtlpriv,256U,(unsigned char)255); else ;
  
#line 1331 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 1333 
    tmp = rtl_read_byte(rtlpriv,250U);
    
#line 1334 
    tmp = (unsigned char)((unsigned int)tmp | 2U);
    
#line 1335 
    rtl_write_byte(rtlpriv,250U,(unsigned char)((int)tmp));
  }
  else ;
  
#line 1342 
  if (! mac_power_on) {
    
#line 1346 
    if ((int)release_mac_rx_pause != 0) {
      
#line 1347 
      tmp = rtl_read_byte(rtlpriv,646U);
      
#line 1348 
      rtl_write_byte(rtlpriv,646U,(unsigned char)((int)tmp & 251));
    }
    else ;
    
#line 1351 
    rtl_write_byte(rtlpriv,769U,(unsigned char)((int)backup_pcie_dma_pause));
  }
  else ;
  
#line 1355 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 1358 
    tmp = rtl_read_byte(rtlpriv,204U);
    
#line 1359 
    tmp = (unsigned char)((unsigned int)tmp & 251U);
    
#line 1360 
    rtl_write_byte(rtlpriv,204U,(unsigned char)((int)tmp));
  }
  else ;
  
#line 1362 
  __retres = (_Bool)1;
  
#line 1362 
  return __retres;
}


#line 1365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_get_wakeup_reason(struct ieee80211_hw *hw)
{
  struct timeval ts;
  
#line 1367 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1368 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1369 
  struct rtl_ps_ctl *ppsc = & rtlpriv->psc;
  
#line 1370 
  u8 fw_reason = (unsigned char)0U;
  
#line 1373 
  fw_reason = rtl_read_byte(rtlpriv,455U);
  
#line 1375 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1375 
    ;
    
#line 1375 
    tmp = preempt_count();
    
#line 1375 
    tmp_0 = preempt_count();
    
#line 1375 
    printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)fw_reason);
  }
  else ;
  
#line 1378 
  ppsc->wakeup_reason = 0U;
  
#line 1380 
  rtlhal->last_suspend_sec = ts.tv_sec;
  
#line 1382 
  switch ((int)fw_reason) {
    case 1: 
#line 1383 
    ;
    
#line 1384 
    ppsc->wakeup_reason = 1U;
    
#line 1385 
    do_gettimeofday(& ts);
    
#line 1386 
    ppsc->last_wakeup_time = (unsigned long long)(ts.tv_sec * 1000L + ts.tv_usec / 1000L);
    
#line 1387 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1387 
      tmp_1 = preempt_count();
      
#line 1387 
      tmp_2 = preempt_count();
      
#line 1387 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1389 
    goto ldv_56774;
    case 2: 
#line 1390 
    ;
    
#line 1391 
    ppsc->wakeup_reason = 2U;
    
#line 1392 
    do_gettimeofday(& ts);
    
#line 1393 
    ppsc->last_wakeup_time = (unsigned long long)(ts.tv_sec * 1000L + ts.tv_usec / 1000L);
    
#line 1394 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 1394 
      tmp_3 = preempt_count();
      
#line 1394 
      tmp_4 = preempt_count();
      
#line 1394 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 1396 
    goto ldv_56774;
    case 4: 
#line 1397 
    ;
    
#line 1398 
    ppsc->wakeup_reason = 4U;
    
#line 1399 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 1399 
      tmp_5 = preempt_count();
      
#line 1399 
      tmp_6 = preempt_count();
      
#line 1399 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 1401 
    goto ldv_56774;
    case 8: 
#line 1402 
    ;
    
#line 1403 
    ppsc->wakeup_reason = 8U;
    
#line 1404 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 1404 
      tmp_7 = preempt_count();
      
#line 1404 
      tmp_8 = preempt_count();
      
#line 1404 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 1406 
    goto ldv_56774;
    case 16: 
#line 1407 
    ;
    
#line 1408 
    ppsc->wakeup_reason = 16U;
    
#line 1409 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 1409 
      tmp_9 = preempt_count();
      
#line 1409 
      tmp_10 = preempt_count();
      
#line 1409 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
    }
    else ;
    
#line 1411 
    goto ldv_56774;
    case 33: 
#line 1412 
    ;
    
#line 1413 
    ppsc->wakeup_reason = 32U;
    
#line 1414 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_11;
      int tmp_12;
      
#line 1414 
      tmp_11 = preempt_count();
      
#line 1414 
      tmp_12 = preempt_count();
      
#line 1414 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
    }
    else ;
    
#line 1416 
    goto ldv_56774;
    case 34: 
#line 1417 
    ;
    
#line 1418 
    ppsc->wakeup_reason = 64U;
    
#line 1419 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_13;
      int tmp_14;
      
#line 1419 
      tmp_13 = preempt_count();
      
#line 1419 
      tmp_14 = preempt_count();
      
#line 1419 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0);
    }
    else ;
    
#line 1421 
    goto ldv_56774;
    case 35: 
#line 1422 
    ;
    
#line 1423 
    ppsc->wakeup_reason = 128U;
    
#line 1424 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_15;
      int tmp_16;
      
#line 1424 
      tmp_15 = preempt_count();
      
#line 1424 
      tmp_16 = preempt_count();
      
#line 1424 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0);
    }
    else ;
    
#line 1426 
    goto ldv_56774;
    case 36: 
#line 1427 
    ;
    
#line 1428 
    ppsc->wakeup_reason = 256U;
    
#line 1429 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_17;
      int tmp_18;
      
#line 1429 
      tmp_17 = preempt_count();
      
#line 1429 
      tmp_18 = preempt_count();
      
#line 1429 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0);
    }
    else ;
    
#line 1431 
    goto ldv_56774;
    case 48: 
#line 1432 
    ;
    
#line 1433 
    ppsc->wakeup_reason = 512U;
    
#line 1434 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_19;
      int tmp_20;
      
#line 1434 
      tmp_19 = preempt_count();
      
#line 1434 
      tmp_20 = preempt_count();
      
#line 1434 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0);
    }
    else ;
    
#line 1436 
    goto ldv_56774;
    case 49: 
#line 1437 
    ;
    
#line 1438 
    ppsc->wakeup_reason = 1024U;
    
#line 1439 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_21;
      int tmp_22;
      
#line 1439 
      tmp_21 = preempt_count();
      
#line 1439 
      tmp_22 = preempt_count();
      
#line 1439 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0);
    }
    else ;
    
#line 1441 
    goto ldv_56774;
    default: 
#line 1442 
    ;
    
#line 1443 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_23;
      int tmp_24;
      
#line 1443 
      ;
      
#line 1443 
      tmp_23 = preempt_count();
      
#line 1443 
      tmp_24 = preempt_count();
      
#line 1443 
      printk("\001","_rtl8821ae_get_wakeup_reason",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0,(int)fw_reason);
    }
    else ;
    
#line 1446 
    goto ldv_56774;
  }
  ldv_56774: 
#line 1448 
  ;
  
#line 1449 
  return;
}


#line 1450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_init_trx_desc_hw_address(struct ieee80211_hw *hw)
{
  
#line 1452 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1453 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 1456 
  rtl_write_dword(rtlpriv,776U,(unsigned int)rtlpci->tx_ring[4].dma);
  
#line 1458 
  rtl_write_dword(rtlpriv,792U,(unsigned int)rtlpci->tx_ring[6].dma);
  
#line 1460 
  rtl_write_dword(rtlpriv,800U,(unsigned int)rtlpci->tx_ring[3].dma);
  
#line 1462 
  rtl_write_dword(rtlpriv,808U,(unsigned int)rtlpci->tx_ring[2].dma);
  
#line 1464 
  rtl_write_dword(rtlpriv,816U,(unsigned int)rtlpci->tx_ring[1].dma);
  
#line 1466 
  rtl_write_dword(rtlpriv,824U,(unsigned int)rtlpci->tx_ring[0].dma);
  
#line 1468 
  rtl_write_dword(rtlpriv,784U,(unsigned int)rtlpci->tx_ring[7].dma);
  
#line 1470 
  rtl_write_dword(rtlpriv,832U,(unsigned int)rtlpci->rx_ring[0].dma);
  
#line 1472 
  return;
}


#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_init_llt_table(struct ieee80211_hw *hw, u32 boundary)
{
  bool __retres;
  u32 i;
  
#line 1476 
  bool status = (_Bool)1;
  
#line 1478 
  u32 txpktbuf_bndy = boundary;
  
#line 1479 
  u32 last_entry_of_txpktbuf = 255U;
  
#line 1481 
  i = 0U;
  
#line 1481 
  goto ldv_56800;
  ldv_56799: 
#line 1482 
  ;
  
#line 1482 
  status = _rtl8821ae_llt_write(hw,i,i + 1U);
  
#line 1483 
  if (! status) {
    
#line 1484 
    __retres = status;
    
#line 1484 
    goto return_label;
  }
  else ;
  
#line 1481 
  i += 1U;
  ldv_56800: 
#line 1482 
  ;
  
#line 1481 
  if (txpktbuf_bndy + 4294967295U > i) 
#line 1483 
                                       goto ldv_56799; else 
#line 1486 
                                                            goto ldv_56801;
  ldv_56801: 
#line 1487 
  ;
  
#line 1487 
  status = _rtl8821ae_llt_write(hw,txpktbuf_bndy + 4294967295U,255U);
  
#line 1488 
  if (! status) {
    
#line 1489 
    __retres = status;
    
#line 1489 
    goto return_label;
  }
  else ;
  
#line 1491 
  i = txpktbuf_bndy;
  
#line 1491 
  goto ldv_56803;
  ldv_56802: 
#line 1492 
  ;
  
#line 1492 
  status = _rtl8821ae_llt_write(hw,i,i + 1U);
  
#line 1493 
  if (! status) {
    
#line 1494 
    __retres = status;
    
#line 1494 
    goto return_label;
  }
  else ;
  
#line 1491 
  i += 1U;
  ldv_56803: 
#line 1492 
  ;
  
#line 1491 
  if (i < last_entry_of_txpktbuf) 
#line 1493 
                                  goto ldv_56802; else 
#line 1496 
                                                       goto ldv_56804;
  ldv_56804: 
#line 1497 
  ;
  
#line 1497 
  status = _rtl8821ae_llt_write(hw,last_entry_of_txpktbuf,txpktbuf_bndy);
  
#line 1499 
  if (! status) {
    
#line 1500 
    __retres = status;
    
#line 1500 
    goto return_label;
  }
  else ;
  
#line 1502 
  __retres = status;
  return_label: 
#line 1502 
                return __retres;
}


#line 1505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_dynamic_rqpn(struct ieee80211_hw *hw, u32 boundary, u16 npq_rqpn_value, u32 rqpn_val)
{
  bool __retres;
  u8 tmp;
  u16 tmp16;
  bool support_remote_wakeup;
  u8 tmp_8;
  int tmp_14;
  bool tmp_13;
  
#line 1508 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1510 
  bool ret = (_Bool)1;
  
#line 1511 
  u16 count = (unsigned short)0U;
  
#line 1514 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)92,(u8 *)(& support_remote_wakeup));
  
#line 1517 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 1517 
    ;
    
#line 1517 
    ;
    
#line 1517 
    ;
    
#line 1517 
    tmp_0 = preempt_count();
    
#line 1517 
    tmp_1 = preempt_count();
    
#line 1517 
    printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,boundary,(int)npq_rqpn_value,rqpn_val);
  }
  else ;
  
#line 1523 
  rtl_write_byte(rtlpriv,769U,(unsigned char)254);
  
#line 1527 
  tmp16 = rtl_read_word(rtlpriv,1050U);
  
#line 1528 
  goto ldv_56820;
  ldv_56819: 
#line 1529 
  ;
  
#line 1529 
  __const_udelay(429500UL);
  
#line 1530 
  tmp16 = rtl_read_word(rtlpriv,1050U);
  
#line 1531 
  count = (u16)((int)count + 1);
  
#line 1532 
  if ((unsigned int)count % 200U == 0U) {
    
#line 1533 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1533 
      tmp_2 = preempt_count();
      
#line 1533 
      tmp_3 = preempt_count();
      
#line 1533 
      printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
  }
  else ;
  
#line 1536 
  if ((unsigned int)count > 999U) {
    
#line 1537 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 1537 
      tmp_4 = preempt_count();
      
#line 1537 
      tmp_5 = preempt_count();
      
#line 1537 
      printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
    }
    else ;
    
#line 1539 
    goto ldv_56818;
  }
  else ;
  ldv_56820: 
#line 1541 
  ;
  
#line 1528 
  if (((int)tmp16 & 2047) != 2047) 
#line 1530 
                                   goto ldv_56819; else 
#line 1533 
                                                        goto ldv_56818;
  ldv_56818: 
#line 1534 
  ;
  
#line 1545 
  rtl_write_byte(rtlpriv,1314U,(unsigned char)255);
  
#line 1549 
  count = (unsigned short)0U;
  
#line 1550 
  goto ldv_56823;
  ldv_56822: 
#line 1551 
  ;
  
#line 1551 
  __const_udelay(429500UL);
  
#line 1552 
  count = (u16)((int)count + 1);
  
#line 1553 
  if ((unsigned int)count > 499U) {
    
#line 1554 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 1554 
      tmp_6 = preempt_count();
      
#line 1554 
      tmp_7 = preempt_count();
      
#line 1554 
      printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0);
    }
    else ;
    
#line 1556 
    goto ldv_56821;
  }
  else ;
  ldv_56823: 
#line 1558 
  ;
  
#line 1550 
  tmp_8 = rtl_read_byte(rtlpriv,1528U);
  
#line 1550 
  if ((unsigned int)tmp_8 != 0U) 
#line 1552 
                                 goto ldv_56822; else 
#line 1555 
                                                      goto ldv_56821;
  ldv_56821: 
#line 1556 
  ;
  
#line 1564 
  count = (unsigned short)0U;
  
#line 1565 
  tmp = rtl_read_byte(rtlpriv,646U);
  
#line 1566 
  rtl_write_byte(rtlpriv,646U,(unsigned char)((int)((unsigned int)tmp | 4U)));
  ldv_56824: 
#line 1567 
  ;
  
#line 1568 
  tmp = rtl_read_byte(rtlpriv,646U);
  
#line 1569 
  __const_udelay(42950UL);
  
#line 1570 
  count = (u16)((int)count + 1);
  
#line 1571 
  if (((unsigned long)tmp & 2UL) == 0UL && (unsigned int)count <= 99U) 
    
#line 1573 
    goto ldv_56824; else 
#line 1576 
                         goto ldv_56825;
  ldv_56825: 
#line 1577 
  ;
  
#line 1573 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_9;
    int tmp_10;
    
#line 1573 
    ;
    
#line 1573 
    ;
    
#line 1573 
    tmp_9 = preempt_count();
    
#line 1573 
    tmp_10 = preempt_count();
    
#line 1573 
    printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0,(int)count,(int)tmp);
  }
  else ;
  
#line 1579 
  tmp = rtl_read_byte(rtlpriv,2U);
  
#line 1580 
  tmp = (unsigned char)((unsigned int)tmp & 254U);
  
#line 1581 
  rtl_write_byte(rtlpriv,2U,(unsigned char)((int)tmp));
  
#line 1586 
  rtl_write_byte(rtlpriv,256U,(unsigned char)0);
  
#line 1587 
  __const_udelay(4295000UL);
  
#line 1591 
  tmp = rtl_read_byte(rtlpriv,257U);
  
#line 1592 
  tmp = (unsigned char)((unsigned int)tmp & 253U);
  
#line 1593 
  rtl_write_byte(rtlpriv,257U,(unsigned char)((int)tmp));
  
#line 1597 
  tmp = rtl_read_byte(rtlpriv,1363U);
  
#line 1598 
  rtl_write_byte(rtlpriv,1363U,(unsigned char)((int)((unsigned int)tmp | 32U)));
  
#line 1602 
  tmp = rtl_read_byte(rtlpriv,257U);
  
#line 1603 
  rtl_write_byte(rtlpriv,257U,(unsigned char)((int)((unsigned int)tmp | 2U)));
  
#line 1608 
  rtl_write_byte(rtlpriv,256U,(unsigned char)255);
  
#line 1609 
  __const_udelay(4295000UL);
  
#line 1613 
  tmp = rtl_read_byte(rtlpriv,2U);
  
#line 1614 
  rtl_write_byte(rtlpriv,2U,(unsigned char)((int)((unsigned int)tmp | 1U)));
  
#line 1618 
  rtl_write_byte(rtlpriv,521U,(unsigned char)((int)((unsigned char)boundary)));
  
#line 1619 
  rtl_write_byte(rtlpriv,1060U,(unsigned char)((int)((unsigned char)boundary)));
  
#line 1620 
  rtl_write_byte(rtlpriv,1061U,(unsigned char)((int)((unsigned char)boundary)));
  
#line 1624 
  rtl_write_byte(rtlpriv,1117U,(unsigned char)((int)((unsigned char)boundary)));
  
#line 1627 
  rtl_write_word(rtlpriv,276U,(unsigned short)((int)((unsigned short)boundary)));
  
#line 1631 
  tmp_13 = _rtl8821ae_init_llt_table(hw,boundary);
  
#line 1631 
  if (tmp_13) 
#line 1631 
              tmp_14 = 0; else 
#line 1631 
                               tmp_14 = 1;
  
#line 1631 
  if (tmp_14) {
    
#line 1632 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_11;
      int tmp_12;
      
#line 1632 
      tmp_11 = preempt_count();
      
#line 1632 
      tmp_12 = preempt_count();
      
#line 1632 
      printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
    }
    else ;
    
#line 1634 
    __retres = (_Bool)0;
    
#line 1634 
    goto return_label;
  }
  else ;
  
#line 1639 
  rtl_write_word(rtlpriv,532U,(unsigned short)((int)npq_rqpn_value));
  
#line 1640 
  rtl_write_dword(rtlpriv,512U,rqpn_val);
  
#line 1644 
  rtl_write_byte(rtlpriv,1314U,(unsigned char)0);
  
#line 1649 
  rtl_write_byte(rtlpriv,769U,(unsigned char)0);
  
#line 1650 
  tmp = rtl_read_byte(rtlpriv,646U);
  
#line 1651 
  rtl_write_byte(rtlpriv,646U,(unsigned char)((int)tmp & 251));
  
#line 1653 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_15;
    int tmp_16;
    
#line 1653 
    tmp_15 = preempt_count();
    
#line 1653 
    tmp_16 = preempt_count();
    
#line 1653 
    printk("\001","_rtl8821ae_dynamic_rqpn",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0);
  }
  else ;
  
#line 1654 
  __retres = ret;
  return_label: 
#line 1654 
                return __retres;
}


#line 1657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_simple_initialize_adapter(struct ieee80211_hw *hw)
{
  
#line 1659 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1660 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1661 
  struct rtl_ps_ctl *ppsc = & rtlpriv->psc;
  
#line 1665 
  rtl8821ae_set_fw_related_for_wowlan(hw,(_Bool)0);
  
#line 1669 
  if ((int)rtlhal->re_init_llt_table != 0) {
    bool tmp;
    
#line 1670 
    u32 rqpn = 2162624520U;
    
#line 1671 
    u8 rqpn_npq = (unsigned char)0U;
    
#line 1671 
    u8 boundary = (unsigned char)248U;
    
#line 1672 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 1673 
      rqpn = 2162755592U;
      
#line 1674 
      boundary = (unsigned char)250U;
    }
    else ;
    
#line 1676 
    tmp = _rtl8821ae_dynamic_rqpn(hw,(unsigned int)boundary,(unsigned short)((int)rqpn_npq),rqpn);
    
#line 1676 
    if ((int)tmp != 0) 
#line 1677 
                       rtlhal->re_init_llt_table = (_Bool)0; else ;
  }
  else ;
  
#line 1680 
  ppsc->rfpwr_state = ERFON;
  
#line 1681 
  return;
}


#line 1683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_enable_l1off(struct ieee80211_hw *hw)
{
  u16 tmp_4;
  
#line 1685 
  u8 tmp = (unsigned char)0U;
  
#line 1686 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1688 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 1688 
    tmp_0 = preempt_count();
    
#line 1688 
    tmp_1 = preempt_count();
    
#line 1688 
    printk("\001","_rtl8821ae_enable_l1off",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
  }
  else ;
  
#line 1690 
  tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)352);
  
#line 1691 
  if (((unsigned long)tmp & 12UL) == 0UL) {
    
#line 1692 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65540ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1692 
      ;
      
#line 1692 
      tmp_2 = preempt_count();
      
#line 1692 
      tmp_3 = preempt_count();
      
#line 1692 
      printk("\001","_rtl8821ae_enable_l1off",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)tmp);
    }
    else ;
    
#line 1694 
    goto return_label;
  }
  else ;
  
#line 1697 
  tmp_4 = _rtl8821ae_mdio_read(rtlpriv,(unsigned char)27);
  
#line 1697 
  tmp = (unsigned char)tmp_4;
  
#line 1698 
  _rtl8821ae_mdio_write(rtlpriv,(unsigned char)27,(unsigned short)((int)((unsigned int)tmp | 16U)));
  
#line 1700 
  tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)1816);
  
#line 1701 
  _rtl8821ae_dbi_write(rtlpriv,(unsigned short)1816,(unsigned char)((int)((unsigned int)tmp | 32U)));
  
#line 1703 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_5;
    int tmp_6;
    
#line 1703 
    tmp_5 = preempt_count();
    
#line 1703 
    tmp_6 = preempt_count();
    
#line 1703 
    printk("\001","_rtl8821ae_enable_l1off",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
  }
  else ;
  return_label: 
#line 1704 
                return;
}


#line 1706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_enable_ltr(struct ieee80211_hw *hw)
{
  
#line 1708 
  u8 tmp = (unsigned char)0U;
  
#line 1709 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1711 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 1711 
    tmp_0 = preempt_count();
    
#line 1711 
    tmp_1 = preempt_count();
    
#line 1711 
    printk("\001","_rtl8821ae_enable_ltr",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
  }
  else ;
  
#line 1714 
  tmp = _rtl8821ae_dbi_read(rtlpriv,(unsigned short)153);
  
#line 1715 
  if (((unsigned long)tmp & 4UL) == 0UL) {
    
#line 1716 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1716 
      ;
      
#line 1716 
      tmp_2 = preempt_count();
      
#line 1716 
      tmp_3 = preempt_count();
      
#line 1716 
      printk("\001","_rtl8821ae_enable_ltr",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)tmp);
    }
    else ;
    
#line 1718 
    goto return_label;
  }
  else ;
  
#line 1722 
  rtl_write_dword(rtlpriv,1944U,2291173520U);
  
#line 1725 
  rtl_write_dword(rtlpriv,1948U,2285668412U);
  
#line 1727 
  tmp = rtl_read_byte(rtlpriv,1956U);
  
#line 1728 
  rtl_write_byte(rtlpriv,1956U,(unsigned char)((int)((unsigned int)tmp | 16U)));
  
#line 1730 
  tmp = rtl_read_byte(rtlpriv,1956U);
  
#line 1731 
  rtl_write_byte(rtlpriv,1956U,(unsigned char)((int)tmp & 254));
  
#line 1732 
  rtl_write_byte(rtlpriv,1956U,(unsigned char)((int)((unsigned int)tmp | 1U)));
  
#line 1734 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_4;
    int tmp_5;
    
#line 1734 
    tmp_4 = preempt_count();
    
#line 1734 
    tmp_5 = preempt_count();
    
#line 1734 
    printk("\001","_rtl8821ae_enable_ltr",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
  }
  else ;
  return_label: 
#line 1735 
                return;
}


#line 1737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_wowlan_initialize_adapter(struct ieee80211_hw *hw)
{
  bool tmp_0;
  
#line 1739 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1740 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1741 
  bool init_finished = (_Bool)1;
  
#line 1742 
  u8 tmp = (unsigned char)0U;
  
#line 1745 
  _rtl8821ae_get_wakeup_reason(hw);
  
#line 1749 
  tmp_0 = _rtl8821ae_check_pcie_dma_hang(hw);
  
#line 1749 
  if ((int)tmp_0 != 0) 
#line 1750 
                       _rtl8821ae_reset_pcie_interface_dma(hw,(_Bool)1,(_Bool)0); else ;
  
#line 1753 
  _rtl8821ae_init_trx_desc_hw_address(hw);
  
#line 1756 
  rtl_write_byte(rtlpriv,769U,(unsigned char)254);
  
#line 1757 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1757 
    tmp_1 = preempt_count();
    
#line 1757 
    tmp_2 = preempt_count();
    
#line 1757 
    printk("\001","_rtl8821ae_wowlan_initialize_adapter",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
  }
  else ;
  
#line 1762 
  tmp = rtl_read_byte(rtlpriv,319U);
  
#line 1763 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 1763 
    ;
    
#line 1763 
    tmp_3 = preempt_count();
    
#line 1763 
    tmp_4 = preempt_count();
    
#line 1763 
    printk("\001","_rtl8821ae_wowlan_initialize_adapter",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)tmp);
  }
  else ;
  
#line 1767 
  rtl8821ae_set_fw_wowlan_mode(hw,(_Bool)0);
  
#line 1768 
  rtl8821ae_set_fw_remote_wake_ctrl_cmd(hw,(unsigned char)0);
  
#line 1770 
  if ((unsigned int)rtlhal->hw_rof_enable != 0U) {
    
#line 1771 
    tmp = rtl_read_byte(rtlpriv,95U);
    
#line 1772 
    if (((unsigned long)tmp & 2UL) != 0UL) {
      
#line 1774 
      rtl_write_byte(rtlpriv,95U,(unsigned char)((int)((unsigned int)tmp | 2U)));
      
#line 1775 
      init_finished = (_Bool)0;
    }
    else 
#line 1777 
         init_finished = (_Bool)1;
  }
  else ;
  
#line 1781 
  if ((int)init_finished != 0) {
    
#line 1782 
    _rtl8821ae_simple_initialize_adapter(hw);
    
#line 1785 
    rtl_write_byte(rtlpriv,769U,(unsigned char)0);
    
#line 1787 
    rtl_write_byte(rtlpriv,646U,(unsigned char)2);
    
#line 1789 
    tmp = rtl_read_byte(rtlpriv,257U);
    
#line 1790 
    rtl_write_byte(rtlpriv,257U,(unsigned char)((int)tmp & 254));
    
#line 1792 
    _rtl8821ae_enable_l1off(hw);
    
#line 1793 
    _rtl8821ae_enable_ltr(hw);
  }
  else ;
  
#line 1796 
  return init_finished;
}


#line 1799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8812ae_bb8812_config_1t(struct ieee80211_hw *hw)
{
  
#line 1802 
  rtl_set_bbreg(hw,2056U,255U,17U);
  
#line 1804 
  rtl_set_bbreg(hw,2060U,65535U,4369U);
  
#line 1806 
  rtl_set_bbreg(hw,2564U,201326592U,0U);
  
#line 1808 
  rtl_set_bbreg(hw,2236U,3221225568U,4U);
  
#line 1810 
  rtl_set_bbreg(hw,3584U,15U,4U);
  
#line 1812 
  rtl_set_bbreg(hw,3728U,4294967295U,0U);
  
#line 1814 
  rtl_set_bbreg(hw,3680U,4294967295U,0U);
  
#line 1815 
  rtl_set_bbreg(hw,3684U,4294967295U,0U);
  
#line 1816 
  return;
}


#line 1818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_poweroff_adapter(struct ieee80211_hw *hw)
{
  u8 u1b_tmp;
  u8 tmp;
  
#line 1820 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1821 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1824 
  rtlhal->mac_func_enable = (_Bool)0;
  
#line 1826 
  if ((unsigned int)rtlhal->hw_type == 13U) 
#line 1832 
                                            rtl_hal_pwrseqcmdparsing(rtlpriv,(unsigned char)255,(unsigned char)15,(unsigned char)4,(struct wlan_pwr_cfg *)(& rtl8821A_enter_lps_flow)); else ;
  
#line 1839 
  tmp = rtl_read_byte(rtlpriv,128U);
  
#line 1839 
  if ((int)tmp < 0) {
    
#line 1839 
    if ((int)rtlhal->fw_ready != 0) 
#line 1841 
                                    rtl8821ae_firmware_selfreset(hw); else ;
  }
  else ;
  
#line 1845 
  u1b_tmp = rtl_read_byte(rtlpriv,3U);
  
#line 1846 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)u1b_tmp & 251));
  
#line 1850 
  rtl_write_byte(rtlpriv,128U,(unsigned char)0);
  
#line 1852 
  if ((unsigned int)rtlhal->hw_type == 13U) 
#line 1854 
                                            rtl_hal_pwrseqcmdparsing(rtlpriv,(unsigned char)255,(unsigned char)15,(unsigned char)4,(struct wlan_pwr_cfg *)(& rtl8821A_card_disable_flow)); else 
                                                                    
#line 1858 
                                                                    rtl_hal_pwrseqcmdparsing(rtlpriv,(unsigned char)255,(unsigned char)15,(unsigned char)4,(struct wlan_pwr_cfg *)(& rtl8812_card_disable_flow));
  
#line 1863 
  u1b_tmp = rtl_read_byte(rtlpriv,29U);
  
#line 1864 
  rtl_write_byte(rtlpriv,29U,(unsigned char)((int)u1b_tmp & 254));
  
#line 1865 
  u1b_tmp = rtl_read_byte(rtlpriv,29U);
  
#line 1866 
  rtl_write_byte(rtlpriv,29U,(unsigned char)((int)((unsigned int)u1b_tmp | 1U)));
  
#line 1870 
  rtl_write_byte(rtlpriv,28U,(unsigned char)14);
  
#line 1871 
  return;
}


#line 1873  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
int rtl8821ae_hw_init(struct ieee80211_hw *hw)
{
  int __retres;
  int err;
  u8 tmp_u1b;
  bool support_remote_wakeup;
  bool tmp_2;
  
#line 1875 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1876 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1877 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 1878 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 1879 
  bool rtstatus = (_Bool)1;
  
#line 1883 
  u32 nav_upper = 30000U;
  
#line 1885 
  rtlhal->being_init_adapter = (_Bool)1;
  
#line 1886 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)92,(u8 *)(& support_remote_wakeup));
  
#line 1888 
  (*((rtlpriv->intf_ops)->disable_aspm))(hw);
  
#line 1892 
  tmp_u1b = rtl_read_byte(rtlpriv,256U);
  
#line 1893 
  if ((unsigned int)tmp_u1b != 0U && (unsigned int)tmp_u1b != 234U) {
    
#line 1894 
    rtlhal->mac_func_enable = (_Bool)1;
    
#line 1895 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1895 
      tmp = preempt_count();
      
#line 1895 
      tmp_0 = preempt_count();
      
#line 1895 
      printk("\001","rtl8821ae_hw_init",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
  }
  else {
    
#line 1898 
    rtlhal->mac_func_enable = (_Bool)0;
    
#line 1899 
    rtlhal->fw_ps_state = (unsigned char)0U;
  }
  
#line 1902 
  if (((int)support_remote_wakeup != 0 && (int)rtlhal->wake_from_pnp_sleep != 0) && (int)rtlhal->mac_func_enable != 0) {
    bool tmp_1;
    
#line 1905 
    tmp_1 = _rtl8821ae_wowlan_initialize_adapter(hw);
    
#line 1905 
    if ((int)tmp_1 != 0) {
      
#line 1906 
      rtlhal->being_init_adapter = (_Bool)0;
      
#line 1907 
      __retres = 0;
      
#line 1907 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1911 
  tmp_2 = _rtl8821ae_check_pcie_dma_hang(hw);
  
#line 1911 
  if ((int)tmp_2 != 0) {
    
#line 1912 
    _rtl8821ae_reset_pcie_interface_dma(hw,(_Bool)((bool)((int)rtlhal->mac_func_enable) != 0),(_Bool)0);
    
#line 1915 
    rtlhal->mac_func_enable = (_Bool)0;
  }
  else ;
  
#line 1922 
  if ((int)rtlhal->mac_func_enable != 0) {
    
#line 1923 
    _rtl8821ae_poweroff_adapter(hw);
    
#line 1924 
    rtlhal->mac_func_enable = (_Bool)0;
  }
  else ;
  
#line 1927 
  rtstatus = _rtl8821ae_init_mac(hw);
  
#line 1928 
  if (! rtstatus) {
    
#line 1929 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 1929 
      tmp_3 = preempt_count();
      
#line 1929 
      tmp_4 = preempt_count();
      
#line 1929 
      printk("\001","rtl8821ae_hw_init",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 1930 
    err = 1;
    
#line 1931 
    __retres = err;
    
#line 1931 
    goto return_label;
  }
  else ;
  
#line 1934 
  tmp_u1b = rtl_read_byte(rtlpriv,240U);
  
#line 1935 
  tmp_u1b = (unsigned char)((unsigned int)tmp_u1b & 127U);
  
#line 1936 
  rtl_write_byte(rtlpriv,240U,(unsigned char)((int)tmp_u1b));
  
#line 1938 
  err = rtl8821ae_download_fw(hw,(_Bool)0);
  
#line 1939 
  if (err != 0) {
    
#line 1940 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 1940 
      tmp_5 = preempt_count();
      
#line 1940 
      tmp_6 = preempt_count();
      
#line 1940 
      printk("\001","rtl8821ae_hw_init",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 1942 
    err = 1;
    
#line 1943 
    rtlhal->fw_ready = (_Bool)0;
    
#line 1944 
    __retres = err;
    
#line 1944 
    goto return_label;
  }
  else 
#line 1946 
       rtlhal->fw_ready = (_Bool)1;
  
#line 1948 
  ppsc->fw_current_inpsmode = (_Bool)0;
  
#line 1949 
  rtlhal->fw_ps_state = (unsigned char)0U;
  
#line 1950 
  rtlhal->fw_clk_change_in_progress = (_Bool)0;
  
#line 1951 
  rtlhal->allow_sw_to_change_hwclc = (_Bool)0;
  
#line 1952 
  rtlhal->last_hmeboxnum = (unsigned char)0U;
  
#line 1958 
  rtl8821ae_phy_mac_config(hw);
  
#line 1966 
  rtl8821ae_phy_bb_config(hw);
  
#line 1968 
  rtl8821ae_phy_rf_config(hw);
  
#line 1970 
  if ((unsigned int)rtlpriv->phy.rf_type == 0U && (unsigned int)rtlhal->hw_type == 14U) 
    
#line 1972 
    _rtl8812ae_bb8812_config_1t(hw); else ;
  
#line 1974 
  _rtl8821ae_hw_configure(hw);
  
#line 1976 
  rtl8821ae_phy_switch_wirelessband(hw,(unsigned char)0);
  
#line 1980 
  rtlhal->mac_func_enable = (_Bool)1;
  
#line 1982 
  rtl_cam_reset_all_entry(hw);
  
#line 1984 
  rtl8821ae_enable_hw_security_config(hw);
  
#line 1986 
  ppsc->rfpwr_state = ERFON;
  
#line 1988 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)0,(u8 *)(& mac->mac_addr));
  
#line 1989 
  _rtl8821ae_enable_aspm_back_door(hw);
  
#line 1990 
  (*((rtlpriv->intf_ops)->enable_aspm))(hw);
  
#line 1992 
  if ((unsigned int)rtlhal->hw_type == 14U && ((unsigned int)rtlhal->rfe_type == 1U || (unsigned int)rtlhal->rfe_type == 5U)) 
    
#line 1994 
    rtl_set_bbreg(hw,2304U,771U,770U); else ;
  
#line 1996 
  rtl8821ae_bt_hw_init(hw);
  
#line 1997 
  rtlpriv->rtlhal.being_init_adapter = (_Bool)0;
  
#line 1999 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)95,(u8 *)(& nav_upper));
  
#line 2003 
  if ((int)support_remote_wakeup != 0) 
#line 2004 
                                       rtl_write_byte(rtlpriv,1680U,(unsigned char)0); else ;
  
#line 2007 
  tmp_u1b = rtl_read_byte(rtlpriv,646U);
  
#line 2008 
  if (((unsigned long)tmp_u1b & 4UL) != 0UL) {
    
#line 2010 
    tmp_u1b = (unsigned char)((unsigned int)tmp_u1b & 251U);
    
#line 2011 
    rtl_write_byte(rtlpriv,646U,(unsigned char)((int)tmp_u1b));
  }
  else ;
  
#line 2015 
  rtl_write_byte(rtlpriv,769U,(unsigned char)0);
  
#line 2017 
  rtl8821ae_dm_init(hw);
  
#line 2018 
  rtl8821ae_macid_initialize_mediastatus(hw);
  
#line 2020 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_7;
    int tmp_8;
    
#line 2020 
    tmp_7 = preempt_count();
    
#line 2020 
    tmp_8 = preempt_count();
    
#line 2020 
    printk("\001","rtl8821ae_hw_init",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
  }
  else ;
  
#line 2021 
  __retres = err;
  return_label: 
#line 2021 
                return __retres;
}


#line 2024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static enum version_8821ae _rtl8821ae_read_chip_version(struct ieee80211_hw *hw)
{
  u32 value32;
  
#line 2026 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2027 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2028 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 2029 
  enum version_8821ae version = VERSION_UNKNOWN;
  
#line 2032 
  value32 = rtl_read_dword(rtlpriv,240U);
  
#line 2033 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2033 
    ;
    
#line 2033 
    tmp = preempt_count();
    
#line 2033 
    tmp_0 = preempt_count();
    
#line 2033 
    printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_0 & 2096896UL,tmp != 0,value32);
  }
  else ;
  
#line 2036 
  if ((unsigned int)rtlhal->hw_type == 14U) 
#line 2037 
                                            rtlphy->rf_type = (unsigned char)2U;
  else 
    
#line 2038 
    if ((unsigned int)rtlhal->hw_type == 13U) 
#line 2039 
                                              rtlphy->rf_type = (unsigned char)0U; else ;
  
#line 2041 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 2041 
    ;
    
#line 2041 
    tmp_1 = preempt_count();
    
#line 2041 
    tmp_2 = preempt_count();
    
#line 2041 
    printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rtlphy->rf_type);
  }
  else ;
  
#line 2044 
  if (((unsigned long)value32 & 8388608UL) != 0UL) 
    
#line 2045 
    if ((unsigned int)rtlhal->hw_type == 14U) 
      
#line 2046 
      if ((unsigned int)rtlphy->rf_type == 2U) 
#line 2047 
                                               version = VERSION_TEST_CHIP_2T2R_8812; else 
                                                                    
#line 2049 
                                                                    version = VERSION_TEST_CHIP_1T1R_8812;
    else 
#line 2051 
         version = VERSION_TEST_CHIP_8821;
  else 
    
#line 2053 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 2054 
      u32 rtl_id = ((value32 >> 12) & 15U) + 1U;
      
#line 2056 
      if ((unsigned int)rtlphy->rf_type == 2U) 
#line 2057 
                                               version = (enum version_8821ae)44; else 
                                                                    
#line 2062 
                                                                    version = (enum version_8821ae)12;
      
#line 2065 
      version = (enum version_8821ae)((rtl_id << 12) | (unsigned int)version);
    }
    else 
      
#line 2066 
      if ((unsigned int)rtlhal->hw_type == 13U) {
        
#line 2067 
        u32 rtl_id_0 = value32 & 61440U;
        
#line 2069 
        version = (enum version_8821ae)(rtl_id_0 | 13U);
      }
      else ;
  
#line 2074 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 2076 
    value32 = rtl_read_dword(rtlpriv,104U);
    
#line 2077 
    rtlhal->hw_rof_enable = (unsigned char)((unsigned int)((unsigned char)((unsigned long)value32 >> 3)) & 1U);
  }
  else ;
  
#line 2080 
  switch ((unsigned int)version) {
    case (unsigned int)4: 
#line 2081 
    ;
    
#line 2082 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 2082 
      tmp_3 = preempt_count();
      
#line 2082 
      tmp_4 = preempt_count();
      
#line 2082 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 2084 
    goto ldv_56889;
    case (unsigned int)36: 
#line 2085 
    ;
    
#line 2086 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 2086 
      tmp_5 = preempt_count();
      
#line 2086 
      tmp_6 = preempt_count();
      
#line 2086 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 2088 
    goto ldv_56889;
    case (unsigned int)4108: 
#line 2089 
    ;
    
#line 2090 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 2090 
      tmp_7 = preempt_count();
      
#line 2090 
      tmp_8 = preempt_count();
      
#line 2090 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 2092 
    goto ldv_56889;
    case (unsigned int)4140: 
#line 2093 
    ;
    
#line 2094 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 2094 
      tmp_9 = preempt_count();
      
#line 2094 
      tmp_10 = preempt_count();
      
#line 2094 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
    }
    else ;
    
#line 2096 
    goto ldv_56889;
    case (unsigned int)8204: 
#line 2097 
    ;
    
#line 2098 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_11;
      int tmp_12;
      
#line 2098 
      tmp_11 = preempt_count();
      
#line 2098 
      tmp_12 = preempt_count();
      
#line 2098 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
    }
    else ;
    
#line 2100 
    goto ldv_56889;
    case (unsigned int)8236: 
#line 2101 
    ;
    
#line 2102 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_13;
      int tmp_14;
      
#line 2102 
      tmp_13 = preempt_count();
      
#line 2102 
      tmp_14 = preempt_count();
      
#line 2102 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0);
    }
    else ;
    
#line 2104 
    goto ldv_56889;
    case (unsigned int)5: 
#line 2105 
    ;
    
#line 2106 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_15;
      int tmp_16;
      
#line 2106 
      tmp_15 = preempt_count();
      
#line 2106 
      tmp_16 = preempt_count();
      
#line 2106 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0);
    }
    else ;
    
#line 2108 
    goto ldv_56889;
    case (unsigned int)13: 
#line 2109 
    ;
    
#line 2110 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_17;
      int tmp_18;
      
#line 2110 
      tmp_17 = preempt_count();
      
#line 2110 
      tmp_18 = preempt_count();
      
#line 2110 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0);
    }
    else ;
    
#line 2112 
    goto ldv_56889;
    case (unsigned int)4109: 
#line 2113 
    ;
    
#line 2114 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_19;
      int tmp_20;
      
#line 2114 
      tmp_19 = preempt_count();
      
#line 2114 
      tmp_20 = preempt_count();
      
#line 2114 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0);
    }
    else ;
    
#line 2116 
    goto ldv_56889;
    default: 
#line 2117 
    ;
    
#line 2118 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_21;
      int tmp_22;
      
#line 2118 
      ;
      
#line 2118 
      tmp_21 = preempt_count();
      
#line 2118 
      tmp_22 = preempt_count();
      
#line 2118 
      printk("\001","_rtl8821ae_read_chip_version",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0,(unsigned int)version);
    }
    else ;
    
#line 2120 
    goto ldv_56889;
  }
  ldv_56889: 
#line 2123 
  ;
  
#line 2123 
  return version;
}


#line 2126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static int _rtl8821ae_set_media_status(struct ieee80211_hw *hw, enum nl80211_iftype type)
{
  int __retres;
  
#line 2129 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2130 
  u8 bt_msr = rtl_read_byte(rtlpriv,258U);
  
#line 2131 
  enum led_ctl_mode ledaction = LED_CTL_NO_LINK;
  
#line 2132 
  bt_msr = (unsigned char)((unsigned int)bt_msr & 252U);
  
#line 2134 
  rtl_write_dword(rtlpriv,1360U,0U);
  
#line 2135 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1024ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_0;
    int tmp_1;
    
#line 2135 
    tmp_0 = preempt_count();
    
#line 2135 
    tmp_1 = preempt_count();
    
#line 2135 
    printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
  }
  else ;
  
#line 2138 
  if (type == (unsigned int)NL80211_IFTYPE_UNSPECIFIED || type == (unsigned int)NL80211_IFTYPE_STATION) {
    
#line 2140 
    _rtl8821ae_stop_tx_beacon(hw);
    
#line 2141 
    _rtl8821ae_enable_bcn_sub_func(hw);
  }
  else 
    
#line 2142 
    if (type == (unsigned int)NL80211_IFTYPE_ADHOC || type == (unsigned int)NL80211_IFTYPE_AP) {
      
#line 2144 
      _rtl8821ae_resume_tx_beacon(hw);
      
#line 2145 
      _rtl8821ae_disable_bcn_sub_func(hw);
    }
    else 
      
#line 2147 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
        int tmp_2;
        int tmp_3;
        
#line 2147 
        ;
        
#line 2147 
        tmp_2 = preempt_count();
        
#line 2147 
        tmp_3 = preempt_count();
        
#line 2147 
        printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(unsigned int)type);
      }
      else ;
  
#line 2152 
  switch ((unsigned int)type) {
    case (unsigned int)0: 
#line 2153 
    ;
    
#line 2154 
    bt_msr = bt_msr;
    
#line 2155 
    ledaction = LED_CTL_LINK;
    
#line 2156 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 2156 
      tmp_4 = preempt_count();
      
#line 2156 
      tmp_5 = preempt_count();
      
#line 2156 
      printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
    }
    else ;
    
#line 2158 
    goto ldv_56908;
    case (unsigned int)1: 
#line 2159 
    ;
    
#line 2160 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 1U);
    
#line 2161 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 2161 
      tmp_6 = preempt_count();
      
#line 2161 
      tmp_7 = preempt_count();
      
#line 2161 
      printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0);
    }
    else ;
    
#line 2163 
    goto ldv_56908;
    case (unsigned int)2: 
#line 2164 
    ;
    
#line 2165 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 2U);
    
#line 2166 
    ledaction = LED_CTL_LINK;
    
#line 2167 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 2167 
      tmp_8 = preempt_count();
      
#line 2167 
      tmp_9 = preempt_count();
      
#line 2167 
      printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
    }
    else ;
    
#line 2169 
    goto ldv_56908;
    case (unsigned int)3: 
#line 2170 
    ;
    
#line 2171 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 3U);
    
#line 2172 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_10;
      int tmp_11;
      
#line 2172 
      tmp_10 = preempt_count();
      
#line 2172 
      tmp_11 = preempt_count();
      
#line 2172 
      printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0);
    }
    else ;
    
#line 2174 
    goto ldv_56908;
    default: 
#line 2175 
    ;
    
#line 2176 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_12;
      int tmp_13;
      
#line 2176 
      ;
      
#line 2176 
      tmp_12 = preempt_count();
      
#line 2176 
      tmp_13 = preempt_count();
      
#line 2176 
      printk("\001","_rtl8821ae_set_media_status",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0,(unsigned int)type);
    }
    else ;
    
#line 2178 
    __retres = 1;
    
#line 2178 
    goto return_label;
  }
  ldv_56908: 
#line 2181 
  ;
  
#line 2181 
  rtl_write_byte(rtlpriv,258U,(unsigned char)((int)bt_msr));
  
#line 2182 
  (*(((rtlpriv->cfg)->ops)->led_control))(hw,ledaction);
  
#line 2183 
  if (((int)bt_msr & 3) == 3) 
#line 2184 
                              rtl_write_byte(rtlpriv,1297U,(unsigned char)0); else 
                                                                    
#line 2186 
                                                                    rtl_write_byte(rtlpriv,1297U,(unsigned char)102);
  
#line 2188 
  __retres = 0;
  return_label: 
#line 2188 
                return __retres;
}


#line 2191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_check_bssid(struct ieee80211_hw *hw, bool check_bssid)
{
  
#line 2193 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2194 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2195 
  u32 reg_rcr = rtlpci->receive_config;
  
#line 2197 
  if (rtlpriv->psc.rfpwr_state != (unsigned int)ERFON) 
#line 2198 
                                                       goto return_label; else ;
  
#line 2200 
  if ((int)check_bssid != 0) {
    
#line 2201 
    reg_rcr |= 192U;
    
#line 2202 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)44,(u8 *)(& reg_rcr));
    
#line 2204 
    _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)0,(unsigned char)16);
  }
  else 
    
#line 2205 
    if (! check_bssid) {
      
#line 2206 
      reg_rcr &= 4294967103U;
      
#line 2207 
      _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)16,(unsigned char)0);
      
#line 2208 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)44,(u8 *)(& reg_rcr));
    }
    else ;
  return_label: 
#line 2211 
                return;
}


#line 2213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
int rtl8821ae_set_network_type(struct ieee80211_hw *hw, enum nl80211_iftype type)
{
  int __retres;
  int tmp_1;
  
#line 2215 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2217 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2217 
    tmp = preempt_count();
    
#line 2217 
    tmp_0 = preempt_count();
    
#line 2217 
    printk("\001","rtl8821ae_set_network_type",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 2219 
  tmp_1 = _rtl8821ae_set_media_status(hw,type);
  
#line 2219 
  if (tmp_1 != 0) {
    
#line 2220 
    __retres = -95;
    
#line 2220 
    goto return_label;
  }
  else ;
  
#line 2222 
  if (rtlpriv->mac80211.link_state == (unsigned int)MAC80211_LINKED) {
    
#line 2223 
    if (type != (unsigned int)NL80211_IFTYPE_AP) 
#line 2224 
                                                 rtl8821ae_set_check_bssid(hw,(_Bool)1); else ;
  }
  else 
#line 2226 
       rtl8821ae_set_check_bssid(hw,(_Bool)0);
  
#line 2229 
  __retres = 0;
  return_label: 
#line 2229 
                return __retres;
}


#line 2233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_qos(struct ieee80211_hw *hw, int aci)
{
  
#line 2235 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2236 
  rtl8821ae_dm_init_edca_turbo(hw);
  
#line 2237 
  switch (aci) {
    case 1: 
#line 2238 
    ;
    
#line 2239 
    rtl_write_dword(rtlpriv,1292U,42063U);
    
#line 2240 
    goto ldv_56932;
    case 0: 
#line 2241 
    ;
    
#line 2243 
    goto ldv_56932;
    case 2: 
#line 2244 
    ;
    
#line 2245 
    rtl_write_dword(rtlpriv,1284U,6177570U);
    
#line 2246 
    goto ldv_56932;
    case 3: 
#line 2247 
    ;
    
#line 2248 
    rtl_write_dword(rtlpriv,1280U,3093026U);
    
#line 2249 
    goto ldv_56932;
    default: 
#line 2250 
    ;
    
#line 2251 
    printk("\001","rtl8821ae_set_qos",aci);
    
#line 2252 
    goto ldv_56932;
  }
  ldv_56932: 
#line 2254 
  ;
  
#line 2255 
  return;
}


#line 2256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void rtl8821ae_clear_interrupt(struct ieee80211_hw *hw)
{
  
#line 2258 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2259 
  u32 tmp = rtl_read_dword(rtlpriv,180U);
  
#line 2261 
  rtl_write_dword(rtlpriv,180U,tmp);
  
#line 2263 
  tmp = rtl_read_dword(rtlpriv,188U);
  
#line 2264 
  rtl_write_dword(rtlpriv,188U,tmp);
  
#line 2266 
  tmp = rtl_read_dword(rtlpriv,92U);
  
#line 2267 
  rtl_write_dword(rtlpriv,92U,tmp);
  
#line 2268 
  return;
}


#line 2270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_enable_interrupt(struct ieee80211_hw *hw)
{
  
#line 2272 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2273 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2275 
  if (! rtlpci->int_clear) 
#line 2276 
                           rtl8821ae_clear_interrupt(hw); else ;
  
#line 2278 
  rtl_write_dword(rtlpriv,176U,rtlpci->irq_mask[0]);
  
#line 2279 
  rtl_write_dword(rtlpriv,184U,rtlpci->irq_mask[1]);
  
#line 2280 
  rtlpci->irq_enabled = (_Bool)1;
  
#line 2288 
  rtl_write_dword(rtlpriv,88U,rtlpci->sys_irq_mask);
  
#line 2289 
  return;
}


#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_disable_interrupt(struct ieee80211_hw *hw)
{
  
#line 2293 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2294 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2296 
  rtl_write_dword(rtlpriv,176U,0U);
  
#line 2297 
  rtl_write_dword(rtlpriv,184U,0U);
  
#line 2298 
  rtlpci->irq_enabled = (_Bool)0;
  
#line 2299 
  return;
}


#line 2302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_clear_pci_pme_status(struct ieee80211_hw *hw)
{
  u16 cap_hdr;
  u8 cap_pointer;
  u8 pmcs_reg;
  u8 tmp_3;
  
#line 2304 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2305 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2308 
  u8 cap_id = (unsigned char)255U;
  
#line 2310 
  u8 cnt = (unsigned char)0U;
  
#line 2316 
  pci_read_config_byte((struct pci_dev const *)rtlpci->pdev,52,& cap_pointer);
  
#line 2317 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2317 
    ;
    
#line 2317 
    tmp = preempt_count();
    
#line 2317 
    tmp_0 = preempt_count();
    
#line 2317 
    printk("\001","_rtl8821ae_clear_pci_pme_status",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)cap_pointer);
  }
  else ;
  ldv_56965: 
#line 2318 
  ;
  
#line 2321 
  pci_read_config_word((struct pci_dev const *)rtlpci->pdev,(int)cap_pointer,& cap_hdr);
  
#line 2322 
  cap_id = (unsigned char)cap_hdr;
  
#line 2324 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 2324 
    ;
    
#line 2324 
    ;
    
#line 2324 
    tmp_1 = preempt_count();
    
#line 2324 
    tmp_2 = preempt_count();
    
#line 2324 
    printk("\001","_rtl8821ae_clear_pci_pme_status",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)cap_pointer,(int)cap_id);
  }
  else ;
  
#line 2328 
  if ((unsigned int)cap_id == 1U) 
#line 2329 
                                  goto ldv_56964;
  else {
    
#line 2332 
    cap_pointer = (unsigned char)((int)cap_hdr >> 8);
    
#line 2334 
    if ((unsigned int)cap_pointer + 255U > 253U) {
      
#line 2335 
      cap_id = (unsigned char)255U;
      
#line 2336 
      goto ldv_56964;
    }
    else ;
  }
  
#line 2339 
  tmp_3 = cnt;
  
#line 2339 
  cnt = (u8)((int)cnt + 1);
  
#line 2339 
  ;
  
#line 2339 
  if ((unsigned int)tmp_3 <= 199U) 
#line 2341 
                                   goto ldv_56965; else 
#line 2344 
                                                        goto ldv_56964;
  ldv_56964: 
#line 2345 
  ;
  
#line 2341 
  if ((unsigned int)cap_id == 1U) {
    
#line 2345 
    pci_read_config_byte((struct pci_dev const *)rtlpci->pdev,(int)cap_pointer + 5,& pmcs_reg);
    
#line 2347 
    if ((int)pmcs_reg < 0) {
      
#line 2349 
      pmcs_reg = (unsigned char)((unsigned int)pmcs_reg | 128U);
      
#line 2351 
      pci_write_config_byte((struct pci_dev const *)rtlpci->pdev,(int)cap_pointer + 5,(unsigned char)((int)pmcs_reg));
      
#line 2354 
      pci_read_config_byte((struct pci_dev const *)rtlpci->pdev,(int)cap_pointer + 5,& pmcs_reg);
      
#line 2356 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_4;
        int tmp_5;
        
#line 2356 
        ;
        
#line 2356 
        ;
        
#line 2356 
        tmp_4 = preempt_count();
        
#line 2356 
        tmp_5 = preempt_count();
        
#line 2356 
        printk("\001","_rtl8821ae_clear_pci_pme_status",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)cap_pointer + 5,(int)pmcs_reg);
      }
      else ;
    }
    else 
      
#line 2360 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_6;
        int tmp_7;
        
#line 2360 
        ;
        
#line 2360 
        ;
        
#line 2360 
        tmp_6 = preempt_count();
        
#line 2360 
        tmp_7 = preempt_count();
        
#line 2360 
        printk("\001","_rtl8821ae_clear_pci_pme_status",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,(int)cap_pointer + 5,(int)pmcs_reg);
      }
      else ;
  }
  else 
    
#line 2365 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 2365 
      tmp_8 = preempt_count();
      
#line 2365 
      tmp_9 = preempt_count();
      
#line 2365 
      printk("\001","_rtl8821ae_clear_pci_pme_status",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
    }
    else ;
  
#line 2366 
  return;
}


#line 2370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_card_disable(struct ieee80211_hw *hw)
{
  enum nl80211_iftype opmode;
  bool support_remote_wakeup;
  u8 tmp;
  
#line 2372 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2373 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 2374 
  struct rtl_ps_ctl *ppsc = & rtlpriv->psc;
  
#line 2375 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 2379 
  u32 count = 0U;
  
#line 2381 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)92,(u8 *)(& support_remote_wakeup));
  
#line 2384 
  ppsc->cur_ps_level |= 8U;
  
#line 2386 
  if ((! support_remote_wakeup || mac->opmode != (unsigned int)NL80211_IFTYPE_STATION) || ! rtlhal->enter_pnp_sleep) {
    
#line 2388 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 2388 
      tmp_0 = preempt_count();
      
#line 2388 
      tmp_1 = preempt_count();
      
#line 2388 
      printk("\001","rtl8821ae_card_disable",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
    }
    else ;
    
#line 2389 
    mac->link_state = MAC80211_NOLINK;
    
#line 2390 
    opmode = NL80211_IFTYPE_UNSPECIFIED;
    
#line 2391 
    _rtl8821ae_set_media_status(hw,opmode);
    
#line 2392 
    _rtl8821ae_poweroff_adapter(hw);
  }
  else {
    bool tmp_4;
    
#line 2394 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 2394 
      tmp_2 = preempt_count();
      
#line 2394 
      tmp_3 = preempt_count();
      
#line 2394 
      printk("\001","rtl8821ae_card_disable",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
    
#line 2397 
    rtl_write_byte(rtlpriv,455U,(unsigned char)0);
    
#line 2400 
    rtl8821ae_set_fw_related_for_wowlan(hw,(_Bool)1);
    
#line 2405 
    tmp_4 = _rtl8821ae_dynamic_rqpn(hw,224U,(unsigned short)3,2160200973U);
    
#line 2405 
    if ((int)tmp_4 != 0) 
#line 2406 
                         rtlhal->re_init_llt_table = (_Bool)1; else ;
    
#line 2411 
    rtl8821ae_set_fw_global_info_cmd(hw);
    
#line 2413 
    _rtl8821ae_download_rsvd_page(hw,(_Bool)1);
    
#line 2416 
    printk("mac->link_state = %d\n",(unsigned int)mac->link_state);
    
#line 2417 
    if (mac->link_state > (unsigned int)MAC80211_LINKING && mac->opmode == (unsigned int)NL80211_IFTYPE_STATION) {
      
#line 2419 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)82,(u8 *)0U);
      
#line 2420 
      rtl8821ae_set_fw_media_status_rpt_cmd(hw,(unsigned char)1);
      
#line 2423 
      rtl8821ae_set_fw_wowlan_mode(hw,(_Bool)1);
      
#line 2425 
      rtl8821ae_set_fw_keep_alive_cmd(hw,(_Bool)1);
      
#line 2428 
      rtl8821ae_set_fw_disconnect_decision_ctrl_cmd(hw,(_Bool)1);
    }
    else ;
    
#line 2436 
    rtl_write_byte(rtlpriv,646U,(unsigned char)4);
    
#line 2438 
    tmp = rtl_read_byte(rtlpriv,646U);
    
#line 2439 
    count = 0U;
    
#line 2440 
    goto ldv_56979;
    ldv_56978: 
#line 2441 
    ;
    
#line 2441 
    __const_udelay(42950UL);
    
#line 2442 
    tmp = rtl_read_byte(rtlpriv,646U);
    ldv_56979: 
#line 2443 
    ;
    
#line 2440 
    if (((unsigned long)tmp & 2UL) == 0UL) {
      u32 tmp_5;
      
#line 2440 
      tmp_5 = count;
      
#line 2440 
      count += 1U;
      
#line 2440 
      ;
      
#line 2440 
      if (tmp_5 <= 99U) 
#line 2442 
                        goto ldv_56978; else 
#line 2445 
                                             goto ldv_56980;
    }
    else 
#line 2445 
         goto ldv_56980;
    ldv_56980: 
#line 2446 
    ;
    
#line 2444 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 2444 
      ;
      
#line 2444 
      tmp_6 = preempt_count();
      
#line 2444 
      tmp_7 = preempt_count();
      
#line 2444 
      printk("\001","rtl8821ae_card_disable",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,count);
    }
    else ;
    
#line 2449 
    (*((rtlpriv->intf_ops)->reset_trx_ring))(hw);
    
#line 2451 
    rtl_write_byte(rtlpriv,5U,(unsigned char)0);
    
#line 2453 
    _rtl8821ae_clear_pci_pme_status(hw);
    
#line 2454 
    tmp = rtl_read_byte(rtlpriv,8U);
    
#line 2455 
    rtl_write_byte(rtlpriv,8U,(unsigned char)((int)((unsigned int)tmp | 8U)));
    
#line 2457 
    rtl_write_byte(rtlpriv,28U,(unsigned char)32);
    
#line 2458 
    rtl_write_byte(rtlpriv,28U,(unsigned char)96);
  }
  
#line 2461 
  if ((int)rtlpriv->rtlhal.driver_is_goingto_unload != 0 || ppsc->rfoff_reason > 536870912U) 
    
#line 2463 
    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_POWER_OFF); else ;
  
#line 2465 
  if ((int)support_remote_wakeup != 0 && (int)rtlhal->enter_pnp_sleep != 0) {
    
#line 2468 
    rtl8821ae_set_fw_remote_wake_ctrl_cmd(hw,(unsigned char)1);
    
#line 2471 
    rtl_write_byte(rtlpriv,769U,(unsigned char)255);
    
#line 2472 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 2472 
      tmp_8 = preempt_count();
      
#line 2472 
      tmp_9 = preempt_count();
      
#line 2472 
      printk("\001","rtl8821ae_card_disable",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
    }
    else ;
    
#line 2475 
    count = 0U;
    ldv_56981: 
#line 2476 
    ;
    
#line 2477 
    tmp = rtl_read_byte(rtlpriv,768U);
    
#line 2478 
    __const_udelay(42950UL);
    
#line 2479 
    count += 1U;
    
#line 2480 
    if ((unsigned int)tmp != 0U && count <= 99U) 
#line 2482 
                                                 goto ldv_56981; else 
                                                                   
#line 2485 
                                                                   goto ldv_56982;
    ldv_56982: 
#line 2486 
    ;
    
#line 2481 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_10;
      int tmp_11;
      
#line 2481 
      ;
      
#line 2481 
      tmp_10 = preempt_count();
      
#line 2481 
      tmp_11 = preempt_count();
      
#line 2481 
      printk("\001","rtl8821ae_card_disable",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0,count);
    }
    else ;
    
#line 2485 
    if ((unsigned int)rtlhal->hw_rof_enable != 0U) {
      
#line 2486 
      printk("hw_rof_enable\n");
      
#line 2487 
      tmp = rtl_read_byte(rtlpriv,95U);
      
#line 2488 
      rtl_write_byte(rtlpriv,95U,(unsigned char)((int)((unsigned int)tmp | 2U)));
    }
    else ;
  }
  else ;
  
#line 2492 
  rtlpriv->phy.iqk_initialized = (_Bool)0;
  
#line 2493 
  return;
}


#line 2495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_interrupt_recognized(struct ieee80211_hw *hw, u32 *p_inta, u32 *p_intb)
{
  u32 tmp;
  u32 tmp_0;
  
#line 2498 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2499 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2501 
  tmp = rtl_read_dword(rtlpriv,180U);
  
#line 2501 
  *p_inta = tmp & rtlpci->irq_mask[0];
  
#line 2502 
  rtl_write_dword(rtlpriv,180U,*p_inta);
  
#line 2504 
  tmp_0 = rtl_read_dword(rtlpriv,188U);
  
#line 2504 
  *p_intb = tmp_0 & rtlpci->irq_mask[1];
  
#line 2505 
  rtl_write_dword(rtlpriv,188U,*p_intb);
  
#line 2506 
  return;
}


#line 2508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_beacon_related_registers(struct ieee80211_hw *hw)
{
  u16 bcn_interval;
  u16 atim_window;
  
#line 2510 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2511 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 2512 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2515 
  bcn_interval = (unsigned short)mac->beacon_interval;
  
#line 2516 
  atim_window = (unsigned short)2U;
  
#line 2517 
  rtl8821ae_disable_interrupt(hw);
  
#line 2518 
  rtl_write_word(rtlpriv,1370U,(unsigned short)((int)atim_window));
  
#line 2519 
  rtl_write_word(rtlpriv,1364U,(unsigned short)((int)bcn_interval));
  
#line 2520 
  rtl_write_word(rtlpriv,1296U,(unsigned short)26127);
  
#line 2521 
  rtl_write_byte(rtlpriv,1374U,(unsigned char)24);
  
#line 2522 
  rtl_write_byte(rtlpriv,1375U,(unsigned char)24);
  
#line 2523 
  rtl_write_byte(rtlpriv,1542U,(unsigned char)48);
  
#line 2524 
  rtlpci->reg_bcn_ctrl_val |= 8U;
  
#line 2525 
  rtl_write_byte(rtlpriv,1360U,(unsigned char)((int)((unsigned char)rtlpci->reg_bcn_ctrl_val)));
  
#line 2526 
  rtl8821ae_enable_interrupt(hw);
  
#line 2527 
  return;
}


#line 2529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_beacon_interval(struct ieee80211_hw *hw)
{
  
#line 2531 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2532 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 2533 
  u16 bcn_interval = (unsigned short)mac->beacon_interval;
  
#line 2535 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1024ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2535 
    ;
    
#line 2535 
    tmp = preempt_count();
    
#line 2535 
    tmp_0 = preempt_count();
    
#line 2535 
    printk("\001","rtl8821ae_set_beacon_interval",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)bcn_interval);
  }
  else ;
  
#line 2537 
  rtl8821ae_disable_interrupt(hw);
  
#line 2538 
  rtl_write_word(rtlpriv,1364U,(unsigned short)((int)bcn_interval));
  
#line 2539 
  rtl8821ae_enable_interrupt(hw);
  
#line 2540 
  return;
}


#line 2542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_update_interrupt_mask(struct ieee80211_hw *hw, u32 add_msr, u32 rm_msr)
{
  
#line 2545 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2546 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 2548 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 128ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2548 
    ;
    
#line 2548 
    ;
    
#line 2548 
    tmp = preempt_count();
    
#line 2548 
    tmp_0 = preempt_count();
    
#line 2548 
    printk("\001","rtl8821ae_update_interrupt_mask",(unsigned long)tmp_0 & 2096896UL,tmp != 0,add_msr,rm_msr);
  }
  else ;
  
#line 2551 
  if (add_msr != 0U) 
#line 2552 
                     rtlpci->irq_mask[0] |= add_msr; else ;
  
#line 2553 
  if (rm_msr != 0U) 
#line 2554 
                    rtlpci->irq_mask[0] &= ~ rm_msr; else ;
  
#line 2555 
  rtl8821ae_disable_interrupt(hw);
  
#line 2556 
  rtl8821ae_enable_interrupt(hw);
  
#line 2557 
  return;
}


#line 2559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_get_chnl_group(u8 chnl)
{
  
#line 2561 
  u8 group = (unsigned char)0U;
  
#line 2563 
  if ((unsigned int)chnl <= 14U) 
    
#line 2564 
    if ((unsigned int)chnl + 255U <= 1U) 
#line 2565 
                                         group = (unsigned char)0U;
    else 
      
#line 2566 
      if ((unsigned int)chnl + 253U <= 2U) 
#line 2567 
                                           group = (unsigned char)1U;
      else 
        
#line 2568 
        if ((unsigned int)chnl + 250U <= 2U) 
#line 2569 
                                             group = (unsigned char)2U;
        else 
          
#line 2570 
          if ((unsigned int)chnl + 247U <= 2U) 
#line 2571 
                                               group = (unsigned char)3U; else 
                                                                    
#line 2573 
                                                                    group = (unsigned char)4U;
  else 
    
#line 2575 
    if ((unsigned int)chnl + 220U <= 6U) 
#line 2576 
                                         group = (unsigned char)0U;
    else 
      
#line 2577 
      if ((unsigned int)chnl + 212U <= 4U) 
#line 2578 
                                           group = (unsigned char)1U;
      else 
        
#line 2579 
        if ((unsigned int)chnl + 206U <= 8U) 
#line 2580 
                                             group = (unsigned char)2U;
        else 
          
#line 2581 
          if ((unsigned int)chnl + 196U <= 4U) 
#line 2582 
                                               group = (unsigned char)3U;
          else 
            
#line 2583 
            if ((unsigned int)chnl + 156U <= 6U) 
#line 2584 
                                                 group = (unsigned char)4U;
            else 
              
#line 2585 
              if ((unsigned int)chnl + 148U <= 6U) 
#line 2586 
                                                   group = (unsigned char)5U;
              else 
                
#line 2587 
                if ((unsigned int)chnl + 140U <= 6U) 
#line 2588 
                                                     group = (unsigned char)6U;
                else 
                  
#line 2589 
                  if ((unsigned int)chnl + 132U <= 6U) 
#line 2590 
                                                       group = (unsigned char)7U;
                  else 
                    
#line 2591 
                    if ((unsigned int)chnl + 124U <= 6U) 
#line 2592 
                                                         group = (unsigned char)8U;
                    else 
                      
#line 2593 
                      if ((unsigned int)chnl + 116U <= 4U) 
#line 2594 
                                                           group = (unsigned char)9U;
                      else 
                        
#line 2595 
                        if ((unsigned int)chnl + 107U <= 6U) 
#line 2596 
                                                             group = (unsigned char)10U;
                        else 
                          
#line 2597 
                          if ((unsigned int)chnl + 99U <= 4U) 
#line 2598 
                                                              group = (unsigned char)11U;
                          else 
                            
#line 2599 
                            if ((unsigned int)chnl + 91U <= 6U) 
#line 2600 
                                                                group = (unsigned char)12U;
                            else 
                              
#line 2601 
                              if ((unsigned int)chnl + 83U <= 4U) 
#line 2602 
                                                                  group = (unsigned char)13U; else 
                                                                    
#line 2606 
                                                                    printk("\001","_rtl8821ae_get_chnl_group",(int)chnl);
  
#line 2609 
  return group;
}


#line 2612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_power_value_fromprom(struct ieee80211_hw *hw, struct txpower_info_2g *pwrinfo24g, struct txpower_info_5g *pwrinfo5g, bool autoload_fail, u8 *hwinfo)
{
  u32 rfPath;
  u32 group;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  
#line 2618 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2619 
  u32 eeAddr = 16U;
  
#line 2619 
  u32 TxCount = 0U;
  
#line 2621 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2621 
    ;
    
#line 2621 
    ;
    
#line 2621 
    tmp = preempt_count();
    
#line 2621 
    tmp_0 = preempt_count();
    
#line 2621 
    printk("\001","_rtl8821ae_read_power_value_fromprom",(unsigned long)tmp_0 & 2096896UL,tmp != 0,eeAddr + 1U,(int)*(hwinfo + (eeAddr + 1U)));
  }
  else ;
  
#line 2624 
  if ((unsigned int)*(hwinfo + (eeAddr + 1U)) == 255U) 
#line 2625 
                                                       autoload_fail = (_Bool)1; else ;
  
#line 2627 
  if ((int)autoload_fail != 0) {
    
#line 2628 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 2628 
      tmp_1 = preempt_count();
      
#line 2628 
      tmp_2 = preempt_count();
      
#line 2628 
      printk("\001","_rtl8821ae_read_power_value_fromprom",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 2630 
    rfPath = 0U;
    
#line 2630 
    goto ldv_57044;
    ldv_57043: 
#line 2631 
    ;
    
#line 2632 
    group = 0U;
    
#line 2632 
    goto ldv_57032;
    ldv_57031: 
#line 2633 
    ;
    
#line 2633 
    pwrinfo24g->index_cck_base[rfPath][group] = (unsigned char)45U;
    
#line 2634 
    pwrinfo24g->index_bw40_base[rfPath][group] = (unsigned char)45U;
    
#line 2632 
    group += 1U;
    ldv_57032: 
#line 2633 
    ;
    
#line 2632 
    if (group <= 5U) 
#line 2634 
                     goto ldv_57031; else 
#line 2637 
                                          goto ldv_57033;
    ldv_57033: 
#line 2638 
    ;
    
#line 2636 
    TxCount = 0U;
    
#line 2636 
    goto ldv_57035;
    ldv_57034: 
#line 2637 
    ;
    
#line 2637 
    if (TxCount == 0U) {
      
#line 2638 
      pwrinfo24g->bw20_diff[rfPath][0] = (unsigned char)2U;
      
#line 2639 
      pwrinfo24g->ofdm_diff[rfPath][0] = (unsigned char)4U;
    }
    else {
      
#line 2641 
      pwrinfo24g->bw20_diff[rfPath][TxCount] = (unsigned char)254U;
      
#line 2642 
      pwrinfo24g->bw40_diff[rfPath][TxCount] = (unsigned char)254U;
      
#line 2643 
      pwrinfo24g->cck_diff[rfPath][TxCount] = (unsigned char)254U;
      
#line 2644 
      pwrinfo24g->ofdm_diff[rfPath][TxCount] = (unsigned char)254U;
    }
    
#line 2636 
    TxCount += 1U;
    ldv_57035: 
#line 2637 
    ;
    
#line 2636 
    if (TxCount <= 3U) 
#line 2638 
                       goto ldv_57034; else 
#line 2641 
                                            goto ldv_57036;
    ldv_57036: 
#line 2642 
    ;
    
#line 2648 
    group = 0U;
    
#line 2648 
    goto ldv_57038;
    ldv_57037: 
#line 2649 
    ;
    
#line 2649 
    pwrinfo5g->index_bw40_base[rfPath][group] = (unsigned char)42U;
    
#line 2648 
    group += 1U;
    ldv_57038: 
#line 2649 
    ;
    
#line 2648 
    if (group <= 13U) 
#line 2650 
                      goto ldv_57037; else 
#line 2653 
                                           goto ldv_57039;
    ldv_57039: 
#line 2654 
    ;
    
#line 2651 
    TxCount = 0U;
    
#line 2651 
    goto ldv_57041;
    ldv_57040: 
#line 2652 
    ;
    
#line 2652 
    if (TxCount == 0U) {
      
#line 2653 
      pwrinfo5g->ofdm_diff[rfPath][0] = (unsigned char)4U;
      
#line 2654 
      pwrinfo5g->bw20_diff[rfPath][0] = (unsigned char)0U;
      
#line 2655 
      pwrinfo5g->bw80_diff[rfPath][0] = (unsigned char)254U;
      
#line 2656 
      pwrinfo5g->bw160_diff[rfPath][0] = (unsigned char)254U;
    }
    else {
      
#line 2658 
      pwrinfo5g->ofdm_diff[rfPath][0] = (unsigned char)254U;
      
#line 2659 
      pwrinfo5g->bw20_diff[rfPath][0] = (unsigned char)254U;
      
#line 2660 
      pwrinfo5g->bw40_diff[rfPath][0] = (unsigned char)254U;
      
#line 2661 
      pwrinfo5g->bw80_diff[rfPath][0] = (unsigned char)254U;
      
#line 2662 
      pwrinfo5g->bw160_diff[rfPath][0] = (unsigned char)254U;
    }
    
#line 2651 
    TxCount += 1U;
    ldv_57041: 
#line 2652 
    ;
    
#line 2651 
    if (TxCount <= 3U) 
#line 2653 
                       goto ldv_57040; else 
#line 2656 
                                            goto ldv_57042;
    ldv_57042: 
#line 2657 
    ;
    
#line 2630 
    rfPath += 1U;
    ldv_57044: 
#line 2631 
    ;
    
#line 2630 
    if (rfPath <= 3U) 
#line 2632 
                      goto ldv_57043; else 
#line 2635 
                                           goto ldv_57045;
    ldv_57045: 
#line 2636 
    ;
    
#line 2666 
    goto return_label;
  }
  else ;
  
#line 2669 
  ((struct rtl_priv *)hw->priv)->efuse.txpwr_fromeprom = (_Bool)1;
  
#line 2671 
  rfPath = 0U;
  
#line 2671 
  goto ldv_57068;
  ldv_57067: 
#line 2672 
  ;
  
#line 2673 
  group = 0U;
  
#line 2673 
  goto ldv_57047;
  ldv_57046: 
#line 2674 
  ;
  
#line 2674 
  tmp_3 = eeAddr;
  
#line 2674 
  eeAddr += 1U;
  
#line 2674 
  pwrinfo24g->index_cck_base[rfPath][group] = *(hwinfo + tmp_3);
  
#line 2675 
  if ((unsigned int)pwrinfo24g->index_cck_base[rfPath][group] == 255U) 
    
#line 2676 
    pwrinfo24g->index_cck_base[rfPath][group] = (unsigned char)45U; else ;
  
#line 2673 
  group += 1U;
  ldv_57047: 
#line 2674 
  ;
  
#line 2673 
  if (group <= 5U) 
#line 2675 
                   goto ldv_57046; else 
#line 2678 
                                        goto ldv_57048;
  ldv_57048: 
#line 2679 
  ;
  
#line 2678 
  group = 0U;
  
#line 2678 
  goto ldv_57050;
  ldv_57049: 
#line 2679 
  ;
  
#line 2679 
  tmp_4 = eeAddr;
  
#line 2679 
  eeAddr += 1U;
  
#line 2679 
  pwrinfo24g->index_bw40_base[rfPath][group] = *(hwinfo + tmp_4);
  
#line 2680 
  if ((unsigned int)pwrinfo24g->index_bw40_base[rfPath][group] == 255U) 
    
#line 2681 
    pwrinfo24g->index_bw40_base[rfPath][group] = (unsigned char)45U; else ;
  
#line 2678 
  group += 1U;
  ldv_57050: 
#line 2679 
  ;
  
#line 2678 
  if (group <= 4U) 
#line 2680 
                   goto ldv_57049; else 
#line 2683 
                                        goto ldv_57051;
  ldv_57051: 
#line 2684 
  ;
  
#line 2683 
  TxCount = 0U;
  
#line 2683 
  goto ldv_57053;
  ldv_57052: 
#line 2684 
  ;
  
#line 2684 
  if (TxCount == 0U) {
    
#line 2685 
    pwrinfo24g->bw40_diff[rfPath][TxCount] = (unsigned char)0U;
    
#line 2687 
    pwrinfo24g->bw20_diff[rfPath][TxCount] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
    
#line 2688 
    if (((unsigned long)pwrinfo24g->bw20_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2689 
      pwrinfo24g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->bw20_diff[rfPath][TxCount] | 240U); else ;
    
#line 2691 
    pwrinfo24g->ofdm_diff[rfPath][TxCount] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
    
#line 2692 
    if (((unsigned long)pwrinfo24g->ofdm_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2693 
      pwrinfo24g->ofdm_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->ofdm_diff[rfPath][TxCount] | 240U); else ;
    
#line 2695 
    pwrinfo24g->cck_diff[rfPath][TxCount] = (unsigned char)0U;
    
#line 2696 
    eeAddr += 1U;
  }
  else {
    
#line 2698 
    pwrinfo24g->bw40_diff[rfPath][TxCount] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
    
#line 2699 
    if (((unsigned long)pwrinfo24g->bw40_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2700 
      pwrinfo24g->bw40_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->bw40_diff[rfPath][TxCount] | 240U); else ;
    
#line 2702 
    pwrinfo24g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
    
#line 2703 
    if (((unsigned long)pwrinfo24g->bw20_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2704 
      pwrinfo24g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->bw20_diff[rfPath][TxCount] | 240U); else ;
    
#line 2706 
    eeAddr += 1U;
    
#line 2708 
    pwrinfo24g->ofdm_diff[rfPath][TxCount] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
    
#line 2709 
    if (((unsigned long)pwrinfo24g->ofdm_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2710 
      pwrinfo24g->ofdm_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->ofdm_diff[rfPath][TxCount] | 240U); else ;
    
#line 2712 
    pwrinfo24g->cck_diff[rfPath][TxCount] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
    
#line 2713 
    if (((unsigned long)pwrinfo24g->cck_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2714 
      pwrinfo24g->cck_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo24g->cck_diff[rfPath][TxCount] | 240U); else ;
    
#line 2716 
    eeAddr += 1U;
  }
  
#line 2683 
  TxCount += 1U;
  ldv_57053: 
#line 2684 
  ;
  
#line 2683 
  if (TxCount <= 3U) 
#line 2685 
                     goto ldv_57052; else 
#line 2688 
                                          goto ldv_57054;
  ldv_57054: 
#line 2689 
  ;
  
#line 2721 
  group = 0U;
  
#line 2721 
  goto ldv_57056;
  ldv_57055: 
#line 2722 
  ;
  
#line 2722 
  tmp_5 = eeAddr;
  
#line 2722 
  eeAddr += 1U;
  
#line 2722 
  pwrinfo5g->index_bw40_base[rfPath][group] = *(hwinfo + tmp_5);
  
#line 2723 
  if ((unsigned int)pwrinfo5g->index_bw40_base[rfPath][group] == 255U) 
    
#line 2724 
    pwrinfo5g->index_bw40_base[rfPath][group] = (unsigned char)254U; else ;
  
#line 2721 
  group += 1U;
  ldv_57056: 
#line 2722 
  ;
  
#line 2721 
  if (group <= 13U) 
#line 2723 
                    goto ldv_57055; else 
#line 2726 
                                         goto ldv_57057;
  ldv_57057: 
#line 2727 
  ;
  
#line 2727 
  TxCount = 0U;
  
#line 2727 
  goto ldv_57059;
  ldv_57058: 
#line 2728 
  ;
  
#line 2728 
  if (TxCount == 0U) {
    
#line 2729 
    pwrinfo5g->bw40_diff[rfPath][TxCount] = (unsigned char)0U;
    
#line 2731 
    pwrinfo5g->bw20_diff[rfPath][0] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
    
#line 2732 
    if (((unsigned long)pwrinfo5g->bw20_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2733 
      pwrinfo5g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->bw20_diff[rfPath][TxCount] | 240U); else ;
    
#line 2735 
    pwrinfo5g->ofdm_diff[rfPath][0] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
    
#line 2736 
    if (((unsigned long)pwrinfo5g->ofdm_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2737 
      pwrinfo5g->ofdm_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->ofdm_diff[rfPath][TxCount] | 240U); else ;
    
#line 2739 
    eeAddr += 1U;
  }
  else {
    
#line 2741 
    pwrinfo5g->bw40_diff[rfPath][TxCount] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
    
#line 2742 
    if (((unsigned long)pwrinfo5g->bw40_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2743 
      pwrinfo5g->bw40_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->bw40_diff[rfPath][TxCount] | 240U); else ;
    
#line 2745 
    pwrinfo5g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
    
#line 2746 
    if (((unsigned long)pwrinfo5g->bw20_diff[rfPath][TxCount] & 8UL) != 0UL) 
      
#line 2747 
      pwrinfo5g->bw20_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->bw20_diff[rfPath][TxCount] | 240U); else ;
    
#line 2749 
    eeAddr += 1U;
  }
  
#line 2727 
  TxCount += 1U;
  ldv_57059: 
#line 2728 
  ;
  
#line 2727 
  if (TxCount <= 3U) 
#line 2729 
                     goto ldv_57058; else 
#line 2732 
                                          goto ldv_57060;
  ldv_57060: 
#line 2733 
  ;
  
#line 2753 
  pwrinfo5g->ofdm_diff[rfPath][1] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
  
#line 2754 
  pwrinfo5g->ofdm_diff[rfPath][2] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
  
#line 2756 
  eeAddr += 1U;
  
#line 2758 
  pwrinfo5g->ofdm_diff[rfPath][3] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
  
#line 2760 
  eeAddr += 1U;
  
#line 2762 
  TxCount = 1U;
  
#line 2762 
  goto ldv_57062;
  ldv_57061: 
#line 2763 
  ;
  
#line 2763 
  if (((unsigned long)pwrinfo5g->ofdm_diff[rfPath][TxCount] & 8UL) != 0UL) 
    
#line 2764 
    pwrinfo5g->ofdm_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->ofdm_diff[rfPath][TxCount] | 240U); else ;
  
#line 2762 
  TxCount += 1U;
  ldv_57062: 
#line 2763 
  ;
  
#line 2762 
  if (TxCount <= 3U) 
#line 2764 
                     goto ldv_57061; else 
#line 2767 
                                          goto ldv_57063;
  ldv_57063: 
#line 2768 
  ;
  
#line 2766 
  TxCount = 0U;
  
#line 2766 
  goto ldv_57065;
  ldv_57064: 
#line 2767 
  ;
  
#line 2767 
  pwrinfo5g->bw80_diff[rfPath][TxCount] = (unsigned char)((int)*(hwinfo + eeAddr) >> 4);
  
#line 2769 
  if (((unsigned long)pwrinfo5g->bw80_diff[rfPath][TxCount] & 8UL) != 0UL) 
    
#line 2770 
    pwrinfo5g->bw80_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->bw80_diff[rfPath][TxCount] | 240U); else ;
  
#line 2772 
  pwrinfo5g->bw160_diff[rfPath][TxCount] = (unsigned char)((unsigned int)*(hwinfo + eeAddr) & 15U);
  
#line 2773 
  if (((unsigned long)pwrinfo5g->bw160_diff[rfPath][TxCount] & 8UL) != 0UL) 
    
#line 2774 
    pwrinfo5g->bw160_diff[rfPath][TxCount] = (unsigned char)((unsigned int)pwrinfo5g->bw160_diff[rfPath][TxCount] | 240U); else ;
  
#line 2776 
  eeAddr += 1U;
  
#line 2766 
  TxCount += 1U;
  ldv_57065: 
#line 2767 
  ;
  
#line 2766 
  if (TxCount <= 3U) 
#line 2768 
                     goto ldv_57064; else 
#line 2771 
                                          goto ldv_57066;
  ldv_57066: 
#line 2772 
  ;
  
#line 2671 
  rfPath += 1U;
  ldv_57068: 
#line 2672 
  ;
  
#line 2671 
  if (rfPath <= 3U) 
#line 2673 
                    goto ldv_57067; else 
#line 2676 
                                         goto ldv_57069;
  ldv_57069: 
#line 2677 
  ;
  return_label: 
#line 2678 
                return;
}


#line 2867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_txpower_info_from_hwpg(struct ieee80211_hw *hw, bool autoload_fail, u8 *hwinfo)
{
  struct txpower_info_2g pwrinfo24g;
  struct txpower_info_5g pwrinfo5g;
  u8 rf_path;
  u8 index;
  u8 i;
  
#line 2871 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2872 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 2875 
  u8 channel5g[54U] = {(unsigned char)36U, (unsigned char)38U, (unsigned char)40U, (unsigned char)42U, (unsigned char)44U, (unsigned char)46U, (unsigned char)48U, (unsigned char)50U, (unsigned char)52U, (unsigned char)54U, (unsigned char)56U, (unsigned char)58U, (unsigned char)60U, (unsigned char)62U, (unsigned char)64U, (unsigned char)100U, (unsigned char)102U, (unsigned char)104U, (unsigned char)106U, (unsigned char)108U, (unsigned char)110U, (unsigned char)112U, (unsigned char)114U, (unsigned char)116U, (unsigned char)118U, (unsigned char)120U, (unsigned char)122U, (unsigned char)124U, (unsigned char)126U, (unsigned char)128U, (unsigned char)130U, (unsigned char)132U, (unsigned char)134U, (unsigned char)136U, (unsigned char)138U, (unsigned char)140U, (unsigned char)142U, (unsigned char)144U, (unsigned char)149U, (unsigned char)151U, (unsigned char)153U, (unsigned char)155U, (unsigned char)157U, (unsigned char)159U, (unsigned char)161U, (unsigned char)163U, (unsigned char)165U, (unsigned char)167U, (unsigned char)168U, (unsigned char)169U, (unsigned char)171U, (unsigned char)173U, (unsigned char)175U, (unsigned char)177U};
  
#line 2883 
  u8 channel5g_80m[7U] = {(unsigned char)42U, (unsigned char)58U, (unsigned char)106U, (unsigned char)122U, (unsigned char)138U, (unsigned char)155U, (unsigned char)171U};
  
#line 2888 
  _rtl8821ae_read_power_value_fromprom(hw,& pwrinfo24g,& pwrinfo5g,(_Bool)((bool)((int)autoload_fail) != 0),hwinfo);
  
#line 2891 
  rf_path = (unsigned char)0U;
  
#line 2891 
  goto ldv_57099;
  ldv_57098: 
#line 2892 
  ;
  
#line 2892 
  i = (unsigned char)0U;
  
#line 2892 
  goto ldv_57085;
  ldv_57084: 
#line 2893 
  ;
  
#line 2893 
  index = _rtl8821ae_get_chnl_group((unsigned char)((int)((unsigned int)i + 1U)));
  
#line 2895 
  if ((unsigned int)i == 13U) {
    
#line 2896 
    rtlefuse->txpwrlevel_cck[(int)rf_path][(int)i] = pwrinfo24g.index_cck_base[(int)rf_path][5];
    
#line 2898 
    rtlefuse->txpwrlevel_ht40_1s[(int)rf_path][(int)i] = pwrinfo24g.index_bw40_base[(int)rf_path][(int)index];
  }
  else {
    
#line 2901 
    rtlefuse->txpwrlevel_cck[(int)rf_path][(int)i] = pwrinfo24g.index_cck_base[(int)rf_path][(int)index];
    
#line 2903 
    rtlefuse->txpwrlevel_ht40_1s[(int)rf_path][(int)i] = pwrinfo24g.index_bw40_base[(int)rf_path][(int)index];
  }
  
#line 2892 
  i = (u8)((int)i + 1);
  ldv_57085: 
#line 2893 
  ;
  
#line 2892 
  if ((unsigned int)i <= 13U) 
#line 2894 
                              goto ldv_57084; else 
#line 2897 
                                                   goto ldv_57086;
  ldv_57086: 
#line 2898 
  ;
  
#line 2908 
  i = (unsigned char)0U;
  
#line 2908 
  goto ldv_57088;
  ldv_57087: 
#line 2909 
  ;
  
#line 2909 
  index = _rtl8821ae_get_chnl_group((unsigned char)((int)channel5g[(int)i]));
  
#line 2910 
  rtlefuse->txpwr_5g_bw40base[(int)rf_path][(int)i] = pwrinfo5g.index_bw40_base[(int)rf_path][(int)index];
  
#line 2908 
  i = (u8)((int)i + 1);
  ldv_57088: 
#line 2909 
  ;
  
#line 2908 
  if ((unsigned int)i <= 53U) 
#line 2910 
                              goto ldv_57087; else 
#line 2913 
                                                   goto ldv_57089;
  ldv_57089: 
#line 2914 
  ;
  
#line 2913 
  i = (unsigned char)0U;
  
#line 2913 
  goto ldv_57093;
  ldv_57092: 
#line 2914 
  ;
  {
    u8 upper;
    u8 lower;
    
#line 2915 
    index = _rtl8821ae_get_chnl_group((unsigned char)((int)channel5g_80m[(int)i]));
    
#line 2916 
    upper = pwrinfo5g.index_bw40_base[(int)rf_path][(int)index];
    
#line 2917 
    lower = pwrinfo5g.index_bw40_base[(int)rf_path][(int)index + 1];
    
#line 2919 
    rtlefuse->txpwr_5g_bw80base[(int)rf_path][(int)i] = (unsigned char)(((int)upper + (int)lower) / 2);
  }
  
#line 2913 
  i = (u8)((int)i + 1);
  ldv_57093: 
#line 2914 
  ;
  
#line 2913 
  if ((unsigned int)i <= 6U) 
#line 2915 
                             goto ldv_57092; else 
#line 2918 
                                                  goto ldv_57094;
  ldv_57094: 
#line 2919 
  ;
  
#line 2921 
  i = (unsigned char)0U;
  
#line 2921 
  goto ldv_57096;
  ldv_57095: 
#line 2922 
  ;
  
#line 2922 
  rtlefuse->txpwr_cckdiff[(int)rf_path][(int)i] = (char)pwrinfo24g.cck_diff[(int)rf_path][(int)i];
  
#line 2924 
  rtlefuse->txpwr_legacyhtdiff[(int)rf_path][(int)i] = (char)pwrinfo24g.ofdm_diff[(int)rf_path][(int)i];
  
#line 2926 
  rtlefuse->txpwr_ht20diff[(int)rf_path][(int)i] = (char)pwrinfo24g.bw20_diff[(int)rf_path][(int)i];
  
#line 2928 
  rtlefuse->txpwr_ht40diff[(int)rf_path][(int)i] = (char)pwrinfo24g.bw40_diff[(int)rf_path][(int)i];
  
#line 2931 
  rtlefuse->txpwr_5g_ofdmdiff[(int)rf_path][(int)i] = (char)pwrinfo5g.ofdm_diff[(int)rf_path][(int)i];
  
#line 2933 
  rtlefuse->txpwr_5g_bw20diff[(int)rf_path][(int)i] = (char)pwrinfo5g.bw20_diff[(int)rf_path][(int)i];
  
#line 2935 
  rtlefuse->txpwr_5g_bw40diff[(int)rf_path][(int)i] = (char)pwrinfo5g.bw40_diff[(int)rf_path][(int)i];
  
#line 2937 
  rtlefuse->txpwr_5g_bw80diff[(int)rf_path][(int)i] = (char)pwrinfo5g.bw80_diff[(int)rf_path][(int)i];
  
#line 2921 
  i = (u8)((int)i + 1);
  ldv_57096: 
#line 2922 
  ;
  
#line 2921 
  if ((unsigned int)i <= 3U) 
#line 2923 
                             goto ldv_57095; else 
#line 2926 
                                                  goto ldv_57097;
  ldv_57097: 
#line 2927 
  ;
  
#line 2891 
  rf_path = (u8)((int)rf_path + 1);
  ldv_57099: 
#line 2892 
  ;
  
#line 2891 
  if ((unsigned int)rf_path <= 1U) 
#line 2893 
                                   goto ldv_57098; else 
#line 2896 
                                                        goto ldv_57100;
  ldv_57100: 
#line 2897 
  ;
  
#line 2942 
  if (! autoload_fail) {
    
#line 2943 
    rtlefuse->eeprom_regulatory = (unsigned char)((unsigned int)*(hwinfo + 193U) & 7U);
    
#line 2944 
    if ((unsigned int)*(hwinfo + 193U) == 255U) 
#line 2945 
                                                rtlefuse->eeprom_regulatory = (unsigned char)0U; else ;
  }
  else 
#line 2947 
       rtlefuse->eeprom_regulatory = (unsigned char)0U;
  
#line 2950 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[17] & 2UL) != 0UL) != 0L) 
    
#line 2950 
    printk("\001",(int)rtlefuse->eeprom_regulatory); else ;
  
#line 2951 
  return;
}


#line 2954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8812ae_read_pa_type(struct ieee80211_hw *hw, u8 *hwinfo, bool autoload_fail)
{
  
#line 2957 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2958 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 2960 
  if (! autoload_fail) {
    
#line 2961 
    rtlhal->pa_type_2g = *(hwinfo + 188U);
    
#line 2962 
    rtlhal->lna_type_2g = *(hwinfo + 189U);
    
#line 2963 
    if ((unsigned int)rtlhal->pa_type_2g == 255U && (unsigned int)rtlhal->lna_type_2g == 255U) {
      
#line 2964 
      rtlhal->pa_type_2g = (unsigned char)0U;
      
#line 2965 
      rtlhal->lna_type_2g = (unsigned char)0U;
    }
    else ;
    
#line 2967 
    rtlhal->external_pa_2g = (unsigned char)((((unsigned long)rtlhal->pa_type_2g & 32UL) != 0UL && ((unsigned long)rtlhal->pa_type_2g & 16UL) != 0UL) != 0);
    
#line 2970 
    rtlhal->external_lna_2g = (unsigned char)(((int)rtlhal->lna_type_2g < 0 && ((unsigned long)rtlhal->lna_type_2g & 8UL) != 0UL) != 0);
    
#line 2974 
    rtlhal->pa_type_5g = *(hwinfo + 188U);
    
#line 2975 
    rtlhal->lna_type_5g = *(hwinfo + 191U);
    
#line 2976 
    if ((unsigned int)rtlhal->pa_type_5g == 255U && (unsigned int)rtlhal->lna_type_5g == 255U) {
      
#line 2977 
      rtlhal->pa_type_5g = (unsigned char)0U;
      
#line 2978 
      rtlhal->lna_type_5g = (unsigned char)0U;
    }
    else ;
    
#line 2980 
    rtlhal->external_pa_5g = (unsigned char)((((unsigned long)rtlhal->pa_type_5g & 2UL) != 0UL && ((unsigned long)rtlhal->pa_type_5g & 1UL) != 0UL) != 0);
    
#line 2983 
    rtlhal->external_lna_5g = (unsigned char)(((int)rtlhal->lna_type_5g < 0 && ((unsigned long)rtlhal->lna_type_5g & 8UL) != 0UL) != 0);
  }
  else {
    
#line 2987 
    rtlhal->external_pa_2g = (unsigned char)0U;
    
#line 2988 
    rtlhal->external_lna_2g = (unsigned char)0U;
    
#line 2989 
    rtlhal->external_pa_5g = (unsigned char)0U;
    
#line 2990 
    rtlhal->external_lna_5g = (unsigned char)0U;
  }
  
#line 2992 
  return;
}


#line 2994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_pa_type(struct ieee80211_hw *hw, u8 *hwinfo, bool autoload_fail)
{
  
#line 2997 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2998 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 3000 
  if (! autoload_fail) {
    
#line 3001 
    rtlhal->pa_type_2g = *(hwinfo + 188U);
    
#line 3002 
    rtlhal->lna_type_2g = *(hwinfo + 189U);
    
#line 3003 
    if ((unsigned int)rtlhal->pa_type_2g == 255U && (unsigned int)rtlhal->lna_type_2g == 255U) {
      
#line 3004 
      rtlhal->pa_type_2g = (unsigned char)0U;
      
#line 3005 
      rtlhal->lna_type_2g = (unsigned char)0U;
    }
    else ;
    
#line 3007 
    rtlhal->external_pa_2g = (unsigned char)((unsigned int)((unsigned char)((unsigned long)rtlhal->pa_type_2g >> 5)) & 1U);
    
#line 3008 
    rtlhal->external_lna_2g = (unsigned char)((int)rtlhal->lna_type_2g >> 7);
    
#line 3010 
    rtlhal->pa_type_5g = *(hwinfo + 188U);
    
#line 3011 
    rtlhal->lna_type_5g = *(hwinfo + 191U);
    
#line 3012 
    if ((unsigned int)rtlhal->pa_type_5g == 255U && (unsigned int)rtlhal->lna_type_5g == 255U) {
      
#line 3013 
      rtlhal->pa_type_5g = (unsigned char)0U;
      
#line 3014 
      rtlhal->lna_type_5g = (unsigned char)0U;
    }
    else ;
    
#line 3016 
    rtlhal->external_pa_5g = (unsigned char)((unsigned int)((unsigned char)((unsigned long)rtlhal->pa_type_5g >> 1)) & 1U);
    
#line 3017 
    rtlhal->external_lna_5g = (unsigned char)((int)rtlhal->lna_type_5g >> 7);
  }
  else {
    
#line 3019 
    rtlhal->external_pa_2g = (unsigned char)0U;
    
#line 3020 
    rtlhal->external_lna_2g = (unsigned char)0U;
    
#line 3021 
    rtlhal->external_pa_5g = (unsigned char)0U;
    
#line 3022 
    rtlhal->external_lna_5g = (unsigned char)0U;
  }
  
#line 3024 
  return;
}


#line 3026  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_rfe_type(struct ieee80211_hw *hw, u8 *hwinfo, bool autoload_fail)
{
  
#line 3029 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3030 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 3032 
  if (! autoload_fail) 
    
#line 3033 
    if ((int)*(hwinfo + 202U) < 0) 
      
#line 3034 
      if ((unsigned int)rtlhal->external_lna_5g != 0U) 
        
#line 3035 
        if ((unsigned int)rtlhal->external_pa_5g != 0U) 
          
#line 3036 
          if ((unsigned int)rtlhal->external_lna_2g != 0U && (unsigned int)rtlhal->external_pa_2g != 0U) 
            
#line 3038 
            rtlhal->rfe_type = (unsigned char)3U; else 
#line 3040 
                                                       rtlhal->rfe_type = (unsigned char)0U;
        else 
#line 3042 
             rtlhal->rfe_type = (unsigned char)2U;
      else 
#line 3045 
           rtlhal->rfe_type = (unsigned char)4U;
    else {
      
#line 3048 
      rtlhal->rfe_type = (unsigned char)((unsigned int)*(hwinfo + 202U) & 63U);
      
#line 3050 
      if ((unsigned int)rtlhal->rfe_type == 4U && ((((unsigned int)rtlhal->external_pa_5g != 0U || (unsigned int)rtlhal->external_pa_2g != 0U) || (unsigned int)rtlhal->external_lna_5g != 0U) || (unsigned int)rtlhal->external_lna_2g != 0U)) {
        
#line 3055 
        if ((unsigned int)rtlhal->hw_type == 14U) 
#line 3056 
                                                  rtlhal->rfe_type = (unsigned char)2U; else ;
      }
      else ;
    }
  else 
#line 3060 
       rtlhal->rfe_type = (unsigned char)4U;
  
#line 3063 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3063 
    ;
    
#line 3063 
    tmp = preempt_count();
    
#line 3063 
    tmp_0 = preempt_count();
    
#line 3063 
    printk("\001","_rtl8821ae_read_rfe_type",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtlhal->rfe_type);
  }
  else ;
  
#line 3064 
  return;
}


#line 3067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8812ae_read_bt_coexist_info_from_hwpg(struct ieee80211_hw *hw, bool auto_load_fail, u8 *hwinfo)
{
  u8 value;
  
#line 3070 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3073 
  if (! auto_load_fail) {
    
#line 3074 
    value = *(hwinfo + 193U);
    
#line 3075 
    if ((unsigned int)((int)value >> 5) == 1U) 
#line 3076 
                                               rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)1U; else 
                                                                    
#line 3078 
                                                                    rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)0U;
    
#line 3079 
    rtlpriv->btcoexist.btc_info.bt_type = (unsigned char)11U;
    
#line 3081 
    value = *(hwinfo + 195U);
    
#line 3082 
    rtlpriv->btcoexist.btc_info.ant_num = (unsigned char)((unsigned int)value & 1U);
  }
  else {
    
#line 3084 
    rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)0U;
    
#line 3085 
    rtlpriv->btcoexist.btc_info.bt_type = (unsigned char)11U;
    
#line 3086 
    rtlpriv->btcoexist.btc_info.ant_num = (unsigned char)0U;
  }
  
#line 3088 
  return;
}


#line 3091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_bt_coexist_info_from_hwpg(struct ieee80211_hw *hw, bool auto_load_fail, u8 *hwinfo)
{
  u8 value;
  u32 tmpu_32;
  
#line 3094 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3098 
  if (! auto_load_fail) {
    
#line 3099 
    tmpu_32 = rtl_read_dword(rtlpriv,104U);
    
#line 3100 
    if (((unsigned long)tmpu_32 & 262144UL) != 0UL) 
#line 3101 
                                                    rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)1U; else 
                                                                    
#line 3103 
                                                                    rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)0U;
    
#line 3104 
    rtlpriv->btcoexist.btc_info.bt_type = (unsigned char)7U;
    
#line 3106 
    value = *(hwinfo + 195U);
    
#line 3107 
    rtlpriv->btcoexist.btc_info.ant_num = (unsigned char)((unsigned int)value & 1U);
  }
  else {
    
#line 3109 
    rtlpriv->btcoexist.btc_info.btcoexist = (unsigned char)0U;
    
#line 3110 
    rtlpriv->btcoexist.btc_info.bt_type = (unsigned char)7U;
    
#line 3111 
    rtlpriv->btcoexist.btc_info.ant_num = (unsigned char)0U;
  }
  
#line 3113 
  return;
}


#line 3116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void _rtl8821ae_read_adapter_info(struct ieee80211_hw *hw, bool b_pseudo_test)
{
  u16 i;
  u16 usvalue;
  u8 hwinfo[512U];
  u16 eeprom_id;
  
#line 3118 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3119 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 3120 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3121 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 3126 
  if ((int)b_pseudo_test != 0) ; else ;
  
#line 3130 
  if ((int)rtlefuse->epromtype == 2) {
    
#line 3131 
    rtl_efuse_shadow_map_update(hw);
    
#line 3132 
    memcpy((void *)(& hwinfo),(void const *)(& rtlefuse->efuse_map[0][0]),512UL);
  }
  else 
    
#line 3134 
    if ((int)rtlefuse->epromtype == 0) {
      
#line 3135 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
        int tmp;
        int tmp_0;
        
#line 3135 
        tmp = preempt_count();
        
#line 3135 
        tmp_0 = preempt_count();
        
#line 3135 
        printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
      }
      else ;
    }
    else ;
  
#line 3139 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    struct task_struct *tmp_1;
    struct task_struct *tmp_2;
    
#line 3139 
    tmp_1 = get_current();
    
#line 3139 
    tmp_2 = get_current();
    
#line 3139 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_2->comm),tmp_1->pid,(char *)"MAP\n");
    {
      
#line 3139 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "_rtl8821ae_read_adapter_info", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))3140U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 3139 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 3139 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& hwinfo),512UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 3142 
  eeprom_id = *((u16 *)(&(hwinfo[0])));
  
#line 3143 
  if ((unsigned int)eeprom_id != 33065U) {
    
#line 3144 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 3144 
      ;
      
#line 3144 
      tmp_3 = preempt_count();
      
#line 3144 
      tmp_4 = preempt_count();
      
#line 3144 
      printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)eeprom_id);
    }
    else ;
    
#line 3146 
    rtlefuse->autoload_failflag = (unsigned char)1U;
  }
  else {
    
#line 3148 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 3148 
      tmp_5 = preempt_count();
      
#line 3148 
      tmp_6 = preempt_count();
      
#line 3148 
      printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 3149 
    rtlefuse->autoload_failflag = (unsigned char)0U;
  }
  
#line 3152 
  if ((unsigned int)rtlefuse->autoload_failflag != 0U) {
    
#line 3153 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 3153 
      tmp_7 = preempt_count();
      
#line 3153 
      tmp_8 = preempt_count();
      
#line 3153 
      printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 3155 
    goto return_label;
  }
  else ;
  
#line 3158 
  rtlefuse->eeprom_version = hwinfo[196];
  
#line 3159 
  if ((unsigned int)rtlefuse->eeprom_version == 255U) 
#line 3160 
                                                      rtlefuse->eeprom_version = (unsigned char)0U; else ;
  
#line 3162 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_9;
    int tmp_10;
    
#line 3162 
    ;
    
#line 3162 
    tmp_9 = preempt_count();
    
#line 3162 
    tmp_10 = preempt_count();
    
#line 3162 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0,(int)rtlefuse->eeprom_version);
  }
  else ;
  
#line 3165 
  rtlefuse->eeprom_vid = *((u16 *)(& hwinfo[214]));
  
#line 3166 
  rtlefuse->eeprom_did = *((u16 *)(& hwinfo[216]));
  
#line 3167 
  rtlefuse->eeprom_svid = *((u16 *)(& hwinfo[218]));
  
#line 3168 
  rtlefuse->eeprom_smid = *((u16 *)(& hwinfo[220]));
  
#line 3169 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_11;
    int tmp_12;
    
#line 3169 
    ;
    
#line 3169 
    tmp_11 = preempt_count();
    
#line 3169 
    tmp_12 = preempt_count();
    
#line 3169 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0,(int)eeprom_id);
  }
  else ;
  
#line 3171 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_13;
    int tmp_14;
    
#line 3171 
    ;
    
#line 3171 
    tmp_13 = preempt_count();
    
#line 3171 
    tmp_14 = preempt_count();
    
#line 3171 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0,(int)rtlefuse->eeprom_vid);
  }
  else ;
  
#line 3173 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_15;
    int tmp_16;
    
#line 3173 
    ;
    
#line 3173 
    tmp_15 = preempt_count();
    
#line 3173 
    tmp_16 = preempt_count();
    
#line 3173 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0,(int)rtlefuse->eeprom_did);
  }
  else ;
  
#line 3175 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_17;
    int tmp_18;
    
#line 3175 
    ;
    
#line 3175 
    tmp_17 = preempt_count();
    
#line 3175 
    tmp_18 = preempt_count();
    
#line 3175 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0,(int)rtlefuse->eeprom_svid);
  }
  else ;
  
#line 3177 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_19;
    int tmp_20;
    
#line 3177 
    ;
    
#line 3177 
    tmp_19 = preempt_count();
    
#line 3177 
    tmp_20 = preempt_count();
    
#line 3177 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0,(int)rtlefuse->eeprom_smid);
  }
  else ;
  
#line 3181 
  rtlefuse->eeprom_oemid = hwinfo[197];
  
#line 3182 
  if ((unsigned int)rtlefuse->eeprom_oemid == 255U) 
#line 3183 
                                                    rtlefuse->eeprom_oemid = (unsigned char)0U; else ;
  
#line 3185 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_21;
    int tmp_22;
    
#line 3185 
    ;
    
#line 3185 
    tmp_21 = preempt_count();
    
#line 3185 
    tmp_22 = preempt_count();
    
#line 3185 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0,(int)rtlefuse->eeprom_oemid);
  }
  else ;
  
#line 3188 
  i = (unsigned short)0U;
  
#line 3188 
  goto ldv_57153;
  ldv_57152: 
#line 3189 
  ;
  
#line 3189 
  usvalue = *((u16 *)(& hwinfo[(int)i + 208]));
  
#line 3190 
  *((u16 *)(& rtlefuse->dev_addr[(int)i])) = usvalue;
  
#line 3188 
  i = (unsigned short)((unsigned int)i + 2U);
  ldv_57153: 
#line 3189 
  ;
  
#line 3188 
  if ((unsigned int)i <= 5U) 
#line 3190 
                             goto ldv_57152; else 
#line 3193 
                                                  goto ldv_57154;
  ldv_57154: 
#line 3194 
  ;
  
#line 3193 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp_23;
    int tmp_24;
    
#line 3193 
    ;
    
#line 3193 
    tmp_23 = preempt_count();
    
#line 3193 
    tmp_24 = preempt_count();
    
#line 3193 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0,(u8 *)(& rtlefuse->dev_addr));
  }
  else ;
  
#line 3196 
  _rtl8821ae_read_txpower_info_from_hwpg(hw,(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U),(u8 *)(& hwinfo));
  
#line 3199 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 3200 
    _rtl8812ae_read_pa_type(hw,(u8 *)(& hwinfo),(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U));
    
#line 3201 
    _rtl8812ae_read_bt_coexist_info_from_hwpg(hw,(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U),(u8 *)(& hwinfo));
  }
  else {
    
#line 3204 
    _rtl8821ae_read_pa_type(hw,(u8 *)(& hwinfo),(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U));
    
#line 3205 
    _rtl8821ae_read_bt_coexist_info_from_hwpg(hw,(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U),(u8 *)(& hwinfo));
  }
  
#line 3209 
  _rtl8821ae_read_rfe_type(hw,(u8 *)(& hwinfo),(_Bool)((unsigned int)rtlefuse->autoload_failflag != 0U));
  
#line 3211 
  rtlefuse->board_type = (unsigned char)0U;
  
#line 3212 
  if ((unsigned int)rtlhal->external_lna_2g != 0U) 
#line 3213 
                                                   rtlefuse->board_type = (unsigned char)((unsigned int)rtlefuse->board_type | 16U); else ;
  
#line 3214 
  if ((unsigned int)rtlhal->external_lna_5g != 0U) 
#line 3215 
                                                   rtlefuse->board_type = (unsigned char)((unsigned int)rtlefuse->board_type | 128U); else ;
  
#line 3216 
  if ((unsigned int)rtlhal->external_pa_2g != 0U) 
#line 3217 
                                                  rtlefuse->board_type = (unsigned char)((unsigned int)rtlefuse->board_type | 8U); else ;
  
#line 3218 
  if ((unsigned int)rtlhal->external_pa_5g != 0U) 
#line 3219 
                                                  rtlefuse->board_type = (unsigned char)((unsigned int)rtlefuse->board_type | 64U); else ;
  
#line 3221 
  if ((unsigned int)rtlpriv->btcoexist.btc_info.btcoexist == 1U) 
#line 3222 
                                                                 rtlefuse->board_type = (unsigned char)((unsigned int)rtlefuse->board_type | 4U); else ;
  
#line 3224 
  rtlhal->board_type = rtlefuse->board_type;
  
#line 3225 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_25;
    int tmp_26;
    
#line 3225 
    ;
    
#line 3225 
    tmp_25 = preempt_count();
    
#line 3225 
    tmp_26 = preempt_count();
    
#line 3225 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_26 & 2096896UL,tmp_25 != 0,(int)rtlefuse->board_type);
  }
  else ;
  
#line 3228 
  rtlefuse->eeprom_channelplan = (unsigned short)hwinfo[184];
  
#line 3229 
  if ((unsigned int)rtlefuse->eeprom_channelplan == 255U) 
#line 3230 
                                                          rtlefuse->eeprom_channelplan = (unsigned short)127U; else ;
  
#line 3233 
  rtlefuse->channel_plan = (unsigned char)rtlefuse->eeprom_channelplan;
  
#line 3236 
  rtlefuse->crystalcap = hwinfo[185];
  
#line 3237 
  if ((unsigned int)rtlefuse->crystalcap == 255U) 
#line 3238 
                                                  rtlefuse->crystalcap = (unsigned char)32U; else ;
  
#line 3240 
  rtlefuse->eeprom_thermalmeter = hwinfo[186];
  
#line 3241 
  if ((unsigned int)rtlefuse->eeprom_thermalmeter == 255U || (unsigned int)rtlefuse->autoload_failflag != 0U) {
    
#line 3243 
    rtlefuse->apk_thermalmeterignore = (_Bool)1;
    
#line 3244 
    rtlefuse->eeprom_thermalmeter = (unsigned char)255U;
  }
  else ;
  
#line 3247 
  rtlefuse->thermalmeter[0] = rtlefuse->eeprom_thermalmeter;
  
#line 3248 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_27;
    int tmp_28;
    
#line 3248 
    ;
    
#line 3248 
    tmp_27 = preempt_count();
    
#line 3248 
    tmp_28 = preempt_count();
    
#line 3248 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_28 & 2096896UL,tmp_27 != 0,(int)rtlefuse->eeprom_thermalmeter);
  }
  else ;
  
#line 3251 
  if ((unsigned int)rtlefuse->autoload_failflag == 0U) {
    
#line 3252 
    rtlefuse->antenna_div_cfg = (unsigned char)((unsigned int)((unsigned char)((int)hwinfo[193] >> 3)) & 3U);
    
#line 3254 
    if ((unsigned int)hwinfo[193] == 255U) 
#line 3255 
                                           rtlefuse->antenna_div_cfg = (unsigned char)0U; else ;
    
#line 3257 
    if ((unsigned int)rtlpriv->btcoexist.btc_info.btcoexist == 1U && (unsigned int)rtlpriv->btcoexist.btc_info.ant_num == 1U) 
      
#line 3259 
      rtlefuse->antenna_div_cfg = (unsigned char)0U; else ;
    
#line 3261 
    rtlefuse->antenna_div_type = hwinfo[201];
    
#line 3262 
    if ((unsigned int)rtlefuse->antenna_div_type == 255U) 
#line 3263 
                                                          rtlefuse->antenna_div_type = (unsigned char)3U; else ;
  }
  else {
    
#line 3265 
    rtlefuse->antenna_div_cfg = (unsigned char)0U;
    
#line 3266 
    rtlefuse->antenna_div_type = (unsigned char)0U;
  }
  
#line 3269 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_29;
    int tmp_30;
    
#line 3269 
    ;
    
#line 3269 
    ;
    
#line 3269 
    tmp_29 = preempt_count();
    
#line 3269 
    tmp_30 = preempt_count();
    
#line 3269 
    printk("\001","_rtl8821ae_read_adapter_info",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0,(int)rtlefuse->antenna_div_cfg,(int)rtlefuse->antenna_div_type);
  }
  else ;
  
#line 3273 
  pcipriv->ledctl.led_opendrain = (_Bool)1;
  
#line 3275 
  if ((unsigned int)rtlhal->oem_id == 0U) {
    
#line 3276 
    switch ((int)rtlefuse->eeprom_oemid) {
      case 0: 
#line 3277 
      ;
      
#line 3278 
      goto ldv_57156;
      case 4: 
#line 3279 
      ;
      
#line 3280 
      rtlhal->oem_id = (unsigned char)9U;
      
#line 3281 
      goto ldv_57156;
      case 16: 
#line 3282 
      ;
      
#line 3283 
      rtlhal->oem_id = (unsigned char)17U;
      
#line 3284 
      goto ldv_57156;
      case 13: 
#line 3285 
      ;
      
#line 3286 
      rtlhal->oem_id = (unsigned char)19U;
      
#line 3287 
      goto ldv_57156;
      case 254: 
#line 3288 
      ;
      
#line 3289 
      goto ldv_57156;
      default: 
#line 3290 
      ;
      
#line 3291 
      goto ldv_57156;
    }
    ldv_57156: 
#line 3293 
    ;
  }
  else ;
  return_label: 
#line 3295 
                return;
}


#line 3320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_read_eeprom_info(struct ieee80211_hw *hw)
{
  u8 tmp_u1b;
  enum version_8821ae tmp;
  u8 tmp_1;
  
#line 3322 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3323 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 3324 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3325 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3328 
  tmp = _rtl8821ae_read_chip_version(hw);
  
#line 3328 
  rtlhal->version = (unsigned int)tmp;
  
#line 3329 
  tmp_1 = get_rf_type(rtlphy);
  
#line 3329 
  if ((unsigned int)tmp_1 == 0U) 
#line 3330 
                                 rtlpriv->dm.rfpath_rxenable[0] = (_Bool)1;
  else {
    bool tmp_0;
    
#line 3332 
    tmp_0 = (_Bool)1;
    
#line 3332 
    rtlpriv->dm.rfpath_rxenable[1] = tmp_0;
    
#line 3332 
    rtlpriv->dm.rfpath_rxenable[0] = tmp_0;
  }
  
#line 3334 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 3334 
    ;
    
#line 3334 
    tmp_2 = preempt_count();
    
#line 3334 
    tmp_3 = preempt_count();
    
#line 3334 
    printk("\001","rtl8821ae_read_eeprom_info",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,rtlhal->version);
  }
  else ;
  
#line 3337 
  tmp_u1b = rtl_read_byte(rtlpriv,10U);
  
#line 3338 
  if (((unsigned long)tmp_u1b & 16UL) != 0UL) {
    
#line 3339 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 3339 
      tmp_4 = preempt_count();
      
#line 3339 
      tmp_5 = preempt_count();
      
#line 3339 
      printk("\001","rtl8821ae_read_eeprom_info",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
    }
    else ;
    
#line 3340 
    rtlefuse->epromtype = (short)0;
  }
  else {
    
#line 3342 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 3342 
      tmp_6 = preempt_count();
      
#line 3342 
      tmp_7 = preempt_count();
      
#line 3342 
      printk("\001","rtl8821ae_read_eeprom_info",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0);
    }
    else ;
    
#line 3343 
    rtlefuse->epromtype = (short)2;
  }
  
#line 3346 
  if (((unsigned long)tmp_u1b & 32UL) != 0UL) {
    
#line 3347 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 3347 
      tmp_8 = preempt_count();
      
#line 3347 
      tmp_9 = preempt_count();
      
#line 3347 
      printk("\001","rtl8821ae_read_eeprom_info",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
    }
    else ;
    
#line 3348 
    rtlefuse->autoload_failflag = (unsigned char)0U;
    
#line 3349 
    _rtl8821ae_read_adapter_info(hw,(_Bool)0);
  }
  else 
    
#line 3351 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_10;
      int tmp_11;
      
#line 3351 
      tmp_10 = preempt_count();
      
#line 3351 
      tmp_11 = preempt_count();
      
#line 3351 
      printk("\001","rtl8821ae_read_eeprom_info",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0);
    }
    else ;
  
#line 3352 
  return;
}


#line 3357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void rtl8821ae_update_hal_rate_table(struct ieee80211_hw *hw, struct ieee80211_sta *sta)
{
  u32 ratr_value;
  u16 shortgi_rate;
  u32 tmp_ratr_value;
  
#line 3360 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3361 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3362 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 3363 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3365 
  u8 ratr_index = (unsigned char)0U;
  
#line 3366 
  u8 b_nmode = mac->ht_enable;
  
#line 3367 
  u8 mimo_ps = (unsigned char)1U;
  
#line 3370 
  u8 curtxbw_40mhz = mac->bw_40;
  
#line 3371 
  u8 b_curshortgi_40mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 6)) & 1U);
  
#line 3373 
  u8 b_curshortgi_20mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 5)) & 1U);
  
#line 3375 
  enum wireless_mode wirelessmode = (enum wireless_mode)mac->mode;
  
#line 3377 
  if (rtlhal->current_bandtype == (unsigned int)BAND_ON_5G) 
#line 3378 
                                                            ratr_value = sta->supp_rates[1] << 4; else 
                                                                    
#line 3380 
                                                                    ratr_value = sta->supp_rates[0];
  
#line 3381 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 3382 
                                                         ratr_value = 4095U; else ;
  
#line 3383 
  ratr_value = (unsigned int)(((int)sta->ht_cap.mcs.rx_mask[1] << 20) | ((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | ratr_value;
  
#line 3385 
  switch ((unsigned int)wirelessmode) {
    case (unsigned int)2: 
#line 3386 
    ;
    
#line 3387 
    if ((ratr_value & 12U) != 0U) 
#line 3388 
                                  ratr_value &= 13U; else 
#line 3390 
                                                          ratr_value &= 15U;
    
#line 3391 
    goto ldv_57190;
    case (unsigned int)4: 
#line 3392 
    ;
    
#line 3393 
    ratr_value &= 4085U;
    
#line 3394 
    goto ldv_57190;
    case (unsigned int)16: 
#line 3395 
    ;
    case (unsigned int)32: 
#line 3396 
    ;
    
#line 3397 
    b_nmode = (unsigned char)1U;
    
#line 3398 
    if ((unsigned int)mimo_ps == 2U) 
#line 3399 
                                     ratr_value &= 520197U;
    else {
      u32 ratr_mask;
      u8 tmp;
      
#line 3403 
      tmp = get_rf_type(rtlphy);
      
#line 3403 
      if ((unsigned int)tmp == 1U) 
#line 3403 
                                   goto _LOR;
      else {
        u8 tmp_0;
        
#line 3403 
        tmp_0 = get_rf_type(rtlphy);
        
#line 3403 
        if ((unsigned int)tmp_0 == 0U) _LOR: 
#line 3405 
                                             ratr_mask = 1044485U; else 
                                                                    
#line 3407 
                                                                    ratr_mask = 252702725U;
      }
      
#line 3409 
      ratr_value &= ratr_mask;
    }
    
#line 3411 
    goto ldv_57190;
    default: 
#line 3412 
    ;
    
#line 3413 
    if ((unsigned int)rtlphy->rf_type == 1U) 
#line 3414 
                                             ratr_value &= 1044735U; else 
                                                                    
#line 3416 
                                                                    ratr_value &= 252702975U;
    
#line 3418 
    goto ldv_57190;
  }
  ldv_57190: 
#line 3421 
  ;
  
#line 3421 
  if (((((unsigned int)rtlpriv->btcoexist.bt_coexistence != 0U && (unsigned int)rtlpriv->btcoexist.bt_coexist_type == 3U) && (unsigned int)rtlpriv->btcoexist.bt_cur_state != 0U) && (unsigned int)rtlpriv->btcoexist.bt_ant_isolation != 0U) && ((unsigned int)rtlpriv->btcoexist.bt_service == 0U || (unsigned int)rtlpriv->btcoexist.bt_service == 7U)) 
    
#line 3427 
    ratr_value &= 268423104U; else 
#line 3429 
                                   ratr_value &= 268435455U;
  
#line 3431 
  if ((unsigned int)b_nmode != 0U && (((unsigned int)curtxbw_40mhz != 0U && (unsigned int)b_curshortgi_40mhz != 0U) || ((unsigned int)curtxbw_40mhz == 0U && (unsigned int)b_curshortgi_20mhz != 0U))) {
    
#line 3434 
    ratr_value |= 268435456U;
    
#line 3435 
    tmp_ratr_value = ratr_value >> 12;
    
#line 3437 
    shortgi_rate = (unsigned short)15U;
    
#line 3437 
    goto ldv_57198;
    ldv_57197: 
#line 3438 
    ;
    
#line 3438 
    if (((unsigned int)(1 << (int)shortgi_rate) & tmp_ratr_value) != 0U) 
      
#line 3439 
      goto ldv_57196; else ;
    
#line 3437 
    shortgi_rate = (u16)((int)shortgi_rate - 1);
    ldv_57198: 
#line 3438 
    ;
    
#line 3437 
    if ((unsigned int)shortgi_rate != 0U) 
#line 3439 
                                          goto ldv_57197; else 
#line 3442 
                                                               goto ldv_57196;
    ldv_57196: 
#line 3443 
    ;
    
#line 3442 
    shortgi_rate = (unsigned short)(((((int)shortgi_rate << 12) | ((int)shortgi_rate << 8)) | ((int)shortgi_rate << 4)) | (int)shortgi_rate);
  }
  else ;
  
#line 3446 
  rtl_write_dword(rtlpriv,(unsigned int)(((int)ratr_index + 273) * 4),ratr_value);
  
#line 3448 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4194304ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    u32 tmp_1;
    int tmp_2;
    int tmp_3;
    
#line 3448 
    tmp_1 = rtl_read_dword(rtlpriv,1092U);
    
#line 3448 
    tmp_2 = preempt_count();
    
#line 3448 
    tmp_3 = preempt_count();
    
#line 3448 
    printk("\001","rtl8821ae_update_hal_rate_table",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,tmp_1);
  }
  else ;
  
#line 3449 
  return;
}


#line 3452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_mrate_idx_to_arfr_id(struct ieee80211_hw *hw, u8 rate_index, enum wireless_mode wirelessmode)
{
  
#line 3456 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3457 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3458 
  u8 ret = (unsigned char)0U;
  
#line 3459 
  switch ((int)rate_index) {
    case 0: 
#line 3460 
    ;
    
#line 3461 
    if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3462 
                                             ret = (unsigned char)1U; else 
                                                                    
#line 3464 
                                                                    ret = (unsigned char)0U;
    
#line 3465 
    goto ldv_57209;
    case 3: 
#line 3466 
    ;
    case 1: 
#line 3467 
    ;
    
#line 3468 
    if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3469 
                                             ret = (unsigned char)5U; else 
                                                                    
#line 3471 
                                                                    ret = (unsigned char)4U;
    
#line 3472 
    goto ldv_57209;
    case 2: 
#line 3473 
    ;
    
#line 3474 
    if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3475 
                                             ret = (unsigned char)3U; else 
                                                                    
#line 3477 
                                                                    ret = (unsigned char)2U;
    
#line 3478 
    goto ldv_57209;
    case 4: 
#line 3479 
    ;
    
#line 3480 
    ret = (unsigned char)6U;
    
#line 3481 
    goto ldv_57209;
    case 5: 
#line 3482 
    ;
    
#line 3483 
    ret = (unsigned char)7U;
    
#line 3484 
    goto ldv_57209;
    case 6: 
#line 3485 
    ;
    
#line 3486 
    ret = (unsigned char)8U;
    
#line 3487 
    goto ldv_57209;
    case 7: 
#line 3488 
    ;
    
#line 3489 
    if ((wirelessmode == (unsigned int)WIRELESS_MODE_B || wirelessmode == (unsigned int)WIRELESS_MODE_G) || (wirelessmode == (unsigned int)WIRELESS_MODE_N_24G || wirelessmode == (unsigned int)WIRELESS_MODE_AC_24G)) 
      
#line 3493 
      ret = (unsigned char)6U; else 
#line 3495 
                                    ret = (unsigned char)7U;
    case 8: 
#line 3496 
    ;
    
#line 3497 
    if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3498 
                                             ret = (unsigned char)10U; else 
                                                                    
#line 3500 
                                                                    ret = (unsigned char)9U;
    
#line 3501 
    goto ldv_57209;
    case 9: 
#line 3502 
    ;
    
#line 3503 
    if ((unsigned int)rtlphy->current_chan_bw == 2U) 
      
#line 3504 
      if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3505 
                                               ret = (unsigned char)10U; else 
                                                                    
#line 3507 
                                                                    ret = (unsigned char)9U;
    else 
      
#line 3509 
      if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3510 
                                               ret = (unsigned char)11U; else 
                                                                    
#line 3512 
                                                                    ret = (unsigned char)12U;
    
#line 3514 
    goto ldv_57209;
    default: 
#line 3515 
    ;
    
#line 3516 
    ret = (unsigned char)0U;
    
#line 3516 
    goto ldv_57209;
  }
  ldv_57209: 
#line 3518 
  ;
  
#line 3518 
  return ret;
}


#line 3521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u32 _rtl8821ae_rate_to_bitmap_2ssvht(__le16 vht_rate)
{
  u8 i;
  u8 j;
  u8 tmp_rate;
  
#line 3524 
  u32 rate_bitmap = 0U;
  
#line 3526 
  j = (unsigned char)0U;
  
#line 3526 
  i = j;
  
#line 3526 
  goto ldv_57233;
  ldv_57232: 
#line 3527 
  ;
  
#line 3527 
  tmp_rate = (unsigned char)((unsigned int)((unsigned char)((int)vht_rate >> (int)i)) & 3U);
  
#line 3529 
  switch ((int)tmp_rate) {
    case 2: 
#line 3530 
    ;
    
#line 3531 
    rate_bitmap = (unsigned int)(1023 << (int)j) | rate_bitmap;
    
#line 3532 
    goto ldv_57228;
    case 1: 
#line 3533 
    ;
    
#line 3534 
    rate_bitmap = (unsigned int)(511 << (int)j) | rate_bitmap;
    
#line 3535 
    goto ldv_57228;
    case 0: 
#line 3536 
    ;
    
#line 3537 
    rate_bitmap = (unsigned int)(255 << (int)j) | rate_bitmap;
    
#line 3538 
    goto ldv_57228;
    default: 
#line 3539 
    ;
    
#line 3540 
    goto ldv_57228;
  }
  ldv_57228: 
#line 3542 
  ;
  
#line 3526 
  i = (unsigned char)((unsigned int)i + 2U);
  
#line 3526 
  j = (unsigned char)((unsigned int)j + 10U);
  ldv_57233: 
#line 3527 
  ;
  
#line 3526 
  if ((unsigned int)i <= 3U) 
#line 3528 
                             goto ldv_57232; else 
#line 3531 
                                                  goto ldv_57234;
  ldv_57234: 
#line 3532 
  ;
  
#line 3544 
  return rate_bitmap;
}


#line 3547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u32 _rtl8821ae_set_ra_vht_ratr_bitmap(struct ieee80211_hw *hw, enum wireless_mode wirelessmode, u32 ratr_bitmap)
{
  
#line 3551 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3552 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3553 
  u32 ret_bitmap = ratr_bitmap;
  
#line 3555 
  if ((unsigned int)rtlphy->current_chan_bw + 255U <= 1U) 
#line 3557 
                                                          ret_bitmap = ratr_bitmap;
  else 
    
#line 3558 
    if (wirelessmode == (unsigned int)WIRELESS_MODE_AC_5G || wirelessmode == (unsigned int)WIRELESS_MODE_AC_24G) 
      
#line 3560 
      if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3561 
                                               ret_bitmap = ratr_bitmap & 4292870143U; else 
                                                                    
#line 3563 
                                                                    ret_bitmap = ratr_bitmap & 2145386495U;
    else ;
  
#line 3566 
  return ret_bitmap;
}


#line 3569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_get_vht_eni(enum wireless_mode wirelessmode, u32 ratr_bitmap)
{
  u8 __retres;
  
#line 3572 
  u8 ret = (unsigned char)0U;
  
#line 3573 
  if (wirelessmode <= (unsigned int)15) 
#line 3574 
                                        ret = (unsigned char)0U;
  else 
    
#line 3575 
    if (wirelessmode == (unsigned int)WIRELESS_MODE_AC_24G) 
      
#line 3576 
      if ((ratr_bitmap & 4293918720U) != 0U) 
#line 3577 
                                             ret = (unsigned char)3U; else 
                                                                    
#line 3579 
                                                                    ret = (unsigned char)2U;
    else 
      
#line 3580 
      if (wirelessmode == (unsigned int)WIRELESS_MODE_AC_5G) 
#line 3581 
                                                             ret = (unsigned char)1U; else ;
  
#line 3584 
  __retres = (unsigned char)((int)ret << 4U);
  
#line 3584 
  return __retres;
}


#line 3587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_get_ra_ldpc(struct ieee80211_hw *hw, u8 mac_id, struct rtl_sta_info *sta_entry, enum wireless_mode wirelessmode)
{
  u8 __retres;
  
#line 3591 
  u8 b_ldpc = (unsigned char)0U;
  
#line 3593 
  __retres = (unsigned char)((int)b_ldpc << 2U);
  
#line 3593 
  return __retres;
}


#line 3596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static u8 _rtl8821ae_get_ra_rftype(struct ieee80211_hw *hw, enum wireless_mode wirelessmode, u32 ratr_bitmap)
{
  
#line 3600 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3601 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3602 
  u8 rf_type = (unsigned char)0U;
  
#line 3604 
  if ((unsigned int)rtlphy->rf_type == 0U) 
#line 3605 
                                           rf_type = (unsigned char)0U;
  else 
    
#line 3606 
    if ((wirelessmode == (unsigned int)WIRELESS_MODE_AC_5G || wirelessmode == (unsigned int)WIRELESS_MODE_AC_24G) || wirelessmode == (unsigned int)WIRELESS_MODE_AC_ONLY) {
      
#line 3609 
      if ((ratr_bitmap & 4290772992U) != 0U) 
#line 3610 
                                             rf_type = (unsigned char)2U; else ;
    }
    else 
      
#line 3611 
      if (wirelessmode == (unsigned int)WIRELESS_MODE_N_5G || wirelessmode == (unsigned int)WIRELESS_MODE_N_24G) {
        
#line 3613 
        if ((ratr_bitmap & 4293918720U) != 0U) 
#line 3614 
                                               rf_type = (unsigned char)2U; else ;
      }
      else ;
  
#line 3617 
  return rf_type;
}


#line 3620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static bool _rtl8821ae_get_ra_shortgi(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 mac_id)
{
  
#line 3623 
  bool b_short_gi = (_Bool)0;
  
#line 3624 
  u8 b_curshortgi_40mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 6)) & 1U);
  
#line 3626 
  u8 b_curshortgi_20mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 5)) & 1U);
  
#line 3628 
  u8 b_curshortgi_80mhz = (unsigned char)0U;
  
#line 3629 
  b_curshortgi_80mhz = (unsigned char)((unsigned int)((unsigned char)(sta->vht_cap.cap >> 5)) & 1U);
  
#line 3632 
  if ((unsigned int)mac_id == 1U) 
#line 3633 
                                  b_short_gi = (_Bool)0; else ;
  
#line 3635 
  if (((unsigned int)b_curshortgi_40mhz != 0U || (unsigned int)b_curshortgi_80mhz != 0U) || (unsigned int)b_curshortgi_20mhz != 0U) 
    
#line 3637 
    b_short_gi = (_Bool)1; else ;
  
#line 3639 
  return b_short_gi;
}


#line 3642  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
static void rtl8821ae_update_hal_rate_mask(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level)
{
  u32 ratr_bitmap;
  u8 ratr_index;
  u8 rate_mask[7U];
  u8 rf_type;
  int tmp_4;
  u8 tmp_5;
  u8 tmp_6;
  
#line 3645 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3646 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3647 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 3648 
  struct rtl_sta_info *sta_entry = (struct rtl_sta_info *)0;
  
#line 3651 
  enum wireless_mode wirelessmode = WIRELESS_MODE_UNKNOWN;
  
#line 3652 
  u8 curtxbw_40mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 1)) & 1U);
  
#line 3654 
  bool b_shortgi = (_Bool)0;
  
#line 3656 
  u8 macid = (unsigned char)0U;
  
#line 3657 
  u8 mimo_ps = (unsigned char)1U;
  
#line 3660 
  sta_entry = (struct rtl_sta_info *)(& sta->drv_priv);
  
#line 3661 
  wirelessmode = (enum wireless_mode)sta_entry->wireless_mode;
  
#line 3663 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4194304ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3663 
    ;
    
#line 3663 
    tmp = preempt_count();
    
#line 3663 
    tmp_0 = preempt_count();
    
#line 3663 
    printk("\001","rtl8821ae_update_hal_rate_mask",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(unsigned int)wirelessmode);
  }
  else ;
  
#line 3665 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_STATION || mac->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) 
    
#line 3667 
    curtxbw_40mhz = mac->bw_40;
  else 
    
#line 3668 
    if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP || mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
      
#line 3670 
      macid = (unsigned char)((unsigned int)((unsigned char)sta->aid) + 1U); else ;
  
#line 3671 
  if ((wirelessmode == (unsigned int)WIRELESS_MODE_N_5G || wirelessmode == (unsigned int)WIRELESS_MODE_AC_5G) || wirelessmode == (unsigned int)WIRELESS_MODE_A) 
    
#line 3674 
    ratr_bitmap = sta->supp_rates[1] << 4; else 
#line 3676 
                                                ratr_bitmap = sta->supp_rates[0];
  
#line 3678 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 3679 
                                                         ratr_bitmap = 4095U; else ;
  
#line 3681 
  if (wirelessmode == (unsigned int)WIRELESS_MODE_N_24G || wirelessmode == (unsigned int)WIRELESS_MODE_N_5G) 
    
#line 3683 
    ratr_bitmap = (unsigned int)(((int)sta->ht_cap.mcs.rx_mask[1] << 20) | ((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | ratr_bitmap;
  else 
    
#line 3685 
    if ((wirelessmode == (unsigned int)WIRELESS_MODE_AC_24G || wirelessmode == (unsigned int)WIRELESS_MODE_AC_5G) || wirelessmode == (unsigned int)WIRELESS_MODE_AC_ONLY) {
      u32 tmp_1;
      
#line 3688 
      tmp_1 = _rtl8821ae_rate_to_bitmap_2ssvht((unsigned short)((int)sta->vht_cap.vht_mcs.rx_mcs_map));
      
#line 3689 
      ratr_bitmap = (tmp_1 << 12) | ratr_bitmap;
    }
    else ;
  
#line 3691 
  b_shortgi = _rtl8821ae_get_ra_shortgi(hw,sta,(unsigned char)((int)macid));
  
#line 3692 
  rf_type = _rtl8821ae_get_ra_rftype(hw,wirelessmode,ratr_bitmap);
  
#line 3695 
  switch ((unsigned int)wirelessmode) {
    case (unsigned int)2: 
#line 3696 
    ;
    
#line 3697 
    ratr_index = (unsigned char)6U;
    
#line 3698 
    if ((ratr_bitmap & 12U) != 0U) 
#line 3699 
                                   ratr_bitmap &= 13U; else 
#line 3701 
                                                            ratr_bitmap &= 15U;
    
#line 3702 
    goto ldv_57292;
    case (unsigned int)4: 
#line 3703 
    ;
    
#line 3704 
    ratr_index = (unsigned char)4U;
    
#line 3706 
    if ((unsigned int)rssi_level == 1U) 
#line 3707 
                                        ratr_bitmap &= 3840U;
    else 
      
#line 3708 
      if ((unsigned int)rssi_level == 2U) 
#line 3709 
                                          ratr_bitmap &= 4080U; else 
                                                                  
#line 3711 
                                                                  ratr_bitmap &= 4085U;
    
#line 3712 
    goto ldv_57292;
    case (unsigned int)1: 
#line 3713 
    ;
    
#line 3714 
    ratr_index = (unsigned char)5U;
    
#line 3715 
    ratr_bitmap &= 4080U;
    
#line 3716 
    goto ldv_57292;
    case (unsigned int)16: 
#line 3717 
    ;
    case (unsigned int)32: 
#line 3718 
    ;
    
#line 3719 
    if (wirelessmode == (unsigned int)WIRELESS_MODE_N_24G) 
#line 3720 
                                                           ratr_index = (unsigned char)0U; else 
                                                                    
#line 3722 
                                                                    ratr_index = (unsigned char)1U;
    
#line 3724 
    if ((unsigned int)mimo_ps + 254U <= 1U) 
      
#line 3726 
      if ((unsigned int)rssi_level == 1U) 
#line 3727 
                                          ratr_bitmap &= 983040U;
      else 
        
#line 3728 
        if ((unsigned int)rssi_level == 2U) 
#line 3729 
                                            ratr_bitmap &= 1044480U; else 
                                                                    
#line 3731 
                                                                    ratr_bitmap &= 1044485U;
    else 
      
#line 3733 
      if ((unsigned int)rf_type == 0U) 
        
#line 3734 
        if ((unsigned int)curtxbw_40mhz != 0U) 
          
#line 3735 
          if ((unsigned int)rssi_level == 1U) 
#line 3736 
                                              ratr_bitmap &= 983040U;
          else 
            
#line 3737 
            if ((unsigned int)rssi_level == 2U) 
#line 3738 
                                                ratr_bitmap &= 1044480U; else 
                                                                    
#line 3740 
                                                                    ratr_bitmap &= 1044501U;
        else 
          
#line 3742 
          if ((unsigned int)rssi_level == 1U) 
#line 3743 
                                              ratr_bitmap &= 983040U;
          else 
            
#line 3744 
            if ((unsigned int)rssi_level == 2U) 
#line 3745 
                                                ratr_bitmap &= 1044480U; else 
                                                                    
#line 3747 
                                                                    ratr_bitmap &= 1044485U;
      else 
        
#line 3750 
        if ((unsigned int)curtxbw_40mhz != 0U) 
          
#line 3751 
          if ((unsigned int)rssi_level == 1U) 
#line 3752 
                                              ratr_bitmap &= 268369920U;
          else 
            
#line 3753 
            if ((unsigned int)rssi_level == 2U) 
#line 3754 
                                                ratr_bitmap &= 268431360U; else 
                                                                    
#line 3756 
                                                                    ratr_bitmap &= 268431381U;
        else 
          
#line 3758 
          if ((unsigned int)rssi_level == 1U) 
#line 3759 
                                              ratr_bitmap &= 268369920U;
          else 
            
#line 3760 
            if ((unsigned int)rssi_level == 2U) 
#line 3761 
                                                ratr_bitmap &= 268431360U; else 
                                                                    
#line 3763 
                                                                    ratr_bitmap &= 268431365U;
    
#line 3767 
    goto ldv_57292;
    case (unsigned int)128: 
#line 3769 
    ;
    
#line 3770 
    ratr_index = (unsigned char)9U;
    
#line 3771 
    if ((unsigned int)rssi_level == 1U) 
#line 3772 
                                        ratr_bitmap &= 4231987200U;
    else 
      
#line 3773 
      if ((unsigned int)rssi_level == 2U) 
#line 3774 
                                          ratr_bitmap &= 4294963200U; else 
                                                                    
#line 3776 
                                                                    ratr_bitmap = ratr_bitmap;
    
#line 3777 
    goto ldv_57292;
    case (unsigned int)64: 
#line 3779 
    ;
    
#line 3780 
    ratr_index = (unsigned char)8U;
    
#line 3782 
    if ((unsigned int)rf_type == 0U) 
      
#line 3783 
      if ((unsigned int)rssi_level == 1U) 
#line 3784 
                                          ratr_bitmap &= 4161536U;
      else 
        
#line 3785 
        if ((unsigned int)rssi_level == 2U) 
#line 3786 
                                            ratr_bitmap &= 4190208U; else 
                                                                    
#line 3788 
                                                                    ratr_bitmap &= 4190224U;
    else 
      
#line 3790 
      if ((unsigned int)rssi_level == 1U) 
#line 3791 
                                          ratr_bitmap &= 4265574400U;
      else 
        
#line 3792 
        if ((unsigned int)rssi_level == 2U) 
#line 3793 
                                            ratr_bitmap &= 4294963200U; else 
                                                                    
#line 3795 
                                                                    ratr_bitmap &= 4294963216U;
    
#line 3797 
    goto ldv_57292;
    default: 
#line 3799 
    ;
    
#line 3800 
    ratr_index = (unsigned char)0U;
    
#line 3802 
    if ((unsigned int)rf_type == 1U) 
#line 3803 
                                     ratr_bitmap &= 1044735U; else 
#line 3805 
                                                                   ratr_bitmap &= 261091583U;
    
#line 3806 
    goto ldv_57292;
  }
  ldv_57292: 
#line 3809 
  ;
  
#line 3809 
  ratr_index = _rtl8821ae_mrate_idx_to_arfr_id(hw,(unsigned char)((int)ratr_index),wirelessmode);
  
#line 3810 
  sta_entry->ratr_index = ratr_index;
  
#line 3811 
  ratr_bitmap = _rtl8821ae_set_ra_vht_ratr_bitmap(hw,wirelessmode,ratr_bitmap);
  
#line 3814 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4194304ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 3814 
    ;
    
#line 3814 
    tmp_2 = preempt_count();
    
#line 3814 
    tmp_3 = preempt_count();
    
#line 3814 
    printk("\001","rtl8821ae_update_hal_rate_mask",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,ratr_bitmap);
  }
  else ;
  
#line 3820 
  rate_mask[0] = macid;
  
#line 3821 
  if ((int)b_shortgi != 0) 
#line 3821 
                           tmp_4 = -128; else 
#line 3821 
                                              tmp_4 = 0;
  
#line 3821 
  rate_mask[1] = (unsigned char)(tmp_4 | (int)ratr_index);
  
#line 3823 
  tmp_5 = _rtl8821ae_get_vht_eni(wirelessmode,ratr_bitmap);
  
#line 3824 
  tmp_6 = _rtl8821ae_get_ra_ldpc(hw,(unsigned char)((int)macid),sta_entry,wirelessmode);
  
#line 3822 
  rate_mask[2] = (unsigned char)(((int)rtlphy->current_chan_bw | (int)tmp_5) | (int)tmp_6);
  
#line 3826 
  rate_mask[3] = (unsigned char)ratr_bitmap;
  
#line 3827 
  rate_mask[4] = (unsigned char)(ratr_bitmap >> 8);
  
#line 3828 
  rate_mask[5] = (unsigned char)(ratr_bitmap >> 16);
  
#line 3829 
  rate_mask[6] = (unsigned char)(ratr_bitmap >> 24);
  
#line 3831 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4194304ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp_7;
    int tmp_8;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    ;
    
#line 3831 
    tmp_7 = preempt_count();
    
#line 3831 
    tmp_8 = preempt_count();
    
#line 3831 
    printk("\001","rtl8821ae_update_hal_rate_mask",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,(int)ratr_index,ratr_bitmap,(int)rate_mask[0],(int)rate_mask[1],(int)rate_mask[2],(int)rate_mask[3],(int)rate_mask[4],(int)rate_mask[5],(int)rate_mask[6]);
  }
  else ;
  
#line 3838 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)64,7U,(u8 *)(& rate_mask));
  
#line 3839 
  _rtl8821ae_set_bcn_ctrl_reg(hw,(unsigned char)8,(unsigned char)0);
  
#line 3840 
  return;
}


#line 3842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_update_hal_rate_tbl(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level)
{
  
#line 3845 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3846 
  if ((int)rtlpriv->dm.useramask != 0) 
#line 3847 
                                       rtl8821ae_update_hal_rate_mask(hw,sta,(unsigned char)((int)rssi_level)); else 
                                                                    
#line 3851 
                                                                    rtl8821ae_update_hal_rate_table(hw,sta);
  
#line 3852 
  return;
}


#line 3854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_update_channel_access_setting(struct ieee80211_hw *hw)
{
  u8 sifs_timer;
  u8 r2t_sifs;
  
#line 3856 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3857 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 3858 
  u8 wireless_mode = (unsigned char)mac->mode;
  
#line 3861 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)18,& mac->slot_time);
  
#line 3863 
  if ((unsigned int)wireless_mode == 4U) 
#line 3864 
                                         sifs_timer = (unsigned char)10U; else 
                                                                    
#line 3866 
                                                                    sifs_timer = (unsigned char)14U;
  
#line 3867 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)14,& sifs_timer);
  
#line 3869 
  r2t_sifs = (unsigned char)10U;
  
#line 3871 
  if (((unsigned int)wireless_mode == 64U && ((unsigned long)mac->vht_ldpc_cap & 1UL) != 0UL) && ((unsigned long)mac->vht_stbc_cap & 1UL) != 0UL) 
    
#line 3874 
    if (mac->vendor == 5U) 
#line 3875 
                           r2t_sifs = (unsigned char)8U; else 
#line 3877 
                                                              r2t_sifs = (unsigned char)10U;
  else 
    
#line 3878 
    if ((unsigned int)wireless_mode == 64U) 
#line 3879 
                                            r2t_sifs = (unsigned char)10U; else ;
  
#line 3882 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)15,& r2t_sifs);
  
#line 3883 
  return;
}


#line 3885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
bool rtl8821ae_gpio_radio_on_off_checking(struct ieee80211_hw *hw, u8 *valid)
{
  bool __retres;
  enum rf_pwrstate e_rfpowerstate_toset;
  enum rf_pwrstate cur_rfstate;
  u8 tmp;
  
#line 3887 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3888 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 3889 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3891 
  u8 u1tmp = (unsigned char)0U;
  
#line 3892 
  bool b_actuallyset = (_Bool)0;
  
#line 3894 
  if ((int)rtlpriv->rtlhal.being_init_adapter != 0) {
    
#line 3895 
    __retres = (_Bool)0;
    
#line 3895 
    goto return_label;
  }
  else ;
  
#line 3897 
  if ((int)ppsc->swrf_processing != 0) {
    
#line 3898 
    __retres = (_Bool)0;
    
#line 3898 
    goto return_label;
  }
  else ;
  
#line 3900 
  ldv_spin_lock_91(& rtlpriv->locks.rf_ps_lock);
  
#line 3901 
  if ((int)ppsc->rfchange_inprogress != 0) {
    
#line 3902 
    ldv_spin_unlock_92(& rtlpriv->locks.rf_ps_lock);
    
#line 3903 
    __retres = (_Bool)0;
    
#line 3903 
    goto return_label;
  }
  else {
    
#line 3905 
    ppsc->rfchange_inprogress = (_Bool)1;
    
#line 3906 
    ldv_spin_unlock_93(& rtlpriv->locks.rf_ps_lock);
  }
  
#line 3909 
  cur_rfstate = ppsc->rfpwr_state;
  
#line 3913 
  tmp = rtl_read_byte(rtlpriv,98U);
  
#line 3911 
  ;
  
#line 3911 
  rtl_write_byte(rtlpriv,98U,(unsigned char)((int)tmp & 253));
  
#line 3915 
  u1tmp = rtl_read_byte(rtlpriv,96U);
  
#line 3917 
  if (rtlphy->polarity_ctl != (unsigned int)RT_POLARITY_LOW_ACT) 
#line 3918 
                                                                 e_rfpowerstate_toset = (enum rf_pwrstate)((int)u1tmp & 2);
  else {
    int tmp_0;
    
#line 3920 
    if (((unsigned long)u1tmp & 2UL) != 0UL) 
#line 3920 
                                             tmp_0 = 0; else 
#line 3920 
                                                             tmp_0 = 2;
    
#line 3920 
    e_rfpowerstate_toset = (enum rf_pwrstate)tmp_0;
  }
  
#line 3922 
  if ((int)ppsc->hwradiooff != 0 && e_rfpowerstate_toset == (unsigned int)ERFON) {
    
#line 3923 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 3923 
      tmp_1 = preempt_count();
      
#line 3923 
      tmp_2 = preempt_count();
      
#line 3923 
      printk("\001","rtl8821ae_gpio_radio_on_off_checking",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 3926 
    e_rfpowerstate_toset = ERFON;
    
#line 3927 
    ppsc->hwradiooff = (_Bool)0;
    
#line 3928 
    b_actuallyset = (_Bool)1;
  }
  else 
    
#line 3929 
    if (! ppsc->hwradiooff && e_rfpowerstate_toset == (unsigned int)ERFOFF) {
      
#line 3931 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 3931 
        tmp_3 = preempt_count();
        
#line 3931 
        tmp_4 = preempt_count();
        
#line 3931 
        printk("\001","rtl8821ae_gpio_radio_on_off_checking",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
      }
      else ;
      
#line 3934 
      e_rfpowerstate_toset = ERFOFF;
      
#line 3935 
      ppsc->hwradiooff = (_Bool)1;
      
#line 3936 
      b_actuallyset = (_Bool)1;
    }
    else ;
  
#line 3939 
  if ((int)b_actuallyset != 0) {
    
#line 3940 
    ldv_spin_lock_94(& rtlpriv->locks.rf_ps_lock);
    
#line 3941 
    ppsc->rfchange_inprogress = (_Bool)0;
    
#line 3942 
    ldv_spin_unlock_95(& rtlpriv->locks.rf_ps_lock);
  }
  else {
    
#line 3944 
    if (((unsigned long)ppsc->reg_rfps_level & 8UL) != 0UL) 
#line 3945 
                                                            ppsc->cur_ps_level |= 8U; else ;
    
#line 3947 
    ldv_spin_lock_96(& rtlpriv->locks.rf_ps_lock);
    
#line 3948 
    ppsc->rfchange_inprogress = (_Bool)0;
    
#line 3949 
    ldv_spin_unlock_97(& rtlpriv->locks.rf_ps_lock);
  }
  
#line 3952 
  *valid = (unsigned char)1U;
  
#line 3953 
  __retres = (_Bool)(! ((int)ppsc->hwradiooff != 0));
  return_label: 
#line 3953 
                return __retres;
}


#line 3956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_set_key(struct ieee80211_hw *hw, u32 key_index, u8 *p_macaddr, bool is_group, u8 enc_algo, bool is_wepkey, bool clear_all)
{
  
#line 3960 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3961 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 3962 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 3963 
  u8 *macaddr = p_macaddr;
  
#line 3964 
  u32 entry_id = 0U;
  
#line 3965 
  bool is_pairwise = (_Bool)0;
  
#line 3967 
  u8 cam_const_addr[4U][6U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)2U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)3U}};
  
#line 3973 
  u8 cam_const_broad[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
  
#line 3977 
  if ((int)clear_all != 0) {
    
#line 3978 
    u8 idx = (unsigned char)0U;
    
#line 3979 
    u8 cam_offset = (unsigned char)0U;
    
#line 3980 
    u8 clear_number = (unsigned char)5U;
    
#line 3982 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp;
      int tmp_0;
      
#line 3982 
      tmp = preempt_count();
      
#line 3982 
      tmp_0 = preempt_count();
      
#line 3982 
      printk("\001","rtl8821ae_set_key",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 3984 
    idx = (unsigned char)0U;
    
#line 3984 
    goto ldv_57348;
    ldv_57347: 
#line 3985 
    ;
    
#line 3985 
    rtl_cam_mark_invalid(hw,(unsigned char)((int)cam_offset + (int)idx));
    
#line 3986 
    rtl_cam_empty_entry(hw,(unsigned char)((int)cam_offset + (int)idx));
    
#line 3988 
    if ((unsigned int)idx <= 4U) {
      
#line 3989 
      memset((void *)(& rtlpriv->sec.key_buf[(int)idx]),0,61UL);
      
#line 3991 
      rtlpriv->sec.key_len[(int)idx] = (unsigned char)0U;
    }
    else ;
    
#line 3984 
    idx = (u8)((int)idx + 1);
    ldv_57348: 
#line 3985 
    ;
    
#line 3984 
    if ((int)idx < (int)clear_number) 
#line 3986 
                                      goto ldv_57347; else 
#line 3989 
                                                           goto ldv_57349;
    ldv_57349: 
#line 3990 
    ;
  }
  else {
    
#line 3995 
    switch ((int)enc_algo) {
      case 1: 
#line 3996 
      ;
      
#line 3997 
      enc_algo = (unsigned char)1U;
      
#line 3998 
      goto ldv_57351;
      case 5: 
#line 3999 
      ;
      
#line 4000 
      enc_algo = (unsigned char)5U;
      
#line 4001 
      goto ldv_57351;
      case 2: 
#line 4002 
      ;
      
#line 4003 
      enc_algo = (unsigned char)2U;
      
#line 4004 
      goto ldv_57351;
      case 4: 
#line 4005 
      ;
      
#line 4006 
      enc_algo = (unsigned char)4U;
      
#line 4007 
      goto ldv_57351;
      default: 
#line 4008 
      ;
      
#line 4009 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 4009 
        tmp_1 = preempt_count();
        
#line 4009 
        tmp_2 = preempt_count();
        
#line 4009 
        printk("\001","rtl8821ae_set_key",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
      }
      else ;
      
#line 4011 
      enc_algo = (unsigned char)2U;
      
#line 4012 
      goto ldv_57351;
    }
    ldv_57351: 
#line 4015 
    ;
    
#line 4015 
    if ((int)is_wepkey != 0 || (int)rtlpriv->sec.use_defaultkey != 0) {
      
#line 4016 
      macaddr = (u8 *)(& cam_const_addr[key_index]);
      
#line 4017 
      entry_id = key_index;
    }
    else 
      
#line 4019 
      if ((int)is_group != 0) {
        
#line 4020 
        macaddr = (u8 *)(& cam_const_broad);
        
#line 4021 
        entry_id = key_index;
      }
      else {
        
#line 4023 
        if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP) {
          u8 tmp_3;
          
#line 4024 
          tmp_3 = rtl_cam_get_free_entry(hw,p_macaddr);
          
#line 4024 
          entry_id = (unsigned int)tmp_3;
          
#line 4025 
          if (entry_id > 31U) {
            
#line 4026 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
              int tmp_4;
              int tmp_5;
              
#line 4026 
              tmp_4 = preempt_count();
              
#line 4026 
              tmp_5 = preempt_count();
              
#line 4026 
              printk("\001","rtl8821ae_set_key",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0);
            }
            else ;
            
#line 4028 
            goto return_label;
          }
          else ;
        }
        else 
#line 4031 
             entry_id = 4U;
        
#line 4034 
        key_index = 0U;
        
#line 4035 
        is_pairwise = (_Bool)1;
      }
    
#line 4039 
    if ((unsigned int)rtlpriv->sec.key_len[key_index] == 0U) {
      
#line 4040 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_6;
        int tmp_7;
        
#line 4040 
        ;
        
#line 4040 
        tmp_6 = preempt_count();
        
#line 4040 
        tmp_7 = preempt_count();
        
#line 4040 
        printk("\001","rtl8821ae_set_key",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,entry_id);
      }
      else ;
      
#line 4043 
      if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP) 
#line 4044 
                                                          rtl_cam_del_entry(hw,p_macaddr); else ;
      
#line 4045 
      rtl_cam_delete_one_entry(hw,p_macaddr,entry_id);
    }
    else {
      
#line 4047 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_8;
        int tmp_9;
        
#line 4047 
        tmp_8 = preempt_count();
        
#line 4047 
        tmp_9 = preempt_count();
        
#line 4047 
        printk("\001","rtl8821ae_set_key",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
      }
      else ;
      
#line 4049 
      if ((int)is_pairwise != 0) {
        
#line 4050 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
          int tmp_10;
          int tmp_11;
          
#line 4050 
          tmp_10 = preempt_count();
          
#line 4050 
          tmp_11 = preempt_count();
          
#line 4050 
          printk("\001","rtl8821ae_set_key",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0);
        }
        else ;
        
#line 4053 
        rtl_cam_add_one_entry(hw,macaddr,key_index,entry_id,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[key_index]));
      }
      else {
        
#line 4058 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 512ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
          int tmp_12;
          int tmp_13;
          
#line 4058 
          tmp_12 = preempt_count();
          
#line 4058 
          tmp_13 = preempt_count();
          
#line 4058 
          printk("\001","rtl8821ae_set_key",(unsigned long)tmp_13 & 2096896UL,tmp_12 != 0);
        }
        else ;
        
#line 4061 
        if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 4062 
                                                               rtl_cam_add_one_entry(hw,(u8 *)(& rtlefuse->dev_addr),0U,4U,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[entry_id])); else ;
        
#line 4072 
        rtl_cam_add_one_entry(hw,macaddr,key_index,entry_id,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[entry_id]));
      }
    }
  }
  return_label: 
#line 4079 
                return;
}


#line 4081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_bt_reg_init(struct ieee80211_hw *hw)
{
  
#line 4083 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4086 
  rtlpriv->btcoexist.reg_bt_iso = (unsigned char)2U;
  
#line 4088 
  rtlpriv->btcoexist.reg_bt_sco = (unsigned char)3U;
  
#line 4090 
  rtlpriv->btcoexist.reg_bt_sco = (unsigned char)0U;
  
#line 4091 
  return;
}


#line 4093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_bt_hw_init(struct ieee80211_hw *hw)
{
  bool tmp;
  
#line 4095 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4097 
  tmp = (*(((rtlpriv->cfg)->ops)->get_btc_status))();
  
#line 4097 
  if ((int)tmp != 0) 
#line 4098 
                     (*((rtlpriv->btcoexist.btc_ops)->btc_init_hw_config))(rtlpriv); else ;
  
#line 4099 
  return;
}


#line 4101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_suspend(struct ieee80211_hw *hw)
{
  
#line 4103 
  return;
}


#line 4105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_resume(struct ieee80211_hw *hw)
{
  
#line 4107 
  return;
}


#line 4110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_allow_all_destaddr(struct ieee80211_hw *hw, bool allow_all_da, bool write_into_reg)
{
  
#line 4113 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4114 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 4116 
  if ((int)allow_all_da != 0) 
#line 4117 
                              rtlpci->receive_config |= 1U; else 
#line 4119 
                                                                 rtlpci->receive_config &= 4294967294U;
  
#line 4121 
  if ((int)write_into_reg != 0) 
#line 4122 
                                rtl_write_dword(rtlpriv,1544U,rtlpci->receive_config); else ;
  
#line 4124 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2097156ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4124 
    ;
    
#line 4124 
    ;
    
#line 4124 
    tmp = preempt_count();
    
#line 4124 
    tmp_0 = preempt_count();
    
#line 4124 
    printk("\001","rtl8821ae_allow_all_destaddr",(unsigned long)tmp_0 & 2096896UL,tmp != 0,rtlpci->receive_config,(int)write_into_reg);
  }
  else ;
  
#line 4125 
  return;
}


#line 4130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/hw.c"
void rtl8821ae_add_wowlan_pattern(struct ieee80211_hw *hw, struct rtl_wow_pattern *rtl_pattern, u8 index)
{
  u16 rxbuf_addr;
  u8 tmp;
  u16 cam_start;
  u16 offset;
  
#line 4134 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4135 
  u32 cam = 0U;
  
#line 4136 
  u8 addr = (unsigned char)0U;
  
#line 4138 
  u8 count = (unsigned char)0U;
  
#line 4145 
  offset = (unsigned short)125U;
  
#line 4147 
  cam_start = (unsigned short)((unsigned int)offset * 128U);
  
#line 4150 
  rtl_write_byte(rtlpriv,262U,(unsigned char)165);
  
#line 4151 
  addr = (unsigned char)0U;
  
#line 4151 
  goto ldv_57395;
  ldv_57394: 
#line 4152 
  ;
  
#line 4162 
  rxbuf_addr = (unsigned short)((((int)cam_start + (int)index * 24) + (int)addr * 4) >> 3);
  
#line 4164 
  rtl_write_word(rtlpriv,320U,(unsigned short)((int)rxbuf_addr));
  
#line 4166 
  if ((unsigned int)addr == 0U) {
    
#line 4167 
    cam = (unsigned int)rtl_pattern->crc | 2147483648U;
    
#line 4169 
    if ((unsigned int)rtl_pattern->type == 0U) 
#line 4170 
                                               cam |= 16777216U;
    else 
      
#line 4171 
      if ((unsigned int)rtl_pattern->type == 1U) 
#line 4172 
                                                 cam |= 33554432U;
      else 
        
#line 4173 
        if ((unsigned int)rtl_pattern->type == 2U) 
#line 4174 
                                                   cam |= 67108864U; else ;
    
#line 4176 
    rtl_write_dword(rtlpriv,324U,cam);
    
#line 4177 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 4177 
      ;
      
#line 4177 
      ;
      
#line 4177 
      tmp_0 = preempt_count();
      
#line 4177 
      tmp_1 = preempt_count();
      
#line 4177 
      printk("\001","rtl8821ae_add_wowlan_pattern",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,(int)addr,324,cam);
    }
    else ;
    
#line 4182 
    rtl_write_word(rtlpriv,322U,(unsigned short)3841);
  }
  else 
    
#line 4183 
    if ((unsigned int)addr == 2U || (unsigned int)addr == 4U) {
      
#line 4184 
      cam = rtl_pattern->mask[(int)addr + -2];
      
#line 4186 
      rtl_write_dword(rtlpriv,324U,cam);
      
#line 4187 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp_2;
        int tmp_3;
        
#line 4187 
        ;
        
#line 4187 
        ;
        
#line 4187 
        tmp_2 = preempt_count();
        
#line 4187 
        tmp_3 = preempt_count();
        
#line 4187 
        printk("\001","rtl8821ae_add_wowlan_pattern",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)addr,324,cam);
      }
      else ;
      
#line 4191 
      rtl_write_word(rtlpriv,322U,(unsigned short)3841);
    }
    else 
      
#line 4192 
      if ((unsigned int)addr == 3U || (unsigned int)addr == 5U) {
        
#line 4193 
        cam = rtl_pattern->mask[(int)addr + -2];
        
#line 4195 
        rtl_write_dword(rtlpriv,328U,cam);
        
#line 4196 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
          int tmp_4;
          int tmp_5;
          
#line 4196 
          ;
          
#line 4196 
          ;
          
#line 4196 
          tmp_4 = preempt_count();
          
#line 4196 
          tmp_5 = preempt_count();
          
#line 4196 
          printk("\001","rtl8821ae_add_wowlan_pattern",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)addr,328,cam);
        }
        else ;
        
#line 4200 
        rtl_write_word(rtlpriv,322U,(unsigned short)61441);
      }
      else ;
  
#line 4203 
  count = (unsigned char)0U;
  ldv_57392: 
#line 4204 
  ;
  
#line 4205 
  tmp = rtl_read_byte(rtlpriv,322U);
  
#line 4206 
  __const_udelay(8590UL);
  
#line 4207 
  count = (u8)((int)count + 1);
  
#line 4208 
  if ((unsigned int)tmp != 0U && (unsigned int)count <= 99U) 
#line 4210 
                                                             goto ldv_57392; else 
                                                                    
#line 4213 
                                                                    goto ldv_57393;
  ldv_57393: 
#line 4214 
  ;
  
#line 4210 
  if ((unsigned int)count > 99U) 
#line 4210 
                                 printk("\001","rtl8821ae_add_wowlan_pattern",(int)tmp); else ;
  
#line 4151 
  addr = (u8)((int)addr + 1);
  ldv_57395: 
#line 4152 
  ;
  
#line 4151 
  if ((unsigned int)addr <= 5U) 
#line 4153 
                                goto ldv_57394; else 
#line 4156 
                                                     goto ldv_57396;
  ldv_57396: 
#line 4157 
  ;
  
#line 4214 
  rtl_write_byte(rtlpriv,262U,(unsigned char)0);
  
#line 4215 
  return;
}


#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 731  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 735 
  ldv_spin_model_lock((char *)"irq_th_lock_of_rtl_locks");
  
#line 737 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 738 
  return;
}


#line 741  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 745 
  ldv_spin_model_unlock((char *)"irq_th_lock_of_rtl_locks");
  
#line 747 
  spin_unlock_irqrestore(lock,flags);
  
#line 748 
  return;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_74_0(spinlock_t *lock)
{
  
#line 755 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 757 
  spin_lock_bh_0(lock);
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock)
{
  
#line 765 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 767 
  spin_unlock_bh_0(lock);
  
#line 768 
  return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_76_0(spinlock_t *lock)
{
  
#line 775 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 777 
  spin_lock_bh_0(lock);
  
#line 778 
  return;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock)
{
  
#line 785 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 787 
  spin_unlock_bh_0(lock);
  
#line 788 
  return;
}


#line 791  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 795 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 797 
  spin_unlock_bh_0(lock);
  
#line 798 
  return;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 805 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 807 
  spin_lock_bh_0(lock);
  
#line 808 
  return;
}


#line 811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 815 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 817 
  spin_unlock_bh_0(lock);
  
#line 818 
  return;
}


#line 821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static int ldv_mod_timer_81(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 825 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 825 
  return tmp;
}


#line 829  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_82(spinlock_t *lock)
{
  
#line 833 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 835 
  spin_lock_bh_0(lock);
  
#line 836 
  return;
}


#line 839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_83(spinlock_t *lock)
{
  
#line 843 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 845 
  spin_unlock_bh_0(lock);
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 853 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 853 
  return tmp;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 861 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 863 
  spin_lock_bh_0(lock);
  
#line 864 
  return;
}


#line 867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 871 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 873 
  spin_unlock_bh_0(lock);
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_bh_87(spinlock_t *lock)
{
  
#line 881 
  ldv_spin_model_lock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 883 
  spin_lock_bh_0(lock);
  
#line 884 
  return;
}


#line 887  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_88(spinlock_t *lock)
{
  
#line 891 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 893 
  spin_unlock_bh_0(lock);
  
#line 894 
  return;
}


#line 897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 901 
  ldv_spin_model_unlock((char *)"fw_ps_lock_of_rtl_locks");
  
#line 903 
  spin_unlock_bh_0(lock);
  
#line 904 
  return;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static int ldv_mod_timer_90(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 911 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 911 
  return tmp;
}


#line 915  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_91(spinlock_t *lock)
{
  
#line 919 
  ldv_spin_model_lock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 921 
  spin_lock_0(lock);
  
#line 922 
  return;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_92(spinlock_t *lock)
{
  
#line 929 
  ldv_spin_model_unlock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 931 
  spin_unlock_0(lock);
  
#line 932 
  return;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_93(spinlock_t *lock)
{
  
#line 939 
  ldv_spin_model_unlock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 941 
  spin_unlock_0(lock);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_94(spinlock_t *lock)
{
  
#line 949 
  ldv_spin_model_lock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 951 
  spin_lock_0(lock);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_95(spinlock_t *lock)
{
  
#line 959 
  ldv_spin_model_unlock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 961 
  spin_unlock_0(lock);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 969 
  ldv_spin_model_lock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 971 
  spin_lock_0(lock);
  
#line 972 
  return;
}


#line 975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_hw.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 979 
  ldv_spin_model_unlock((char *)"rf_ps_lock_of_rtl_locks");
  
#line 981 
  spin_unlock_0(lock);
  
#line 982 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware_nowait(struct module *, bool, char const *, struct device *, gfp_t, void *, void (*)(struct firmware const *, void *));


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/core.h"
void rtl_fw_cb(struct firmware const *, void *);


#line 77 
void rtl_wowlan_fw_cb(struct firmware const *, void *);


#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
static int ldv___pci_register_driver_72(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_73(struct pci_driver *ldv_func_arg1);


#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/pci.h"
int rtl_pci_probe(struct pci_dev *, struct pci_device_id const *);


#line 293 
void rtl_pci_disconnect(struct pci_dev *);


#line 295 
int rtl_pci_suspend(struct device *);


#line 296 
int rtl_pci_resume(struct device *);


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.h"
u32 rtl8821ae_phy_query_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask);


#line 210 
void rtl8821ae_phy_set_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data);


#line 212 
u32 rtl8821ae_phy_query_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask);


#line 215 
void rtl8821ae_phy_set_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data);


#line 228 
void rtl8821ae_phy_scan_operation_backup(struct ieee80211_hw *hw, u8 operation);


#line 231 
void rtl8821ae_phy_set_bw_mode(struct ieee80211_hw *hw, enum nl80211_channel_type ch_type);


#line 234 
u8 rtl8821ae_phy_sw_chnl(struct ieee80211_hw *hw);


#line 247 
bool rtl8821ae_phy_set_rf_power_state(struct ieee80211_hw *hw, enum rf_pwrstate rfpwr_state);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.h"
int rtl8821ae_init_sw_vars(struct ieee80211_hw *hw);


#line 30 
void rtl8821ae_deinit_sw_vars(struct ieee80211_hw *hw);


#line 32 
bool rtl8821ae_get_btc_status(void);


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.h"
void rtl8821ae_tx_fill_desc(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, u8 *pdesc_tx, u8 *txbd, struct ieee80211_tx_info *info, struct ieee80211_sta *sta, struct sk_buff *skb, u8 hw_queue, struct rtl_tcb_desc *ptcb_desc);


#line 604 
bool rtl8821ae_rx_query_desc(struct ieee80211_hw *hw, struct rtl_stats *status, struct ieee80211_rx_status *rx_status, u8 *pdesc, struct sk_buff *skb);


#line 608 
void rtl8821ae_set_desc(struct ieee80211_hw *hw, u8 *pdesc, bool istx, u8 desc_name, u8 *val);


#line 610 
u32 rtl8821ae_get_desc(u8 *pdesc, bool istx, u8 desc_name);


#line 611 
bool rtl8821ae_is_tx_desc_closed(struct ieee80211_hw *hw, u8 hw_queue, u16 index);


#line 613 
void rtl8821ae_tx_polling(struct ieee80211_hw *hw, u8 hw_queue);


#line 614 
void rtl8821ae_tx_fill_cmddesc(struct ieee80211_hw *hw, u8 *pdesc, bool firstseg, bool lastseg, struct sk_buff *skb);


#line 617 
u32 rtl8821ae_rx_command_packet(struct ieee80211_hw *hw, struct rtl_stats status, struct sk_buff *skb);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.h"
void rtl8821ae_init_sw_leds(struct ieee80211_hw *hw);


#line 34 
void rtl8821ae_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/btcoexist/rtl_btc.h"
struct rtl_btc_ops *rtl_btc_get_ops_pointer(void);


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static void rtl8821ae_init_aspm_vars(struct ieee80211_hw *hw)
{
  
#line 46 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 49 
  rtlpci->const_amdpci_aspm = (unsigned char)0U;
  
#line 60 
  rtlpci->const_pci_aspm = (unsigned char)3U;
  
#line 63 
  rtlpci->const_devicepci_aspm_setting = (unsigned char)3U;
  
#line 66 
  rtlpci->const_hostpci_aspm_setting = (unsigned char)2U;
  
#line 76 
  rtlpci->const_hwsw_rfoff_d3 = (unsigned char)0U;
  
#line 85 
  rtlpci->const_support_pciaspm = (unsigned char)1U;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
int rtl8821ae_init_sw_vars(struct ieee80211_hw *hw)
{
  int __retres;
  
#line 91 
  int err = 0;
  
#line 92 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 93 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 94 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 95 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 97 
  rtl8821ae_bt_reg_init(hw);
  
#line 98 
  rtlpci->msi_support = ((rtlpriv->cfg)->mod_params)->msi_support;
  
#line 99 
  rtlpci->int_clear = ((rtlpriv->cfg)->mod_params)->int_clear;
  
#line 100 
  rtlpriv->btcoexist.btc_ops = rtl_btc_get_ops_pointer();
  
#line 102 
  rtlpriv->dm.dm_initialgain_enable = (_Bool)1;
  
#line 103 
  rtlpriv->dm.dm_flag = (unsigned char)0U;
  
#line 104 
  rtlpriv->dm.disable_framebursting = (_Bool)0;
  
#line 105 
  rtlpriv->dm.thermalvalue = (unsigned char)0U;
  
#line 106 
  rtlpci->transmit_config = 50364928U;
  
#line 108 
  mac->ht_enable = (unsigned char)1U;
  
#line 109 
  mac->ht_cur_stbc = (unsigned char)0U;
  
#line 110 
  mac->ht_stbc_cap = (unsigned char)0U;
  
#line 111 
  mac->vht_cur_ldpc = (unsigned char)0U;
  
#line 112 
  mac->vht_ldpc_cap = (unsigned char)0U;
  
#line 113 
  mac->vht_cur_stbc = (unsigned char)0U;
  
#line 114 
  mac->vht_stbc_cap = (unsigned char)0U;
  
#line 116 
  rtlpriv->rtlhal.current_bandtype = BAND_ON_2_4G;
  
#line 118 
  rtlpriv->rtlhal.bandset = BAND_ON_BOTH;
  
#line 119 
  rtlpriv->rtlhal.macphymode = SINGLEMAC_SINGLEPHY;
  
#line 121 
  rtlpci->receive_config = 4093672206U;
  
#line 138 
  rtlpci->irq_mask[0] = 671122687U;
  
#line 153 
  rtlpci->irq_mask[1] = 768U;
  
#line 157 
  rtlpci->sys_irq_mask = 192U;
  
#line 161 
  rtlpriv->psc.wo_wlan_mode = (unsigned char)3U;
  
#line 165 
  rtlpriv->dbg.global_debuglevel = ((rtlpriv->cfg)->mod_params)->debug;
  
#line 167 
  rtlpriv->psc.inactiveps = ((rtlpriv->cfg)->mod_params)->inactiveps;
  
#line 168 
  rtlpriv->psc.swctrl_lps = ((rtlpriv->cfg)->mod_params)->swctrl_lps;
  
#line 169 
  rtlpriv->psc.fwctrl_lps = ((rtlpriv->cfg)->mod_params)->fwctrl_lps;
  
#line 170 
  rtlpci->msi_support = ((rtlpriv->cfg)->mod_params)->msi_support;
  
#line 171 
  rtlpci->msi_support = ((rtlpriv->cfg)->mod_params)->int_clear;
  
#line 172 
  if ((int)((rtlpriv->cfg)->mod_params)->disable_watchdog != 0) 
#line 173 
                                                                printk("\001"); else ;
  
#line 174 
  rtlpriv->psc.reg_fwctrl_lps = (unsigned char)3U;
  
#line 175 
  rtlpriv->psc.reg_max_lps_awakeintvl = (unsigned char)5U;
  
#line 176 
  rtlpci->msi_support = ((rtlpriv->cfg)->mod_params)->msi_support;
  
#line 181 
  rtl8821ae_init_aspm_vars(hw);
  
#line 183 
  if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 1U) 
#line 184 
                                                       rtlpriv->psc.fwctrl_psmode = (unsigned char)1U;
  else 
    
#line 185 
    if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 2U) 
#line 186 
                                                         rtlpriv->psc.fwctrl_psmode = (unsigned char)2U;
    else 
      
#line 187 
      if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 3U) 
#line 188 
                                                           rtlpriv->psc.fwctrl_psmode = (unsigned char)3U; else ;
  
#line 191 
  rtlpriv->rtlhal.pfirmware = (u8 *)vzalloc(32768UL);
  
#line 192 
  if (rtlpriv->rtlhal.pfirmware == (u8 *)0U) {
    
#line 193 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 193 
      tmp_0 = preempt_count();
      
#line 193 
      tmp_1 = preempt_count();
      
#line 193 
      printk("\001","rtl8821ae_init_sw_vars",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
    }
    else ;
    
#line 195 
    __retres = 1;
    
#line 195 
    goto return_label;
  }
  else ;
  
#line 197 
  rtlpriv->rtlhal.wowlan_firmware = (u8 *)vzalloc(32768UL);
  
#line 198 
  if (rtlpriv->rtlhal.wowlan_firmware == (u8 *)0U) {
    
#line 199 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 199 
      tmp_3 = preempt_count();
      
#line 199 
      tmp_4 = preempt_count();
      
#line 199 
      printk("\001","rtl8821ae_init_sw_vars",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 201 
    __retres = 1;
    
#line 201 
    goto return_label;
  }
  else ;
  
#line 204 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 205 
    (rtlpriv->cfg)->fw_name = (char *)"rtlwifi/rtl8812aefw.bin";
    
#line 206 
    (rtlpriv->cfg)->wowlan_fw_name = (char *)"rtlwifi/rtl8812aefw_wowlan.bin";
  }
  else {
    
#line 208 
    (rtlpriv->cfg)->fw_name = (char *)"rtlwifi/rtl8821aefw.bin";
    
#line 209 
    (rtlpriv->cfg)->wowlan_fw_name = (char *)"rtlwifi/rtl8821aefw_wowlan.bin";
  }
  
#line 212 
  rtlpriv->max_fw_size = 32768;
  
#line 214 
  printk("\001",(rtlpriv->cfg)->fw_name);
  
#line 215 
  err = request_firmware_nowait(& __this_module,(_Bool)1,(char const *)(rtlpriv->cfg)->fw_name,rtlpriv->io.dev,208U,(void *)hw,& rtl_fw_cb);
  
#line 218 
  if (err != 0) {
    
#line 219 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 219 
      tmp_5 = preempt_count();
      
#line 219 
      tmp_6 = preempt_count();
      
#line 219 
      printk("\001","rtl8821ae_init_sw_vars",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 221 
    __retres = 1;
    
#line 221 
    goto return_label;
  }
  else ;
  
#line 224 
  printk("\001",(rtlpriv->cfg)->wowlan_fw_name);
  
#line 225 
  err = request_firmware_nowait(& __this_module,(_Bool)1,(char const *)(rtlpriv->cfg)->wowlan_fw_name,rtlpriv->io.dev,208U,(void *)hw,& rtl_wowlan_fw_cb);
  
#line 229 
  if (err != 0) {
    
#line 230 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 230 
      tmp_7 = preempt_count();
      
#line 230 
      tmp_8 = preempt_count();
      
#line 230 
      printk("\001","rtl8821ae_init_sw_vars",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 232 
    __retres = 1;
    
#line 232 
    goto return_label;
  }
  else ;
  
#line 234 
  __retres = 0;
  return_label: 
#line 234 
                return __retres;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
void rtl8821ae_deinit_sw_vars(struct ieee80211_hw *hw)
{
  
#line 239 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 241 
  if (rtlpriv->rtlhal.pfirmware != (u8 *)0U) {
    
#line 242 
    vfree((void const *)rtlpriv->rtlhal.pfirmware);
    
#line 243 
    rtlpriv->rtlhal.pfirmware = (u8 *)0U;
  }
  else ;
  
#line 246 
  if (rtlpriv->rtlhal.wowlan_firmware != (u8 *)0U) {
    
#line 247 
    vfree((void const *)rtlpriv->rtlhal.wowlan_firmware);
    
#line 248 
    rtlpriv->rtlhal.wowlan_firmware = (u8 *)0U;
  }
  else ;
  
#line 250 
  return;
}


#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
bool rtl8821ae_get_btc_status(void)
{
  bool __retres;
  
#line 256 
  __retres = (_Bool)1;
  
#line 256 
  return __retres;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct rtl_hal_ops rtl8821ae_hal_ops = {.init_sw_vars = & rtl8821ae_init_sw_vars, .deinit_sw_vars = & rtl8821ae_deinit_sw_vars, .read_chip_version = (void (*)(struct ieee80211_hw *))0, .read_eeprom_info = & rtl8821ae_read_eeprom_info, .interrupt_recognized = & rtl8821ae_interrupt_recognized, .hw_init = & rtl8821ae_hw_init, .hw_disable = & rtl8821ae_card_disable, .hw_suspend = & rtl8821ae_suspend, .hw_resume = & rtl8821ae_resume, .enable_interrupt = & rtl8821ae_enable_interrupt, .disable_interrupt = & rtl8821ae_disable_interrupt, .set_network_type = & rtl8821ae_set_network_type, .set_chk_bssid = & rtl8821ae_set_check_bssid, .set_bw_mode = & rtl8821ae_phy_set_bw_mode, .switch_channel = & rtl8821ae_phy_sw_chnl, .set_qos = & rtl8821ae_set_qos, .set_bcn_reg = & rtl8821ae_set_beacon_related_registers, .set_bcn_intv = & rtl8821ae_set_beacon_interval, .update_interrupt_mask = & rtl8821ae_update_interrupt_mask, .get_hw_reg = & rtl8821ae_get_hw_reg, .set_hw_reg = & rtl8821ae_set_hw_reg, .update_rate_tbl = & rtl8821ae_update_hal_rate_tbl, .pre_fill_tx_bd_desc = (void (*)(struct ieee80211_hw *, u8 *, u8 *, u8 , struct sk_buff *, dma_addr_t ))0, .update_rate_mask = (void (*)(struct ieee80211_hw *, u8 ))0, .rx_desc_buff_remained_cnt = (u16 (*)(struct ieee80211_hw *, u8 ))0, .rx_check_dma_ok = (void (*)(struct ieee80211_hw *, u8 *, u8 ))0, .fill_tx_desc = & rtl8821ae_tx_fill_desc, .fill_fake_txdesc = (void (*)(struct ieee80211_hw *, u8 *, u32 , bool ))0, .fill_tx_cmddesc = & rtl8821ae_tx_fill_cmddesc, .query_rx_desc = & rtl8821ae_rx_query_desc, .set_channel_access = & rtl8821ae_update_channel_access_setting, .radio_onoff_checking = & rtl8821ae_gpio_radio_on_off_checking, .dm_watchdog = & rtl8821ae_dm_watchdog, .scan_operation_backup = & rtl8821ae_phy_scan_operation_backup, .set_rf_power_state = & rtl8821ae_phy_set_rf_power_state, .led_control = & rtl8821ae_led_control, .set_desc = & rtl8821ae_set_desc, .get_desc = & rtl8821ae_get_desc, .is_tx_desc_closed = & rtl8821ae_is_tx_desc_closed, .tx_polling = & rtl8821ae_tx_polling, .enable_hw_sec = & rtl8821ae_enable_hw_security_config, .set_key = & rtl8821ae_set_key, .init_sw_leds = & rtl8821ae_init_sw_leds, .deinit_sw_leds = (void (*)(struct ieee80211_hw *))0, .get_bbreg = & rtl8821ae_phy_query_bb_reg, .set_bbreg = & rtl8821ae_phy_set_bb_reg, .get_rfreg = & rtl8821ae_phy_query_rf_reg, .set_rfreg = & rtl8821ae_phy_set_rf_reg, .linked_set_reg = (void (*)(struct ieee80211_hw *))0, .chk_switch_dmdp = (void (*)(struct ieee80211_hw *))0, .dualmac_easy_concurrent = (void (*)(struct ieee80211_hw *))0, .dualmac_switch_to_dmdp = (void (*)(struct ieee80211_hw *))0, .phy_rf6052_config = (bool (*)(struct ieee80211_hw *))0, .phy_rf6052_set_cck_txpower = (void (*)(struct ieee80211_hw *, u8 *))0, .phy_rf6052_set_ofdm_txpower = (void (*)(struct ieee80211_hw *, u8 *, u8 ))0, .config_bb_with_headerfile = (bool (*)(struct ieee80211_hw *, u8 ))0, .config_bb_with_pgheaderfile = (bool (*)(struct ieee80211_hw *, u8 ))0, .phy_lc_calibrate = (void (*)(struct ieee80211_hw *, bool ))0, .phy_set_bw_mode_callback = (void (*)(struct ieee80211_hw *))0, .dm_dynamic_txpower = (void (*)(struct ieee80211_hw *))0, .c2h_command_handle = (void (*)(struct ieee80211_hw *))0, .bt_wifi_media_status_notify = (void (*)(struct ieee80211_hw *, bool ))0, .bt_coex_off_before_lps = (void (*)(struct ieee80211_hw *))0, .fill_h2c_cmd = & rtl8821ae_fill_h2c_cmd, .get_btc_status = & rtl8821ae_get_btc_status, .is_fw_header = (bool (*)(struct rtl8723e_firmware_header *))0, .rx_command_packet = & rtl8821ae_rx_command_packet, .add_wowlan_pattern = & rtl8821ae_add_wowlan_pattern, .get_available_desc = (u16 (*)(struct ieee80211_hw *, u8 ))0};

#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct rtl_mod_params rtl8821ae_mod_params = {.sw_crypto = (_Bool)0, .debug = 0, .inactiveps = (_Bool)1, .swctrl_lps = (_Bool)0, .fwctrl_lps = (_Bool)1, .msi_support = (_Bool)1, .disable_watchdog = (_Bool)0, .int_clear = (_Bool)1};

#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct rtl_hal_cfg rtl8821ae_hal_cfg = {.bar_id = (unsigned char)2U, .write_readback = (_Bool)1, .name = (char *)"rtl8821ae_pci", .fw_name = (char *)"rtlwifi/rtl8821aefw.bin", .alt_fw_name = (char *)0, .wowlan_fw_name = (char *)0, .ops = & rtl8821ae_hal_ops, .mod_params = & rtl8821ae_mod_params, .usb_interface_cfg = (struct rtl_hal_usbint_cfg *)0, .maps = {0U, 2U, 8U, 4U, 8U, 256U, 4096U, 1U, 176U, 184U, [11] = 52U, 48U, 0U, 48U, 32768U, 4096U, 32U, 2U, 512U, 64U, 256U, 18U, 207U, 1648U, 1652U, 1656U, 1660U, 1664U, 0U, 1U, 2U, 4U, 5U, 67108864U, 33554432U, 16777216U, 8388608U, 4194304U, 2097152U, [41] = 1048576U, 524288U, 262144U, 131072U, 65536U, 32768U, 16384U, [50] = 512U, 536870912U, 1048576U, 256U, 2U, 4096U, 65536U, 128U, [59] = 33554432U, 64U, 67108864U, 32U, 16U, 8U, 4U, 1U, [68] = 101711872U, [70] = 0U, 1U, 2U, 3U, 4U, 5U, 6U, 7U, 8U, 9U, 10U, 11U, 19U, 27U, 51U, 52U, 53U, 61U, 62U, 63U}};

#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct pci_device_id rtl8821ae_pci_ids[3U] = {{.vendor = 4332U, .device = 34834U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = (unsigned long)(& rtl8821ae_hal_cfg)}, {.vendor = 4332U, .device = 34849U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = (unsigned long)(& rtl8821ae_hal_cfg)}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
struct pci_device_id const __mod_pci__rtl8821ae_pci_ids_device_table[3U];

#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct dev_pm_ops const rtlwifi_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & rtl_pci_suspend, .resume = & rtl_pci_resume, .freeze = & rtl_pci_suspend, .thaw = & rtl_pci_resume, .poweroff = & rtl_pci_suspend, .restore = & rtl_pci_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static struct pci_driver rtl8821ae_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "rtl8821ae", .id_table = (struct pci_device_id const *)(& rtl8821ae_pci_ids), .probe = & rtl_pci_probe, .remove = & rtl_pci_disconnect, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & rtlwifi_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static int rtl8821ae_driver_init(void)
{
  int tmp;
  
#line 463 
  tmp = ldv___pci_register_driver_72(& rtl8821ae_driver,& __this_module,"rtl8821ae");
  
#line 463 
  return tmp;
}


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/sw.c"
static void rtl8821ae_driver_exit(void)
{
  
#line 463 
  ldv_pci_unregister_driver_73(& rtl8821ae_driver);
  
#line 464 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
int (*ldv_emg_alias_rtl_pci_probe_2)(struct pci_dev *, struct pci_device_id *) = (int (*)(struct pci_dev *, struct pci_device_id *))(& rtl_pci_probe);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
struct pci_driver *ldv_emg_alias_rtl8821ae_driver_2 = & rtl8821ae_driver;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
int (*ldv_emg_alias_rtl_pci_suspend_2)(struct device *) = & rtl_pci_suspend;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
void (*ldv_emg_alias_rtl_pci_disconnect_3)(struct pci_dev *) = & rtl_pci_disconnect;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
int (*ldv_emg_alias_rtl_pci_resume_4)(struct device *) = & rtl_pci_resume;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
struct dev_pm_ops *ldv_emg_alias_rtlwifi_pm_ops_3 = (struct dev_pm_ops *)(& rtlwifi_pm_ops);

#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
int ldv_emg_rtl8821ae_driver_init(void)
{
  int tmp;
  
#line 71 
  tmp = rtl8821ae_driver_init();
  
#line 71 
  return tmp;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
void ldv_emg_rtl8821ae_driver_exit(void)
{
  
#line 75 
  rtl8821ae_driver_exit();
  
#line 76 
  return;
}


#line 749  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
static int ldv___pci_register_driver_72(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 753 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 753 
  return tmp;
}


#line 757  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_sw.c.aux"
static void ldv_pci_unregister_driver_73(struct pci_driver *ldv_func_arg1)
{
  
#line 761 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 762 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 1698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_tods(__le16 fc)
{
  int __retres;
  
#line 255 
  __retres = ((int)fc & 256) != 0;
  
#line 255 
  return __retres;
}


#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_fromds(__le16 fc)
{
  int __retres;
  
#line 264 
  __retres = ((int)fc & 512) != 0;
  
#line 264 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_a4(__le16 fc)
{
  int __retres;
  
#line 273 
  __le16 tmp = (unsigned short)768U;
  
#line 274 
  __retres = ((int)fc & (int)tmp) == (int)tmp;
  
#line 274 
  return __retres;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_protected(__le16 fc)
{
  int __retres;
  
#line 319 
  __retres = ((int)fc & 16384) != 0;
  
#line 319 
  return __retres;
}


#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_mgmt(__le16 fc)
{
  int __retres;
  
#line 337 
  __retres = ((int)fc & 12) == 0;
  
#line 337 
  return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_ctl(__le16 fc)
{
  int __retres;
  
#line 347 
  __retres = ((int)fc & 12) == 4;
  
#line 347 
  return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data_qos(__le16 fc)
{
  int __retres;
  
#line 371 
  __retres = ((int)fc & 140) == 136;
  
#line 371 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_beacon(__le16 fc)
{
  int __retres;
  
#line 455 
  __retres = ((int)fc & 252) == 128;
  
#line 455 
  return __retres;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_disassoc(__le16 fc)
{
  int __retres;
  
#line 475 
  __retres = ((int)fc & 252) == 160;
  
#line 475 
  return __retres;
}


#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_deauth(__le16 fc)
{
  int __retres;
  
#line 495 
  __retres = ((int)fc & 252) == 192;
  
#line 495 
  return __retres;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_action(__le16 fc)
{
  int __retres;
  
#line 505 
  __retres = ((int)fc & 252) == 208;
  
#line 505 
  return __retres;
}


#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_nullfunc(__le16 fc)
{
  int __retres;
  
#line 595 
  __retres = ((int)fc & 252) == 72;
  
#line 595 
  return __retres;
}


#line 2347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_SA(struct ieee80211_hdr *hdr)
{
  u8 *__retres;
  int tmp;
  int tmp_0;
  
#line 2349 
  tmp = ieee80211_has_a4((unsigned short)((int)hdr->frame_control));
  
#line 2349 
  if (tmp != 0) {
    
#line 2350 
    __retres = (u8 *)(& hdr->addr4);
    
#line 2350 
    goto return_label;
  }
  else ;
  
#line 2351 
  tmp_0 = ieee80211_has_fromds((unsigned short)((int)hdr->frame_control));
  
#line 2351 
  if (tmp_0 != 0) {
    
#line 2352 
    __retres = (u8 *)(& hdr->addr3);
    
#line 2352 
    goto return_label;
  }
  else ;
  
#line 2353 
  __retres = (u8 *)(& hdr->addr2);
  return_label: 
#line 2353 
                return __retres;
}


#line 2366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_DA(struct ieee80211_hdr *hdr)
{
  u8 *__retres;
  int tmp;
  
#line 2368 
  tmp = ieee80211_has_tods((unsigned short)((int)hdr->frame_control));
  
#line 2368 
  if (tmp != 0) {
    
#line 2369 
    __retres = (u8 *)(& hdr->addr3);
    
#line 2369 
    goto return_label;
  }
  else {
    
#line 2371 
    __retres = (u8 *)(& hdr->addr1);
    
#line 2371 
    goto return_label;
  }
  return_label: 
#line 2368 
                return __retres;
}


#line 2378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static bool _ieee80211_is_robust_mgmt_frame(struct ieee80211_hdr *hdr)
{
  bool __retres;
  int tmp;
  int tmp_2;
  
#line 2380 
  tmp = ieee80211_is_disassoc((unsigned short)((int)hdr->frame_control));
  
#line 2380 
  if (tmp != 0) {
    
#line 2382 
    __retres = (_Bool)1;
    
#line 2382 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 2380 
    tmp_0 = ieee80211_is_deauth((unsigned short)((int)hdr->frame_control));
    
#line 2380 
    if (tmp_0 != 0) {
      
#line 2382 
      __retres = (_Bool)1;
      
#line 2382 
      goto return_label;
    }
    else ;
  }
  
#line 2384 
  tmp_2 = ieee80211_is_action((unsigned short)((int)hdr->frame_control));
  
#line 2384 
  if (tmp_2 != 0) {
    u8 *category;
    int tmp_1;
    
#line 2394 
    tmp_1 = ieee80211_has_protected((unsigned short)((int)hdr->frame_control));
    
#line 2394 
    if (tmp_1 != 0) {
      
#line 2395 
      __retres = (_Bool)1;
      
#line 2395 
      goto return_label;
    }
    else ;
    
#line 2396 
    category = (u8 *)hdr + 24U;
    
#line 2399 
    __retres = (_Bool)(((((unsigned int)*category != 4U && (unsigned int)*category != 7U) && (unsigned int)*category != 15U) && (unsigned int)*category != 127U) != 0);
    
#line 2399 
    goto return_label;
  }
  else ;
  
#line 2403 
  __retres = (_Bool)0;
  return_label: 
#line 2403 
                return __retres;
}


#line 2986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static struct ieee80211_hdr *rtl_get_hdr(struct sk_buff *skb)
{
  struct ieee80211_hdr *__retres;
  
#line 2988 
  __retres = (struct ieee80211_hdr *)skb->data;
  
#line 2988 
  return __retres;
}


#line 2991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/wifi.h"
__inline static __le16 rtl_get_fc(struct sk_buff *skb)
{
  __le16 __retres;
  struct ieee80211_hdr *tmp;
  
#line 2993 
  tmp = rtl_get_hdr(skb);
  
#line 2993 
  __retres = tmp->frame_control;
  
#line 2993 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/base.h"
int rtlwifi_rate_mapping(struct ieee80211_hw *, bool, bool, u8);


#line 140 
void rtl_get_tcb_desc(struct ieee80211_hw *, struct ieee80211_tx_info *, struct ieee80211_sta *, struct sk_buff *, struct rtl_tcb_desc *);


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/stats.h"
u8 rtl_query_rxpwrpercentage(char);


#line 37 
u8 rtl_evm_db_to_percentage(char);


#line 38 
long rtl_signal_scale_mapping(struct ieee80211_hw *, long);


#line 39 
void rtl_process_phyinfo(struct ieee80211_hw *, u8 *, struct rtl_stats *);


#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.h"
void rtl8821ae_c2h_packet_handler(struct ieee80211_hw *hw, u8 *buffer, u8 length);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u8 _rtl8821ae_map_hwqueue_to_fwqueue(struct sk_buff *skb, u8 hw_queue)
{
  u8 __retres;
  int tmp_0;
  int tmp_1;
  
#line 41 
  __le16 fc = rtl_get_fc(skb);
  
#line 43 
  tmp_0 = ieee80211_is_beacon((unsigned short)((int)fc));
  
#line 43 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 44 
    __retres = (unsigned char)16U;
    
#line 44 
    goto return_label;
  }
  else ;
  
#line 45 
  tmp_1 = ieee80211_is_mgmt((unsigned short)((int)fc));
  
#line 45 
  if (tmp_1 != 0) {
    
#line 46 
    __retres = (unsigned char)18U;
    
#line 46 
    goto return_label;
  }
  else {
    int tmp_2;
    
#line 45 
    tmp_2 = ieee80211_is_ctl((unsigned short)((int)fc));
    
#line 45 
    if (tmp_2 != 0) {
      
#line 46 
      __retres = (unsigned char)18U;
      
#line 46 
      goto return_label;
    }
    else ;
  }
  
#line 48 
  __retres = (unsigned char)skb->priority;
  return_label: 
#line 48 
                return __retres;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u16 odm_cfo(char value)
{
  u16 __retres;
  int ret_val;
  
#line 55 
  if ((int)value < 0) {
    
#line 56 
    ret_val = - ((int)value);
    
#line 57 
    ret_val = (ret_val << 1) + (ret_val >> 1);
    
#line 59 
    ret_val |= 4096;
  }
  else {
    
#line 61 
    ret_val = (int)value;
    
#line 62 
    ret_val = (ret_val << 1) + (ret_val >> 1);
  }
  
#line 64 
  __retres = (unsigned short)ret_val;
  
#line 64 
  return __retres;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u8 _rtl8821ae_evm_dbm_jaguar(char value)
{
  u8 __retres;
  
#line 69 
  char ret_val = value;
  
#line 72 
  if ((int)ret_val == -128) 
#line 73 
                            ret_val = (char)127;
  else 
    
#line 74 
    if ((int)ret_val < 0) 
#line 75 
                          ret_val = (char)(- ((int)ret_val)); else ;
  
#line 77 
  ret_val = (char)((int)((signed char)ret_val) >> 1);
  
#line 78 
  __retres = (unsigned char)ret_val;
  
#line 78 
  return __retres;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static void query_rxphystatus(struct ieee80211_hw *hw, struct rtl_stats *pstatus, u8 *pdesc, struct rx_fwinfo_8821ae *p_drvinfo, bool bpacket_match_bssid, bool bpacket_toself, bool packet_beacon)
{
  char rx_pwr[4U];
  u8 evm;
  u8 evmdbm;
  u8 pwdb_all;
  u8 i;
  u8 max_spatial_stream;
  u32 rssi;
  u8 lan_idx;
  u8 vga_idx;
  
#line 87 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 88 
  struct phy_status_rpt *p_phystrpt = (struct phy_status_rpt *)p_drvinfo;
  
#line 89 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 90 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 91 
  char rx_pwr_all = (char)0;
  
#line 92 
  u8 rf_rx_num = (unsigned char)0U;
  
#line 94 
  u32 total_rssi = 0U;
  
#line 95 
  bool is_cck = pstatus->is_cck;
  
#line 99 
  pstatus->packet_matchbssid = bpacket_match_bssid;
  
#line 100 
  pstatus->packet_toself = bpacket_toself;
  
#line 101 
  pstatus->packet_beacon = packet_beacon;
  
#line 102 
  pstatus->rx_mimo_signalquality[0] = (signed char)(-1);
  
#line 103 
  pstatus->rx_mimo_signalquality[1] = (signed char)(-1);
  
#line 105 
  if ((int)is_cck != 0) {
    u8 cck_highpwr;
    u8 cck_agc_rpt;
    
#line 109 
    cck_agc_rpt = p_phystrpt->cfosho[0];
    
#line 115 
    cck_highpwr = rtlphy->cck_high_power;
    
#line 117 
    lan_idx = (unsigned char)((int)cck_agc_rpt >> 5);
    
#line 118 
    vga_idx = (unsigned char)((unsigned int)cck_agc_rpt & 31U);
    
#line 119 
    if ((unsigned int)rtlpriv->rtlhal.hw_type == 14U) {
      
#line 120 
      switch ((int)lan_idx) {
        case 7: 
#line 121 
        ;
        
#line 122 
        if ((unsigned int)vga_idx <= 27U) 
#line 124 
                                          rx_pwr_all = (char)((unsigned int)(-23 - (int)vga_idx) * 2U); else 
                                                                    
#line 126 
                                                                    rx_pwr_all = (char)(-100);
        
#line 127 
        goto ldv_55129;
        case 6: 
#line 128 
        ;
        
#line 130 
        rx_pwr_all = (char)((unsigned int)(-22 - (int)vga_idx) * 2U);
        
#line 131 
        goto ldv_55129;
        case 5: 
#line 132 
        ;
        
#line 134 
        rx_pwr_all = (char)((unsigned int)(-14 - (int)vga_idx) * 2U);
        
#line 135 
        goto ldv_55129;
        case 4: 
#line 136 
        ;
        
#line 138 
        rx_pwr_all = (char)((unsigned int)(-11 - (int)vga_idx) * 2U);
        
#line 139 
        goto ldv_55129;
        case 3: 
#line 140 
        ;
        
#line 142 
        rx_pwr_all = (char)((unsigned int)(-5 - (int)vga_idx) * 2U);
        
#line 143 
        goto ldv_55129;
        case 2: 
#line 144 
        ;
        
#line 145 
        if ((unsigned int)cck_highpwr != 0U) 
#line 147 
                                             rx_pwr_all = (char)((unsigned int)(~ ((int)vga_idx)) * 2U); else 
                                                                    
#line 149 
                                                                    rx_pwr_all = (char)((unsigned int)(2 - (int)vga_idx) * 2U);
        
#line 150 
        goto ldv_55129;
        case 1: 
#line 151 
        ;
        
#line 152 
        rx_pwr_all = (char)((unsigned int)(4 - (int)vga_idx) * 2U);
        
#line 153 
        goto ldv_55129;
        case 0: 
#line 154 
        ;
        
#line 155 
        rx_pwr_all = (char)((unsigned int)(7 - (int)vga_idx) * 2U);
        
#line 156 
        goto ldv_55129;
        default: 
#line 157 
        ;
        
#line 158 
        goto ldv_55129;
      }
      ldv_55129: 
#line 160 
      ;
      
#line 160 
      rx_pwr_all = (char)((unsigned int)rx_pwr_all + 6U);
      
#line 161 
      pwdb_all = rtl_query_rxpwrpercentage((char)((int)rx_pwr_all));
      
#line 162 
      if ((unsigned int)cck_highpwr == 0U) {
        
#line 163 
        if ((unsigned int)pwdb_all > 79U) 
#line 164 
                                          pwdb_all = (unsigned char)(((((unsigned int)pwdb_all + 176U) << 1U) + (unsigned int)((unsigned char)(((int)pwdb_all + -80) >> 1))) + 80U);
        else 
          
#line 167 
          if ((unsigned int)pwdb_all + 236U <= 58U) 
#line 168 
                                                    pwdb_all = (unsigned char)((unsigned int)pwdb_all + 3U); else ;
        
#line 169 
        if ((unsigned int)pwdb_all > 100U) 
#line 170 
                                           pwdb_all = (unsigned char)100U; else ;
      }
      else ;
    }
    else {
      
#line 173 
      char pout = (char)(-6);
      
#line 175 
      switch ((int)lan_idx) {
        case 5: 
#line 176 
        ;
        
#line 177 
        rx_pwr_all = (char)(((unsigned int)pout - (unsigned int)vga_idx * 2U) + 224U);
        
#line 178 
        goto ldv_55140;
        case 4: 
#line 179 
        ;
        
#line 180 
        rx_pwr_all = (char)(((unsigned int)pout - (unsigned int)vga_idx * 2U) + 232U);
        
#line 181 
        goto ldv_55140;
        case 2: 
#line 182 
        ;
        
#line 183 
        rx_pwr_all = (char)(((unsigned int)pout - (unsigned int)vga_idx * 2U) + 245U);
        
#line 184 
        goto ldv_55140;
        case 1: 
#line 185 
        ;
        
#line 186 
        rx_pwr_all = (char)(((unsigned int)pout - (unsigned int)vga_idx * 2U) + 5U);
        
#line 187 
        goto ldv_55140;
        case 0: 
#line 188 
        ;
        
#line 189 
        rx_pwr_all = (char)(((unsigned int)pout - (unsigned int)vga_idx * 2U) + 21U);
        
#line 190 
        goto ldv_55140;
      }
      ldv_55140: 
#line 192 
      ;
      
#line 192 
      pwdb_all = rtl_query_rxpwrpercentage((char)((int)rx_pwr_all));
    }
    
#line 195 
    pstatus->rx_pwdb_all = (unsigned int)pwdb_all;
    
#line 196 
    pstatus->recvsignalpower = (int)rx_pwr_all;
    
#line 199 
    if ((int)bpacket_match_bssid != 0) {
      u8 sq;
      
#line 202 
      if (pstatus->rx_pwdb_all > 40U) 
#line 203 
                                      sq = (unsigned char)100U;
      else {
        
#line 205 
        sq = p_phystrpt->pwdb_all;
        
#line 206 
        if ((unsigned int)sq > 64U) 
#line 207 
                                    sq = (unsigned char)0U;
        else 
          
#line 208 
          if ((unsigned int)sq <= 19U) 
#line 209 
                                       sq = (unsigned char)100U; else 
                                                                   
#line 211 
                                                                   sq = (unsigned char)(((64 - (int)sq) * 100) / 44);
      }
      
#line 214 
      pstatus->signalquality = sq;
      
#line 215 
      pstatus->rx_mimo_signalquality[0] = (signed char)sq;
      
#line 216 
      pstatus->rx_mimo_signalquality[1] = (signed char)(-1);
    }
    else ;
  }
  else {
    u8 tmp;
    
#line 220 
    i = (unsigned char)0U;
    
#line 220 
    goto ldv_55147;
    ldv_55146: 
#line 221 
    ;
    
#line 222 
    if ((int)rtlpriv->dm.rfpath_rxenable[(int)i] != 0) 
#line 223 
                                                       rf_rx_num = (u8)((int)rf_rx_num + 1); else ;
    
#line 225 
    rx_pwr[(int)i] = (char)(((unsigned int)p_phystrpt->gain_trsw[(int)i] & 127U) + 146U);
    
#line 228 
    tmp = rtl_query_rxpwrpercentage((char)((int)rx_pwr[(int)i]));
    
#line 228 
    rssi = (unsigned int)tmp;
    
#line 229 
    total_rssi += rssi;
    
#line 232 
    pstatus->rx_snr[(int)i] = (unsigned char)((int)((signed char)p_phystrpt->rxsnr[(int)i]) / 2);
    
#line 233 
    rtlpriv->stats.rx_snr_db[(int)i] = (long)((int)((signed char)p_phystrpt->rxsnr[(int)i]) / 2);
    
#line 235 
    pstatus->cfo_short[(int)i] = odm_cfo((char)((int)((char)p_phystrpt->cfosho[(int)i])));
    
#line 236 
    pstatus->cfo_tail[(int)i] = odm_cfo((char)((int)p_phystrpt->cfotail[(int)i]));
    
#line 238 
    pstatus->rx_mimo_signalstrength[(int)i] = (unsigned char)rssi;
    
#line 220 
    i = (u8)((int)i + 1);
    ldv_55147: 
#line 221 
    ;
    
#line 220 
    if ((unsigned int)i <= 1U) 
#line 222 
                               goto ldv_55146; else 
#line 225 
                                                    goto ldv_55148;
    ldv_55148: 
#line 226 
    ;
    
#line 244 
    rx_pwr_all = (char)((unsigned int)((int)p_drvinfo->pwdb_all >> 1) + 146U);
    
#line 246 
    pwdb_all = rtl_query_rxpwrpercentage((char)((int)rx_pwr_all));
    
#line 247 
    pstatus->rx_pwdb_all = (unsigned int)pwdb_all;
    
#line 248 
    pstatus->rxpower = (signed char)rx_pwr_all;
    
#line 249 
    pstatus->recvsignalpower = (int)rx_pwr_all;
    
#line 252 
    if ((((int)pstatus->is_ht != 0 && (unsigned int)pstatus->rate > 19U) && (unsigned int)pstatus->rate <= 27U) || (((int)pstatus->is_vht != 0 && (unsigned int)pstatus->rate > 53U) && (unsigned int)pstatus->rate <= 63U)) 
      
#line 257 
      max_spatial_stream = (unsigned char)2U; else 
#line 259 
                                                   max_spatial_stream = (unsigned char)1U;
    
#line 261 
    i = (unsigned char)0U;
    
#line 261 
    goto ldv_55150;
    ldv_55149: 
#line 262 
    ;
    
#line 262 
    evm = rtl_evm_db_to_percentage((char)((int)p_phystrpt->rxevm[(int)i]));
    
#line 263 
    evmdbm = _rtl8821ae_evm_dbm_jaguar((char)((int)p_phystrpt->rxevm[(int)i]));
    
#line 265 
    if ((int)bpacket_match_bssid != 0) {
      
#line 269 
      if ((unsigned int)i == 0U) 
#line 270 
                                 pstatus->signalquality = evm; else ;
      
#line 271 
      pstatus->rx_mimo_signalquality[(int)i] = (signed char)evm;
      
#line 272 
      pstatus->rx_mimo_evm_dbm[(int)i] = evmdbm;
    }
    else ;
    
#line 261 
    i = (u8)((int)i + 1);
    ldv_55150: 
#line 262 
    ;
    
#line 261 
    if ((int)i < (int)max_spatial_stream) 
#line 263 
                                          goto ldv_55149; else 
#line 266 
                                                               goto ldv_55151;
    ldv_55151: 
#line 267 
    ;
    
#line 275 
    if ((int)bpacket_match_bssid != 0) {
      
#line 276 
      i = (unsigned char)0U;
      
#line 276 
      goto ldv_55153;
      ldv_55152: 
#line 277 
      ;
      
#line 277 
      ((struct rtl_priv *)hw->priv)->dm.cfo_tail[(int)i] = (int)p_phystrpt->cfotail[(int)i];
      
#line 276 
      i = (u8)((int)i + 1);
      ldv_55153: 
#line 277 
      ;
      
#line 276 
      if ((unsigned int)i <= 1U) 
#line 278 
                                 goto ldv_55152; else 
#line 281 
                                                      goto ldv_55154;
      ldv_55154: 
#line 282 
      ;
      
#line 280 
      ((struct rtl_priv *)hw->priv)->dm.packet_count += 1U;
    }
    else ;
  }
  
#line 287 
  if ((int)is_cck != 0) {
    long tmp_0;
    
#line 288 
    tmp_0 = rtl_signal_scale_mapping(hw,(long)pwdb_all);
    
#line 288 
    pstatus->signalstrength = (unsigned char)tmp_0;
  }
  else 
    
#line 290 
    if ((unsigned int)rf_rx_num != 0U) {
      long tmp_1;
      
#line 292 
      total_rssi /= (unsigned int)rf_rx_num;
      
#line 291 
      ;
      
#line 291 
      tmp_1 = rtl_signal_scale_mapping(hw,(long)total_rssi);
      
#line 291 
      pstatus->signalstrength = (unsigned char)tmp_1;
    }
    else ;
  
#line 294 
  rtldm->fat_table.antsel_rx_keep_0 = (unsigned char)p_phystrpt->antidx_anta;
  
#line 295 
  rtldm->fat_table.antsel_rx_keep_1 = (unsigned char)p_phystrpt->antidx_antb;
  
#line 296 
  return;
}


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static void translate_rx_signal_stuff(struct ieee80211_hw *hw, struct sk_buff *skb, struct rtl_stats *pstatus, u8 *pdesc, struct rx_fwinfo_8821ae *p_drvinfo)
{
  struct ieee80211_hdr *hdr;
  u8 *tmp_buf;
  u8 *praddr;
  u8 *psaddr;
  __le16 fc;
  u16 type;
  bool packet_matchbssid;
  bool packet_toself;
  bool packet_beacon;
  int tmp_5;
  int tmp;
  int tmp_7;
  int tmp_8;
  
#line 303 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 304 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 313 
  tmp_buf = skb->data + ((int)pstatus->rx_drvinfo_size + (int)pstatus->rx_bufshift);
  
#line 315 
  hdr = (struct ieee80211_hdr *)tmp_buf;
  
#line 316 
  fc = hdr->frame_control;
  
#line 317 
  type = (unsigned short)((unsigned int)hdr->frame_control & 12U);
  
#line 318 
  praddr = (u8 *)(& hdr->addr1);
  
#line 319 
  psaddr = ieee80211_get_SA(hdr);
  
#line 320 
  ether_addr_copy((u8 *)(& pstatus->psaddr),(u8 const *)psaddr);
  
#line 329 
  tmp = ieee80211_is_ctl((unsigned short)((int)fc));
  
#line 329 
  if (tmp == 0) {
    bool tmp_4;
    u8 *tmp_3;
    int tmp_0;
    
#line 325 
    tmp_0 = ieee80211_has_tods((unsigned short)((int)fc));
    
#line 325 
    if (tmp_0 != 0) 
#line 325 
                    tmp_3 = (u8 *)(& hdr->addr1);
    else {
      u8 *tmp_2;
      int tmp_1;
      
#line 325 
      tmp_1 = ieee80211_has_fromds((unsigned short)((int)fc));
      
#line 325 
      if (tmp_1 != 0) 
#line 325 
                      tmp_2 = (u8 *)(& hdr->addr2); else 
#line 325 
                                                         tmp_2 = (u8 *)(& hdr->addr3);
      
#line 325 
      tmp_3 = tmp_2;
    }
    
#line 322 
    ;
    
#line 322 
    tmp_4 = ether_addr_equal((u8 const *)(& mac->bssid),(u8 const *)tmp_3);
    
#line 322 
    if ((int)tmp_4 != 0) 
      
#line 327 
      if ((unsigned int)*((unsigned char *)pstatus + 58UL) == 0U) 
        
#line 328 
        if ((unsigned int)*((unsigned char *)pstatus + 58UL) == 0U) 
          
#line 329 
          if ((unsigned int)*((unsigned char *)pstatus + 58UL) == 0U) 
            
#line 329 
            tmp_5 = 1; else 
#line 329 
                            tmp_5 = 0;
        else 
#line 329 
             tmp_5 = 0;
      else 
#line 329 
           tmp_5 = 0;
    else 
#line 329 
         tmp_5 = 0;
  }
  else 
#line 329 
       tmp_5 = 0;
  
#line 322 
  packet_matchbssid = (_Bool)(tmp_5 != 0);
  
#line 331 
  if ((int)packet_matchbssid != 0) {
    bool tmp_6;
    
#line 331 
    tmp_6 = ether_addr_equal((u8 const *)praddr,(u8 const *)(& rtlefuse->dev_addr));
    
#line 331 
    if ((int)tmp_6 != 0) 
#line 331 
                         tmp_7 = 1; else 
#line 331 
                                         tmp_7 = 0;
  }
  else 
#line 331 
       tmp_7 = 0;
  
#line 331 
  packet_toself = (_Bool)(tmp_7 != 0);
  
#line 334 
  tmp_8 = ieee80211_is_beacon((unsigned short)((int)hdr->frame_control));
  
#line 334 
  if (tmp_8 != 0) 
#line 335 
                  packet_beacon = (_Bool)1; else 
#line 337 
                                                 packet_beacon = (_Bool)0;
  
#line 339 
  if ((int)packet_beacon != 0 && (int)packet_matchbssid != 0) 
#line 340 
                                                              ((struct rtl_priv *)hw->priv)->dm.dbginfo.num_qry_beacon_pkt = (u16)((int)((struct rtl_priv *)hw->priv)->dm.dbginfo.num_qry_beacon_pkt + 1); else ;
  
#line 342 
  if ((int)packet_matchbssid != 0) {
    int tmp_9;
    
#line 342 
    tmp_9 = ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control));
    
#line 342 
    if (tmp_9 != 0) {
      int tmp_12;
      bool tmp_11;
      u8 *tmp_10;
      
#line 344 
      tmp_10 = ieee80211_get_DA(hdr);
      
#line 344 
      tmp_11 = is_multicast_ether_addr((u8 const *)tmp_10);
      
#line 344 
      if (tmp_11) 
#line 344 
                  tmp_12 = 0; else 
#line 344 
                                   tmp_12 = 1;
      
#line 344 
      if (tmp_12) {
        
#line 345 
        struct ieee80211_qos_hdr *hdr_qos = (struct ieee80211_qos_hdr *)tmp_buf;
        
#line 347 
        u16 tid = (unsigned short)((unsigned int)hdr_qos->qos_ctrl & 15U);
        
#line 349 
        if ((unsigned int)tid != 0U && (unsigned int)tid != 3U) 
#line 350 
                                                                ((struct rtl_priv *)hw->priv)->dm.dbginfo.num_non_be_pkt = (u16)((int)((struct rtl_priv *)hw->priv)->dm.dbginfo.num_non_be_pkt + 1); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 353 
  query_rxphystatus(hw,pstatus,pdesc,p_drvinfo,(_Bool)((bool)((int)packet_matchbssid) != 0),(_Bool)((bool)((int)packet_toself) != 0),(_Bool)((bool)((int)packet_beacon) != 0));
  
#line 357 
  rtl_process_phyinfo(hw,tmp_buf,pstatus);
  
#line 358 
  return;
}


#line 360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static void _rtl8821ae_insert_emcontent(struct rtl_tcb_desc *ptcb_desc, u8 *virtualaddress)
{
  
#line 363 
  u32 dwtmp = 0U;
  
#line 365 
  memset((void *)virtualaddress,0,8UL);
  
#line 367 
  *((u32 *)virtualaddress) = (*((__le32 *)virtualaddress) & 4294967280U) | ((unsigned int)ptcb_desc->empkt_num & 15U);
  
#line 368 
  if ((unsigned int)ptcb_desc->empkt_num == 1U) 
#line 369 
                                                dwtmp = ptcb_desc->empkt_len[0];
  else {
    unsigned int tmp;
    
#line 371 
    dwtmp = ptcb_desc->empkt_len[0];
    
#line 372 
    if ((dwtmp & 3U) != 0U) 
#line 372 
                            tmp = 8U - (dwtmp & 3U); else 
#line 372 
                                                          tmp = 4U;
    
#line 372 
    dwtmp = tmp + dwtmp;
    
#line 373 
    dwtmp = ptcb_desc->empkt_len[1] + dwtmp;
  }
  
#line 375 
  *((u32 *)virtualaddress) = (*((__le32 *)virtualaddress) & 4294901775U) | ((dwtmp << 4) & 65535U);
  
#line 377 
  if ((unsigned int)ptcb_desc->empkt_num <= 3U) 
#line 378 
                                                dwtmp = ptcb_desc->empkt_len[2];
  else {
    unsigned int tmp_0;
    
#line 380 
    dwtmp = ptcb_desc->empkt_len[2];
    
#line 381 
    if ((dwtmp & 3U) != 0U) 
#line 381 
                            tmp_0 = 8U - (dwtmp & 3U); else 
#line 381 
                                                            tmp_0 = 4U;
    
#line 381 
    dwtmp = tmp_0 + dwtmp;
    
#line 382 
    dwtmp = ptcb_desc->empkt_len[3] + dwtmp;
  }
  
#line 384 
  *((u32 *)virtualaddress) = (*((__le32 *)virtualaddress) & 4026597375U) | ((dwtmp << 16) & 268369920U);
  
#line 385 
  if ((unsigned int)ptcb_desc->empkt_num <= 5U) 
#line 386 
                                                dwtmp = ptcb_desc->empkt_len[4];
  else {
    unsigned int tmp_1;
    
#line 388 
    dwtmp = ptcb_desc->empkt_len[4];
    
#line 389 
    if ((dwtmp & 3U) != 0U) 
#line 389 
                            tmp_1 = 8U - (dwtmp & 3U); else 
#line 389 
                                                            tmp_1 = 4U;
    
#line 389 
    dwtmp = tmp_1 + dwtmp;
    
#line 390 
    dwtmp = ptcb_desc->empkt_len[5] + dwtmp;
  }
  
#line 392 
  *((u32 *)virtualaddress) = (*((__le32 *)virtualaddress) & 268435455U) | (dwtmp << 28);
  
#line 393 
  *((u32 *)(virtualaddress + 4U)) = (*((__le32 *)(virtualaddress + 4U)) & 4294967040U) | ((dwtmp >> 4) & 255U);
  
#line 394 
  if ((unsigned int)ptcb_desc->empkt_num <= 7U) 
#line 395 
                                                dwtmp = ptcb_desc->empkt_len[6];
  else {
    unsigned int tmp_2;
    
#line 397 
    dwtmp = ptcb_desc->empkt_len[6];
    
#line 398 
    if ((dwtmp & 3U) != 0U) 
#line 398 
                            tmp_2 = 8U - (dwtmp & 3U); else 
#line 398 
                                                            tmp_2 = 4U;
    
#line 398 
    dwtmp = tmp_2 + dwtmp;
    
#line 399 
    dwtmp = ptcb_desc->empkt_len[7] + dwtmp;
  }
  
#line 401 
  *((u32 *)(virtualaddress + 4U)) = (*((__le32 *)(virtualaddress + 4U)) & 4293918975U) | ((dwtmp << 8) & 1048320U);
  
#line 402 
  if ((unsigned int)ptcb_desc->empkt_num <= 9U) 
#line 403 
                                                dwtmp = ptcb_desc->empkt_len[8];
  else {
    unsigned int tmp_3;
    
#line 405 
    dwtmp = ptcb_desc->empkt_len[8];
    
#line 406 
    if ((dwtmp & 3U) != 0U) 
#line 406 
                            tmp_3 = 8U - (dwtmp & 3U); else 
#line 406 
                                                            tmp_3 = 4U;
    
#line 406 
    dwtmp = tmp_3 + dwtmp;
    
#line 407 
    dwtmp = ptcb_desc->empkt_len[9] + dwtmp;
  }
  
#line 409 
  *((u32 *)(virtualaddress + 4U)) = (*((__le32 *)(virtualaddress + 4U)) & 1048575U) | (dwtmp << 20);
  
#line 410 
  return;
}


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static bool rtl8821ae_get_rxdesc_is_ht(struct ieee80211_hw *hw, u8 *pdesc)
{
  bool __retres;
  
#line 414 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 415 
  u8 rx_rate = (unsigned char)0U;
  
#line 417 
  rx_rate = (unsigned char)((unsigned int)((unsigned char)*((__le32 *)(pdesc + 12U))) & 127U);
  
#line 419 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4096ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 419 
    ;
    
#line 419 
    tmp = preempt_count();
    
#line 419 
    tmp_0 = preempt_count();
    
#line 419 
    printk("\001","rtl8821ae_get_rxdesc_is_ht",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rx_rate);
  }
  else ;
  
#line 421 
  if ((unsigned int)rx_rate + 244U <= 15U) {
    
#line 422 
    __retres = (_Bool)1;
    
#line 422 
    goto return_label;
  }
  else ;
  
#line 423 
  __retres = (_Bool)0;
  return_label: 
#line 423 
                return __retres;
}


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static bool rtl8821ae_get_rxdesc_is_vht(struct ieee80211_hw *hw, u8 *pdesc)
{
  bool __retres;
  
#line 428 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 429 
  u8 rx_rate = (unsigned char)0U;
  
#line 431 
  rx_rate = (unsigned char)((unsigned int)((unsigned char)*((__le32 *)(pdesc + 12U))) & 127U);
  
#line 433 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4096ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 433 
    ;
    
#line 433 
    tmp = preempt_count();
    
#line 433 
    tmp_0 = preempt_count();
    
#line 433 
    printk("\001","rtl8821ae_get_rxdesc_is_vht",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rx_rate);
  }
  else ;
  
#line 435 
  if ((unsigned int)rx_rate > 43U) {
    
#line 436 
    __retres = (_Bool)1;
    
#line 436 
    goto return_label;
  }
  else ;
  
#line 437 
  __retres = (_Bool)0;
  return_label: 
#line 437 
                return __retres;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u8 rtl8821ae_get_rx_vht_nss(struct ieee80211_hw *hw, u8 *pdesc)
{
  
#line 442 
  u8 rx_rate = (unsigned char)0U;
  
#line 443 
  u8 vht_nss = (unsigned char)0U;
  
#line 445 
  rx_rate = (unsigned char)((unsigned int)((unsigned char)*((__le32 *)(pdesc + 12U))) & 127U);
  
#line 446 
  if ((unsigned int)rx_rate + 212U <= 9U) 
#line 448 
                                          vht_nss = (unsigned char)1U;
  else 
    
#line 449 
    if ((unsigned int)rx_rate + 202U <= 9U) 
#line 451 
                                            vht_nss = (unsigned char)2U; else ;
  
#line 453 
  return vht_nss;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
bool rtl8821ae_rx_query_desc(struct ieee80211_hw *hw, struct rtl_stats *status, struct ieee80211_rx_status *rx_status, u8 *pdesc, struct sk_buff *skb)
{
  bool __retres;
  struct rx_fwinfo_8821ae *p_drvinfo;
  struct ieee80211_hdr *hdr;
  int tmp_8;
  
#line 461 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 465 
  u32 phystatus = (*((__le32 *)pdesc) >> 26) & 1U;
  
#line 467 
  status->length = (unsigned short)((unsigned int)((unsigned short)*((__le32 *)pdesc)) & 16383U);
  
#line 468 
  status->rx_drvinfo_size = (unsigned char)(((unsigned int)((unsigned char)(*((__le32 *)pdesc) >> 16)) & 15U) * 8U);
  
#line 470 
  status->rx_bufshift = (unsigned char)((unsigned int)((unsigned char)(*((__le32 *)pdesc) >> 24)) & 3U);
  
#line 471 
  status->icv = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(*((__le32 *)pdesc) >> 15);
  
#line 472 
  status->crc = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(*((__le32 *)pdesc) >> 14);
  
#line 473 
  status->hwerror = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((int)status->crc | (int)status->icv);
  
#line 474 
  status->decrypted = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((*((__le32 *)pdesc) & 134217728U) == 0U);
  
#line 475 
  status->rate = (unsigned char)((unsigned int)((unsigned char)*((__le32 *)(pdesc + 12U))) & 127U);
  
#line 476 
  status->shortpreamble = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))*((__le32 *)(pdesc + 16U));
  
#line 477 
  status->isampdu = (_Bool)((*((__le32 *)(pdesc + 4U)) & 32768U) != 0U);
  
#line 478 
  status->isfirst_ampdu = (_Bool)((*((__le32 *)(pdesc + 4U)) & 32768U) != 0U);
  
#line 479 
  status->timestamp_low = *((__le32 *)(pdesc + 20U));
  
#line 480 
  status->rx_packet_bw = (unsigned char)((unsigned int)((unsigned char)(*((__le32 *)(pdesc + 16U)) >> 4)) & 3U);
  
#line 481 
  status->macid = *((__le32 *)(pdesc + 4U)) & 127U;
  
#line 482 
  status->is_short_gi = (_Bool)((*((__le32 *)(pdesc + 16U)) & 1U) == 0U);
  
#line 483 
  status->is_ht = rtl8821ae_get_rxdesc_is_ht(hw,pdesc);
  
#line 484 
  status->is_vht = rtl8821ae_get_rxdesc_is_vht(hw,pdesc);
  
#line 485 
  status->vht_nss = rtl8821ae_get_rx_vht_nss(hw,pdesc);
  
#line 486 
  status->is_cck = (_Bool)((unsigned int)status->rate <= 3U);
  
#line 488 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4096ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    char *tmp_0;
    int tmp_1;
    int tmp_2;
    
#line 488 
    ;
    
#line 488 
    ;
    
#line 488 
    ;
    
#line 488 
    ;
    
#line 488 
    if ((unsigned int)status->rx_packet_bw != 2U) {
      char *tmp;
      
#line 488 
      if ((unsigned int)status->rx_packet_bw == 1U) 
#line 488 
                                                    tmp = (char *)"40M"; else 
                                                                    
#line 488 
                                                                    tmp = (char *)"20M";
      
#line 488 
      tmp_0 = tmp;
    }
    else 
#line 488 
         tmp_0 = (char *)"80M";
    
#line 488 
    tmp_1 = preempt_count();
    
#line 488 
    tmp_2 = preempt_count();
    
#line 488 
    printk("\001","rtl8821ae_rx_query_desc",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,tmp_0,(int)status->is_ht,(int)status->is_vht,(int)status->vht_nss,(int)status->is_short_gi);
  }
  else ;
  
#line 495 
  if ((*((__le32 *)(pdesc + 8U)) & 268435456U) != 0U) 
#line 496 
                                                      status->packet_report_type = (unsigned char)4U; else 
                                                                    
#line 498 
                                                                    status->packet_report_type = (unsigned char)0U;
  
#line 500 
  if ((*((__le32 *)(pdesc + 12U)) & 536870912U) != 0U) 
#line 501 
                                                       status->wake_match = (unsigned char)4U;
  else 
    
#line 502 
    if (*((__le32 *)(pdesc + 12U)) < (__le32)0) 
#line 503 
                                                status->wake_match = (unsigned char)2U;
    else 
      
#line 504 
      if ((*((__le32 *)(pdesc + 12U)) & 1073741824U) != 0U) 
#line 505 
                                                            status->wake_match = (unsigned char)1U; else 
                                                                    
#line 507 
                                                                    status->wake_match = (unsigned char)0U;
  
#line 509 
  if ((unsigned int)status->wake_match != 0U) {
    
#line 510 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4096ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 510 
      ;
      
#line 510 
      tmp_3 = preempt_count();
      
#line 510 
      tmp_4 = preempt_count();
      
#line 510 
      printk("\001","rtl8821ae_rx_query_desc",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)status->wake_match);
    }
    else ;
  }
  else ;
  
#line 513 
  rx_status->freq = (hw->conf.chandef.chan)->center_freq;
  
#line 514 
  rx_status->band = (unsigned char)(hw->conf.chandef.chan)->band;
  
#line 516 
  hdr = (struct ieee80211_hdr *)(skb->data + ((int)status->rx_drvinfo_size + (int)status->rx_bufshift));
  
#line 519 
  if ((unsigned int)*((unsigned char *)status + 58UL) != 0U) 
#line 520 
                                                             rx_status->flag |= 32U; else ;
  
#line 522 
  if ((unsigned int)status->rx_packet_bw == 1U) 
#line 523 
                                                rx_status->flag |= 1024U;
  else 
    
#line 524 
    if ((unsigned int)status->rx_packet_bw == 2U) 
#line 525 
                                                  rx_status->vht_flag = (unsigned char)((unsigned int)rx_status->vht_flag | 1U); else ;
  
#line 526 
  if ((int)status->is_ht != 0) 
#line 527 
                               rx_status->flag |= 512U; else ;
  
#line 528 
  if ((int)status->is_vht != 0) 
#line 529 
                                rx_status->flag |= 4194304U; else ;
  
#line 531 
  if ((int)status->is_short_gi != 0) 
#line 532 
                                     rx_status->flag |= 2048U; else ;
  
#line 534 
  rx_status->vht_nss = status->vht_nss;
  
#line 535 
  rx_status->flag |= 128U;
  
#line 545 
  if ((unsigned int)*((unsigned char *)status + 58UL) != 0U) {
    int tmp_6;
    bool tmp_5;
    
#line 546 
    tmp_5 = _ieee80211_is_robust_mgmt_frame(hdr);
    
#line 546 
    if (tmp_5) 
#line 546 
               tmp_6 = 0; else 
#line 546 
                               tmp_6 = 1;
    
#line 546 
    if (tmp_6) {
      int tmp_7;
      
#line 546 
      tmp_7 = ieee80211_has_protected((unsigned short)((int)hdr->frame_control));
      
#line 546 
      if (tmp_7 != 0) 
#line 548 
                      rx_status->flag |= 2U; else 
#line 550 
                                                  rx_status->flag &= 4294967293U;
    }
    else 
#line 550 
         rx_status->flag &= 4294967293U;
  }
  else ;
  
#line 557 
  tmp_8 = rtlwifi_rate_mapping(hw,(_Bool)((bool)((int)status->is_ht) != 0),(_Bool)((bool)((int)status->is_vht) != 0),(unsigned char)((int)status->rate));
  
#line 557 
  rx_status->rate_idx = (unsigned char)tmp_8;
  
#line 561 
  rx_status->mactime = (unsigned long long)status->timestamp_low;
  
#line 562 
  if (phystatus != 0U) {
    
#line 563 
    p_drvinfo = (struct rx_fwinfo_8821ae *)(skb->data + (int)status->rx_bufshift);
    
#line 566 
    translate_rx_signal_stuff(hw,skb,status,pdesc,p_drvinfo);
  }
  else ;
  
#line 568 
  rx_status->signal = (signed char)((unsigned int)status->recvsignalpower + 10U);
  
#line 569 
  if ((unsigned int)status->packet_report_type == 2U) {
    
#line 570 
    status->macid_valid_entry[0] = *((__le32 *)(pdesc + 16U));
    
#line 572 
    status->macid_valid_entry[1] = *((__le32 *)(pdesc + 20U));
  }
  else ;
  
#line 575 
  __retres = (_Bool)1;
  
#line 575 
  return __retres;
}


#line 578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u8 rtl8821ae_bw_mapping(struct ieee80211_hw *hw, struct rtl_tcb_desc *ptcb_desc)
{
  
#line 581 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 582 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 583 
  u8 bw_setting_of_desc = (unsigned char)0U;
  
#line 585 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 585 
    ;
    
#line 585 
    ;
    
#line 585 
    tmp = preempt_count();
    
#line 585 
    tmp_0 = preempt_count();
    
#line 585 
    printk("\001","rtl8821ae_bw_mapping",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtlphy->current_chan_bw,(int)ptcb_desc->packet_bw);
  }
  else ;
  
#line 589 
  if ((unsigned int)rtlphy->current_chan_bw == 2U) 
    
#line 590 
    if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 2U) 
#line 591 
                                                                 bw_setting_of_desc = (unsigned char)2U;
    else 
      
#line 592 
      if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 1U) 
#line 593 
                                                                   bw_setting_of_desc = (unsigned char)1U; else 
                                                                    
#line 595 
                                                                    bw_setting_of_desc = (unsigned char)0U;
  else 
    
#line 596 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) 
      
#line 597 
      if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) + 255U <= 1U) 
        
#line 599 
        bw_setting_of_desc = (unsigned char)1U; else 
#line 601 
                                                     bw_setting_of_desc = (unsigned char)0U;
    else 
#line 603 
         bw_setting_of_desc = (unsigned char)0U;
  
#line 605 
  return bw_setting_of_desc;
}


#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
static u8 rtl8821ae_sc_mapping(struct ieee80211_hw *hw, struct rtl_tcb_desc *ptcb_desc)
{
  
#line 611 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 612 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 613 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 614 
  u8 sc_setting_of_desc = (unsigned char)0U;
  
#line 616 
  if ((unsigned int)rtlphy->current_chan_bw == 2U) {
    
#line 617 
    if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 2U) 
#line 618 
                                                                 sc_setting_of_desc = (unsigned char)0U;
    else 
      
#line 619 
      if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 1U) {
        
#line 620 
        if ((unsigned int)mac->cur_80_prime_sc == 1U) 
#line 622 
                                                      sc_setting_of_desc = (unsigned char)10U;
        else 
          
#line 624 
          if ((unsigned int)mac->cur_80_prime_sc == 2U) 
#line 626 
                                                        sc_setting_of_desc = (unsigned char)9U;
          else 
            
#line 629 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
              int tmp;
              int tmp_0;
              
#line 629 
              tmp = preempt_count();
              
#line 629 
              tmp_0 = preempt_count();
              
#line 629 
              printk("\001","rtl8821ae_sc_mapping",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
            }
            else ;
      }
      else 
        
#line 632 
        if ((unsigned int)mac->cur_40_prime_sc == 1U && (unsigned int)mac->cur_80_prime_sc == 1U) 
          
#line 636 
          sc_setting_of_desc = (unsigned char)4U;
        else 
          
#line 638 
          if ((unsigned int)mac->cur_40_prime_sc == 2U && (unsigned int)mac->cur_80_prime_sc == 1U) 
            
#line 642 
            sc_setting_of_desc = (unsigned char)2U;
          else 
            
#line 644 
            if ((unsigned int)mac->cur_40_prime_sc == 1U && (unsigned int)mac->cur_80_prime_sc == 2U) 
              
#line 648 
              sc_setting_of_desc = (unsigned char)1U;
            else 
              
#line 650 
              if ((unsigned int)mac->cur_40_prime_sc == 2U && (unsigned int)mac->cur_80_prime_sc == 2U) 
                
#line 654 
                sc_setting_of_desc = (unsigned char)3U;
              else 
                
#line 657 
                if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
                  int tmp_1;
                  int tmp_2;
                  
#line 657 
                  tmp_1 = preempt_count();
                  
#line 657 
                  tmp_2 = preempt_count();
                  
#line 657 
                  printk("\001","rtl8821ae_sc_mapping",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
                }
                else ;
  }
  else 
    
#line 660 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) {
      
#line 661 
      if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 1U) 
#line 662 
                                                                   sc_setting_of_desc = (unsigned char)0U;
      else 
        
#line 663 
        if ((unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 0U) 
          
#line 664 
          if ((unsigned int)mac->cur_40_prime_sc == 2U) 
#line 666 
                                                        sc_setting_of_desc = (unsigned char)1U;
          else 
            
#line 668 
            if ((unsigned int)mac->cur_40_prime_sc == 1U) 
#line 670 
                                                          sc_setting_of_desc = (unsigned char)2U; else 
                                                                    
#line 673 
                                                                    sc_setting_of_desc = (unsigned char)0U;
        else ;
    }
    else 
#line 677 
         sc_setting_of_desc = (unsigned char)0U;
  
#line 680 
  return sc_setting_of_desc;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
void rtl8821ae_tx_fill_desc(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, u8 *pdesc_tx, u8 *txbd, struct ieee80211_tx_info *info, struct ieee80211_sta *sta, struct sk_buff *skb, u8 hw_queue, struct rtl_tcb_desc *ptcb_desc)
{
  u16 seq_number;
  dma_addr_t mapping;
  int tmp_2;
  int tmp_3;
  unsigned int tmp_13;
  unsigned int tmp_14;
  int tmp_15;
  unsigned int tmp_16;
  bool tmp_18;
  u8 *tmp_17;
  
#line 690 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 691 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 692 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 693 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 694 
  u8 *pdesc = pdesc_tx;
  
#line 696 
  __le16 fc = hdr->frame_control;
  
#line 697 
  unsigned int buf_len = 0U;
  
#line 698 
  unsigned int skb_len = skb->len;
  
#line 699 
  u8 fw_qsel = _rtl8821ae_map_hwqueue_to_fwqueue(skb,(unsigned char)((int)hw_queue));
  
#line 700 
  bool firstseg = (_Bool)(((int)hdr->seq_ctrl & 15) == 0);
  
#line 702 
  bool lastseg = (_Bool)(((int)hdr->frame_control & 1024) == 0);
  
#line 705 
  u8 short_gi = (unsigned char)0U;
  
#line 707 
  seq_number = (unsigned short)((int)hdr->seq_ctrl >> 4);
  
#line 708 
  rtl_get_tcb_desc(hw,info,sta,skb,ptcb_desc);
  
#line 710 
  if ((int)rtlhal->earlymode_enable != 0) {
    
#line 711 
    skb_push(skb,8U);
    
#line 712 
    memset((void *)skb->data,0,8UL);
  }
  else ;
  
#line 714 
  buf_len = skb->len;
  
#line 715 
  mapping = pci_map_single(rtlpci->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 717 
  tmp_2 = pci_dma_mapping_error(rtlpci->pdev,mapping);
  
#line 717 
  if (tmp_2 != 0) {
    
#line 718 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 718 
      tmp_0 = preempt_count();
      
#line 718 
      tmp_1 = preempt_count();
      
#line 718 
      printk("\001","rtl8821ae_tx_fill_desc",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
    }
    else ;
    
#line 720 
    goto return_label;
  }
  else ;
  
#line 722 
  memset((void *)pdesc,0,40UL);
  
#line 723 
  tmp_3 = ieee80211_is_nullfunc((unsigned short)((int)fc));
  
#line 723 
  if (tmp_3 != 0) 
#line 723 
                  goto _LOR;
  else {
    int tmp_4;
    
#line 723 
    tmp_4 = ieee80211_is_ctl((unsigned short)((int)fc));
    
#line 723 
    if (tmp_4 != 0) {
      _LOR: {
              
#line 724 
              firstseg = (_Bool)1;
              
#line 725 
              lastseg = (_Bool)1;
            }
    }
    else ;
  }
  
#line 727 
  if ((int)firstseg != 0) {
    unsigned int tmp_7;
    u8 tmp_8;
    u8 tmp_9;
    int tmp_12;
    
#line 728 
    if ((int)rtlhal->earlymode_enable != 0) {
      
#line 729 
      *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 3774873599U) | 16777216U;
      
#line 730 
      *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4278255615U) | 3145728U;
      
#line 732 
      if ((unsigned int)ptcb_desc->empkt_num != 0U) {
        
#line 733 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
          int tmp_5;
          int tmp_6;
          
#line 733 
          ;
          
#line 733 
          tmp_5 = preempt_count();
          
#line 733 
          tmp_6 = preempt_count();
          
#line 733 
          printk("\001","rtl8821ae_tx_fill_desc",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)ptcb_desc->empkt_num);
        }
        else ;
        
#line 736 
        _rtl8821ae_insert_emcontent(ptcb_desc,skb->data);
      }
      else ;
    }
    else 
#line 740 
         *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4278255615U) | 2621440U;
    
#line 744 
    *((u32 *)(pdesc + 16U)) = (*((__le32 *)(pdesc + 16U)) & 4294967168U) | ((unsigned int)ptcb_desc->hw_rate & 127U);
    
#line 745 
    if ((unsigned int)ptcb_desc->hw_rate > 12U) 
#line 746 
                                                short_gi = (unsigned char)((unsigned int)*((unsigned char *)ptcb_desc + 3UL) & 1U); else 
                                                                    
#line 748 
                                                                    short_gi = (unsigned char)((unsigned int)((unsigned char)((int)*((unsigned char *)ptcb_desc + 3UL) >> 1)) & 1U);
    
#line 750 
    *(pdesc + 20U) = (unsigned char)(((int)*(pdesc + 20U) & -17) | (((int)short_gi << 4) & 16));
    
#line 752 
    if ((info->flags & 64U) != 0U) {
      
#line 753 
      *((u32 *)(pdesc + 8U)) |= 4096U;
      
#line 754 
      *((u32 *)(pdesc + 12U)) |= 4063232U;
    }
    else ;
    
#line 756 
    *((u32 *)(pdesc + 36U)) = (*((__le32 *)(pdesc + 36U)) & 4278194175U) | (((unsigned int)seq_number << 12) & 16773120U);
    
#line 757 
    *((u32 *)(pdesc + 12U)) = (*((__le32 *)(pdesc + 12U)) & 4294963199U) | (((unsigned int)(((unsigned int)*((unsigned char *)ptcb_desc + 0UL) != 0U && (unsigned int)*((unsigned char *)ptcb_desc + 0UL) == 0U) != 0) << 12) & 4096U);
    
#line 759 
    *((u32 *)(pdesc + 12U)) &= 4294959103U;
    
#line 760 
    *((u32 *)(pdesc + 12U)) = (*((__le32 *)(pdesc + 12U)) & 4294965247U) | (((unsigned int)((int)*((unsigned char *)ptcb_desc + 0UL) >> 6) << 11) & 2048U);
    
#line 762 
    *((u32 *)(pdesc + 16U)) = (*((__le32 *)(pdesc + 16U)) & 3774873599U) | (((unsigned int)ptcb_desc->rts_rate << 24) & 520093696U);
    
#line 763 
    *((u32 *)(pdesc + 20U)) = (*((__le32 *)(pdesc + 20U)) & 4294844415U) | ((unsigned int)ptcb_desc->rts_sc << 13);
    
#line 764 
    if ((unsigned int)ptcb_desc->rts_rate <= 11U) 
#line 764 
                                                  tmp_7 = ((unsigned int)((int)*((unsigned char *)ptcb_desc + 0UL) >> 7) << 12) & 4096U; else 
                                                                    
#line 764 
                                                                    tmp_7 = ((unsigned int)*((unsigned char *)ptcb_desc + 1UL) << 12) & 4096U;
    
#line 764 
    *((u32 *)(pdesc + 20U)) = (*((__le32 *)(pdesc + 20U)) & 4294963199U) | tmp_7;
    
#line 769 
    if ((int)ptcb_desc->tx_enable_sw_calc_duration != 0) 
#line 770 
                                                         *((u32 *)(pdesc + 12U)) |= 32768U; else ;
    
#line 772 
    tmp_8 = rtl8821ae_bw_mapping(hw,ptcb_desc);
    
#line 772 
    *((u32 *)(pdesc + 20U)) = (*((__le32 *)(pdesc + 20U)) & 4294967199U) | (((unsigned int)tmp_8 << 5) & 96U);
    
#line 775 
    tmp_9 = rtl8821ae_sc_mapping(hw,ptcb_desc);
    
#line 775 
    *((u32 *)(pdesc + 20U)) = (*((__le32 *)(pdesc + 20U)) & 4294967280U) | ((unsigned int)tmp_9 & 15U);
    
#line 778 
    *((u32 *)pdesc) &= 4026531839U;
    
#line 779 
    *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4294901760U) | (unsigned int)((unsigned short)skb_len);
    
#line 780 
    if (sta != (struct ieee80211_sta *)0) {
      
#line 781 
      u8 ampdu_density = sta->ht_cap.ampdu_density;
      
#line 783 
      *((u32 *)(pdesc + 8U)) = (*((__le32 *)(pdesc + 8U)) & 4287627263U) | (((unsigned int)ampdu_density << 20) & 7340032U);
    }
    else ;
    
#line 785 
    if (info->__anonCompField_ieee80211_tx_info_98.control.hw_key != (struct ieee80211_key_conf *)0) {
      
#line 786 
      struct ieee80211_key_conf *keyconf = info->__anonCompField_ieee80211_tx_info_98.control.hw_key;
      
#line 788 
      switch (keyconf->cipher) {
        case (u32)1027073: 
#line 789 
        ;
        case (u32)1027077: 
#line 790 
        ;
        case (u32)1027074: 
#line 791 
        ;
        
#line 792 
        *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 4282384383U) | 4194304U;
        
#line 793 
        goto ldv_55260;
        case (u32)1027076: 
#line 794 
        ;
        
#line 795 
        *((u32 *)(pdesc + 4U)) |= 12582912U;
        
#line 796 
        goto ldv_55260;
        default: 
#line 797 
        ;
        
#line 798 
        *((u32 *)(pdesc + 4U)) &= 4282384383U;
        
#line 799 
        goto ldv_55260;
      }
      ldv_55260: 
#line 801 
      ;
    }
    else ;
    
#line 803 
    *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 4294959359U) | (((unsigned int)fw_qsel << 8) & 7936U);
    
#line 804 
    *((u32 *)(pdesc + 16U)) |= 7936U;
    
#line 805 
    *((u32 *)(pdesc + 16U)) |= 122880U;
    
#line 806 
    *((u32 *)(pdesc + 12U)) = (*((__le32 *)(pdesc + 12U)) & 4294966271U) | (((unsigned int)((int)*((unsigned char *)ptcb_desc + 3UL) >> 3) << 10) & 1024U);
    
#line 808 
    *((u32 *)(pdesc + 12U)) = (*((__le32 *)(pdesc + 12U)) & 4294967039U) | (((unsigned int)((int)*((unsigned char *)ptcb_desc + 3UL) >> 2) << 8) & 256U);
    
#line 810 
    tmp_12 = ieee80211_is_data_qos((unsigned short)((int)fc));
    
#line 810 
    if (tmp_12 != 0) {
      
#line 811 
      if ((int)mac->rdg_en != 0) {
        
#line 812 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
          int tmp_10;
          int tmp_11;
          
#line 812 
          tmp_10 = preempt_count();
          
#line 812 
          tmp_11 = preempt_count();
          
#line 812 
          printk("\001","rtl8821ae_tx_fill_desc",(unsigned long)tmp_11 & 2096896UL,tmp_10 != 0);
        }
        else ;
        
#line 814 
        *((u32 *)(pdesc + 8U)) |= 8192U;
        
#line 815 
        *((u32 *)pdesc) |= 33554432U;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 820 
  if ((int)firstseg != 0) 
#line 820 
                          tmp_13 = 134217728U; else 
#line 820 
                                                    tmp_13 = 0U;
  
#line 820 
  *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4160749567U) | tmp_13;
  
#line 821 
  if ((int)lastseg != 0) 
#line 821 
                         tmp_14 = 67108864U; else 
#line 821 
                                                  tmp_14 = 0U;
  
#line 821 
  *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4227858431U) | tmp_14;
  
#line 822 
  *((u32 *)(pdesc + 28U)) = (*((__le32 *)(pdesc + 28U)) & 4294901760U) | (unsigned int)((unsigned short)buf_len);
  
#line 823 
  *((u32 *)(pdesc + 40U)) = (unsigned int)mapping;
  
#line 826 
  *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 4292935679U) | (((unsigned int)ptcb_desc->ratr_index << 16) & 2031616U);
  
#line 827 
  *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 4294967168U) | ((unsigned int)ptcb_desc->mac_id & 127U);
  
#line 832 
  tmp_15 = ieee80211_is_data_qos((unsigned short)((int)fc));
  
#line 832 
  if (tmp_15 == 0) {
    
#line 833 
    *((u32 *)(pdesc + 32U)) |= 32768U;
    
#line 834 
    *((u32 *)(pdesc + 12U)) &= 4294967103U;
  }
  else ;
  
#line 836 
  if (lastseg) 
#line 836 
               tmp_16 = 0U; else 
#line 836 
                                 tmp_16 = 131072U;
  
#line 836 
  *((u32 *)(pdesc + 8U)) = (*((__le32 *)(pdesc + 8U)) & 4294836223U) | tmp_16;
  
#line 837 
  tmp_17 = ieee80211_get_DA(hdr);
  
#line 837 
  tmp_18 = is_multicast_ether_addr((u8 const *)tmp_17);
  
#line 837 
  if ((int)tmp_18 != 0) 
#line 839 
                        *((u32 *)pdesc) |= 16777216U;
  else {
    bool tmp_20;
    u8 *tmp_19;
    
#line 838 
    tmp_19 = ieee80211_get_DA(hdr);
    
#line 837 
    tmp_20 = is_broadcast_ether_addr((u8 const *)tmp_19);
    
#line 837 
    if ((int)tmp_20 != 0) 
#line 839 
                          *((u32 *)pdesc) |= 16777216U; else ;
  }
  
#line 842 
  rtl8821ae_dm_set_tx_ant_by_tx_info(hw,pdesc,(unsigned int)ptcb_desc->mac_id);
  
#line 843 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_21;
    int tmp_22;
    
#line 843 
    tmp_21 = preempt_count();
    
#line 843 
    tmp_22 = preempt_count();
    
#line 843 
    printk("\001","rtl8821ae_tx_fill_desc",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0);
  }
  else ;
  return_label: 
#line 844 
                return;
}


#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
void rtl8821ae_tx_fill_cmddesc(struct ieee80211_hw *hw, u8 *pdesc, bool firstseg, bool lastseg, struct sk_buff *skb)
{
  int tmp_2;
  
#line 850 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 851 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 852 
  u8 fw_queue = (unsigned char)16U;
  
#line 854 
  dma_addr_t mapping = pci_map_single(rtlpci->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 858 
  tmp_2 = pci_dma_mapping_error(rtlpci->pdev,mapping);
  
#line 858 
  if (tmp_2 != 0) {
    
#line 859 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 859 
      tmp_0 = preempt_count();
      
#line 859 
      tmp_1 = preempt_count();
      
#line 859 
      printk("\001","rtl8821ae_tx_fill_cmddesc",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0);
    }
    else ;
    
#line 861 
    goto return_label;
  }
  else ;
  
#line 863 
  memset((void *)pdesc,0,40UL);
  
#line 865 
  *((u32 *)pdesc) |= 134217728U;
  
#line 866 
  *((u32 *)pdesc) |= 67108864U;
  
#line 868 
  *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4294901760U) | (unsigned int)((unsigned short)skb->len);
  
#line 870 
  *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4278255615U) | 2621440U;
  
#line 872 
  *((u32 *)(pdesc + 12U)) |= 256U;
  
#line 873 
  *((u32 *)(pdesc + 16U)) &= 4294967168U;
  
#line 874 
  *((u32 *)(pdesc + 12U)) |= 1024U;
  
#line 876 
  *((u32 *)(pdesc + 20U)) &= 4294967199U;
  
#line 878 
  *((u32 *)(pdesc + 32U)) |= 32768U;
  
#line 880 
  *((u32 *)(pdesc + 4U)) = (*((__le32 *)(pdesc + 4U)) & 4294959359U) | (((unsigned int)fw_queue << 8) & 7936U);
  
#line 882 
  *((u32 *)(pdesc + 28U)) = (*((__le32 *)(pdesc + 28U)) & 4294901760U) | (unsigned int)((unsigned short)skb->len);
  
#line 884 
  *((u32 *)(pdesc + 40U)) = (unsigned int)mapping;
  
#line 886 
  *((u32 *)(pdesc + 4U)) &= 4294967168U;
  
#line 888 
  *((u32 *)pdesc) |= 2147483648U;
  
#line 890 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    struct task_struct *tmp_3;
    struct task_struct *tmp_4;
    
#line 890 
    tmp_3 = get_current();
    
#line 890 
    tmp_4 = get_current();
    
#line 890 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_4->comm),tmp_3->pid,(char *)"H2C Tx Cmd Content\n");
    {
      
#line 890 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_tx_fill_cmddesc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))892U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 890 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 890 
                                                          print_hex_dump("\001","",0,16,1,(void const *)pdesc,40UL,(_Bool)1); else ;
    }
  }
  else ;
  return_label: 
#line 893 
                return;
}


#line 895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
void rtl8821ae_set_desc(struct ieee80211_hw *hw, u8 *pdesc, bool istx, u8 desc_name, u8 *val)
{
  
#line 898 
  if ((int)istx != 0) {
    
#line 899 
    switch ((int)desc_name) {
      case 0: 
#line 900 
      ;
      
#line 901 
      *((u32 *)pdesc) |= 2147483648U;
      
#line 902 
      goto ldv_55284;
      case 2: 
#line 903 
      ;
      
#line 904 
      *((u32 *)(pdesc + 48U)) = *((u32 *)val);
      
#line 905 
      goto ldv_55284;
      default: 
#line 906 
      ;
      
#line 907 
      printk("\001","rtl8821ae_set_desc",(int)desc_name);
      
#line 909 
      goto ldv_55284;
    }
    ldv_55284: 
#line 911 
    ;
  }
  else {
    
#line 912 
    switch ((int)desc_name) {
      case 1: 
#line 913 
      ;
      
#line 914 
      *((u32 *)pdesc) |= 2147483648U;
      
#line 915 
      goto ldv_55289;
      case 4: 
#line 916 
      ;
      
#line 917 
      *((u32 *)(pdesc + 24U)) = *((u32 *)val);
      
#line 918 
      goto ldv_55289;
      case 5: 
#line 919 
      ;
      
#line 920 
      *((u32 *)pdesc) = (*((__le32 *)pdesc) & 4294950912U) | (*((u32 *)val) & 16383U);
      
#line 921 
      goto ldv_55289;
      case 6: 
#line 922 
      ;
      
#line 923 
      *((u32 *)pdesc) |= 1073741824U;
      
#line 924 
      goto ldv_55289;
      default: 
#line 925 
      ;
      
#line 926 
      printk("\001","rtl8821ae_set_desc",(int)desc_name);
      
#line 928 
      goto ldv_55289;
    }
    ldv_55289: 
#line 930 
    ;
  }
  
#line 932 
  return;
}


#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
u32 rtl8821ae_get_desc(u8 *pdesc, bool istx, u8 desc_name)
{
  
#line 935 
  u32 ret = 0U;
  
#line 937 
  if ((int)istx != 0) {
    
#line 938 
    switch ((int)desc_name) {
      case 0: 
#line 939 
      ;
      
#line 940 
      ret = *((__le32 *)pdesc) >> 31;
      
#line 941 
      goto ldv_55301;
      case 3: 
#line 942 
      ;
      
#line 943 
      ret = *((__le32 *)(pdesc + 40U));
      
#line 944 
      goto ldv_55301;
      default: 
#line 945 
      ;
      
#line 946 
      printk("\001","rtl8821ae_get_desc",(int)desc_name);
      
#line 948 
      goto ldv_55301;
    }
    ldv_55301: 
#line 950 
    ;
  }
  else {
    
#line 951 
    switch ((int)desc_name) {
      case 0: 
#line 952 
      ;
      
#line 953 
      ret = *((__le32 *)pdesc) >> 31;
      
#line 954 
      goto ldv_55306;
      case 5: 
#line 955 
      ;
      
#line 956 
      ret = *((__le32 *)pdesc) & 16383U;
      
#line 957 
      goto ldv_55306;
      case 4: 
#line 958 
      ;
      
#line 959 
      ret = *((__le32 *)(pdesc + 24U));
      
#line 960 
      goto ldv_55306;
      default: 
#line 961 
      ;
      
#line 962 
      printk("\001","rtl8821ae_get_desc",(int)desc_name);
      
#line 964 
      goto ldv_55306;
    }
    ldv_55306: 
#line 966 
    ;
  }
  
#line 967 
  return ret;
}


#line 970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
bool rtl8821ae_is_tx_desc_closed(struct ieee80211_hw *hw, u8 hw_queue, u16 index)
{
  bool __retres;
  u32 tmp;
  
#line 973 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  
#line 974 
  struct rtl8192_tx_ring *ring = & rtlpci->tx_ring[(int)hw_queue];
  
#line 975 
  u8 *entry = (u8 *)(ring->desc + ring->idx);
  
#line 976 
  tmp = rtl8821ae_get_desc(entry,(_Bool)1,(unsigned char)0);
  
#line 976 
  u8 own = (unsigned char)tmp;
  
#line 983 
  if ((unsigned int)own != 0U) {
    
#line 984 
    __retres = (_Bool)0;
    
#line 984 
    goto return_label;
  }
  else ;
  
#line 985 
  __retres = (_Bool)1;
  return_label: 
#line 985 
                return __retres;
}


#line 988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
void rtl8821ae_tx_polling(struct ieee80211_hw *hw, u8 hw_queue)
{
  
#line 990 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 992 
  if ((unsigned int)hw_queue == 4U) 
#line 993 
                                    rtl_write_word(rtlpriv,768U,(unsigned short)16); else 
                                                                    
#line 995 
                                                                    rtl_write_word(rtlpriv,768U,(unsigned short)((int)((unsigned short)(1UL << (int)hw_queue))));
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/trx.c"
u32 rtl8821ae_rx_command_packet(struct ieee80211_hw *hw, struct rtl_stats status, struct sk_buff *skb)
{
  
#line 1004 
  u32 result = 0U;
  
#line 1005 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1007 
  switch ((int)status.packet_report_type) {
    case 0: 
#line 1008 
    ;
    
#line 1009 
    result = 0U;
    
#line 1010 
    goto ldv_55332;
    case 4: 
#line 1011 
    ;
    
#line 1012 
    rtl8821ae_c2h_packet_handler(hw,skb->data,(unsigned char)((int)((unsigned char)skb->len)));
    
#line 1013 
    result = 1U;
    
#line 1014 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1014 
      ;
      
#line 1014 
      tmp = preempt_count();
      
#line 1014 
      tmp_0 = preempt_count();
      
#line 1014 
      printk("\001","rtl8821ae_rx_command_packet",(unsigned long)tmp_0 & 2096896UL,tmp != 0,skb->len);
    }
    else ;
    
#line 1016 
    goto ldv_55332;
    default: 
#line 1017 
    ;
    
#line 1018 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1018 
      tmp_1 = preempt_count();
      
#line 1018 
      tmp_2 = preempt_count();
      
#line 1018 
      printk("\001","rtl8821ae_rx_command_packet",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1020 
    goto ldv_55332;
  }
  ldv_55332: 
#line 1023 
  ;
  
#line 1023 
  return result;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_73_0(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv___ldv_spin_lock_72_0(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 1688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/core.h"
bool rtl_cmd_send_packet(struct ieee80211_hw *, struct sk_buff *);


#line 334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.h"
void rtl8821ae_set_fw_ap_off_load_cmd(struct ieee80211_hw *hw, u8 ap_offload_enable);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_enable_fw_download(struct ieee80211_hw *hw, bool enable)
{
  u8 tmp;
  
#line 37 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 40 
  if ((int)enable != 0) {
    
#line 41 
    rtl_write_byte(rtlpriv,128U,(unsigned char)5);
    
#line 43 
    tmp = rtl_read_byte(rtlpriv,130U);
    
#line 44 
    rtl_write_byte(rtlpriv,130U,(unsigned char)((int)tmp & 247));
    
#line 46 
    tmp = rtl_read_byte(rtlpriv,128U);
  }
  else {
    
#line 48 
    tmp = rtl_read_byte(rtlpriv,128U);
    
#line 49 
    rtl_write_byte(rtlpriv,128U,(unsigned char)((int)tmp & 254));
    
#line 50 
    tmp = rtl_read_byte(rtlpriv,128U);
  }
  
#line 52 
  return;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_fw_block_write(struct ieee80211_hw *hw, u8 const *buffer, u32 size)
{
  u32 i;
  u32 offset;
  u32 blockcount;
  u32 remainsize;
  
#line 57 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 58 
  u32 blocksize = 4U;
  
#line 59 
  u8 *bufferptr = (u8 *)buffer;
  
#line 60 
  u32 *pu4byteptr = (u32 *)buffer;
  
#line 63 
  blockcount = size / blocksize;
  
#line 64 
  remainsize = size % blocksize;
  
#line 66 
  i = 0U;
  
#line 66 
  goto ldv_54747;
  ldv_54746: 
#line 67 
  ;
  
#line 67 
  offset = i * blocksize;
  
#line 68 
  rtl_write_dword(rtlpriv,offset + 4096U,*(pu4byteptr + i));
  
#line 66 
  i += 1U;
  ldv_54747: 
#line 67 
  ;
  
#line 66 
  if (i < blockcount) 
#line 68 
                      goto ldv_54746; else 
#line 71 
                                           goto ldv_54748;
  ldv_54748: 
#line 72 
  ;
  
#line 72 
  if (remainsize != 0U) {
    
#line 73 
    offset = blockcount * blocksize;
    
#line 74 
    bufferptr += offset;
    
#line 75 
    i = 0U;
    
#line 75 
    goto ldv_54750;
    ldv_54749: 
#line 76 
    ;
    
#line 76 
    rtl_write_byte(rtlpriv,(offset + i) + 4096U,(unsigned char)((int)*(bufferptr + i)));
    
#line 75 
    i += 1U;
    ldv_54750: 
#line 76 
    ;
    
#line 75 
    if (i < remainsize) 
#line 77 
                        goto ldv_54749; else 
#line 80 
                                             goto ldv_54751;
    ldv_54751: 
#line 81 
    ;
  }
  else ;
  
#line 83 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_fw_page_write(struct ieee80211_hw *hw, u32 page, u8 const *buffer, u32 size)
{
  u8 value8;
  u8 tmp;
  
#line 85 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 87 
  u8 u8page = (unsigned char)((unsigned int)((unsigned char)page) & 7U);
  
#line 89 
  tmp = rtl_read_byte(rtlpriv,130U);
  
#line 89 
  value8 = (unsigned char)(((int)tmp & -8) | (int)u8page);
  
#line 91 
  rtl_write_byte(rtlpriv,130U,(unsigned char)((int)value8));
  
#line 92 
  _rtl8821ae_fw_block_write(hw,buffer,size);
  
#line 93 
  return;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_fill_dummy(u8 *pfwbuf, u32 *pfwlen)
{
  
#line 97 
  u32 fwlen = *pfwlen;
  
#line 98 
  u8 remain = (unsigned char)((unsigned int)((unsigned char)fwlen) & 3U);
  
#line 100 
  if ((unsigned int)remain != 0U) 
#line 100 
                                  remain = (unsigned char)(4U - (unsigned int)remain); else 
                                                                    
#line 100 
                                                                    remain = (unsigned char)0U;
  
#line 102 
  goto ldv_54768;
  ldv_54767: 
#line 103 
  ;
  
#line 103 
  *(pfwbuf + fwlen) = (unsigned char)0U;
  
#line 104 
  fwlen += 1U;
  
#line 105 
  remain = (u8)((int)remain - 1);
  ldv_54768: 
#line 106 
  ;
  
#line 102 
  if ((unsigned int)remain != 0U) 
#line 104 
                                  goto ldv_54767; else 
#line 107 
                                                       goto ldv_54769;
  ldv_54769: 
#line 108 
  ;
  
#line 108 
  *pfwlen = fwlen;
  
#line 109 
  return;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_write_fw(struct ieee80211_hw *hw, enum version_8821ae version, u8 *buffer, u32 size)
{
  u32 pagenums;
  u32 remainsize;
  u32 page;
  u32 offset;
  
#line 115 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 116 
  u8 *bufferptr = buffer;
  
#line 120 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 120 
    ;
    
#line 120 
    tmp = preempt_count();
    
#line 120 
    tmp_0 = preempt_count();
    
#line 120 
    printk("\001","_rtl8821ae_write_fw",(unsigned long)tmp_0 & 2096896UL,tmp != 0,size);
  }
  else ;
  
#line 122 
  _rtl8821ae_fill_dummy(bufferptr,& size);
  
#line 124 
  pagenums = size / 4096U;
  
#line 125 
  remainsize = size & 4095U;
  
#line 127 
  if (pagenums > 8U) {
    
#line 128 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 128 
      tmp_1 = preempt_count();
      
#line 128 
      tmp_2 = preempt_count();
      
#line 128 
      printk("\001","_rtl8821ae_write_fw",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
  }
  else ;
  
#line 132 
  page = 0U;
  
#line 132 
  goto ldv_54784;
  ldv_54783: 
#line 133 
  ;
  
#line 133 
  offset = page * 4096U;
  
#line 134 
  _rtl8821ae_fw_page_write(hw,page,(u8 const *)(bufferptr + offset),4096U);
  
#line 132 
  page += 1U;
  ldv_54784: 
#line 133 
  ;
  
#line 132 
  if (page < pagenums) 
#line 134 
                       goto ldv_54783; else 
#line 137 
                                            goto ldv_54785;
  ldv_54785: 
#line 138 
  ;
  
#line 138 
  if (remainsize != 0U) {
    
#line 139 
    offset = pagenums * 4096U;
    
#line 140 
    page = pagenums;
    
#line 141 
    _rtl8821ae_fw_page_write(hw,page,(u8 const *)(bufferptr + offset),remainsize);
  }
  else ;
  
#line 143 
  return;
}


#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static int _rtl8821ae_fw_free_to_go(struct ieee80211_hw *hw)
{
  u32 value32;
  u32 tmp;
  u32 tmp_6;
  
#line 148 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 149 
  int err = -5;
  
#line 150 
  u32 counter = 0U;
  ldv_54793: 
#line 152 
  ;
  
#line 154 
  value32 = rtl_read_dword(rtlpriv,128U);
  
#line 156 
  tmp = counter;
  
#line 156 
  counter += 1U;
  
#line 156 
  ;
  
#line 156 
  if (tmp <= 5999U) {
    
#line 155 
    if (((unsigned long)value32 & 4UL) == 0UL) 
#line 158 
                                               goto ldv_54793; else 
#line 161 
                                                                    goto ldv_54794;
  }
  else 
#line 161 
       goto ldv_54794;
  ldv_54794: 
#line 162 
  ;
  
#line 158 
  if (counter > 5999U) {
    
#line 159 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 159 
      ;
      
#line 159 
      tmp_0 = preempt_count();
      
#line 159 
      tmp_1 = preempt_count();
      
#line 159 
      printk("\001","_rtl8821ae_fw_free_to_go",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,value32);
    }
    else ;
    
#line 162 
    goto exit;
  }
  else ;
  
#line 165 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 165 
    ;
    
#line 165 
    tmp_2 = preempt_count();
    
#line 165 
    tmp_3 = preempt_count();
    
#line 165 
    printk("\001","_rtl8821ae_fw_free_to_go",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,value32);
  }
  else ;
  
#line 168 
  value32 = rtl_read_dword(rtlpriv,128U);
  
#line 169 
  value32 |= 2U;
  
#line 170 
  value32 &= 4294967231U;
  
#line 171 
  rtl_write_dword(rtlpriv,128U,value32);
  
#line 173 
  rtl8821ae_firmware_selfreset(hw);
  
#line 175 
  counter = 0U;
  ldv_54797: 
#line 176 
  ;
  
#line 177 
  value32 = rtl_read_dword(rtlpriv,128U);
  
#line 178 
  if (((unsigned long)value32 & 64UL) != 0UL) {
    
#line 179 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 179 
      ;
      
#line 179 
      tmp_4 = preempt_count();
      
#line 179 
      tmp_5 = preempt_count();
      
#line 179 
      printk("\001","_rtl8821ae_fw_free_to_go",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,value32);
    }
    else ;
    
#line 182 
    err = 0;
    
#line 183 
    goto exit;
  }
  else ;
  
#line 186 
  __const_udelay(21475UL);
  
#line 187 
  tmp_6 = counter;
  
#line 187 
  counter += 1U;
  
#line 187 
  ;
  
#line 187 
  if (tmp_6 <= 5999U) 
#line 189 
                      goto ldv_54797; else 
#line 192 
                                           goto ldv_54798;
  ldv_54798: 
#line 193 
  ;
  
#line 189 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
    int tmp_7;
    int tmp_8;
    
#line 189 
    ;
    
#line 189 
    tmp_7 = preempt_count();
    
#line 189 
    tmp_8 = preempt_count();
    
#line 189 
    printk("\001","_rtl8821ae_fw_free_to_go",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,value32);
  }
  else ;
  exit: 
#line 193 
  ;
  
#line 194 
  return err;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_wait_for_h2c_cmd_finish(struct rtl_priv *rtlpriv)
{
  u8 val;
  
#line 200 
  u16 count = (unsigned short)0U;
  ldv_54808: 
#line 201 
  ;
  
#line 203 
  val = rtl_read_byte(rtlpriv,460U);
  
#line 204 
  if (1) 
#line 204 
         __const_udelay(4295000UL);
  else {
    
#line 204 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp;
      
#line 204 
      goto ldv_54806;
      ldv_54805: 
#line 205 
      ;
      
#line 204 
      __const_udelay(4295000UL);
      ldv_54806: 
#line 206 
      ;
      
#line 204 
      tmp = __ms;
      
#line 204 
      __ms -= 1UL;
      
#line 204 
      ;
      
#line 204 
      if (tmp != 0UL) 
#line 206 
                      goto ldv_54805; else 
#line 209 
                                           goto ldv_54807;
      ldv_54807: 
#line 210 
      ;
    }
  }
  
#line 205 
  count = (u16)((int)count + 1);
  
#line 206 
  if (((int)val & 15) != 0 && (unsigned int)count <= 999U) 
#line 208 
                                                           goto ldv_54808; else 
                                                                    
#line 211 
                                                                    goto ldv_54809;
  ldv_54809: 
#line 212 
  ;
  
#line 213 
  return;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
int rtl8821ae_download_fw(struct ieee80211_hw *hw, bool buse_wake_on_wlan_fw)
{
  int __retres;
  struct rtl8821a_firmware_header *pfwheader;
  u8 *pfwdata;
  u32 fwsize;
  int err;
  bool support_remote_wakeup;
  
#line 211 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 212 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 218 
  enum version_8821ae version = rtlhal->version;
  
#line 220 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)92,(u8 *)(& support_remote_wakeup));
  
#line 223 
  if ((int)support_remote_wakeup != 0) 
#line 224 
                                       _rtl8821ae_wait_for_h2c_cmd_finish(rtlpriv); else ;
  
#line 226 
  if ((int)buse_wake_on_wlan_fw != 0) {
    
#line 227 
    if (rtlhal->wowlan_firmware == (u8 *)0U) {
      
#line 228 
      __retres = 1;
      
#line 228 
      goto return_label;
    }
    else ;
    
#line 230 
    pfwheader = (struct rtl8821a_firmware_header *)rtlhal->wowlan_firmware;
    
#line 232 
    rtlhal->fw_version = pfwheader->version;
    
#line 233 
    rtlhal->fw_subversion = (unsigned short)pfwheader->subversion;
    
#line 234 
    pfwdata = rtlhal->wowlan_firmware;
    
#line 235 
    fwsize = rtlhal->wowlan_fwsize;
  }
  else {
    
#line 237 
    if (rtlhal->pfirmware == (u8 *)0U) {
      
#line 238 
      __retres = 1;
      
#line 238 
      goto return_label;
    }
    else ;
    
#line 240 
    pfwheader = (struct rtl8821a_firmware_header *)rtlhal->pfirmware;
    
#line 242 
    rtlhal->fw_version = pfwheader->version;
    
#line 243 
    rtlhal->fw_subversion = (unsigned short)pfwheader->subversion;
    
#line 244 
    pfwdata = rtlhal->pfirmware;
    
#line 245 
    fwsize = rtlhal->fwsize;
  }
  
#line 248 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    char *tmp;
    int tmp_0;
    int tmp_1;
    
#line 248 
    ;
    
#line 248 
    if ((int)buse_wake_on_wlan_fw != 0) 
#line 248 
                                        tmp = (char *)"Wowlan"; else 
                                                                  
#line 248 
                                                                  tmp = (char *)"Normal";
    
#line 248 
    tmp_0 = preempt_count();
    
#line 248 
    tmp_1 = preempt_count();
    
#line 248 
    printk("\001","rtl8821ae_download_fw",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,tmp,fwsize);
  }
  else ;
  
#line 252 
  if (((int)pfwheader->signature & 65520) == 38144 || ((int)pfwheader->signature & 65520) == 8448) {
    
#line 254 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 254 
      ;
      
#line 254 
      ;
      
#line 254 
      tmp_2 = preempt_count();
      
#line 254 
      tmp_3 = preempt_count();
      
#line 254 
      printk("\001","rtl8821ae_download_fw",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)pfwheader->version,(int)pfwheader->signature);
    }
    else ;
    
#line 258 
    pfwdata += 32U;
    
#line 259 
    fwsize += 4294967264U;
  }
  else ;
  
#line 262 
  if ((int)rtlhal->mac_func_enable != 0) {
    u8 tmp_4;
    
#line 263 
    tmp_4 = rtl_read_byte(rtlpriv,128U);
    
#line 263 
    if ((int)tmp_4 < 0) {
      
#line 264 
      rtl_write_byte(rtlpriv,128U,(unsigned char)0);
      
#line 265 
      rtl8821ae_firmware_selfreset(hw);
    }
    else ;
  }
  else ;
  
#line 268 
  _rtl8821ae_enable_fw_download(hw,(_Bool)1);
  
#line 269 
  _rtl8821ae_write_fw(hw,version,pfwdata,fwsize);
  
#line 270 
  _rtl8821ae_enable_fw_download(hw,(_Bool)0);
  
#line 272 
  err = _rtl8821ae_fw_free_to_go(hw);
  
#line 273 
  if (err != 0) {
    
#line 274 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 274 
      tmp_5 = preempt_count();
      
#line 274 
      tmp_6 = preempt_count();
      
#line 274 
      printk("\001","rtl8821ae_download_fw",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
  }
  else 
    
#line 277 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 277 
      tmp_7 = preempt_count();
      
#line 277 
      tmp_8 = preempt_count();
      
#line 277 
      printk("\001","rtl8821ae_download_fw",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
  
#line 281 
  __retres = 0;
  return_label: 
#line 281 
                return __retres;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_related_for_wowlan(struct ieee80211_hw *hw, bool used_wowlan_fw)
{
  int tmp_1;
  
#line 288 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 289 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 290 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 292 
  tmp_1 = rtl8821ae_download_fw(hw,(_Bool)((bool)((int)used_wowlan_fw) != 0));
  
#line 292 
  if (tmp_1 != 0) {
    
#line 293 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      int tmp;
      int tmp_0;
      
#line 293 
      tmp = preempt_count();
      
#line 293 
      tmp_0 = preempt_count();
      
#line 293 
      printk("\001","rtl8821ae_set_fw_related_for_wowlan",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 295 
    rtlhal->fw_ready = (_Bool)0;
    
#line 296 
    goto return_label;
  }
  else ;
  
#line 298 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 298 
    tmp_2 = preempt_count();
    
#line 298 
    tmp_3 = preempt_count();
    
#line 298 
    printk("\001","rtl8821ae_set_fw_related_for_wowlan",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
  }
  else ;
  
#line 300 
  rtlhal->fw_ready = (_Bool)1;
  
#line 303 
  ppsc->fw_current_inpsmode = (_Bool)0;
  
#line 304 
  rtlhal->fw_ps_state = (unsigned char)0U;
  
#line 305 
  rtlhal->fw_clk_change_in_progress = (_Bool)0;
  
#line 306 
  rtlhal->allow_sw_to_change_hwclc = (_Bool)0;
  
#line 307 
  rtlhal->last_hmeboxnum = (unsigned char)0U;
  return_label: 
#line 308 
                return;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static bool _rtl8821ae_check_fw_read_last_h2c(struct ieee80211_hw *hw, u8 boxnum)
{
  u8 val_hmetfr;
  
#line 314 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 316 
  bool result = (_Bool)0;
  
#line 318 
  val_hmetfr = rtl_read_byte(rtlpriv,460U);
  
#line 319 
  if (((unsigned long)((int)val_hmetfr >> (int)boxnum) & 1UL) == 0UL) 
    
#line 320 
    result = (_Bool)1; else ;
  
#line 321 
  return result;
}


#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_fill_h2c_command(struct ieee80211_hw *hw, u8 element_id, u32 cmd_len, u8 *cmdbuffer)
{
  u8 boxcontent[4U];
  u8 boxextcontent[4U];
  
#line 328 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 329 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 330 
  u8 boxnum = (unsigned char)0U;
  
#line 331 
  u16 box_reg = (unsigned short)0U;
  
#line 331 
  u16 box_extreg = (unsigned short)0U;
  
#line 332 
  u8 u1b_tmp = (unsigned char)0U;
  
#line 333 
  bool isfw_read = (_Bool)0;
  
#line 334 
  u8 buf_index = (unsigned char)0U;
  
#line 335 
  bool bwrite_sucess = (_Bool)0;
  
#line 336 
  u8 wait_h2c_limmit = (unsigned char)100U;
  
#line 339 
  u32 h2c_waitcounter = 0U;
  
#line 340 
  unsigned long flag = 0UL;
  
#line 341 
  u8 idx = (unsigned char)0U;
  
#line 343 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 343 
    tmp = preempt_count();
    
#line 343 
    tmp_0 = preempt_count();
    
#line 343 
    printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  ldv_54864: 
#line 344 
  ;
  
#line 346 
  ldv___ldv_spin_lock_72_0(& rtlpriv->locks.h2c_lock);
  
#line 347 
  if ((int)rtlhal->h2c_setinprogress != 0) {
    
#line 348 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 348 
      ;
      
#line 348 
      tmp_1 = preempt_count();
      
#line 348 
      tmp_2 = preempt_count();
      
#line 348 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)element_id);
    }
    else ;
    
#line 352 
    goto ldv_54861;
    ldv_54860: 
#line 353 
    ;
    
#line 353 
    ldv_spin_unlock_irqrestore_73_0(& rtlpriv->locks.h2c_lock,flag);
    
#line 355 
    h2c_waitcounter += 1U;
    
#line 356 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 356 
      ;
      
#line 356 
      tmp_3 = preempt_count();
      
#line 356 
      tmp_4 = preempt_count();
      
#line 356 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,h2c_waitcounter);
    }
    else ;
    
#line 359 
    __const_udelay(429500UL);
    
#line 361 
    if (h2c_waitcounter > 1000U) 
#line 362 
                                 goto return_label; else ;
    
#line 363 
    ldv___ldv_spin_lock_74(& rtlpriv->locks.h2c_lock);
    ldv_54861: 
#line 364 
    ;
    
#line 352 
    if ((int)rtlhal->h2c_setinprogress != 0) 
#line 354 
                                             goto ldv_54860; else 
#line 357 
                                                                  goto ldv_54862;
    ldv_54862: 
#line 358 
    ;
    
#line 366 
    ldv_spin_unlock_irqrestore_75(& rtlpriv->locks.h2c_lock,flag);
  }
  else {
    
#line 368 
    rtlhal->h2c_setinprogress = (_Bool)1;
    
#line 369 
    ldv_spin_unlock_irqrestore_76(& rtlpriv->locks.h2c_lock,flag);
    
#line 370 
    goto ldv_54863;
  }
  
#line 346 
  goto ldv_54864;
  ldv_54863: 
#line 347 
  ;
  
#line 374 
  goto ldv_54894;
  ldv_54893: 
#line 375 
  ;
  
#line 375 
  boxnum = rtlhal->last_hmeboxnum;
  
#line 376 
  switch ((int)boxnum) {
    case 0: 
#line 377 
    ;
    
#line 378 
    box_reg = (unsigned short)464U;
    
#line 379 
    box_extreg = (unsigned short)496U;
    
#line 380 
    goto ldv_54866;
    case 1: 
#line 381 
    ;
    
#line 382 
    box_reg = (unsigned short)468U;
    
#line 383 
    box_extreg = (unsigned short)500U;
    
#line 384 
    goto ldv_54866;
    case 2: 
#line 385 
    ;
    
#line 386 
    box_reg = (unsigned short)472U;
    
#line 387 
    box_extreg = (unsigned short)504U;
    
#line 388 
    goto ldv_54866;
    case 3: 
#line 389 
    ;
    
#line 390 
    box_reg = (unsigned short)476U;
    
#line 391 
    box_extreg = (unsigned short)508U;
    
#line 392 
    goto ldv_54866;
    default: 
#line 393 
    ;
    
#line 394 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 394 
      tmp_5 = preempt_count();
      
#line 394 
      tmp_6 = preempt_count();
      
#line 394 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 396 
    goto ldv_54866;
  }
  ldv_54866: 
#line 399 
  ;
  
#line 399 
  isfw_read = (_Bool)0;
  
#line 400 
  u1b_tmp = rtl_read_byte(rtlpriv,256U);
  
#line 402 
  if ((unsigned int)u1b_tmp != 234U) 
#line 403 
                                     isfw_read = (_Bool)1;
  else {
    u8 tmp_7;
    
#line 405 
    tmp_7 = rtl_read_byte(rtlpriv,528U);
    
#line 405 
    if ((unsigned int)tmp_7 == 234U) 
#line 407 
                                     rtl_write_byte(rtlpriv,255U,(unsigned char)255);
    else {
      u8 tmp_8;
      
#line 405 
      tmp_8 = rtl_read_byte(rtlpriv,1050U);
      
#line 405 
      if ((unsigned int)tmp_8 == 234U) 
#line 407 
                                       rtl_write_byte(rtlpriv,255U,(unsigned char)255); else ;
    }
  }
  
#line 410 
  if ((int)isfw_read != 0) {
    
#line 411 
    wait_h2c_limmit = (unsigned char)100U;
    
#line 412 
    isfw_read = _rtl8821ae_check_fw_read_last_h2c(hw,(unsigned char)((int)boxnum));
    
#line 414 
    goto ldv_54873;
    ldv_54872: 
#line 415 
    ;
    
#line 416 
    wait_h2c_limmit = (u8)((int)wait_h2c_limmit - 1);
    
#line 417 
    if ((unsigned int)wait_h2c_limmit == 0U) {
      
#line 418 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_9;
        int tmp_10;
        
#line 418 
        ;
        
#line 418 
        tmp_9 = preempt_count();
        
#line 418 
        tmp_10 = preempt_count();
        
#line 418 
        printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0,(int)boxnum);
      }
      else ;
      
#line 421 
      goto ldv_54871;
    }
    else ;
    
#line 424 
    __const_udelay(42950UL);
    
#line 426 
    isfw_read = _rtl8821ae_check_fw_read_last_h2c(hw,(unsigned char)((int)boxnum));
    
#line 428 
    u1b_tmp = rtl_read_byte(rtlpriv,304U);
    
#line 429 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_11;
      int tmp_12;
      
#line 429 
      ;
      
#line 429 
      ;
      
#line 429 
      tmp_11 = preempt_count();
      
#line 429 
      tmp_12 = preempt_count();
      
#line 429 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0,(int)boxnum,(int)u1b_tmp);
    }
    else ;
    ldv_54873: 
#line 430 
    ;
    
#line 414 
    if (! isfw_read) 
#line 416 
                     goto ldv_54872; else 
#line 419 
                                          goto ldv_54871;
    ldv_54871: 
#line 420 
    ;
  }
  else ;
  
#line 435 
  if (! isfw_read) {
    
#line 436 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_13;
      int tmp_14;
      
#line 436 
      ;
      
#line 436 
      tmp_13 = preempt_count();
      
#line 436 
      tmp_14 = preempt_count();
      
#line 436 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0,(int)boxnum);
    }
    else ;
    
#line 439 
    goto ldv_54874;
  }
  else ;
  
#line 442 
  memset((void *)(& boxcontent),0,4UL);
  
#line 443 
  memset((void *)(& boxextcontent),0,4UL);
  
#line 444 
  boxcontent[0] = element_id;
  
#line 445 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_15;
    int tmp_16;
    
#line 445 
    ;
    
#line 445 
    ;
    
#line 445 
    tmp_15 = preempt_count();
    
#line 445 
    tmp_16 = preempt_count();
    
#line 445 
    printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_16 & 2096896UL,tmp_15 != 0,(int)box_reg,(int)element_id);
  }
  else ;
  
#line 449 
  switch (cmd_len) {
    case (u32)1: 
#line 450 
    ;
    case (u32)2: 
#line 451 
    ;
    case (u32)3: 
#line 452 
    ;
    
#line 454 
    memcpy((void *)(& boxcontent) + 1U,(void const *)(cmdbuffer + (int)buf_index),(unsigned long)cmd_len);
    
#line 457 
    idx = (unsigned char)0U;
    
#line 457 
    goto ldv_54879;
    ldv_54878: 
#line 458 
    ;
    
#line 458 
    rtl_write_byte(rtlpriv,(unsigned int)((int)box_reg + (int)idx),(unsigned char)((int)boxcontent[(int)idx]));
    
#line 457 
    idx = (u8)((int)idx + 1);
    ldv_54879: 
#line 458 
    ;
    
#line 457 
    if ((unsigned int)idx <= 3U) 
#line 459 
                                 goto ldv_54878; else 
#line 462 
                                                      goto ldv_54880;
    ldv_54880: 
#line 463 
    ;
    
#line 461 
    goto ldv_54881;
    case (u32)4: 
#line 462 
    ;
    case (u32)5: 
#line 463 
    ;
    case (u32)6: 
#line 464 
    ;
    case (u32)7: 
#line 465 
    ;
    
#line 467 
    memcpy((void *)(& boxextcontent),(void const *)(cmdbuffer + ((unsigned int)buf_index + 3U)),(unsigned long)(cmd_len + 4294967293U));
    
#line 469 
    memcpy((void *)(& boxcontent) + 1U,(void const *)(cmdbuffer + (int)buf_index),3UL);
    
#line 472 
    idx = (unsigned char)0U;
    
#line 472 
    goto ldv_54887;
    ldv_54886: 
#line 473 
    ;
    
#line 473 
    rtl_write_byte(rtlpriv,(unsigned int)((int)box_extreg + (int)idx),(unsigned char)((int)boxextcontent[(int)idx]));
    
#line 472 
    idx = (u8)((int)idx + 1);
    ldv_54887: 
#line 473 
    ;
    
#line 472 
    if ((unsigned int)idx <= 3U) 
#line 474 
                                 goto ldv_54886; else 
#line 477 
                                                      goto ldv_54888;
    ldv_54888: 
#line 478 
    ;
    
#line 477 
    idx = (unsigned char)0U;
    
#line 477 
    goto ldv_54890;
    ldv_54889: 
#line 478 
    ;
    
#line 478 
    rtl_write_byte(rtlpriv,(unsigned int)((int)box_reg + (int)idx),(unsigned char)((int)boxcontent[(int)idx]));
    
#line 477 
    idx = (u8)((int)idx + 1);
    ldv_54890: 
#line 478 
    ;
    
#line 477 
    if ((unsigned int)idx <= 3U) 
#line 479 
                                 goto ldv_54889; else 
#line 482 
                                                      goto ldv_54891;
    ldv_54891: 
#line 483 
    ;
    
#line 481 
    goto ldv_54881;
    default: 
#line 482 
    ;
    
#line 483 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_17;
      int tmp_18;
      
#line 483 
      tmp_17 = preempt_count();
      
#line 483 
      tmp_18 = preempt_count();
      
#line 483 
      printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0);
    }
    else ;
    
#line 485 
    goto ldv_54881;
  }
  ldv_54881: 
#line 488 
  ;
  
#line 488 
  bwrite_sucess = (_Bool)1;
  
#line 490 
  rtlhal->last_hmeboxnum = (unsigned char)((unsigned int)boxnum + 1U);
  
#line 491 
  if ((unsigned int)rtlhal->last_hmeboxnum == 4U) 
#line 492 
                                                  rtlhal->last_hmeboxnum = (unsigned char)0U; else ;
  
#line 494 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_19;
    int tmp_20;
    
#line 494 
    ;
    
#line 494 
    tmp_19 = preempt_count();
    
#line 494 
    tmp_20 = preempt_count();
    
#line 494 
    printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0,(int)rtlhal->last_hmeboxnum);
  }
  else ;
  ldv_54894: 
#line 495 
  ;
  
#line 374 
  if (! bwrite_sucess) 
#line 376 
                       goto ldv_54893; else 
#line 379 
                                            goto ldv_54874;
  ldv_54874: 
#line 380 
  ;
  
#line 499 
  ldv___ldv_spin_lock_77(& rtlpriv->locks.h2c_lock);
  
#line 500 
  rtlhal->h2c_setinprogress = (_Bool)0;
  
#line 501 
  ldv_spin_unlock_irqrestore_78(& rtlpriv->locks.h2c_lock,flag);
  
#line 503 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_21;
    int tmp_22;
    
#line 503 
    tmp_21 = preempt_count();
    
#line 503 
    tmp_22 = preempt_count();
    
#line 503 
    printk("\001","_rtl8821ae_fill_h2c_command",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0);
  }
  else ;
  return_label: 
#line 504 
                return;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_fill_h2c_cmd(struct ieee80211_hw *hw, u8 element_id, u32 cmd_len, u8 *cmdbuffer)
{
  u32 tmp_cmdbuf[2U];
  
#line 509 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 512 
  if (! rtlhal->fw_ready) {
    
#line 513 
    printk("\001","rtl8821ae_fill_h2c_cmd");
    
#line 515 
    goto return_label;
  }
  else ;
  
#line 518 
  memset((void *)(& tmp_cmdbuf),0,8UL);
  
#line 519 
  memcpy((void *)(& tmp_cmdbuf),(void const *)cmdbuffer,(unsigned long)cmd_len);
  
#line 520 
  _rtl8821ae_fill_h2c_command(hw,(unsigned char)((int)element_id),cmd_len,(u8 *)(& tmp_cmdbuf));
  return_label: 
#line 521 
                return;
}


#line 523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_firmware_selfreset(struct ieee80211_hw *hw)
{
  u8 u1b_tmp;
  
#line 525 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 526 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 529 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 530 
    u1b_tmp = rtl_read_byte(rtlpriv,29U);
    
#line 531 
    rtl_write_byte(rtlpriv,29U,(unsigned char)((int)u1b_tmp & 247));
  }
  else {
    
#line 533 
    u1b_tmp = rtl_read_byte(rtlpriv,29U);
    
#line 534 
    rtl_write_byte(rtlpriv,29U,(unsigned char)((int)u1b_tmp & 254));
  }
  
#line 537 
  u1b_tmp = rtl_read_byte(rtlpriv,3U);
  
#line 538 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)u1b_tmp & 251));
  
#line 539 
  __const_udelay(214750UL);
  
#line 541 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 542 
    u1b_tmp = rtl_read_byte(rtlpriv,29U);
    
#line 543 
    rtl_write_byte(rtlpriv,29U,(unsigned char)((int)((unsigned int)u1b_tmp | 8U)));
  }
  else {
    
#line 545 
    u1b_tmp = rtl_read_byte(rtlpriv,29U);
    
#line 546 
    rtl_write_byte(rtlpriv,29U,(unsigned char)((int)((unsigned int)u1b_tmp | 1U)));
  }
  
#line 549 
  u1b_tmp = rtl_read_byte(rtlpriv,3U);
  
#line 550 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)((unsigned int)u1b_tmp | 4U)));
  
#line 552 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 552 
    tmp = preempt_count();
    
#line 552 
    tmp_0 = preempt_count();
    
#line 552 
    printk("\001","rtl8821ae_firmware_selfreset",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 553 
  return;
}


#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_pwrmode_cmd(struct ieee80211_hw *hw, u8 mode)
{
  u8 rlbm;
  int tmp_1;
  
#line 558 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 559 
  u8 u1_h2c_set_pwrmode[5U] = {(unsigned char)0U};
  
#line 560 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 561 
  u8 power_state = (unsigned char)0U;
  
#line 563 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 563 
    ;
    
#line 563 
    tmp = preempt_count();
    
#line 563 
    tmp_0 = preempt_count();
    
#line 563 
    printk("\001","rtl8821ae_set_fw_pwrmode_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)mode);
  }
  else ;
  
#line 565 
  if ((unsigned int)mode != 0U) 
#line 565 
                                *((u8 *)(& u1_h2c_set_pwrmode)) = (unsigned char)1U; else 
                                                                    
#line 565 
                                                                    *((u8 *)(& u1_h2c_set_pwrmode)) = (unsigned char)0U;
  
#line 566 
  rlbm = (unsigned char)0U;
  
#line 567 
  *((u8 *)(& u1_h2c_set_pwrmode) + 1U) = (unsigned char)(((int)*((u8 *)(& u1_h2c_set_pwrmode) + 1U) & -16) | ((int)rlbm & 15));
  
#line 568 
  if ((unsigned int)rtlpriv->mac80211.p2p != 0U) 
#line 568 
                                                 tmp_1 = ((int)ppsc->smart_ps << 4) & 255; else 
                                                                    
#line 568 
                                                                    tmp_1 = 16;
  
#line 568 
  *((u8 *)(& u1_h2c_set_pwrmode) + 1U) = (unsigned char)(((int)*((u8 *)(& u1_h2c_set_pwrmode) + 1U) & 15) | tmp_1);
  
#line 571 
  *((u8 *)(& u1_h2c_set_pwrmode) + 2U) = ppsc->reg_max_lps_awakeintvl;
  
#line 573 
  *((u8 *)(& u1_h2c_set_pwrmode) + 3U) = (unsigned char)0U;
  
#line 574 
  if ((unsigned int)mode == 0U) 
#line 575 
                                power_state = (unsigned char)((unsigned int)power_state | 12U); else 
                                                                    
#line 577 
                                                                    power_state = power_state;
  
#line 579 
  *((u8 *)(& u1_h2c_set_pwrmode) + 4U) = power_state;
  
#line 581 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    struct task_struct *tmp_2;
    struct task_struct *tmp_3;
    
#line 581 
    tmp_2 = get_current();
    
#line 581 
    tmp_3 = get_current();
    
#line 581 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_3->comm),tmp_2->pid,(char *)"rtl92c_set_fw_pwrmode(): u1_h2c_set_pwrmode\n");
    {
      
#line 581 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_pwrmode_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))583U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 581 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 581 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& u1_h2c_set_pwrmode),5UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 584 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)32,5U,(u8 *)(& u1_h2c_set_pwrmode));
  
#line 587 
  return;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_media_status_rpt_cmd(struct ieee80211_hw *hw, u8 mstatus)
{
  
#line 592 
  u8 parm[3U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
  
#line 600 
  *((u8 *)(& parm)) = (unsigned char)(((int)*((u8 *)(& parm)) & -2) | ((int)mstatus & 1));
  
#line 601 
  *((u8 *)(& parm)) = (unsigned char)((unsigned int)*((u8 *)(& parm)) & 253U);
  
#line 603 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)1,3U,(u8 *)(& parm));
  
#line 604 
  return;
}


#line 606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_ap_off_load_cmd(struct ieee80211_hw *hw, u8 ap_offload_enable)
{
  
#line 609 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 610 
  u8 u1_apoffload_parm[3U] = {(unsigned char)0U};
  
#line 612 
  *((u8 *)(& u1_apoffload_parm)) = ap_offload_enable;
  
#line 613 
  *((u8 *)(& u1_apoffload_parm) + 1U) = (unsigned char)mac->hiddenssid;
  
#line 614 
  *((u8 *)(& u1_apoffload_parm) + 2U) = (unsigned char)0U;
  
#line 616 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)8,3U,(u8 *)(& u1_apoffload_parm));
  
#line 619 
  return;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_wowlan_mode(struct ieee80211_hw *hw, bool func_en)
{
  int tmp_1;
  
#line 623 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 624 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 625 
  u8 fw_wowlan_info[3U] = {(unsigned char)0U};
  
#line 627 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 627 
    ;
    
#line 627 
    tmp = preempt_count();
    
#line 627 
    tmp_0 = preempt_count();
    
#line 627 
    printk("\001","rtl8821ae_set_fw_wowlan_mode",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)func_en);
  }
  else ;
  
#line 629 
  if ((int)func_en != 0) 
#line 629 
                         tmp_1 = 1; else 
#line 629 
                                         tmp_1 = 0;
  
#line 629 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)(((int)*((u8 *)(& fw_wowlan_info)) & -2) | tmp_1);
  
#line 632 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)(((int)*((u8 *)(& fw_wowlan_info)) & -3) | (((int)((unsigned char)((unsigned long)ppsc->wo_wlan_mode >> 1)) << 1) & 2));
  
#line 634 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)(((int)*((u8 *)(& fw_wowlan_info)) & -5) | (((int)ppsc->wo_wlan_mode << 2) & 4));
  
#line 637 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)((unsigned int)*((u8 *)(& fw_wowlan_info)) & 247U);
  
#line 638 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)((unsigned int)*((u8 *)(& fw_wowlan_info)) & 239U);
  
#line 639 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)((unsigned int)*((u8 *)(& fw_wowlan_info)) & 223U);
  
#line 640 
  *((u8 *)(& fw_wowlan_info)) = (unsigned char)((int)*((u8 *)(& fw_wowlan_info)) | -128);
  
#line 641 
  *((u8 *)(& fw_wowlan_info) + 1U) = (unsigned char)0U;
  
#line 642 
  *((u8 *)(& fw_wowlan_info) + 2U) = (unsigned char)0U;
  
#line 644 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
    struct task_struct *tmp_2;
    struct task_struct *tmp_3;
    
#line 644 
    tmp_2 = get_current();
    
#line 644 
    tmp_3 = get_current();
    
#line 644 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_3->comm),tmp_2->pid,(char *)"wowlan mode: cmd 0x80: Content:\n");
    {
      
#line 644 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_wowlan_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))646U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 644 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 644 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& fw_wowlan_info),3UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 648 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)128,3U,(u8 *)(& fw_wowlan_info));
  
#line 651 
  return;
}


#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_remote_wake_ctrl_cmd(struct ieee80211_hw *hw, u8 enable)
{
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  
#line 656 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 657 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 658 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 659 
  u8 remote_wake_ctrl_parm[1U] = {(unsigned char)0U};
  
#line 661 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 661 
    ;
    
#line 661 
    ;
    
#line 661 
    ;
    
#line 661 
    tmp = preempt_count();
    
#line 661 
    tmp_0 = preempt_count();
    
#line 661 
    printk("\001","rtl8821ae_set_fw_remote_wake_ctrl_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)enable,(int)ppsc->arp_offload_enable,(int)ppsc->gtk_offload_enable);
  }
  else ;
  
#line 665 
  *((u8 *)(& remote_wake_ctrl_parm)) = (unsigned char)(((int)*((u8 *)(& remote_wake_ctrl_parm)) & -2) | ((int)enable & 1));
  
#line 666 
  if ((unsigned int)ppsc->arp_offload_enable != 0U) 
#line 666 
                                                    tmp_1 = 1U; else 
                                                                  
#line 666 
                                                                  tmp_1 = 0U;
  
#line 666 
  *((u8 *)(& remote_wake_ctrl_parm)) = (unsigned char)(((int)*((u8 *)(& remote_wake_ctrl_parm)) & -3) | (((int)tmp_1 << 1) & 2));
  
#line 668 
  if ((unsigned int)ppsc->gtk_offload_enable != 0U) 
#line 668 
                                                    tmp_2 = 1U; else 
                                                                  
#line 668 
                                                                  tmp_2 = 0U;
  
#line 668 
  *((u8 *)(& remote_wake_ctrl_parm)) = (unsigned char)(((int)*((u8 *)(& remote_wake_ctrl_parm)) & -9) | (((int)tmp_2 << 3) & 8));
  
#line 670 
  if ((int)rtlhal->real_wow_v2_enable != 0) 
#line 670 
                                            tmp_3 = 1U; else 
#line 670 
                                                             tmp_3 = 0U;
  
#line 670 
  *((u8 *)(& remote_wake_ctrl_parm)) = (unsigned char)(((int)*((u8 *)(& remote_wake_ctrl_parm)) & -65) | (((int)tmp_3 << 6) & 64));
  
#line 673 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    struct task_struct *tmp_4;
    struct task_struct *tmp_5;
    
#line 673 
    tmp_4 = get_current();
    
#line 673 
    tmp_5 = get_current();
    
#line 673 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_5->comm),tmp_4->pid,(char *)"remote_wake_ctrl: cmd 0x4: Content:\n");
    {
      
#line 673 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_remote_wake_ctrl_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))675U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 673 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 673 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& remote_wake_ctrl_parm),1UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 677 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)129,1U,(u8 *)(& remote_wake_ctrl_parm));
  
#line 680 
  return;
}


#line 682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_keep_alive_cmd(struct ieee80211_hw *hw, bool func_en)
{
  
#line 685 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 686 
  u8 keep_alive_info[3U] = {(unsigned char)0U};
  
#line 688 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 688 
    ;
    
#line 688 
    tmp = preempt_count();
    
#line 688 
    tmp_0 = preempt_count();
    
#line 688 
    printk("\001","rtl8821ae_set_fw_keep_alive_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)func_en);
  }
  else ;
  
#line 690 
  *((u8 *)(& keep_alive_info)) = (unsigned char)(((int)*((u8 *)(& keep_alive_info)) & -2) | (int)func_en);
  
#line 692 
  *((u8 *)(& keep_alive_info)) = (unsigned char)((int)*((u8 *)(& keep_alive_info)) | 2);
  
#line 693 
  *((u8 *)(& keep_alive_info) + 1U) = (unsigned char)10U;
  
#line 695 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    struct task_struct *tmp_1;
    struct task_struct *tmp_2;
    
#line 695 
    tmp_1 = get_current();
    
#line 695 
    tmp_2 = get_current();
    
#line 695 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_2->comm),tmp_1->pid,(char *)"keep alive: cmd 0x3: Content:\n");
    {
      
#line 695 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_keep_alive_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))697U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 695 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 695 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& keep_alive_info),3UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 698 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)3,3U,(u8 *)(& keep_alive_info));
  
#line 701 
  return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_disconnect_decision_ctrl_cmd(struct ieee80211_hw *hw, bool enabled)
{
  
#line 706 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 707 
  u8 parm[3U] = {(unsigned char)0U};
  
#line 709 
  *((u8 *)(& parm)) = (unsigned char)(((int)*((u8 *)(& parm)) & -2) | (int)enabled);
  
#line 710 
  *((u8 *)(& parm)) = (unsigned char)((int)*((u8 *)(& parm)) | 2);
  
#line 711 
  *((u8 *)(& parm) + 1U) = (unsigned char)30U;
  
#line 712 
  *((u8 *)(& parm) + 2U) = (unsigned char)3U;
  
#line 714 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    struct task_struct *tmp;
    struct task_struct *tmp_0;
    
#line 714 
    tmp = get_current();
    
#line 714 
    tmp_0 = get_current();
    
#line 714 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_0->comm),tmp->pid,(char *)"disconnect_decision_ctrl: cmd 0x4: Content:\n");
    {
      
#line 714 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_disconnect_decision_ctrl_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))716U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 714 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 714 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& parm),3UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 717 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)4,3U,(u8 *)(& parm));
  
#line 719 
  return;
}


#line 721  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_global_info_cmd(struct ieee80211_hw *hw)
{
  
#line 723 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 724 
  struct rtl_security *sec = & rtlpriv->sec;
  
#line 725 
  u8 remote_wakeup_sec_info[2U] = {(unsigned char)0U};
  
#line 727 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 727 
    ;
    
#line 727 
    ;
    
#line 727 
    tmp = preempt_count();
    
#line 727 
    tmp_0 = preempt_count();
    
#line 727 
    printk("\001","rtl8821ae_set_fw_global_info_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(unsigned int)sec->pairwise_enc_algorithm,(unsigned int)sec->group_enc_algorithm);
  }
  else ;
  
#line 731 
  *((u8 *)(& remote_wakeup_sec_info)) = (unsigned char)sec->pairwise_enc_algorithm;
  
#line 734 
  *((u8 *)(& remote_wakeup_sec_info) + 1U) = (unsigned char)sec->group_enc_algorithm;
  
#line 737 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)130,2U,(u8 *)(& remote_wakeup_sec_info));
  
#line 741 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    struct task_struct *tmp_1;
    struct task_struct *tmp_2;
    
#line 741 
    tmp_1 = get_current();
    
#line 741 
    tmp_2 = get_current();
    
#line 741 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_2->comm),tmp_1->pid,(char *)"rtl8821ae_set_global_info: cmd 0x82:\n");
    {
      
#line 741 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_global_info_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))743U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 741 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 741 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(& remote_wakeup_sec_info),2UL,(_Bool)1); else ;
    }
  }
  else ;
  
#line 744 
  return;
}


#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static u8 reserved_page_packet_8821[1792U] = {(unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)226U, (unsigned char)100U, (unsigned char)64U, (unsigned char)22U, (unsigned char)159U, (unsigned char)35U, (unsigned char)212U, (unsigned char)70U, (unsigned char)32U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)100U, (unsigned char)0U, (unsigned char)32U, (unsigned char)4U, (unsigned char)0U, (unsigned char)6U, (unsigned char)100U, (unsigned char)108U, (unsigned char)105U, (unsigned char)110U, (unsigned char)107U, (unsigned char)49U, (unsigned char)1U, (unsigned char)8U, (unsigned char)130U, (unsigned char)132U, (unsigned char)139U, (unsigned char)150U, (unsigned char)12U, (unsigned char)24U, (unsigned char)48U, (unsigned char)72U, (unsigned char)3U, (unsigned char)1U, (unsigned char)11U, (unsigned char)6U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)42U, (unsigned char)1U, (unsigned char)139U, (unsigned char)50U, (unsigned char)4U, (unsigned char)18U, (unsigned char)36U, (unsigned char)96U, (unsigned char)108U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)16U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)129U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)164U, (unsigned char)16U, (unsigned char)1U, (unsigned char)192U, (unsigned char)64U, (unsigned char)22U, (unsigned char)159U, (unsigned char)35U, (unsigned char)212U, (unsigned char)70U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)226U, (unsigned char)100U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)24U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)72U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)64U, (unsigned char)22U, (unsigned char)159U, (unsigned char)35U, (unsigned char)212U, (unsigned char)70U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)226U, (unsigned char)100U, (unsigned char)64U, (unsigned char)22U, (unsigned char)159U, (unsigned char)35U, (unsigned char)212U, (unsigned char)70U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)26U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)200U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)60U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)8U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)0U, (unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)8U, (unsigned char)6U, (unsigned char)0U, (unsigned char)1U, (unsigned char)8U, (unsigned char)0U, (unsigned char)6U, (unsigned char)4U, (unsigned char)0U, (unsigned char)2U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static u8 reserved_page_packet_8812[3584U] = {(unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)96U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)100U, (unsigned char)0U, (unsigned char)32U, (unsigned char)4U, (unsigned char)0U, (unsigned char)3U, (unsigned char)50U, (unsigned char)49U, (unsigned char)53U, (unsigned char)1U, (unsigned char)8U, (unsigned char)130U, (unsigned char)132U, (unsigned char)139U, (unsigned char)150U, (unsigned char)12U, (unsigned char)18U, (unsigned char)24U, (unsigned char)36U, (unsigned char)3U, (unsigned char)1U, (unsigned char)1U, (unsigned char)6U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)42U, (unsigned char)1U, (unsigned char)2U, (unsigned char)50U, (unsigned char)4U, (unsigned char)48U, (unsigned char)72U, (unsigned char)96U, (unsigned char)108U, (unsigned char)45U, (unsigned char)26U, (unsigned char)237U, (unsigned char)9U, (unsigned char)3U, (unsigned char)255U, (unsigned char)255U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)61U, (unsigned char)0U, (unsigned char)221U, (unsigned char)7U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)2U, (unsigned char)8U, (unsigned char)4U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)16U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)129U, (unsigned char)0U, (unsigned char)0U, (unsigned char)4U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)164U, (unsigned char)16U, (unsigned char)9U, (unsigned char)192U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)24U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)72U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)26U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)200U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)60U, (unsigned char)0U, (unsigned char)40U, (unsigned char)140U, (unsigned char)0U, (unsigned char)18U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)8U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)132U, (unsigned char)201U, (unsigned char)178U, (unsigned char)167U, (unsigned char)179U, (unsigned char)110U, (unsigned char)0U, (unsigned char)0U, (unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)8U, (unsigned char)6U, (unsigned char)0U, (unsigned char)1U, (unsigned char)8U, (unsigned char)0U, (unsigned char)6U, (unsigned char)4U, (unsigned char)0U, (unsigned char)2U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)224U, (unsigned char)76U, (unsigned char)2U, (unsigned char)81U, (unsigned char)2U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 1451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8812ae_set_fw_rsvdpagepkt(struct ieee80211_hw *hw, bool b_dl_finished, bool dl_whole_packets)
{
  u32 totalpacketlen;
  bool rtstatus;
  u8 *beacon;
  u8 *p_pspoll;
  u8 *nullfunc;
  u8 *qosnull;
  u8 *arpresp;
  unsigned char *tmp_1;
  
#line 1454 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1455 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 1456 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 1459 
  u8 u1RsvdPageLoc[5U] = {(unsigned char)0U};
  
#line 1460 
  u8 u1RsvdPageLoc2[7U] = {(unsigned char)0U};
  
#line 1461 
  bool b_dlok = (_Bool)0;
  
#line 1472 
  beacon = &(reserved_page_packet_8812[0]);
  
#line 1473 
  *(beacon + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1473 
  *(beacon + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1473 
  *(beacon + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1473 
  *(beacon + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1473 
  *(beacon + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1473 
  *(beacon + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1474 
  *(beacon + 16U) = *((u8 *)(& mac->bssid));
  
#line 1474 
  *(beacon + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1474 
  *(beacon + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1474 
  *(beacon + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1474 
  *(beacon + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1474 
  *(beacon + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1476 
  if ((int)b_dl_finished != 0) {
    
#line 1477 
    totalpacketlen = 472U;
    
#line 1478 
    goto out;
  }
  else ;
  
#line 1484 
  p_pspoll = & reserved_page_packet_8812[512];
  
#line 1485 
  *((u16 *)(p_pspoll + 2U)) = (unsigned short)((unsigned int)mac->assoc_id | 49152U);
  
#line 1486 
  ether_addr_copy(p_pspoll + 4U,(u8 const *)(& mac->bssid));
  
#line 1487 
  ether_addr_copy(p_pspoll + 10U,(u8 const *)(& mac->mac_addr));
  
#line 1489 
  *((u8 *)(& u1RsvdPageLoc) + 1U) = (unsigned char)1U;
  
#line 1495 
  nullfunc = & reserved_page_packet_8812[1024];
  
#line 1496 
  *(nullfunc + 4U) = *((u8 *)(& mac->bssid));
  
#line 1496 
  *(nullfunc + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1496 
  *(nullfunc + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1496 
  *(nullfunc + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1496 
  *(nullfunc + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1496 
  *(nullfunc + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1497 
  *(nullfunc + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1497 
  *(nullfunc + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1497 
  *(nullfunc + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1497 
  *(nullfunc + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1497 
  *(nullfunc + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1497 
  *(nullfunc + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1498 
  *(nullfunc + 16U) = *((u8 *)(& mac->bssid));
  
#line 1498 
  *(nullfunc + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1498 
  *(nullfunc + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1498 
  *(nullfunc + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1498 
  *(nullfunc + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1498 
  *(nullfunc + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1500 
  *((u8 *)(& u1RsvdPageLoc) + 2U) = (unsigned char)2U;
  
#line 1506 
  qosnull = & reserved_page_packet_8812[1536];
  
#line 1507 
  *(qosnull + 4U) = *((u8 *)(& mac->bssid));
  
#line 1507 
  *(qosnull + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1507 
  *(qosnull + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1507 
  *(qosnull + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1507 
  *(qosnull + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1507 
  *(qosnull + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1508 
  *(qosnull + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1508 
  *(qosnull + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1508 
  *(qosnull + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1508 
  *(qosnull + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1508 
  *(qosnull + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1508 
  *(qosnull + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1509 
  *(qosnull + 16U) = *((u8 *)(& mac->bssid));
  
#line 1509 
  *(qosnull + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1509 
  *(qosnull + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1509 
  *(qosnull + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1509 
  *(qosnull + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1509 
  *(qosnull + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1511 
  *((u8 *)(& u1RsvdPageLoc) + 3U) = (unsigned char)3U;
  
#line 1513 
  if (! dl_whole_packets) {
    
#line 1514 
    totalpacketlen = 2008U;
    
#line 1515 
    goto out;
  }
  else ;
  
#line 1521 
  arpresp = & reserved_page_packet_8812[2048];
  
#line 1522 
  *(arpresp + 4U) = *((u8 *)(& mac->bssid));
  
#line 1522 
  *(arpresp + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1522 
  *(arpresp + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1522 
  *(arpresp + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1522 
  *(arpresp + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1522 
  *(arpresp + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1523 
  *(arpresp + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1523 
  *(arpresp + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1523 
  *(arpresp + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1523 
  *(arpresp + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1523 
  *(arpresp + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1523 
  *(arpresp + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1524 
  *(arpresp + 16U) = *((u8 *)(& mac->bssid));
  
#line 1524 
  *(arpresp + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1524 
  *(arpresp + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1524 
  *(arpresp + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1524 
  *(arpresp + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1524 
  *(arpresp + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1526 
  *((u8 *)(& u1RsvdPageLoc2) + 1U) = (unsigned char)4U;
  
#line 1532 
  *((u8 *)(& u1RsvdPageLoc2)) = (unsigned char)5U;
  
#line 1539 
  *((u8 *)(& u1RsvdPageLoc2) + 5U) = (unsigned char)6U;
  
#line 1541 
  totalpacketlen = 3544U;
  out: 
#line 1543 
  ;
  
#line 1544 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    struct task_struct *tmp;
    struct task_struct *tmp_0;
    
#line 1544 
    tmp = get_current();
    
#line 1544 
    tmp_0 = get_current();
    
#line 1544 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_0->comm),tmp->pid,(char *)"rtl8812ae_set_fw_rsvdpagepkt(): packet data\n");
    {
      
#line 1544 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8812ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1546U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1544 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1544 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(&(reserved_page_packet_8812[0])),(unsigned long)totalpacketlen,(_Bool)1); else ;
    }
  }
  else ;
  
#line 1548 
  skb = dev_alloc_skb(totalpacketlen);
  
#line 1549 
  ;
  
#line 1549 
  tmp_1 = skb_put(skb,totalpacketlen);
  
#line 1549 
  memcpy((void *)tmp_1,(void const *)(& reserved_page_packet_8812),(unsigned long)totalpacketlen);
  
#line 1552 
  rtstatus = rtl_cmd_send_packet(hw,skb);
  
#line 1554 
  if ((int)rtstatus != 0) 
#line 1555 
                          b_dlok = (_Bool)1; else ;
  
#line 1557 
  if (! b_dl_finished && (int)b_dlok != 0) {
    
#line 1558 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      struct task_struct *tmp_2;
      struct task_struct *tmp_3;
      
#line 1558 
      tmp_2 = get_current();
      
#line 1558 
      tmp_3 = get_current();
      
#line 1558 
      printk("\001",(char *)"rtl8821ae",(char *)(& tmp_3->comm),tmp_2->pid,(char *)"H2C_RSVDPAGE:\n");
      {
        
#line 1558 
        struct _ddebug descriptor_0 = {.modname = "rtl8821ae", .function = "rtl8812ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1559U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1558 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1558 
                                                              print_hex_dump("\001","",0,16,1,(void const *)(& u1RsvdPageLoc),5UL,(_Bool)1); else ;
      }
    }
    else ;
    
#line 1560 
    rtl8821ae_fill_h2c_cmd(hw,(unsigned char)0,5U,(u8 *)(& u1RsvdPageLoc));
    
#line 1562 
    if ((int)dl_whole_packets != 0) {
      
#line 1563 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        struct task_struct *tmp_4;
        struct task_struct *tmp_5;
        
#line 1563 
        tmp_4 = get_current();
        
#line 1563 
        tmp_5 = get_current();
        
#line 1563 
        printk("\001",(char *)"rtl8821ae",(char *)(& tmp_5->comm),tmp_4->pid,(char *)"wowlan H2C_RSVDPAGE:\n");
        {
          
#line 1563 
          struct _ddebug descriptor_1 = {.modname = "rtl8821ae", .function = "rtl8812ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1564U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 1563 
          if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 1563 
                                                                print_hex_dump("\001","",0,16,1,(void const *)(& u1RsvdPageLoc2),7UL,(_Bool)1); else ;
        }
      }
      else ;
      
#line 1565 
      rtl8821ae_fill_h2c_cmd(hw,(unsigned char)131,7U,(u8 *)(& u1RsvdPageLoc2));
    }
    else ;
  }
  else ;
  
#line 1570 
  if (! b_dlok) {
    
#line 1571 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_6;
      int tmp_7;
      
#line 1571 
      tmp_6 = preempt_count();
      
#line 1571 
      tmp_7 = preempt_count();
      
#line 1571 
      printk("\001","rtl8812ae_set_fw_rsvdpagepkt",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0);
    }
    else ;
  }
  else ;
  
#line 1572 
  return;
}


#line 1575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_fw_rsvdpagepkt(struct ieee80211_hw *hw, bool b_dl_finished, bool dl_whole_packets)
{
  u32 totalpacketlen;
  bool rtstatus;
  u8 *beacon;
  u8 *p_pspoll;
  u8 *nullfunc;
  u8 *qosnull;
  u8 *arpresp;
  unsigned char *tmp_1;
  
#line 1578 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1579 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 1580 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 1583 
  u8 u1RsvdPageLoc[5U] = {(unsigned char)0U};
  
#line 1584 
  u8 u1RsvdPageLoc2[7U] = {(unsigned char)0U};
  
#line 1585 
  bool b_dlok = (_Bool)0;
  
#line 1596 
  beacon = &(reserved_page_packet_8821[0]);
  
#line 1597 
  *(beacon + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1597 
  *(beacon + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1597 
  *(beacon + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1597 
  *(beacon + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1597 
  *(beacon + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1597 
  *(beacon + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1598 
  *(beacon + 16U) = *((u8 *)(& mac->bssid));
  
#line 1598 
  *(beacon + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1598 
  *(beacon + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1598 
  *(beacon + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1598 
  *(beacon + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1598 
  *(beacon + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1600 
  if ((int)b_dl_finished != 0) {
    
#line 1601 
    totalpacketlen = 216U;
    
#line 1602 
    goto out;
  }
  else ;
  
#line 1608 
  p_pspoll = & reserved_page_packet_8821[256];
  
#line 1609 
  *((u16 *)(p_pspoll + 2U)) = (unsigned short)((unsigned int)mac->assoc_id | 49152U);
  
#line 1610 
  ether_addr_copy(p_pspoll + 4U,(u8 const *)(& mac->bssid));
  
#line 1611 
  ether_addr_copy(p_pspoll + 10U,(u8 const *)(& mac->mac_addr));
  
#line 1613 
  *((u8 *)(& u1RsvdPageLoc) + 1U) = (unsigned char)1U;
  
#line 1619 
  nullfunc = & reserved_page_packet_8821[512];
  
#line 1620 
  *(nullfunc + 4U) = *((u8 *)(& mac->bssid));
  
#line 1620 
  *(nullfunc + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1620 
  *(nullfunc + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1620 
  *(nullfunc + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1620 
  *(nullfunc + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1620 
  *(nullfunc + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1621 
  *(nullfunc + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1621 
  *(nullfunc + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1621 
  *(nullfunc + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1621 
  *(nullfunc + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1621 
  *(nullfunc + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1621 
  *(nullfunc + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1622 
  *(nullfunc + 16U) = *((u8 *)(& mac->bssid));
  
#line 1622 
  *(nullfunc + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1622 
  *(nullfunc + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1622 
  *(nullfunc + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1622 
  *(nullfunc + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1622 
  *(nullfunc + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1624 
  *((u8 *)(& u1RsvdPageLoc) + 2U) = (unsigned char)2U;
  
#line 1630 
  qosnull = & reserved_page_packet_8821[768];
  
#line 1631 
  *(qosnull + 4U) = *((u8 *)(& mac->bssid));
  
#line 1631 
  *(qosnull + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1631 
  *(qosnull + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1631 
  *(qosnull + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1631 
  *(qosnull + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1631 
  *(qosnull + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1632 
  *(qosnull + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1632 
  *(qosnull + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1632 
  *(qosnull + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1632 
  *(qosnull + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1632 
  *(qosnull + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1632 
  *(qosnull + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1633 
  *(qosnull + 16U) = *((u8 *)(& mac->bssid));
  
#line 1633 
  *(qosnull + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1633 
  *(qosnull + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1633 
  *(qosnull + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1633 
  *(qosnull + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1633 
  *(qosnull + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1635 
  *((u8 *)(& u1RsvdPageLoc) + 3U) = (unsigned char)3U;
  
#line 1637 
  if (! dl_whole_packets) {
    
#line 1638 
    totalpacketlen = 984U;
    
#line 1639 
    goto out;
  }
  else ;
  
#line 1645 
  arpresp = & reserved_page_packet_8821[1024];
  
#line 1646 
  *(arpresp + 4U) = *((u8 *)(& mac->bssid));
  
#line 1646 
  *(arpresp + 5U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1646 
  *(arpresp + 6U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1646 
  *(arpresp + 7U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1646 
  *(arpresp + 8U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1646 
  *(arpresp + 9U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1647 
  *(arpresp + 10U) = *((u8 *)(& mac->mac_addr));
  
#line 1647 
  *(arpresp + 11U) = *((u8 *)(& mac->mac_addr) + 1U);
  
#line 1647 
  *(arpresp + 12U) = *((u8 *)(& mac->mac_addr) + 2U);
  
#line 1647 
  *(arpresp + 13U) = *((u8 *)(& mac->mac_addr) + 3U);
  
#line 1647 
  *(arpresp + 14U) = *((u8 *)(& mac->mac_addr) + 4U);
  
#line 1647 
  *(arpresp + 15U) = *((u8 *)(& mac->mac_addr) + 5U);
  
#line 1648 
  *(arpresp + 16U) = *((u8 *)(& mac->bssid));
  
#line 1648 
  *(arpresp + 17U) = *((u8 *)(& mac->bssid) + 1U);
  
#line 1648 
  *(arpresp + 18U) = *((u8 *)(& mac->bssid) + 2U);
  
#line 1648 
  *(arpresp + 19U) = *((u8 *)(& mac->bssid) + 3U);
  
#line 1648 
  *(arpresp + 20U) = *((u8 *)(& mac->bssid) + 4U);
  
#line 1648 
  *(arpresp + 21U) = *((u8 *)(& mac->bssid) + 5U);
  
#line 1650 
  *((u8 *)(& u1RsvdPageLoc2) + 1U) = (unsigned char)4U;
  
#line 1656 
  *((u8 *)(& u1RsvdPageLoc2)) = (unsigned char)5U;
  
#line 1663 
  *((u8 *)(& u1RsvdPageLoc2) + 5U) = (unsigned char)6U;
  
#line 1665 
  totalpacketlen = 1752U;
  out: 
#line 1667 
  ;
  
#line 1669 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    struct task_struct *tmp;
    struct task_struct *tmp_0;
    
#line 1669 
    tmp = get_current();
    
#line 1669 
    tmp_0 = get_current();
    
#line 1669 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_0->comm),tmp->pid,(char *)"rtl8821ae_set_fw_rsvdpagepkt(): packet data\n");
    {
      
#line 1669 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1671U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1669 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1669 
                                                          print_hex_dump("\001","",0,16,1,(void const *)(&(reserved_page_packet_8821[0])),(unsigned long)totalpacketlen,(_Bool)1); else ;
    }
  }
  else ;
  
#line 1673 
  skb = dev_alloc_skb(totalpacketlen);
  
#line 1674 
  ;
  
#line 1674 
  tmp_1 = skb_put(skb,totalpacketlen);
  
#line 1674 
  memcpy((void *)tmp_1,(void const *)(& reserved_page_packet_8821),(unsigned long)totalpacketlen);
  
#line 1677 
  rtstatus = rtl_cmd_send_packet(hw,skb);
  
#line 1679 
  if ((int)rtstatus != 0) 
#line 1680 
                          b_dlok = (_Bool)1; else ;
  
#line 1682 
  if (! b_dl_finished && (int)b_dlok != 0) {
    
#line 1683 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1683 
      tmp_2 = preempt_count();
      
#line 1683 
      tmp_3 = preempt_count();
      
#line 1683 
      printk("\001","rtl8821ae_set_fw_rsvdpagepkt",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
    }
    else ;
    
#line 1685 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
      struct task_struct *tmp_4;
      struct task_struct *tmp_5;
      
#line 1685 
      tmp_4 = get_current();
      
#line 1685 
      tmp_5 = get_current();
      
#line 1685 
      printk("\001",(char *)"rtl8821ae",(char *)(& tmp_5->comm),tmp_4->pid,(char *)"H2C_RSVDPAGE:\n");
      {
        
#line 1685 
        struct _ddebug descriptor_0 = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1686U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1685 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1685 
                                                              print_hex_dump("\001","",0,16,1,(void const *)(& u1RsvdPageLoc),5UL,(_Bool)1); else ;
      }
    }
    else ;
    
#line 1687 
    rtl8821ae_fill_h2c_cmd(hw,(unsigned char)0,5U,(u8 *)(& u1RsvdPageLoc));
    
#line 1689 
    if ((int)dl_whole_packets != 0) {
      
#line 1690 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        struct task_struct *tmp_6;
        struct task_struct *tmp_7;
        
#line 1690 
        tmp_6 = get_current();
        
#line 1690 
        tmp_7 = get_current();
        
#line 1690 
        printk("\001",(char *)"rtl8821ae",(char *)(& tmp_7->comm),tmp_6->pid,(char *)"wowlan H2C_RSVDPAGE:\n");
        {
          
#line 1690 
          struct _ddebug descriptor_1 = {.modname = "rtl8821ae", .function = "rtl8821ae_set_fw_rsvdpagepkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1692U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 1690 
          if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 1690 
                                                                print_hex_dump("\001","",0,16,1,(void const *)(& u1RsvdPageLoc2),7UL,(_Bool)1); else ;
        }
      }
      else ;
      
#line 1693 
      rtl8821ae_fill_h2c_cmd(hw,(unsigned char)131,7U,(u8 *)(& u1RsvdPageLoc2));
    }
    else ;
  }
  else ;
  
#line 1699 
  if (! b_dlok) {
    
#line 1700 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_8;
      int tmp_9;
      
#line 1700 
      tmp_8 = preempt_count();
      
#line 1700 
      tmp_9 = preempt_count();
      
#line 1700 
      printk("\001","rtl8821ae_set_fw_rsvdpagepkt",(unsigned long)tmp_9 & 2096896UL,tmp_8 != 0);
    }
    else ;
  }
  else ;
  
#line 1701 
  return;
}


#line 1706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void rtl8821ae_set_p2p_ctw_period_cmd(struct ieee80211_hw *hw, u8 ctwindow)
{
  
#line 1708 
  u8 u1_ctwindow_period[1U] = {ctwindow};
  
#line 1710 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)68,1U,(u8 *)(& u1_ctwindow_period));
  
#line 1712 
  return;
}


#line 1714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_set_p2p_ps_offload_cmd(struct ieee80211_hw *hw, u8 p2p_ps_state)
{
  u8 i;
  u16 ctwindow;
  u32 start_time;
  u32 tsf_low;
  
#line 1716 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1717 
  struct rtl_ps_ctl *rtlps = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 1718 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1719 
  struct rtl_p2p_ps_info *p2pinfo = & rtlps->p2p_ps_info;
  
#line 1720 
  struct p2p_ps_offload_t *p2p_ps_offload = & rtlhal->p2p_ps_offload;
  
#line 1725 
  switch ((int)p2p_ps_state) {
    case 0: 
#line 1726 
    ;
    
#line 1727 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1727 
      tmp = preempt_count();
      
#line 1727 
      tmp_0 = preempt_count();
      
#line 1727 
      printk("\001","rtl8821ae_set_p2p_ps_offload_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 1728 
    memset((void *)p2p_ps_offload,0,1UL);
    
#line 1729 
    goto ldv_55044;
    case 1: 
#line 1730 
    ;
    
#line 1731 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1731 
      tmp_1 = preempt_count();
      
#line 1731 
      tmp_2 = preempt_count();
      
#line 1731 
      printk("\001","rtl8821ae_set_p2p_ps_offload_cmd",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1733 
    if ((unsigned int)p2pinfo->ctwindow != 0U) {
      
#line 1734 
      p2p_ps_offload->ctwindow_en = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
      
#line 1735 
      ctwindow = (unsigned short)p2pinfo->ctwindow;
      
#line 1736 
      rtl8821ae_set_p2p_ctw_period_cmd(hw,(unsigned char)((int)((unsigned char)ctwindow)));
    }
    else ;
    
#line 1740 
    i = (unsigned char)0U;
    
#line 1740 
    goto ldv_55050;
    ldv_55049: 
#line 1741 
    ;
    
#line 1742 
    rtl_write_byte(rtlpriv,1487U,(unsigned char)((int)i << 4U));
    
#line 1743 
    if ((unsigned int)i == 0U) 
#line 1744 
                               p2p_ps_offload->noa0_en = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else 
                                                                    
#line 1746 
                                                                    p2p_ps_offload->noa1_en = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1749 
    rtl_write_dword(rtlpriv,1504U,p2pinfo->noa_duration[(int)i]);
    
#line 1750 
    rtl_write_dword(rtlpriv,1508U,p2pinfo->noa_interval[(int)i]);
    
#line 1753 
    tsf_low = rtl_read_dword(rtlpriv,1376U);
    
#line 1755 
    start_time = p2pinfo->noa_start_time[(int)i];
    
#line 1756 
    if ((unsigned int)p2pinfo->noa_count_type[(int)i] != 1U) {
      
#line 1757 
      goto ldv_55047;
      ldv_55046: 
#line 1758 
      ;
      
#line 1758 
      start_time = p2pinfo->noa_interval[(int)i] + start_time;
      
#line 1759 
      if ((unsigned int)p2pinfo->noa_count_type[(int)i] != 255U) 
#line 1760 
                                                                 p2pinfo->noa_count_type[(int)i] = (u8)((int)p2pinfo->noa_count_type[(int)i] - 1); else ;
      ldv_55047: 
#line 1761 
      ;
      
#line 1757 
      if (tsf_low + 51200U >= start_time) 
#line 1759 
                                          goto ldv_55046; else 
#line 1762 
                                                               goto ldv_55048;
      ldv_55048: 
#line 1763 
      ;
    }
    else ;
    
#line 1763 
    rtl_write_dword(rtlpriv,1512U,start_time);
    
#line 1764 
    rtl_write_dword(rtlpriv,1516U,(unsigned int)p2pinfo->noa_count_type[(int)i]);
    
#line 1740 
    i = (u8)((int)i + 1);
    ldv_55050: 
#line 1741 
    ;
    
#line 1740 
    if ((int)p2pinfo->noa_num > (int)i) 
#line 1742 
                                        goto ldv_55049; else 
#line 1745 
                                                             goto ldv_55051;
    ldv_55051: 
#line 1746 
    ;
    
#line 1768 
    if ((unsigned int)p2pinfo->opp_ps == 1U || (unsigned int)p2pinfo->noa_num != 0U) {
      
#line 1770 
      rtl_write_byte(rtlpriv,1363U,(unsigned char)16);
      
#line 1772 
      p2p_ps_offload->offload_en = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
      
#line 1774 
      if ((unsigned int)rtlpriv->mac80211.p2p == 3U) {
        
#line 1775 
        p2p_ps_offload->role = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
        
#line 1776 
        p2p_ps_offload->allstasleep = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
      }
      else 
#line 1778 
           p2p_ps_offload->role = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
      
#line 1781 
      p2p_ps_offload->discovery = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    }
    else ;
    
#line 1783 
    goto ldv_55044;
    case 2: 
#line 1784 
    ;
    
#line 1785 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 1785 
      tmp_3 = preempt_count();
      
#line 1785 
      tmp_4 = preempt_count();
      
#line 1785 
      printk("\001","rtl8821ae_set_p2p_ps_offload_cmd",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 1786 
    p2p_ps_offload->discovery = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1787 
    goto ldv_55044;
    case 3: 
#line 1788 
    ;
    
#line 1789 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 1789 
      tmp_5 = preempt_count();
      
#line 1789 
      tmp_6 = preempt_count();
      
#line 1789 
      printk("\001","rtl8821ae_set_p2p_ps_offload_cmd",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 1790 
    p2p_ps_offload->discovery = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    
#line 1791 
    p2pinfo->p2p_ps_state = P2P_PS_ENABLE;
    
#line 1792 
    goto ldv_55044;
    default: 
#line 1793 
    ;
    
#line 1794 
    goto ldv_55044;
  }
  ldv_55044: 
#line 1797 
  ;
  
#line 1797 
  rtl8821ae_fill_h2c_cmd(hw,(unsigned char)20,1U,(u8 *)p2p_ps_offload);
  
#line 1799 
  return;
}


#line 1801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void rtl8821ae_c2h_ra_report_handler(struct ieee80211_hw *hw, u8 *cmd_buf, u8 cmd_len)
{
  
#line 1804 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 1805 
  u8 rate = (unsigned char)((unsigned int)*cmd_buf & 63U);
  
#line 1807 
  rtlhal->current_ra_rate = rtl8821ae_hw_rate_to_mrate(hw,(unsigned char)((int)rate));
  
#line 1809 
  rtl8821ae_dm_update_init_rate(hw,(unsigned char)((int)rate));
  
#line 1810 
  return;
}


#line 1812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
static void _rtl8821ae_c2h_content_parsing(struct ieee80211_hw *hw, u8 c2h_cmd_id, u8 c2h_cmd_len, u8 *tmp_buf)
{
  
#line 1816 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1818 
  switch ((int)c2h_cmd_id) {
    bool tmp_3;
    case 0: 
#line 1819 
    ;
    
#line 1820 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1820 
      tmp = preempt_count();
      
#line 1820 
      tmp_0 = preempt_count();
      
#line 1820 
      printk("\001","_rtl8821ae_c2h_content_parsing",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 1821 
    goto ldv_55071;
    case 12: 
#line 1822 
    ;
    
#line 1823 
    rtl8821ae_c2h_ra_report_handler(hw,tmp_buf,(unsigned char)((int)c2h_cmd_len));
    
#line 1824 
    goto ldv_55071;
    case 9: 
#line 1825 
    ;
    
#line 1826 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1826 
      tmp_1 = preempt_count();
      
#line 1826 
      tmp_2 = preempt_count();
      
#line 1826 
      printk("\001","_rtl8821ae_c2h_content_parsing",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1828 
    tmp_3 = (*(((rtlpriv->cfg)->ops)->get_btc_status))();
    
#line 1828 
    if ((int)tmp_3 != 0) 
#line 1829 
                         (*((rtlpriv->btcoexist.btc_ops)->btc_btinfo_notify))(rtlpriv,tmp_buf,(unsigned char)((int)c2h_cmd_len)); else ;
    
#line 1832 
    goto ldv_55071;
    default: 
#line 1833 
    ;
    
#line 1834 
    goto ldv_55071;
  }
  ldv_55071: 
#line 1836 
  ;
  
#line 1837 
  return;
}


#line 1838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c"
void rtl8821ae_c2h_packet_handler(struct ieee80211_hw *hw, u8 *buffer, u8 length)
{
  
#line 1841 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1842 
  u8 c2h_cmd_id = (unsigned char)0U;
  
#line 1842 
  u8 c2h_cmd_seq = (unsigned char)0U;
  
#line 1842 
  u8 c2h_cmd_len = (unsigned char)0U;
  
#line 1843 
  u8 *tmp_buf = (u8 *)0U;
  
#line 1845 
  c2h_cmd_id = *buffer;
  
#line 1846 
  c2h_cmd_seq = *(buffer + 1U);
  
#line 1847 
  c2h_cmd_len = (unsigned char)((unsigned int)length + 254U);
  
#line 1848 
  tmp_buf = buffer + 2U;
  
#line 1850 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1850 
    ;
    
#line 1850 
    ;
    
#line 1850 
    ;
    
#line 1850 
    tmp = preempt_count();
    
#line 1850 
    tmp_0 = preempt_count();
    
#line 1850 
    printk("\001","rtl8821ae_c2h_packet_handler",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)c2h_cmd_id,(int)c2h_cmd_seq,(int)c2h_cmd_len);
  }
  else ;
  
#line 1854 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    struct task_struct *tmp_1;
    struct task_struct *tmp_2;
    
#line 1854 
    tmp_1 = get_current();
    
#line 1854 
    tmp_2 = get_current();
    
#line 1854 
    printk("\001",(char *)"rtl8821ae",(char *)(& tmp_2->comm),tmp_1->pid,(char *)"[C2H packet], Content Hex:\n");
    {
      
#line 1854 
      struct _ddebug descriptor = {.modname = "rtl8821ae", .function = "rtl8821ae_c2h_packet_handler", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/fw.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1855U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1854 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1854 
                                                          print_hex_dump("\001","",0,16,1,(void const *)tmp_buf,(unsigned long)c2h_cmd_len,(_Bool)1); else ;
    }
  }
  else ;
  
#line 1856 
  _rtl8821ae_c2h_content_parsing(hw,(unsigned char)((int)c2h_cmd_id),(unsigned char)((int)c2h_cmd_len),tmp_buf);
  
#line 1857 
  return;
}


#line 731  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv___ldv_spin_lock_72_0(spinlock_t *ldv_func_arg1)
{
  
#line 735 
  ldv_spin_model_lock((char *)"h2c_lock_of_rtl_locks");
  
#line 737 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 738 
  return;
}


#line 741  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv_spin_unlock_irqrestore_73_0(spinlock_t *lock, unsigned long flags)
{
  
#line 745 
  ldv_spin_model_unlock((char *)"h2c_lock_of_rtl_locks");
  
#line 747 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 748 
  return;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 755 
  ldv_spin_model_lock((char *)"h2c_lock_of_rtl_locks");
  
#line 757 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 765 
  ldv_spin_model_unlock((char *)"h2c_lock_of_rtl_locks");
  
#line 767 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 768 
  return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 775 
  ldv_spin_model_unlock((char *)"h2c_lock_of_rtl_locks");
  
#line 777 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 778 
  return;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 785 
  ldv_spin_model_lock((char *)"h2c_lock_of_rtl_locks");
  
#line 787 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 788 
  return;
}


#line 791  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_fw.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 795 
  ldv_spin_model_unlock((char *)"h2c_lock_of_rtl_locks");
  
#line 797 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 798 
  return;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
static void _rtl8821ae_init_led(struct ieee80211_hw *hw, struct rtl_led *pled, enum rtl_led_pin ledpin)
{
  
#line 35 
  pled->hw = (void *)hw;
  
#line 36 
  pled->ledpin = ledpin;
  
#line 37 
  pled->ledon = (_Bool)0;
  
#line 38 
  return;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8821ae_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  u8 ledcfg;
  
#line 43 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 45 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 256ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 45 
    ;
    
#line 45 
    tmp = preempt_count();
    
#line 45 
    tmp_0 = preempt_count();
    
#line 45 
    printk("\001","rtl8821ae_sw_led_on",(unsigned long)tmp_0 & 2096896UL,tmp != 0,78,(unsigned int)pled->ledpin);
  }
  else ;
  
#line 48 
  switch ((unsigned int)pled->ledpin) {
    case (unsigned int)0: 
#line 49 
    ;
    
#line 50 
    goto ldv_54275;
    case (unsigned int)1: 
#line 51 
    ;
    
#line 52 
    ledcfg = rtl_read_byte(rtlpriv,78U);
    
#line 53 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 191U);
    
#line 54 
    rtl_write_byte(rtlpriv,78U,(unsigned char)((int)(((unsigned int)ledcfg & 208U) | 32U)));
    
#line 56 
    goto ldv_54275;
    case (unsigned int)2: 
#line 57 
    ;
    
#line 58 
    ledcfg = rtl_read_byte(rtlpriv,77U);
    
#line 59 
    rtl_write_byte(rtlpriv,77U,(unsigned char)((int)ledcfg & 16));
    
#line 60 
    goto ldv_54275;
    default: 
#line 61 
    ;
    
#line 62 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 62 
      tmp_1 = preempt_count();
      
#line 62 
      tmp_2 = preempt_count();
      
#line 62 
      printk("\001","rtl8821ae_sw_led_on",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 64 
    goto ldv_54275;
  }
  ldv_54275: 
#line 66 
  ;
  
#line 66 
  pled->ledon = (_Bool)1;
  
#line 67 
  return;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8812ae_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  
#line 71 
  u16 ledreg = (unsigned short)77U;
  
#line 72 
  u8 ledcfg = (unsigned char)0U;
  
#line 73 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 75 
  switch ((unsigned int)pled->ledpin) {
    case (unsigned int)1: 
#line 76 
    ;
    
#line 77 
    ledreg = (unsigned short)77U;
    
#line 78 
    goto ldv_54287;
    case (unsigned int)2: 
#line 80 
    ;
    
#line 81 
    ledreg = (unsigned short)78U;
    
#line 82 
    goto ldv_54287;
    case (unsigned int)0: 
#line 84 
    ;
    default: 
#line 85 
    ;
    
#line 86 
    goto ldv_54287;
  }
  ldv_54287: 
#line 89 
  ;
  
#line 89 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 256ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 89 
    ;
    
#line 89 
    ;
    
#line 89 
    tmp = preempt_count();
    
#line 89 
    tmp_0 = preempt_count();
    
#line 89 
    printk("\001","rtl8812ae_sw_led_on",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)ledreg,(unsigned int)pled->ledpin);
  }
  else ;
  
#line 93 
  ledcfg = rtl_read_byte(rtlpriv,(unsigned int)ledreg);
  
#line 94 
  ledcfg = (unsigned char)((unsigned int)ledcfg | 32U);
  
#line 95 
  ledcfg = (unsigned char)((unsigned int)ledcfg & 48U);
  
#line 97 
  rtl_write_byte(rtlpriv,(unsigned int)ledreg,(unsigned char)((int)ledcfg));
  
#line 98 
  pled->ledon = (_Bool)1;
  
#line 99 
  return;
}


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8821ae_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  u8 ledcfg;
  
#line 103 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 104 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 107 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 256ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 107 
    ;
    
#line 107 
    tmp = preempt_count();
    
#line 107 
    tmp_0 = preempt_count();
    
#line 107 
    printk("\001","rtl8821ae_sw_led_off",(unsigned long)tmp_0 & 2096896UL,tmp != 0,78,(unsigned int)pled->ledpin);
  }
  else ;
  
#line 110 
  ledcfg = rtl_read_byte(rtlpriv,78U);
  
#line 112 
  switch ((unsigned int)pled->ledpin) {
    case (unsigned int)0: 
#line 113 
    ;
    
#line 114 
    goto ldv_54301;
    case (unsigned int)1: 
#line 115 
    ;
    
#line 116 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 240U);
    
#line 117 
    if ((int)pcipriv->ledctl.led_opendrain != 0) {
      
#line 118 
      ledcfg = (unsigned char)((unsigned int)ledcfg & 144U);
      
#line 119 
      rtl_write_byte(rtlpriv,78U,(unsigned char)((int)((unsigned int)ledcfg | 8U)));
      
#line 120 
      ledcfg = rtl_read_byte(rtlpriv,67U);
      
#line 121 
      ledcfg = (unsigned char)((unsigned int)ledcfg & 254U);
      
#line 122 
      rtl_write_byte(rtlpriv,67U,(unsigned char)((int)ledcfg));
    }
    else {
      
#line 124 
      ledcfg = (unsigned char)((unsigned int)ledcfg & 191U);
      
#line 125 
      rtl_write_byte(rtlpriv,78U,(unsigned char)((int)((unsigned int)ledcfg | 40U)));
    }
    
#line 128 
    goto ldv_54301;
    case (unsigned int)2: 
#line 129 
    ;
    
#line 130 
    ledcfg = rtl_read_byte(rtlpriv,77U);
    
#line 131 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 16U);
    
#line 132 
    rtl_write_byte(rtlpriv,77U,(unsigned char)((int)((unsigned int)ledcfg | 8U)));
    
#line 133 
    goto ldv_54301;
    default: 
#line 134 
    ;
    
#line 135 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 135 
      tmp_1 = preempt_count();
      
#line 135 
      tmp_2 = preempt_count();
      
#line 135 
      printk("\001","rtl8821ae_sw_led_off",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 137 
    goto ldv_54301;
  }
  ldv_54301: 
#line 139 
  ;
  
#line 139 
  pled->ledon = (_Bool)0;
  
#line 140 
  return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8812ae_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  
#line 144 
  u16 ledreg = (unsigned short)77U;
  
#line 145 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 146 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 148 
  switch ((unsigned int)pled->ledpin) {
    case (unsigned int)1: 
#line 149 
    ;
    
#line 150 
    ledreg = (unsigned short)77U;
    
#line 151 
    goto ldv_54313;
    case (unsigned int)2: 
#line 153 
    ;
    
#line 154 
    ledreg = (unsigned short)78U;
    
#line 155 
    goto ldv_54313;
    case (unsigned int)0: 
#line 157 
    ;
    default: 
#line 158 
    ;
    
#line 159 
    goto ldv_54313;
  }
  ldv_54313: 
#line 162 
  ;
  
#line 162 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 256ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 162 
    ;
    
#line 162 
    ;
    
#line 162 
    tmp = preempt_count();
    
#line 162 
    tmp_0 = preempt_count();
    
#line 162 
    printk("\001","rtl8812ae_sw_led_off",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)ledreg,(unsigned int)pled->ledpin);
  }
  else ;
  
#line 166 
  if ((int)pcipriv->ledctl.led_opendrain != 0) {
    
#line 167 
    u8 ledcfg = rtl_read_byte(rtlpriv,(unsigned int)ledreg);
    
#line 169 
    ledreg = (unsigned short)((unsigned int)ledreg & 208U);
    
#line 170 
    rtl_write_byte(rtlpriv,(unsigned int)ledreg,(unsigned char)((int)((unsigned int)ledcfg | 8U)));
    
#line 173 
    ledcfg = rtl_read_byte(rtlpriv,67U);
    
#line 174 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 254U);
    
#line 175 
    rtl_write_byte(rtlpriv,67U,(unsigned char)((int)ledcfg));
  }
  else 
#line 177 
       rtl_write_byte(rtlpriv,(unsigned int)ledreg,(unsigned char)40);
  
#line 180 
  pled->ledon = (_Bool)0;
  
#line 181 
  return;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8821ae_init_sw_leds(struct ieee80211_hw *hw)
{
  
#line 185 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 187 
  _rtl8821ae_init_led(hw,& pcipriv->ledctl.sw_led0,(enum rtl_led_pin)LED_PIN_LED0);
  
#line 188 
  _rtl8821ae_init_led(hw,& pcipriv->ledctl.sw_led1,(enum rtl_led_pin)LED_PIN_LED1);
  
#line 189 
  return;
}


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
static void _rtl8821ae_sw_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction)
{
  
#line 194 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 195 
  struct rtl_led *pLed0 = & pcipriv->ledctl.sw_led0;
  
#line 196 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 198 
  switch ((unsigned int)ledaction) {
    case (unsigned int)1: 
#line 199 
    ;
    case (unsigned int)2: 
#line 200 
    ;
    case (unsigned int)3: 
#line 201 
    ;
    
#line 202 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 203 
                                              rtl8812ae_sw_led_on(hw,pLed0); else 
                                                                    
#line 205 
                                                                    rtl8821ae_sw_led_on(hw,pLed0);
    
#line 206 
    goto ldv_54333;
    case (unsigned int)7: 
#line 207 
    ;
    
#line 208 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 209 
                                              rtl8812ae_sw_led_off(hw,pLed0); else 
                                                                    
#line 211 
                                                                    rtl8821ae_sw_led_off(hw,pLed0);
    
#line 212 
    goto ldv_54333;
    default: 
#line 213 
    ;
    
#line 214 
    goto ldv_54333;
  }
  ldv_54333: 
#line 216 
  ;
  
#line 217 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/led.c"
void rtl8821ae_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction)
{
  
#line 221 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 222 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 224 
  if (ppsc->rfoff_reason > 536870912U && ((((unsigned int)ledaction + 4294967292U <= 2U || ledaction == (unsigned int)LED_CTL_LINK) || (ledaction == (unsigned int)LED_CTL_NO_LINK || ledaction == (unsigned int)LED_CTL_START_TO_LINK)) || ledaction == (unsigned int)LED_CTL_POWER_ON)) 
    
#line 232 
    goto return_label; else ;
  
#line 234 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 256ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 234 
    ;
    
#line 234 
    tmp = preempt_count();
    
#line 234 
    tmp_0 = preempt_count();
    
#line 234 
    printk("\001","rtl8821ae_led_control",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(unsigned int)ledaction);
  }
  else ;
  
#line 236 
  _rtl8821ae_sw_led_control(hw,ledaction);
  return_label: 
#line 237 
                return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_1(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_76(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_78_0(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_1(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_77(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_79_0(spinlock_t *lock);


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_1(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 452 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 453 
  return;
}


#line 482 
static void ldv_spin_unlock_irqrestore_73_1(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_75_0(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv___ldv_spin_lock_72_1(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74_0(spinlock_t *ldv_func_arg1);


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned int jiffies_to_msecs(unsigned long const);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/ps.h"
bool rtl_ps_enable_nic(struct ieee80211_hw *);


#line 35 
bool rtl_ps_disable_nic(struct ieee80211_hw *);


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.h"
void rtl8821ae_phy_get_hw_reg_originalvalue(struct ieee80211_hw *hw);


#line 224 
void rtl8821ae_phy_get_txpower_level(struct ieee80211_hw *hw, long *powerlevel);


#line 226 
void rtl8821ae_phy_set_txpower_level(struct ieee80211_hw *hw, u8 channel);


#line 230 
void rtl8821ae_phy_set_bw_mode_callback(struct ieee80211_hw *hw);


#line 233 
void rtl8821ae_phy_sw_chnl_callback(struct ieee80211_hw *hw);


#line 239 
void rtl8821ae_phy_ap_calibrate(struct ieee80211_hw *hw, char delta);


#line 241 
void rtl8821ae_phy_set_rfpath_switch(struct ieee80211_hw *hw, bool bmain);


#line 242 
bool rtl8812ae_phy_config_rf_with_headerfile(struct ieee80211_hw *hw, enum radio_path rfpath);


#line 244 
bool rtl8821ae_phy_config_rf_with_headerfile(struct ieee80211_hw *hw, enum radio_path rfpath);


#line 249 
u8 _rtl8812ae_get_right_chnl_place_for_iqk(u8 chnl);


#line 256 
void rtl8821ae_reset_iqk_result(struct ieee80211_hw *hw);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.h"
void rtl8821ae_phy_rf6052_set_bandwidth(struct ieee80211_hw *hw, u8 bandwidth);


#line 40 
bool rtl8821ae_phy_rf6052_config(struct ieee80211_hw *hw);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.h"
u32 RTL8821AE_PHY_REG_ARRAY[344U];


#line 35 
u32 RTL8812AE_PHY_REG_ARRAY[490U];


#line 37 
u32 RTL8821AE_PHY_REG_ARRAY_PG[90U];


#line 39 
u32 RTL8812AE_PHY_REG_ARRAY_PG[276U];


#line 43 
u32 RTL8812AE_RADIOA_ARRAY[1264U];


#line 45 
u32 RTL8812AE_RADIOB_ARRAY[1240U];


#line 47 
u32 RTL8821AE_RADIOA_ARRAY[1176U];


#line 49 
u32 RTL8821AE_MAC_REG_ARRAY[194U];


#line 51 
u32 RTL8812AE_MAC_REG_ARRAY[214U];


#line 53 
u32 RTL8821AE_AGC_TAB_ARRAY[382U];


#line 55 
u32 RTL8812AE_AGC_TAB_ARRAY[1312U];


#line 57 
u8 *RTL8812AE_TXPWR_LMT[3948U];


#line 59 
u8 *RTL8821AE_TXPWR_LMT[3948U];


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/efuse.h"
void efuse_shadow_read(struct ieee80211_hw *, u8, u16, u32 *);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u32 _rtl8821ae_phy_rf_serial_read(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset);


#line 49 
static void _rtl8821ae_phy_rf_serial_write(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset, u32 data);


#line 52 
static u32 _rtl8821ae_phy_calculate_bit_shift(u32 bitmask);


#line 53 
static bool _rtl8821ae_phy_bb8821a_config_parafile(struct ieee80211_hw *hw);


#line 55 
static bool _rtl8821ae_phy_config_mac_with_headerfile(struct ieee80211_hw *hw);


#line 56 
static bool _rtl8821ae_phy_config_bb_with_headerfile(struct ieee80211_hw *hw, u8 configtype);


#line 58 
static bool _rtl8821ae_phy_config_bb_with_pgheaderfile(struct ieee80211_hw *hw, u8 configtype);


#line 60 
static void phy_init_bb_rf_register_definition(struct ieee80211_hw *hw);


#line 62 
static long _rtl8821ae_phy_txpwr_idx_to_dbm(struct ieee80211_hw *hw, enum wireless_mode wirelessmode, u8 txpwridx);


#line 65 
static void rtl8821ae_phy_set_rf_on(struct ieee80211_hw *hw);


#line 66 
static void rtl8821ae_phy_set_io(struct ieee80211_hw *hw);


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void rtl8812ae_fixspur(struct ieee80211_hw *hw, enum ht_channel_width band_width, u8 channel)
{
  
#line 71 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 74 
  if (((unsigned long)rtlhal->version & 7UL) == 4UL && ((unsigned long)rtlhal->version & 61440UL) == 8192UL) {
    
#line 75 
    if (band_width == (unsigned int)HT_CHANNEL_WIDTH_20_40 && (unsigned int)channel == 11U) 
      
#line 76 
      rtl_set_bbreg(hw,2220U,3072U,3U); else 
#line 79 
                                             rtl_set_bbreg(hw,2220U,3072U,2U);
    
#line 85 
    if (band_width == (unsigned int)HT_CHANNEL_WIDTH_20 && (unsigned int)channel + 243U <= 1U) {
      
#line 87 
      rtl_set_bbreg(hw,2220U,768U,3U);
      
#line 89 
      rtl_set_bbreg(hw,2244U,1073741824U,1U);
    }
    else 
      
#line 91 
      if (band_width == (unsigned int)HT_CHANNEL_WIDTH_20_40 && (unsigned int)channel == 11U) 
        
#line 93 
        rtl_set_bbreg(hw,2244U,1073741824U,1U);
      else 
        
#line 95 
        if (band_width != (unsigned int)HT_CHANNEL_WIDTH_80) {
          
#line 96 
          rtl_set_bbreg(hw,2220U,768U,2U);
          
#line 98 
          rtl_set_bbreg(hw,2244U,1073741824U,0U);
        }
        else ;
  }
  else 
    
#line 101 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 105 
      if (band_width == (unsigned int)HT_CHANNEL_WIDTH_20 && (unsigned int)channel + 243U <= 1U) 
        
#line 107 
        rtl_set_bbreg(hw,2220U,768U,3U);
      else 
        
#line 109 
        if ((unsigned int)channel <= 14U) 
#line 110 
                                          rtl_set_bbreg(hw,2220U,768U,2U); else ;
    }
    else ;
  
#line 111 
  return;
}


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
u32 rtl8821ae_phy_query_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask)
{
  u32 returnvalue;
  u32 originalvalue;
  u32 bitshift;
  
#line 118 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 121 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 121 
    ;
    
#line 121 
    ;
    
#line 121 
    tmp = preempt_count();
    
#line 121 
    tmp_0 = preempt_count();
    
#line 121 
    printk("\001","rtl8821ae_phy_query_bb_reg",(unsigned long)tmp_0 & 2096896UL,tmp != 0,regaddr,bitmask);
  }
  else ;
  
#line 124 
  originalvalue = rtl_read_dword(rtlpriv,regaddr);
  
#line 125 
  bitshift = _rtl8821ae_phy_calculate_bit_shift(bitmask);
  
#line 126 
  returnvalue = (originalvalue & bitmask) >> bitshift;
  
#line 128 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 128 
    ;
    
#line 128 
    ;
    
#line 128 
    ;
    
#line 128 
    tmp_1 = preempt_count();
    
#line 128 
    tmp_2 = preempt_count();
    
#line 128 
    printk("\001","rtl8821ae_phy_query_bb_reg",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,bitmask,regaddr,originalvalue);
  }
  else ;
  
#line 131 
  return returnvalue;
}


#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data)
{
  u32 originalvalue;
  u32 bitshift;
  
#line 137 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 140 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 140 
    ;
    
#line 140 
    ;
    
#line 140 
    ;
    
#line 140 
    tmp = preempt_count();
    
#line 140 
    tmp_0 = preempt_count();
    
#line 140 
    printk("\001","rtl8821ae_phy_set_bb_reg",(unsigned long)tmp_0 & 2096896UL,tmp != 0,regaddr,bitmask,data);
  }
  else ;
  
#line 144 
  if (bitmask != 4294967295U) {
    
#line 145 
    originalvalue = rtl_read_dword(rtlpriv,regaddr);
    
#line 146 
    bitshift = _rtl8821ae_phy_calculate_bit_shift(bitmask);
    
#line 147 
    data = (~ bitmask & originalvalue) | ((data << bitshift) & bitmask);
  }
  else ;
  
#line 151 
  rtl_write_dword(rtlpriv,regaddr,data);
  
#line 153 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 153 
    ;
    
#line 153 
    ;
    
#line 153 
    ;
    
#line 153 
    tmp_1 = preempt_count();
    
#line 153 
    tmp_2 = preempt_count();
    
#line 153 
    printk("\001","rtl8821ae_phy_set_bb_reg",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,regaddr,bitmask,data);
  }
  else ;
  
#line 154 
  return;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
u32 rtl8821ae_phy_query_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask)
{
  u32 original_value;
  u32 readback_value;
  u32 bitshift;
  unsigned long flags;
  
#line 162 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 166 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 166 
    ;
    
#line 166 
    ;
    
#line 166 
    ;
    
#line 166 
    tmp = preempt_count();
    
#line 166 
    tmp_0 = preempt_count();
    
#line 166 
    printk("\001","rtl8821ae_phy_query_rf_reg",(unsigned long)tmp_0 & 2096896UL,tmp != 0,regaddr,(unsigned int)rfpath,bitmask);
  }
  else ;
  
#line 170 
  ldv___ldv_spin_lock_72_1(& rtlpriv->locks.rf_lock);
  
#line 172 
  original_value = _rtl8821ae_phy_rf_serial_read(hw,rfpath,regaddr);
  
#line 173 
  bitshift = _rtl8821ae_phy_calculate_bit_shift(bitmask);
  
#line 174 
  readback_value = (original_value & bitmask) >> bitshift;
  
#line 176 
  ldv_spin_unlock_irqrestore_73_1(& rtlpriv->locks.rf_lock,flags);
  
#line 178 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 178 
    ;
    
#line 178 
    ;
    
#line 178 
    ;
    
#line 178 
    ;
    
#line 178 
    tmp_1 = preempt_count();
    
#line 178 
    tmp_2 = preempt_count();
    
#line 178 
    printk("\001","rtl8821ae_phy_query_rf_reg",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,regaddr,(unsigned int)rfpath,bitmask,original_value);
  }
  else ;
  
#line 182 
  return readback_value;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data)
{
  u32 original_value;
  u32 bitshift;
  unsigned long flags;
  
#line 189 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 193 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 193 
    ;
    
#line 193 
    ;
    
#line 193 
    ;
    
#line 193 
    ;
    
#line 193 
    tmp = preempt_count();
    
#line 193 
    tmp_0 = preempt_count();
    
#line 193 
    printk("\001","rtl8821ae_phy_set_rf_reg",(unsigned long)tmp_0 & 2096896UL,tmp != 0,regaddr,bitmask,data,(unsigned int)rfpath);
  }
  else ;
  
#line 197 
  ldv___ldv_spin_lock_74_0(& rtlpriv->locks.rf_lock);
  
#line 199 
  if (bitmask != 1048575U) {
    
#line 200 
    original_value = _rtl8821ae_phy_rf_serial_read(hw,rfpath,regaddr);
    
#line 202 
    bitshift = _rtl8821ae_phy_calculate_bit_shift(bitmask);
    
#line 203 
    data = (~ bitmask & original_value) | (data << bitshift);
  }
  else ;
  
#line 206 
  _rtl8821ae_phy_rf_serial_write(hw,rfpath,regaddr,data);
  
#line 208 
  ldv_spin_unlock_irqrestore_75_0(& rtlpriv->locks.rf_lock,flags);
  
#line 210 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 210 
    ;
    
#line 210 
    ;
    
#line 210 
    ;
    
#line 210 
    ;
    
#line 210 
    tmp_1 = preempt_count();
    
#line 210 
    tmp_2 = preempt_count();
    
#line 210 
    printk("\001","rtl8821ae_phy_set_rf_reg",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,regaddr,bitmask,data,(unsigned int)rfpath);
  }
  else ;
  
#line 211 
  return;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u32 _rtl8821ae_phy_rf_serial_read(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset)
{
  
#line 218 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 219 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 220 
  bool is_pi_mode = (_Bool)0;
  
#line 221 
  u32 retvalue = 0U;
  
#line 232 
  if (offset != 0U && ((unsigned int)rtlhal->hw_type != 13U && (((unsigned long)rtlhal->version & 7UL) != 4UL || ((unsigned long)rtlhal->version & 61440UL) != 8192UL))) 
    
#line 235 
    rtl_set_bbreg(hw,2104U,8U,1U); else ;
  
#line 236 
  offset &= 255U;
  
#line 238 
  if (rfpath == (unsigned int)RF90_PATH_A) {
    u32 tmp_1;
    
#line 239 
    tmp_1 = rtl_get_bbreg(hw,3072U,4U);
    
#line 239 
    is_pi_mode = (_Bool)(tmp_1 != 0U);
  }
  else 
    
#line 240 
    if (rfpath == (unsigned int)RF90_PATH_B) {
      u32 tmp_2;
      
#line 241 
      tmp_2 = rtl_get_bbreg(hw,3584U,4U);
      
#line 241 
      is_pi_mode = (_Bool)(tmp_2 != 0U);
    }
    else ;
  
#line 243 
  rtl_set_bbreg(hw,2224U,255U,offset);
  
#line 245 
  if ((unsigned int)rtlhal->hw_type == 13U || (((unsigned long)rtlhal->version & 7UL) == 4UL && ((unsigned long)rtlhal->version & 61440UL) == 8192UL)) 
    
#line 247 
    __const_udelay(85900UL); else ;
  
#line 249 
  if ((int)is_pi_mode != 0) {
    
#line 250 
    if (rfpath == (unsigned int)RF90_PATH_A) 
#line 251 
                                             retvalue = rtl_get_bbreg(hw,3332U,1048575U);
    else 
      
#line 253 
      if (rfpath == (unsigned int)RF90_PATH_B) 
#line 254 
                                               retvalue = rtl_get_bbreg(hw,3396U,1048575U); else ;
  }
  else 
    
#line 257 
    if (rfpath == (unsigned int)RF90_PATH_A) 
#line 258 
                                             retvalue = rtl_get_bbreg(hw,3336U,1048575U);
    else 
      
#line 260 
      if (rfpath == (unsigned int)RF90_PATH_B) 
#line 261 
                                               retvalue = rtl_get_bbreg(hw,3400U,1048575U); else ;
  
#line 269 
  if (offset != 0U && ((unsigned int)rtlhal->hw_type != 13U && (((unsigned long)rtlhal->version & 7UL) != 4UL || ((unsigned long)rtlhal->version & 61440UL) != 8192UL))) 
    
#line 272 
    rtl_set_bbreg(hw,2104U,8U,0U); else ;
  
#line 273 
  return retvalue;
}


#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_rf_serial_write(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset, u32 data)
{
  u32 data_and_addr;
  u32 newoffset;
  
#line 280 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 281 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 282 
  struct bb_reg_def *pphyreg = & rtlphy->phyreg_def[(unsigned int)rfpath];
  
#line 290 
  offset &= 255U;
  
#line 291 
  newoffset = offset;
  
#line 292 
  data_and_addr = ((newoffset << 20) | (data & 1048575U)) & 268435455U;
  
#line 294 
  rtl_set_bbreg(hw,pphyreg->rf3wire_offset,4294967295U,data_and_addr);
  
#line 295 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 295 
    ;
    
#line 295 
    ;
    
#line 295 
    ;
    
#line 295 
    tmp_1 = preempt_count();
    
#line 295 
    tmp_2 = preempt_count();
    
#line 295 
    printk("\001","_rtl8821ae_phy_rf_serial_write",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(unsigned int)rfpath,pphyreg->rf3wire_offset,data_and_addr);
  }
  else ;
  
#line 296 
  return;
}


#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u32 _rtl8821ae_phy_calculate_bit_shift(u32 bitmask)
{
  u32 i;
  
#line 304 
  i = 0U;
  
#line 304 
  goto ldv_56463;
  ldv_56462: 
#line 305 
  ;
  
#line 305 
  if (((bitmask >> i) & 1U) != 0U) 
#line 306 
                                   goto ldv_56461; else ;
  
#line 304 
  i += 1U;
  ldv_56463: 
#line 305 
  ;
  
#line 304 
  if (i <= 31U) 
#line 306 
                goto ldv_56462; else 
#line 309 
                                     goto ldv_56461;
  ldv_56461: 
#line 310 
  ;
  
#line 308 
  return i;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_mac_config(struct ieee80211_hw *hw)
{
  
#line 313 
  bool rtstatus = (_Bool)0;
  
#line 315 
  rtstatus = _rtl8821ae_phy_config_mac_with_headerfile(hw);
  
#line 317 
  return rtstatus;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_bb_config(struct ieee80211_hw *hw)
{
  u8 regval;
  u8 crystal_cap;
  
#line 322 
  bool rtstatus = (_Bool)1;
  
#line 323 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 324 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 325 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 326 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 330 
  phy_init_bb_rf_register_definition(hw);
  
#line 332 
  regval = rtl_read_byte(rtlpriv,2U);
  
#line 333 
  regval = (unsigned char)((unsigned int)regval | 64U);
  
#line 334 
  rtl_write_byte(rtlpriv,2U,(unsigned char)((int)regval));
  
#line 335 
  rtl_write_byte(rtlpriv,2U,(unsigned char)((int)((unsigned int)regval | 3U)));
  
#line 338 
  rtl_write_byte(rtlpriv,31U,(unsigned char)7);
  
#line 339 
  rtl_write_byte(rtlpriv,118U,(unsigned char)7);
  
#line 341 
  rtstatus = _rtl8821ae_phy_bb8821a_config_parafile(hw);
  
#line 343 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 344 
    crystal_cap = (unsigned char)((unsigned int)rtlefuse->crystalcap & 63U);
    
#line 345 
    rtl_set_bbreg(hw,44U,2146959360U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6)));
  }
  else {
    
#line 348 
    crystal_cap = (unsigned char)((unsigned int)rtlefuse->crystalcap & 63U);
    
#line 349 
    rtl_set_bbreg(hw,44U,16773120U,(unsigned int)((int)crystal_cap | ((int)crystal_cap << 6)));
  }
  
#line 352 
  rtlphy->reg_837 = rtl_read_byte(rtlpriv,2103U);
  
#line 354 
  return rtstatus;
}


#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_rf_config(struct ieee80211_hw *hw)
{
  bool tmp;
  
#line 359 
  tmp = rtl8821ae_phy_rf6052_config(hw);
  
#line 359 
  return tmp;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
u32 phy_get_tx_swing_8812A(struct ieee80211_hw *hw, u8 band, u8 rf_path)
{
  
#line 365 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 366 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 367 
  struct rtl_dm *rtldm = & rtlpriv->dm;
  
#line 368 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 369 
  char reg_swing_2g = (char)(-1);
  
#line 370 
  char reg_swing_5g = (char)(-1);
  
#line 371 
  char swing_2g = (char)(- ((int)reg_swing_2g));
  
#line 372 
  char swing_5g = (char)(- ((int)reg_swing_5g));
  
#line 373 
  u32 out = 512U;
  
#line 374 
  char const auto_temp = (char)(-1);
  
#line 376 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 376 
    ;
    
#line 376 
    ;
    
#line 376 
    ;
    
#line 376 
    tmp = preempt_count();
    
#line 376 
    tmp_0 = preempt_count();
    
#line 376 
    printk("\001","phy_get_tx_swing_8812A",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)swing_2g,(int)swing_5g,(int)rtlefuse->autoload_failflag);
  }
  else ;
  
#line 381 
  if ((unsigned int)rtlefuse->autoload_failflag != 0U) 
    
#line 382 
    if ((unsigned int)band == 0U) {
      
#line 383 
      rtldm->swing_diff_2g = swing_2g;
      
#line 384 
      if ((int)swing_2g == 0) 
#line 385 
                              out = 512U;
      else 
        
#line 386 
        if ((int)swing_2g == -3) 
#line 387 
                                 out = 362U;
        else 
          
#line 388 
          if ((int)swing_2g == -6) 
#line 389 
                                   out = 257U;
          else 
            
#line 390 
            if ((int)swing_2g == -9) 
#line 391 
                                     out = 182U;
            else {
              
#line 393 
              rtldm->swing_diff_2g = (char)0;
              
#line 394 
              out = 512U;
            }
    }
    else 
      
#line 396 
      if ((unsigned int)band == 1U) {
        
#line 397 
        rtldm->swing_diff_5g = swing_5g;
        
#line 398 
        if ((int)swing_5g == 0) 
#line 399 
                                out = 512U;
        else 
          
#line 400 
          if ((int)swing_5g == -3) 
#line 401 
                                   out = 362U;
          else 
            
#line 402 
            if ((int)swing_5g == -6) 
#line 403 
                                     out = 257U;
            else 
              
#line 404 
              if ((int)swing_5g == -9) 
#line 405 
                                       out = 182U;
              else 
                
#line 407 
                if ((unsigned int)rtlhal->hw_type == 13U) {
                  
#line 408 
                  rtldm->swing_diff_5g = (char)(-3);
                  
#line 409 
                  out = 362U;
                }
                else {
                  
#line 411 
                  rtldm->swing_diff_5g = (char)0;
                  
#line 412 
                  out = 512U;
                }
      }
      else {
        
#line 416 
        rtldm->swing_diff_2g = (char)(-3);
        
#line 417 
        rtldm->swing_diff_5g = (char)(-3);
        
#line 418 
        out = 362U;
      }
  else {
    
#line 421 
    u32 swing = 0U;
    
#line 421 
    u32 swing_a = 0U;
    
#line 421 
    u32 swing_b = 0U;
    
#line 423 
    if ((unsigned int)band == 0U) 
      
#line 424 
      if ((int)reg_swing_2g == -1) {
        
#line 425 
        efuse_shadow_read(hw,(unsigned char)1,(unsigned short)198,& swing);
        
#line 426 
        if (swing != 255U) 
#line 426 
                           swing = swing; else 
#line 426 
                                               swing = 0U;
      }
      else 
        
#line 427 
        if ((int)swing_2g == 0) 
#line 428 
                                swing = 0U;
        else 
          
#line 429 
          if ((int)swing_2g == -3) 
#line 430 
                                   swing = 5U;
          else 
            
#line 431 
            if ((int)swing_2g == -6) 
#line 432 
                                     swing = 10U;
            else 
              
#line 433 
              if ((int)swing_2g == -9) 
#line 434 
                                       swing = 255U; else 
#line 436 
                                                          swing = 0U;
    else 
      
#line 439 
      if ((int)reg_swing_5g == -1) {
        
#line 440 
        efuse_shadow_read(hw,(unsigned char)1,(unsigned short)199,& swing);
        
#line 441 
        if (swing != 255U) 
#line 441 
                           swing = swing; else 
#line 441 
                                               swing = 0U;
      }
      else 
        
#line 442 
        if ((int)swing_5g == 0) 
#line 443 
                                swing = 0U;
        else 
          
#line 444 
          if ((int)swing_5g == -3) 
#line 445 
                                   swing = 5U;
          else 
            
#line 446 
            if ((int)swing_5g == -6) 
#line 447 
                                     swing = 10U;
            else 
              
#line 448 
              if ((int)swing_5g == -9) 
#line 449 
                                       swing = 255U; else 
#line 451 
                                                          swing = 0U;
    
#line 455 
    swing_a = swing & 3U;
    
#line 456 
    swing_b = (swing >> 2) & 3U;
    
#line 457 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 457 
      ;
      
#line 457 
      ;
      
#line 457 
      tmp_1 = preempt_count();
      
#line 457 
      tmp_2 = preempt_count();
      
#line 457 
      printk("\001","phy_get_tx_swing_8812A",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,swing_a,swing_b);
    }
    else ;
    
#line 462 
    if (swing_a == 0U) {
      
#line 463 
      if ((unsigned int)band == 0U) 
#line 464 
                                    rtldm->swing_diff_2g = (char)0; else 
                                                                    
#line 466 
                                                                    rtldm->swing_diff_5g = (char)0;
      
#line 467 
      out = 512U;
    }
    else 
      
#line 468 
      if (swing_a == 1U) {
        
#line 469 
        if ((unsigned int)band == 0U) 
#line 470 
                                      rtldm->swing_diff_2g = (char)(-3); else 
                                                                    
#line 472 
                                                                    rtldm->swing_diff_5g = (char)(-3);
        
#line 473 
        out = 362U;
      }
      else 
        
#line 474 
        if (swing_a == 2U) {
          
#line 475 
          if ((unsigned int)band == 0U) 
#line 476 
                                        rtldm->swing_diff_2g = (char)(-6); else 
                                                                    
#line 478 
                                                                    rtldm->swing_diff_5g = (char)(-6);
          
#line 479 
          out = 257U;
        }
        else 
          
#line 480 
          if (swing_a == 3U) {
            
#line 481 
            if ((unsigned int)band == 0U) 
#line 482 
                                          rtldm->swing_diff_2g = (char)(-9); else 
                                                                    
#line 484 
                                                                    rtldm->swing_diff_5g = (char)(-9);
            
#line 485 
            out = 182U;
          }
          else ;
    
#line 488 
    if (swing_b == 0U) {
      
#line 489 
      if ((unsigned int)band == 0U) 
#line 490 
                                    rtldm->swing_diff_2g = (char)0; else 
                                                                    
#line 492 
                                                                    rtldm->swing_diff_5g = (char)0;
      
#line 493 
      out = 512U;
    }
    else 
      
#line 494 
      if (swing_b == 1U) {
        
#line 495 
        if ((unsigned int)band == 0U) 
#line 496 
                                      rtldm->swing_diff_2g = (char)(-3); else 
                                                                    
#line 498 
                                                                    rtldm->swing_diff_5g = (char)(-3);
        
#line 499 
        out = 362U;
      }
      else 
        
#line 500 
        if (swing_b == 2U) {
          
#line 501 
          if ((unsigned int)band == 0U) 
#line 502 
                                        rtldm->swing_diff_2g = (char)(-6); else 
                                                                    
#line 504 
                                                                    rtldm->swing_diff_5g = (char)(-6);
          
#line 505 
          out = 257U;
        }
        else 
          
#line 506 
          if (swing_b == 3U) {
            
#line 507 
            if ((unsigned int)band == 0U) 
#line 508 
                                          rtldm->swing_diff_2g = (char)(-9); else 
                                                                    
#line 510 
                                                                    rtldm->swing_diff_5g = (char)(-9);
            
#line 511 
            out = 182U;
          }
          else ;
  }
  
#line 515 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 515 
    ;
    
#line 515 
    tmp_3 = preempt_count();
    
#line 515 
    tmp_4 = preempt_count();
    
#line 515 
    printk("\001","phy_get_tx_swing_8812A",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,out);
  }
  else ;
  
#line 517 
  return out;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_switch_wirelessband(struct ieee80211_hw *hw, u8 band)
{
  u32 txpath;
  u32 rxpath;
  char bb_diff_between_band;
  
#line 522 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 523 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 524 
  struct rtl_dm *rtldm = & rtlpriv->dm;
  
#line 525 
  u8 current_band = (unsigned char)rtlhal->current_bandtype;
  
#line 529 
  txpath = rtl8821ae_phy_query_bb_reg(hw,2060U,240U);
  
#line 530 
  rxpath = rtl8821ae_phy_query_bb_reg(hw,2564U,251658240U);
  
#line 531 
  rtlhal->current_bandtype = (enum band_type)band;
  
#line 533 
  if (rtlhal->current_bandtype == (unsigned int)BAND_ON_2_4G) {
    
#line 535 
    rtl_set_bbreg(hw,2056U,805306368U,3U);
    
#line 537 
    if ((unsigned int)rtlhal->hw_type == 13U) {
      
#line 539 
      rtl_set_bbreg(hw,3248U,61440U,7U);
      
#line 541 
      rtl_set_bbreg(hw,3248U,240U,7U);
    }
    else ;
    
#line 544 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 546 
                                              rtl_set_bbreg(hw,2100U,3U,1U); else ;
    
#line 549 
    if ((unsigned int)rtlhal->hw_type == 13U) 
#line 551 
                                              rtl_set_bbreg(hw,3100U,3840U,0U); else 
                                                                    
#line 554 
                                                                    rtl_set_bbreg(hw,2092U,3U,0U);
    
#line 556 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 557 
      rtl_set_bbreg(hw,3248U,4294967295U,2004318071U);
      
#line 559 
      rtl_set_bbreg(hw,3760U,4294967295U,2004318071U);
      
#line 561 
      rtl_set_bbreg(hw,3252U,1072693248U,0U);
      
#line 562 
      rtl_set_bbreg(hw,3764U,1072693248U,0U);
    }
    else ;
    
#line 565 
    rtl_set_bbreg(hw,2060U,240U,1U);
    
#line 566 
    rtl_set_bbreg(hw,2564U,251658240U,1U);
    
#line 568 
    rtl_write_byte(rtlpriv,1108U,(unsigned char)0);
  }
  else {
    u16 count;
    u16 reg_41a;
    
#line 572 
    if ((unsigned int)rtlhal->hw_type == 13U) {
      
#line 574 
      rtl_set_bbreg(hw,3248U,61440U,5U);
      
#line 576 
      rtl_set_bbreg(hw,3248U,240U,4U);
    }
    else ;
    
#line 579 
    rtl_write_byte(rtlpriv,1108U,(unsigned char)128);
    
#line 581 
    count = (unsigned short)0U;
    
#line 582 
    reg_41a = rtl_read_word(rtlpriv,1050U);
    
#line 583 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 583 
      ;
      
#line 583 
      tmp = preempt_count();
      
#line 583 
      tmp_0 = preempt_count();
      
#line 583 
      printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)reg_41a);
    }
    else ;
    
#line 585 
    reg_41a = (unsigned short)((unsigned int)reg_41a & 48U);
    
#line 586 
    goto ldv_56515;
    ldv_56514: 
#line 587 
    ;
    
#line 587 
    __const_udelay(214750UL);
    
#line 588 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 588 
      tmp_1 = preempt_count();
      
#line 588 
      tmp_2 = preempt_count();
      
#line 588 
      printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 590 
    reg_41a = rtl_read_word(rtlpriv,1050U);
    
#line 591 
    reg_41a = (unsigned short)((unsigned int)reg_41a & 48U);
    
#line 592 
    count = (u16)((int)count + 1);
    
#line 593 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 593 
      ;
      
#line 593 
      tmp_3 = preempt_count();
      
#line 593 
      tmp_4 = preempt_count();
      
#line 593 
      printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)reg_41a);
    }
    else ;
    ldv_56515: 
#line 594 
    ;
    
#line 586 
    if ((unsigned int)reg_41a != 48U && (unsigned int)count <= 49U) 
#line 588 
                                                                    goto ldv_56514; else 
                                                                    
#line 591 
                                                                    goto ldv_56516;
    ldv_56516: 
#line 592 
    ;
    
#line 596 
    if ((unsigned int)count != 0U) {
      
#line 597 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 32ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 597 
        ;
        
#line 597 
        ;
        
#line 597 
        tmp_5 = preempt_count();
        
#line 597 
        tmp_6 = preempt_count();
        
#line 597 
        printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)count,(int)reg_41a);
      }
      else ;
    }
    else ;
    
#line 603 
    rtl_set_bbreg(hw,2056U,805306368U,3U);
    
#line 605 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 607 
                                              rtl_set_bbreg(hw,2100U,3U,2U); else ;
    
#line 610 
    if ((unsigned int)rtlhal->hw_type == 13U) 
#line 613 
                                              rtl_set_bbreg(hw,3100U,3840U,1U); else 
                                                                    
#line 616 
                                                                    rtl_set_bbreg(hw,2092U,3U,1U);
    
#line 618 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 619 
      rtl_set_bbreg(hw,3248U,4294967295U,1999861623U);
      
#line 621 
      rtl_set_bbreg(hw,3760U,4294967295U,1999861623U);
      
#line 623 
      rtl_set_bbreg(hw,3252U,1072693248U,16U);
      
#line 624 
      rtl_set_bbreg(hw,3764U,1072693248U,16U);
    }
    else ;
    
#line 627 
    rtl_set_bbreg(hw,2060U,240U,0U);
    
#line 628 
    rtl_set_bbreg(hw,2564U,251658240U,15U);
    
#line 630 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 630 
      ;
      
#line 630 
      tmp_7 = preempt_count();
      
#line 630 
      tmp_8 = preempt_count();
      
#line 630 
      printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,(int)rtlpriv->dm.ofdm_index[0]);
    }
    else ;
  }
  
#line 635 
  if ((unsigned int)rtlhal->hw_type + 65523U <= 1U) {
    u32 tmp_9;
    u32 tmp_10;
    
#line 638 
    tmp_9 = phy_get_tx_swing_8812A(hw,(unsigned char)((int)band),(unsigned char)0);
    
#line 638 
    ;
    
#line 638 
    rtl_set_bbreg(hw,3100U,4292870144U,tmp_9);
    
#line 641 
    tmp_10 = phy_get_tx_swing_8812A(hw,(unsigned char)((int)band),(unsigned char)1);
    
#line 641 
    ;
    
#line 641 
    rtl_set_bbreg(hw,3612U,4292870144U,tmp_10);
    
#line 648 
    if ((int)band != (int)current_band) {
      
#line 649 
      bb_diff_between_band = (char)((int)rtldm->swing_diff_2g - (int)rtldm->swing_diff_5g);
      
#line 651 
      if ((unsigned int)band != 0U) 
#line 651 
                                    bb_diff_between_band = (char)(- ((int)bb_diff_between_band)); else 
                                                                    
#line 651 
                                                                    bb_diff_between_band = bb_diff_between_band;
      
#line 654 
      rtldm->default_ofdm_index = (unsigned char)((unsigned int)rtldm->default_ofdm_index + (unsigned int)((unsigned char)bb_diff_between_band) * 2U);
    }
    else ;
    
#line 656 
    rtl8821ae_dm_clear_txpower_tracking_state(hw);
  }
  else ;
  
#line 659 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_11;
    int tmp_12;
    
#line 659 
    tmp_11 = preempt_count();
    
#line 659 
    tmp_12 = preempt_count();
    
#line 659 
    printk("\001","rtl8821ae_phy_switch_wirelessband",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
  }
  else ;
  
#line 661 
  return;
}


#line 664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_check_condition(struct ieee80211_hw *hw, u32 const condition)
{
  bool __retres;
  
#line 667 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 668 
  u32 _board = (unsigned int)rtlefuse->board_type;
  
#line 669 
  u32 _interface = 1U;
  
#line 670 
  u32 _platform = 8U;
  
#line 671 
  u32 cond = condition;
  
#line 673 
  if (condition == 3452816845U) {
    
#line 674 
    __retres = (_Bool)1;
    
#line 674 
    goto return_label;
  }
  else ;
  
#line 676 
  cond = condition & 255U;
  
#line 677 
  if (_board != cond && cond != 255U) {
    
#line 678 
    __retres = (_Bool)0;
    
#line 678 
    goto return_label;
  }
  else ;
  
#line 680 
  cond = condition & 65280U;
  
#line 681 
  cond >>= 8;
  
#line 682 
  if ((_interface & cond) == 0U && cond != 7U) {
    
#line 683 
    __retres = (_Bool)0;
    
#line 683 
    goto return_label;
  }
  else ;
  
#line 685 
  cond = condition & 16711680U;
  
#line 686 
  cond >>= 16;
  
#line 687 
  if ((_platform & cond) == 0U && cond != 15U) {
    
#line 688 
    __retres = (_Bool)0;
    
#line 688 
    goto return_label;
  }
  else ;
  
#line 689 
  __retres = (_Bool)1;
  return_label: 
#line 689 
                return __retres;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_config_rf_reg(struct ieee80211_hw *hw, u32 addr, u32 data, enum radio_path rfpath, u32 regaddr)
{
  
#line 696 
  if (addr == 254U || addr == 4094U) {
    
#line 700 
    unsigned long __ms = 50UL;
    {
      unsigned long tmp;
      
#line 700 
      goto ldv_56535;
      ldv_56534: 
#line 701 
      ;
      
#line 700 
      __const_udelay(4295000UL);
      ldv_56535: 
#line 702 
      ;
      
#line 700 
      tmp = __ms;
      
#line 700 
      __ms -= 1UL;
      
#line 700 
      ;
      
#line 700 
      if (tmp != 0UL) 
#line 702 
                      goto ldv_56534; else 
#line 705 
                                           goto ldv_56536;
      ldv_56536: 
#line 706 
      ;
    }
  }
  else {
    
#line 702 
    rtl_set_rfreg(hw,rfpath,regaddr,1048575U,data);
    
#line 703 
    __const_udelay(4295UL);
  }
  
#line 706 
  return;
}


#line 707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_config_rf_radio_a(struct ieee80211_hw *hw, u32 addr, u32 data)
{
  
#line 710 
  u32 content = 4096U;
  
#line 711 
  u32 maskforphyset = content & 57344U;
  
#line 713 
  _rtl8821ae_config_rf_reg(hw,addr,data,(enum radio_path)RF90_PATH_A,addr | maskforphyset);
  
#line 715 
  return;
}


#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_config_rf_radio_b(struct ieee80211_hw *hw, u32 addr, u32 data)
{
  
#line 720 
  u32 content = 4097U;
  
#line 721 
  u32 maskforphyset = content & 57344U;
  
#line 723 
  _rtl8821ae_config_rf_reg(hw,addr,data,(enum radio_path)RF90_PATH_B,addr | maskforphyset);
  
#line 725 
  return;
}


#line 727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_config_bb_reg(struct ieee80211_hw *hw, u32 addr, u32 data)
{
  
#line 730 
  if (addr == 254U) {
    
#line 731 
    unsigned long __ms = 50UL;
    {
      unsigned long tmp;
      
#line 731 
      goto ldv_56558;
      ldv_56557: 
#line 732 
      ;
      
#line 731 
      __const_udelay(4295000UL);
      ldv_56558: 
#line 733 
      ;
      
#line 731 
      tmp = __ms;
      
#line 731 
      __ms -= 1UL;
      
#line 731 
      ;
      
#line 731 
      if (tmp != 0UL) 
#line 733 
                      goto ldv_56557; else 
#line 736 
                                           goto ldv_56559;
      ldv_56559: 
#line 737 
      ;
    }
  }
  else 
    
#line 732 
    if (addr == 253U) 
      
#line 733 
      if (1) 
#line 733 
             __const_udelay(21475000UL);
      else {
        
#line 733 
        unsigned long __ms_0 = 5UL;
        {
          unsigned long tmp_0;
          
#line 733 
          goto ldv_56562;
          ldv_56561: 
#line 734 
          ;
          
#line 733 
          __const_udelay(4295000UL);
          ldv_56562: 
#line 735 
          ;
          
#line 733 
          tmp_0 = __ms_0;
          
#line 733 
          __ms_0 -= 1UL;
          
#line 733 
          ;
          
#line 733 
          if (tmp_0 != 0UL) 
#line 735 
                            goto ldv_56561; else 
#line 738 
                                                 goto ldv_56563;
          ldv_56563: 
#line 739 
          ;
        }
      }
    else 
      
#line 734 
      if (addr == 252U) 
        
#line 735 
        if (1) 
#line 735 
               __const_udelay(4295000UL);
        else {
          
#line 735 
          unsigned long __ms_1 = 1UL;
          {
            unsigned long tmp_1;
            
#line 735 
            goto ldv_56566;
            ldv_56565: 
#line 736 
            ;
            
#line 735 
            __const_udelay(4295000UL);
            ldv_56566: 
#line 737 
            ;
            
#line 735 
            tmp_1 = __ms_1;
            
#line 735 
            __ms_1 -= 1UL;
            
#line 735 
            ;
            
#line 735 
            if (tmp_1 != 0UL) 
#line 737 
                              goto ldv_56565; else 
#line 740 
                                                   goto ldv_56567;
            ldv_56567: 
#line 741 
            ;
          }
        }
      else 
        
#line 736 
        if (addr == 251U) 
#line 737 
                          __const_udelay(214750UL);
        else 
          
#line 738 
          if (addr == 250U) 
#line 739 
                            __const_udelay(21475UL);
          else 
            
#line 740 
            if (addr == 249U) 
#line 741 
                              __const_udelay(4295UL); else 
#line 743 
                                                           rtl_set_bbreg(hw,addr,4294967295U,data);
  
#line 745 
  __const_udelay(4295UL);
  
#line 747 
  return;
}


#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_init_tx_power_by_rate(struct ieee80211_hw *hw)
{
  u8 band;
  u8 rfpath;
  u8 txnum;
  u8 rate_section;
  
#line 750 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 751 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 754 
  band = (unsigned char)0U;
  
#line 754 
  goto ldv_56587;
  ldv_56586: 
#line 755 
  ;
  
#line 755 
  rfpath = (unsigned char)0U;
  
#line 755 
  goto ldv_56584;
  ldv_56583: 
#line 756 
  ;
  
#line 756 
  txnum = (unsigned char)0U;
  
#line 756 
  goto ldv_56581;
  ldv_56580: 
#line 757 
  ;
  
#line 757 
  rate_section = (unsigned char)0U;
  
#line 757 
  goto ldv_56578;
  ldv_56577: 
#line 758 
  ;
  
#line 761 
  rtlphy->tx_power_by_rate_offset[(int)band][(int)rfpath][(int)txnum][(int)rate_section] = 0U;
  
#line 759 
  rate_section = (u8)((int)rate_section + 1);
  ldv_56578: 
#line 760 
  ;
  
#line 757 
  if ((unsigned int)rate_section <= 11U) 
#line 760 
                                         goto ldv_56577; else 
#line 763 
                                                              goto ldv_56579;
  ldv_56579: 
#line 764 
  ;
  
#line 756 
  txnum = (u8)((int)txnum + 1);
  ldv_56581: 
#line 757 
  ;
  
#line 756 
  if ((unsigned int)txnum <= 3U) 
#line 758 
                                 goto ldv_56580; else 
#line 761 
                                                      goto ldv_56582;
  ldv_56582: 
#line 762 
  ;
  
#line 755 
  rfpath = (u8)((int)rfpath + 1);
  ldv_56584: 
#line 756 
  ;
  
#line 755 
  if ((unsigned int)rfpath <= 3U) 
#line 757 
                                  goto ldv_56583; else 
#line 760 
                                                       goto ldv_56585;
  ldv_56585: 
#line 761 
  ;
  
#line 754 
  band = (u8)((int)band + 1);
  ldv_56587: 
#line 755 
  ;
  
#line 754 
  if ((unsigned int)band <= 1U) 
#line 756 
                                goto ldv_56586; else 
#line 759 
                                                     goto ldv_56588;
  ldv_56588: 
#line 760 
  ;
  
#line 761 
  return;
}


#line 764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_set_txpower_by_rate_base(struct ieee80211_hw *hw, u8 band, u8 path, u8 rate_section, u8 txnum, u8 value)
{
  
#line 769 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 770 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 772 
  if ((unsigned int)path > 3U) {
    
#line 773 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 773 
      ;
      
#line 773 
      tmp = preempt_count();
      
#line 773 
      tmp_0 = preempt_count();
      
#line 773 
      printk("\001","_rtl8821ae_phy_set_txpower_by_rate_base",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)path);
    }
    else ;
    
#line 775 
    goto return_label;
  }
  else ;
  
#line 778 
  if ((unsigned int)band == 0U) {
    
#line 779 
    switch ((int)rate_section) {
      case 0: 
#line 780 
      ;
      
#line 781 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][0] = value;
      
#line 782 
      goto ldv_56601;
      case 1: 
#line 783 
      ;
      
#line 784 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][1] = value;
      
#line 785 
      goto ldv_56601;
      case 2: 
#line 786 
      ;
      
#line 787 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][2] = value;
      
#line 788 
      goto ldv_56601;
      case 3: 
#line 789 
      ;
      
#line 790 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][3] = value;
      
#line 791 
      goto ldv_56601;
      case 4: 
#line 792 
      ;
      
#line 793 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][4] = value;
      
#line 794 
      goto ldv_56601;
      case 5: 
#line 795 
      ;
      
#line 796 
      rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][5] = value;
      
#line 797 
      goto ldv_56601;
      default: 
#line 798 
      ;
      
#line 799 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 799 
        ;
        
#line 799 
        ;
        
#line 799 
        ;
        
#line 799 
        tmp_1 = preempt_count();
        
#line 799 
        tmp_2 = preempt_count();
        
#line 799 
        printk("\001","_rtl8821ae_phy_set_txpower_by_rate_base",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rate_section,(int)path,(int)txnum);
      }
      else ;
      
#line 802 
      goto ldv_56601;
    }
    ldv_56601: 
#line 804 
    ;
  }
  else 
    
#line 804 
    if ((unsigned int)band == 1U) {
      
#line 805 
      switch ((int)rate_section) {
        case 1: 
#line 806 
        ;
        
#line 807 
        rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][0] = value;
        
#line 808 
        goto ldv_56609;
        case 2: 
#line 809 
        ;
        
#line 810 
        rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][1] = value;
        
#line 811 
        goto ldv_56609;
        case 3: 
#line 812 
        ;
        
#line 813 
        rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][2] = value;
        
#line 814 
        goto ldv_56609;
        case 4: 
#line 815 
        ;
        
#line 816 
        rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][3] = value;
        
#line 817 
        goto ldv_56609;
        case 5: 
#line 818 
        ;
        
#line 819 
        rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][4] = value;
        
#line 820 
        goto ldv_56609;
        default: 
#line 821 
        ;
        
#line 822 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_3;
          int tmp_4;
          
#line 822 
          ;
          
#line 822 
          ;
          
#line 822 
          ;
          
#line 822 
          tmp_3 = preempt_count();
          
#line 822 
          tmp_4 = preempt_count();
          
#line 822 
          printk("\001","_rtl8821ae_phy_set_txpower_by_rate_base",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rate_section,(int)path,(int)txnum);
        }
        else ;
        
#line 825 
        goto ldv_56609;
      }
      ldv_56609: 
#line 827 
      ;
    }
    else 
      
#line 828 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 828 
        ;
        
#line 828 
        tmp_5 = preempt_count();
        
#line 828 
        tmp_6 = preempt_count();
        
#line 828 
        printk("\001","_rtl8821ae_phy_set_txpower_by_rate_base",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)band);
      }
      else ;
  return_label: 
#line 829 
                return;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u8 _rtl8821ae_phy_get_txpower_by_rate_base(struct ieee80211_hw *hw, u8 band, u8 path, u8 txnum, u8 rate_section)
{
  u8 __retres;
  
#line 837 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 838 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 839 
  u8 value = (unsigned char)0U;
  
#line 841 
  if ((unsigned int)path > 3U) {
    
#line 842 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 842 
      ;
      
#line 842 
      tmp = preempt_count();
      
#line 842 
      tmp_0 = preempt_count();
      
#line 842 
      printk("\001","_rtl8821ae_phy_get_txpower_by_rate_base",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)path);
    }
    else ;
    
#line 845 
    __retres = (unsigned char)0U;
    
#line 845 
    goto return_label;
  }
  else ;
  
#line 848 
  if ((unsigned int)band == 0U) {
    
#line 849 
    switch ((int)rate_section) {
      case 0: 
#line 850 
      ;
      
#line 851 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][0];
      
#line 852 
      goto ldv_56627;
      case 1: 
#line 853 
      ;
      
#line 854 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][1];
      
#line 855 
      goto ldv_56627;
      case 2: 
#line 856 
      ;
      
#line 857 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][2];
      
#line 858 
      goto ldv_56627;
      case 3: 
#line 859 
      ;
      
#line 860 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][3];
      
#line 861 
      goto ldv_56627;
      case 4: 
#line 862 
      ;
      
#line 863 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][4];
      
#line 864 
      goto ldv_56627;
      case 5: 
#line 865 
      ;
      
#line 866 
      value = rtlphy->txpwr_by_rate_base_24g[(int)path][(int)txnum][5];
      
#line 867 
      goto ldv_56627;
      default: 
#line 868 
      ;
      
#line 869 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 869 
        ;
        
#line 869 
        ;
        
#line 869 
        ;
        
#line 869 
        tmp_1 = preempt_count();
        
#line 869 
        tmp_2 = preempt_count();
        
#line 869 
        printk("\001","_rtl8821ae_phy_get_txpower_by_rate_base",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rate_section,(int)path,(int)txnum);
      }
      else ;
      
#line 872 
      goto ldv_56627;
    }
    ldv_56627: 
#line 874 
    ;
  }
  else 
    
#line 874 
    if ((unsigned int)band == 1U) {
      
#line 875 
      switch ((int)rate_section) {
        case 1: 
#line 876 
        ;
        
#line 877 
        value = rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][0];
        
#line 878 
        goto ldv_56635;
        case 2: 
#line 879 
        ;
        
#line 880 
        value = rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][1];
        
#line 881 
        goto ldv_56635;
        case 3: 
#line 882 
        ;
        
#line 883 
        value = rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][2];
        
#line 884 
        goto ldv_56635;
        case 4: 
#line 885 
        ;
        
#line 886 
        value = rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][3];
        
#line 887 
        goto ldv_56635;
        case 5: 
#line 888 
        ;
        
#line 889 
        value = rtlphy->txpwr_by_rate_base_5g[(int)path][(int)txnum][4];
        
#line 890 
        goto ldv_56635;
        default: 
#line 891 
        ;
        
#line 892 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_3;
          int tmp_4;
          
#line 892 
          ;
          
#line 892 
          ;
          
#line 892 
          ;
          
#line 892 
          tmp_3 = preempt_count();
          
#line 892 
          tmp_4 = preempt_count();
          
#line 892 
          printk("\001","_rtl8821ae_phy_get_txpower_by_rate_base",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rate_section,(int)path,(int)txnum);
        }
        else ;
        
#line 895 
        goto ldv_56635;
      }
      ldv_56635: 
#line 897 
      ;
    }
    else 
      
#line 898 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_5;
        int tmp_6;
        
#line 898 
        ;
        
#line 898 
        tmp_5 = preempt_count();
        
#line 898 
        tmp_6 = preempt_count();
        
#line 898 
        printk("\001","_rtl8821ae_phy_get_txpower_by_rate_base",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)band);
      }
      else ;
  
#line 902 
  __retres = value;
  return_label: 
#line 902 
                return __retres;
}


#line 905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_store_txpower_by_rate_base(struct ieee80211_hw *hw)
{
  
#line 907 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 908 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 909 
  u16 rawValue = (unsigned short)0U;
  
#line 910 
  u8 base = (unsigned char)0U;
  
#line 910 
  u8 path = (unsigned char)0U;
  
#line 912 
  path = (unsigned char)0U;
  
#line 912 
  goto ldv_56650;
  ldv_56649: 
#line 913 
  ;
  
#line 913 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][0][0] >> 24)) & 255U);
  
#line 914 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 915 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)0,(unsigned char)0,(unsigned char)((int)base));
  
#line 917 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][0][2] >> 24)) & 255U);
  
#line 918 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 919 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)1,(unsigned char)0,(unsigned char)((int)base));
  
#line 921 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][0][4] >> 24)) & 255U);
  
#line 922 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 923 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)2,(unsigned char)0,(unsigned char)((int)base));
  
#line 925 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][1][6] >> 24)) & 255U);
  
#line 926 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 927 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)3,(unsigned char)1,(unsigned char)((int)base));
  
#line 929 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][0][8] >> 24)) & 255U);
  
#line 930 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 931 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)4,(unsigned char)0,(unsigned char)((int)base));
  
#line 933 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[0][(int)path][1][11] >> 8)) & 255U);
  
#line 934 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 935 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)path),(unsigned char)5,(unsigned char)1,(unsigned char)((int)base));
  
#line 937 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[1][(int)path][0][2] >> 24)) & 255U);
  
#line 938 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 939 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)path),(unsigned char)1,(unsigned char)0,(unsigned char)((int)base));
  
#line 941 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[1][(int)path][0][4] >> 24)) & 255U);
  
#line 942 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 943 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)path),(unsigned char)2,(unsigned char)0,(unsigned char)((int)base));
  
#line 945 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[1][(int)path][1][6] >> 24)) & 255U);
  
#line 946 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 947 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)path),(unsigned char)3,(unsigned char)1,(unsigned char)((int)base));
  
#line 949 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[1][(int)path][0][8] >> 24)) & 255U);
  
#line 950 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 951 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)path),(unsigned char)4,(unsigned char)0,(unsigned char)((int)base));
  
#line 953 
  rawValue = (unsigned short)((unsigned int)((unsigned short)(rtlphy->tx_power_by_rate_offset[1][(int)path][1][11] >> 8)) & 255U);
  
#line 954 
  base = (unsigned char)((unsigned int)((unsigned char)((int)rawValue >> 4)) * 10U + ((unsigned int)((unsigned char)rawValue) & 15U));
  
#line 955 
  _rtl8821ae_phy_set_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)path),(unsigned char)5,(unsigned char)1,(unsigned char)((int)base));
  
#line 912 
  path = (u8)((int)path + 1);
  ldv_56650: 
#line 913 
  ;
  
#line 912 
  if ((unsigned int)path <= 1U) 
#line 914 
                                goto ldv_56649; else 
#line 917 
                                                     goto ldv_56651;
  ldv_56651: 
#line 918 
  ;
  
#line 919 
  return;
}


#line 959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _phy_convert_txpower_dbm_to_relative_value(u32 *data, u8 start, u8 end, u8 base_val)
{
  
#line 962 
  char i = (char)0;
  
#line 963 
  u8 temp_value = (unsigned char)0U;
  
#line 964 
  u32 temp_data = 0U;
  
#line 966 
  i = (char)3;
  
#line 966 
  goto ldv_56662;
  ldv_56661: 
#line 967 
  ;
  
#line 967 
  if ((int)i >= (int)start && (int)i <= (int)end) {
    
#line 969 
    temp_value = (unsigned char)((unsigned int)((unsigned char)(*data >> (int)i * 8)) & 15U);
    
#line 970 
    temp_value = (unsigned char)(((unsigned int)((unsigned char)(*data >> ((int)i * 8 + 4))) & 15U) * 10U + (unsigned int)temp_value);
    
#line 973 
    if ((int)temp_value > (int)base_val) 
#line 973 
                                         temp_value = (unsigned char)((int)temp_value - (int)base_val); else 
                                                                    
#line 973 
                                                                    temp_value = (unsigned char)((int)base_val - (int)temp_value);
  }
  else 
#line 976 
       temp_value = (unsigned char)(*data >> (int)i * 8);
  
#line 978 
  temp_data <<= 8;
  
#line 979 
  temp_data = (unsigned int)temp_value | temp_data;
  
#line 966 
  i = (char)((int)i - 1);
  ldv_56662: 
#line 967 
  ;
  
#line 966 
  if ((int)i >= 0) 
#line 968 
                   goto ldv_56661; else 
#line 971 
                                        goto ldv_56663;
  ldv_56663: 
#line 972 
  ;
  
#line 981 
  *data = temp_data;
  
#line 982 
  return;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8812ae_phy_cross_reference_ht_and_vht_txpower_limit(struct ieee80211_hw *hw)
{
  u8 regulation;
  u8 bw;
  u8 channel;
  u8 rate_section;
  
#line 986 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 987 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 989 
  char temp_pwrlmt = (char)0;
  
#line 991 
  regulation = (unsigned char)0U;
  
#line 991 
  goto ldv_56685;
  ldv_56684: 
#line 992 
  ;
  
#line 992 
  bw = (unsigned char)0U;
  
#line 992 
  goto ldv_56682;
  ldv_56681: 
#line 993 
  ;
  
#line 993 
  channel = (unsigned char)0U;
  
#line 993 
  goto ldv_56679;
  ldv_56678: 
#line 994 
  ;
  
#line 994 
  rate_section = (unsigned char)0U;
  
#line 994 
  goto ldv_56676;
  ldv_56675: 
#line 995 
  ;
  
#line 995 
  temp_pwrlmt = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][(int)rate_section][(int)channel][0];
  
#line 997 
  if ((int)temp_pwrlmt == 63) {
    
#line 998 
    if ((unsigned int)bw <= 1U) {
      
#line 999 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp;
        int tmp_0;
        
#line 999 
        ;
        
#line 999 
        ;
        
#line 999 
        ;
        
#line 999 
        tmp = preempt_count();
        
#line 999 
        tmp_0 = preempt_count();
        
#line 999 
        printk("\001","_rtl8812ae_phy_cross_reference_ht_and_vht_txpower_limit",(unsigned long)tmp_0 & 2096896UL,tmp != 0,1,(int)bw,(int)rate_section,(int)channel,0);
      }
      else ;
      
#line 1002 
      if ((unsigned int)rate_section == 2U) 
#line 1003 
                                            rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][2][(int)channel][0] = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][4][(int)channel][0];
      else 
        
#line 1005 
        if ((unsigned int)rate_section == 4U) 
#line 1006 
                                              rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][4][(int)channel][0] = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][2][(int)channel][0];
        else 
          
#line 1008 
          if ((unsigned int)rate_section == 3U) 
#line 1009 
                                                rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][3][(int)channel][0] = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][5][(int)channel][0];
          else 
            
#line 1011 
            if ((unsigned int)rate_section == 5U) 
#line 1012 
                                                  rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][5][(int)channel][0] = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][3][(int)channel][0]; else ;
      
#line 1016 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp_1;
        int tmp_2;
        
#line 1016 
        ;
        
#line 1016 
        tmp_1 = preempt_count();
        
#line 1016 
        tmp_2 = preempt_count();
        
#line 1016 
        printk("\001","_rtl8812ae_phy_cross_reference_ht_and_vht_txpower_limit",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)temp_pwrlmt);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 994 
  rate_section = (u8)((int)rate_section + 1);
  ldv_56676: 
#line 995 
  ;
  
#line 994 
  if ((unsigned int)rate_section <= 5U) 
#line 996 
                                        goto ldv_56675; else 
#line 999 
                                                             goto ldv_56677;
  ldv_56677: 
#line 1000 
  ;
  
#line 993 
  channel = (u8)((int)channel + 1);
  ldv_56679: 
#line 994 
  ;
  
#line 993 
  if ((unsigned int)channel <= 53U) 
#line 995 
                                    goto ldv_56678; else 
#line 998 
                                                         goto ldv_56680;
  ldv_56680: 
#line 999 
  ;
  
#line 992 
  bw = (u8)((int)bw + 1);
  ldv_56682: 
#line 993 
  ;
  
#line 992 
  if ((unsigned int)bw <= 3U) 
#line 994 
                              goto ldv_56681; else 
#line 997 
                                                   goto ldv_56683;
  ldv_56683: 
#line 998 
  ;
  
#line 991 
  regulation = (u8)((int)regulation + 1);
  ldv_56685: 
#line 992 
  ;
  
#line 991 
  if ((unsigned int)regulation <= 3U) 
#line 993 
                                      goto ldv_56684; else 
#line 996 
                                                           goto ldv_56686;
  ldv_56686: 
#line 997 
  ;
  
#line 998 
  return;
}


#line 1025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u8 _rtl8812ae_phy_get_txpower_by_rate_base_index(struct ieee80211_hw *hw, enum band_type band, u8 rate)
{
  
#line 1028 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1029 
  u8 index = (unsigned char)0U;
  
#line 1030 
  if (band == (unsigned int)BAND_ON_2_4G) {
    
#line 1031 
    switch ((int)rate) {
      case 2: 
#line 1032 
      ;
      case 4: 
#line 1033 
      ;
      case 11: 
#line 1034 
      ;
      case 22: 
#line 1035 
      ;
      
#line 1036 
      index = (unsigned char)0U;
      
#line 1037 
      goto ldv_56698;
      case 12: 
#line 1039 
      ;
      case 18: 
#line 1040 
      ;
      case 24: 
#line 1041 
      ;
      case 36: 
#line 1042 
      ;
      case 48: 
#line 1043 
      ;
      case 72: 
#line 1044 
      ;
      case 96: 
#line 1045 
      ;
      case 108: 
#line 1046 
      ;
      
#line 1047 
      index = (unsigned char)1U;
      
#line 1048 
      goto ldv_56698;
      case 128: 
#line 1050 
      ;
      case 129: 
#line 1051 
      ;
      case 130: 
#line 1052 
      ;
      case 131: 
#line 1053 
      ;
      case 132: 
#line 1054 
      ;
      case 133: 
#line 1055 
      ;
      case 134: 
#line 1056 
      ;
      case 135: 
#line 1057 
      ;
      
#line 1058 
      index = (unsigned char)2U;
      
#line 1059 
      goto ldv_56698;
      case 136: 
#line 1061 
      ;
      case 137: 
#line 1062 
      ;
      case 138: 
#line 1063 
      ;
      case 139: 
#line 1064 
      ;
      case 140: 
#line 1065 
      ;
      case 141: 
#line 1066 
      ;
      case 142: 
#line 1067 
      ;
      case 143: 
#line 1068 
      ;
      
#line 1069 
      index = (unsigned char)3U;
      
#line 1070 
      goto ldv_56698;
      default: 
#line 1072 
      ;
      
#line 1073 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp;
        int tmp_0;
        
#line 1073 
        ;
        
#line 1073 
        tmp = preempt_count();
        
#line 1073 
        tmp_0 = preempt_count();
        
#line 1073 
        printk("\001","_rtl8812ae_phy_get_txpower_by_rate_base_index",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rate);
      }
      else ;
      
#line 1076 
      goto ldv_56698;
    }
    ldv_56698: 
#line 1078 
    ;
  }
  else 
    
#line 1078 
    if (band == (unsigned int)BAND_ON_5G) {
      
#line 1079 
      switch ((int)rate) {
        case 12: 
#line 1080 
        ;
        case 18: 
#line 1081 
        ;
        case 24: 
#line 1082 
        ;
        case 36: 
#line 1083 
        ;
        case 48: 
#line 1084 
        ;
        case 72: 
#line 1085 
        ;
        case 96: 
#line 1086 
        ;
        case 108: 
#line 1087 
        ;
        
#line 1088 
        index = (unsigned char)0U;
        
#line 1089 
        goto ldv_56733;
        case 128: 
#line 1091 
        ;
        case 129: 
#line 1092 
        ;
        case 130: 
#line 1093 
        ;
        case 131: 
#line 1094 
        ;
        case 132: 
#line 1095 
        ;
        case 133: 
#line 1096 
        ;
        case 134: 
#line 1097 
        ;
        case 135: 
#line 1098 
        ;
        
#line 1099 
        index = (unsigned char)1U;
        
#line 1100 
        goto ldv_56733;
        case 136: 
#line 1102 
        ;
        case 137: 
#line 1103 
        ;
        case 138: 
#line 1104 
        ;
        case 139: 
#line 1105 
        ;
        case 140: 
#line 1106 
        ;
        case 141: 
#line 1107 
        ;
        case 142: 
#line 1108 
        ;
        case 143: 
#line 1109 
        ;
        
#line 1110 
        index = (unsigned char)2U;
        
#line 1111 
        goto ldv_56733;
        case 144: 
#line 1113 
        ;
        case 145: 
#line 1114 
        ;
        case 146: 
#line 1115 
        ;
        case 147: 
#line 1116 
        ;
        case 148: 
#line 1117 
        ;
        case 149: 
#line 1118 
        ;
        case 150: 
#line 1119 
        ;
        case 151: 
#line 1120 
        ;
        case 152: 
#line 1121 
        ;
        case 153: 
#line 1122 
        ;
        
#line 1123 
        index = (unsigned char)3U;
        
#line 1124 
        goto ldv_56733;
        case 154: 
#line 1126 
        ;
        case 155: 
#line 1127 
        ;
        case 156: 
#line 1128 
        ;
        case 157: 
#line 1129 
        ;
        case 158: 
#line 1130 
        ;
        case 159: 
#line 1131 
        ;
        case 160: 
#line 1132 
        ;
        case 161: 
#line 1133 
        ;
        case 162: 
#line 1134 
        ;
        case 163: 
#line 1135 
        ;
        
#line 1136 
        index = (unsigned char)4U;
        
#line 1137 
        goto ldv_56733;
        default: 
#line 1139 
        ;
        
#line 1140 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_1;
          int tmp_2;
          
#line 1140 
          ;
          
#line 1140 
          tmp_1 = preempt_count();
          
#line 1140 
          tmp_2 = preempt_count();
          
#line 1140 
          printk("\001","_rtl8812ae_phy_get_txpower_by_rate_base_index",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rate);
        }
        else ;
        
#line 1143 
        goto ldv_56733;
      }
      ldv_56733: 
#line 1145 
      ;
    }
    else ;
  
#line 1147 
  return index;
}


#line 1150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8812ae_phy_convert_txpower_limit_to_power_index(struct ieee80211_hw *hw)
{
  u8 bw40_pwr_base_dbm2_4G;
  u8 bw40_pwr_base_dbm5G;
  u8 regulation;
  u8 bw;
  u8 channel;
  u8 rate_section;
  
#line 1152 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1153 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1156 
  u8 base_index2_4G = (unsigned char)0U;
  
#line 1157 
  u8 base_index5G = (unsigned char)0U;
  
#line 1158 
  char temp_value = (char)0;
  
#line 1158 
  char temp_pwrlmt = (char)0;
  
#line 1159 
  u8 rf_path = (unsigned char)0U;
  
#line 1161 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1161 
    tmp = preempt_count();
    
#line 1161 
    tmp_0 = preempt_count();
    
#line 1161 
    printk("\001","_rtl8812ae_phy_convert_txpower_limit_to_power_index",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1164 
  _rtl8812ae_phy_cross_reference_ht_and_vht_txpower_limit(hw);
  
#line 1166 
  regulation = (unsigned char)0U;
  
#line 1166 
  goto ldv_56801;
  ldv_56800: 
#line 1167 
  ;
  
#line 1167 
  bw = (unsigned char)0U;
  
#line 1167 
  goto ldv_56798;
  ldv_56797: 
#line 1168 
  ;
  
#line 1168 
  channel = (unsigned char)0U;
  
#line 1168 
  goto ldv_56795;
  ldv_56794: 
#line 1169 
  ;
  
#line 1169 
  rate_section = (unsigned char)0U;
  
#line 1169 
  goto ldv_56792;
  ldv_56791: 
#line 1170 
  ;
  
#line 1172 
  if ((unsigned int)rate_section == 0U) 
#line 1173 
                                        base_index2_4G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_2_4G,(unsigned char)22);
  else 
    
#line 1176 
    if ((unsigned int)rate_section == 1U) 
#line 1177 
                                          base_index2_4G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_2_4G,(unsigned char)108);
    else 
      
#line 1180 
      if ((unsigned int)rate_section == 2U) 
#line 1181 
                                            base_index2_4G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_2_4G,(unsigned char)135);
      else 
        
#line 1184 
        if ((unsigned int)rate_section == 3U) 
#line 1185 
                                              base_index2_4G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_2_4G,(unsigned char)143); else ;
  
#line 1190 
  temp_pwrlmt = rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bw][(int)rate_section][(int)channel][0];
  
#line 1193 
  rf_path = (unsigned char)0U;
  
#line 1193 
  goto ldv_56789;
  ldv_56788: 
#line 1194 
  ;
  
#line 1196 
  if ((unsigned int)rate_section == 3U) 
#line 1197 
                                        bw40_pwr_base_dbm2_4G = rtlphy->txpwr_by_rate_base_24g[(int)rf_path][1][(int)base_index2_4G]; else 
                                                                    
#line 1200 
                                                                    bw40_pwr_base_dbm2_4G = rtlphy->txpwr_by_rate_base_24g[(int)rf_path][0][(int)base_index2_4G];
  
#line 1203 
  if ((int)temp_pwrlmt != 63) {
    
#line 1204 
    temp_value = (char)((int)temp_pwrlmt - (int)bw40_pwr_base_dbm2_4G);
    
#line 1206 
    rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bw][(int)rate_section][(int)channel][(int)rf_path] = temp_value;
  }
  else ;
  
#line 1210 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    int tmp_3;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    if ((int)temp_pwrlmt != 63) 
#line 1210 
                                tmp_1 = (int)((signed char)temp_pwrlmt) / 2; else 
                                                                    
#line 1210 
                                                                    tmp_1 = 0;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    ;
    
#line 1210 
    tmp_2 = preempt_count();
    
#line 1210 
    tmp_3 = preempt_count();
    
#line 1210 
    printk("\001","_rtl8812ae_phy_convert_txpower_limit_to_power_index",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,(int)regulation,(int)bw,(int)rate_section,(int)channel,(int)rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bw][(int)rate_section][(int)channel][(int)rf_path],tmp_1,(int)channel,(int)rf_path,(int)bw40_pwr_base_dbm2_4G);
  }
  else ;
  
#line 1195 
  rf_path = (u8)((int)rf_path + 1);
  ldv_56789: 
#line 1196 
  ;
  
#line 1193 
  if ((unsigned int)rf_path <= 3U) 
#line 1196 
                                   goto ldv_56788; else 
#line 1199 
                                                        goto ldv_56790;
  ldv_56790: 
#line 1200 
  ;
  
#line 1169 
  rate_section = (u8)((int)rate_section + 1);
  ldv_56792: 
#line 1170 
  ;
  
#line 1169 
  if ((unsigned int)rate_section <= 5U) 
#line 1171 
                                        goto ldv_56791; else 
#line 1174 
                                                             goto ldv_56793;
  ldv_56793: 
#line 1175 
  ;
  
#line 1168 
  channel = (u8)((int)channel + 1);
  ldv_56795: 
#line 1169 
  ;
  
#line 1168 
  if ((unsigned int)channel <= 13U) 
#line 1170 
                                    goto ldv_56794; else 
#line 1173 
                                                         goto ldv_56796;
  ldv_56796: 
#line 1174 
  ;
  
#line 1167 
  bw = (u8)((int)bw + 1);
  ldv_56798: 
#line 1168 
  ;
  
#line 1167 
  if ((unsigned int)bw <= 3U) 
#line 1169 
                              goto ldv_56797; else 
#line 1172 
                                                   goto ldv_56799;
  ldv_56799: 
#line 1173 
  ;
  
#line 1166 
  regulation = (u8)((int)regulation + 1);
  ldv_56801: 
#line 1167 
  ;
  
#line 1166 
  if ((unsigned int)regulation <= 3U) 
#line 1168 
                                      goto ldv_56800; else 
#line 1171 
                                                           goto ldv_56802;
  ldv_56802: 
#line 1172 
  ;
  
#line 1222 
  regulation = (unsigned char)0U;
  
#line 1222 
  goto ldv_56816;
  ldv_56815: 
#line 1223 
  ;
  
#line 1223 
  bw = (unsigned char)0U;
  
#line 1223 
  goto ldv_56813;
  ldv_56812: 
#line 1224 
  ;
  
#line 1224 
  channel = (unsigned char)0U;
  
#line 1224 
  goto ldv_56810;
  ldv_56809: 
#line 1225 
  ;
  
#line 1225 
  rate_section = (unsigned char)0U;
  
#line 1225 
  goto ldv_56807;
  ldv_56806: 
#line 1226 
  ;
  
#line 1229 
  if ((unsigned int)rate_section == 1U) 
#line 1230 
                                        base_index5G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_5G,(unsigned char)108);
  else 
    
#line 1233 
    if ((unsigned int)rate_section == 2U) 
#line 1234 
                                          base_index5G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_5G,(unsigned char)135);
    else 
      
#line 1237 
      if ((unsigned int)rate_section == 3U) 
#line 1238 
                                            base_index5G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_5G,(unsigned char)143);
      else 
        
#line 1241 
        if ((unsigned int)rate_section == 4U) 
#line 1242 
                                              base_index5G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_5G,(unsigned char)151);
        else 
          
#line 1245 
          if ((unsigned int)rate_section == 5U) 
#line 1246 
                                                base_index5G = _rtl8812ae_phy_get_txpower_by_rate_base_index(hw,(enum band_type)BAND_ON_5G,(unsigned char)161); else ;
  
#line 1251 
  temp_pwrlmt = rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][(int)rate_section][(int)channel][0];
  
#line 1255 
  rf_path = (unsigned char)0U;
  
#line 1255 
  goto ldv_56804;
  ldv_56803: 
#line 1256 
  ;
  
#line 1258 
  if ((unsigned int)rate_section == 3U || (unsigned int)rate_section == 5U) 
    
#line 1259 
    bw40_pwr_base_dbm5G = rtlphy->txpwr_by_rate_base_5g[(int)rf_path][1][(int)base_index5G]; else 
                                                                    
#line 1263 
                                                                    bw40_pwr_base_dbm5G = rtlphy->txpwr_by_rate_base_5g[(int)rf_path][0][(int)base_index5G];
  
#line 1267 
  if ((int)temp_pwrlmt != 63) {
    
#line 1268 
    temp_value = (char)((int)temp_pwrlmt - (int)bw40_pwr_base_dbm5G);
    
#line 1272 
    rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][(int)rate_section][(int)channel][(int)rf_path] = temp_value;
  }
  else ;
  
#line 1275 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_4;
    int tmp_5;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    ;
    
#line 1275 
    tmp_4 = preempt_count();
    
#line 1275 
    tmp_5 = preempt_count();
    
#line 1275 
    printk("\001","_rtl8812ae_phy_convert_txpower_limit_to_power_index",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,(int)regulation,(int)bw,(int)rate_section,(int)channel,(int)rtlphy->txpwr_limit_5g[(int)regulation][(int)bw][(int)rate_section][(int)channel][(int)rf_path],(int)temp_pwrlmt,(int)channel,(int)rf_path,(int)bw40_pwr_base_dbm5G);
  }
  else ;
  
#line 1257 
  rf_path = (u8)((int)rf_path + 1);
  ldv_56804: 
#line 1258 
  ;
  
#line 1255 
  if ((unsigned int)rf_path <= 3U) 
#line 1258 
                                   goto ldv_56803; else 
#line 1261 
                                                        goto ldv_56805;
  ldv_56805: 
#line 1262 
  ;
  
#line 1225 
  rate_section = (u8)((int)rate_section + 1);
  ldv_56807: 
#line 1226 
  ;
  
#line 1225 
  if ((unsigned int)rate_section <= 5U) 
#line 1227 
                                        goto ldv_56806; else 
#line 1230 
                                                             goto ldv_56808;
  ldv_56808: 
#line 1231 
  ;
  
#line 1224 
  channel = (u8)((int)channel + 1);
  ldv_56810: 
#line 1225 
  ;
  
#line 1224 
  if ((unsigned int)channel <= 53U) 
#line 1226 
                                    goto ldv_56809; else 
#line 1229 
                                                         goto ldv_56811;
  ldv_56811: 
#line 1230 
  ;
  
#line 1223 
  bw = (u8)((int)bw + 1);
  ldv_56813: 
#line 1224 
  ;
  
#line 1223 
  if ((unsigned int)bw <= 3U) 
#line 1225 
                              goto ldv_56812; else 
#line 1228 
                                                   goto ldv_56814;
  ldv_56814: 
#line 1229 
  ;
  
#line 1222 
  regulation = (u8)((int)regulation + 1);
  ldv_56816: 
#line 1223 
  ;
  
#line 1222 
  if ((unsigned int)regulation <= 3U) 
#line 1224 
                                      goto ldv_56815; else 
#line 1227 
                                                           goto ldv_56817;
  ldv_56817: 
#line 1228 
  ;
  
#line 1286 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_6;
    int tmp_7;
    
#line 1286 
    tmp_6 = preempt_count();
    
#line 1286 
    tmp_7 = preempt_count();
    
#line 1286 
    printk("\001","_rtl8812ae_phy_convert_txpower_limit_to_power_index",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0);
  }
  else ;
  
#line 1287 
  return;
}


#line 1290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_init_txpower_limit(struct ieee80211_hw *hw)
{
  u8 i;
  u8 j;
  u8 k;
  u8 l;
  u8 m;
  
#line 1292 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1293 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1296 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1296 
    tmp = preempt_count();
    
#line 1296 
    tmp_0 = preempt_count();
    
#line 1296 
    printk("\001","_rtl8821ae_phy_init_txpower_limit",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1299 
  i = (unsigned char)0U;
  
#line 1299 
  goto ldv_56842;
  ldv_56841: 
#line 1300 
  ;
  
#line 1300 
  j = (unsigned char)0U;
  
#line 1300 
  goto ldv_56839;
  ldv_56838: 
#line 1301 
  ;
  
#line 1301 
  k = (unsigned char)0U;
  
#line 1301 
  goto ldv_56836;
  ldv_56835: 
#line 1302 
  ;
  
#line 1302 
  m = (unsigned char)0U;
  
#line 1302 
  goto ldv_56833;
  ldv_56832: 
#line 1303 
  ;
  
#line 1303 
  l = (unsigned char)0U;
  
#line 1303 
  goto ldv_56830;
  ldv_56829: 
#line 1304 
  ;
  
#line 1306 
  rtlphy->txpwr_limit_2_4g[(int)i][(int)j][(int)k][(int)m][(int)l] = (char)63;
  
#line 1303 
  l = (u8)((int)l + 1);
  ldv_56830: 
#line 1304 
  ;
  
#line 1303 
  if ((unsigned int)l <= 3U) 
#line 1305 
                             goto ldv_56829; else 
#line 1308 
                                                  goto ldv_56831;
  ldv_56831: 
#line 1309 
  ;
  
#line 1302 
  m = (u8)((int)m + 1);
  ldv_56833: 
#line 1303 
  ;
  
#line 1302 
  if ((unsigned int)m <= 13U) 
#line 1304 
                              goto ldv_56832; else 
#line 1307 
                                                   goto ldv_56834;
  ldv_56834: 
#line 1308 
  ;
  
#line 1301 
  k = (u8)((int)k + 1);
  ldv_56836: 
#line 1302 
  ;
  
#line 1301 
  if ((unsigned int)k <= 5U) 
#line 1303 
                             goto ldv_56835; else 
#line 1306 
                                                  goto ldv_56837;
  ldv_56837: 
#line 1307 
  ;
  
#line 1300 
  j = (u8)((int)j + 1);
  ldv_56839: 
#line 1301 
  ;
  
#line 1300 
  if ((unsigned int)j <= 3U) 
#line 1302 
                             goto ldv_56838; else 
#line 1305 
                                                  goto ldv_56840;
  ldv_56840: 
#line 1306 
  ;
  
#line 1299 
  i = (u8)((int)i + 1);
  ldv_56842: 
#line 1300 
  ;
  
#line 1299 
  if ((unsigned int)i <= 3U) 
#line 1301 
                             goto ldv_56841; else 
#line 1304 
                                                  goto ldv_56843;
  ldv_56843: 
#line 1305 
  ;
  
#line 1308 
  i = (unsigned char)0U;
  
#line 1308 
  goto ldv_56857;
  ldv_56856: 
#line 1309 
  ;
  
#line 1309 
  j = (unsigned char)0U;
  
#line 1309 
  goto ldv_56854;
  ldv_56853: 
#line 1310 
  ;
  
#line 1310 
  k = (unsigned char)0U;
  
#line 1310 
  goto ldv_56851;
  ldv_56850: 
#line 1311 
  ;
  
#line 1311 
  m = (unsigned char)0U;
  
#line 1311 
  goto ldv_56848;
  ldv_56847: 
#line 1312 
  ;
  
#line 1312 
  l = (unsigned char)0U;
  
#line 1312 
  goto ldv_56845;
  ldv_56844: 
#line 1313 
  ;
  
#line 1315 
  rtlphy->txpwr_limit_5g[(int)i][(int)j][(int)k][(int)m][(int)l] = (char)63;
  
#line 1312 
  l = (u8)((int)l + 1);
  ldv_56845: 
#line 1313 
  ;
  
#line 1312 
  if ((unsigned int)l <= 3U) 
#line 1314 
                             goto ldv_56844; else 
#line 1317 
                                                  goto ldv_56846;
  ldv_56846: 
#line 1318 
  ;
  
#line 1311 
  m = (u8)((int)m + 1);
  ldv_56848: 
#line 1312 
  ;
  
#line 1311 
  if ((unsigned int)m <= 53U) 
#line 1313 
                              goto ldv_56847; else 
#line 1316 
                                                   goto ldv_56849;
  ldv_56849: 
#line 1317 
  ;
  
#line 1310 
  k = (u8)((int)k + 1);
  ldv_56851: 
#line 1311 
  ;
  
#line 1310 
  if ((unsigned int)k <= 5U) 
#line 1312 
                             goto ldv_56850; else 
#line 1315 
                                                  goto ldv_56852;
  ldv_56852: 
#line 1316 
  ;
  
#line 1309 
  j = (u8)((int)j + 1);
  ldv_56854: 
#line 1310 
  ;
  
#line 1309 
  if ((unsigned int)j <= 3U) 
#line 1311 
                             goto ldv_56853; else 
#line 1314 
                                                  goto ldv_56855;
  ldv_56855: 
#line 1315 
  ;
  
#line 1308 
  i = (u8)((int)i + 1);
  ldv_56857: 
#line 1309 
  ;
  
#line 1308 
  if ((unsigned int)i <= 3U) 
#line 1310 
                             goto ldv_56856; else 
#line 1313 
                                                  goto ldv_56858;
  ldv_56858: 
#line 1314 
  ;
  
#line 1318 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1318 
    tmp_1 = preempt_count();
    
#line 1318 
    tmp_2 = preempt_count();
    
#line 1318 
    printk("\001","_rtl8821ae_phy_init_txpower_limit",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
  }
  else ;
  
#line 1319 
  return;
}


#line 1322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_convert_txpower_dbm_to_relative_value(struct ieee80211_hw *hw)
{
  
#line 1324 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1325 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1326 
  u8 base = (unsigned char)0U;
  
#line 1326 
  u8 rfPath = (unsigned char)0U;
  
#line 1328 
  rfPath = (unsigned char)0U;
  
#line 1328 
  goto ldv_56867;
  ldv_56866: 
#line 1329 
  ;
  
#line 1329 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)0);
  
#line 1330 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][0],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1334 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)1);
  
#line 1335 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][1],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1338 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][2],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1342 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)2);
  
#line 1343 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][3],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1346 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][4],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1350 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)1,(unsigned char)3);
  
#line 1352 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][1][5],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1356 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][1][6],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1360 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)4);
  
#line 1361 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][7],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1364 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][8],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1367 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][9],(unsigned char)0,(unsigned char)1,(unsigned char)((int)base));
  
#line 1371 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)0,(unsigned char)((int)rfPath),(unsigned char)1,(unsigned char)5);
  
#line 1372 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][0][9],(unsigned char)2,(unsigned char)3,(unsigned char)((int)base));
  
#line 1375 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][1][10],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1378 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[0][(int)rfPath][1][11],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1382 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)1);
  
#line 1383 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][1],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1386 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][2],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1390 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)2);
  
#line 1391 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][3],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1394 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][4],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1398 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)rfPath),(unsigned char)1,(unsigned char)3);
  
#line 1399 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][1][5],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1402 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][1][6],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1406 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)rfPath),(unsigned char)0,(unsigned char)4);
  
#line 1407 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][7],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1410 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][8],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1413 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][9],(unsigned char)0,(unsigned char)1,(unsigned char)((int)base));
  
#line 1417 
  base = _rtl8821ae_phy_get_txpower_by_rate_base(hw,(unsigned char)1,(unsigned char)((int)rfPath),(unsigned char)1,(unsigned char)5);
  
#line 1418 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][0][9],(unsigned char)2,(unsigned char)3,(unsigned char)((int)base));
  
#line 1421 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][1][10],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1424 
  _phy_convert_txpower_dbm_to_relative_value(& rtlphy->tx_power_by_rate_offset[1][(int)rfPath][1][11],(unsigned char)0,(unsigned char)3,(unsigned char)((int)base));
  
#line 1328 
  rfPath = (u8)((int)rfPath + 1);
  ldv_56867: 
#line 1329 
  ;
  
#line 1328 
  if ((unsigned int)rfPath <= 1U) 
#line 1330 
                                  goto ldv_56866; else 
#line 1333 
                                                       goto ldv_56868;
  ldv_56868: 
#line 1334 
  ;
  
#line 1429 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1429 
    tmp = preempt_count();
    
#line 1429 
    tmp_0 = preempt_count();
    
#line 1429 
    printk("\001","_rtl8821ae_phy_convert_txpower_dbm_to_relative_value",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1430 
  return;
}


#line 1433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_txpower_by_rate_configuration(struct ieee80211_hw *hw)
{
  
#line 1435 
  _rtl8821ae_phy_store_txpower_by_rate_base(hw);
  
#line 1436 
  _rtl8821ae_phy_convert_txpower_dbm_to_relative_value(hw);
  
#line 1437 
  return;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8812ae_get_integer_from_string(char *str, u8 *pint)
{
  bool __retres;
  
#line 1442 
  u16 i = (unsigned short)0U;
  
#line 1443 
  *pint = (unsigned char)0U;
  
#line 1445 
  goto ldv_56879;
  ldv_56878: 
#line 1446 
  ;
  
#line 1446 
  if ((unsigned int)*(str + (int)i) + 208U <= 9U) {
    
#line 1447 
    *pint = (unsigned char)((unsigned int)*pint * 10U);
    
#line 1448 
    *pint = (unsigned char)((unsigned int)((int)*pint + (int)((unsigned char)*(str + (int)i))) + 208U);
  }
  else {
    
#line 1450 
    __retres = (_Bool)0;
    
#line 1450 
    goto return_label;
  }
  
#line 1452 
  i = (u16)((int)i + 1);
  ldv_56879: 
#line 1453 
  ;
  
#line 1445 
  if ((int)*(str + (int)i) != 0) 
#line 1447 
                                 goto ldv_56878; else 
#line 1450 
                                                      goto ldv_56880;
  ldv_56880: 
#line 1451 
  ;
  
#line 1455 
  __retres = (_Bool)1;
  return_label: 
#line 1455 
                return __retres;
}


#line 1458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8812ae_eq_n_byte(u8 *str1, u8 *str2, u32 num)
{
  bool __retres;
  
#line 1460 
  if (num == 0U) {
    
#line 1461 
    __retres = (_Bool)0;
    
#line 1461 
    goto return_label;
  }
  else ;
  
#line 1462 
  goto ldv_56887;
  ldv_56886: 
#line 1463 
  ;
  
#line 1463 
  num -= 1U;
  
#line 1464 
  if ((int)*(str1 + num) != (int)*(str2 + num)) {
    
#line 1465 
    __retres = (_Bool)0;
    
#line 1465 
    goto return_label;
  }
  else ;
  ldv_56887: 
#line 1466 
  ;
  
#line 1462 
  if (num != 0U) 
#line 1464 
                 goto ldv_56886; else 
#line 1467 
                                      goto ldv_56888;
  ldv_56888: 
#line 1468 
  ;
  
#line 1467 
  __retres = (_Bool)1;
  return_label: 
#line 1467 
                return __retres;
}


#line 1470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static char _rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt(struct ieee80211_hw *hw, u8 band, u8 channel)
{
  
#line 1473 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1474 
  char channel_index = (char)(-1);
  
#line 1475 
  u8 channel_5g[54U] = {(unsigned char)36U, (unsigned char)38U, (unsigned char)40U, (unsigned char)42U, (unsigned char)44U, (unsigned char)46U, (unsigned char)48U, (unsigned char)50U, (unsigned char)52U, (unsigned char)54U, (unsigned char)56U, (unsigned char)58U, (unsigned char)60U, (unsigned char)62U, (unsigned char)64U, (unsigned char)100U, (unsigned char)102U, (unsigned char)104U, (unsigned char)106U, (unsigned char)108U, (unsigned char)110U, (unsigned char)112U, (unsigned char)114U, (unsigned char)116U, (unsigned char)118U, (unsigned char)120U, (unsigned char)122U, (unsigned char)124U, (unsigned char)126U, (unsigned char)128U, (unsigned char)130U, (unsigned char)132U, (unsigned char)134U, (unsigned char)136U, (unsigned char)138U, (unsigned char)140U, (unsigned char)142U, (unsigned char)144U, (unsigned char)149U, (unsigned char)151U, (unsigned char)153U, (unsigned char)155U, (unsigned char)157U, (unsigned char)159U, (unsigned char)161U, (unsigned char)163U, (unsigned char)165U, (unsigned char)167U, (unsigned char)168U, (unsigned char)169U, (unsigned char)171U, (unsigned char)173U, (unsigned char)175U, (unsigned char)177U};
  
#line 1481 
  u8 i = (unsigned char)0U;
  
#line 1482 
  if ((unsigned int)band == 0U) 
#line 1483 
                                channel_index = (char)((unsigned int)channel + 255U);
  else 
    
#line 1484 
    if ((unsigned int)band == 1U) {
      
#line 1485 
      i = (unsigned char)0U;
      
#line 1485 
      goto ldv_56899;
      ldv_56898: 
#line 1486 
      ;
      
#line 1486 
      if ((int)channel_5g[(int)i] == (int)channel) 
#line 1487 
                                                   channel_index = (char)i; else ;
      
#line 1485 
      i = (u8)((int)i + 1);
      ldv_56899: 
#line 1486 
      ;
      
#line 1485 
      if ((unsigned int)i <= 53U) 
#line 1487 
                                  goto ldv_56898; else 
#line 1490 
                                                       goto ldv_56900;
      ldv_56900: 
#line 1491 
      ;
    }
    else 
      
#line 1490 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp;
        int tmp_0;
        
#line 1490 
        ;
        
#line 1490 
        tmp = preempt_count();
        
#line 1490 
        tmp_0 = preempt_count();
        
#line 1490 
        printk("\001","_rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)band,"_rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt");
      }
      else ;
  
#line 1493 
  if ((int)channel_index == -1) {
    
#line 1494 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1494 
      ;
      
#line 1494 
      ;
      
#line 1494 
      tmp_1 = preempt_count();
      
#line 1494 
      tmp_2 = preempt_count();
      
#line 1494 
      printk("\001","_rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)channel,(int)band,"_rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt");
    }
    else ;
  }
  else ;
  
#line 1498 
  return channel_index;
}


#line 1501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8812ae_phy_set_txpower_limit(struct ieee80211_hw *hw, u8 *pregulation, u8 *pband, u8 *pbandwidth, u8 *prate_section, u8 *prf_path, u8 *pchannel, u8 *ppower_limit)
{
  u8 channel;
  u8 channel_index;
  char prev_power_limit;
  char ret;
  int tmp_2;
  bool tmp_1;
  bool tmp_8;
  bool tmp_18;
  bool tmp_22;
  bool tmp_30;
  
#line 1506 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1507 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1508 
  u8 regulation = (unsigned char)0U;
  
#line 1508 
  u8 bandwidth = (unsigned char)0U;
  
#line 1508 
  u8 rate_section = (unsigned char)0U;
  
#line 1510 
  char power_limit = (char)0;
  
#line 1512 
  tmp_1 = _rtl8812ae_get_integer_from_string((char *)pchannel,& channel);
  
#line 1512 
  if (tmp_1) 
#line 1512 
             tmp_2 = 0; else 
#line 1512 
                             tmp_2 = 1;
  
#line 1512 
  if (tmp_2) 
#line 1512 
             goto _LOR;
  else {
    int tmp_4;
    bool tmp_3;
    
#line 1513 
    tmp_3 = _rtl8812ae_get_integer_from_string((char *)ppower_limit,(u8 *)(& power_limit));
    
#line 1513 
    if (tmp_3) 
#line 1513 
               tmp_4 = 0; else 
#line 1513 
                               tmp_4 = 1;
    
#line 1513 
    if (tmp_4) {
      _LOR: 
#line 1515 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
              int tmp;
              int tmp_0;
              
#line 1515 
              ;
              
#line 1515 
              ;
              
#line 1515 
              tmp = preempt_count();
              
#line 1515 
              tmp_0 = preempt_count();
              
#line 1515 
              printk("\001","_rtl8812ae_phy_set_txpower_limit",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)channel,(int)power_limit);
            }
            else ;
    }
    else ;
  }
  
#line 1520 
  if (63 < (int)power_limit) 
#line 1520 
                             power_limit = (char)63; else 
#line 1520 
                                                          power_limit = power_limit;
  
#line 1523 
  tmp_8 = _rtl8812ae_eq_n_byte(pregulation,(u8 *)"FCC",3U);
  
#line 1523 
  if ((int)tmp_8 != 0) 
#line 1524 
                       regulation = (unsigned char)0U;
  else {
    bool tmp_7;
    
#line 1525 
    tmp_7 = _rtl8812ae_eq_n_byte(pregulation,(u8 *)"MKK",3U);
    
#line 1525 
    if ((int)tmp_7 != 0) 
#line 1526 
                         regulation = (unsigned char)1U;
    else {
      bool tmp_6;
      
#line 1527 
      tmp_6 = _rtl8812ae_eq_n_byte(pregulation,(u8 *)"ETSI",4U);
      
#line 1527 
      if ((int)tmp_6 != 0) 
#line 1528 
                           regulation = (unsigned char)2U;
      else {
        bool tmp_5;
        
#line 1529 
        tmp_5 = _rtl8812ae_eq_n_byte(pregulation,(u8 *)"WW13",4U);
        
#line 1529 
        if ((int)tmp_5 != 0) 
#line 1530 
                             regulation = (unsigned char)3U; else ;
      }
    }
  }
  
#line 1532 
  tmp_18 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"CCK",3U);
  
#line 1532 
  if ((int)tmp_18 != 0) 
#line 1533 
                        rate_section = (unsigned char)0U;
  else {
    bool tmp_17;
    
#line 1534 
    tmp_17 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"OFDM",4U);
    
#line 1534 
    if ((int)tmp_17 != 0) 
#line 1535 
                          rate_section = (unsigned char)1U;
    else {
      bool tmp_15;
      
#line 1536 
      tmp_15 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"HT",2U);
      
#line 1536 
      if ((int)tmp_15 != 0) {
        bool tmp_16;
        
#line 1536 
        tmp_16 = _rtl8812ae_eq_n_byte(prf_path,(u8 *)"1T",2U);
        
#line 1536 
        if ((int)tmp_16 != 0) 
#line 1538 
                              rate_section = (unsigned char)2U; else 
                                                                  
#line 1536 
                                                                  goto _LAND_1;
      }
      else {
        bool tmp_13;
        _LAND_1: 
#line 1539 
        tmp_13 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"HT",2U);
        
#line 1539 
        if ((int)tmp_13 != 0) {
          bool tmp_14;
          
#line 1539 
          tmp_14 = _rtl8812ae_eq_n_byte(prf_path,(u8 *)"2T",2U);
          
#line 1539 
          if ((int)tmp_14 != 0) 
#line 1541 
                                rate_section = (unsigned char)3U; else 
                                                                    
#line 1539 
                                                                    goto _LAND_0;
        }
        else {
          bool tmp_11;
          _LAND_0: 
#line 1542 
          tmp_11 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"VHT",3U);
          
#line 1542 
          if ((int)tmp_11 != 0) {
            bool tmp_12;
            
#line 1542 
            tmp_12 = _rtl8812ae_eq_n_byte(prf_path,(u8 *)"1T",2U);
            
#line 1542 
            if ((int)tmp_12 != 0) 
#line 1544 
                                  rate_section = (unsigned char)4U; else 
                                                                    
#line 1542 
                                                                    goto _LAND;
          }
          else {
            bool tmp_9;
            _LAND: 
#line 1545 
            tmp_9 = _rtl8812ae_eq_n_byte(prate_section,(u8 *)"VHT",3U);
            
#line 1545 
            if ((int)tmp_9 != 0) {
              bool tmp_10;
              
#line 1545 
              tmp_10 = _rtl8812ae_eq_n_byte(prf_path,(u8 *)"2T",2U);
              
#line 1545 
              if ((int)tmp_10 != 0) 
#line 1547 
                                    rate_section = (unsigned char)5U; else ;
            }
            else ;
          }
        }
      }
    }
  }
  
#line 1549 
  tmp_22 = _rtl8812ae_eq_n_byte(pbandwidth,(u8 *)"20M",3U);
  
#line 1549 
  if ((int)tmp_22 != 0) 
#line 1550 
                        bandwidth = (unsigned char)0U;
  else {
    bool tmp_21;
    
#line 1551 
    tmp_21 = _rtl8812ae_eq_n_byte(pbandwidth,(u8 *)"40M",3U);
    
#line 1551 
    if ((int)tmp_21 != 0) 
#line 1552 
                          bandwidth = (unsigned char)1U;
    else {
      bool tmp_20;
      
#line 1553 
      tmp_20 = _rtl8812ae_eq_n_byte(pbandwidth,(u8 *)"80M",3U);
      
#line 1553 
      if ((int)tmp_20 != 0) 
#line 1554 
                            bandwidth = (unsigned char)2U;
      else {
        bool tmp_19;
        
#line 1555 
        tmp_19 = _rtl8812ae_eq_n_byte(pbandwidth,(u8 *)"160M",4U);
        
#line 1555 
        if ((int)tmp_19 != 0) 
#line 1556 
                              bandwidth = (unsigned char)3U; else ;
      }
    }
  }
  
#line 1558 
  tmp_30 = _rtl8812ae_eq_n_byte(pband,(u8 *)"2.4G",4U);
  
#line 1558 
  if ((int)tmp_30 != 0) {
    
#line 1559 
    ret = _rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt(hw,(unsigned char)0,(unsigned char)((int)channel));
    
#line 1563 
    if ((int)ret == -1) 
#line 1564 
                        goto return_label; else ;
    
#line 1566 
    channel_index = (unsigned char)ret;
    
#line 1568 
    prev_power_limit = rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0];
    
#line 1572 
    if ((int)power_limit < (int)prev_power_limit) 
#line 1574 
                                                  rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0] = power_limit; else ;
    
#line 1577 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_23;
      int tmp_24;
      
#line 1577 
      ;
      
#line 1577 
      ;
      
#line 1577 
      ;
      
#line 1577 
      ;
      
#line 1577 
      ;
      
#line 1577 
      tmp_23 = preempt_count();
      
#line 1577 
      tmp_24 = preempt_count();
      
#line 1577 
      printk("\001","_rtl8812ae_phy_set_txpower_limit",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0,(int)regulation,(int)bandwidth,(int)rate_section,(int)channel_index,(int)rtlphy->txpwr_limit_2_4g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0]);
    }
    else ;
  }
  else {
    bool tmp_29;
    
#line 1582 
    tmp_29 = _rtl8812ae_eq_n_byte(pband,(u8 *)"5G",2U);
    
#line 1582 
    if ((int)tmp_29 != 0) {
      
#line 1583 
      ret = _rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt(hw,(unsigned char)1,(unsigned char)((int)channel));
      
#line 1587 
      if ((int)ret == -1) 
#line 1588 
                          goto return_label; else ;
      
#line 1590 
      channel_index = (unsigned char)ret;
      
#line 1592 
      prev_power_limit = rtlphy->txpwr_limit_5g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0];
      
#line 1596 
      if ((int)power_limit < (int)prev_power_limit) 
#line 1598 
                                                    rtlphy->txpwr_limit_5g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0] = power_limit; else ;
      
#line 1600 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp_25;
        int tmp_26;
        
#line 1600 
        ;
        
#line 1600 
        ;
        
#line 1600 
        ;
        
#line 1600 
        ;
        
#line 1600 
        ;
        
#line 1600 
        tmp_25 = preempt_count();
        
#line 1600 
        tmp_26 = preempt_count();
        
#line 1600 
        printk("\001","_rtl8812ae_phy_set_txpower_limit",(unsigned long)tmp_26 & 2096896UL,tmp_25 != 0,(int)regulation,(int)bandwidth,(int)rate_section,(int)channel,(int)rtlphy->txpwr_limit_5g[(int)regulation][(int)bandwidth][(int)rate_section][(int)channel_index][0]);
      }
      else ;
    }
    else {
      
#line 1606 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
        int tmp_27;
        int tmp_28;
        
#line 1606 
        ;
        
#line 1606 
        tmp_27 = preempt_count();
        
#line 1606 
        tmp_28 = preempt_count();
        
#line 1606 
        printk("\001","_rtl8812ae_phy_set_txpower_limit",(unsigned long)tmp_28 & 2096896UL,tmp_27 != 0,pband);
      }
      else ;
      
#line 1608 
      goto return_label;
    }
  }
  return_label: 
#line 1610 
                return;
}


#line 1612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8812ae_phy_config_bb_txpwr_lmt(struct ieee80211_hw *hw, u8 *regulation, u8 *band, u8 *bandwidth, u8 *rate_section, u8 *rf_path, u8 *channel, u8 *power_limit)
{
  
#line 1618 
  _rtl8812ae_phy_set_txpower_limit(hw,regulation,band,bandwidth,rate_section,rf_path,channel,power_limit);
  
#line 1619 
  return;
}


#line 1623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_read_and_config_txpwr_lmt(struct ieee80211_hw *hw)
{
  u32 array_len;
  u8 **array;
  
#line 1625 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1626 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1627 
  u32 i = 0U;
  
#line 1631 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 1632 
    array_len = 3948U;
    
#line 1633 
    array = (u8 **)(& RTL8812AE_TXPWR_LMT);
  }
  else {
    
#line 1635 
    array_len = 3948U;
    
#line 1636 
    array = (u8 **)(& RTL8821AE_TXPWR_LMT);
  }
  
#line 1639 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1639 
    tmp = preempt_count();
    
#line 1639 
    tmp_0 = preempt_count();
    
#line 1639 
    printk("\001","_rtl8821ae_phy_read_and_config_txpwr_lmt",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1642 
  i = 0U;
  
#line 1642 
  goto ldv_56950;
  ldv_56949: 
#line 1643 
  ;
  {
    
#line 1643 
    u8 *regulation = *(array + i);
    
#line 1644 
    u8 *band = *(array + (i + 1U));
    
#line 1645 
    u8 *bandwidth = *(array + (i + 2U));
    
#line 1646 
    u8 *rate = *(array + (i + 3U));
    
#line 1647 
    u8 *rf_path = *(array + (i + 4U));
    
#line 1648 
    u8 *chnl = *(array + (i + 5U));
    
#line 1649 
    u8 *val = *(array + (i + 6U));
    
#line 1651 
    _rtl8812ae_phy_config_bb_txpwr_lmt(hw,regulation,band,bandwidth,rate,rf_path,chnl,val);
  }
  
#line 1642 
  i += 7U;
  ldv_56950: 
#line 1643 
  ;
  
#line 1642 
  if (i < array_len) 
#line 1644 
                     goto ldv_56949; else 
#line 1647 
                                          goto ldv_56951;
  ldv_56951: 
#line 1648 
  ;
  
#line 1649 
  return;
}


#line 1657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_bb8821a_config_parafile(struct ieee80211_hw *hw)
{
  bool __retres;
  bool rtstatus;
  u32 tmp_5;
  
#line 1659 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1660 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1661 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 1664 
  _rtl8821ae_phy_init_txpower_limit(hw);
  
#line 1667 
  if ((unsigned int)rtlefuse->eeprom_regulatory != 2U) 
#line 1668 
                                                       _rtl8821ae_phy_read_and_config_txpwr_lmt(hw); else ;
  
#line 1670 
  rtstatus = _rtl8821ae_phy_config_bb_with_headerfile(hw,(unsigned char)0);
  
#line 1672 
  if (! rtstatus) {
    
#line 1673 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1673 
      tmp = preempt_count();
      
#line 1673 
      tmp_0 = preempt_count();
      
#line 1673 
      printk("\001","_rtl8821ae_phy_bb8821a_config_parafile",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 1674 
    __retres = (_Bool)0;
    
#line 1674 
    goto return_label;
  }
  else ;
  
#line 1676 
  _rtl8821ae_phy_init_tx_power_by_rate(hw);
  
#line 1677 
  if ((unsigned int)rtlefuse->autoload_failflag == 0U) 
#line 1678 
                                                       rtstatus = _rtl8821ae_phy_config_bb_with_pgheaderfile(hw,(unsigned char)0); else ;
  
#line 1681 
  if (! rtstatus) {
    
#line 1682 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 1682 
      tmp_1 = preempt_count();
      
#line 1682 
      tmp_2 = preempt_count();
      
#line 1682 
      printk("\001","_rtl8821ae_phy_bb8821a_config_parafile",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 1683 
    __retres = (_Bool)0;
    
#line 1683 
    goto return_label;
  }
  else ;
  
#line 1686 
  _rtl8821ae_phy_txpower_by_rate_configuration(hw);
  
#line 1689 
  if ((unsigned int)rtlefuse->eeprom_regulatory != 2U) 
#line 1690 
                                                       _rtl8812ae_phy_convert_txpower_limit_to_power_index(hw); else ;
  
#line 1692 
  rtstatus = _rtl8821ae_phy_config_bb_with_headerfile(hw,(unsigned char)1);
  
#line 1695 
  if (! rtstatus) {
    
#line 1696 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 1696 
      tmp_3 = preempt_count();
      
#line 1696 
      tmp_4 = preempt_count();
      
#line 1696 
      printk("\001","_rtl8821ae_phy_bb8821a_config_parafile",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 1697 
    __retres = (_Bool)0;
    
#line 1697 
    goto return_label;
  }
  else ;
  
#line 1699 
  tmp_5 = rtl_get_bbreg(hw,2084U,512U);
  
#line 1699 
  rtlphy->cck_high_power = (unsigned char)(tmp_5 != 0U);
  
#line 1701 
  __retres = (_Bool)1;
  return_label: 
#line 1701 
                return __retres;
}


#line 1704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_config_mac_with_headerfile(struct ieee80211_hw *hw)
{
  bool __retres;
  u32 i;
  u32 v1;
  u32 v2;
  u32 arraylength;
  u32 *ptrarray;
  
#line 1706 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1707 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1712 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 1712 
    tmp = preempt_count();
    
#line 1712 
    tmp_0 = preempt_count();
    
#line 1712 
    printk("\001","_rtl8821ae_phy_config_mac_with_headerfile",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 1713 
  if ((unsigned int)rtlhal->hw_type == 13U) {
    
#line 1714 
    arraylength = 194U;
    
#line 1715 
    ptrarray = (u32 *)(& RTL8821AE_MAC_REG_ARRAY);
  }
  else {
    
#line 1717 
    arraylength = 214U;
    
#line 1718 
    ptrarray = (u32 *)(& RTL8812AE_MAC_REG_ARRAY);
  }
  
#line 1720 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 1720 
    ;
    
#line 1720 
    tmp_1 = preempt_count();
    
#line 1720 
    tmp_2 = preempt_count();
    
#line 1720 
    printk("\001","_rtl8821ae_phy_config_mac_with_headerfile",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,arraylength);
  }
  else ;
  
#line 1722 
  i = 0U;
  
#line 1722 
  goto ldv_56982;
  ldv_56981: 
#line 1723 
  ;
  
#line 1723 
  v1 = *(ptrarray + i);
  
#line 1724 
  v2 = (unsigned int)((unsigned char)*(ptrarray + (i + 1U)));
  
#line 1725 
  if (v1 <= 3452816844U) {
    
#line 1726 
    rtl_write_byte(rtlpriv,v1,(unsigned char)((int)((unsigned char)v2)));
    
#line 1727 
    goto ldv_56971;
  }
  else {
    int tmp_4;
    bool tmp_3;
    
#line 1729 
    tmp_3 = _rtl8821ae_check_condition(hw,v1);
    
#line 1729 
    if (tmp_3) 
#line 1729 
               tmp_4 = 0; else 
#line 1729 
                               tmp_4 = 1;
    
#line 1729 
    if (tmp_4) {
      
#line 1731 
      i += 2U;
      
#line 1731 
      v1 = *(ptrarray + i);
      
#line 1731 
      v2 = *(ptrarray + (i + 1U));
      
#line 1732 
      goto ldv_56973;
      ldv_56972: 
#line 1733 
      ;
      
#line 1735 
      i += 2U;
      
#line 1735 
      v1 = *(ptrarray + i);
      
#line 1735 
      v2 = *(ptrarray + (i + 1U));
      ldv_56973: 
#line 1736 
      ;
      
#line 1732 
      if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && arraylength + 4294967294U > i) 
        
#line 1736 
        goto ldv_56972; else 
#line 1739 
                             goto ldv_56974;
      ldv_56974: 
#line 1740 
      ;
      
#line 1737 
      i += 4294967294U;
    }
    else {
      
#line 1739 
      i += 2U;
      
#line 1739 
      v1 = *(ptrarray + i);
      
#line 1739 
      v2 = *(ptrarray + (i + 1U));
      
#line 1740 
      goto ldv_56976;
      ldv_56975: 
#line 1741 
      ;
      
#line 1743 
      rtl_write_byte(rtlpriv,v1,(unsigned char)((int)((unsigned char)v2)));
      
#line 1744 
      i += 2U;
      
#line 1744 
      v1 = *(ptrarray + i);
      
#line 1744 
      v2 = *(ptrarray + (i + 1U));
      ldv_56976: 
#line 1745 
      ;
      
#line 1740 
      if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && arraylength + 4294967294U > i) 
        
#line 1744 
        goto ldv_56975; else 
#line 1747 
                             goto ldv_56977;
      ldv_56977: 
#line 1748 
      ;
      
#line 1747 
      goto ldv_56979;
      ldv_56978: 
#line 1748 
      ;
      
#line 1748 
      i += 2U;
      
#line 1748 
      v1 = *(ptrarray + i);
      
#line 1748 
      v2 = *(ptrarray + (i + 1U));
      ldv_56979: 
#line 1749 
      ;
      
#line 1747 
      if (v2 != 57005U && arraylength + 4294967294U > i) 
#line 1749 
                                                         goto ldv_56978; else 
                                                                    
#line 1752 
                                                                    goto ldv_56980;
      ldv_56980: 
#line 1753 
      ;
    }
  }
  ldv_56971: 
#line 1755 
  ;
  
#line 1722 
  i += 2U;
  ldv_56982: 
#line 1723 
  ;
  
#line 1722 
  if (i < arraylength) 
#line 1724 
                       goto ldv_56981; else 
#line 1727 
                                            goto ldv_56983;
  ldv_56983: 
#line 1728 
  ;
  
#line 1752 
  __retres = (_Bool)1;
  
#line 1752 
  return __retres;
}


#line 1755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_config_bb_with_headerfile(struct ieee80211_hw *hw, u8 configtype)
{
  bool __retres;
  int i;
  u32 *array_table;
  u16 arraylen;
  
#line 1758 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1759 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1763 
  u32 v1 = 0U;
  
#line 1763 
  u32 v2 = 0U;
  
#line 1765 
  if ((unsigned int)configtype == 0U) {
    
#line 1766 
    if ((unsigned int)rtlhal->hw_type == 14U) {
      
#line 1767 
      arraylen = (unsigned short)490U;
      
#line 1768 
      array_table = (u32 *)(& RTL8812AE_PHY_REG_ARRAY);
    }
    else {
      
#line 1770 
      arraylen = (unsigned short)344U;
      
#line 1771 
      array_table = (u32 *)(& RTL8821AE_PHY_REG_ARRAY);
    }
    
#line 1774 
    i = 0;
    
#line 1774 
    goto ldv_57006;
    ldv_57005: 
#line 1775 
    ;
    
#line 1775 
    v1 = *(array_table + i);
    
#line 1776 
    v2 = *(array_table + ((unsigned int)i + 1U));
    
#line 1777 
    if (v1 <= 3452816844U) {
      
#line 1778 
      _rtl8821ae_config_bb_reg(hw,v1,v2);
      
#line 1779 
      goto ldv_56995;
    }
    else {
      int tmp_0;
      bool tmp;
      
#line 1781 
      tmp = _rtl8821ae_check_condition(hw,v1);
      
#line 1781 
      if (tmp) 
#line 1781 
               tmp_0 = 0; else 
#line 1781 
                               tmp_0 = 1;
      
#line 1781 
      if (tmp_0) {
        
#line 1783 
        i += 2;
        
#line 1783 
        v1 = *(array_table + i);
        
#line 1783 
        v2 = *(array_table + ((unsigned int)i + 1U));
        
#line 1784 
        goto ldv_56997;
        ldv_56996: 
#line 1785 
        ;
        
#line 1788 
        i += 2;
        
#line 1788 
        v1 = *(array_table + i);
        
#line 1788 
        v2 = *(array_table + ((unsigned int)i + 1U));
        ldv_56997: 
#line 1789 
        ;
        
#line 1784 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)arraylen + -2 > i) 
          
#line 1789 
          goto ldv_56996; else 
#line 1792 
                               goto ldv_56998;
        ldv_56998: 
#line 1793 
        ;
        
#line 1792 
        i += -2;
      }
      else {
        
#line 1794 
        i += 2;
        
#line 1794 
        v1 = *(array_table + i);
        
#line 1794 
        v2 = *(array_table + ((unsigned int)i + 1U));
        
#line 1795 
        goto ldv_57000;
        ldv_56999: 
#line 1796 
        ;
        
#line 1799 
        _rtl8821ae_config_bb_reg(hw,v1,v2);
        
#line 1801 
        i += 2;
        
#line 1801 
        v1 = *(array_table + i);
        
#line 1801 
        v2 = *(array_table + ((unsigned int)i + 1U));
        ldv_57000: 
#line 1802 
        ;
        
#line 1795 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)arraylen + -2 > i) 
          
#line 1800 
          goto ldv_56999; else 
#line 1803 
                               goto ldv_57001;
        ldv_57001: 
#line 1804 
        ;
        
#line 1805 
        goto ldv_57003;
        ldv_57002: 
#line 1806 
        ;
        
#line 1807 
        i += 2;
        
#line 1807 
        v1 = *(array_table + i);
        
#line 1807 
        v2 = *(array_table + ((unsigned int)i + 1U));
        ldv_57003: 
#line 1808 
        ;
        
#line 1805 
        if (v2 != 57005U && (int)arraylen + -2 > i) 
#line 1808 
                                                    goto ldv_57002; else 
                                                                    
#line 1811 
                                                                    goto ldv_57004;
        ldv_57004: 
#line 1812 
        ;
      }
    }
    ldv_56995: 
#line 1814 
    ;
    
#line 1774 
    i += 2;
    ldv_57006: 
#line 1775 
    ;
    
#line 1774 
    if ((int)arraylen > i) 
#line 1776 
                           goto ldv_57005; else 
#line 1779 
                                                goto ldv_57007;
    ldv_57007: 
#line 1780 
    ;
  }
  else 
    
#line 1813 
    if ((unsigned int)configtype == 1U) {
      
#line 1814 
      if ((unsigned int)rtlhal->hw_type == 14U) {
        
#line 1815 
        arraylen = (unsigned short)1312U;
        
#line 1816 
        array_table = (u32 *)(& RTL8812AE_AGC_TAB_ARRAY);
      }
      else {
        
#line 1818 
        arraylen = (unsigned short)382U;
        
#line 1819 
        array_table = (u32 *)(& RTL8821AE_AGC_TAB_ARRAY);
      }
      
#line 1822 
      i = 0;
      
#line 1822 
      goto ldv_57020;
      ldv_57019: 
#line 1823 
      ;
      
#line 1823 
      v1 = *(array_table + i);
      
#line 1824 
      v2 = *(array_table + ((unsigned int)i + 1U));
      
#line 1825 
      if (v1 <= 3452816844U) {
        
#line 1826 
        rtl_set_bbreg(hw,v1,4294967295U,v2);
        
#line 1827 
        __const_udelay(4295UL);
        
#line 1828 
        goto ldv_57008;
      }
      else {
        int tmp_2;
        bool tmp_1;
        
#line 1830 
        tmp_1 = _rtl8821ae_check_condition(hw,v1);
        
#line 1830 
        if (tmp_1) 
#line 1830 
                   tmp_2 = 0; else 
#line 1830 
                                   tmp_2 = 1;
        
#line 1830 
        if (tmp_2) {
          
#line 1832 
          i += 2;
          
#line 1832 
          v1 = *(array_table + i);
          
#line 1832 
          v2 = *(array_table + ((unsigned int)i + 1U));
          
#line 1833 
          goto ldv_57010;
          ldv_57009: 
#line 1834 
          ;
          
#line 1837 
          i += 2;
          
#line 1837 
          v1 = *(array_table + i);
          
#line 1837 
          v2 = *(array_table + ((unsigned int)i + 1U));
          ldv_57010: 
#line 1838 
          ;
          
#line 1833 
          if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)arraylen + -2 > i) 
            
#line 1838 
            goto ldv_57009; else 
#line 1841 
                                 goto ldv_57011;
          ldv_57011: 
#line 1842 
          ;
          
#line 1840 
          i += -2;
        }
        else {
          
#line 1842 
          i += 2;
          
#line 1842 
          v1 = *(array_table + i);
          
#line 1842 
          v2 = *(array_table + ((unsigned int)i + 1U));
          
#line 1843 
          goto ldv_57013;
          ldv_57012: 
#line 1844 
          ;
          
#line 1847 
          rtl_set_bbreg(hw,v1,4294967295U,v2);
          
#line 1849 
          __const_udelay(4295UL);
          
#line 1850 
          i += 2;
          
#line 1850 
          v1 = *(array_table + i);
          
#line 1850 
          v2 = *(array_table + ((unsigned int)i + 1U));
          ldv_57013: 
#line 1851 
          ;
          
#line 1843 
          if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)arraylen + -2 > i) 
            
#line 1848 
            goto ldv_57012; else 
#line 1851 
                                 goto ldv_57014;
          ldv_57014: 
#line 1852 
          ;
          
#line 1854 
          goto ldv_57016;
          ldv_57015: 
#line 1855 
          ;
          
#line 1856 
          i += 2;
          
#line 1856 
          v1 = *(array_table + i);
          
#line 1856 
          v2 = *(array_table + ((unsigned int)i + 1U));
          ldv_57016: 
#line 1857 
          ;
          
#line 1854 
          if (v2 != 57005U && (int)arraylen + -2 > i) 
#line 1857 
                                                      goto ldv_57015; else 
                                                                    
#line 1860 
                                                                    goto ldv_57017;
          ldv_57017: 
#line 1861 
          ;
        }
        
#line 1860 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
          int tmp_3;
          int tmp_4;
          
#line 1860 
          ;
          
#line 1860 
          ;
          
#line 1860 
          tmp_3 = preempt_count();
          
#line 1860 
          tmp_4 = preempt_count();
          
#line 1860 
          printk("\001","_rtl8821ae_phy_config_bb_with_headerfile",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,*(array_table + i),*(array_table + ((unsigned int)i + 1U)));
        }
        else ;
      }
      ldv_57008: 
#line 1862 
      ;
      
#line 1822 
      i += 2;
      ldv_57020: 
#line 1823 
      ;
      
#line 1822 
      if ((int)arraylen > i) 
#line 1824 
                             goto ldv_57019; else 
#line 1827 
                                                  goto ldv_57021;
      ldv_57021: 
#line 1828 
      ;
    }
    else ;
  
#line 1866 
  __retres = (_Bool)1;
  
#line 1866 
  return __retres;
}


#line 1869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u8 _rtl8821ae_get_rate_section_index(u32 regaddr)
{
  
#line 1871 
  u8 index = (unsigned char)0U;
  
#line 1872 
  regaddr &= 4095U;
  
#line 1873 
  if (regaddr + 4294964192U <= 44U) 
#line 1874 
                                    index = (unsigned char)((regaddr + 4294964192U) / 4U);
  else 
    
#line 1875 
    if (regaddr + 4294963680U <= 44U) 
#line 1876 
                                      index = (unsigned char)((regaddr + 4294963680U) / 4U); else 
                                                                    
#line 1878 
                                                                    printk("\001","_rtl8821ae_get_rate_section_index",regaddr);
  
#line 1880 
  return index;
}


#line 1883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_store_tx_power_by_rate(struct ieee80211_hw *hw, u32 band, u32 rfpath, u32 txnum, u32 regaddr, u32 bitmask, u32 data)
{
  
#line 1888 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1889 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 1890 
  u8 rate_section = _rtl8821ae_get_rate_section_index(regaddr);
  
#line 1892 
  if (band > 1U) {
    
#line 1893 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 1893 
      ;
      
#line 1893 
      tmp_0 = preempt_count();
      
#line 1893 
      tmp_1 = preempt_count();
      
#line 1893 
      printk("\001","_rtl8821ae_store_tx_power_by_rate",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,band);
    }
    else ;
    
#line 1894 
    band = 0U;
  }
  else ;
  
#line 1896 
  if (rfpath > 3U) {
    
#line 1897 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_2;
      int tmp_3;
      
#line 1897 
      ;
      
#line 1897 
      tmp_2 = preempt_count();
      
#line 1897 
      tmp_3 = preempt_count();
      
#line 1897 
      printk("\001","_rtl8821ae_store_tx_power_by_rate",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,rfpath);
    }
    else ;
    
#line 1898 
    rfpath = 3U;
  }
  else ;
  
#line 1900 
  if (txnum > 3U) {
    
#line 1901 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_4;
      int tmp_5;
      
#line 1901 
      ;
      
#line 1901 
      tmp_4 = preempt_count();
      
#line 1901 
      tmp_5 = preempt_count();
      
#line 1901 
      printk("\001","_rtl8821ae_store_tx_power_by_rate",(unsigned long)tmp_5 & 2096896UL,tmp_4 != 0,txnum);
    }
    else ;
    
#line 1902 
    txnum = 3U;
  }
  else ;
  
#line 1904 
  rtlphy->tx_power_by_rate_offset[band][rfpath][txnum][(int)rate_section] = data;
  
#line 1905 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_6;
    int tmp_7;
    
#line 1905 
    ;
    
#line 1905 
    ;
    
#line 1905 
    ;
    
#line 1905 
    ;
    
#line 1905 
    ;
    
#line 1905 
    tmp_6 = preempt_count();
    
#line 1905 
    tmp_7 = preempt_count();
    
#line 1905 
    printk("\001","_rtl8821ae_store_tx_power_by_rate",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,band,rfpath,txnum,(int)rate_section,rtlphy->tx_power_by_rate_offset[band][rfpath][txnum][(int)rate_section]);
  }
  else ;
  
#line 1906 
  return;
}


#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_config_bb_with_pgheaderfile(struct ieee80211_hw *hw, u8 configtype)
{
  bool __retres;
  int i;
  u32 *array;
  u16 arraylen;
  u32 v1;
  u32 v2;
  u32 v3;
  u32 v4;
  u32 v5;
  u32 v6;
  
#line 1914 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1915 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 1921 
  if ((unsigned int)rtlhal->hw_type == 14U) {
    
#line 1922 
    arraylen = (unsigned short)276U;
    
#line 1923 
    array = (u32 *)(& RTL8812AE_PHY_REG_ARRAY_PG);
  }
  else {
    
#line 1925 
    arraylen = (unsigned short)90U;
    
#line 1926 
    array = (u32 *)(& RTL8821AE_PHY_REG_ARRAY_PG);
  }
  
#line 1929 
  if ((unsigned int)configtype != 0U) {
    
#line 1930 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 16ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp;
      int tmp_0;
      
#line 1930 
      tmp = preempt_count();
      
#line 1930 
      tmp_0 = preempt_count();
      
#line 1930 
      printk("\001","_rtl8821ae_phy_config_bb_with_pgheaderfile",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 1932 
    __retres = (_Bool)1;
    
#line 1932 
    goto return_label;
  }
  else ;
  
#line 1934 
  i = 0;
  
#line 1934 
  goto ldv_57069;
  ldv_57068: 
#line 1935 
  ;
  
#line 1935 
  v1 = *(array + i);
  
#line 1936 
  v2 = *(array + ((unsigned int)i + 1U));
  
#line 1937 
  v3 = *(array + ((unsigned int)i + 2U));
  
#line 1938 
  v4 = *(array + ((unsigned int)i + 3U));
  
#line 1939 
  v5 = *(array + ((unsigned int)i + 4U));
  
#line 1940 
  v6 = *(array + ((unsigned int)i + 5U));
  
#line 1942 
  if (v1 <= 3452816844U) {
    
#line 1943 
    if ((unsigned int)rtlhal->hw_type == 14U && (v4 == 254U || v4 == 4094U)) {
      
#line 1945 
      msleep(50U);
      
#line 1946 
      goto ldv_57056;
    }
    else ;
    
#line 1949 
    if ((unsigned int)rtlhal->hw_type == 13U) {
      
#line 1950 
      if (v4 == 254U) 
#line 1951 
                      msleep(50U);
      else 
        
#line 1952 
        if (v4 == 253U) 
          
#line 1953 
          if (1) 
#line 1953 
                 __const_udelay(21475000UL);
          else {
            
#line 1953 
            unsigned long __ms = 5UL;
            {
              unsigned long tmp_1;
              
#line 1953 
              goto ldv_57059;
              ldv_57058: 
#line 1954 
              ;
              
#line 1953 
              __const_udelay(4295000UL);
              ldv_57059: 
#line 1955 
              ;
              
#line 1953 
              tmp_1 = __ms;
              
#line 1953 
              __ms -= 1UL;
              
#line 1953 
              ;
              
#line 1953 
              if (tmp_1 != 0UL) 
#line 1955 
                                goto ldv_57058; else 
#line 1958 
                                                     goto ldv_57060;
              ldv_57060: 
#line 1959 
              ;
            }
          }
        else 
          
#line 1954 
          if (v4 == 252U) 
            
#line 1955 
            if (1) 
#line 1955 
                   __const_udelay(4295000UL);
            else {
              
#line 1955 
              unsigned long __ms_0 = 1UL;
              {
                unsigned long tmp_2;
                
#line 1955 
                goto ldv_57063;
                ldv_57062: 
#line 1956 
                ;
                
#line 1955 
                __const_udelay(4295000UL);
                ldv_57063: 
#line 1957 
                ;
                
#line 1955 
                tmp_2 = __ms_0;
                
#line 1955 
                __ms_0 -= 1UL;
                
#line 1955 
                ;
                
#line 1955 
                if (tmp_2 != 0UL) 
#line 1957 
                                  goto ldv_57062; else 
#line 1960 
                                                       goto ldv_57064;
                ldv_57064: 
#line 1961 
                ;
              }
            }
          else 
            
#line 1956 
            if (v4 == 251U) 
#line 1957 
                            __const_udelay(214750UL);
            else 
              
#line 1958 
              if (v4 == 250U) 
#line 1959 
                              __const_udelay(21475UL);
              else 
                
#line 1960 
                if (v4 == 249U) 
#line 1961 
                                __const_udelay(4295UL); else ;
    }
    else ;
    
#line 1963 
    _rtl8821ae_store_tx_power_by_rate(hw,v1,v2,v3,v4,v5,v6);
    
#line 1965 
    goto ldv_57056;
  }
  else {
    int tmp_4;
    bool tmp_3;
    
#line 1968 
    tmp_3 = _rtl8821ae_check_condition(hw,v1);
    
#line 1968 
    if (tmp_3) 
#line 1968 
               tmp_4 = 0; else 
#line 1968 
                               tmp_4 = 1;
    
#line 1968 
    if (tmp_4) {
      
#line 1969 
      i += 2;
      
#line 1970 
      v1 = *(array + i);
      
#line 1971 
      v2 = *(array + ((unsigned int)i + 1U));
      
#line 1972 
      v3 = *(array + ((unsigned int)i + 2U));
      
#line 1973 
      goto ldv_57066;
      ldv_57065: 
#line 1974 
      ;
      
#line 1974 
      i += 3;
      
#line 1975 
      v1 = *(array + i);
      
#line 1976 
      v2 = *(array + ((unsigned int)i + 1U));
      
#line 1977 
      v3 = *(array + ((unsigned int)i + 2U));
      ldv_57066: 
#line 1978 
      ;
      
#line 1973 
      if (v2 != 57005U) 
#line 1975 
                        goto ldv_57065; else 
#line 1978 
                                             goto ldv_57067;
      ldv_57067: 
#line 1979 
      ;
    }
    else ;
  }
  ldv_57056: 
#line 1981 
  ;
  
#line 1934 
  i += 6;
  ldv_57069: 
#line 1935 
  ;
  
#line 1934 
  if ((int)arraylen > i) 
#line 1936 
                         goto ldv_57068; else 
#line 1939 
                                              goto ldv_57070;
  ldv_57070: 
#line 1940 
  ;
  
#line 1983 
  __retres = (_Bool)1;
  return_label: 
#line 1983 
                return __retres;
}


#line 1986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8812ae_phy_config_rf_with_headerfile(struct ieee80211_hw *hw, enum radio_path rfpath)
{
  bool __retres;
  int i;
  u32 *radioa_array_table_a;
  u32 *radioa_array_table_b;
  u16 radioa_arraylen_a;
  u16 radioa_arraylen_b;
  
#line 1990 
  bool rtstatus = (_Bool)1;
  
#line 1993 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 1994 
  u32 v1 = 0U;
  
#line 1994 
  u32 v2 = 0U;
  
#line 1996 
  radioa_arraylen_a = (unsigned short)1264U;
  
#line 1997 
  radioa_array_table_a = (u32 *)(& RTL8812AE_RADIOA_ARRAY);
  
#line 1998 
  radioa_arraylen_b = (unsigned short)1240U;
  
#line 1999 
  radioa_array_table_b = (u32 *)(& RTL8812AE_RADIOB_ARRAY);
  
#line 2000 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2000 
    ;
    
#line 2000 
    tmp = preempt_count();
    
#line 2000 
    tmp_0 = preempt_count();
    
#line 2000 
    printk("\001","rtl8812ae_phy_config_rf_with_headerfile",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)radioa_arraylen_a);
  }
  else ;
  
#line 2002 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 2002 
    ;
    
#line 2002 
    tmp_1 = preempt_count();
    
#line 2002 
    tmp_2 = preempt_count();
    
#line 2002 
    printk("\001","rtl8812ae_phy_config_rf_with_headerfile",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(unsigned int)rfpath);
  }
  else ;
  
#line 2003 
  rtstatus = (_Bool)1;
  
#line 2004 
  switch ((unsigned int)rfpath) {
    case (unsigned int)0: 
#line 2005 
    ;
    
#line 2006 
    i = 0;
    
#line 2006 
    goto ldv_57097;
    ldv_57096: 
#line 2007 
    ;
    
#line 2007 
    v1 = *(radioa_array_table_a + i);
    
#line 2008 
    v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
    
#line 2009 
    if (v1 <= 3452816844U) {
      
#line 2010 
      _rtl8821ae_config_rf_radio_a(hw,v1,v2);
      
#line 2011 
      goto ldv_57086;
    }
    else {
      int tmp_4;
      bool tmp_3;
      
#line 2013 
      tmp_3 = _rtl8821ae_check_condition(hw,v1);
      
#line 2013 
      if (tmp_3) 
#line 2013 
                 tmp_4 = 0; else 
#line 2013 
                                 tmp_4 = 1;
      
#line 2013 
      if (tmp_4) {
        
#line 2015 
        i += 2;
        
#line 2015 
        v1 = *(radioa_array_table_a + i);
        
#line 2015 
        v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
        
#line 2016 
        goto ldv_57088;
        ldv_57087: 
#line 2017 
        ;
        
#line 2019 
        i += 2;
        
#line 2019 
        v1 = *(radioa_array_table_a + i);
        
#line 2019 
        v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
        ldv_57088: 
#line 2020 
        ;
        
#line 2016 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen_a + -2 > i) 
          
#line 2020 
          goto ldv_57087; else 
#line 2023 
                               goto ldv_57089;
        ldv_57089: 
#line 2024 
        ;
        
#line 2021 
        i += -2;
      }
      else {
        
#line 2023 
        i += 2;
        
#line 2023 
        v1 = *(radioa_array_table_a + i);
        
#line 2023 
        v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
        
#line 2024 
        goto ldv_57091;
        ldv_57090: 
#line 2025 
        ;
        
#line 2027 
        _rtl8821ae_config_rf_radio_a(hw,v1,v2);
        
#line 2028 
        i += 2;
        
#line 2028 
        v1 = *(radioa_array_table_a + i);
        
#line 2028 
        v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
        ldv_57091: 
#line 2029 
        ;
        
#line 2024 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen_a + -2 > i) 
          
#line 2028 
          goto ldv_57090; else 
#line 2031 
                               goto ldv_57092;
        ldv_57092: 
#line 2032 
        ;
        
#line 2031 
        goto ldv_57094;
        ldv_57093: 
#line 2032 
        ;
        
#line 2032 
        i += 2;
        
#line 2032 
        v1 = *(radioa_array_table_a + i);
        
#line 2032 
        v2 = *(radioa_array_table_a + ((unsigned int)i + 1U));
        ldv_57094: 
#line 2033 
        ;
        
#line 2031 
        if (v2 != 57005U && (int)radioa_arraylen_a + -2 > i) 
#line 2033 
                                                             goto ldv_57093; else 
                                                                    
#line 2036 
                                                                    goto ldv_57095;
        ldv_57095: 
#line 2037 
        ;
      }
    }
    ldv_57086: 
#line 2039 
    ;
    
#line 2006 
    i += 2;
    ldv_57097: 
#line 2007 
    ;
    
#line 2006 
    if ((int)radioa_arraylen_a > i) 
#line 2008 
                                    goto ldv_57096; else 
#line 2011 
                                                         goto ldv_57098;
    ldv_57098: 
#line 2012 
    ;
    
#line 2037 
    goto ldv_57099;
    case (unsigned int)1: 
#line 2038 
    ;
    
#line 2039 
    i = 0;
    
#line 2039 
    goto ldv_57112;
    ldv_57111: 
#line 2040 
    ;
    
#line 2040 
    v1 = *(radioa_array_table_b + i);
    
#line 2041 
    v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
    
#line 2042 
    if (v1 <= 3452816844U) {
      
#line 2043 
      _rtl8821ae_config_rf_radio_b(hw,v1,v2);
      
#line 2044 
      goto ldv_57101;
    }
    else {
      int tmp_6;
      bool tmp_5;
      
#line 2046 
      tmp_5 = _rtl8821ae_check_condition(hw,v1);
      
#line 2046 
      if (tmp_5) 
#line 2046 
                 tmp_6 = 0; else 
#line 2046 
                                 tmp_6 = 1;
      
#line 2046 
      if (tmp_6) {
        
#line 2048 
        i += 2;
        
#line 2048 
        v1 = *(radioa_array_table_b + i);
        
#line 2048 
        v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
        
#line 2049 
        goto ldv_57103;
        ldv_57102: 
#line 2050 
        ;
        
#line 2052 
        i += 2;
        
#line 2052 
        v1 = *(radioa_array_table_b + i);
        
#line 2052 
        v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
        ldv_57103: 
#line 2053 
        ;
        
#line 2049 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen_b + -2 > i) 
          
#line 2053 
          goto ldv_57102; else 
#line 2056 
                               goto ldv_57104;
        ldv_57104: 
#line 2057 
        ;
        
#line 2054 
        i += -2;
      }
      else {
        
#line 2056 
        i += 2;
        
#line 2056 
        v1 = *(radioa_array_table_b + i);
        
#line 2056 
        v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
        
#line 2057 
        goto ldv_57106;
        ldv_57105: 
#line 2058 
        ;
        
#line 2060 
        _rtl8821ae_config_rf_radio_b(hw,v1,v2);
        
#line 2061 
        i += 2;
        
#line 2061 
        v1 = *(radioa_array_table_b + i);
        
#line 2061 
        v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
        ldv_57106: 
#line 2062 
        ;
        
#line 2057 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen_b + -2 > i) 
          
#line 2061 
          goto ldv_57105; else 
#line 2064 
                               goto ldv_57107;
        ldv_57107: 
#line 2065 
        ;
        
#line 2064 
        goto ldv_57109;
        ldv_57108: 
#line 2065 
        ;
        
#line 2065 
        i += 2;
        
#line 2065 
        v1 = *(radioa_array_table_b + i);
        
#line 2065 
        v2 = *(radioa_array_table_b + ((unsigned int)i + 1U));
        ldv_57109: 
#line 2066 
        ;
        
#line 2064 
        if (v2 != 57005U && (int)radioa_arraylen_b + -2 > i) 
#line 2066 
                                                             goto ldv_57108; else 
                                                                    
#line 2069 
                                                                    goto ldv_57110;
        ldv_57110: 
#line 2070 
        ;
      }
    }
    ldv_57101: 
#line 2072 
    ;
    
#line 2039 
    i += 2;
    ldv_57112: 
#line 2040 
    ;
    
#line 2039 
    if ((int)radioa_arraylen_b > i) 
#line 2041 
                                    goto ldv_57111; else 
#line 2044 
                                                         goto ldv_57113;
    ldv_57113: 
#line 2045 
    ;
    
#line 2069 
    goto ldv_57099;
    case (unsigned int)2: 
#line 2070 
    ;
    
#line 2071 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 2071 
      tmp_7 = preempt_count();
      
#line 2071 
      tmp_8 = preempt_count();
      
#line 2071 
      printk("\001","rtl8812ae_phy_config_rf_with_headerfile",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 2073 
    goto ldv_57099;
    case (unsigned int)3: 
#line 2074 
    ;
    
#line 2075 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 2075 
      tmp_9 = preempt_count();
      
#line 2075 
      tmp_10 = preempt_count();
      
#line 2075 
      printk("\001","rtl8812ae_phy_config_rf_with_headerfile",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
    }
    else ;
    
#line 2077 
    goto ldv_57099;
  }
  ldv_57099: 
#line 2079 
  ;
  
#line 2079 
  __retres = (_Bool)1;
  
#line 2079 
  return __retres;
}


#line 2082  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_config_rf_with_headerfile(struct ieee80211_hw *hw, enum radio_path rfpath)
{
  bool __retres;
  int i;
  u32 *radioa_array_table;
  u16 radioa_arraylen;
  
#line 2094 
  bool rtstatus = (_Bool)1;
  
#line 2097 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2099 
  u32 v1 = 0U;
  
#line 2099 
  u32 v2 = 0U;
  
#line 2101 
  radioa_arraylen = (unsigned short)1176U;
  
#line 2102 
  radioa_array_table = (u32 *)(& RTL8821AE_RADIOA_ARRAY);
  
#line 2103 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 2103 
    ;
    
#line 2103 
    tmp = preempt_count();
    
#line 2103 
    tmp_0 = preempt_count();
    
#line 2103 
    printk("\001","rtl8821ae_phy_config_rf_with_headerfile",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)radioa_arraylen);
  }
  else ;
  
#line 2105 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 2105 
    ;
    
#line 2105 
    tmp_1 = preempt_count();
    
#line 2105 
    tmp_2 = preempt_count();
    
#line 2105 
    printk("\001","rtl8821ae_phy_config_rf_with_headerfile",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(unsigned int)rfpath);
  }
  else ;
  
#line 2106 
  rtstatus = (_Bool)1;
  
#line 2107 
  switch ((unsigned int)rfpath) {
    case (unsigned int)0: 
#line 2108 
    ;
    
#line 2109 
    i = 0;
    
#line 2109 
    goto ldv_57139;
    ldv_57138: 
#line 2110 
    ;
    
#line 2110 
    v1 = *(radioa_array_table + i);
    
#line 2111 
    v2 = *(radioa_array_table + ((unsigned int)i + 1U));
    
#line 2112 
    if (v1 <= 3452816844U) 
#line 2113 
                           _rtl8821ae_config_rf_radio_a(hw,v1,v2);
    else {
      int tmp_4;
      bool tmp_3;
      
#line 2115 
      tmp_3 = _rtl8821ae_check_condition(hw,v1);
      
#line 2115 
      if (tmp_3) 
#line 2115 
                 tmp_4 = 0; else 
#line 2115 
                                 tmp_4 = 1;
      
#line 2115 
      if (tmp_4) {
        
#line 2117 
        i += 2;
        
#line 2117 
        v1 = *(radioa_array_table + i);
        
#line 2117 
        v2 = *(radioa_array_table + ((unsigned int)i + 1U));
        
#line 2118 
        goto ldv_57130;
        ldv_57129: 
#line 2119 
        ;
        
#line 2121 
        i += 2;
        
#line 2121 
        v1 = *(radioa_array_table + i);
        
#line 2121 
        v2 = *(radioa_array_table + ((unsigned int)i + 1U));
        ldv_57130: 
#line 2122 
        ;
        
#line 2118 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen + -2 > i) 
          
#line 2122 
          goto ldv_57129; else 
#line 2125 
                               goto ldv_57131;
        ldv_57131: 
#line 2126 
        ;
        
#line 2123 
        i += -2;
      }
      else {
        
#line 2125 
        i += 2;
        
#line 2125 
        v1 = *(radioa_array_table + i);
        
#line 2125 
        v2 = *(radioa_array_table + ((unsigned int)i + 1U));
        
#line 2126 
        goto ldv_57133;
        ldv_57132: 
#line 2127 
        ;
        
#line 2129 
        _rtl8821ae_config_rf_radio_a(hw,v1,v2);
        
#line 2130 
        i += 2;
        
#line 2130 
        v1 = *(radioa_array_table + i);
        
#line 2130 
        v2 = *(radioa_array_table + ((unsigned int)i + 1U));
        ldv_57133: 
#line 2131 
        ;
        
#line 2126 
        if (((v2 != 57005U && v2 != 52719U) && v2 != 52685U) && (int)radioa_arraylen + -2 > i) 
          
#line 2130 
          goto ldv_57132; else 
#line 2133 
                               goto ldv_57134;
        ldv_57134: 
#line 2134 
        ;
        
#line 2133 
        goto ldv_57136;
        ldv_57135: 
#line 2134 
        ;
        
#line 2134 
        i += 2;
        
#line 2134 
        v1 = *(radioa_array_table + i);
        
#line 2134 
        v2 = *(radioa_array_table + ((unsigned int)i + 1U));
        ldv_57136: 
#line 2135 
        ;
        
#line 2133 
        if (v2 != 57005U && (int)radioa_arraylen + -2 > i) 
#line 2135 
                                                           goto ldv_57135; else 
                                                                    
#line 2138 
                                                                    goto ldv_57137;
        ldv_57137: 
#line 2139 
        ;
      }
    }
    
#line 2109 
    i += 2;
    ldv_57139: 
#line 2110 
    ;
    
#line 2109 
    if ((int)radioa_arraylen > i) 
#line 2111 
                                  goto ldv_57138; else 
#line 2114 
                                                       goto ldv_57140;
    ldv_57140: 
#line 2115 
    ;
    
#line 2138 
    goto ldv_57141;
    case (unsigned int)1: 
#line 2140 
    ;
    
#line 2141 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 2141 
      tmp_5 = preempt_count();
      
#line 2141 
      tmp_6 = preempt_count();
      
#line 2141 
      printk("\001","rtl8821ae_phy_config_rf_with_headerfile",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 2143 
    goto ldv_57141;
    case (unsigned int)2: 
#line 2144 
    ;
    
#line 2145 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_7;
      int tmp_8;
      
#line 2145 
      tmp_7 = preempt_count();
      
#line 2145 
      tmp_8 = preempt_count();
      
#line 2145 
      printk("\001","rtl8821ae_phy_config_rf_with_headerfile",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0);
    }
    else ;
    
#line 2147 
    goto ldv_57141;
    case (unsigned int)3: 
#line 2148 
    ;
    
#line 2149 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_9;
      int tmp_10;
      
#line 2149 
      tmp_9 = preempt_count();
      
#line 2149 
      tmp_10 = preempt_count();
      
#line 2149 
      printk("\001","rtl8821ae_phy_config_rf_with_headerfile",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
    }
    else ;
    
#line 2151 
    goto ldv_57141;
  }
  ldv_57141: 
#line 2153 
  ;
  
#line 2153 
  __retres = (_Bool)1;
  
#line 2153 
  return __retres;
}


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_get_hw_reg_originalvalue(struct ieee80211_hw *hw)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_5;
  
#line 2158 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2159 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2162 
  tmp = rtl_get_bbreg(hw,3152U,255U);
  
#line 2161 
  rtlphy->default_initialgain[0] = (unsigned char)tmp;
  
#line 2164 
  tmp_0 = rtl_get_bbreg(hw,3160U,255U);
  
#line 2163 
  rtlphy->default_initialgain[1] = (unsigned char)tmp_0;
  
#line 2166 
  tmp_1 = rtl_get_bbreg(hw,3168U,255U);
  
#line 2165 
  rtlphy->default_initialgain[2] = (unsigned char)tmp_1;
  
#line 2168 
  tmp_2 = rtl_get_bbreg(hw,3176U,255U);
  
#line 2167 
  rtlphy->default_initialgain[3] = (unsigned char)tmp_2;
  
#line 2170 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 2170 
    ;
    
#line 2170 
    ;
    
#line 2170 
    ;
    
#line 2170 
    ;
    
#line 2170 
    tmp_3 = preempt_count();
    
#line 2170 
    tmp_4 = preempt_count();
    
#line 2170 
    printk("\001","rtl8821ae_phy_get_hw_reg_originalvalue",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rtlphy->default_initialgain[0],(int)rtlphy->default_initialgain[1],(int)rtlphy->default_initialgain[2],(int)rtlphy->default_initialgain[3]);
  }
  else ;
  
#line 2177 
  tmp_5 = rtl_get_bbreg(hw,3128U,255U);
  
#line 2177 
  rtlphy->framesync = (unsigned char)tmp_5;
  
#line 2179 
  rtlphy->framesync_c34 = rtl_get_bbreg(hw,3124U,4294967295U);
  
#line 2182 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_6;
    int tmp_7;
    
#line 2182 
    ;
    
#line 2182 
    tmp_6 = preempt_count();
    
#line 2182 
    tmp_7 = preempt_count();
    
#line 2182 
    printk("\001","rtl8821ae_phy_get_hw_reg_originalvalue",(unsigned long)tmp_7 & 2096896UL,tmp_6 != 0,3128,(int)rtlphy->framesync);
  }
  else ;
  
#line 2183 
  return;
}


#line 2187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void phy_init_bb_rf_register_definition(struct ieee80211_hw *hw)
{
  
#line 2189 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2190 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2192 
  rtlphy->phyreg_def[0].rfintfs = 2160U;
  
#line 2193 
  rtlphy->phyreg_def[1].rfintfs = 2160U;
  
#line 2195 
  rtlphy->phyreg_def[0].rfintfo = 2144U;
  
#line 2196 
  rtlphy->phyreg_def[1].rfintfo = 2148U;
  
#line 2198 
  rtlphy->phyreg_def[0].rfintfe = 2144U;
  
#line 2199 
  rtlphy->phyreg_def[1].rfintfe = 2148U;
  
#line 2201 
  rtlphy->phyreg_def[0].rf3wire_offset = 3216U;
  
#line 2202 
  rtlphy->phyreg_def[1].rf3wire_offset = 3728U;
  
#line 2204 
  rtlphy->phyreg_def[0].rfhssi_para2 = 2224U;
  
#line 2205 
  rtlphy->phyreg_def[1].rfhssi_para2 = 2224U;
  
#line 2207 
  rtlphy->phyreg_def[0].rf_rb = 3336U;
  
#line 2208 
  rtlphy->phyreg_def[1].rf_rb = 3400U;
  
#line 2210 
  rtlphy->phyreg_def[0].rf_rbpi = 3332U;
  
#line 2211 
  rtlphy->phyreg_def[1].rf_rbpi = 3396U;
  
#line 2212 
  return;
}


#line 2214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_get_txpower_level(struct ieee80211_hw *hw, long *powerlevel)
{
  u8 txpwr_level;
  long txpwr_dbm;
  long tmp;
  long tmp_0;
  
#line 2216 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2217 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2221 
  txpwr_level = rtlphy->cur_cck_txpwridx;
  
#line 2222 
  txpwr_dbm = _rtl8821ae_phy_txpwr_idx_to_dbm(hw,(enum wireless_mode)WIRELESS_MODE_B,(unsigned char)((int)txpwr_level));
  
#line 2224 
  txpwr_level = rtlphy->cur_ofdm24g_txpwridx;
  
#line 2225 
  tmp = _rtl8821ae_phy_txpwr_idx_to_dbm(hw,(enum wireless_mode)WIRELESS_MODE_G,(unsigned char)((int)txpwr_level));
  
#line 2225 
  ;
  
#line 2225 
  if (tmp > txpwr_dbm) 
#line 2228 
                       txpwr_dbm = _rtl8821ae_phy_txpwr_idx_to_dbm(hw,(enum wireless_mode)WIRELESS_MODE_G,(unsigned char)((int)txpwr_level)); else ;
  
#line 2231 
  txpwr_level = rtlphy->cur_ofdm24g_txpwridx;
  
#line 2232 
  tmp_0 = _rtl8821ae_phy_txpwr_idx_to_dbm(hw,(enum wireless_mode)WIRELESS_MODE_N_24G,(unsigned char)((int)txpwr_level));
  
#line 2232 
  ;
  
#line 2232 
  if (tmp_0 > txpwr_dbm) 
#line 2235 
                         txpwr_dbm = _rtl8821ae_phy_txpwr_idx_to_dbm(hw,(enum wireless_mode)WIRELESS_MODE_N_24G,(unsigned char)((int)txpwr_level)); else ;
  
#line 2238 
  *powerlevel = txpwr_dbm;
  
#line 2239 
  return;
}


#line 2241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_get_chnl_index(u8 channel, u8 *chnl_index)
{
  bool __retres;
  
#line 2243 
  u8 channel_5g[54U] = {(unsigned char)36U, (unsigned char)38U, (unsigned char)40U, (unsigned char)42U, (unsigned char)44U, (unsigned char)46U, (unsigned char)48U, (unsigned char)50U, (unsigned char)52U, (unsigned char)54U, (unsigned char)56U, (unsigned char)58U, (unsigned char)60U, (unsigned char)62U, (unsigned char)64U, (unsigned char)100U, (unsigned char)102U, (unsigned char)104U, (unsigned char)106U, (unsigned char)108U, (unsigned char)110U, (unsigned char)112U, (unsigned char)114U, (unsigned char)116U, (unsigned char)118U, (unsigned char)120U, (unsigned char)122U, (unsigned char)124U, (unsigned char)126U, (unsigned char)128U, (unsigned char)130U, (unsigned char)132U, (unsigned char)134U, (unsigned char)136U, (unsigned char)138U, (unsigned char)140U, (unsigned char)142U, (unsigned char)144U, (unsigned char)149U, (unsigned char)151U, (unsigned char)153U, (unsigned char)155U, (unsigned char)157U, (unsigned char)159U, (unsigned char)161U, (unsigned char)163U, (unsigned char)165U, (unsigned char)167U, (unsigned char)168U, (unsigned char)169U, (unsigned char)171U, (unsigned char)173U, (unsigned char)175U, (unsigned char)177U};
  
#line 2250 
  u8 i = (unsigned char)0U;
  
#line 2251 
  bool in_24g = (_Bool)1;
  
#line 2253 
  if ((unsigned int)channel <= 14U) {
    
#line 2254 
    in_24g = (_Bool)1;
    
#line 2255 
    *chnl_index = (unsigned char)((unsigned int)channel + 255U);
  }
  else {
    
#line 2257 
    in_24g = (_Bool)0;
    
#line 2259 
    i = (unsigned char)0U;
    
#line 2259 
    goto ldv_57172;
    ldv_57171: 
#line 2260 
    ;
    
#line 2260 
    if ((int)channel_5g[(int)i] == (int)channel) {
      
#line 2261 
      *chnl_index = i;
      
#line 2262 
      __retres = in_24g;
      
#line 2262 
      goto return_label;
    }
    else ;
    
#line 2259 
    i = (u8)((int)i + 1);
    ldv_57172: 
#line 2260 
    ;
    
#line 2259 
    if ((unsigned int)i <= 53U) 
#line 2261 
                                goto ldv_57171; else 
#line 2264 
                                                     goto ldv_57173;
    ldv_57173: 
#line 2265 
    ;
  }
  
#line 2266 
  __retres = in_24g;
  return_label: 
#line 2266 
                return __retres;
}


#line 2269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static char _rtl8821ae_phy_get_ratesection_intxpower_byrate(u8 path, u8 rate)
{
  
#line 2271 
  char rate_section = (char)0;
  
#line 2272 
  switch ((int)rate) {
    case 0: 
#line 2273 
    ;
    case 1: 
#line 2274 
    ;
    case 2: 
#line 2275 
    ;
    case 3: 
#line 2276 
    ;
    
#line 2277 
    rate_section = (char)0;
    
#line 2278 
    goto ldv_57183;
    case 4: 
#line 2279 
    ;
    case 5: 
#line 2280 
    ;
    case 6: 
#line 2281 
    ;
    case 7: 
#line 2282 
    ;
    
#line 2283 
    rate_section = (char)1;
    
#line 2284 
    goto ldv_57183;
    case 8: 
#line 2285 
    ;
    case 9: 
#line 2286 
    ;
    case 10: 
#line 2287 
    ;
    case 11: 
#line 2288 
    ;
    
#line 2289 
    rate_section = (char)2;
    
#line 2290 
    goto ldv_57183;
    case 12: 
#line 2291 
    ;
    case 13: 
#line 2292 
    ;
    case 14: 
#line 2293 
    ;
    case 15: 
#line 2294 
    ;
    
#line 2295 
    rate_section = (char)3;
    
#line 2296 
    goto ldv_57183;
    case 16: 
#line 2297 
    ;
    case 17: 
#line 2298 
    ;
    case 18: 
#line 2299 
    ;
    case 19: 
#line 2300 
    ;
    
#line 2301 
    rate_section = (char)4;
    
#line 2302 
    goto ldv_57183;
    case 20: 
#line 2303 
    ;
    case 21: 
#line 2304 
    ;
    case 22: 
#line 2305 
    ;
    case 23: 
#line 2306 
    ;
    
#line 2307 
    rate_section = (char)5;
    
#line 2308 
    goto ldv_57183;
    case 24: 
#line 2309 
    ;
    case 25: 
#line 2310 
    ;
    case 26: 
#line 2311 
    ;
    case 27: 
#line 2312 
    ;
    
#line 2313 
    rate_section = (char)6;
    
#line 2314 
    goto ldv_57183;
    case 44: 
#line 2315 
    ;
    case 45: 
#line 2316 
    ;
    case 46: 
#line 2317 
    ;
    case 47: 
#line 2318 
    ;
    
#line 2319 
    rate_section = (char)7;
    
#line 2320 
    goto ldv_57183;
    case 48: 
#line 2321 
    ;
    case 49: 
#line 2322 
    ;
    case 50: 
#line 2323 
    ;
    case 51: 
#line 2324 
    ;
    
#line 2325 
    rate_section = (char)8;
    
#line 2326 
    goto ldv_57183;
    case 52: 
#line 2327 
    ;
    case 53: 
#line 2328 
    ;
    case 54: 
#line 2329 
    ;
    case 55: 
#line 2330 
    ;
    
#line 2331 
    rate_section = (char)9;
    
#line 2332 
    goto ldv_57183;
    case 56: 
#line 2333 
    ;
    case 57: 
#line 2334 
    ;
    case 58: 
#line 2335 
    ;
    case 59: 
#line 2336 
    ;
    
#line 2337 
    rate_section = (char)10;
    
#line 2338 
    goto ldv_57183;
    case 60: 
#line 2339 
    ;
    case 61: 
#line 2340 
    ;
    case 62: 
#line 2341 
    ;
    case 63: 
#line 2342 
    ;
    
#line 2343 
    rate_section = (char)11;
    
#line 2344 
    goto ldv_57183;
    default: 
#line 2345 
    ;
    
#line 2347 
    goto ldv_57183;
  }
  ldv_57183: 
#line 2350 
  ;
  
#line 2350 
  return rate_section;
}


#line 2353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static char _rtl8812ae_phy_get_world_wide_limit(char *limit_table)
{
  
#line 2355 
  char min = *limit_table;
  
#line 2356 
  u8 i = (unsigned char)0U;
  
#line 2358 
  i = (unsigned char)0U;
  
#line 2358 
  goto ldv_57236;
  ldv_57235: 
#line 2359 
  ;
  
#line 2359 
  if ((int)*(limit_table + (int)i) < (int)min) 
#line 2360 
                                               min = *(limit_table + (int)i); else ;
  
#line 2358 
  i = (u8)((int)i + 1);
  ldv_57236: 
#line 2359 
  ;
  
#line 2358 
  if ((unsigned int)i <= 3U) 
#line 2360 
                             goto ldv_57235; else 
#line 2363 
                                                  goto ldv_57237;
  ldv_57237: 
#line 2364 
  ;
  
#line 2362 
  return min;
}


#line 2365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static char _rtl8812ae_phy_get_txpower_limit(struct ieee80211_hw *hw, u8 band, enum ht_channel_width bandwidth, enum radio_path rf_path, u8 rate, u8 channel)
{
  char __retres;
  u16 bd;
  u16 regu;
  u16 bdwidth;
  u16 sec;
  u16 chnl;
  
#line 2371 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2372 
  struct rtl_efuse *rtlefuse = & rtlpriv->efuse;
  
#line 2373 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2374 
  short band_temp = (short)(-1);
  
#line 2374 
  short regulation = (short)(-1);
  
#line 2374 
  short bandwidth_temp = (short)(-1);
  
#line 2375 
  short rate_section = (short)(-1);
  
#line 2375 
  short channel_temp = (short)(-1);
  
#line 2377 
  char power_limit = (char)63;
  
#line 2379 
  if ((unsigned int)rtlefuse->eeprom_regulatory == 2U) {
    
#line 2380 
    __retres = (char)63;
    
#line 2380 
    goto return_label;
  }
  else ;
  
#line 2382 
  regulation = (short)3;
  
#line 2384 
  if ((unsigned int)band == 0U) 
#line 2385 
                                band_temp = (short)0;
  else 
    
#line 2386 
    if ((unsigned int)band == 1U) 
#line 2387 
                                  band_temp = (short)1; else ;
  
#line 2389 
  if (bandwidth == (unsigned int)HT_CHANNEL_WIDTH_20) 
#line 2390 
                                                      bandwidth_temp = (short)0;
  else 
    
#line 2391 
    if (bandwidth == (unsigned int)HT_CHANNEL_WIDTH_20_40) 
#line 2392 
                                                           bandwidth_temp = (short)1;
    else 
      
#line 2393 
      if (bandwidth == (unsigned int)HT_CHANNEL_WIDTH_80) 
#line 2394 
                                                          bandwidth_temp = (short)2; else ;
  
#line 2396 
  switch ((int)rate) {
    case 0: 
#line 2397 
    ;
    case 1: 
#line 2398 
    ;
    case 2: 
#line 2399 
    ;
    case 3: 
#line 2400 
    ;
    
#line 2401 
    rate_section = (short)0;
    
#line 2402 
    goto ldv_57264;
    case 4: 
#line 2403 
    ;
    case 5: 
#line 2404 
    ;
    case 6: 
#line 2405 
    ;
    case 7: 
#line 2406 
    ;
    case 8: 
#line 2407 
    ;
    case 9: 
#line 2408 
    ;
    case 10: 
#line 2409 
    ;
    case 11: 
#line 2410 
    ;
    
#line 2411 
    rate_section = (short)1;
    
#line 2412 
    goto ldv_57264;
    case 12: 
#line 2413 
    ;
    case 13: 
#line 2414 
    ;
    case 14: 
#line 2415 
    ;
    case 15: 
#line 2416 
    ;
    case 16: 
#line 2417 
    ;
    case 17: 
#line 2418 
    ;
    case 18: 
#line 2419 
    ;
    case 19: 
#line 2420 
    ;
    
#line 2421 
    rate_section = (short)2;
    
#line 2422 
    goto ldv_57264;
    case 20: 
#line 2423 
    ;
    case 21: 
#line 2424 
    ;
    case 22: 
#line 2425 
    ;
    case 23: 
#line 2426 
    ;
    case 24: 
#line 2427 
    ;
    case 25: 
#line 2428 
    ;
    case 26: 
#line 2429 
    ;
    case 27: 
#line 2430 
    ;
    
#line 2431 
    rate_section = (short)3;
    
#line 2432 
    goto ldv_57264;
    case 44: 
#line 2433 
    ;
    case 45: 
#line 2434 
    ;
    case 46: 
#line 2435 
    ;
    case 47: 
#line 2436 
    ;
    case 48: 
#line 2437 
    ;
    case 49: 
#line 2438 
    ;
    case 50: 
#line 2439 
    ;
    case 51: 
#line 2440 
    ;
    case 52: 
#line 2441 
    ;
    case 53: 
#line 2442 
    ;
    
#line 2443 
    rate_section = (short)4;
    
#line 2444 
    goto ldv_57264;
    case 54: 
#line 2445 
    ;
    case 55: 
#line 2446 
    ;
    case 56: 
#line 2447 
    ;
    case 57: 
#line 2448 
    ;
    case 58: 
#line 2449 
    ;
    case 59: 
#line 2450 
    ;
    case 60: 
#line 2451 
    ;
    case 61: 
#line 2452 
    ;
    case 62: 
#line 2453 
    ;
    case 63: 
#line 2454 
    ;
    
#line 2455 
    rate_section = (short)5;
    
#line 2456 
    goto ldv_57264;
    default: 
#line 2457 
    ;
    
#line 2458 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 2458 
      ;
      
#line 2458 
      tmp = preempt_count();
      
#line 2458 
      tmp_0 = preempt_count();
      
#line 2458 
      printk("\001","_rtl8812ae_phy_get_txpower_limit",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rate);
    }
    else ;
    
#line 2460 
    goto ldv_57264;
  }
  ldv_57264: 
#line 2463 
  ;
  
#line 2463 
  if ((int)band_temp == 1 && (int)rate_section == 0) {
    
#line 2464 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 2464 
      ;
      
#line 2464 
      tmp_1 = preempt_count();
      
#line 2464 
      tmp_2 = preempt_count();
      
#line 2464 
      printk("\001","_rtl8812ae_phy_get_txpower_limit",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,(int)rate);
    }
    else ;
  }
  else ;
  
#line 2469 
  if ((int)rate_section == 1) 
#line 2470 
                              bandwidth_temp = (short)0; else ;
  
#line 2475 
  if ((unsigned int)rate_section + 65534U <= 1U && ((unsigned int)band == 1U && (int)bandwidth_temp == 2)) 
    
#line 2477 
    bandwidth_temp = (short)1; else ;
  
#line 2479 
  if ((unsigned int)band == 0U) {
    char tmp_3;
    
#line 2480 
    tmp_3 = _rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt(hw,(unsigned char)0,(unsigned char)((int)channel));
    
#line 2480 
    channel_temp = (short)tmp_3;
  }
  else 
    
#line 2482 
    if ((unsigned int)band == 1U) {
      char tmp_4;
      
#line 2483 
      tmp_4 = _rtl8812ae_phy_get_chnl_idx_of_txpwr_lmt(hw,(unsigned char)1,(unsigned char)((int)channel));
      
#line 2483 
      channel_temp = (short)tmp_4;
    }
    else ;
  
#line 2488 
  if ((((int)band_temp == -1 || (int)regulation == -1) || ((int)bandwidth_temp == -1 || (int)rate_section == -1)) || (int)channel_temp == -1) {
    
#line 2490 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 2490 
      ;
      
#line 2490 
      ;
      
#line 2490 
      ;
      
#line 2490 
      ;
      
#line 2490 
      ;
      
#line 2490 
      ;
      
#line 2490 
      tmp_5 = preempt_count();
      
#line 2490 
      tmp_6 = preempt_count();
      
#line 2490 
      printk("\001","_rtl8812ae_phy_get_txpower_limit",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)band_temp,(int)regulation,(int)bandwidth_temp,(unsigned int)rf_path,(int)rate_section,(int)channel_temp);
    }
    else ;
    
#line 2494 
    __retres = (char)63;
    
#line 2494 
    goto return_label;
  }
  else ;
  
#line 2497 
  bd = (unsigned short)band_temp;
  
#line 2498 
  regu = (unsigned short)regulation;
  
#line 2499 
  bdwidth = (unsigned short)bandwidth_temp;
  
#line 2500 
  sec = (unsigned short)rate_section;
  
#line 2501 
  chnl = (unsigned short)channel_temp;
  
#line 2503 
  if ((unsigned int)band == 0U) {
    u8 i;
    
#line 2504 
    char limits[10U] = {(char)0};
    
#line 2507 
    i = (unsigned char)0U;
    
#line 2507 
    goto ldv_57314;
    ldv_57313: 
#line 2508 
    ;
    
#line 2508 
    limits[(int)i] = rtlphy->txpwr_limit_2_4g[(int)i][(int)bdwidth][(int)sec][(int)chnl][(unsigned int)rf_path];
    
#line 2507 
    i = (u8)((int)i + 1);
    ldv_57314: 
#line 2508 
    ;
    
#line 2507 
    if ((unsigned int)i <= 3U) 
#line 2509 
                               goto ldv_57313; else 
#line 2512 
                                                    goto ldv_57315;
    ldv_57315: 
#line 2513 
    ;
    
#line 2511 
    if ((int)regulation == 3) 
#line 2511 
                              power_limit = _rtl8812ae_phy_get_world_wide_limit((char *)(& limits)); else 
                                                                    
#line 2511 
                                                                    power_limit = rtlphy->txpwr_limit_2_4g[(int)regu][(int)bdwidth][(int)sec][(int)chnl][(unsigned int)rf_path];
  }
  else 
    
#line 2515 
    if ((unsigned int)band == 1U) {
      u8 i_0;
      
#line 2516 
      char limits_0[10U] = {(char)0};
      
#line 2519 
      i_0 = (unsigned char)0U;
      
#line 2519 
      goto ldv_57319;
      ldv_57318: 
#line 2520 
      ;
      
#line 2520 
      limits_0[(int)i_0] = rtlphy->txpwr_limit_5g[(int)i_0][(int)bdwidth][(int)sec][(int)chnl][(unsigned int)rf_path];
      
#line 2519 
      i_0 = (u8)((int)i_0 + 1);
      ldv_57319: 
#line 2520 
      ;
      
#line 2519 
      if ((unsigned int)i_0 <= 3U) 
#line 2521 
                                   goto ldv_57318; else 
#line 2524 
                                                        goto ldv_57320;
      ldv_57320: 
#line 2525 
      ;
      
#line 2523 
      if ((int)regulation == 3) 
#line 2523 
                                power_limit = _rtl8812ae_phy_get_world_wide_limit((char *)(& limits_0)); else 
                                                                    
#line 2523 
                                                                    power_limit = rtlphy->txpwr_limit_5g[(int)regu][(int)chnl][(int)sec][(int)chnl][(unsigned int)rf_path];
    }
    else 
      
#line 2528 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_9;
        int tmp_10;
        
#line 2528 
        tmp_9 = preempt_count();
        
#line 2528 
        tmp_10 = preempt_count();
        
#line 2528 
        printk("\001","_rtl8812ae_phy_get_txpower_limit",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0);
      }
      else ;
  
#line 2531 
  __retres = power_limit;
  return_label: 
#line 2531 
                return __retres;
}


#line 2534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static char _rtl8821ae_phy_get_txpower_by_rate(struct ieee80211_hw *hw, u8 band, u8 path, u8 rate)
{
  u8 rate_section;
  u8 tx_num;
  char tmp;
  
#line 2537 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2538 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 2539 
  u8 shift = (unsigned char)0U;
  
#line 2540 
  char tx_pwr_diff = (char)0;
  
#line 2541 
  char limit = (char)0;
  
#line 2543 
  tmp = _rtl8821ae_phy_get_ratesection_intxpower_byrate((unsigned char)((int)path),(unsigned char)((int)rate));
  
#line 2543 
  rate_section = (unsigned char)tmp;
  
#line 2544 
  tx_num = (unsigned char)3U;
  
#line 2546 
  if ((unsigned int)tx_num == 3U) 
    
#line 2547 
    if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 200U <= 7U) 
      
#line 2549 
      tx_num = (unsigned char)1U; else 
#line 2551 
                                       tx_num = (unsigned char)0U;
  else ;
  
#line 2554 
  switch ((int)rate) {
    case 0: 
#line 2555 
    ;
    case 4: 
#line 2556 
    ;
    case 8: 
#line 2557 
    ;
    case 12: 
#line 2558 
    ;
    case 16: 
#line 2559 
    ;
    case 20: 
#line 2560 
    ;
    case 24: 
#line 2561 
    ;
    case 44: 
#line 2562 
    ;
    case 48: 
#line 2563 
    ;
    case 52: 
#line 2564 
    ;
    case 56: 
#line 2565 
    ;
    case 60: 
#line 2566 
    ;
    
#line 2567 
    shift = (unsigned char)0U;
    
#line 2568 
    goto ldv_57346;
    case 1: 
#line 2569 
    ;
    case 5: 
#line 2570 
    ;
    case 9: 
#line 2571 
    ;
    case 13: 
#line 2572 
    ;
    case 17: 
#line 2573 
    ;
    case 21: 
#line 2574 
    ;
    case 25: 
#line 2575 
    ;
    case 45: 
#line 2576 
    ;
    case 49: 
#line 2577 
    ;
    case 53: 
#line 2578 
    ;
    case 57: 
#line 2579 
    ;
    case 61: 
#line 2580 
    ;
    
#line 2581 
    shift = (unsigned char)8U;
    
#line 2582 
    goto ldv_57346;
    case 2: 
#line 2583 
    ;
    case 6: 
#line 2584 
    ;
    case 10: 
#line 2585 
    ;
    case 14: 
#line 2586 
    ;
    case 18: 
#line 2587 
    ;
    case 22: 
#line 2588 
    ;
    case 26: 
#line 2589 
    ;
    case 46: 
#line 2590 
    ;
    case 50: 
#line 2591 
    ;
    case 54: 
#line 2592 
    ;
    case 58: 
#line 2593 
    ;
    case 62: 
#line 2594 
    ;
    
#line 2595 
    shift = (unsigned char)16U;
    
#line 2596 
    goto ldv_57346;
    case 3: 
#line 2597 
    ;
    case 7: 
#line 2598 
    ;
    case 11: 
#line 2599 
    ;
    case 15: 
#line 2600 
    ;
    case 19: 
#line 2601 
    ;
    case 23: 
#line 2602 
    ;
    case 27: 
#line 2603 
    ;
    case 47: 
#line 2604 
    ;
    case 51: 
#line 2605 
    ;
    case 55: 
#line 2606 
    ;
    case 59: 
#line 2607 
    ;
    case 63: 
#line 2608 
    ;
    
#line 2609 
    shift = (unsigned char)24U;
    
#line 2610 
    goto ldv_57346;
    default: 
#line 2611 
    ;
    
#line 2613 
    goto ldv_57346;
  }
  ldv_57346: 
#line 2616 
  ;
  
#line 2616 
  tx_pwr_diff = (char)(rtlphy->tx_power_by_rate_offset[(int)band][(int)path][(int)tx_num][(int)rate_section] >> (int)shift);
  
#line 2620 
  if ((unsigned int)rtlpriv->efuse.eeprom_regulatory != 2U) {
    
#line 2621 
    limit = _rtl8812ae_phy_get_txpower_limit(hw,(unsigned char)((int)band),(enum ht_channel_width)rtlphy->current_chan_bw,(enum radio_path)path,(unsigned char)((int)rate),(unsigned char)((int)rtlphy->current_channel));
    
#line 2625 
    if (((unsigned int)rate + 204U <= 1U || (unsigned int)rate == 62U) || (unsigned int)rate == 63U) {
      
#line 2627 
      if ((int)limit < 0) {
        
#line 2628 
        if ((int)tx_pwr_diff < - ((int)limit)) 
#line 2629 
                                               tx_pwr_diff = (char)(- ((int)limit)); else ;
      }
      else ;
    }
    else 
      
#line 2632 
      if ((int)limit < 0) 
#line 2633 
                          tx_pwr_diff = limit;
      else 
        
#line 2635 
        if ((int)limit < (int)tx_pwr_diff) 
#line 2635 
                                           tx_pwr_diff = limit; else 
                                                                  
#line 2635 
                                                                  tx_pwr_diff = tx_pwr_diff;
    
#line 2637 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 2637 
      ;
      
#line 2637 
      ;
      
#line 2637 
      tmp_0 = preempt_count();
      
#line 2637 
      tmp_1 = preempt_count();
      
#line 2637 
      printk("\001","_rtl8821ae_phy_get_txpower_by_rate",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,(int)limit,(int)tx_pwr_diff);
    }
    else ;
  }
  else ;
  
#line 2642 
  return tx_pwr_diff;
}


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u8 _rtl8821ae_get_txpower_index(struct ieee80211_hw *hw, u8 path, u8 rate, u8 bandwidth, u8 channel)
{
  
#line 2648 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2649 
  struct rtl_hal *rtlhal = & rtlpriv->rtlhal;
  
#line 2650 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 2651 
  u8 index = (unsigned char)((unsigned int)channel + 255U);
  
#line 2652 
  u8 txpower = (unsigned char)0U;
  
#line 2653 
  bool in_24g = (_Bool)0;
  
#line 2654 
  char powerdiff_byrate = (char)0;
  
#line 2656 
  if ((rtlhal->current_bandtype == (unsigned int)BAND_ON_2_4G && (unsigned int)channel + 255U > 13U) || (rtlhal->current_bandtype == (unsigned int)BAND_ON_5G && (unsigned int)channel <= 14U)) {
    
#line 2659 
    index = (unsigned char)0U;
    
#line 2660 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 2660 
      tmp = preempt_count();
      
#line 2660 
      tmp_0 = preempt_count();
      
#line 2660 
      printk("\001","_rtl8821ae_get_txpower_index",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
  }
  else ;
  
#line 2664 
  in_24g = _rtl8821ae_phy_get_chnl_index((unsigned char)((int)channel),& index);
  
#line 2665 
  if ((int)in_24g != 0) {
    
#line 2666 
    if ((unsigned int)rate <= 3U) 
#line 2667 
                                  txpower = rtlefuse->txpwrlevel_cck[(int)path][(int)index];
    else 
      
#line 2668 
      if ((unsigned int)rate > 3U) 
#line 2669 
                                   txpower = rtlefuse->txpwrlevel_ht40_1s[(int)path][(int)index];
      else 
        
#line 2671 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_1;
          int tmp_2;
          
#line 2671 
          tmp_1 = preempt_count();
          
#line 2671 
          tmp_2 = preempt_count();
          
#line 2671 
          printk("\001","_rtl8821ae_get_txpower_index",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
        }
        else ;
    
#line 2673 
    if ((unsigned int)rate + 252U <= 7U) 
#line 2675 
                                         txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_legacyhtdiff[(int)path][0]) + (int)txpower); else ;
    
#line 2677 
    if ((unsigned int)bandwidth == 0U) {
      
#line 2678 
      if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
        
#line 2680 
        txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht20diff[(int)path][0]) + (int)txpower); else ;
      
#line 2681 
      if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
        
#line 2683 
        txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht20diff[(int)path][1]) + (int)txpower); else ;
    }
    else 
      
#line 2684 
      if ((unsigned int)bandwidth == 1U) {
        
#line 2685 
        if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
          
#line 2687 
          txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht40diff[(int)path][0]) + (int)txpower); else ;
        
#line 2688 
        if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
          
#line 2690 
          txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht40diff[(int)path][1]) + (int)txpower); else ;
      }
      else 
        
#line 2691 
        if ((unsigned int)bandwidth == 2U) {
          
#line 2692 
          if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
            
#line 2695 
            txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht40diff[(int)path][0]) + (int)txpower); else ;
          
#line 2696 
          if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
            
#line 2699 
            txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_ht40diff[(int)path][1]) + (int)txpower); else ;
        }
        else ;
  }
  else {
    
#line 2702 
    if ((unsigned int)rate > 3U) 
#line 2703 
                                 txpower = rtlefuse->txpwr_5g_bw40base[(int)path][(int)index];
    else 
      
#line 2705 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 131072ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 2705 
        tmp_3 = preempt_count();
        
#line 2705 
        tmp_4 = preempt_count();
        
#line 2705 
        printk("\001","_rtl8821ae_get_txpower_index",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
      }
      else ;
    
#line 2708 
    if ((unsigned int)rate + 252U <= 7U) 
#line 2710 
                                         txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_5g_ofdmdiff[(int)path][0]) + (int)txpower); else ;
    
#line 2712 
    if ((unsigned int)bandwidth == 0U) {
      
#line 2713 
      if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
        
#line 2716 
        txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_5g_bw20diff[(int)path][0]) + (int)txpower); else ;
      
#line 2717 
      if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
        
#line 2720 
        txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_5g_bw20diff[(int)path][1]) + (int)txpower); else ;
    }
    else 
      
#line 2721 
      if ((unsigned int)bandwidth == 1U) {
        
#line 2722 
        if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
          
#line 2725 
          txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_5g_bw40diff[(int)path][0]) + (int)txpower); else ;
        
#line 2726 
        if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
          
#line 2729 
          txpower = (unsigned char)((int)((unsigned char)rtlefuse->txpwr_5g_bw40diff[(int)path][1]) + (int)txpower); else ;
      }
      else 
        
#line 2730 
        if ((unsigned int)bandwidth == 2U) {
          u8 i;
          
#line 2731 
          u8 channel_5g_80m[7U] = {(unsigned char)42U, (unsigned char)58U, (unsigned char)106U, (unsigned char)122U, (unsigned char)138U, (unsigned char)155U, (unsigned char)171U};
          
#line 2736 
          i = (unsigned char)0U;
          
#line 2736 
          goto ldv_57403;
          ldv_57402: 
#line 2737 
          ;
          
#line 2737 
          if ((int)channel_5g_80m[(int)i] == (int)channel) 
#line 2738 
                                                           index = i; else ;
          
#line 2736 
          i = (u8)((int)i + 1);
          ldv_57403: 
#line 2737 
          ;
          
#line 2736 
          if ((unsigned int)i <= 6U) 
#line 2738 
                                     goto ldv_57402; else 
#line 2741 
                                                          goto ldv_57404;
          ldv_57404: 
#line 2742 
          ;
          
#line 2740 
          if ((unsigned int)rate + 244U <= 15U || (unsigned int)rate + 212U <= 19U) 
            
#line 2743 
            txpower = (unsigned char)((int)rtlefuse->txpwr_5g_bw80base[(int)path][(int)index] + (int)((unsigned char)rtlefuse->txpwr_5g_bw80diff[(int)path][0])); else ;
          
#line 2745 
          if ((unsigned int)rate + 236U <= 7U || (unsigned int)rate + 202U <= 9U) 
            
#line 2748 
            txpower = (unsigned char)(((int)rtlefuse->txpwr_5g_bw80base[(int)path][(int)index] + (int)((unsigned char)rtlefuse->txpwr_5g_bw80diff[(int)path][0])) + (int)((unsigned char)rtlefuse->txpwr_5g_bw80diff[(int)path][1])); else ;
        }
        else ;
  }
  
#line 2753 
  if ((unsigned int)rtlefuse->eeprom_regulatory != 2U) 
#line 2754 
                                                       powerdiff_byrate = _rtl8821ae_phy_get_txpower_by_rate(hw,(unsigned char)(! in_24g),(unsigned char)((int)path),(unsigned char)((int)rate)); else ;
  
#line 2758 
  if (((unsigned int)rate + 204U <= 1U || (unsigned int)rate == 62U) || (unsigned int)rate == 63U) 
    
#line 2760 
    txpower = (unsigned char)((int)txpower - (int)((unsigned char)powerdiff_byrate)); else 
                                                                    
#line 2762 
                                                                    txpower = (unsigned char)((int)txpower + (int)((unsigned char)powerdiff_byrate));
  
#line 2764 
  if ((unsigned int)rate > 3U) 
#line 2765 
                               txpower = (unsigned char)((int)((unsigned char)rtlpriv->dm.remnant_ofdm_swing_idx[(int)path]) + (int)txpower); else 
                                                                    
#line 2767 
                                                                    txpower = (unsigned char)((int)((unsigned char)rtlpriv->dm.remnant_cck_idx) + (int)txpower);
  
#line 2769 
  if ((unsigned int)txpower > 63U) 
#line 2770 
                                   txpower = (unsigned char)63U; else ;
  
#line 2772 
  return txpower;
}


#line 2775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_set_txpower_index(struct ieee80211_hw *hw, u8 power_index, u8 path, u8 rate)
{
  
#line 2778 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 2780 
  if ((unsigned int)path == 0U) {
    
#line 2781 
    switch ((int)rate) {
      case 0: 
#line 2782 
      ;
      
#line 2783 
      rtl_set_bbreg(hw,3104U,255U,(unsigned int)power_index);
      
#line 2785 
      goto ldv_57413;
      case 1: 
#line 2786 
      ;
      
#line 2787 
      rtl_set_bbreg(hw,3104U,65280U,(unsigned int)power_index);
      
#line 2789 
      goto ldv_57413;
      case 2: 
#line 2790 
      ;
      
#line 2791 
      rtl_set_bbreg(hw,3104U,16711680U,(unsigned int)power_index);
      
#line 2793 
      goto ldv_57413;
      case 3: 
#line 2794 
      ;
      
#line 2795 
      rtl_set_bbreg(hw,3104U,4278190080U,(unsigned int)power_index);
      
#line 2797 
      goto ldv_57413;
      case 4: 
#line 2798 
      ;
      
#line 2799 
      rtl_set_bbreg(hw,3108U,255U,(unsigned int)power_index);
      
#line 2801 
      goto ldv_57413;
      case 5: 
#line 2802 
      ;
      
#line 2803 
      rtl_set_bbreg(hw,3108U,65280U,(unsigned int)power_index);
      
#line 2805 
      goto ldv_57413;
      case 6: 
#line 2806 
      ;
      
#line 2807 
      rtl_set_bbreg(hw,3108U,16711680U,(unsigned int)power_index);
      
#line 2809 
      goto ldv_57413;
      case 7: 
#line 2810 
      ;
      
#line 2811 
      rtl_set_bbreg(hw,3108U,4278190080U,(unsigned int)power_index);
      
#line 2813 
      goto ldv_57413;
      case 8: 
#line 2814 
      ;
      
#line 2815 
      rtl_set_bbreg(hw,3112U,255U,(unsigned int)power_index);
      
#line 2817 
      goto ldv_57413;
      case 9: 
#line 2818 
      ;
      
#line 2819 
      rtl_set_bbreg(hw,3112U,65280U,(unsigned int)power_index);
      
#line 2821 
      goto ldv_57413;
      case 10: 
#line 2822 
      ;
      
#line 2823 
      rtl_set_bbreg(hw,3112U,16711680U,(unsigned int)power_index);
      
#line 2825 
      goto ldv_57413;
      case 11: 
#line 2826 
      ;
      
#line 2827 
      rtl_set_bbreg(hw,3112U,4278190080U,(unsigned int)power_index);
      
#line 2829 
      goto ldv_57413;
      case 12: 
#line 2830 
      ;
      
#line 2831 
      rtl_set_bbreg(hw,3116U,255U,(unsigned int)power_index);
      
#line 2833 
      goto ldv_57413;
      case 13: 
#line 2834 
      ;
      
#line 2835 
      rtl_set_bbreg(hw,3116U,65280U,(unsigned int)power_index);
      
#line 2837 
      goto ldv_57413;
      case 14: 
#line 2838 
      ;
      
#line 2839 
      rtl_set_bbreg(hw,3116U,16711680U,(unsigned int)power_index);
      
#line 2841 
      goto ldv_57413;
      case 15: 
#line 2842 
      ;
      
#line 2843 
      rtl_set_bbreg(hw,3116U,4278190080U,(unsigned int)power_index);
      
#line 2845 
      goto ldv_57413;
      case 16: 
#line 2846 
      ;
      
#line 2847 
      rtl_set_bbreg(hw,3120U,255U,(unsigned int)power_index);
      
#line 2849 
      goto ldv_57413;
      case 17: 
#line 2850 
      ;
      
#line 2851 
      rtl_set_bbreg(hw,3120U,65280U,(unsigned int)power_index);
      
#line 2853 
      goto ldv_57413;
      case 18: 
#line 2854 
      ;
      
#line 2855 
      rtl_set_bbreg(hw,3120U,16711680U,(unsigned int)power_index);
      
#line 2857 
      goto ldv_57413;
      case 19: 
#line 2858 
      ;
      
#line 2859 
      rtl_set_bbreg(hw,3120U,4278190080U,(unsigned int)power_index);
      
#line 2861 
      goto ldv_57413;
      case 20: 
#line 2862 
      ;
      
#line 2863 
      rtl_set_bbreg(hw,3124U,255U,(unsigned int)power_index);
      
#line 2865 
      goto ldv_57413;
      case 21: 
#line 2866 
      ;
      
#line 2867 
      rtl_set_bbreg(hw,3124U,65280U,(unsigned int)power_index);
      
#line 2869 
      goto ldv_57413;
      case 22: 
#line 2870 
      ;
      
#line 2871 
      rtl_set_bbreg(hw,3124U,16711680U,(unsigned int)power_index);
      
#line 2873 
      goto ldv_57413;
      case 23: 
#line 2874 
      ;
      
#line 2875 
      rtl_set_bbreg(hw,3124U,4278190080U,(unsigned int)power_index);
      
#line 2877 
      goto ldv_57413;
      case 24: 
#line 2878 
      ;
      
#line 2879 
      rtl_set_bbreg(hw,3128U,255U,(unsigned int)power_index);
      
#line 2881 
      goto ldv_57413;
      case 25: 
#line 2882 
      ;
      
#line 2883 
      rtl_set_bbreg(hw,3128U,65280U,(unsigned int)power_index);
      
#line 2885 
      goto ldv_57413;
      case 26: 
#line 2886 
      ;
      
#line 2887 
      rtl_set_bbreg(hw,3128U,16711680U,(unsigned int)power_index);
      
#line 2889 
      goto ldv_57413;
      case 27: 
#line 2890 
      ;
      
#line 2891 
      rtl_set_bbreg(hw,3128U,4278190080U,(unsigned int)power_index);
      
#line 2893 
      goto ldv_57413;
      case 44: 
#line 2894 
      ;
      
#line 2895 
      rtl_set_bbreg(hw,3132U,255U,(unsigned int)power_index);
      
#line 2897 
      goto ldv_57413;
      case 45: 
#line 2898 
      ;
      
#line 2899 
      rtl_set_bbreg(hw,3132U,65280U,(unsigned int)power_index);
      
#line 2901 
      goto ldv_57413;
      case 46: 
#line 2902 
      ;
      
#line 2903 
      rtl_set_bbreg(hw,3132U,16711680U,(unsigned int)power_index);
      
#line 2905 
      goto ldv_57413;
      case 47: 
#line 2906 
      ;
      
#line 2907 
      rtl_set_bbreg(hw,3132U,4278190080U,(unsigned int)power_index);
      
#line 2909 
      goto ldv_57413;
      case 48: 
#line 2910 
      ;
      
#line 2911 
      rtl_set_bbreg(hw,3136U,255U,(unsigned int)power_index);
      
#line 2913 
      goto ldv_57413;
      case 49: 
#line 2914 
      ;
      
#line 2915 
      rtl_set_bbreg(hw,3136U,65280U,(unsigned int)power_index);
      
#line 2917 
      goto ldv_57413;
      case 50: 
#line 2918 
      ;
      
#line 2919 
      rtl_set_bbreg(hw,3136U,16711680U,(unsigned int)power_index);
      
#line 2921 
      goto ldv_57413;
      case 51: 
#line 2922 
      ;
      
#line 2923 
      rtl_set_bbreg(hw,3136U,4278190080U,(unsigned int)power_index);
      
#line 2925 
      goto ldv_57413;
      case 52: 
#line 2926 
      ;
      
#line 2927 
      rtl_set_bbreg(hw,3140U,255U,(unsigned int)power_index);
      
#line 2929 
      goto ldv_57413;
      case 53: 
#line 2930 
      ;
      
#line 2931 
      rtl_set_bbreg(hw,3140U,65280U,(unsigned int)power_index);
      
#line 2933 
      goto ldv_57413;
      case 54: 
#line 2934 
      ;
      
#line 2935 
      rtl_set_bbreg(hw,3140U,16711680U,(unsigned int)power_index);
      
#line 2937 
      goto ldv_57413;
      case 55: 
#line 2938 
      ;
      
#line 2939 
      rtl_set_bbreg(hw,3140U,4278190080U,(unsigned int)power_index);
      
#line 2941 
      goto ldv_57413;
      case 56: 
#line 2942 
      ;
      
#line 2943 
      rtl_set_bbreg(hw,3144U,255U,(unsigned int)power_index);
      
#line 2945 
      goto ldv_57413;
      case 57: 
#line 2946 
      ;
      
#line 2947 
      rtl_set_bbreg(hw,3144U,65280U,(unsigned int)power_index);
      
#line 2949 
      goto ldv_57413;
      case 58: 
#line 2950 
      ;
      
#line 2951 
      rtl_set_bbreg(hw,3144U,16711680U,(unsigned int)power_index);
      
#line 2953 
      goto ldv_57413;
      case 59: 
#line 2954 
      ;
      
#line 2955 
      rtl_set_bbreg(hw,3144U,4278190080U,(unsigned int)power_index);
      
#line 2957 
      goto ldv_57413;
      case 60: 
#line 2958 
      ;
      
#line 2959 
      rtl_set_bbreg(hw,3148U,255U,(unsigned int)power_index);
      
#line 2961 
      goto ldv_57413;
      case 61: 
#line 2962 
      ;
      
#line 2963 
      rtl_set_bbreg(hw,3148U,65280U,(unsigned int)power_index);
      
#line 2965 
      goto ldv_57413;
      case 62: 
#line 2966 
      ;
      
#line 2967 
      rtl_set_bbreg(hw,3148U,16711680U,(unsigned int)power_index);
      
#line 2969 
      goto ldv_57413;
      case 63: 
#line 2970 
      ;
      
#line 2971 
      rtl_set_bbreg(hw,3148U,4278190080U,(unsigned int)power_index);
      
#line 2973 
      goto ldv_57413;
      default: 
#line 2974 
      ;
      
#line 2975 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp;
        int tmp_0;
        
#line 2975 
        tmp = preempt_count();
        
#line 2975 
        tmp_0 = preempt_count();
        
#line 2975 
        printk("\001","_rtl8821ae_phy_set_txpower_index",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
      }
      else ;
      
#line 2977 
      goto ldv_57413;
    }
    ldv_57413: 
#line 2979 
    ;
  }
  else 
    
#line 2979 
    if ((unsigned int)path == 1U) {
      
#line 2980 
      switch ((int)rate) {
        case 0: 
#line 2981 
        ;
        
#line 2982 
        rtl_set_bbreg(hw,3616U,255U,(unsigned int)power_index);
        
#line 2984 
        goto ldv_57464;
        case 1: 
#line 2985 
        ;
        
#line 2986 
        rtl_set_bbreg(hw,3616U,65280U,(unsigned int)power_index);
        
#line 2988 
        goto ldv_57464;
        case 2: 
#line 2989 
        ;
        
#line 2990 
        rtl_set_bbreg(hw,3616U,16711680U,(unsigned int)power_index);
        
#line 2992 
        goto ldv_57464;
        case 3: 
#line 2993 
        ;
        
#line 2994 
        rtl_set_bbreg(hw,3616U,4278190080U,(unsigned int)power_index);
        
#line 2996 
        goto ldv_57464;
        case 4: 
#line 2997 
        ;
        
#line 2998 
        rtl_set_bbreg(hw,3620U,255U,(unsigned int)power_index);
        
#line 3000 
        goto ldv_57464;
        case 5: 
#line 3001 
        ;
        
#line 3002 
        rtl_set_bbreg(hw,3620U,65280U,(unsigned int)power_index);
        
#line 3004 
        goto ldv_57464;
        case 6: 
#line 3005 
        ;
        
#line 3006 
        rtl_set_bbreg(hw,3620U,16711680U,(unsigned int)power_index);
        
#line 3008 
        goto ldv_57464;
        case 7: 
#line 3009 
        ;
        
#line 3010 
        rtl_set_bbreg(hw,3620U,4278190080U,(unsigned int)power_index);
        
#line 3012 
        goto ldv_57464;
        case 8: 
#line 3013 
        ;
        
#line 3014 
        rtl_set_bbreg(hw,3624U,255U,(unsigned int)power_index);
        
#line 3016 
        goto ldv_57464;
        case 9: 
#line 3017 
        ;
        
#line 3018 
        rtl_set_bbreg(hw,3624U,65280U,(unsigned int)power_index);
        
#line 3020 
        goto ldv_57464;
        case 10: 
#line 3021 
        ;
        
#line 3022 
        rtl_set_bbreg(hw,3624U,16711680U,(unsigned int)power_index);
        
#line 3024 
        goto ldv_57464;
        case 11: 
#line 3025 
        ;
        
#line 3026 
        rtl_set_bbreg(hw,3624U,4278190080U,(unsigned int)power_index);
        
#line 3028 
        goto ldv_57464;
        case 12: 
#line 3029 
        ;
        
#line 3030 
        rtl_set_bbreg(hw,3628U,255U,(unsigned int)power_index);
        
#line 3032 
        goto ldv_57464;
        case 13: 
#line 3033 
        ;
        
#line 3034 
        rtl_set_bbreg(hw,3628U,65280U,(unsigned int)power_index);
        
#line 3036 
        goto ldv_57464;
        case 14: 
#line 3037 
        ;
        
#line 3038 
        rtl_set_bbreg(hw,3628U,16711680U,(unsigned int)power_index);
        
#line 3040 
        goto ldv_57464;
        case 15: 
#line 3041 
        ;
        
#line 3042 
        rtl_set_bbreg(hw,3628U,4278190080U,(unsigned int)power_index);
        
#line 3044 
        goto ldv_57464;
        case 16: 
#line 3045 
        ;
        
#line 3046 
        rtl_set_bbreg(hw,3632U,255U,(unsigned int)power_index);
        
#line 3048 
        goto ldv_57464;
        case 17: 
#line 3049 
        ;
        
#line 3050 
        rtl_set_bbreg(hw,3632U,65280U,(unsigned int)power_index);
        
#line 3052 
        goto ldv_57464;
        case 18: 
#line 3053 
        ;
        
#line 3054 
        rtl_set_bbreg(hw,3632U,16711680U,(unsigned int)power_index);
        
#line 3056 
        goto ldv_57464;
        case 19: 
#line 3057 
        ;
        
#line 3058 
        rtl_set_bbreg(hw,3632U,4278190080U,(unsigned int)power_index);
        
#line 3060 
        goto ldv_57464;
        case 20: 
#line 3061 
        ;
        
#line 3062 
        rtl_set_bbreg(hw,3636U,255U,(unsigned int)power_index);
        
#line 3064 
        goto ldv_57464;
        case 21: 
#line 3065 
        ;
        
#line 3066 
        rtl_set_bbreg(hw,3636U,65280U,(unsigned int)power_index);
        
#line 3068 
        goto ldv_57464;
        case 22: 
#line 3069 
        ;
        
#line 3070 
        rtl_set_bbreg(hw,3636U,16711680U,(unsigned int)power_index);
        
#line 3072 
        goto ldv_57464;
        case 23: 
#line 3073 
        ;
        
#line 3074 
        rtl_set_bbreg(hw,3636U,4278190080U,(unsigned int)power_index);
        
#line 3076 
        goto ldv_57464;
        case 24: 
#line 3077 
        ;
        
#line 3078 
        rtl_set_bbreg(hw,3640U,255U,(unsigned int)power_index);
        
#line 3080 
        goto ldv_57464;
        case 25: 
#line 3081 
        ;
        
#line 3082 
        rtl_set_bbreg(hw,3640U,65280U,(unsigned int)power_index);
        
#line 3084 
        goto ldv_57464;
        case 26: 
#line 3085 
        ;
        
#line 3086 
        rtl_set_bbreg(hw,3640U,16711680U,(unsigned int)power_index);
        
#line 3088 
        goto ldv_57464;
        case 27: 
#line 3089 
        ;
        
#line 3090 
        rtl_set_bbreg(hw,3640U,4278190080U,(unsigned int)power_index);
        
#line 3092 
        goto ldv_57464;
        case 44: 
#line 3093 
        ;
        
#line 3094 
        rtl_set_bbreg(hw,3644U,255U,(unsigned int)power_index);
        
#line 3096 
        goto ldv_57464;
        case 45: 
#line 3097 
        ;
        
#line 3098 
        rtl_set_bbreg(hw,3644U,65280U,(unsigned int)power_index);
        
#line 3100 
        goto ldv_57464;
        case 46: 
#line 3101 
        ;
        
#line 3102 
        rtl_set_bbreg(hw,3644U,16711680U,(unsigned int)power_index);
        
#line 3104 
        goto ldv_57464;
        case 47: 
#line 3105 
        ;
        
#line 3106 
        rtl_set_bbreg(hw,3644U,4278190080U,(unsigned int)power_index);
        
#line 3108 
        goto ldv_57464;
        case 48: 
#line 3109 
        ;
        
#line 3110 
        rtl_set_bbreg(hw,3648U,255U,(unsigned int)power_index);
        
#line 3112 
        goto ldv_57464;
        case 49: 
#line 3113 
        ;
        
#line 3114 
        rtl_set_bbreg(hw,3648U,65280U,(unsigned int)power_index);
        
#line 3116 
        goto ldv_57464;
        case 50: 
#line 3117 
        ;
        
#line 3118 
        rtl_set_bbreg(hw,3648U,16711680U,(unsigned int)power_index);
        
#line 3120 
        goto ldv_57464;
        case 51: 
#line 3121 
        ;
        
#line 3122 
        rtl_set_bbreg(hw,3648U,4278190080U,(unsigned int)power_index);
        
#line 3124 
        goto ldv_57464;
        case 52: 
#line 3125 
        ;
        
#line 3126 
        rtl_set_bbreg(hw,3652U,255U,(unsigned int)power_index);
        
#line 3128 
        goto ldv_57464;
        case 53: 
#line 3129 
        ;
        
#line 3130 
        rtl_set_bbreg(hw,3652U,65280U,(unsigned int)power_index);
        
#line 3132 
        goto ldv_57464;
        case 54: 
#line 3133 
        ;
        
#line 3134 
        rtl_set_bbreg(hw,3652U,16711680U,(unsigned int)power_index);
        
#line 3136 
        goto ldv_57464;
        case 55: 
#line 3137 
        ;
        
#line 3138 
        rtl_set_bbreg(hw,3652U,4278190080U,(unsigned int)power_index);
        
#line 3140 
        goto ldv_57464;
        case 56: 
#line 3141 
        ;
        
#line 3142 
        rtl_set_bbreg(hw,3656U,255U,(unsigned int)power_index);
        
#line 3144 
        goto ldv_57464;
        case 57: 
#line 3145 
        ;
        
#line 3146 
        rtl_set_bbreg(hw,3656U,65280U,(unsigned int)power_index);
        
#line 3148 
        goto ldv_57464;
        case 58: 
#line 3149 
        ;
        
#line 3150 
        rtl_set_bbreg(hw,3656U,16711680U,(unsigned int)power_index);
        
#line 3152 
        goto ldv_57464;
        case 59: 
#line 3153 
        ;
        
#line 3154 
        rtl_set_bbreg(hw,3656U,4278190080U,(unsigned int)power_index);
        
#line 3156 
        goto ldv_57464;
        case 60: 
#line 3157 
        ;
        
#line 3158 
        rtl_set_bbreg(hw,3660U,255U,(unsigned int)power_index);
        
#line 3160 
        goto ldv_57464;
        case 61: 
#line 3161 
        ;
        
#line 3162 
        rtl_set_bbreg(hw,3660U,65280U,(unsigned int)power_index);
        
#line 3164 
        goto ldv_57464;
        case 62: 
#line 3165 
        ;
        
#line 3166 
        rtl_set_bbreg(hw,3660U,16711680U,(unsigned int)power_index);
        
#line 3168 
        goto ldv_57464;
        case 63: 
#line 3169 
        ;
        
#line 3170 
        rtl_set_bbreg(hw,3660U,4278190080U,(unsigned int)power_index);
        
#line 3172 
        goto ldv_57464;
        default: 
#line 3173 
        ;
        
#line 3174 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_1;
          int tmp_2;
          
#line 3174 
          tmp_1 = preempt_count();
          
#line 3174 
          tmp_2 = preempt_count();
          
#line 3174 
          printk("\001","_rtl8821ae_phy_set_txpower_index",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
        }
        else ;
        
#line 3176 
        goto ldv_57464;
      }
      ldv_57464: 
#line 3178 
      ;
    }
    else 
      
#line 3179 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 65536ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 3179 
        tmp_3 = preempt_count();
        
#line 3179 
        tmp_4 = preempt_count();
        
#line 3179 
        printk("\001","_rtl8821ae_phy_set_txpower_index",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
      }
      else ;
  
#line 3180 
  return;
}


#line 3184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_set_txpower_level_by_path(struct ieee80211_hw *hw, u8 *array, u8 path, u8 channel, u8 size)
{
  u8 i;
  u8 power_index;
  
#line 3188 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3189 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3193 
  i = (unsigned char)0U;
  
#line 3193 
  goto ldv_57525;
  ldv_57524: 
#line 3194 
  ;
  
#line 3194 
  power_index = _rtl8821ae_get_txpower_index(hw,(unsigned char)((int)path),(unsigned char)((int)*(array + (int)i)),(unsigned char)((int)rtlphy->current_chan_bw),(unsigned char)((int)channel));
  
#line 3198 
  _rtl8821ae_phy_set_txpower_index(hw,(unsigned char)((int)power_index),(unsigned char)((int)path),(unsigned char)((int)*(array + (int)i)));
  
#line 3193 
  i = (u8)((int)i + 1);
  ldv_57525: 
#line 3194 
  ;
  
#line 3193 
  if ((int)i < (int)size) 
#line 3195 
                          goto ldv_57524; else 
#line 3198 
                                               goto ldv_57526;
  ldv_57526: 
#line 3199 
  ;
  
#line 3200 
  return;
}


#line 3203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_txpower_training_by_path(struct ieee80211_hw *hw, u8 bw, u8 channel, u8 path)
{
  u8 i;
  u32 power_level;
  u32 data;
  u32 offset;
  unsigned int tmp_1;
  
#line 3206 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3207 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3212 
  if ((int)rtlphy->num_total_rfpath <= (int)path) 
#line 3213 
                                                  goto return_label; else ;
  
#line 3215 
  data = 0U;
  
#line 3216 
  if ((unsigned int)path == 0U) {
    u8 tmp;
    
#line 3218 
    tmp = _rtl8821ae_get_txpower_index(hw,(unsigned char)0,(unsigned char)19,(unsigned char)((int)bw),(unsigned char)((int)channel));
    
#line 3217 
    power_level = (unsigned int)tmp;
    
#line 3220 
    offset = 3156U;
  }
  else {
    u8 tmp_0;
    
#line 3223 
    tmp_0 = _rtl8821ae_get_txpower_index(hw,(unsigned char)1,(unsigned char)19,(unsigned char)((int)bw),(unsigned char)((int)channel));
    
#line 3222 
    power_level = (unsigned int)tmp_0;
    
#line 3225 
    offset = 3668U;
  }
  
#line 3228 
  i = (unsigned char)0U;
  
#line 3228 
  goto ldv_57540;
  ldv_57539: 
#line 3229 
  ;
  
#line 3229 
  if ((unsigned int)i == 0U) 
#line 3230 
                             power_level += 4294967286U;
  else 
    
#line 3231 
    if ((unsigned int)i == 1U) 
#line 3232 
                               power_level += 4294967288U; else 
#line 3234 
                                                                power_level += 4294967290U;
  
#line 3236 
  if (2U > power_level) 
#line 3236 
                        tmp_1 = 2U; else 
#line 3236 
                                         tmp_1 = power_level;
  
#line 3236 
  data = (tmp_1 << (int)i * 8) | data;
  
#line 3228 
  i = (u8)((int)i + 1);
  ldv_57540: 
#line 3229 
  ;
  
#line 3228 
  if ((unsigned int)i <= 2U) 
#line 3230 
                             goto ldv_57539; else 
#line 3233 
                                                  goto ldv_57541;
  ldv_57541: 
#line 3234 
  ;
  
#line 3238 
  rtl_set_bbreg(hw,offset,16777215U,data);
  return_label: 
#line 3239 
                return;
}


#line 3241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_txpower_level_by_path(struct ieee80211_hw *hw, u8 channel, u8 path)
{
  
#line 3245 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3246 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3247 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3248 
  u8 cck_rates[4U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)2U, (unsigned char)3U};
  
#line 3250 
  u8 sizes_of_cck_retes = (unsigned char)4U;
  
#line 3251 
  u8 ofdm_rates[8U] = {(unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U};
  
#line 3254 
  u8 sizes_of_ofdm_retes = (unsigned char)8U;
  
#line 3255 
  u8 ht_rates_1t[8U] = {(unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)15U, (unsigned char)16U, (unsigned char)17U, (unsigned char)18U, (unsigned char)19U};
  
#line 3258 
  u8 sizes_of_ht_retes_1t = (unsigned char)8U;
  
#line 3259 
  u8 ht_rates_2t[8U] = {(unsigned char)20U, (unsigned char)21U, (unsigned char)22U, (unsigned char)23U, (unsigned char)24U, (unsigned char)25U, (unsigned char)26U, (unsigned char)27U};
  
#line 3263 
  u8 sizes_of_ht_retes_2t = (unsigned char)8U;
  
#line 3264 
  u8 vht_rates_1t[10U] = {(unsigned char)44U, (unsigned char)45U, (unsigned char)46U, (unsigned char)47U, (unsigned char)48U, (unsigned char)49U, (unsigned char)50U, (unsigned char)51U, (unsigned char)52U, (unsigned char)53U};
  
#line 3269 
  u8 vht_rates_2t[10U] = {(unsigned char)54U, (unsigned char)55U, (unsigned char)56U, (unsigned char)57U, (unsigned char)58U, (unsigned char)59U, (unsigned char)60U, (unsigned char)61U, (unsigned char)62U, (unsigned char)63U};
  
#line 3274 
  u8 sizes_of_vht_retes = (unsigned char)10U;
  
#line 3276 
  if (rtlhal->current_bandtype == (unsigned int)BAND_ON_2_4G) 
#line 3277 
                                                              _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& cck_rates),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_cck_retes)); else ;
  
#line 3280 
  _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& ofdm_rates),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_ofdm_retes));
  
#line 3282 
  _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& ht_rates_1t),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_ht_retes_1t));
  
#line 3284 
  _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& vht_rates_1t),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_vht_retes));
  
#line 3287 
  if ((unsigned int)rtlphy->num_total_rfpath > 1U) {
    
#line 3288 
    _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& ht_rates_2t),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_ht_retes_2t));
    
#line 3291 
    _rtl8821ae_phy_set_txpower_level_by_path(hw,(u8 *)(& vht_rates_2t),(unsigned char)((int)path),(unsigned char)((int)channel),(unsigned char)((int)sizes_of_vht_retes));
  }
  else ;
  
#line 3296 
  _rtl8821ae_phy_txpower_training_by_path(hw,(unsigned char)((int)rtlphy->current_chan_bw),(unsigned char)((int)channel),(unsigned char)((int)path));
  
#line 3297 
  return;
}


#line 3301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_txpower_level(struct ieee80211_hw *hw, u8 channel)
{
  
#line 3303 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3304 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3305 
  u8 path = (unsigned char)0U;
  
#line 3307 
  path = (unsigned char)0U;
  
#line 3307 
  goto ldv_57569;
  ldv_57568: 
#line 3308 
  ;
  
#line 3308 
  rtl8821ae_phy_set_txpower_level_by_path(hw,(unsigned char)((int)channel),(unsigned char)((int)path));
  
#line 3307 
  path = (u8)((int)path + 1);
  ldv_57569: 
#line 3308 
  ;
  
#line 3307 
  if ((int)rtlphy->num_total_rfpath > (int)path) 
#line 3309 
                                                 goto ldv_57568; else 
                                                                   
#line 3312 
                                                                   goto ldv_57570;
  ldv_57570: 
#line 3313 
  ;
  
#line 3314 
  return;
}


#line 3311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static long _rtl8821ae_phy_txpwr_idx_to_dbm(struct ieee80211_hw *hw, enum wireless_mode wirelessmode, u8 txpwridx)
{
  long offset;
  long pwrout_dbm;
  
#line 3318 
  switch ((unsigned int)wirelessmode) {
    case (unsigned int)2: 
#line 3319 
    ;
    
#line 3320 
    offset = -7L;
    
#line 3321 
    goto ldv_57579;
    case (unsigned int)4: 
#line 3322 
    ;
    case (unsigned int)16: 
#line 3323 
    ;
    
#line 3324 
    offset = -8L;
    
#line 3325 
    goto ldv_57579;
    default: 
#line 3326 
    ;
    
#line 3327 
    offset = -8L;
    
#line 3328 
    goto ldv_57579;
  }
  ldv_57579: 
#line 3330 
  ;
  
#line 3330 
  pwrout_dbm = (long)((unsigned int)txpwridx / 2U) + offset;
  
#line 3331 
  return pwrout_dbm;
}


#line 3334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_scan_operation_backup(struct ieee80211_hw *hw, u8 operation)
{
  int tmp_2;
  bool tmp_1;
  
#line 3336 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3337 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3338 
  enum io_type iotype = IO_CMD_PAUSE_DM_BY_SCAN;
  
#line 3340 
  tmp_1 = is_hal_stop(rtlhal);
  
#line 3340 
  if (tmp_1) 
#line 3340 
             tmp_2 = 0; else 
#line 3340 
                             tmp_2 = 1;
  
#line 3340 
  if (tmp_2) {
    
#line 3341 
    switch ((int)operation) {
      case 0: 
#line 3342 
      ;
      
#line 3343 
      iotype = IO_CMD_PAUSE_DM_BY_SCAN;
      
#line 3344 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)72,(u8 *)(& iotype));
      
#line 3348 
      goto ldv_57591;
      case 1: 
#line 3349 
      ;
      
#line 3350 
      iotype = IO_CMD_PAUSE_BAND1_DM_BY_SCAN;
      
#line 3351 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)72,(u8 *)(& iotype));
      
#line 3355 
      goto ldv_57591;
      case 2: 
#line 3356 
      ;
      
#line 3357 
      iotype = IO_CMD_RESUME_DM_BY_SCAN;
      
#line 3358 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)72,(u8 *)(& iotype));
      
#line 3361 
      goto ldv_57591;
      default: 
#line 3362 
      ;
      
#line 3363 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
        int tmp;
        int tmp_0;
        
#line 3363 
        tmp = preempt_count();
        
#line 3363 
        tmp_0 = preempt_count();
        
#line 3363 
        printk("\001","rtl8821ae_phy_scan_operation_backup",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
      }
      else ;
      
#line 3365 
      goto ldv_57591;
    }
    ldv_57591: 
#line 3367 
    ;
  }
  else ;
  
#line 3369 
  return;
}


#line 3370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_set_reg_bw(struct rtl_priv *rtlpriv, u8 bw)
{
  u16 reg_rf_mode_bw;
  
#line 3372 
  u16 tmp = (unsigned short)0U;
  
#line 3374 
  reg_rf_mode_bw = rtl_read_word(rtlpriv,1640U);
  
#line 3375 
  switch ((int)bw) {
    case 0: 
#line 3376 
    ;
    
#line 3377 
    rtl_write_word(rtlpriv,1640U,(unsigned short)((int)reg_rf_mode_bw & 65151));
    
#line 3378 
    goto ldv_57603;
    case 1: 
#line 3379 
    ;
    
#line 3380 
    tmp = (unsigned short)((unsigned int)reg_rf_mode_bw | 128U);
    
#line 3381 
    rtl_write_word(rtlpriv,1640U,(unsigned short)((int)tmp & 65279));
    
#line 3382 
    goto ldv_57603;
    case 2: 
#line 3383 
    ;
    
#line 3384 
    tmp = (unsigned short)((unsigned int)reg_rf_mode_bw | 256U);
    
#line 3385 
    rtl_write_word(rtlpriv,1640U,(unsigned short)((int)tmp & 65407));
    
#line 3386 
    goto ldv_57603;
    default: 
#line 3387 
    ;
    
#line 3388 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp_0;
      int tmp_1;
      
#line 3388 
      ;
      
#line 3388 
      tmp_0 = preempt_count();
      
#line 3388 
      tmp_1 = preempt_count();
      
#line 3388 
      printk("\001","_rtl8821ae_phy_set_reg_bw",(unsigned long)tmp_1 & 2096896UL,tmp_0 != 0,(int)bw);
    }
    else ;
    
#line 3389 
    goto ldv_57603;
  }
  ldv_57603: 
#line 3391 
  ;
  
#line 3392 
  return;
}


#line 3393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static u8 _rtl8821ae_phy_get_secondary_chnl(struct rtl_priv *rtlpriv)
{
  u8 __retres;
  
#line 3395 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3396 
  struct rtl_mac *mac = & rtlpriv->mac80211;
  
#line 3397 
  u8 sc_set_40 = (unsigned char)0U;
  
#line 3397 
  u8 sc_set_20 = (unsigned char)0U;
  
#line 3399 
  if ((unsigned int)rtlphy->current_chan_bw == 2U) {
    
#line 3400 
    if ((unsigned int)mac->cur_80_prime_sc == 1U) 
#line 3401 
                                                  sc_set_40 = (unsigned char)10U;
    else 
      
#line 3402 
      if ((unsigned int)mac->cur_80_prime_sc == 2U) 
#line 3403 
                                                    sc_set_40 = (unsigned char)9U;
      else 
        
#line 3405 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
          int tmp;
          int tmp_0;
          
#line 3405 
          tmp = preempt_count();
          
#line 3405 
          tmp_0 = preempt_count();
          
#line 3405 
          printk("\001","_rtl8821ae_phy_get_secondary_chnl",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
        }
        else ;
    
#line 3408 
    if ((unsigned int)mac->cur_40_prime_sc == 1U && (unsigned int)mac->cur_80_prime_sc == 1U) 
      
#line 3410 
      sc_set_20 = (unsigned char)4U;
    else 
      
#line 3411 
      if ((unsigned int)mac->cur_40_prime_sc == 2U && (unsigned int)mac->cur_80_prime_sc == 1U) 
        
#line 3413 
        sc_set_20 = (unsigned char)2U;
      else 
        
#line 3414 
        if ((unsigned int)mac->cur_40_prime_sc == 1U && (unsigned int)mac->cur_80_prime_sc == 2U) 
          
#line 3416 
          sc_set_20 = (unsigned char)1U;
        else 
          
#line 3417 
          if ((unsigned int)mac->cur_40_prime_sc == 2U && (unsigned int)mac->cur_80_prime_sc == 2U) 
            
#line 3419 
            sc_set_20 = (unsigned char)3U;
          else 
            
#line 3421 
            if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
              int tmp_1;
              int tmp_2;
              
#line 3421 
              tmp_1 = preempt_count();
              
#line 3421 
              tmp_2 = preempt_count();
              
#line 3421 
              printk("\001","_rtl8821ae_phy_get_secondary_chnl",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
            }
            else ;
  }
  else 
    
#line 3423 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) {
      
#line 3424 
      if ((unsigned int)mac->cur_40_prime_sc == 2U) 
#line 3425 
                                                    sc_set_20 = (unsigned char)1U;
      else 
        
#line 3426 
        if ((unsigned int)mac->cur_40_prime_sc == 1U) 
#line 3427 
                                                      sc_set_20 = (unsigned char)2U;
        else 
          
#line 3429 
          if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
            int tmp_3;
            int tmp_4;
            
#line 3429 
            tmp_3 = preempt_count();
            
#line 3429 
            tmp_4 = preempt_count();
            
#line 3429 
            printk("\001","_rtl8821ae_phy_get_secondary_chnl",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
          }
          else ;
    }
    else ;
  
#line 3432 
  __retres = (unsigned char)(((int)sc_set_40 << 4) | (int)sc_set_20);
  
#line 3432 
  return __retres;
}


#line 3435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_bw_mode_callback(struct ieee80211_hw *hw)
{
  
#line 3437 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3438 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3439 
  u8 sub_chnl = (unsigned char)0U;
  
#line 3440 
  u8 l1pk_val = (unsigned char)0U;
  
#line 3442 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    char *tmp_0;
    int tmp_1;
    int tmp_2;
    
#line 3442 
    if ((unsigned int)rtlphy->current_chan_bw != 0U) {
      char *tmp;
      
#line 3442 
      if ((unsigned int)rtlphy->current_chan_bw == 1U) 
#line 3442 
                                                       tmp = (char *)"40MHz"; else 
                                                                    
#line 3442 
                                                                    tmp = (char *)"80MHz";
      
#line 3442 
      tmp_0 = tmp;
    }
    else 
#line 3442 
         tmp_0 = (char *)"20MHz";
    
#line 3442 
    tmp_1 = preempt_count();
    
#line 3442 
    tmp_2 = preempt_count();
    
#line 3442 
    printk("\001","rtl8821ae_phy_set_bw_mode_callback",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0,tmp_0);
  }
  else ;
  
#line 3449 
  _rtl8821ae_phy_set_reg_bw(rtlpriv,(unsigned char)((int)rtlphy->current_chan_bw));
  
#line 3450 
  sub_chnl = _rtl8821ae_phy_get_secondary_chnl(rtlpriv);
  
#line 3451 
  rtl_write_byte(rtlpriv,1155U,(unsigned char)((int)sub_chnl));
  
#line 3453 
  switch ((int)rtlphy->current_chan_bw) {
    case 0: 
#line 3454 
    ;
    
#line 3455 
    rtl_set_bbreg(hw,2220U,3146691U,3146240U);
    
#line 3456 
    rtl_set_bbreg(hw,2244U,1073741824U,0U);
    
#line 3458 
    if ((unsigned int)rtlphy->rf_type == 2U) 
#line 3459 
                                             rtl_set_bbreg(hw,2120U,62914560U,7U); else 
                                                                    
#line 3461 
                                                                    rtl_set_bbreg(hw,2120U,62914560U,8U);
    
#line 3462 
    goto ldv_57625;
    case 1: 
#line 3463 
    ;
    
#line 3464 
    rtl_set_bbreg(hw,2220U,3146691U,3146241U);
    
#line 3465 
    rtl_set_bbreg(hw,2244U,1073741824U,0U);
    
#line 3466 
    rtl_set_bbreg(hw,2220U,60U,(unsigned int)sub_chnl);
    
#line 3467 
    rtl_set_bbreg(hw,2104U,4026531840U,(unsigned int)sub_chnl);
    
#line 3469 
    if (((unsigned long)rtlphy->reg_837 & 4UL) != 0UL) 
#line 3470 
                                                       l1pk_val = (unsigned char)6U;
    else 
      
#line 3472 
      if ((unsigned int)rtlphy->rf_type == 2U) 
#line 3473 
                                               l1pk_val = (unsigned char)7U; else 
                                                                    
#line 3475 
                                                                    l1pk_val = (unsigned char)8U;
    
#line 3478 
    rtl_set_bbreg(hw,2120U,62914560U,(unsigned int)l1pk_val);
    
#line 3480 
    if ((unsigned int)sub_chnl == 1U) 
#line 3481 
                                      rtl_set_bbreg(hw,2560U,16U,1U); else 
                                                                    
#line 3483 
                                                                    rtl_set_bbreg(hw,2560U,16U,0U);
    
#line 3484 
    goto ldv_57625;
    case 2: 
#line 3486 
    ;
    
#line 3488 
    rtl_set_bbreg(hw,2220U,3146691U,3146242U);
    
#line 3490 
    rtl_set_bbreg(hw,2244U,1073741824U,1U);
    
#line 3491 
    rtl_set_bbreg(hw,2220U,60U,(unsigned int)sub_chnl);
    
#line 3492 
    rtl_set_bbreg(hw,2104U,4026531840U,(unsigned int)sub_chnl);
    
#line 3494 
    if (((unsigned long)rtlphy->reg_837 & 4UL) != 0UL) 
#line 3495 
                                                       l1pk_val = (unsigned char)5U;
    else 
      
#line 3497 
      if ((unsigned int)rtlphy->rf_type == 2U) 
#line 3498 
                                               l1pk_val = (unsigned char)6U; else 
                                                                    
#line 3500 
                                                                    l1pk_val = (unsigned char)7U;
    
#line 3502 
    rtl_set_bbreg(hw,2120U,62914560U,(unsigned int)l1pk_val);
    
#line 3504 
    goto ldv_57625;
    default: 
#line 3505 
    ;
    
#line 3506 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 3506 
      ;
      
#line 3506 
      tmp_3 = preempt_count();
      
#line 3506 
      tmp_4 = preempt_count();
      
#line 3506 
      printk("\001","rtl8821ae_phy_set_bw_mode_callback",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rtlphy->current_chan_bw);
    }
    else ;
    
#line 3508 
    goto ldv_57625;
  }
  ldv_57625: 
#line 3511 
  ;
  
#line 3511 
  rtl8812ae_fixspur(hw,(enum ht_channel_width)rtlphy->current_chan_bw,(unsigned char)((int)rtlphy->current_channel));
  
#line 3513 
  rtl8821ae_phy_rf6052_set_bandwidth(hw,(unsigned char)((int)rtlphy->current_chan_bw));
  
#line 3514 
  rtlphy->set_bwmode_inprogress = (unsigned char)0U;
  
#line 3516 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp_5;
    int tmp_6;
    
#line 3516 
    tmp_5 = preempt_count();
    
#line 3516 
    tmp_6 = preempt_count();
    
#line 3516 
    printk("\001","rtl8821ae_phy_set_bw_mode_callback",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
  }
  else ;
  
#line 3517 
  return;
}


#line 3519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_bw_mode(struct ieee80211_hw *hw, enum nl80211_channel_type ch_type)
{
  int tmp_2;
  bool tmp_1;
  
#line 3522 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3523 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3524 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3525 
  u8 tmp_bw = rtlphy->current_chan_bw;
  
#line 3527 
  if ((unsigned int)rtlphy->set_bwmode_inprogress != 0U) 
#line 3528 
                                                         goto return_label; else ;
  
#line 3529 
  rtlphy->set_bwmode_inprogress = (unsigned char)1U;
  
#line 3530 
  tmp_1 = is_hal_stop(rtlhal);
  
#line 3530 
  if (tmp_1) 
#line 3530 
             tmp_2 = 0; else 
#line 3530 
                             tmp_2 = 1;
  
#line 3530 
  if (tmp_2) 
#line 3531 
             rtl8821ae_phy_set_bw_mode_callback(hw);
  else {
    
#line 3533 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
      int tmp;
      int tmp_0;
      
#line 3533 
      tmp = preempt_count();
      
#line 3533 
      tmp_0 = preempt_count();
      
#line 3533 
      printk("\001","rtl8821ae_phy_set_bw_mode",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 3535 
    rtlphy->set_bwmode_inprogress = (unsigned char)0U;
    
#line 3536 
    rtlphy->current_chan_bw = tmp_bw;
  }
  return_label: 
#line 3538 
                return;
}


#line 3540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_sw_chnl_callback(struct ieee80211_hw *hw)
{
  u8 path;
  u32 data;
  bool tmp_1;
  
#line 3542 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3543 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3544 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3545 
  u8 channel = rtlphy->current_channel;
  
#line 3549 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3549 
    ;
    
#line 3549 
    tmp = preempt_count();
    
#line 3549 
    tmp_0 = preempt_count();
    
#line 3549 
    printk("\001","rtl8821ae_phy_sw_chnl_callback",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtlphy->current_channel);
  }
  else ;
  
#line 3551 
  tmp_1 = is_hal_stop(rtlhal);
  
#line 3551 
  if ((int)tmp_1 != 0) 
#line 3552 
                       goto return_label; else ;
  
#line 3554 
  if ((unsigned int)channel + 220U <= 12U) 
#line 3555 
                                           data = 1172U;
  else 
    
#line 3556 
    if ((unsigned int)channel + 206U <= 14U) 
#line 3557 
                                             data = 1107U;
    else 
      
#line 3558 
      if ((unsigned int)channel + 156U <= 16U) 
#line 3559 
                                               data = 1106U;
      else 
        
#line 3560 
        if ((unsigned int)channel > 117U) 
#line 3561 
                                          data = 1042U; else 
#line 3563 
                                                             data = 2410U;
  
#line 3564 
  rtl_set_bbreg(hw,2144U,536739840U,data);
  
#line 3566 
  path = (unsigned char)0U;
  
#line 3566 
  goto ldv_57649;
  ldv_57648: 
#line 3567 
  ;
  
#line 3567 
  if ((unsigned int)channel + 220U <= 28U) 
#line 3568 
                                           data = 257U;
  else 
    
#line 3569 
    if ((unsigned int)channel + 156U <= 40U) 
#line 3570 
                                             data = 769U;
    else 
      
#line 3571 
      if ((unsigned int)channel > 140U) 
#line 3572 
                                        data = 1281U; else 
#line 3574 
                                                           data = 0U;
  
#line 3575 
  rtl8821ae_phy_set_rf_reg(hw,(enum radio_path)path,24U,459520U,data);
  
#line 3578 
  rtl8821ae_phy_set_rf_reg(hw,(enum radio_path)path,24U,255U,(unsigned int)channel);
  
#line 3581 
  if ((unsigned int)channel > 14U) {
    
#line 3582 
    if ((unsigned int)rtlhal->hw_type == 13U) {
      
#line 3583 
      if ((unsigned int)channel + 220U <= 28U) 
#line 3584 
                                               data = 70889U;
      else 
        
#line 3585 
        if ((unsigned int)channel + 156U <= 40U) 
#line 3586 
                                                 data = 69865U; else 
                                                                  
#line 3588 
                                                                  data = 69865U;
      
#line 3589 
      rtl8821ae_phy_set_rf_reg(hw,(enum radio_path)path,99U,1048575U,data);
    }
    else ;
  }
  else ;
  
#line 3566 
  path = (u8)((int)path + 1);
  ldv_57649: 
#line 3567 
  ;
  
#line 3566 
  if ((int)rtlphy->num_total_rfpath > (int)path) 
#line 3568 
                                                 goto ldv_57648; else 
                                                                   
#line 3571 
                                                                   goto ldv_57650;
  ldv_57650: 
#line 3572 
  ;
  
#line 3594 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_2;
    int tmp_3;
    
#line 3594 
    tmp_2 = preempt_count();
    
#line 3594 
    tmp_3 = preempt_count();
    
#line 3594 
    printk("\001","rtl8821ae_phy_sw_chnl_callback",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0);
  }
  else ;
  return_label: 
#line 3595 
                return;
}


#line 3597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
u8 rtl8821ae_phy_sw_chnl(struct ieee80211_hw *hw)
{
  u8 __retres;
  bool tmp_1;
  
#line 3599 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3600 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3601 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3602 
  u32 timeout = 1000U;
  
#line 3602 
  u32 timecount = 0U;
  
#line 3603 
  u8 channel = rtlphy->current_channel;
  
#line 3605 
  if ((unsigned int)rtlphy->sw_chnl_inprogress != 0U) {
    
#line 3606 
    __retres = (unsigned char)0U;
    
#line 3606 
    goto return_label;
  }
  else ;
  
#line 3607 
  if ((unsigned int)rtlphy->set_bwmode_inprogress != 0U) {
    
#line 3608 
    __retres = (unsigned char)0U;
    
#line 3608 
    goto return_label;
  }
  else ;
  
#line 3610 
  tmp_1 = is_hal_stop(rtlhal);
  
#line 3610 
  if ((int)tmp_1) {
    
#line 3611 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 268435456ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 3611 
      tmp = preempt_count();
      
#line 3611 
      tmp_0 = preempt_count();
      
#line 3611 
      printk("\001","rtl8821ae_phy_sw_chnl",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 3613 
    __retres = (unsigned char)0U;
    
#line 3613 
    goto return_label;
  }
  else ;
  
#line 3615 
  goto ldv_57666;
  ldv_57665: 
#line 3616 
  ;
  {
    
#line 3616 
    unsigned long __ms = 50UL;
    {
      unsigned long tmp_2;
      
#line 3616 
      goto ldv_57663;
      ldv_57662: 
#line 3617 
      ;
      
#line 3616 
      __const_udelay(4295000UL);
      ldv_57663: 
#line 3618 
      ;
      
#line 3616 
      tmp_2 = __ms;
      
#line 3616 
      __ms -= 1UL;
      
#line 3616 
      ;
      
#line 3616 
      if (tmp_2 != 0UL) 
#line 3618 
                        goto ldv_57662; else 
#line 3621 
                                             goto ldv_57664;
      ldv_57664: 
#line 3622 
      ;
    }
  }
  
#line 3617 
  timecount += 50U;
  ldv_57666: 
#line 3618 
  ;
  
#line 3615 
  if ((unsigned int)rtlphy->lck_inprogress != 0U && timecount < timeout) 
    
#line 3617 
    goto ldv_57665; else 
#line 3620 
                         goto ldv_57667;
  ldv_57667: 
#line 3621 
  ;
  
#line 3620 
  if ((unsigned int)rtlphy->current_channel > 14U && rtlhal->current_bandtype != (unsigned int)BAND_ON_5G) 
    
#line 3621 
    rtl8821ae_phy_switch_wirelessband(hw,(unsigned char)1);
  else 
    
#line 3622 
    if ((unsigned int)rtlphy->current_channel <= 14U && rtlhal->current_bandtype != (unsigned int)BAND_ON_2_4G) 
      
#line 3623 
      rtl8821ae_phy_switch_wirelessband(hw,(unsigned char)0); else ;
  
#line 3625 
  rtlphy->sw_chnl_inprogress = (unsigned char)1U;
  
#line 3626 
  if ((unsigned int)channel == 0U) 
#line 3627 
                                   channel = (unsigned char)1U; else ;
  
#line 3629 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 3629 
    ;
    
#line 3629 
    ;
    
#line 3629 
    tmp_3 = preempt_count();
    
#line 3629 
    tmp_4 = preempt_count();
    
#line 3629 
    printk("\001","rtl8821ae_phy_sw_chnl",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(int)rtlphy->current_channel,(unsigned int)rtlhal->current_bandtype);
  }
  else ;
  
#line 3633 
  rtl8821ae_phy_sw_chnl_callback(hw);
  
#line 3635 
  rtl8821ae_dm_clear_txpower_tracking_state(hw);
  
#line 3636 
  rtl8821ae_phy_set_txpower_level(hw,(unsigned char)((int)rtlphy->current_channel));
  
#line 3638 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 64ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_5;
    int tmp_6;
    
#line 3638 
    tmp_5 = preempt_count();
    
#line 3638 
    tmp_6 = preempt_count();
    
#line 3638 
    printk("\001","rtl8821ae_phy_sw_chnl",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
  }
  else ;
  
#line 3639 
  rtlphy->sw_chnl_inprogress = (unsigned char)0U;
  
#line 3640 
  __retres = (unsigned char)1U;
  return_label: 
#line 3640 
                return __retres;
}


#line 3643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
u8 _rtl8812ae_get_right_chnl_place_for_iqk(u8 chnl)
{
  u8 __retres;
  
#line 3645 
  u8 channel_all[59U] = {(unsigned char)1U, (unsigned char)2U, (unsigned char)3U, (unsigned char)4U, (unsigned char)5U, (unsigned char)6U, (unsigned char)7U, (unsigned char)8U, (unsigned char)9U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)13U, (unsigned char)14U, (unsigned char)36U, (unsigned char)38U, (unsigned char)40U, (unsigned char)42U, (unsigned char)44U, (unsigned char)46U, (unsigned char)48U, (unsigned char)50U, (unsigned char)52U, (unsigned char)54U, (unsigned char)56U, (unsigned char)58U, (unsigned char)60U, (unsigned char)62U, (unsigned char)64U, (unsigned char)100U, (unsigned char)102U, (unsigned char)104U, (unsigned char)106U, (unsigned char)108U, (unsigned char)110U, (unsigned char)112U, (unsigned char)114U, (unsigned char)116U, (unsigned char)118U, (unsigned char)120U, (unsigned char)122U, (unsigned char)124U, (unsigned char)126U, (unsigned char)128U, (unsigned char)130U, (unsigned char)132U, (unsigned char)134U, (unsigned char)136U, (unsigned char)138U, (unsigned char)140U, (unsigned char)149U, (unsigned char)151U, (unsigned char)153U, (unsigned char)155U, (unsigned char)157U, (unsigned char)159U, (unsigned char)161U, (unsigned char)163U, (unsigned char)165U};
  
#line 3652 
  u8 place = chnl;
  
#line 3654 
  if ((unsigned int)chnl > 14U) {
    
#line 3655 
    place = (unsigned char)14U;
    
#line 3655 
    goto ldv_57674;
    ldv_57673: 
#line 3656 
    ;
    
#line 3656 
    if ((int)channel_all[(int)place] == (int)chnl) {
      
#line 3657 
      __retres = (unsigned char)((unsigned int)place + 243U);
      
#line 3657 
      goto return_label;
    }
    else ;
    
#line 3655 
    place = (u8)((int)place + 1);
    ldv_57674: 
#line 3656 
    ;
    
#line 3655 
    if ((unsigned int)place <= 58U) 
#line 3657 
                                    goto ldv_57673; else 
#line 3660 
                                                         goto ldv_57675;
    ldv_57675: 
#line 3661 
    ;
  }
  else ;
  
#line 3660 
  __retres = (unsigned char)0U;
  return_label: 
#line 3660 
                return __retres;
}


#line 3667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_backup_macbb(struct ieee80211_hw *hw, u32 *macbb_backup, u32 *backup_macbb_reg, u32 mac_bb_num)
{
  u32 i;
  
#line 3671 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3674 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 3676 
  i = 0U;
  
#line 3676 
  goto ldv_57685;
  ldv_57684: 
#line 3677 
  ;
  
#line 3677 
  *(macbb_backup + i) = rtl_read_dword(rtlpriv,*(backup_macbb_reg + i));
  
#line 3676 
  i += 1U;
  ldv_57685: 
#line 3677 
  ;
  
#line 3676 
  if (i < mac_bb_num) 
#line 3678 
                      goto ldv_57684; else 
#line 3681 
                                           goto ldv_57686;
  ldv_57686: 
#line 3682 
  ;
  
#line 3679 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3679 
    tmp = preempt_count();
    
#line 3679 
    tmp_0 = preempt_count();
    
#line 3679 
    printk("\001","_rtl8821ae_iqk_backup_macbb",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 3680 
  return;
}


#line 3682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_backup_afe(struct ieee80211_hw *hw, u32 *afe_backup, u32 *backup_afe_REG, u32 afe_num)
{
  u32 i;
  
#line 3685 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3688 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 3690 
  i = 0U;
  
#line 3690 
  goto ldv_57697;
  ldv_57696: 
#line 3691 
  ;
  
#line 3691 
  *(afe_backup + i) = rtl_read_dword(rtlpriv,*(backup_afe_REG + i));
  
#line 3690 
  i += 1U;
  ldv_57697: 
#line 3691 
  ;
  
#line 3690 
  if (i < afe_num) 
#line 3692 
                   goto ldv_57696; else 
#line 3695 
                                        goto ldv_57698;
  ldv_57698: 
#line 3696 
  ;
  
#line 3692 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3692 
    tmp = preempt_count();
    
#line 3692 
    tmp_0 = preempt_count();
    
#line 3692 
    printk("\001","_rtl8821ae_iqk_backup_afe",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 3693 
  return;
}


#line 3695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_backup_rf(struct ieee80211_hw *hw, u32 *rfa_backup, u32 *rfb_backup, u32 *backup_rf_reg, u32 rf_num)
{
  u32 i;
  
#line 3699 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3702 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 3704 
  i = 0U;
  
#line 3704 
  goto ldv_57710;
  ldv_57709: 
#line 3705 
  ;
  
#line 3705 
  *(rfa_backup + i) = rtl_get_rfreg(hw,(enum radio_path)RF90_PATH_A,*(backup_rf_reg + i),4294967295U);
  
#line 3707 
  *(rfb_backup + i) = rtl_get_rfreg(hw,(enum radio_path)RF90_PATH_B,*(backup_rf_reg + i),4294967295U);
  
#line 3704 
  i += 1U;
  ldv_57710: 
#line 3705 
  ;
  
#line 3704 
  if (i < rf_num) 
#line 3706 
                  goto ldv_57709; else 
#line 3709 
                                       goto ldv_57711;
  ldv_57711: 
#line 3710 
  ;
  
#line 3710 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3710 
    tmp = preempt_count();
    
#line 3710 
    tmp_0 = preempt_count();
    
#line 3710 
    printk("\001","_rtl8821ae_iqk_backup_rf",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 3711 
  return;
}


#line 3713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_configure_mac(struct ieee80211_hw *hw)
{
  
#line 3717 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3719 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 3720 
  rtl_write_byte(rtlpriv,1314U,(unsigned char)63);
  
#line 3721 
  rtl_set_bbreg(hw,1360U,2056U,0U);
  
#line 3722 
  rtl_write_byte(rtlpriv,2056U,(unsigned char)0);
  
#line 3723 
  rtl_set_bbreg(hw,2104U,15U,12U);
  
#line 3724 
  return;
}


#line 3726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_tx_fill_iqc(struct ieee80211_hw *hw, enum radio_path path, u32 tx_x, u32 tx_y)
{
  
#line 3729 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3730 
  switch ((unsigned int)path) {
    case (unsigned int)0: 
#line 3731 
    ;
    
#line 3733 
    rtl_set_bbreg(hw,2092U,2147483648U,1U);
    
#line 3734 
    rtl_write_dword(rtlpriv,3216U,128U);
    
#line 3735 
    rtl_write_dword(rtlpriv,3268U,537133056U);
    
#line 3736 
    rtl_write_dword(rtlpriv,3272U,536870912U);
    
#line 3737 
    rtl_set_bbreg(hw,3276U,2047U,tx_y);
    
#line 3738 
    rtl_set_bbreg(hw,3284U,2047U,tx_x);
    
#line 3739 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 3739 
      ;
      
#line 3739 
      ;
      
#line 3739 
      tmp = preempt_count();
      
#line 3739 
      tmp_0 = preempt_count();
      
#line 3739 
      printk("\001","_rtl8821ae_iqk_tx_fill_iqc",(unsigned long)tmp_0 & 2096896UL,tmp != 0,tx_x,tx_y);
    }
    else ;
    
#line 3742 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      u32 tmp_1;
      u32 tmp_2;
      int tmp_3;
      int tmp_4;
      
#line 3742 
      tmp_1 = rtl_get_bbreg(hw,3276U,2047U);
      
#line 3742 
      tmp_2 = rtl_get_bbreg(hw,3284U,2047U);
      
#line 3742 
      tmp_3 = preempt_count();
      
#line 3742 
      tmp_4 = preempt_count();
      
#line 3742 
      printk("\001","_rtl8821ae_iqk_tx_fill_iqc",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,tmp_2,tmp_1);
    }
    else ;
    
#line 3746 
    goto ldv_57726;
    default: 
#line 3747 
    ;
    
#line 3748 
    goto ldv_57726;
  }
  ldv_57726: 
#line 3750 
  ;
  
#line 3751 
  return;
}


#line 3752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_rx_fill_iqc(struct ieee80211_hw *hw, enum radio_path path, u32 rx_x, u32 rx_y)
{
  
#line 3755 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3756 
  switch ((unsigned int)path) {
    case (unsigned int)0: 
#line 3757 
    ;
    
#line 3758 
    rtl_set_bbreg(hw,2092U,2147483648U,0U);
    
#line 3759 
    rtl_set_bbreg(hw,3088U,1023U,rx_x >> 1);
    
#line 3760 
    rtl_set_bbreg(hw,3088U,67043328U,rx_y >> 1);
    
#line 3761 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 3761 
      ;
      
#line 3761 
      ;
      
#line 3761 
      tmp = preempt_count();
      
#line 3761 
      tmp_0 = preempt_count();
      
#line 3761 
      printk("\001","_rtl8821ae_iqk_rx_fill_iqc",(unsigned long)tmp_0 & 2096896UL,tmp != 0,rx_x >> 1,rx_y >> 1);
    }
    else ;
    
#line 3764 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      u32 tmp_1;
      int tmp_2;
      int tmp_3;
      
#line 3764 
      tmp_1 = rtl_read_dword(rtlpriv,3088U);
      
#line 3764 
      tmp_2 = preempt_count();
      
#line 3764 
      tmp_3 = preempt_count();
      
#line 3764 
      printk("\001","_rtl8821ae_iqk_rx_fill_iqc",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,tmp_1);
    }
    else ;
    
#line 3767 
    goto ldv_57737;
    default: 
#line 3768 
    ;
    
#line 3769 
    goto ldv_57737;
  }
  ldv_57737: 
#line 3771 
  ;
  
#line 3772 
  return;
}


#line 3775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_tx(struct ieee80211_hw *hw, enum radio_path path)
{
  u32 tx_fail;
  u32 rx_fail;
  u32 delay_count;
  u32 iqk_ready;
  u32 cal_retry;
  u32 temp_reg65;
  int tx_x0[10U];
  int tx_y0[10U];
  int tx_x0_rxk[10U];
  int tx_y0_rxk[10U];
  int rx_x0[10U];
  int rx_y0[10U];
  int i;
  int k;
  int vdf_y[3U];
  int vdf_x[3U];
  int tx_dt[3U];
  int rx_dt[3U];
  int ii;
  
#line 3777 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 3778 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 3779 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 3781 
  u32 cal = 0U;
  
#line 3782 
  int tx_x = 0;
  
#line 3782 
  int tx_y = 0;
  
#line 3782 
  int rx_x = 0;
  
#line 3782 
  int rx_y = 0;
  
#line 3782 
  int tx_average = 0;
  
#line 3782 
  int rx_average = 0;
  
#line 3785 
  bool tx0iqkok = (_Bool)0;
  
#line 3785 
  bool rx0iqkok = (_Bool)0;
  
#line 3786 
  bool vdf_enable = (_Bool)0;
  
#line 3788 
  int dx = 0;
  
#line 3788 
  int dy = 0;
  
#line 3788 
  int tx_finish = 0;
  
#line 3788 
  int rx_finish = 0;
  
#line 3790 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 3790 
    ;
    
#line 3790 
    tmp = preempt_count();
    
#line 3790 
    tmp_0 = preempt_count();
    
#line 3790 
    printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rtlphy->current_chan_bw);
  }
  else ;
  
#line 3793 
  if ((unsigned int)rtlphy->current_chan_bw == 2U) 
#line 3794 
                                                   vdf_enable = (_Bool)1; else ;
  
#line 3796 
  goto ldv_57880;
  ldv_57879: 
#line 3797 
  ;
  
#line 3797 
  switch ((unsigned int)path) {
    u32 tmp_2;
    case (unsigned int)0: 
#line 3798 
    ;
    
#line 3799 
    temp_reg65 = rtl_get_rfreg(hw,path,101U,4294967295U);
    
#line 3801 
    rtl_set_bbreg(hw,2092U,2147483648U,0U);
    
#line 3804 
    rtl_write_dword(rtlpriv,3168U,2004318071U);
    
#line 3805 
    rtl_write_dword(rtlpriv,3172U,2004318071U);
    
#line 3806 
    rtl_write_dword(rtlpriv,3176U,427366777U);
    
#line 3807 
    rtl_write_dword(rtlpriv,3180U,427366777U);
    
#line 3808 
    rtl_write_dword(rtlpriv,3184U,427366777U);
    
#line 3809 
    rtl_write_dword(rtlpriv,3188U,427366777U);
    
#line 3810 
    rtl_write_dword(rtlpriv,3192U,427366777U);
    
#line 3811 
    rtl_write_dword(rtlpriv,3196U,427366777U);
    
#line 3812 
    rtl_write_dword(rtlpriv,3200U,427366777U);
    
#line 3813 
    rtl_write_dword(rtlpriv,3204U,427366777U);
    
#line 3815 
    rtl_set_bbreg(hw,3072U,15U,4U);
    
#line 3820 
    rtl_set_bbreg(hw,3164U,117440512U,7U);
    
#line 3823 
    rtl_set_rfreg(hw,path,239U,1048575U,524290U);
    
#line 3824 
    rtl_set_rfreg(hw,path,24U,3072U,3U);
    
#line 3825 
    rtl_set_rfreg(hw,path,48U,1048575U,131072U);
    
#line 3826 
    rtl_set_rfreg(hw,path,49U,1048575U,63U);
    
#line 3827 
    rtl_set_rfreg(hw,path,50U,1048575U,999363U);
    
#line 3828 
    rtl_set_rfreg(hw,path,101U,1048575U,602581U);
    
#line 3829 
    rtl_set_rfreg(hw,path,143U,1048575U,565249U);
    
#line 3830 
    rtl_set_bbreg(hw,3256U,15U,13U);
    
#line 3831 
    rtl_write_dword(rtlpriv,2316U,32768U);
    
#line 3832 
    rtl_write_dword(rtlpriv,2816U,50331904U);
    
#line 3833 
    rtl_set_bbreg(hw,3220U,1U,1U);
    
#line 3834 
    rtl_write_dword(rtlpriv,2424U,687874048U);
    
#line 3835 
    rtl_write_dword(rtlpriv,2428U,2835357696U);
    
#line 3836 
    rtl_write_dword(rtlpriv,2436U,4598032U);
    
#line 3838 
    rtl_set_bbreg(hw,2092U,2147483648U,1U);
    
#line 3839 
    rtl_write_dword(rtlpriv,3208U,2182349812U);
    
#line 3841 
    if (rtlhal->current_bandtype != (unsigned int)BAND_ON_2_4G) 
#line 3842 
                                                                rtl_write_dword(rtlpriv,3212U,1746288278U); else 
                                                                    
#line 3844 
                                                                    rtl_write_dword(rtlpriv,3212U,672546454U);
    
#line 3846 
    rtl_write_dword(rtlpriv,3200U,402689040U);
    
#line 3847 
    rtl_write_dword(rtlpriv,3204U,939559952U);
    
#line 3848 
    rtl_write_dword(rtlpriv,3256U,1048576U);
    
#line 3849 
    rtl_write_dword(rtlpriv,2432U,4194304000U);
    
#line 3850 
    rtl_write_dword(rtlpriv,2432U,4160749568U);
    {
      
#line 3852 
      unsigned long __ms = 10UL;
      {
        unsigned long tmp_1;
        
#line 3852 
        goto ldv_57783;
        ldv_57782: 
#line 3853 
        ;
        
#line 3852 
        __const_udelay(4295000UL);
        ldv_57783: 
#line 3854 
        ;
        
#line 3852 
        tmp_1 = __ms;
        
#line 3852 
        __ms -= 1UL;
        
#line 3852 
        ;
        
#line 3852 
        if (tmp_1 != 0UL) 
#line 3854 
                          goto ldv_57782; else 
#line 3857 
                                               goto ldv_57784;
        ldv_57784: 
#line 3858 
        ;
      }
    }
    
#line 3853 
    rtl_write_dword(rtlpriv,3256U,0U);
    
#line 3855 
    rtl_set_bbreg(hw,2092U,2147483648U,0U);
    
#line 3856 
    tmp_2 = rtl_get_rfreg(hw,path,8U,1047552U);
    
#line 3856 
    ;
    
#line 3856 
    ;
    
#line 3856 
    rtl_set_rfreg(hw,path,88U,523776U,tmp_2);
    
#line 3858 
    switch ((int)rtlphy->current_chan_bw) {
      case 1: 
#line 3859 
      ;
      
#line 3860 
      rtl_set_rfreg(hw,path,24U,3072U,1U);
      
#line 3861 
      goto ldv_57786;
      case 2: 
#line 3862 
      ;
      
#line 3863 
      rtl_set_rfreg(hw,path,24U,3072U,0U);
      
#line 3864 
      goto ldv_57786;
      default: 
#line 3865 
      ;
      
#line 3866 
      goto ldv_57786;
    }
    ldv_57786: 
#line 3869 
    ;
    
#line 3869 
    rtl_set_bbreg(hw,2092U,2147483648U,1U);
    
#line 3872 
    rtl_set_bbreg(hw,2092U,2147483648U,0U);
    
#line 3873 
    rtl_set_rfreg(hw,path,239U,1048575U,524288U);
    
#line 3874 
    rtl_set_rfreg(hw,path,48U,1048575U,131072U);
    
#line 3875 
    rtl_set_rfreg(hw,path,49U,1048575U,63U);
    
#line 3876 
    rtl_set_rfreg(hw,path,50U,1048575U,999363U);
    
#line 3877 
    rtl_set_rfreg(hw,path,101U,1048575U,602581U);
    
#line 3878 
    rtl_set_rfreg(hw,path,143U,1048575U,565249U);
    
#line 3879 
    rtl_set_rfreg(hw,path,239U,1048575U,0U);
    
#line 3881 
    rtl_write_dword(rtlpriv,2316U,32768U);
    
#line 3882 
    rtl_write_dword(rtlpriv,2816U,50331904U);
    
#line 3883 
    rtl_set_bbreg(hw,3220U,1U,1U);
    
#line 3884 
    rtl_write_dword(rtlpriv,2424U,687874048U);
    
#line 3885 
    rtl_write_dword(rtlpriv,2428U,2835357696U);
    
#line 3886 
    rtl_write_dword(rtlpriv,2436U,4630800U);
    
#line 3888 
    rtl_set_bbreg(hw,2092U,2147483648U,1U);
    
#line 3889 
    rtl_write_dword(rtlpriv,3208U,2182349809U);
    
#line 3890 
    if (rtlhal->current_bandtype != (unsigned int)BAND_ON_2_4G) 
#line 3891 
                                                                rtl_write_dword(rtlpriv,3212U,1075199638U); else 
                                                                    
#line 3893 
                                                                    rtl_write_dword(rtlpriv,3212U,1457814U);
    
#line 3895 
    if ((int)vdf_enable == 1) {
      
#line 3896 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_3;
        int tmp_4;
        
#line 3896 
        tmp_3 = preempt_count();
        
#line 3896 
        tmp_4 = preempt_count();
        
#line 3896 
        printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
      }
      else ;
      
#line 3897 
      k = 0;
      
#line 3897 
      goto ldv_57807;
      ldv_57806: 
#line 3898 
      ;
      
#line 3898 
      switch (k) {
        case 0: 
#line 3899 
        ;
        
#line 3900 
        rtl_write_dword(rtlpriv,3200U,402689080U);
        
#line 3901 
        rtl_write_dword(rtlpriv,3204U,939559992U);
        
#line 3902 
        rtl_set_bbreg(hw,3304U,2147483648U,0U);
        
#line 3903 
        goto ldv_57790;
        case 1: 
#line 3904 
        ;
        
#line 3905 
        rtl_set_bbreg(hw,3200U,268435456U,0U);
        
#line 3906 
        rtl_set_bbreg(hw,3204U,268435456U,0U);
        
#line 3907 
        rtl_set_bbreg(hw,3304U,2147483648U,0U);
        
#line 3908 
        goto ldv_57790;
        case 2: 
#line 3909 
        ;
        
#line 3910 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_5;
          int tmp_6;
          
#line 3910 
          ;
          
#line 3910 
          ;
          
#line 3910 
          tmp_5 = preempt_count();
          
#line 3910 
          tmp_6 = preempt_count();
          
#line 3910 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,vdf_y[1] >> 21,vdf_y[0] >> 21);
        }
        else ;
        
#line 3912 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_7;
          int tmp_8;
          
#line 3912 
          ;
          
#line 3912 
          ;
          
#line 3912 
          tmp_7 = preempt_count();
          
#line 3912 
          tmp_8 = preempt_count();
          
#line 3912 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,vdf_x[1] >> 21,vdf_x[0] >> 21);
        }
        else ;
        
#line 3914 
        tx_dt[cal] = (vdf_y[1] >> 20) - (vdf_y[0] >> 20);
        
#line 3915 
        tx_dt[cal] = (tx_dt[cal] * 160000) / 15708;
        
#line 3916 
        tx_dt[cal] = (int)((unsigned int)(tx_dt[cal] >> 1) + ((unsigned int)tx_dt[cal] & 1U));
        
#line 3917 
        rtl_write_dword(rtlpriv,3200U,402689056U);
        
#line 3918 
        rtl_write_dword(rtlpriv,3204U,939559968U);
        
#line 3919 
        rtl_set_bbreg(hw,3304U,2147483648U,1U);
        
#line 3920 
        rtl_set_bbreg(hw,3304U,1073676288U,(unsigned int)tx_dt[cal] & 16383U);
        
#line 3921 
        goto ldv_57790;
        default: 
#line 3922 
        ;
        
#line 3923 
        goto ldv_57790;
      }
      ldv_57790: 
#line 3925 
      ;
      
#line 3925 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 3926 
      cal_retry = 0U;
      ldv_57805: 
#line 3927 
      ;
      
#line 3929 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 3930 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 3932 
        unsigned long __ms_0 = 10UL;
        {
          unsigned long tmp_9;
          
#line 3932 
          goto ldv_57796;
          ldv_57795: 
#line 3933 
          ;
          
#line 3932 
          __const_udelay(4295000UL);
          ldv_57796: 
#line 3934 
          ;
          
#line 3932 
          tmp_9 = __ms_0;
          
#line 3932 
          __ms_0 -= 1UL;
          
#line 3932 
          ;
          
#line 3932 
          if (tmp_9 != 0UL) 
#line 3934 
                            goto ldv_57795; else 
#line 3937 
                                                 goto ldv_57797;
          ldv_57797: 
#line 3938 
          ;
        }
      }
      
#line 3933 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 3934 
      delay_count = 0U;
      ldv_57803: 
#line 3935 
      ;
      
#line 3936 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 3937 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 3938 
                                                         goto ldv_57798;
      else {
        
#line 3940 
        if (1) 
#line 3940 
               __const_udelay(4295000UL);
        else {
          
#line 3940 
          unsigned long __ms_1 = 1UL;
          {
            unsigned long tmp_10;
            
#line 3940 
            goto ldv_57801;
            ldv_57800: 
#line 3941 
            ;
            
#line 3940 
            __const_udelay(4295000UL);
            ldv_57801: 
#line 3942 
            ;
            
#line 3940 
            tmp_10 = __ms_1;
            
#line 3940 
            __ms_1 -= 1UL;
            
#line 3940 
            ;
            
#line 3940 
            if (tmp_10 != 0UL) 
#line 3942 
                               goto ldv_57800; else 
#line 3945 
                                                    goto ldv_57802;
            ldv_57802: 
#line 3946 
            ;
          }
        }
        
#line 3941 
        delay_count += 1U;
      }
      
#line 3936 
      goto ldv_57803;
      ldv_57798: 
#line 3937 
      ;
      
#line 3945 
      if (delay_count <= 19U) {
        
#line 3947 
        tx_fail = rtl_get_bbreg(hw,3328U,4096U);
        
#line 3949 
        if (tx_fail != 4294967295U) {
          u32 tmp_11;
          u32 tmp_12;
          
#line 3950 
          rtl_write_dword(rtlpriv,3256U,33554432U);
          
#line 3951 
          tmp_11 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 3951 
          vdf_x[k] = (int)(tmp_11 << 21);
          
#line 3952 
          rtl_write_dword(rtlpriv,3256U,67108864U);
          
#line 3953 
          tmp_12 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 3953 
          vdf_y[k] = (int)(tmp_12 << 21);
          
#line 3954 
          tx0iqkok = (_Bool)1;
          
#line 3955 
          goto ldv_57804;
        }
        else {
          
#line 3957 
          rtl_set_bbreg(hw,3276U,2047U,0U);
          
#line 3958 
          rtl_set_bbreg(hw,3284U,2047U,512U);
          
#line 3959 
          tx0iqkok = (_Bool)0;
          
#line 3960 
          cal_retry += 1U;
          
#line 3961 
          if (cal_retry == 10U) 
#line 3962 
                                goto ldv_57804; else ;
        }
      }
      else {
        
#line 3965 
        tx0iqkok = (_Bool)0;
        
#line 3966 
        cal_retry += 1U;
        
#line 3967 
        if (cal_retry == 10U) 
#line 3968 
                              goto ldv_57804; else ;
      }
      
#line 3929 
      goto ldv_57805;
      ldv_57804: 
#line 3930 
      ;
      
#line 3897 
      k += 1;
      ldv_57807: 
#line 3898 
      ;
      
#line 3897 
      if (k <= 2) 
#line 3899 
                  goto ldv_57806; else 
#line 3902 
                                       goto ldv_57808;
      ldv_57808: 
#line 3903 
      ;
      
#line 3972 
      if (k == 3) {
        
#line 3973 
        tx_x0[cal] = vdf_x[k + -1];
        
#line 3974 
        tx_y0[cal] = vdf_y[k + -1];
      }
      else ;
    }
    else {
      
#line 3977 
      rtl_write_dword(rtlpriv,3200U,402689040U);
      
#line 3978 
      rtl_write_dword(rtlpriv,3204U,939559952U);
      
#line 3979 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 3980 
      cal_retry = 0U;
      ldv_57820: 
#line 3981 
      ;
      
#line 3983 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 3984 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 3986 
        unsigned long __ms_2 = 10UL;
        {
          unsigned long tmp_13;
          
#line 3986 
          goto ldv_57811;
          ldv_57810: 
#line 3987 
          ;
          
#line 3986 
          __const_udelay(4295000UL);
          ldv_57811: 
#line 3988 
          ;
          
#line 3986 
          tmp_13 = __ms_2;
          
#line 3986 
          __ms_2 -= 1UL;
          
#line 3986 
          ;
          
#line 3986 
          if (tmp_13 != 0UL) 
#line 3988 
                             goto ldv_57810; else 
#line 3991 
                                                  goto ldv_57812;
          ldv_57812: 
#line 3992 
          ;
        }
      }
      
#line 3987 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 3988 
      delay_count = 0U;
      ldv_57818: 
#line 3989 
      ;
      
#line 3990 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 3991 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 3992 
                                                         goto ldv_57813;
      else {
        
#line 3994 
        if (1) 
#line 3994 
               __const_udelay(4295000UL);
        else {
          
#line 3994 
          unsigned long __ms_3 = 1UL;
          {
            unsigned long tmp_14;
            
#line 3994 
            goto ldv_57816;
            ldv_57815: 
#line 3995 
            ;
            
#line 3994 
            __const_udelay(4295000UL);
            ldv_57816: 
#line 3996 
            ;
            
#line 3994 
            tmp_14 = __ms_3;
            
#line 3994 
            __ms_3 -= 1UL;
            
#line 3994 
            ;
            
#line 3994 
            if (tmp_14 != 0UL) 
#line 3996 
                               goto ldv_57815; else 
#line 3999 
                                                    goto ldv_57817;
            ldv_57817: 
#line 4000 
            ;
          }
        }
        
#line 3995 
        delay_count += 1U;
      }
      
#line 3990 
      goto ldv_57818;
      ldv_57813: 
#line 3991 
      ;
      
#line 3999 
      if (delay_count <= 19U) {
        
#line 4001 
        tx_fail = rtl_get_bbreg(hw,3328U,4096U);
        
#line 4003 
        if (tx_fail != 4294967295U) {
          u32 tmp_15;
          u32 tmp_16;
          
#line 4004 
          rtl_write_dword(rtlpriv,3256U,33554432U);
          
#line 4005 
          tmp_15 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4005 
          tx_x0[cal] = (int)(tmp_15 << 21);
          
#line 4006 
          rtl_write_dword(rtlpriv,3256U,67108864U);
          
#line 4007 
          tmp_16 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4007 
          tx_y0[cal] = (int)(tmp_16 << 21);
          
#line 4008 
          tx0iqkok = (_Bool)1;
          
#line 4009 
          goto ldv_57819;
        }
        else {
          
#line 4011 
          rtl_set_bbreg(hw,3276U,2047U,0U);
          
#line 4012 
          rtl_set_bbreg(hw,3284U,2047U,512U);
          
#line 4013 
          tx0iqkok = (_Bool)0;
          
#line 4014 
          cal_retry += 1U;
          
#line 4015 
          if (cal_retry == 10U) 
#line 4016 
                                goto ldv_57819; else ;
        }
      }
      else {
        
#line 4019 
        tx0iqkok = (_Bool)0;
        
#line 4020 
        cal_retry += 1U;
        
#line 4021 
        if (cal_retry == 10U) 
#line 4022 
                              goto ldv_57819; else ;
      }
      
#line 3983 
      goto ldv_57820;
      ldv_57819: 
#line 3984 
      ;
    }
    
#line 4027 
    if (! tx0iqkok) 
#line 4028 
                    goto ldv_57821; else ;
    
#line 4030 
    if ((int)vdf_enable == 1) {
      
#line 4031 
      rtl_set_bbreg(hw,3304U,2147483648U,0U);
      
#line 4032 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
        int tmp_17;
        int tmp_18;
        
#line 4032 
        tmp_17 = preempt_count();
        
#line 4032 
        tmp_18 = preempt_count();
        
#line 4032 
        printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_18 & 2096896UL,tmp_17 != 0);
      }
      else ;
      
#line 4033 
      k = 0;
      
#line 4033 
      goto ldv_57852;
      ldv_57851: 
#line 4034 
      ;
      
#line 4035 
      rtl_set_bbreg(hw,2092U,2147483648U,0U);
      
#line 4037 
      rtl_set_rfreg(hw,path,239U,1048575U,524288U);
      
#line 4038 
      rtl_set_rfreg(hw,path,48U,1048575U,196608U);
      
#line 4039 
      rtl_set_rfreg(hw,path,49U,1048575U,41U);
      
#line 4040 
      rtl_set_rfreg(hw,path,50U,1048575U,884731U);
      
#line 4041 
      rtl_set_rfreg(hw,path,101U,1048575U,temp_reg65);
      
#line 4042 
      rtl_set_rfreg(hw,path,143U,1048575U,565249U);
      
#line 4043 
      rtl_set_rfreg(hw,path,239U,1048575U,0U);
      
#line 4045 
      rtl_set_bbreg(hw,3256U,15U,13U);
      
#line 4046 
      rtl_write_dword(rtlpriv,2424U,687874048U);
      
#line 4047 
      rtl_write_dword(rtlpriv,2428U,2835357696U);
      
#line 4048 
      rtl_write_dword(rtlpriv,2436U,4630800U);
      
#line 4049 
      rtl_write_dword(rtlpriv,2316U,32768U);
      
#line 4050 
      rtl_write_dword(rtlpriv,2816U,50331904U);
      
#line 4051 
      rtl_set_bbreg(hw,2092U,2147483648U,1U);
      
#line 4052 
      switch (k) {
        case 0: 
#line 4053 
        ;
        
#line 4055 
        rtl_write_dword(rtlpriv,3200U,402689080U);
        
#line 4056 
        rtl_write_dword(rtlpriv,3204U,939559992U);
        
#line 4057 
        rtl_set_bbreg(hw,3304U,1073741824U,0U);
        
#line 4059 
        goto ldv_57823;
        case 1: 
#line 4060 
        ;
        
#line 4062 
        rtl_write_dword(rtlpriv,3200U,134253624U);
        
#line 4063 
        rtl_write_dword(rtlpriv,3204U,671124536U);
        
#line 4064 
        rtl_set_bbreg(hw,3304U,1073741824U,0U);
        
#line 4066 
        goto ldv_57823;
        case 2: 
#line 4067 
        ;
        
#line 4069 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_19;
          int tmp_20;
          
#line 4069 
          ;
          
#line 4069 
          ;
          
#line 4069 
          tmp_19 = preempt_count();
          
#line 4069 
          tmp_20 = preempt_count();
          
#line 4069 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_20 & 2096896UL,tmp_19 != 0,vdf_y[1] >> 21,vdf_y[0] >> 21);
        }
        else ;
        
#line 4072 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_21;
          int tmp_22;
          
#line 4072 
          ;
          
#line 4072 
          ;
          
#line 4072 
          tmp_21 = preempt_count();
          
#line 4072 
          tmp_22 = preempt_count();
          
#line 4072 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_22 & 2096896UL,tmp_21 != 0,vdf_x[1] >> 21,vdf_x[0] >> 21);
        }
        else ;
        
#line 4075 
        rx_dt[cal] = (vdf_y[1] >> 20) - (vdf_y[0] >> 20);
        
#line 4076 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_23;
          int tmp_24;
          
#line 4076 
          ;
          
#line 4076 
          tmp_23 = preempt_count();
          
#line 4076 
          tmp_24 = preempt_count();
          
#line 4076 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_24 & 2096896UL,tmp_23 != 0,rx_dt[cal]);
        }
        else ;
        
#line 4077 
        rx_dt[cal] = (rx_dt[cal] * 160000) / 13823;
        
#line 4078 
        rx_dt[cal] = (int)((unsigned int)(rx_dt[cal] >> 1) + ((unsigned int)rx_dt[cal] & 1U));
        
#line 4079 
        rtl_write_dword(rtlpriv,3200U,402689056U);
        
#line 4080 
        rtl_write_dword(rtlpriv,3204U,939559968U);
        
#line 4081 
        rtl_set_bbreg(hw,3304U,16383U,(unsigned int)rx_dt[cal] & 16383U);
        
#line 4083 
        goto ldv_57823;
        default: 
#line 4084 
        ;
        
#line 4085 
        goto ldv_57823;
      }
      ldv_57823: 
#line 4087 
      ;
      
#line 4087 
      rtl_write_dword(rtlpriv,3208U,2182480864U);
      
#line 4088 
      rtl_write_dword(rtlpriv,3212U,1746288278U);
      
#line 4089 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 4090 
      cal_retry = 0U;
      ldv_57838: 
#line 4091 
      ;
      
#line 4093 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 4094 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 4096 
        unsigned long __ms_4 = 10UL;
        {
          unsigned long tmp_25;
          
#line 4096 
          goto ldv_57829;
          ldv_57828: 
#line 4097 
          ;
          
#line 4096 
          __const_udelay(4295000UL);
          ldv_57829: 
#line 4098 
          ;
          
#line 4096 
          tmp_25 = __ms_4;
          
#line 4096 
          __ms_4 -= 1UL;
          
#line 4096 
          ;
          
#line 4096 
          if (tmp_25 != 0UL) 
#line 4098 
                             goto ldv_57828; else 
#line 4101 
                                                  goto ldv_57830;
          ldv_57830: 
#line 4102 
          ;
        }
      }
      
#line 4097 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 4098 
      delay_count = 0U;
      ldv_57836: 
#line 4099 
      ;
      
#line 4100 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 4101 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 4102 
                                                         goto ldv_57831;
      else {
        
#line 4104 
        if (1) 
#line 4104 
               __const_udelay(4295000UL);
        else {
          
#line 4104 
          unsigned long __ms_5 = 1UL;
          {
            unsigned long tmp_26;
            
#line 4104 
            goto ldv_57834;
            ldv_57833: 
#line 4105 
            ;
            
#line 4104 
            __const_udelay(4295000UL);
            ldv_57834: 
#line 4106 
            ;
            
#line 4104 
            tmp_26 = __ms_5;
            
#line 4104 
            __ms_5 -= 1UL;
            
#line 4104 
            ;
            
#line 4104 
            if (tmp_26 != 0UL) 
#line 4106 
                               goto ldv_57833; else 
#line 4109 
                                                    goto ldv_57835;
            ldv_57835: 
#line 4110 
            ;
          }
        }
        
#line 4105 
        delay_count += 1U;
      }
      
#line 4100 
      goto ldv_57836;
      ldv_57831: 
#line 4101 
      ;
      
#line 4109 
      if (delay_count <= 19U) {
        
#line 4111 
        tx_fail = rtl_get_bbreg(hw,3328U,4096U);
        
#line 4113 
        if (tx_fail != 4294967295U) {
          u32 tmp_27;
          u32 tmp_28;
          
#line 4114 
          rtl_write_dword(rtlpriv,3256U,33554432U);
          
#line 4115 
          tmp_27 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4115 
          tx_x0_rxk[cal] = (int)(tmp_27 << 21);
          
#line 4116 
          rtl_write_dword(rtlpriv,3256U,67108864U);
          
#line 4117 
          tmp_28 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4117 
          tx_y0_rxk[cal] = (int)(tmp_28 << 21);
          
#line 4118 
          tx0iqkok = (_Bool)1;
          
#line 4119 
          goto ldv_57837;
        }
        else {
          
#line 4121 
          tx0iqkok = (_Bool)0;
          
#line 4122 
          cal_retry += 1U;
          
#line 4123 
          if (cal_retry == 10U) 
#line 4124 
                                goto ldv_57837; else ;
        }
      }
      else {
        
#line 4127 
        tx0iqkok = (_Bool)0;
        
#line 4128 
        cal_retry += 1U;
        
#line 4129 
        if (cal_retry == 10U) 
#line 4130 
                              goto ldv_57837; else ;
      }
      
#line 4093 
      goto ldv_57838;
      ldv_57837: 
#line 4094 
      ;
      
#line 4134 
      if (! tx0iqkok) {
        
#line 4135 
        tx_x0_rxk[cal] = tx_x0[cal];
        
#line 4136 
        tx_y0_rxk[cal] = tx_y0[cal];
        
#line 4137 
        tx0iqkok = (_Bool)1;
        
#line 4138 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_29;
          int tmp_30;
          
#line 4138 
          tmp_29 = preempt_count();
          
#line 4138 
          tmp_30 = preempt_count();
          
#line 4138 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_30 & 2096896UL,tmp_29 != 0);
        }
        else ;
      }
      else ;
      
#line 4145 
      rtl_set_bbreg(hw,2092U,2147483648U,0U);
      
#line 4147 
      rtl_set_rfreg(hw,path,239U,1048575U,524288U);
      
#line 4148 
      rtl_set_rfreg(hw,path,48U,1048575U,196608U);
      
#line 4149 
      rtl_set_rfreg(hw,path,49U,1048575U,47U);
      
#line 4150 
      rtl_set_rfreg(hw,path,50U,1048575U,1048507U);
      
#line 4151 
      rtl_set_rfreg(hw,path,143U,1048575U,557057U);
      
#line 4152 
      rtl_set_rfreg(hw,path,101U,1048575U,602584U);
      
#line 4153 
      rtl_set_rfreg(hw,path,239U,1048575U,0U);
      
#line 4155 
      rtl_set_bbreg(hw,2424U,67076096U,(unsigned int)(tx_x0_rxk[cal] >> 21));
      
#line 4156 
      rtl_set_bbreg(hw,2424U,2047U,(unsigned int)(tx_y0_rxk[cal] >> 21));
      
#line 4157 
      rtl_set_bbreg(hw,2424U,2147483648U,1U);
      
#line 4158 
      rtl_set_bbreg(hw,2428U,2147483648U,0U);
      
#line 4159 
      rtl_set_bbreg(hw,3256U,15U,14U);
      
#line 4160 
      rtl_write_dword(rtlpriv,2316U,32768U);
      
#line 4161 
      rtl_write_dword(rtlpriv,2436U,4630801U);
      
#line 4163 
      rtl_set_bbreg(hw,2092U,2147483648U,1U);
      
#line 4164 
      rtl_set_bbreg(hw,3200U,536870912U,1U);
      
#line 4165 
      rtl_set_bbreg(hw,3204U,536870912U,0U);
      
#line 4166 
      rtl_write_dword(rtlpriv,3208U,34865433U);
      
#line 4168 
      rtl_write_dword(rtlpriv,3212U,672533760U);
      
#line 4170 
      if (k == 2) 
#line 4171 
                  rtl_set_bbreg(hw,3304U,1073741824U,1U); else ;
      
#line 4172 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 4174 
      cal_retry = 0U;
      ldv_57850: 
#line 4175 
      ;
      
#line 4177 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 4178 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 4180 
        unsigned long __ms_6 = 10UL;
        {
          unsigned long tmp_31;
          
#line 4180 
          goto ldv_57841;
          ldv_57840: 
#line 4181 
          ;
          
#line 4180 
          __const_udelay(4295000UL);
          ldv_57841: 
#line 4182 
          ;
          
#line 4180 
          tmp_31 = __ms_6;
          
#line 4180 
          __ms_6 -= 1UL;
          
#line 4180 
          ;
          
#line 4180 
          if (tmp_31 != 0UL) 
#line 4182 
                             goto ldv_57840; else 
#line 4185 
                                                  goto ldv_57842;
          ldv_57842: 
#line 4186 
          ;
        }
      }
      
#line 4181 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 4182 
      delay_count = 0U;
      ldv_57848: 
#line 4183 
      ;
      
#line 4184 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 4185 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 4186 
                                                         goto ldv_57843;
      else {
        
#line 4188 
        if (1) 
#line 4188 
               __const_udelay(4295000UL);
        else {
          
#line 4188 
          unsigned long __ms_7 = 1UL;
          {
            unsigned long tmp_32;
            
#line 4188 
            goto ldv_57846;
            ldv_57845: 
#line 4189 
            ;
            
#line 4188 
            __const_udelay(4295000UL);
            ldv_57846: 
#line 4190 
            ;
            
#line 4188 
            tmp_32 = __ms_7;
            
#line 4188 
            __ms_7 -= 1UL;
            
#line 4188 
            ;
            
#line 4188 
            if (tmp_32 != 0UL) 
#line 4190 
                               goto ldv_57845; else 
#line 4193 
                                                    goto ldv_57847;
            ldv_57847: 
#line 4194 
            ;
          }
        }
        
#line 4189 
        delay_count += 1U;
      }
      
#line 4184 
      goto ldv_57848;
      ldv_57843: 
#line 4185 
      ;
      
#line 4193 
      if (delay_count <= 19U) {
        
#line 4195 
        rx_fail = rtl_get_bbreg(hw,3328U,2048U);
        
#line 4196 
        if (rx_fail == 0U) {
          u32 tmp_33;
          u32 tmp_34;
          
#line 4197 
          rtl_write_dword(rtlpriv,3256U,100663296U);
          
#line 4198 
          tmp_33 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4198 
          vdf_x[k] = (int)(tmp_33 << 21);
          
#line 4199 
          rtl_write_dword(rtlpriv,3256U,134217728U);
          
#line 4200 
          tmp_34 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4200 
          vdf_y[k] = (int)(tmp_34 << 21);
          
#line 4201 
          rx0iqkok = (_Bool)1;
          
#line 4202 
          goto ldv_57849;
        }
        else {
          
#line 4204 
          rtl_set_bbreg(hw,3088U,1023U,256U);
          
#line 4205 
          rtl_set_bbreg(hw,3088U,67043328U,0U);
          
#line 4206 
          rx0iqkok = (_Bool)0;
          
#line 4207 
          cal_retry += 1U;
          
#line 4208 
          if (cal_retry == 10U) 
#line 4209 
                                goto ldv_57849; else ;
        }
      }
      else {
        
#line 4213 
        rx0iqkok = (_Bool)0;
        
#line 4214 
        cal_retry += 1U;
        
#line 4215 
        if (cal_retry == 10U) 
#line 4216 
                              goto ldv_57849; else ;
      }
      
#line 4177 
      goto ldv_57850;
      ldv_57849: 
#line 4178 
      ;
      
#line 4033 
      k += 1;
      ldv_57852: 
#line 4034 
      ;
      
#line 4033 
      if (k <= 2) 
#line 4035 
                  goto ldv_57851; else 
#line 4038 
                                       goto ldv_57853;
      ldv_57853: 
#line 4039 
      ;
      
#line 4221 
      if (k == 3) {
        
#line 4222 
        rx_x0[cal] = vdf_x[k + -1];
        
#line 4223 
        rx_y0[cal] = vdf_y[k + -1];
      }
      else ;
      
#line 4225 
      rtl_set_bbreg(hw,3304U,2147483648U,1U);
    }
    else {
      
#line 4230 
      rtl_set_bbreg(hw,2092U,2147483648U,0U);
      
#line 4232 
      rtl_set_rfreg(hw,path,239U,1048575U,524288U);
      
#line 4233 
      rtl_set_rfreg(hw,path,48U,1048575U,196608U);
      
#line 4234 
      rtl_set_rfreg(hw,path,49U,1048575U,41U);
      
#line 4235 
      rtl_set_rfreg(hw,path,50U,1048575U,884731U);
      
#line 4236 
      rtl_set_rfreg(hw,path,101U,1048575U,temp_reg65);
      
#line 4237 
      rtl_set_rfreg(hw,path,143U,1048575U,565249U);
      
#line 4238 
      rtl_set_rfreg(hw,path,239U,1048575U,0U);
      
#line 4239 
      rtl_write_dword(rtlpriv,2316U,32768U);
      
#line 4240 
      rtl_write_dword(rtlpriv,2816U,50331904U);
      
#line 4241 
      rtl_write_dword(rtlpriv,2436U,4630800U);
      
#line 4243 
      rtl_set_bbreg(hw,2092U,2147483648U,1U);
      
#line 4244 
      rtl_write_dword(rtlpriv,3200U,402689040U);
      
#line 4245 
      rtl_write_dword(rtlpriv,3204U,939559952U);
      
#line 4246 
      rtl_write_dword(rtlpriv,3208U,2182480864U);
      
#line 4248 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 4249 
      cal_retry = 0U;
      ldv_57865: 
#line 4250 
      ;
      
#line 4252 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 4253 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 4255 
        unsigned long __ms_8 = 10UL;
        {
          unsigned long tmp_35;
          
#line 4255 
          goto ldv_57856;
          ldv_57855: 
#line 4256 
          ;
          
#line 4255 
          __const_udelay(4295000UL);
          ldv_57856: 
#line 4257 
          ;
          
#line 4255 
          tmp_35 = __ms_8;
          
#line 4255 
          __ms_8 -= 1UL;
          
#line 4255 
          ;
          
#line 4255 
          if (tmp_35 != 0UL) 
#line 4257 
                             goto ldv_57855; else 
#line 4260 
                                                  goto ldv_57857;
          ldv_57857: 
#line 4261 
          ;
        }
      }
      
#line 4256 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 4257 
      delay_count = 0U;
      ldv_57863: 
#line 4258 
      ;
      
#line 4259 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 4260 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 4261 
                                                         goto ldv_57858;
      else {
        
#line 4263 
        if (1) 
#line 4263 
               __const_udelay(4295000UL);
        else {
          
#line 4263 
          unsigned long __ms_9 = 1UL;
          {
            unsigned long tmp_36;
            
#line 4263 
            goto ldv_57861;
            ldv_57860: 
#line 4264 
            ;
            
#line 4263 
            __const_udelay(4295000UL);
            ldv_57861: 
#line 4265 
            ;
            
#line 4263 
            tmp_36 = __ms_9;
            
#line 4263 
            __ms_9 -= 1UL;
            
#line 4263 
            ;
            
#line 4263 
            if (tmp_36 != 0UL) 
#line 4265 
                               goto ldv_57860; else 
#line 4268 
                                                    goto ldv_57862;
            ldv_57862: 
#line 4269 
            ;
          }
        }
        
#line 4264 
        delay_count += 1U;
      }
      
#line 4259 
      goto ldv_57863;
      ldv_57858: 
#line 4260 
      ;
      
#line 4268 
      if (delay_count <= 19U) {
        
#line 4270 
        tx_fail = rtl_get_bbreg(hw,3328U,4096U);
        
#line 4272 
        if (tx_fail != 4294967295U) {
          u32 tmp_37;
          u32 tmp_38;
          
#line 4273 
          rtl_write_dword(rtlpriv,3256U,33554432U);
          
#line 4274 
          tmp_37 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4274 
          tx_x0_rxk[cal] = (int)(tmp_37 << 21);
          
#line 4275 
          rtl_write_dword(rtlpriv,3256U,67108864U);
          
#line 4276 
          tmp_38 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4276 
          tx_y0_rxk[cal] = (int)(tmp_38 << 21);
          
#line 4277 
          tx0iqkok = (_Bool)1;
          
#line 4278 
          goto ldv_57864;
        }
        else {
          
#line 4280 
          tx0iqkok = (_Bool)0;
          
#line 4281 
          cal_retry += 1U;
          
#line 4282 
          if (cal_retry == 10U) 
#line 4283 
                                goto ldv_57864; else ;
        }
      }
      else {
        
#line 4286 
        tx0iqkok = (_Bool)0;
        
#line 4287 
        cal_retry += 1U;
        
#line 4288 
        if (cal_retry == 10U) 
#line 4289 
                              goto ldv_57864; else ;
      }
      
#line 4252 
      goto ldv_57865;
      ldv_57864: 
#line 4253 
      ;
      
#line 4293 
      if (! tx0iqkok) {
        
#line 4294 
        tx_x0_rxk[cal] = tx_x0[cal];
        
#line 4295 
        tx_y0_rxk[cal] = tx_y0[cal];
        
#line 4296 
        tx0iqkok = (_Bool)1;
        
#line 4297 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
          int tmp_39;
          int tmp_40;
          
#line 4297 
          tmp_39 = preempt_count();
          
#line 4297 
          tmp_40 = preempt_count();
          
#line 4297 
          printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_40 & 2096896UL,tmp_39 != 0);
        }
        else ;
      }
      else ;
      
#line 4302 
      rtl_set_bbreg(hw,2092U,2147483648U,0U);
      
#line 4304 
      rtl_set_rfreg(hw,path,239U,1048575U,524288U);
      
#line 4305 
      rtl_set_rfreg(hw,path,48U,1048575U,196608U);
      
#line 4306 
      rtl_set_rfreg(hw,path,49U,1048575U,47U);
      
#line 4307 
      rtl_set_rfreg(hw,path,50U,1048575U,1048507U);
      
#line 4308 
      rtl_set_rfreg(hw,path,143U,1048575U,557057U);
      
#line 4309 
      rtl_set_rfreg(hw,path,101U,1048575U,602584U);
      
#line 4310 
      rtl_set_rfreg(hw,path,239U,1048575U,0U);
      
#line 4312 
      rtl_set_bbreg(hw,2424U,67076096U,(unsigned int)(tx_x0_rxk[cal] >> 21));
      
#line 4313 
      rtl_set_bbreg(hw,2424U,2047U,(unsigned int)(tx_y0_rxk[cal] >> 21));
      
#line 4314 
      rtl_set_bbreg(hw,2424U,2147483648U,1U);
      
#line 4315 
      rtl_set_bbreg(hw,2428U,2147483648U,0U);
      
#line 4317 
      rtl_write_dword(rtlpriv,2316U,32768U);
      
#line 4318 
      rtl_write_dword(rtlpriv,2436U,4630801U);
      
#line 4320 
      rtl_set_bbreg(hw,2092U,2147483648U,1U);
      
#line 4321 
      rtl_write_dword(rtlpriv,3200U,939559952U);
      
#line 4322 
      rtl_write_dword(rtlpriv,3204U,402689040U);
      
#line 4323 
      rtl_write_dword(rtlpriv,3208U,34865433U);
      
#line 4325 
      rtl_write_dword(rtlpriv,3212U,672533760U);
      
#line 4327 
      rtl_write_dword(rtlpriv,3256U,1048576U);
      
#line 4329 
      cal_retry = 0U;
      ldv_57877: 
#line 4330 
      ;
      
#line 4332 
      rtl_write_dword(rtlpriv,2432U,4194304000U);
      
#line 4333 
      rtl_write_dword(rtlpriv,2432U,4160749568U);
      {
        
#line 4335 
        unsigned long __ms_10 = 10UL;
        {
          unsigned long tmp_41;
          
#line 4335 
          goto ldv_57868;
          ldv_57867: 
#line 4336 
          ;
          
#line 4335 
          __const_udelay(4295000UL);
          ldv_57868: 
#line 4337 
          ;
          
#line 4335 
          tmp_41 = __ms_10;
          
#line 4335 
          __ms_10 -= 1UL;
          
#line 4335 
          ;
          
#line 4335 
          if (tmp_41 != 0UL) 
#line 4337 
                             goto ldv_57867; else 
#line 4340 
                                                  goto ldv_57869;
          ldv_57869: 
#line 4341 
          ;
        }
      }
      
#line 4336 
      rtl_write_dword(rtlpriv,3256U,0U);
      
#line 4337 
      delay_count = 0U;
      ldv_57875: 
#line 4338 
      ;
      
#line 4339 
      iqk_ready = rtl_get_bbreg(hw,3328U,1024U);
      
#line 4340 
      if (iqk_ready != 4294967295U || delay_count > 20U) 
#line 4341 
                                                         goto ldv_57870;
      else {
        
#line 4343 
        if (1) 
#line 4343 
               __const_udelay(4295000UL);
        else {
          
#line 4343 
          unsigned long __ms_11 = 1UL;
          {
            unsigned long tmp_42;
            
#line 4343 
            goto ldv_57873;
            ldv_57872: 
#line 4344 
            ;
            
#line 4343 
            __const_udelay(4295000UL);
            ldv_57873: 
#line 4345 
            ;
            
#line 4343 
            tmp_42 = __ms_11;
            
#line 4343 
            __ms_11 -= 1UL;
            
#line 4343 
            ;
            
#line 4343 
            if (tmp_42 != 0UL) 
#line 4345 
                               goto ldv_57872; else 
#line 4348 
                                                    goto ldv_57874;
            ldv_57874: 
#line 4349 
            ;
          }
        }
        
#line 4344 
        delay_count += 1U;
      }
      
#line 4339 
      goto ldv_57875;
      ldv_57870: 
#line 4340 
      ;
      
#line 4348 
      if (delay_count <= 19U) {
        
#line 4350 
        rx_fail = rtl_get_bbreg(hw,3328U,2048U);
        
#line 4351 
        if (rx_fail == 0U) {
          u32 tmp_43;
          u32 tmp_44;
          
#line 4352 
          rtl_write_dword(rtlpriv,3256U,100663296U);
          
#line 4353 
          tmp_43 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4353 
          rx_x0[cal] = (int)(tmp_43 << 21);
          
#line 4354 
          rtl_write_dword(rtlpriv,3256U,134217728U);
          
#line 4355 
          tmp_44 = rtl_get_bbreg(hw,3328U,134152192U);
          
#line 4355 
          rx_y0[cal] = (int)(tmp_44 << 21);
          
#line 4356 
          rx0iqkok = (_Bool)1;
          
#line 4357 
          goto ldv_57876;
        }
        else {
          
#line 4359 
          rtl_set_bbreg(hw,3088U,1023U,256U);
          
#line 4360 
          rtl_set_bbreg(hw,3088U,67043328U,0U);
          
#line 4361 
          rx0iqkok = (_Bool)0;
          
#line 4362 
          cal_retry += 1U;
          
#line 4363 
          if (cal_retry == 10U) 
#line 4364 
                                goto ldv_57876; else ;
        }
      }
      else {
        
#line 4368 
        rx0iqkok = (_Bool)0;
        
#line 4369 
        cal_retry += 1U;
        
#line 4370 
        if (cal_retry == 10U) 
#line 4371 
                              goto ldv_57876; else ;
      }
      
#line 4332 
      goto ldv_57877;
      ldv_57876: 
#line 4333 
      ;
    }
    
#line 4376 
    if ((int)tx0iqkok != 0) 
#line 4377 
                            tx_average += 1; else ;
    
#line 4378 
    if ((int)rx0iqkok != 0) 
#line 4379 
                            rx_average += 1; else ;
    
#line 4380 
    rtl_set_bbreg(hw,2092U,2147483648U,0U);
    
#line 4381 
    rtl_set_rfreg(hw,path,101U,1048575U,temp_reg65);
    
#line 4382 
    goto ldv_57821;
    default: 
#line 4383 
    ;
    
#line 4384 
    goto ldv_57821;
  }
  ldv_57821: 
#line 4386 
  ;
  
#line 4386 
  cal += 1U;
  ldv_57880: 
#line 4387 
  ;
  
#line 3796 
  if (cal <= 9U) 
#line 3798 
                 goto ldv_57879; else 
#line 3801 
                                      goto ldv_57881;
  ldv_57881: 
#line 3802 
  ;
  
#line 4390 
  switch ((unsigned int)path) {
    case (unsigned int)0: 
#line 4391 
    ;
    
#line 4392 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_45;
      int tmp_46;
      
#line 4392 
      tmp_45 = preempt_count();
      
#line 4392 
      tmp_46 = preempt_count();
      
#line 4392 
      printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_46 & 2096896UL,tmp_45 != 0);
    }
    else ;
    
#line 4394 
    if (tx_average == 0) 
#line 4395 
                         goto ldv_57883; else ;
    
#line 4397 
    i = 0;
    
#line 4397 
    goto ldv_57885;
    ldv_57884: 
#line 4398 
    ;
    
#line 4398 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_47;
      int tmp_48;
      
#line 4398 
      ;
      
#line 4398 
      ;
      
#line 4398 
      ;
      
#line 4398 
      ;
      
#line 4398 
      tmp_47 = preempt_count();
      
#line 4398 
      tmp_48 = preempt_count();
      
#line 4398 
      printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_48 & 2096896UL,tmp_47 != 0,i,tx_x0_rxk[i] >> 21,i,tx_y0_rxk[i] >> 21);
    }
    else ;
    
#line 4402 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_49;
      int tmp_50;
      
#line 4402 
      ;
      
#line 4402 
      ;
      
#line 4402 
      ;
      
#line 4402 
      ;
      
#line 4402 
      tmp_49 = preempt_count();
      
#line 4402 
      tmp_50 = preempt_count();
      
#line 4402 
      printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_50 & 2096896UL,tmp_49 != 0,i,tx_x0[i] >> 21,i,tx_y0[i] >> 21);
    }
    else ;
    
#line 4397 
    i += 1;
    ldv_57885: 
#line 4398 
    ;
    
#line 4397 
    if (i < tx_average) 
#line 4399 
                        goto ldv_57884; else 
#line 4402 
                                             goto ldv_57886;
    ldv_57886: 
#line 4403 
    ;
    
#line 4407 
    i = 0;
    
#line 4407 
    goto ldv_57892;
    ldv_57891: 
#line 4408 
    ;
    
#line 4408 
    ii = i + 1;
    
#line 4408 
    goto ldv_57889;
    ldv_57888: 
#line 4409 
    ;
    
#line 4409 
    dx = (tx_x0[i] >> 21) - (tx_x0[ii] >> 21);
    
#line 4410 
    if ((unsigned int)dx + 2U <= 4U) {
      
#line 4411 
      dy = (tx_y0[i] >> 21) - (tx_y0[ii] >> 21);
      
#line 4412 
      if ((unsigned int)dy + 2U <= 4U) {
        
#line 4413 
        tx_x = ((tx_x0[i] >> 21) + (tx_x0[ii] >> 21)) / 2;
        
#line 4414 
        tx_y = ((tx_y0[i] >> 21) + (tx_y0[ii] >> 21)) / 2;
        
#line 4415 
        tx_finish = 1;
        
#line 4416 
        goto ldv_57887;
      }
      else ;
    }
    else ;
    
#line 4408 
    ii += 1;
    ldv_57889: 
#line 4409 
    ;
    
#line 4408 
    if (ii < tx_average) 
#line 4410 
                         goto ldv_57888; else 
#line 4413 
                                              goto ldv_57887;
    ldv_57887: 
#line 4414 
    ;
    
#line 4420 
    if (tx_finish == 1) 
#line 4421 
                        goto ldv_57890; else ;
    
#line 4407 
    i += 1;
    ldv_57892: 
#line 4408 
    ;
    
#line 4407 
    if (i < tx_average) 
#line 4409 
                        goto ldv_57891; else 
#line 4412 
                                             goto ldv_57890;
    ldv_57890: 
#line 4413 
    ;
    
#line 4424 
    if (tx_finish == 1) 
#line 4425 
                        _rtl8821ae_iqk_tx_fill_iqc(hw,path,(unsigned int)tx_x,(unsigned int)tx_y); else 
                                                                    
#line 4427 
                                                                    _rtl8821ae_iqk_tx_fill_iqc(hw,path,512U,0U);
    
#line 4429 
    if (rx_average == 0) 
#line 4430 
                         goto ldv_57883; else ;
    
#line 4432 
    i = 0;
    
#line 4432 
    goto ldv_57894;
    ldv_57893: 
#line 4433 
    ;
    
#line 4433 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp_51;
      int tmp_52;
      
#line 4433 
      ;
      
#line 4433 
      ;
      
#line 4433 
      ;
      
#line 4433 
      ;
      
#line 4433 
      tmp_51 = preempt_count();
      
#line 4433 
      tmp_52 = preempt_count();
      
#line 4433 
      printk("\001","_rtl8821ae_iqk_tx",(unsigned long)tmp_52 & 2096896UL,tmp_51 != 0,i,rx_x0[i] >> 21,i,rx_y0[i] >> 21);
    }
    else ;
    
#line 4432 
    i += 1;
    ldv_57894: 
#line 4433 
    ;
    
#line 4432 
    if (i < rx_average) 
#line 4434 
                        goto ldv_57893; else 
#line 4437 
                                             goto ldv_57895;
    ldv_57895: 
#line 4438 
    ;
    
#line 4437 
    i = 0;
    
#line 4437 
    goto ldv_57901;
    ldv_57900: 
#line 4438 
    ;
    
#line 4438 
    ii = i + 1;
    
#line 4438 
    goto ldv_57898;
    ldv_57897: 
#line 4439 
    ;
    
#line 4439 
    dx = (rx_x0[i] >> 21) - (rx_x0[ii] >> 21);
    
#line 4440 
    if ((unsigned int)dx + 3U <= 6U) {
      
#line 4441 
      dy = (rx_y0[i] >> 21) - (rx_y0[ii] >> 21);
      
#line 4442 
      if ((unsigned int)dy + 3U <= 6U) {
        
#line 4443 
        rx_x = ((rx_x0[i] >> 21) + (rx_x0[ii] >> 21)) / 2;
        
#line 4444 
        rx_y = ((rx_y0[i] >> 21) + (rx_y0[ii] >> 21)) / 2;
        
#line 4445 
        rx_finish = 1;
        
#line 4446 
        goto ldv_57896;
      }
      else ;
    }
    else ;
    
#line 4438 
    ii += 1;
    ldv_57898: 
#line 4439 
    ;
    
#line 4438 
    if (ii < rx_average) 
#line 4440 
                         goto ldv_57897; else 
#line 4443 
                                              goto ldv_57896;
    ldv_57896: 
#line 4444 
    ;
    
#line 4450 
    if (rx_finish == 1) 
#line 4451 
                        goto ldv_57899; else ;
    
#line 4437 
    i += 1;
    ldv_57901: 
#line 4438 
    ;
    
#line 4437 
    if (i < rx_average) 
#line 4439 
                        goto ldv_57900; else 
#line 4442 
                                             goto ldv_57899;
    ldv_57899: 
#line 4443 
    ;
    
#line 4454 
    if (rx_finish == 1) 
#line 4455 
                        _rtl8821ae_iqk_rx_fill_iqc(hw,path,(unsigned int)rx_x,(unsigned int)rx_y); else 
                                                                    
#line 4457 
                                                                    _rtl8821ae_iqk_rx_fill_iqc(hw,path,512U,0U);
    
#line 4458 
    goto ldv_57883;
    default: 
#line 4459 
    ;
    
#line 4460 
    goto ldv_57883;
  }
  ldv_57883: 
#line 4462 
  ;
  
#line 4463 
  return;
}


#line 4464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_restore_rf(struct ieee80211_hw *hw, enum radio_path path, u32 *backup_rf_reg, u32 *rf_backup, u32 rf_reg_num)
{
  u32 i;
  
#line 4469 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4472 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 4473 
  i = 0U;
  
#line 4473 
  goto ldv_57913;
  ldv_57912: 
#line 4474 
  ;
  
#line 4474 
  rtl_set_rfreg(hw,path,*(backup_rf_reg + i),1048575U,*(rf_backup + i));
  
#line 4473 
  i += 1U;
  ldv_57913: 
#line 4474 
  ;
  
#line 4473 
  if (i <= 2U) 
#line 4475 
               goto ldv_57912; else 
#line 4478 
                                    goto ldv_57914;
  ldv_57914: 
#line 4479 
  ;
  
#line 4477 
  switch ((unsigned int)path) {
    case (unsigned int)0: 
#line 4478 
    ;
    
#line 4479 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
      int tmp;
      int tmp_0;
      
#line 4479 
      tmp = preempt_count();
      
#line 4479 
      tmp_0 = preempt_count();
      
#line 4479 
      printk("\001","_rtl8821ae_iqk_restore_rf",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
    }
    else ;
    
#line 4481 
    goto ldv_57917;
    default: 
#line 4482 
    ;
    
#line 4483 
    goto ldv_57917;
  }
  ldv_57917: 
#line 4485 
  ;
  
#line 4486 
  return;
}


#line 4487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_restore_afe(struct ieee80211_hw *hw, u32 *afe_backup, u32 *backup_afe_reg, u32 afe_num)
{
  u32 i;
  
#line 4492 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4494 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 4496 
  i = 0U;
  
#line 4496 
  goto ldv_57928;
  ldv_57927: 
#line 4497 
  ;
  
#line 4497 
  rtl_write_dword(rtlpriv,*(backup_afe_reg + i),*(afe_backup + i));
  
#line 4496 
  i += 1U;
  ldv_57928: 
#line 4497 
  ;
  
#line 4496 
  if (i < afe_num) 
#line 4498 
                   goto ldv_57927; else 
#line 4501 
                                        goto ldv_57929;
  ldv_57929: 
#line 4502 
  ;
  
#line 4498 
  rtl_set_bbreg(hw,2092U,2147483648U,1U);
  
#line 4499 
  rtl_write_dword(rtlpriv,3200U,0U);
  
#line 4500 
  rtl_write_dword(rtlpriv,3204U,0U);
  
#line 4501 
  rtl_write_dword(rtlpriv,3208U,0U);
  
#line 4502 
  rtl_write_dword(rtlpriv,3212U,1006632960U);
  
#line 4503 
  rtl_write_dword(rtlpriv,3216U,128U);
  
#line 4504 
  rtl_write_dword(rtlpriv,3220U,0U);
  
#line 4505 
  rtl_write_dword(rtlpriv,3268U,537133056U);
  
#line 4506 
  rtl_write_dword(rtlpriv,3272U,536870912U);
  
#line 4507 
  rtl_write_dword(rtlpriv,3256U,0U);
  
#line 4508 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4508 
    tmp = preempt_count();
    
#line 4508 
    tmp_0 = preempt_count();
    
#line 4508 
    printk("\001","_rtl8821ae_iqk_restore_afe",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 4509 
  return;
}


#line 4511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_iqk_restore_macbb(struct ieee80211_hw *hw, u32 *macbb_backup, u32 *backup_macbb_reg, u32 macbb_num)
{
  u32 i;
  
#line 4517 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4519 
  rtl_set_bbreg(hw,2092U,2147483648U,0U);
  
#line 4521 
  i = 0U;
  
#line 4521 
  goto ldv_57940;
  ldv_57939: 
#line 4522 
  ;
  
#line 4522 
  rtl_write_dword(rtlpriv,*(backup_macbb_reg + i),*(macbb_backup + i));
  
#line 4521 
  i += 1U;
  ldv_57940: 
#line 4522 
  ;
  
#line 4521 
  if (i < macbb_num) 
#line 4523 
                     goto ldv_57939; else 
#line 4526 
                                          goto ldv_57941;
  ldv_57941: 
#line 4527 
  ;
  
#line 4523 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4523 
    tmp = preempt_count();
    
#line 4523 
    tmp_0 = preempt_count();
    
#line 4523 
    printk("\001","_rtl8821ae_iqk_restore_macbb",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 4524 
  return;
}


#line 4534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_iq_calibrate(struct ieee80211_hw *hw)
{
  u32 macbb_backup[11U];
  u32 afe_backup[12U];
  u32 rfa_backup[3U];
  u32 rfb_backup[3U];
  
#line 4540 
  u32 backup_macbb_reg[11U] = {2816U, 1312U, 1360U, 2056U, 2316U, 3072U, 3152U, 3584U, 3664U, 2104U, 2092U};
  
#line 4544 
  u32 backup_afe_reg[12U] = {3164U, 3168U, 3172U, 3176U, 3180U, 3184U, 3188U, 3192U, 3196U, 3200U, 3204U, 3256U};
  
#line 4548 
  u32 backup_rf_reg[3U] = {101U, 143U, 0U};
  
#line 4550 
  _rtl8821ae_iqk_backup_macbb(hw,(u32 *)(& macbb_backup),(u32 *)(& backup_macbb_reg),11U);
  
#line 4552 
  _rtl8821ae_iqk_backup_afe(hw,(u32 *)(& afe_backup),(u32 *)(& backup_afe_reg),12U);
  
#line 4553 
  _rtl8821ae_iqk_backup_rf(hw,(u32 *)(& rfa_backup),(u32 *)(& rfb_backup),(u32 *)(& backup_rf_reg),3U);
  
#line 4556 
  _rtl8821ae_iqk_configure_mac(hw);
  
#line 4557 
  _rtl8821ae_iqk_tx(hw,(enum radio_path)RF90_PATH_A);
  
#line 4558 
  _rtl8821ae_iqk_restore_rf(hw,(enum radio_path)RF90_PATH_A,(u32 *)(& backup_rf_reg),(u32 *)(& rfa_backup),3U);
  
#line 4561 
  _rtl8821ae_iqk_restore_afe(hw,(u32 *)(& afe_backup),(u32 *)(& backup_afe_reg),12U);
  
#line 4562 
  _rtl8821ae_iqk_restore_macbb(hw,(u32 *)(& macbb_backup),(u32 *)(& backup_macbb_reg),11U);
  
#line 4563 
  return;
}


#line 4566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void _rtl8821ae_phy_set_rfpath_switch(struct ieee80211_hw *hw, bool main_0)
{
  
#line 4568 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4571 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4571 
    tmp = preempt_count();
    
#line 4571 
    tmp_0 = preempt_count();
    
#line 4571 
    printk("\001","_rtl8821ae_phy_set_rfpath_switch",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
  }
  else ;
  
#line 4573 
  if ((int)main_0 != 0) 
#line 4574 
                        rtl_set_bbreg(hw,3252U,805306368U,1U); else 
#line 4576 
                                                                    rtl_set_bbreg(hw,3252U,805306368U,2U);
  
#line 4577 
  return;
}


#line 4582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8812ae_phy_iq_calibrate(struct ieee80211_hw *hw, bool b_recovery)
{
  
#line 4584 
  return;
}


#line 4586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8812ae_do_iqk(struct ieee80211_hw *hw, u8 delta_thermal_index, u8 thermal_value, u8 threshold)
{
  
#line 4589 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 4591 
  rtldm->thermalvalue_iqk = thermal_value;
  
#line 4592 
  rtl8812ae_phy_iq_calibrate(hw,(_Bool)0);
  
#line 4593 
  return;
}


#line 4595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_iq_calibrate(struct ieee80211_hw *hw, bool b_recovery)
{
  
#line 4597 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4598 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 4600 
  if ((unsigned int)rtlphy->lck_inprogress == 0U) {
    
#line 4601 
    ldv_spin_lock_76(& rtlpriv->locks.iqk_lock);
    
#line 4602 
    rtlphy->lck_inprogress = (unsigned char)1U;
    
#line 4603 
    ldv_spin_unlock_77(& rtlpriv->locks.iqk_lock);
    
#line 4605 
    _rtl8821ae_phy_iq_calibrate(hw);
    
#line 4607 
    ldv_spin_lock_78_0(& rtlpriv->locks.iqk_lock);
    
#line 4608 
    rtlphy->lck_inprogress = (unsigned char)0U;
    
#line 4609 
    ldv_spin_unlock_79_0(& rtlpriv->locks.iqk_lock);
  }
  else ;
  
#line 4611 
  return;
}


#line 4613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_reset_iqk_result(struct ieee80211_hw *hw)
{
  u8 i;
  
#line 4615 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4616 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 4619 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 2147483648ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 3) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4619 
    tmp = preempt_count();
    
#line 4619 
    tmp_0 = preempt_count();
    
#line 4619 
    printk("\001","rtl8821ae_reset_iqk_result",(unsigned long)tmp_0 & 2096896UL,tmp != 0,46,46);
  }
  else ;
  
#line 4625 
  i = (unsigned char)0U;
  
#line 4625 
  goto ldv_57984;
  ldv_57983: 
#line 4626 
  ;
  
#line 4626 
  rtlphy->iqk_matrix[(int)i].value[0][0] = 256L;
  
#line 4627 
  rtlphy->iqk_matrix[(int)i].value[0][2] = 256L;
  
#line 4628 
  rtlphy->iqk_matrix[(int)i].value[0][4] = 256L;
  
#line 4629 
  rtlphy->iqk_matrix[(int)i].value[0][6] = 256L;
  
#line 4631 
  rtlphy->iqk_matrix[(int)i].value[0][1] = 0L;
  
#line 4632 
  rtlphy->iqk_matrix[(int)i].value[0][3] = 0L;
  
#line 4633 
  rtlphy->iqk_matrix[(int)i].value[0][5] = 0L;
  
#line 4634 
  rtlphy->iqk_matrix[(int)i].value[0][7] = 0L;
  
#line 4636 
  rtlphy->iqk_matrix[(int)i].iqk_done = (_Bool)0;
  
#line 4625 
  i = (u8)((int)i + 1);
  ldv_57984: 
#line 4626 
  ;
  
#line 4625 
  if ((unsigned int)i <= 45U) 
#line 4627 
                              goto ldv_57983; else 
#line 4630 
                                                   goto ldv_57985;
  ldv_57985: 
#line 4631 
  ;
  
#line 4632 
  return;
}


#line 4640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_do_iqk(struct ieee80211_hw *hw, u8 delta_thermal_index, u8 thermal_value, u8 threshold)
{
  
#line 4643 
  struct rtl_dm *rtldm = & ((struct rtl_priv *)hw->priv)->dm;
  
#line 4645 
  rtl8821ae_reset_iqk_result(hw);
  
#line 4647 
  rtldm->thermalvalue_iqk = thermal_value;
  
#line 4648 
  rtl8821ae_phy_iq_calibrate(hw,(_Bool)0);
  
#line 4649 
  return;
}


#line 4651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_lc_calibrate(struct ieee80211_hw *hw)
{
  
#line 4653 
  return;
}


#line 4655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_ap_calibrate(struct ieee80211_hw *hw, char delta)
{
  
#line 4657 
  return;
}


#line 4659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
void rtl8821ae_phy_set_rfpath_switch(struct ieee80211_hw *hw, bool bmain)
{
  
#line 4661 
  _rtl8821ae_phy_set_rfpath_switch(hw,(_Bool)((bool)((int)bmain) != 0));
  
#line 4662 
  return;
}


#line 4664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_set_io_cmd(struct ieee80211_hw *hw, enum io_type iotype)
{
  bool __retres;
  
#line 4666 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4667 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 4668 
  bool postprocessing = (_Bool)0;
  
#line 4670 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4670 
    ;
    
#line 4670 
    ;
    
#line 4670 
    tmp = preempt_count();
    
#line 4670 
    tmp_0 = preempt_count();
    
#line 4670 
    printk("\001","rtl8821ae_phy_set_io_cmd",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(unsigned int)iotype,(int)rtlphy->set_io_inprogress);
  }
  else ;
  
#line 4674 
  switch ((unsigned int)iotype) {
    case (unsigned int)2: 
#line 4675 
    ;
    
#line 4676 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 4676 
      tmp_1 = preempt_count();
      
#line 4676 
      tmp_2 = preempt_count();
      
#line 4676 
      printk("\001","rtl8821ae_phy_set_io_cmd",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 4678 
    postprocessing = (_Bool)1;
    
#line 4679 
    goto ldv_58013;
    case (unsigned int)0: 
#line 4680 
    ;
    case (unsigned int)1: 
#line 4681 
    ;
    
#line 4682 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp_3;
      int tmp_4;
      
#line 4682 
      tmp_3 = preempt_count();
      
#line 4682 
      tmp_4 = preempt_count();
      
#line 4682 
      printk("\001","rtl8821ae_phy_set_io_cmd",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0);
    }
    else ;
    
#line 4684 
    postprocessing = (_Bool)1;
    
#line 4685 
    goto ldv_58013;
    default: 
#line 4686 
    ;
    
#line 4687 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_5;
      int tmp_6;
      
#line 4687 
      tmp_5 = preempt_count();
      
#line 4687 
      tmp_6 = preempt_count();
      
#line 4687 
      printk("\001","rtl8821ae_phy_set_io_cmd",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0);
    }
    else ;
    
#line 4689 
    goto ldv_58013;
  }
  ldv_58013: 
#line 4691 
  ;
  
#line 4692 
  if ((int)postprocessing != 0 && (unsigned int)rtlphy->set_io_inprogress == 0U) {
    
#line 4693 
    rtlphy->set_io_inprogress = (unsigned char)1U;
    
#line 4694 
    rtlphy->current_io_type = iotype;
  }
  else {
    
#line 4696 
    __retres = (_Bool)0;
    
#line 4696 
    goto return_label;
  }
  
#line 4698 
  rtl8821ae_phy_set_io(hw);
  
#line 4699 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_7;
    int tmp_8;
    
#line 4699 
    ;
    
#line 4699 
    tmp_7 = preempt_count();
    
#line 4699 
    tmp_8 = preempt_count();
    
#line 4699 
    printk("\001","rtl8821ae_phy_set_io_cmd",(unsigned long)tmp_8 & 2096896UL,tmp_7 != 0,(unsigned int)iotype);
  }
  else ;
  
#line 4700 
  __retres = (_Bool)1;
  return_label: 
#line 4700 
                return __retres;
}


#line 4703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void rtl8821ae_phy_set_io(struct ieee80211_hw *hw)
{
  
#line 4705 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4706 
  struct dig_t *dm_digtable = & rtlpriv->dm_digtable;
  
#line 4707 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 4709 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp;
    int tmp_0;
    
#line 4709 
    ;
    
#line 4709 
    ;
    
#line 4709 
    tmp = preempt_count();
    
#line 4709 
    tmp_0 = preempt_count();
    
#line 4709 
    printk("\001","rtl8821ae_phy_set_io",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(unsigned int)rtlphy->current_io_type,(int)rtlphy->set_io_inprogress);
  }
  else ;
  
#line 4712 
  switch ((unsigned int)rtlphy->current_io_type) {
    case (unsigned int)2: 
#line 4713 
    ;
    
#line 4714 
    if (rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
      
#line 4715 
      _rtl8821ae_resume_tx_beacon(hw); else ;
    
#line 4716 
    rtl8821ae_dm_write_dig(hw,(unsigned char)((int)rtlphy->initgain_backup.xaagccore1));
    
#line 4717 
    rtl8821ae_dm_write_cck_cca_thres(hw,(unsigned char)((int)rtlphy->initgain_backup.cca));
    
#line 4719 
    goto ldv_58025;
    case (unsigned int)0: 
#line 4720 
    ;
    
#line 4721 
    if (rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
      
#line 4722 
      _rtl8821ae_stop_tx_beacon(hw); else ;
    
#line 4723 
    rtlphy->initgain_backup.xaagccore1 = (unsigned char)dm_digtable->cur_igvalue;
    
#line 4724 
    rtl8821ae_dm_write_dig(hw,(unsigned char)23);
    
#line 4725 
    rtlphy->initgain_backup.cca = dm_digtable->cur_cck_cca_thres;
    
#line 4726 
    rtl8821ae_dm_write_cck_cca_thres(hw,(unsigned char)64);
    
#line 4727 
    goto ldv_58025;
    case (unsigned int)1: 
#line 4728 
    ;
    
#line 4729 
    goto ldv_58025;
    default: 
#line 4730 
    ;
    
#line 4731 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_1;
      int tmp_2;
      
#line 4731 
      tmp_1 = preempt_count();
      
#line 4731 
      tmp_2 = preempt_count();
      
#line 4731 
      printk("\001","rtl8821ae_phy_set_io",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
    }
    else ;
    
#line 4733 
    goto ldv_58025;
  }
  ldv_58025: 
#line 4735 
  ;
  
#line 4735 
  rtlphy->set_io_inprogress = (unsigned char)0U;
  
#line 4736 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 8388608ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_3;
    int tmp_4;
    
#line 4736 
    ;
    
#line 4736 
    tmp_3 = preempt_count();
    
#line 4736 
    tmp_4 = preempt_count();
    
#line 4736 
    printk("\001","rtl8821ae_phy_set_io",(unsigned long)tmp_4 & 2096896UL,tmp_3 != 0,(unsigned int)rtlphy->current_io_type);
  }
  else ;
  
#line 4737 
  return;
}


#line 4740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static void rtl8821ae_phy_set_rf_on(struct ieee80211_hw *hw)
{
  
#line 4742 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4744 
  rtl_write_byte(rtlpriv,17U,(unsigned char)43);
  
#line 4745 
  rtl_write_byte(rtlpriv,2U,(unsigned char)227);
  
#line 4746 
  rtl_write_byte(rtlpriv,2U,(unsigned char)226);
  
#line 4747 
  rtl_write_byte(rtlpriv,2U,(unsigned char)227);
  
#line 4748 
  rtl_write_byte(rtlpriv,1314U,(unsigned char)0);
  
#line 4749 
  return;
}


#line 4751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
static bool _rtl8821ae_phy_set_rf_power_state(struct ieee80211_hw *hw, enum rf_pwrstate rfpwr_state)
{
  u8 i;
  u8 queue_id;
  
#line 4754 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 4755 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  
#line 4756 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 4757 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 4758 
  bool bresult = (_Bool)1;
  
#line 4760 
  struct rtl8192_tx_ring *ring = (struct rtl8192_tx_ring *)0;
  
#line 4762 
  switch ((unsigned int)rfpwr_state) {
    case (unsigned int)0: 
#line 4763 
    ;
    
#line 4764 
    if (ppsc->rfpwr_state == (unsigned int)ERFOFF && (int)((unsigned long)ppsc->cur_ps_level >> 3) & 1) {
      
#line 4766 
      bool rtstatus = (_Bool)0;
      
#line 4767 
      u32 initializecount = 0U;
      ldv_58049: 
#line 4768 
      ;
      
#line 4770 
      initializecount += 1U;
      
#line 4771 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp;
        int tmp_0;
        
#line 4771 
        tmp = preempt_count();
        
#line 4771 
        tmp_0 = preempt_count();
        
#line 4771 
        printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_0 & 2096896UL,tmp != 0);
      }
      else ;
      
#line 4773 
      rtstatus = rtl_ps_enable_nic(hw);
      
#line 4774 
      if (! rtstatus && initializecount <= 9U) 
#line 4776 
                                               goto ldv_58049; else 
#line 4779 
                                                                    goto ldv_58050;
      ldv_58050: 
#line 4780 
      ;
      
#line 4775 
      ppsc->cur_ps_level &= 4294967287U;
    }
    else {
      
#line 4778 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        unsigned int tmp_1;
        int tmp_2;
        int tmp_3;
        
#line 4778 
        tmp_1 = jiffies_to_msecs(jiffies - ppsc->last_sleep_jiffies);
        
#line 4778 
        tmp_2 = preempt_count();
        
#line 4778 
        tmp_3 = preempt_count();
        
#line 4778 
        printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_3 & 2096896UL,tmp_2 != 0,tmp_1);
      }
      else ;
      
#line 4783 
      ppsc->last_awake_jiffies = jiffies;
      
#line 4784 
      rtl8821ae_phy_set_rf_on(hw);
    }
    
#line 4786 
    if (mac->link_state == (unsigned int)MAC80211_LINKED) 
#line 4787 
                                                          (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_LINK); else 
                                                                    
#line 4790 
                                                                    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_NO_LINK);
    
#line 4793 
    goto ldv_58051;
    case (unsigned int)2: 
#line 4794 
    ;
    
#line 4795 
    queue_id = (unsigned char)0U;
    
#line 4795 
    i = (unsigned char)0U;
    
#line 4795 
    goto ldv_58053;
    ldv_58055: 
#line 4796 
    ;
    
#line 4797 
    ring = & pcipriv->dev.tx_ring[(int)queue_id];
    
#line 4798 
    if ((unsigned int)queue_id == 4U) 
#line 4798 
                                      goto _LOR;
    else {
      __u32 tmp_7;
      
#line 4798 
      tmp_7 = skb_queue_len((struct sk_buff_head const *)(& ring->queue));
      
#line 4798 
      if (tmp_7 == 0U) {
        _LOR: {
                
#line 4800 
                queue_id = (u8)((int)queue_id + 1);
                
#line 4801 
                goto ldv_58053;
              }
      }
      else {
        
#line 4803 
        if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
          __u32 tmp_4;
          int tmp_5;
          int tmp_6;
          
#line 4803 
          tmp_4 = skb_queue_len((struct sk_buff_head const *)(& ring->queue));
          
#line 4803 
          ;
          
#line 4803 
          ;
          
#line 4803 
          tmp_5 = preempt_count();
          
#line 4803 
          tmp_6 = preempt_count();
          
#line 4803 
          printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_6 & 2096896UL,tmp_5 != 0,(int)i + 1,(int)queue_id,tmp_4);
        }
        else ;
        
#line 4808 
        __const_udelay(42950UL);
        
#line 4809 
        i = (u8)((int)i + 1);
      }
    }
    
#line 4811 
    if ((unsigned int)i > 63U) {
      
#line 4812 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 1) != 0L) {
        __u32 tmp_8;
        int tmp_9;
        int tmp_10;
        
#line 4812 
        tmp_8 = skb_queue_len((struct sk_buff_head const *)(& ring->queue));
        
#line 4812 
        ;
        
#line 4812 
        tmp_9 = preempt_count();
        
#line 4812 
        tmp_10 = preempt_count();
        
#line 4812 
        printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_10 & 2096896UL,tmp_9 != 0,64,(int)queue_id,tmp_8);
      }
      else ;
      
#line 4817 
      goto ldv_58054;
    }
    else ;
    ldv_58053: 
#line 4819 
    ;
    
#line 4795 
    if ((unsigned int)queue_id <= 8U) 
#line 4798 
                                      goto ldv_58055; else 
#line 4801 
                                                           goto ldv_58054;
    ldv_58054: 
#line 4802 
    ;
    
#line 4821 
    if (((unsigned long)ppsc->reg_rfps_level & 8UL) != 0UL) {
      
#line 4822 
      if ((long)((rtlpriv->dbg.global_debugcomponents & 1048576ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 2) != 0L) {
        int tmp_11;
        int tmp_12;
        
#line 4822 
        tmp_11 = preempt_count();
        
#line 4822 
        tmp_12 = preempt_count();
        
#line 4822 
        printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_12 & 2096896UL,tmp_11 != 0);
      }
      else ;
      
#line 4824 
      rtl_ps_disable_nic(hw);
      
#line 4825 
      ppsc->cur_ps_level |= 8U;
    }
    else 
      
#line 4827 
      if (ppsc->rfoff_reason == 268435456U) 
#line 4828 
                                            (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_NO_LINK); else 
                                                                    
#line 4831 
                                                                    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_POWER_OFF);
    
#line 4835 
    goto ldv_58051;
    default: 
#line 4836 
    ;
    
#line 4837 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp_13;
      int tmp_14;
      
#line 4837 
      tmp_13 = preempt_count();
      
#line 4837 
      tmp_14 = preempt_count();
      
#line 4837 
      printk("\001","_rtl8821ae_phy_set_rf_power_state",(unsigned long)tmp_14 & 2096896UL,tmp_13 != 0);
    }
    else ;
    
#line 4839 
    bresult = (_Bool)0;
    
#line 4840 
    goto ldv_58051;
  }
  ldv_58051: 
#line 4842 
  ;
  
#line 4842 
  if ((int)bresult != 0) 
#line 4843 
                         ppsc->rfpwr_state = rfpwr_state; else ;
  
#line 4844 
  return bresult;
}


#line 4847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/phy.c"
bool rtl8821ae_phy_set_rf_power_state(struct ieee80211_hw *hw, enum rf_pwrstate rfpwr_state)
{
  bool __retres;
  
#line 4850 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  
#line 4852 
  bool bresult = (_Bool)0;
  
#line 4854 
  if (ppsc->rfpwr_state == rfpwr_state) {
    
#line 4855 
    __retres = bresult;
    
#line 4855 
    goto return_label;
  }
  else ;
  
#line 4856 
  bresult = _rtl8821ae_phy_set_rf_power_state(hw,rfpwr_state);
  
#line 4857 
  __retres = bresult;
  return_label: 
#line 4857 
                return __retres;
}


#line 731  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv___ldv_spin_lock_72_1(spinlock_t *ldv_func_arg1)
{
  
#line 735 
  ldv_spin_model_lock((char *)"rf_lock_of_rtl_locks");
  
#line 737 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 738 
  return;
}


#line 741  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_unlock_irqrestore_73_1(spinlock_t *lock, unsigned long flags)
{
  
#line 745 
  ldv_spin_model_unlock((char *)"rf_lock_of_rtl_locks");
  
#line 747 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 748 
  return;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv___ldv_spin_lock_74_0(spinlock_t *ldv_func_arg1)
{
  
#line 755 
  ldv_spin_model_lock((char *)"rf_lock_of_rtl_locks");
  
#line 757 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_unlock_irqrestore_75_0(spinlock_t *lock, unsigned long flags)
{
  
#line 765 
  ldv_spin_model_unlock((char *)"rf_lock_of_rtl_locks");
  
#line 767 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 768 
  return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_lock_76(spinlock_t *lock)
{
  
#line 775 
  ldv_spin_model_lock((char *)"iqk_lock_of_rtl_locks");
  
#line 777 
  spin_lock_1(lock);
  
#line 778 
  return;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_unlock_77(spinlock_t *lock)
{
  
#line 785 
  ldv_spin_model_unlock((char *)"iqk_lock_of_rtl_locks");
  
#line 787 
  spin_unlock_1(lock);
  
#line 788 
  return;
}


#line 791  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_lock_78_0(spinlock_t *lock)
{
  
#line 795 
  ldv_spin_model_lock((char *)"iqk_lock_of_rtl_locks");
  
#line 797 
  spin_lock_1(lock);
  
#line 798 
  return;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void ldv_spin_unlock_79_0(spinlock_t *lock)
{
  
#line 805 
  ldv_spin_model_unlock((char *)"iqk_lock_of_rtl_locks");
  
#line 807 
  spin_unlock_1(lock);
  
#line 808 
  return;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_PHY_REG_ARRAY[490U] = {2048U, 2149634064U, 2052U, 134288096U, 2056U, 235045427U, 2060U, 303239443U, 2064U, 537924195U, 2068U, 34356496U, 2072U, 60818309U, 2080U, 0U, 2084U, 200672U, 2088U, 0U, 2092U, 2130909U, 2096U, 715811974U, 2100U, 3647238U, 2104U, 113810244U, 2108U, 2395U, 2112U, 3221225473U, 2116U, 1073757406U, 2120U, 1645281163U, 2124U, 1828585400U, 2128U, 679954182U, 2132U, 86540U, 2136U, 2153832448U, 2140U, 1948320104U, 2144U, 1764344609U, 2148U, 2037543986U, 2152U, 2359796500U, 2156U, 864823416U, 2160U, 53687091U, 2164U, 828386350U, 2168U, 12626U, 2172U, 1032192U, 2208U, 19U, 2212U, 2139062143U, 2216U, 2718040894U, 2220U, 267450890U, 2224U, 1536U, 2228U, 1032320U, 2232U, 1811961855U, 2236U, 1285890211U, 2240U, 670040096U, 2244U, 0U, 2248U, 78185U, 2252U, 136610962U, 2256U, 47104U, 2268U, 0U, 2260U, 2483030176U, 2264U, 688608786U, 2296U, 1073742528U, 2300U, 0U, 4279175128U, 43981U, 2304U, 1793U, 4279175120U, 52719U, 2304U, 1793U, 3452816845U, 52685U, 2304U, 1792U, 4279175128U, 57005U, 2316U, 0U, 2320U, 64512U, 2324U, 1028U, 2328U, 470821056U, 2332U, 1689328156U, 2336U, 3765858867U, 2340U, 89826560U, 2344U, 4U, 2348U, 4294836224U, 2352U, 4294967294U, 2356U, 2097151U, 2400U, 0U, 2404U, 0U, 2408U, 0U, 2412U, 0U, 2416U, 2149580799U, 2424U, 0U, 2428U, 0U, 2432U, 0U, 2436U, 0U, 2440U, 0U, 2448U, 655360000U, 2452U, 4294902016U, 2456U, 4294967132U, 2460U, 4294967295U, 2464U, 255U, 2468U, 524416U, 2472U, 0U, 2476U, 0U, 2480U, 2164789256U, 2484U, 0U, 2488U, 17305608U, 2492U, 17305608U, 2512U, 0U, 2516U, 0U, 2520U, 0U, 2524U, 0U, 2532U, 2U, 2536U, 725U, 2560U, 13649864U, 2564U, 33488908U, 2568U, 2357428992U, 2572U, 780075023U, 2576U, 2499853176U, 2580U, 286539816U, 2584U, 8917271U, 2588U, 2299793152U, 2592U, 437977088U, 2596U, 151917335U, 2600U, 516U, 2604U, 9437184U, 2672U, 270532352U, 2676U, 8U, 2680U, 2304U, 2684U, 576390662U, 2688U, 562066866U, 2692U, 2067584U, 2816U, 51380224U, 2820U, 45056U, 2824U, 2919367147U, 2828U, 16790023U, 2832U, 38919U, 2836U, 16777216U, 2840U, 2U, 2844U, 2U, 2848U, 31U, 2852U, 50462976U, 2856U, 117835012U, 2860U, 185207048U, 2864U, 252579084U, 2868U, 319951120U, 2872U, 387323156U, 2876U, 58U, 2880U, 0U, 2884U, 0U, 2888U, 318767154U, 2892U, 1208483840U, 2896U, 0U, 2900U, 0U, 2904U, 0U, 2908U, 0U, 3072U, 7U, 3076U, 270368U, 3080U, 2151744049U, 3084U, 0U, 3088U, 256U, 3092U, 16777216U, 3100U, 1073741827U, 3104U, 303174162U, 3108U, 303174162U, 3112U, 303174162U, 3116U, 303174162U, 3120U, 303174162U, 3124U, 303174162U, 3128U, 303174162U, 3132U, 303174162U, 3136U, 303174162U, 3140U, 303174162U, 3144U, 303174162U, 3148U, 303174162U, 3152U, 32U, 3156U, 528924U, 3160U, 805309468U, 3164U, 88U, 3168U, 875840579U, 3172U, 117453619U, 3176U, 1501108601U, 3180U, 1501124985U, 3184U, 427383161U, 3188U, 427383161U, 3192U, 427366777U, 3196U, 427366777U, 3200U, 427366777U, 3204U, 427366777U, 3220U, 16777308U, 3224U, 0U, 3228U, 0U, 3232U, 41U, 3236U, 134480385U, 3240U, 2151686160U, 4279174976U, 43981U, 3248U, 2002024215U, 4279173568U, 52719U, 3248U, 2002024215U, 4279173824U, 52719U, 3248U, 2002024215U, 4279175128U, 52719U, 3248U, 1414821648U, 4279175120U, 52719U, 3248U, 1414821648U, 3452816845U, 52685U, 3248U, 2002024311U, 4279174976U, 57005U, 3252U, 119U, 3256U, 5276226U, 3584U, 7U, 3588U, 270368U, 3592U, 2151744049U, 3596U, 0U, 3600U, 256U, 3604U, 16777216U, 3612U, 1073741827U, 3616U, 303174162U, 3620U, 303174162U, 3624U, 303174162U, 3628U, 303174162U, 3632U, 303174162U, 3636U, 303174162U, 3640U, 303174162U, 3644U, 303174162U, 3648U, 303174162U, 3652U, 303174162U, 3656U, 303174162U, 3660U, 303174162U, 3664U, 32U, 3668U, 528924U, 3672U, 805309468U, 3676U, 88U, 3680U, 875840579U, 3684U, 117453619U, 3688U, 1501108601U, 3692U, 1501124985U, 3696U, 427383161U, 3700U, 427383161U, 3704U, 427366777U, 3708U, 427366777U, 3712U, 427366777U, 3716U, 427366777U, 3732U, 16777308U, 3736U, 0U, 3740U, 0U, 3744U, 41U, 3748U, 134480385U, 3752U, 2151686160U, 4279174976U, 43981U, 3760U, 2002024215U, 4279173568U, 52719U, 3760U, 2002024215U, 4279173824U, 52719U, 3760U, 2002024215U, 4279175128U, 52719U, 3760U, 1414821648U, 4279175120U, 52719U, 3760U, 1414821648U, 3452816845U, 52685U, 3760U, 2002024311U, 4279174976U, 57005U, 3764U, 119U, 3768U, 5276226U};

#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8821AE_PHY_REG_ARRAY[344U] = {2048U, 2150544U, 2052U, 134288096U, 2056U, 235045393U, 2060U, 2450723089U, 2064U, 537924193U, 2068U, 34356496U, 2072U, 60818309U, 2080U, 0U, 2084U, 200672U, 2088U, 0U, 2092U, 2130397U, 2096U, 715820580U, 2100U, 3647238U, 2104U, 105421636U, 2108U, 2395U, 2112U, 3221225473U, 2116U, 1073757406U, 2120U, 1645232011U, 2124U, 1828585400U, 2128U, 679954182U, 2132U, 86540U, 2136U, 2153832448U, 2140U, 1948320104U, 2144U, 1764344609U, 2148U, 2037543986U, 2152U, 2359796500U, 2156U, 2290886776U, 2160U, 143165576U, 2164U, 828451886U, 2168U, 338U, 2172U, 1036288U, 2208U, 19U, 2212U, 2139062143U, 2216U, 2717909816U, 2220U, 267450890U, 2228U, 1032320U, 2232U, 1813043199U, 2236U, 212148368U, 2240U, 468713504U, 2244U, 0U, 2248U, 78185U, 2252U, 136610962U, 2260U, 2483030176U, 2264U, 688608786U, 2296U, 1073742528U, 2300U, 0U, 2304U, 1792U, 2316U, 0U, 2320U, 64512U, 2324U, 1028U, 2328U, 470821056U, 2332U, 1689328156U, 2336U, 3765858867U, 2340U, 89826560U, 2344U, 4U, 2348U, 4294836224U, 2352U, 4294967294U, 2356U, 2097151U, 2400U, 0U, 2404U, 0U, 2408U, 0U, 2412U, 0U, 2416U, 2149580799U, 2420U, 1023U, 2424U, 0U, 2428U, 0U, 2432U, 0U, 2436U, 0U, 2440U, 0U, 2448U, 655360000U, 2452U, 4294902016U, 2456U, 4294967132U, 2460U, 4294967295U, 2464U, 255U, 2468U, 4718720U, 2472U, 0U, 2476U, 0U, 2480U, 2164789256U, 2484U, 17305608U, 2488U, 17305608U, 2492U, 17305608U, 2512U, 0U, 2516U, 0U, 2520U, 0U, 2524U, 0U, 2528U, 23808U, 2532U, 2U, 2536U, 1U, 2560U, 13649864U, 2564U, 33488908U, 2568U, 2357887744U, 2572U, 778567695U, 2576U, 2499853176U, 2580U, 286539816U, 2584U, 8917271U, 2588U, 2299793152U, 2592U, 437977088U, 2596U, 151917335U, 2600U, 516U, 2604U, 9437184U, 2672U, 270532352U, 2676U, 8U, 2680U, 2304U, 2684U, 576390662U, 2688U, 562058384U, 2692U, 2031616U, 2816U, 51380288U, 2820U, 45056U, 2824U, 2919367147U, 2828U, 16790023U, 2832U, 38919U, 2836U, 16777216U, 2840U, 2U, 2844U, 2U, 2848U, 31U, 2852U, 50462976U, 2856U, 117835012U, 2860U, 185207048U, 2864U, 252579084U, 2868U, 319951120U, 2872U, 387323156U, 2876U, 58U, 2880U, 0U, 2884U, 0U, 2888U, 318767154U, 2892U, 1208483840U, 2896U, 0U, 2900U, 0U, 2904U, 0U, 2908U, 0U, 3072U, 7U, 3076U, 270368U, 3080U, 2151744049U, 3084U, 0U, 3088U, 256U, 3092U, 16777216U, 3100U, 1073741827U, 3104U, 741092396U, 3108U, 808464432U, 3112U, 808464432U, 3116U, 741092396U, 3120U, 741092396U, 3124U, 741092396U, 3128U, 741092396U, 3132U, 707406378U, 3136U, 707406378U, 3140U, 707406378U, 3144U, 707406378U, 3148U, 707406378U, 3152U, 32U, 3156U, 1839624U, 3160U, 805309468U, 3164U, 88U, 3168U, 875840579U, 3172U, 117453619U, 3176U, 427366777U, 3180U, 427366777U, 3184U, 427366777U, 3188U, 427366777U, 3192U, 427366777U, 3196U, 427366777U, 3200U, 427366777U, 3204U, 427366777U, 3220U, 16777308U, 3224U, 0U, 3228U, 0U, 3232U, 41U, 3236U, 134480385U, 3240U, 2151686160U, 3248U, 2004309831U, 3252U, 268435575U, 3256U, 5276224U};

#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_PHY_REG_ARRAY_PG[276U] = {0U, 0U, 0U, 3104U, 4294967295U, 875968576U, 0U, 0U, 0U, 3108U, 4294967295U, 1111639108U, 0U, 0U, 0U, 3112U, 4294967295U, 808597048U, 0U, 0U, 0U, 3116U, 4294967295U, 1078084676U, 0U, 0U, 0U, 3120U, 4294967295U, 674247222U, 0U, 0U, 1U, 3124U, 4294967295U, 943735362U, 0U, 0U, 1U, 3128U, 4294967295U, 640167988U, 0U, 0U, 0U, 3132U, 4294967295U, 1078084676U, 0U, 0U, 0U, 3136U, 4294967295U, 674247222U, 0U, 0U, 0U, 3140U, 4294967295U, 1111630886U, 0U, 0U, 1U, 3144U, 4294967295U, 808728640U, 0U, 0U, 1U, 3148U, 4294967295U, 572794408U, 0U, 1U, 0U, 3616U, 4294967295U, 875968576U, 0U, 1U, 0U, 3620U, 4294967295U, 1111639108U, 0U, 1U, 0U, 3624U, 4294967295U, 808597048U, 0U, 1U, 0U, 3628U, 4294967295U, 1078084676U, 0U, 1U, 0U, 3632U, 4294967295U, 674247222U, 0U, 1U, 1U, 3636U, 4294967295U, 943735362U, 0U, 1U, 1U, 3640U, 4294967295U, 640167988U, 0U, 1U, 0U, 3644U, 4294967295U, 1078084676U, 0U, 1U, 0U, 3648U, 4294967295U, 674247222U, 0U, 1U, 0U, 3652U, 4294967295U, 1111630886U, 0U, 1U, 1U, 3656U, 4294967295U, 808728640U, 0U, 1U, 1U, 3660U, 4294967295U, 572794408U, 1U, 0U, 0U, 3108U, 4294967295U, 1111639108U, 1U, 0U, 0U, 3112U, 4294967295U, 808597056U, 1U, 0U, 0U, 3116U, 4294967295U, 1078084676U, 1U, 0U, 0U, 3120U, 4294967295U, 674247222U, 1U, 0U, 1U, 3124U, 4294967295U, 943735362U, 1U, 0U, 1U, 3128U, 4294967295U, 640167988U, 1U, 0U, 0U, 3132U, 4294967295U, 1078084676U, 1U, 0U, 0U, 3136U, 4294967295U, 674247222U, 1U, 0U, 0U, 3140U, 4294967295U, 1111630886U, 1U, 0U, 1U, 3144U, 4294967295U, 808728640U, 1U, 0U, 1U, 3148U, 4294967295U, 572794408U, 1U, 1U, 0U, 3620U, 4294967295U, 1111639108U, 1U, 1U, 0U, 3624U, 4294967295U, 808597056U, 1U, 1U, 0U, 3628U, 4294967295U, 1078084676U, 1U, 1U, 0U, 3632U, 4294967295U, 674247222U, 1U, 1U, 1U, 3636U, 4294967295U, 943735362U, 1U, 1U, 1U, 3640U, 4294967295U, 640167988U, 1U, 1U, 0U, 3644U, 4294967295U, 1078084676U, 1U, 1U, 0U, 3648U, 4294967295U, 674247222U, 1U, 1U, 0U, 3652U, 4294967295U, 1111630886U, 1U, 1U, 1U, 3656U, 4294967295U, 808728640U, 1U, 1U, 1U, 3660U, 4294967295U, 572794408U};

#line 501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8821AE_PHY_REG_ARRAY_PG[90U] = {0U, 0U, 0U, 3104U, 4294967295U, 842282552U, 0U, 0U, 0U, 3108U, 4294967295U, 909523000U, 0U, 0U, 0U, 3112U, 4294967295U, 674247220U, 0U, 0U, 0U, 3116U, 4294967295U, 875968568U, 0U, 0U, 0U, 3120U, 4294967295U, 640167986U, 0U, 0U, 0U, 3132U, 4294967295U, 842282550U, 0U, 0U, 0U, 3136U, 4294967295U, 606480432U, 0U, 0U, 0U, 3140U, 65535U, 8226U, 1U, 0U, 0U, 3108U, 4294967295U, 875836982U, 1U, 0U, 0U, 3112U, 4294967295U, 640167986U, 1U, 0U, 0U, 3116U, 4294967295U, 842282550U, 1U, 0U, 0U, 3120U, 4294967295U, 606480432U, 1U, 0U, 0U, 3132U, 4294967295U, 842282550U, 1U, 0U, 0U, 3136U, 4294967295U, 606480432U, 1U, 0U, 0U, 3140U, 65535U, 8226U};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_RADIOA_ARRAY[1264U] = {0U, 65536U, 24U, 94506U, 86U, 335090U, 102U, 262144U, 30U, 524288U, 137U, 128U, 4279174976U, 43981U, 134U, 84792U, 4279173824U, 52719U, 134U, 84792U, 4279173568U, 52719U, 134U, 84792U, 4279175128U, 52719U, 134U, 84794U, 4279175120U, 52719U, 134U, 84794U, 3452816845U, 52685U, 134U, 84792U, 4279174976U, 57005U, 177U, 130074U, 179U, 985104U, 180U, 108429U, 186U, 549248U, 24U, 6U, 239U, 8192U, 4279175128U, 43981U, 59U, 258584U, 59U, 199256U, 59U, 195160U, 59U, 140688U, 59U, 129616U, 59U, 66120U, 59U, 33344U, 4279175120U, 52719U, 59U, 258584U, 59U, 199256U, 59U, 195160U, 59U, 140688U, 59U, 129616U, 59U, 66120U, 59U, 33344U, 3452816845U, 52685U, 59U, 232024U, 59U, 227928U, 59U, 173456U, 59U, 162384U, 59U, 98888U, 59U, 66112U, 59U, 33344U, 4279175128U, 57005U, 239U, 256U, 4279175128U, 43981U, 52U, 42222U, 52U, 36982U, 52U, 32883U, 52U, 28784U, 52U, 24685U, 52U, 20586U, 52U, 16457U, 52U, 12358U, 52U, 8232U, 52U, 4133U, 52U, 34U, 3452816845U, 52685U, 52U, 44532U, 52U, 40433U, 52U, 36334U, 52U, 32235U, 52U, 28136U, 52U, 23788U, 52U, 19689U, 52U, 13546U, 52U, 9447U, 52U, 5227U, 52U, 109U, 4279175128U, 57005U, 239U, 0U, 239U, 8354U, 223U, 128U, 53U, 402U, 53U, 33170U, 53U, 65938U, 54U, 36U, 54U, 32804U, 54U, 65572U, 54U, 98340U, 239U, 0U, 81U, 3105U, 82U, 1753U, 83U, 1033801U, 84U, 382U, 239U, 2U, 8U, 33792U, 24U, 94506U, 239U, 4096U, 58U, 128U, 59U, 237612U, 60U, 16384U, 58U, 1024U, 59U, 204844U, 60U, 65536U, 58U, 160U, 59U, 176228U, 60U, 16384U, 58U, 216U, 59U, 143472U, 60U, 16384U, 58U, 1128U, 59U, 112752U, 60U, 65536U, 58U, 152U, 59U, 73861U, 60U, 933888U, 58U, 1048U, 59U, 41088U, 60U, 983040U, 58U, 1048U, 59U, 8320U, 60U, 65536U, 58U, 128U, 59U, 499756U, 60U, 16384U, 58U, 1024U, 59U, 466988U, 60U, 65536U, 58U, 160U, 59U, 438372U, 60U, 16384U, 58U, 216U, 59U, 143472U, 60U, 16384U, 58U, 1128U, 59U, 374896U, 60U, 65536U, 58U, 152U, 59U, 336005U, 60U, 933888U, 58U, 1048U, 59U, 303232U, 60U, 983040U, 58U, 1048U, 59U, 270464U, 60U, 65536U, 58U, 128U, 59U, 761900U, 60U, 16384U, 58U, 1024U, 59U, 729132U, 60U, 65536U, 58U, 160U, 59U, 700516U, 60U, 16384U, 58U, 216U, 59U, 667760U, 60U, 16384U, 58U, 1128U, 59U, 637040U, 60U, 65536U, 58U, 152U, 59U, 598149U, 60U, 933888U, 58U, 1048U, 59U, 565376U, 60U, 983040U, 58U, 1048U, 59U, 532608U, 60U, 65536U, 239U, 4352U, 4279174976U, 43981U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279173824U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279173568U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279175128U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279175120U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 3452816845U, 52685U, 52U, 306677U, 52U, 302578U, 52U, 298479U, 52U, 294380U, 52U, 290281U, 52U, 286153U, 52U, 281832U, 52U, 276682U, 52U, 272521U, 52U, 268362U, 52U, 263242U, 4279174976U, 57005U, 4279174976U, 43981U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279173824U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279173568U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279175128U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279175120U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 3452816845U, 52685U, 52U, 175605U, 52U, 171506U, 52U, 167407U, 52U, 163308U, 52U, 159209U, 52U, 155081U, 52U, 150760U, 52U, 145610U, 52U, 141449U, 52U, 137290U, 52U, 132170U, 4279174976U, 57005U, 4279174976U, 43981U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279173824U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279173568U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279175128U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279175120U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 3452816845U, 52685U, 52U, 45047U, 52U, 40439U, 52U, 36340U, 52U, 32241U, 52U, 28142U, 52U, 24013U, 52U, 19691U, 52U, 14540U, 52U, 10379U, 52U, 6220U, 52U, 1100U, 4279174976U, 57005U, 239U, 0U, 4279174976U, 43981U, 24U, 94506U, 239U, 64U, 53U, 468U, 53U, 33236U, 53U, 66004U, 53U, 131508U, 53U, 164276U, 53U, 197044U, 53U, 262580U, 53U, 295348U, 53U, 328116U, 4279173824U, 52719U, 24U, 94506U, 239U, 64U, 53U, 468U, 53U, 33236U, 53U, 66004U, 53U, 131508U, 53U, 164276U, 53U, 197044U, 53U, 262580U, 53U, 295348U, 53U, 328116U, 4279173568U, 52719U, 24U, 94506U, 239U, 64U, 53U, 468U, 53U, 33236U, 53U, 66004U, 53U, 131508U, 53U, 164276U, 53U, 197044U, 53U, 262580U, 53U, 295348U, 53U, 328116U, 4279175128U, 52719U, 24U, 94506U, 239U, 64U, 53U, 468U, 53U, 33236U, 53U, 66004U, 53U, 131508U, 53U, 164276U, 53U, 197044U, 53U, 262580U, 53U, 295348U, 53U, 328116U, 4279175120U, 52719U, 24U, 94506U, 239U, 64U, 53U, 468U, 53U, 33236U, 53U, 66004U, 53U, 131508U, 53U, 164276U, 53U, 197044U, 53U, 262580U, 53U, 295348U, 53U, 328116U, 3452816845U, 52685U, 24U, 94506U, 239U, 64U, 53U, 392U, 53U, 33095U, 53U, 65863U, 53U, 131543U, 53U, 164311U, 53U, 197079U, 53U, 262616U, 53U, 295384U, 53U, 328152U, 4279174976U, 57005U, 239U, 0U, 4279174976U, 43981U, 24U, 94506U, 239U, 16U, 54U, 19451U, 54U, 52219U, 54U, 84987U, 54U, 117755U, 54U, 151371U, 54U, 184139U, 54U, 216907U, 54U, 249675U, 54U, 282443U, 54U, 315211U, 54U, 347979U, 54U, 380747U, 4279173824U, 52719U, 24U, 94506U, 239U, 16U, 54U, 19451U, 54U, 52219U, 54U, 84987U, 54U, 117755U, 54U, 151371U, 54U, 184139U, 54U, 216907U, 54U, 249675U, 54U, 282443U, 54U, 315211U, 54U, 347979U, 54U, 380747U, 4279173568U, 52719U, 24U, 94506U, 239U, 16U, 54U, 19451U, 54U, 52219U, 54U, 84987U, 54U, 117755U, 54U, 151371U, 54U, 184139U, 54U, 216907U, 54U, 249675U, 54U, 282443U, 54U, 315211U, 54U, 347979U, 54U, 380747U, 4279175128U, 52719U, 24U, 94506U, 239U, 16U, 54U, 19451U, 54U, 52219U, 54U, 84987U, 54U, 117755U, 54U, 151371U, 54U, 184139U, 54U, 216907U, 54U, 249675U, 54U, 282443U, 54U, 315211U, 54U, 347979U, 54U, 380747U, 4279175120U, 52719U, 24U, 94506U, 239U, 16U, 54U, 19451U, 54U, 52219U, 54U, 84987U, 54U, 117755U, 54U, 151371U, 54U, 184139U, 54U, 216907U, 54U, 249675U, 54U, 282443U, 54U, 315211U, 54U, 347979U, 54U, 380747U, 3452816845U, 52685U, 24U, 94506U, 239U, 16U, 54U, 544436U, 54U, 576565U, 54U, 609333U, 54U, 642101U, 54U, 674101U, 54U, 707637U, 54U, 740405U, 54U, 773173U, 54U, 806580U, 54U, 839349U, 54U, 872117U, 54U, 904885U, 4279174976U, 57005U, 239U, 0U, 239U, 8U, 4279174976U, 43981U, 60U, 716U, 60U, 1314U, 60U, 2306U, 4279173824U, 52719U, 60U, 716U, 60U, 1314U, 60U, 2306U, 4279173568U, 52719U, 60U, 716U, 60U, 1314U, 60U, 2306U, 4279175128U, 52719U, 60U, 716U, 60U, 1314U, 60U, 2306U, 4279175120U, 52719U, 60U, 716U, 60U, 1314U, 60U, 2306U, 3452816845U, 52685U, 60U, 680U, 60U, 1442U, 60U, 2176U, 4279174976U, 57005U, 239U, 0U, 24U, 94506U, 239U, 2U, 223U, 128U, 31U, 262244U, 4279174976U, 43981U, 97U, 1039683U, 98U, 233291U, 99U, 205079U, 100U, 103596U, 101U, 602577U, 4279173824U, 52719U, 97U, 1039683U, 98U, 233291U, 99U, 205079U, 100U, 103596U, 101U, 602577U, 4279173568U, 52719U, 97U, 1039683U, 98U, 233291U, 99U, 205079U, 100U, 103596U, 101U, 602577U, 4279175128U, 52719U, 97U, 1039683U, 98U, 233291U, 99U, 205079U, 100U, 103596U, 101U, 602577U, 4279175120U, 52719U, 97U, 1039683U, 98U, 233291U, 99U, 205079U, 100U, 103596U, 101U, 602577U, 3452816845U, 52685U, 97U, 941395U, 98U, 233421U, 99U, 201963U, 100U, 104108U, 101U, 594391U, 4279174976U, 57005U, 8U, 33792U, 28U, 473554U, 180U, 124813U, 24U, 127274U, 254U, 0U, 254U, 0U, 254U, 0U, 254U, 0U, 180U, 108429U, 24U, 94506U};

#line 1155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_RADIOB_ARRAY[1240U] = {86U, 335090U, 102U, 262144U, 137U, 128U, 4279174976U, 43981U, 134U, 84792U, 4279173568U, 52719U, 134U, 84792U, 4279173824U, 52719U, 134U, 84792U, 4279175128U, 52719U, 134U, 84794U, 4279175120U, 52719U, 134U, 84794U, 3452816845U, 52685U, 134U, 84792U, 4279174976U, 57005U, 24U, 6U, 239U, 8192U, 4279175128U, 43981U, 59U, 258584U, 59U, 199256U, 59U, 195160U, 59U, 140688U, 59U, 129616U, 59U, 66120U, 59U, 33344U, 4279175120U, 52719U, 59U, 258584U, 59U, 199256U, 59U, 195160U, 59U, 140688U, 59U, 129616U, 59U, 66120U, 59U, 33344U, 3452816845U, 52685U, 59U, 232024U, 59U, 227928U, 59U, 173456U, 59U, 162384U, 59U, 98888U, 59U, 66112U, 59U, 33344U, 4279175128U, 57005U, 239U, 256U, 4279175128U, 43981U, 52U, 42222U, 52U, 36982U, 52U, 32883U, 52U, 28784U, 52U, 24685U, 52U, 20586U, 52U, 16457U, 52U, 12358U, 52U, 8232U, 52U, 4133U, 52U, 34U, 3452816845U, 52685U, 52U, 44532U, 52U, 40433U, 52U, 36334U, 52U, 32235U, 52U, 28136U, 52U, 23788U, 52U, 19689U, 52U, 13546U, 52U, 9447U, 52U, 5227U, 52U, 109U, 4279175128U, 57005U, 239U, 0U, 239U, 8354U, 223U, 128U, 53U, 402U, 53U, 33170U, 53U, 65938U, 54U, 36U, 54U, 32804U, 54U, 65572U, 54U, 98340U, 239U, 0U, 81U, 3105U, 82U, 1753U, 83U, 1033801U, 84U, 382U, 239U, 2U, 8U, 33792U, 24U, 94506U, 239U, 4096U, 58U, 128U, 59U, 237612U, 60U, 16384U, 58U, 1024U, 59U, 204844U, 60U, 65536U, 58U, 160U, 59U, 176228U, 60U, 16384U, 58U, 216U, 59U, 143472U, 60U, 16384U, 58U, 1128U, 59U, 112752U, 60U, 65536U, 58U, 152U, 59U, 73861U, 60U, 933888U, 58U, 1048U, 59U, 41088U, 60U, 983040U, 58U, 1048U, 59U, 8320U, 60U, 65536U, 58U, 128U, 59U, 499756U, 60U, 16384U, 58U, 1024U, 59U, 466988U, 60U, 65536U, 58U, 160U, 59U, 438372U, 60U, 16384U, 58U, 216U, 59U, 405616U, 60U, 16384U, 58U, 1128U, 59U, 374896U, 60U, 65536U, 58U, 152U, 59U, 336005U, 60U, 933888U, 58U, 1048U, 59U, 303232U, 60U, 983040U, 58U, 1048U, 59U, 270464U, 60U, 65536U, 58U, 128U, 59U, 761900U, 60U, 16384U, 58U, 1024U, 59U, 729132U, 60U, 65536U, 58U, 160U, 59U, 700516U, 60U, 16384U, 58U, 216U, 59U, 667760U, 60U, 16384U, 58U, 1128U, 59U, 637040U, 60U, 65536U, 58U, 152U, 59U, 598149U, 60U, 933888U, 58U, 1048U, 59U, 565376U, 60U, 983040U, 58U, 1048U, 59U, 532608U, 60U, 65536U, 239U, 4352U, 4279174976U, 43981U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279173568U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279173824U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279175128U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 4279175120U, 52719U, 52U, 303282U, 52U, 299183U, 52U, 295024U, 52U, 290925U, 52U, 286800U, 52U, 282701U, 52U, 278602U, 52U, 274503U, 52U, 270346U, 52U, 266247U, 52U, 262148U, 3452816845U, 52685U, 52U, 306677U, 52U, 302578U, 52U, 298479U, 52U, 294380U, 52U, 290281U, 52U, 286153U, 52U, 281832U, 52U, 276682U, 52U, 272521U, 52U, 268362U, 52U, 263242U, 4279174976U, 57005U, 4279174976U, 43981U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279173568U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279173824U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279175128U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 4279175120U, 52719U, 52U, 172210U, 52U, 168111U, 52U, 163952U, 52U, 159853U, 52U, 155728U, 52U, 151629U, 52U, 147530U, 52U, 143431U, 52U, 139274U, 52U, 135175U, 52U, 131076U, 3452816845U, 52685U, 52U, 175605U, 52U, 171506U, 52U, 167407U, 52U, 163308U, 52U, 159209U, 52U, 155081U, 52U, 150760U, 52U, 145610U, 52U, 141449U, 52U, 137290U, 52U, 132170U, 4279174976U, 57005U, 4279174976U, 43981U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279173568U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279173824U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279175128U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 4279175120U, 52719U, 52U, 41138U, 52U, 37039U, 52U, 32880U, 52U, 28781U, 52U, 24656U, 52U, 20557U, 52U, 16458U, 52U, 12359U, 52U, 8202U, 52U, 4103U, 52U, 4U, 3452816845U, 52685U, 52U, 45047U, 52U, 40439U, 52U, 36340U, 52U, 32241U, 52U, 28142U, 52U, 24013U, 52U, 19691U, 52U, 14540U, 52U, 10379U, 52U, 6220U, 52U, 1100U, 4279174976U, 57005U, 239U, 0U, 4279174976U, 43981U, 24U, 94506U, 239U, 64U, 53U, 453U, 53U, 33221U, 53U, 65989U, 53U, 131444U, 53U, 164212U, 53U, 196980U, 53U, 262533U, 53U, 295301U, 53U, 328069U, 239U, 0U, 4279173568U, 52719U, 24U, 94506U, 239U, 64U, 53U, 453U, 53U, 33221U, 53U, 65989U, 53U, 131444U, 53U, 164212U, 53U, 196980U, 53U, 262533U, 53U, 295301U, 53U, 328069U, 239U, 0U, 4279173824U, 52719U, 24U, 94506U, 239U, 64U, 53U, 453U, 53U, 33221U, 53U, 65989U, 53U, 131444U, 53U, 164212U, 53U, 196980U, 53U, 262533U, 53U, 295301U, 53U, 328069U, 239U, 0U, 4279175128U, 52719U, 24U, 94506U, 239U, 64U, 53U, 453U, 53U, 33221U, 53U, 65989U, 53U, 131444U, 53U, 164212U, 53U, 196980U, 53U, 262533U, 53U, 295301U, 53U, 328069U, 239U, 0U, 4279175120U, 52719U, 24U, 94506U, 239U, 64U, 53U, 453U, 53U, 33221U, 53U, 65989U, 53U, 131444U, 53U, 164212U, 53U, 196980U, 53U, 262533U, 53U, 295301U, 53U, 328069U, 239U, 0U, 3452816845U, 52685U, 24U, 94506U, 239U, 64U, 53U, 390U, 53U, 33158U, 53U, 65925U, 53U, 131541U, 53U, 164309U, 53U, 197077U, 53U, 262613U, 53U, 295381U, 53U, 328149U, 239U, 0U, 4279174976U, 57005U, 4279174976U, 43981U, 24U, 94506U, 239U, 16U, 54U, 23435U, 54U, 56203U, 54U, 88971U, 54U, 121739U, 54U, 156379U, 54U, 189147U, 54U, 221915U, 54U, 254683U, 54U, 283963U, 54U, 316731U, 54U, 349499U, 54U, 382267U, 4279173568U, 52719U, 24U, 94506U, 239U, 16U, 54U, 23435U, 54U, 56203U, 54U, 88971U, 54U, 121739U, 54U, 156379U, 54U, 189147U, 54U, 221915U, 54U, 254683U, 54U, 283963U, 54U, 316731U, 54U, 349499U, 54U, 382267U, 4279173824U, 52719U, 24U, 94506U, 239U, 16U, 54U, 23435U, 54U, 56203U, 54U, 88971U, 54U, 121739U, 54U, 156379U, 54U, 189147U, 54U, 221915U, 54U, 254683U, 54U, 283963U, 54U, 316731U, 54U, 349499U, 54U, 382267U, 4279175128U, 52719U, 24U, 94506U, 239U, 16U, 54U, 23435U, 54U, 56203U, 54U, 88971U, 54U, 121739U, 54U, 156379U, 54U, 189147U, 54U, 221915U, 54U, 254683U, 54U, 283963U, 54U, 316731U, 54U, 349499U, 54U, 382267U, 4279175120U, 52719U, 24U, 94506U, 239U, 16U, 54U, 23435U, 54U, 56203U, 54U, 88971U, 54U, 121739U, 54U, 156379U, 54U, 189147U, 54U, 221915U, 54U, 254683U, 54U, 283963U, 54U, 316731U, 54U, 349499U, 54U, 382267U, 3452816845U, 52685U, 24U, 94506U, 239U, 16U, 54U, 544436U, 54U, 575924U, 54U, 608692U, 54U, 641460U, 54U, 674101U, 54U, 706869U, 54U, 739637U, 54U, 772405U, 54U, 806580U, 54U, 839348U, 54U, 872116U, 54U, 904884U, 4279174976U, 57005U, 239U, 0U, 239U, 8U, 4279174976U, 43981U, 60U, 732U, 60U, 1316U, 60U, 2306U, 4279173568U, 52719U, 60U, 732U, 60U, 1316U, 60U, 2306U, 4279173824U, 52719U, 60U, 732U, 60U, 1316U, 60U, 2306U, 4279175128U, 52719U, 60U, 732U, 60U, 1316U, 60U, 2306U, 4279175120U, 52719U, 60U, 732U, 60U, 1316U, 60U, 2306U, 3452816845U, 52685U, 60U, 682U, 60U, 1442U, 60U, 2176U, 4279174976U, 57005U, 239U, 0U, 24U, 94506U, 239U, 2U, 223U, 128U, 4279174976U, 43981U, 97U, 961603U, 98U, 233287U, 99U, 201047U, 100U, 115884U, 101U, 602577U, 4279173568U, 52719U, 97U, 961603U, 98U, 233287U, 99U, 201047U, 100U, 115884U, 101U, 602577U, 4279173824U, 52719U, 97U, 961603U, 98U, 233287U, 99U, 201047U, 100U, 115884U, 101U, 602577U, 4279175128U, 52719U, 97U, 961603U, 98U, 233287U, 99U, 201047U, 100U, 115884U, 101U, 602577U, 4279175120U, 52719U, 97U, 961603U, 98U, 233287U, 99U, 201047U, 100U, 115884U, 101U, 602577U, 3452816845U, 52685U, 97U, 941395U, 98U, 233421U, 99U, 201963U, 100U, 104108U, 101U, 602583U, 4279174976U, 57005U, 8U, 33792U};

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8821AE_RADIOA_ARRAY[1176U] = {24U, 94506U, 86U, 335090U, 102U, 262144U, 0U, 65536U, 30U, 524288U, 130U, 2096U, 131U, 137216U, 132U, 163840U, 133U, 294912U, 134U, 608312U, 135U, 280960U, 136U, 294912U, 137U, 54400U, 138U, 270912U, 139U, 983936U, 140U, 589824U, 141U, 141394U, 142U, 415040U, 143U, 557057U, 239U, 131072U, 62U, 896U, 63U, 589848U, 62U, 131968U, 63U, 655384U, 62U, 262920U, 63U, 655384U, 62U, 393240U, 63U, 655384U, 239U, 0U, 24U, 94506U, 137U, 128U, 139U, 524672U, 239U, 4096U, 58U, 580U, 59U, 229415U, 60U, 532480U, 58U, 580U, 59U, 196883U, 60U, 532480U, 58U, 332U, 59U, 163879U, 60U, 532480U, 58U, 204U, 59U, 159783U, 60U, 270336U, 58U, 332U, 59U, 129299U, 60U, 270336U, 58U, 268U, 59U, 98064U, 60U, 73728U, 58U, 208U, 59U, 32807U, 60U, 827392U, 58U, 580U, 59U, 491559U, 60U, 532480U, 58U, 580U, 59U, 459027U, 60U, 532480U, 58U, 332U, 59U, 426023U, 60U, 532480U, 58U, 204U, 59U, 421927U, 60U, 270336U, 58U, 332U, 59U, 391443U, 60U, 270336U, 58U, 268U, 59U, 360208U, 60U, 73728U, 58U, 208U, 59U, 294951U, 60U, 827392U, 58U, 580U, 59U, 753703U, 60U, 532480U, 58U, 580U, 59U, 721171U, 60U, 532480U, 58U, 332U, 59U, 688167U, 60U, 532480U, 58U, 204U, 59U, 684071U, 60U, 270336U, 58U, 332U, 59U, 653587U, 60U, 270336U, 58U, 268U, 59U, 622352U, 60U, 73728U, 58U, 208U, 59U, 557095U, 60U, 827392U, 239U, 0U, 239U, 4352U, 4279173380U, 43981U, 52U, 306675U, 52U, 302576U, 4279173636U, 52719U, 52U, 306675U, 52U, 302576U, 4279174148U, 52719U, 52U, 306675U, 52U, 302576U, 4279173632U, 52719U, 52U, 306677U, 52U, 302578U, 4279173824U, 52719U, 52U, 303347U, 52U, 299185U, 3452816845U, 52685U, 52U, 306679U, 52U, 302579U, 4279173380U, 57005U, 4279173380U, 43981U, 52U, 298477U, 52U, 294378U, 52U, 290279U, 52U, 285929U, 52U, 281830U, 52U, 276678U, 52U, 272518U, 52U, 267398U, 52U, 263239U, 4279173636U, 52719U, 52U, 298477U, 52U, 294378U, 52U, 290279U, 52U, 285929U, 52U, 281830U, 52U, 276678U, 52U, 272518U, 52U, 267398U, 52U, 263239U, 4279174148U, 52719U, 52U, 298477U, 52U, 294378U, 52U, 290279U, 52U, 285929U, 52U, 281830U, 52U, 276678U, 52U, 272518U, 52U, 267398U, 52U, 263239U, 4279173824U, 52719U, 52U, 295086U, 52U, 290987U, 52U, 286859U, 52U, 282729U, 52U, 278600U, 52U, 274501U, 52U, 270374U, 52U, 266275U, 52U, 262146U, 3452816845U, 52685U, 52U, 298479U, 52U, 294380U, 52U, 290281U, 52U, 285899U, 52U, 280717U, 52U, 275597U, 52U, 271498U, 52U, 266381U, 52U, 262282U, 4279173380U, 57005U, 4279173632U, 43981U, 52U, 175604U, 4279173824U, 52719U, 52U, 172275U, 3452816845U, 52685U, 52U, 175607U, 4279173632U, 57005U, 4279173380U, 43981U, 52U, 171508U, 4279173636U, 52719U, 52U, 171508U, 4279174148U, 52719U, 52U, 171508U, 4279173632U, 52719U, 52U, 171505U, 4279173824U, 52719U, 52U, 168176U, 3452816845U, 52685U, 52U, 171506U, 4279173380U, 57005U, 4279173380U, 43981U, 52U, 167409U, 52U, 163310U, 52U, 159211U, 52U, 154860U, 52U, 150761U, 52U, 145610U, 52U, 141449U, 52U, 136329U, 52U, 132170U, 4279173636U, 52719U, 52U, 167409U, 52U, 163310U, 52U, 159211U, 52U, 154860U, 52U, 150761U, 52U, 145610U, 52U, 141449U, 52U, 136329U, 52U, 132170U, 4279174148U, 52719U, 52U, 167409U, 52U, 163310U, 52U, 159211U, 52U, 154860U, 52U, 150761U, 52U, 145610U, 52U, 141449U, 52U, 136329U, 52U, 132170U, 4279173824U, 52719U, 52U, 164015U, 52U, 159916U, 52U, 155787U, 52U, 151657U, 52U, 147528U, 52U, 143429U, 52U, 139302U, 52U, 135203U, 52U, 131074U, 3452816845U, 52685U, 52U, 167406U, 52U, 163307U, 52U, 158925U, 52U, 154826U, 52U, 149644U, 52U, 145484U, 52U, 141385U, 52U, 136265U, 52U, 131149U, 4279173380U, 57005U, 4279173824U, 43981U, 52U, 41175U, 52U, 37075U, 52U, 32945U, 52U, 28846U, 3452816845U, 52685U, 52U, 44535U, 52U, 40436U, 52U, 36337U, 52U, 32238U, 4279173824U, 57005U, 4279173380U, 43981U, 52U, 28139U, 52U, 23788U, 52U, 19689U, 52U, 14538U, 52U, 10377U, 52U, 5257U, 52U, 1098U, 4279173636U, 52719U, 52U, 28139U, 52U, 23788U, 52U, 19689U, 52U, 14538U, 52U, 10377U, 52U, 5257U, 52U, 1098U, 4279174148U, 52719U, 52U, 28139U, 52U, 23788U, 52U, 19689U, 52U, 14538U, 52U, 10377U, 52U, 5257U, 52U, 1098U, 4279173824U, 52719U, 52U, 24717U, 52U, 20587U, 52U, 16458U, 52U, 12359U, 52U, 8260U, 52U, 4133U, 52U, 4U, 3452816845U, 52685U, 52U, 28109U, 52U, 23757U, 52U, 19658U, 52U, 14476U, 52U, 10376U, 52U, 5256U, 52U, 1158U, 4279173380U, 57005U, 239U, 0U, 24U, 94506U, 239U, 64U, 4279173380U, 43981U, 53U, 391U, 53U, 33159U, 53U, 65927U, 53U, 131464U, 53U, 164232U, 53U, 197000U, 53U, 262536U, 53U, 295304U, 53U, 328072U, 4279173636U, 52719U, 53U, 391U, 53U, 33159U, 53U, 65927U, 53U, 131464U, 53U, 164232U, 53U, 197000U, 53U, 262536U, 53U, 295304U, 53U, 328072U, 4279174148U, 52719U, 53U, 391U, 53U, 33159U, 53U, 65927U, 53U, 131464U, 53U, 164232U, 53U, 197000U, 53U, 262536U, 53U, 295304U, 53U, 328072U, 3452816845U, 52685U, 53U, 325U, 53U, 33093U, 53U, 65861U, 53U, 131478U, 53U, 164246U, 53U, 197014U, 53U, 262599U, 53U, 295367U, 53U, 328135U, 4279173380U, 57005U, 239U, 0U, 24U, 94506U, 239U, 16U, 4279173380U, 43981U, 54U, 546611U, 54U, 579379U, 54U, 612147U, 54U, 644915U, 54U, 681140U, 54U, 713908U, 54U, 746676U, 54U, 779444U, 54U, 812212U, 54U, 844980U, 54U, 877748U, 54U, 910516U, 4279173636U, 52719U, 54U, 546611U, 54U, 579379U, 54U, 612147U, 54U, 644915U, 54U, 681140U, 54U, 713908U, 54U, 746676U, 54U, 779444U, 54U, 812212U, 54U, 844980U, 54U, 877748U, 54U, 910516U, 4279174148U, 52719U, 54U, 546611U, 54U, 579379U, 54U, 612147U, 54U, 644915U, 54U, 681140U, 54U, 713908U, 54U, 746676U, 54U, 779444U, 54U, 812212U, 54U, 844980U, 54U, 877748U, 54U, 910516U, 3452816845U, 52685U, 54U, 22195U, 54U, 54963U, 54U, 87731U, 54U, 120499U, 54U, 157236U, 54U, 190004U, 54U, 222772U, 54U, 255540U, 54U, 288692U, 54U, 321460U, 54U, 354228U, 54U, 386996U, 4279173380U, 57005U, 239U, 0U, 239U, 8U, 4279173380U, 43981U, 60U, 456U, 60U, 1170U, 4279173636U, 52719U, 60U, 456U, 60U, 1170U, 4279174148U, 52719U, 60U, 456U, 60U, 1170U, 3452816845U, 52685U, 60U, 554U, 60U, 1428U, 4279173380U, 57005U, 4279173380U, 43981U, 60U, 2048U, 4279173636U, 52719U, 60U, 2048U, 4279174148U, 52719U, 60U, 2048U, 4279173824U, 52719U, 60U, 2080U, 3452816845U, 52685U, 60U, 2304U, 4279173380U, 57005U, 239U, 0U, 24U, 94506U, 239U, 2U, 4279173380U, 43981U, 8U, 320512U, 4279173636U, 52719U, 8U, 320512U, 4279174148U, 52719U, 8U, 320512U, 3452816845U, 52685U, 8U, 8192U, 4279173380U, 57005U, 239U, 0U, 223U, 192U, 31U, 262244U, 4279173380U, 43981U, 88U, 684676U, 89U, 393452U, 4279173636U, 52719U, 88U, 684676U, 89U, 393452U, 4279174148U, 52719U, 88U, 684676U, 89U, 393452U, 3452816845U, 52685U, 88U, 528772U, 89U, 393580U, 4279173380U, 57005U, 4279173380U, 43981U, 97U, 953715U, 98U, 606149U, 4279173636U, 52719U, 97U, 953715U, 98U, 606149U, 4279174148U, 52719U, 97U, 953715U, 98U, 606149U, 3452816845U, 52685U, 97U, 961875U, 98U, 605124U, 4279173380U, 57005U, 4279173380U, 43981U, 99U, 69865U, 4279173636U, 52719U, 99U, 69865U, 4279174148U, 52719U, 99U, 69865U, 4279173632U, 52719U, 99U, 463081U, 4279173824U, 52719U, 99U, 69865U, 3452816845U, 52685U, 99U, 464105U, 4279173380U, 57005U, 4279173380U, 43981U, 100U, 115324U, 4279173636U, 52719U, 100U, 115324U, 4279174148U, 52719U, 100U, 115324U, 3452816845U, 52685U, 100U, 116348U, 4279173380U, 57005U, 4279173632U, 43981U, 101U, 602134U, 4279173824U, 52719U, 101U, 602133U, 3452816845U, 52685U, 101U, 593942U, 4279173632U, 57005U, 24U, 6U, 239U, 8192U, 59U, 229963U, 59U, 197195U, 59U, 164939U, 59U, 134987U, 59U, 102219U, 59U, 66738U, 59U, 32841U, 59U, 328U, 59U, 492107U, 59U, 459339U, 59U, 426571U, 59U, 397131U, 59U, 364363U, 59U, 328882U, 59U, 294985U, 59U, 262472U, 239U, 0U, 239U, 256U, 52U, 44531U, 52U, 40431U, 52U, 36332U, 52U, 32233U, 52U, 27885U, 52U, 23785U, 52U, 17641U, 52U, 13542U, 52U, 9322U, 52U, 5223U, 52U, 104U, 239U, 0U, 237U, 16U, 68U, 44530U, 68U, 40431U, 68U, 36332U, 68U, 32233U, 68U, 27884U, 68U, 23785U, 68U, 17644U, 68U, 13545U, 68U, 9324U, 68U, 5225U, 68U, 108U, 237U, 0U, 237U, 1U, 64U, 232871U, 64U, 196802U, 64U, 166114U, 64U, 131256U, 64U, 100517U, 64U, 69564U, 64U, 36721U, 64U, 576U, 237U, 0U, 239U, 8354U, 223U, 128U, 53U, 288U, 53U, 33056U, 53U, 65824U, 54U, 133U, 54U, 32901U, 54U, 65669U, 54U, 98437U, 239U, 0U, 81U, 3121U, 82U, 1570U, 83U, 1033995U, 84U, 382U, 86U, 335347U, 81U, 3073U, 82U, 1750U, 83U, 1033801U, 112U, 300641U, 113U, 492606U, 114U, 898U, 116U, 332800U, 53U, 352U, 53U, 33120U, 53U, 65888U, 54U, 292U, 54U, 33060U, 54U, 65828U, 54U, 98596U, 237U, 12U, 69U, 320U, 69U, 33088U, 69U, 65856U, 70U, 292U, 70U, 33060U, 70U, 65828U, 70U, 98596U, 223U, 136U, 179U, 986648U, 180U, 74060U, 183U, 196620U, 28U, 342482U, 24U, 127274U, 254U, 0U, 254U, 0U, 24U, 94506U};

#line 2370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_MAC_REG_ARRAY[214U] = {16U, 12U, 4279173504U, 43981U, 37U, 15U, 4279173568U, 52719U, 37U, 15U, 3452816845U, 52685U, 37U, 111U, 4279173504U, 57005U, 114U, 0U, 1064U, 10U, 1065U, 16U, 1072U, 0U, 1073U, 0U, 1074U, 0U, 1075U, 1U, 1076U, 4U, 1077U, 5U, 1078U, 7U, 1079U, 8U, 1084U, 4U, 1085U, 5U, 1086U, 7U, 1087U, 8U, 1088U, 93U, 1089U, 1U, 1090U, 0U, 1092U, 16U, 1093U, 0U, 1094U, 0U, 1095U, 0U, 1096U, 0U, 1097U, 240U, 1098U, 15U, 1099U, 62U, 1100U, 16U, 1101U, 0U, 1102U, 0U, 1103U, 0U, 1104U, 0U, 1105U, 240U, 1106U, 15U, 1107U, 0U, 1115U, 128U, 1120U, 102U, 1121U, 102U, 1224U, 255U, 1225U, 8U, 1228U, 255U, 1229U, 255U, 1230U, 1U, 1280U, 38U, 1281U, 162U, 1282U, 47U, 1283U, 0U, 1284U, 40U, 1285U, 163U, 1286U, 94U, 1287U, 0U, 1288U, 43U, 1289U, 164U, 1290U, 94U, 1291U, 0U, 1292U, 79U, 1293U, 164U, 1294U, 0U, 1295U, 0U, 1298U, 28U, 1300U, 10U, 1302U, 10U, 1317U, 79U, 1360U, 16U, 1361U, 16U, 1369U, 2U, 1372U, 80U, 1373U, 255U, 1540U, 1U, 1541U, 48U, 1543U, 3U, 1544U, 14U, 1545U, 42U, 1568U, 255U, 1569U, 255U, 1570U, 255U, 1571U, 255U, 1572U, 255U, 1573U, 255U, 1574U, 255U, 1575U, 255U, 1592U, 80U, 1596U, 10U, 1597U, 10U, 1598U, 14U, 1599U, 14U, 1600U, 128U, 1602U, 64U, 1603U, 0U, 1618U, 200U, 1646U, 5U, 1792U, 33U, 1793U, 67U, 1794U, 101U, 1795U, 135U, 1800U, 33U, 1801U, 67U, 1802U, 101U, 1803U, 135U, 1816U, 64U};

#line 2481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8821AE_MAC_REG_ARRAY[194U] = {1064U, 10U, 1065U, 16U, 1072U, 0U, 1073U, 0U, 1074U, 0U, 1075U, 1U, 1076U, 4U, 1077U, 5U, 1078U, 7U, 1079U, 8U, 1084U, 4U, 1085U, 5U, 1086U, 7U, 1087U, 8U, 1088U, 93U, 1089U, 1U, 1090U, 0U, 1092U, 16U, 1093U, 0U, 1094U, 0U, 1095U, 0U, 1096U, 0U, 1097U, 240U, 1098U, 15U, 1099U, 62U, 1100U, 16U, 1101U, 0U, 1102U, 0U, 1103U, 0U, 1104U, 0U, 1105U, 240U, 1106U, 15U, 1107U, 0U, 1110U, 94U, 1120U, 102U, 1121U, 102U, 1224U, 63U, 1225U, 255U, 1228U, 255U, 1229U, 255U, 1230U, 1U, 1280U, 38U, 1281U, 162U, 1282U, 47U, 1283U, 0U, 1284U, 40U, 1285U, 163U, 1286U, 94U, 1287U, 0U, 1288U, 43U, 1289U, 164U, 1290U, 94U, 1291U, 0U, 1292U, 79U, 1293U, 164U, 1294U, 0U, 1295U, 0U, 1298U, 28U, 1300U, 10U, 1302U, 10U, 1317U, 79U, 1360U, 16U, 1361U, 16U, 1369U, 2U, 1372U, 80U, 1373U, 255U, 1541U, 48U, 1543U, 7U, 1544U, 14U, 1545U, 42U, 1568U, 255U, 1569U, 255U, 1570U, 255U, 1571U, 255U, 1572U, 255U, 1573U, 255U, 1574U, 255U, 1575U, 255U, 1592U, 80U, 1596U, 10U, 1597U, 10U, 1598U, 14U, 1599U, 14U, 1600U, 64U, 1602U, 64U, 1603U, 0U, 1618U, 200U, 1646U, 5U, 1792U, 33U, 1793U, 67U, 1794U, 101U, 1795U, 135U, 1800U, 33U, 1801U, 67U, 1802U, 101U, 1803U, 135U, 1816U, 64U};

#line 2581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8812AE_AGC_TAB_ARRAY[1312U] = {4279175128U, 43981U, 2076U, 4227858433U, 2076U, 4211212289U, 2076U, 4194566145U, 2076U, 4177920001U, 2076U, 4161273857U, 2076U, 4144627713U, 2076U, 4127981569U, 2076U, 4111335425U, 2076U, 4094689281U, 2076U, 4078043137U, 2076U, 4061396993U, 2076U, 4044750849U, 2076U, 4028104705U, 2076U, 4011458561U, 2076U, 3994812417U, 2076U, 3978166273U, 2076U, 3961520129U, 2076U, 3944873985U, 2076U, 3928227841U, 2076U, 3441819649U, 2076U, 3425173505U, 2076U, 3408527361U, 2076U, 3391881217U, 2076U, 3375235073U, 2076U, 3358588929U, 2076U, 2788294657U, 2076U, 2771648513U, 2076U, 2755002369U, 2076U, 2738356225U, 2076U, 2721710081U, 2076U, 2285633537U, 2076U, 2268987393U, 2076U, 2252341249U, 2076U, 2235695105U, 2076U, 2219048961U, 2076U, 2202402817U, 2076U, 2185756673U, 2076U, 2169110529U, 2076U, 1212940289U, 2076U, 1196294145U, 2076U, 1179648001U, 2076U, 1163001857U, 2076U, 1146355713U, 2076U, 1129709569U, 2076U, 1113063425U, 2076U, 1096417281U, 2076U, 626786305U, 2076U, 610140161U, 2076U, 593494017U, 2076U, 576847873U, 2076U, 560201729U, 2076U, 560332801U, 2076U, 560463873U, 2076U, 560594945U, 2076U, 560726017U, 2076U, 560857089U, 2076U, 560988161U, 2076U, 561119233U, 2076U, 561250305U, 2076U, 561381377U, 2076U, 561512449U, 2076U, 561643521U, 2076U, 561774593U, 2076U, 561905665U, 4279175120U, 52719U, 2076U, 4177526785U, 2076U, 4160880641U, 2076U, 4144234497U, 2076U, 4127588353U, 2076U, 4110942209U, 2076U, 4094296065U, 2076U, 4077649921U, 2076U, 4061003777U, 2076U, 4044357633U, 2076U, 4027711489U, 2076U, 4011065345U, 2076U, 3994419201U, 2076U, 3977773057U, 2076U, 3961126913U, 2076U, 3944480769U, 2076U, 3927834625U, 2076U, 3441426433U, 2076U, 3424780289U, 2076U, 3408134145U, 2076U, 3391488001U, 2076U, 3374841857U, 2076U, 3358195713U, 2076U, 3341549569U, 2076U, 3324903425U, 2076U, 2771386369U, 2076U, 2754740225U, 2076U, 2738094081U, 2076U, 2721447937U, 2076U, 2285371393U, 2076U, 2268725249U, 2076U, 2252079105U, 2076U, 2235432961U, 2076U, 2218786817U, 2076U, 2202140673U, 2076U, 2185494529U, 2076U, 2168848385U, 2076U, 1212678145U, 2076U, 1196032001U, 2076U, 1179385857U, 2076U, 1162739713U, 2076U, 1146093569U, 2076U, 1129447425U, 2076U, 1112801281U, 2076U, 1096155137U, 2076U, 626524161U, 2076U, 609878017U, 2076U, 593231873U, 2076U, 576585729U, 2076U, 559939585U, 2076U, 560070657U, 2076U, 560201729U, 2076U, 560332801U, 2076U, 560463873U, 2076U, 560594945U, 2076U, 594280449U, 2076U, 577634305U, 2076U, 560988161U, 2076U, 561119233U, 2076U, 561250305U, 2076U, 561381377U, 2076U, 561512449U, 2076U, 561643521U, 2076U, 561774593U, 2076U, 561905665U, 3452816845U, 52685U, 2076U, 4278190081U, 2076U, 4278321153U, 2076U, 4278452225U, 2076U, 4278583297U, 2076U, 4278714369U, 2076U, 4262068225U, 2076U, 4245422081U, 2076U, 4228775937U, 2076U, 4212129793U, 2076U, 4195483649U, 2076U, 4178837505U, 2076U, 4162191361U, 2076U, 4145545217U, 2076U, 4128899073U, 2076U, 4112252929U, 2076U, 4095606785U, 2076U, 4078960641U, 2076U, 4062314497U, 2076U, 4045668353U, 2076U, 4029022209U, 2076U, 4012376065U, 2076U, 3995729921U, 2076U, 3979083777U, 2076U, 3962437633U, 2076U, 3945791489U, 2076U, 3929145345U, 2076U, 3912499201U, 2076U, 3895853057U, 2076U, 3879206913U, 2076U, 3862560769U, 2076U, 3845914625U, 2076U, 3342729217U, 2076U, 3326083073U, 2076U, 3309436929U, 2076U, 3292790785U, 2076U, 3276144641U, 2076U, 3259498497U, 2076U, 3242852353U, 2076U, 2806775809U, 2076U, 2790129665U, 2076U, 2773483521U, 2076U, 2756837377U, 2076U, 2740191233U, 2076U, 2723545089U, 2076U, 2706898945U, 2076U, 1733951489U, 2076U, 1717305345U, 2076U, 1700659201U, 2076U, 1684013057U, 2076U, 1667366913U, 2076U, 1214513153U, 2076U, 1197867009U, 2076U, 1181220865U, 2076U, 1164574721U, 2076U, 1147928577U, 2076U, 1131282433U, 2076U, 1114636289U, 2076U, 1097990145U, 2076U, 1098121217U, 2076U, 1098252289U, 2076U, 1098383361U, 2076U, 1098514433U, 2076U, 1098645505U, 2076U, 1098776577U, 4279175128U, 57005U, 4279173504U, 43981U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279173760U, 52719U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279173568U, 52719U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279173824U, 52719U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279175128U, 52719U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279175120U, 52719U, 2076U, 4236247041U, 2076U, 4219600897U, 2076U, 4202954753U, 2076U, 4186308609U, 2076U, 4169662465U, 2076U, 4153016321U, 2076U, 4136370177U, 2076U, 4119724033U, 2076U, 4103077889U, 2076U, 4086431745U, 2076U, 4069785601U, 2076U, 4053139457U, 2076U, 4036493313U, 2076U, 4019847169U, 2076U, 4003201025U, 2076U, 3986554881U, 2076U, 3969908737U, 2076U, 3953262593U, 2076U, 3936616449U, 2076U, 3919970305U, 2076U, 3903324161U, 2076U, 3886678017U, 2076U, 3870031873U, 2076U, 3853385729U, 2076U, 3836739585U, 2076U, 3820093441U, 2076U, 2830368769U, 2076U, 2813722625U, 2076U, 2797076481U, 2076U, 2780430337U, 2076U, 2763784193U, 2076U, 2747138049U, 2076U, 2730491905U, 2076U, 2713845761U, 2076U, 1757675521U, 2076U, 1741029377U, 2076U, 1724383233U, 2076U, 1707737089U, 2076U, 1691090945U, 2076U, 1204682753U, 2076U, 1188036609U, 2076U, 1171390465U, 2076U, 1154744321U, 2076U, 1138098177U, 2076U, 1121452033U, 2076U, 148504577U, 2076U, 131858433U, 2076U, 115212289U, 2076U, 98566145U, 2076U, 81920001U, 2076U, 65273857U, 2076U, 48627713U, 2076U, 31981569U, 2076U, 32112641U, 2076U, 32243713U, 2076U, 32374785U, 2076U, 32505857U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 3452816845U, 52685U, 2076U, 4286578689U, 2076U, 4286709761U, 2076U, 4286840833U, 2076U, 4270194689U, 2076U, 4253548545U, 2076U, 4236902401U, 2076U, 4220256257U, 2076U, 4203610113U, 2076U, 4186963969U, 2076U, 4170317825U, 2076U, 4153671681U, 2076U, 4137025537U, 2076U, 4120379393U, 2076U, 4103733249U, 2076U, 4087087105U, 2076U, 4070440961U, 2076U, 4053794817U, 2076U, 4037148673U, 2076U, 4020502529U, 2076U, 4003856385U, 2076U, 3987210241U, 2076U, 3970564097U, 2076U, 3953917953U, 2076U, 3937271809U, 2076U, 3920625665U, 2076U, 3903979521U, 2076U, 3887333377U, 2076U, 3870687233U, 2076U, 3854041089U, 2076U, 3837394945U, 2076U, 3820748801U, 2076U, 2831024129U, 2076U, 2814377985U, 2076U, 2797731841U, 2076U, 2781085697U, 2076U, 2764439553U, 2076U, 2747793409U, 2076U, 2731147265U, 2076U, 2714501121U, 2076U, 1758330881U, 2076U, 1741684737U, 2076U, 1725038593U, 2076U, 1708392449U, 2076U, 1691746305U, 2076U, 1205338113U, 2076U, 1188691969U, 2076U, 1172045825U, 2076U, 1155399681U, 2076U, 1138753537U, 2076U, 1122107393U, 2076U, 149159937U, 2076U, 132513793U, 2076U, 115867649U, 2076U, 99221505U, 2076U, 82575361U, 2076U, 65929217U, 2076U, 49283073U, 2076U, 32636929U, 2076U, 32768001U, 2076U, 32899073U, 2076U, 33030145U, 2076U, 33161217U, 2076U, 33292289U, 2076U, 33423361U, 4279173504U, 57005U, 3152U, 34U, 3152U, 32U, 3664U, 34U, 3664U, 32U};

#line 3241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u32 RTL8821AE_AGC_TAB_ARRAY[382U] = {2076U, 3204448257U, 2076U, 3204579329U, 2076U, 3204710401U, 2076U, 3204841473U, 2076U, 3188195329U, 2076U, 3171549185U, 2076U, 3154903041U, 2076U, 3121479681U, 2076U, 3104833537U, 2076U, 3088187393U, 2076U, 3071541249U, 2076U, 3054895105U, 2076U, 3038248961U, 2076U, 3021602817U, 2076U, 3004956673U, 2076U, 2988310529U, 2076U, 2971664385U, 2076U, 2955018241U, 2076U, 2938372097U, 2076U, 2921725953U, 2076U, 2905079809U, 2076U, 2888433665U, 2076U, 2871787521U, 2076U, 2855141377U, 2076U, 2838495233U, 2076U, 2821849089U, 2076U, 2805202945U, 2076U, 2788556801U, 2076U, 2771910657U, 2076U, 2755264513U, 2076U, 2738618369U, 2076U, 1732116481U, 2076U, 1715470337U, 2076U, 1698824193U, 2076U, 1682178049U, 2076U, 1665531905U, 2076U, 1648885761U, 2076U, 1632239617U, 2076U, 1196163073U, 2076U, 1179516929U, 2076U, 1162870785U, 2076U, 1146224641U, 2076U, 1129578497U, 2076U, 1112932353U, 2076U, 1096286209U, 2076U, 676986881U, 2076U, 660340737U, 2076U, 643694593U, 2076U, 627048449U, 2076U, 610402305U, 2076U, 174325761U, 2076U, 157679617U, 2076U, 141033473U, 2076U, 124387329U, 2076U, 107741185U, 2076U, 91095041U, 2076U, 74448897U, 2076U, 57802753U, 2076U, 41156609U, 2076U, 24510465U, 2076U, 24641537U, 2076U, 24772609U, 2076U, 24903681U, 2076U, 25034753U, 4279173824U, 43981U, 2076U, 4211081473U, 2076U, 4194435329U, 2076U, 4177789185U, 2076U, 4161143041U, 2076U, 4144496897U, 2076U, 4127850753U, 2076U, 4111204609U, 2076U, 4094558465U, 2076U, 4077912321U, 2076U, 4061266177U, 2076U, 4044620033U, 2076U, 4027973889U, 2076U, 4011327745U, 2076U, 3994681601U, 2076U, 3978035457U, 2076U, 3961389313U, 2076U, 3944743169U, 2076U, 3928097025U, 2076U, 3911450881U, 2076U, 3894804737U, 2076U, 3878158593U, 2076U, 3861512449U, 2076U, 3844866305U, 2076U, 3828220161U, 2076U, 3811574017U, 2076U, 2771517697U, 2076U, 2754871553U, 2076U, 2738225409U, 2076U, 2268594433U, 2076U, 2251948289U, 2076U, 2235302145U, 2076U, 2218656001U, 2076U, 1765802241U, 2076U, 1749156097U, 2076U, 1732509953U, 2076U, 1715863809U, 2076U, 1229455617U, 2076U, 1212809473U, 2076U, 1196163329U, 2076U, 709755137U, 2076U, 693108993U, 2076U, 676462849U, 2076U, 659816705U, 2076U, 643170561U, 2076U, 626524417U, 2076U, 609878273U, 2076U, 593232129U, 2076U, 90046721U, 2076U, 73400577U, 2076U, 56754433U, 2076U, 40108289U, 2076U, 23462145U, 2076U, 23593217U, 2076U, 23724289U, 2076U, 23855361U, 2076U, 23986433U, 2076U, 24117505U, 2076U, 24248577U, 3452816845U, 52685U, 2076U, 4278190337U, 2076U, 4278321409U, 2076U, 4261675265U, 2076U, 4245029121U, 2076U, 4228382977U, 2076U, 4245291265U, 2076U, 4228645121U, 2076U, 4211998977U, 2076U, 4195352833U, 2076U, 4178706689U, 2076U, 4162060545U, 2076U, 4145414401U, 2076U, 4128768257U, 2076U, 4112122113U, 2076U, 4095475969U, 2076U, 4078829825U, 2076U, 4062183681U, 2076U, 4045537537U, 2076U, 4028891393U, 2076U, 4012245249U, 2076U, 3995599105U, 2076U, 3978952961U, 2076U, 3962306817U, 2076U, 3945660673U, 2076U, 3929014529U, 2076U, 3912368385U, 2076U, 3895722241U, 2076U, 3879076097U, 2076U, 3862429953U, 2076U, 3845783809U, 2076U, 3829137665U, 2076U, 3812491521U, 2076U, 2772435201U, 2076U, 2755789057U, 2076U, 2739142913U, 2076U, 2269511937U, 2076U, 2252865793U, 2076U, 2236219649U, 2076U, 2219573505U, 2076U, 1766719745U, 2076U, 1750073601U, 2076U, 1733427457U, 2076U, 1716781313U, 2076U, 1230373121U, 2076U, 1213726977U, 2076U, 1197080833U, 2076U, 710672641U, 2076U, 694026497U, 2076U, 677380353U, 2076U, 660734209U, 2076U, 644088065U, 2076U, 627441921U, 2076U, 610795777U, 2076U, 594149633U, 2076U, 90964225U, 2076U, 74318081U, 2076U, 57671937U, 2076U, 41025793U, 4279173824U, 57005U, 2076U, 24379649U, 2076U, 24510721U, 2076U, 24641793U, 2076U, 24772865U, 2076U, 24903937U, 2076U, 25035009U, 3152U, 34U, 3152U, 32U};

#line 3440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u8 *RTL8812AE_TXPWR_LMT[3948U] = {(u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"34", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"32", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"36", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"32", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"63"};

#line 4007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/table.c"
u8 *RTL8821AE_TXPWR_LMT[3948U] = {(u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"36", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"CCK", (u8 *)"1T", (u8 *)"14", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"01", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"02", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"03", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"04", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"05", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"06", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"07", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"08", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"09", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"10", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"26", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"11", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"01", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"02", (u8 *)"63", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"03", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"04", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"05", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"06", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"07", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"08", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"09", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"32", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"10", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"11", (u8 *)"30", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"12", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"13", (u8 *)"32", (u8 *)"FCC", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"ETSI", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"MKK", (u8 *)"2.4G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"14", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"52", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"56", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"60", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"64", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"108", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"112", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"116", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"120", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"124", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"128", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"140", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"OFDM", (u8 *)"1T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"36", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"40", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"44", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"48", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"52", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"56", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"60", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"64", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"100", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"114", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"108", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"112", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"116", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"120", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"124", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"128", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"132", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"136", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"140", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"1T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"36", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"40", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"44", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"48", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"52", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"56", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"60", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"64", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"100", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"114", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"108", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"112", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"116", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"120", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"124", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"128", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"132", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"136", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"140", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"149", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"153", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"157", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"161", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"20M", (u8 *)"HT", (u8 *)"2T", (u8 *)"165", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"38", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"46", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"54", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"24", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"62", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"24", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"102", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"110", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"118", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"126", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"134", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"151", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"1T", (u8 *)"159", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"38", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"46", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"54", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"62", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"102", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"110", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"118", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"126", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"134", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"151", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"40M", (u8 *)"HT", (u8 *)"2T", (u8 *)"159", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"22", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"42", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"20", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"58", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"20", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"106", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"20", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"122", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"1T", (u8 *)"155", (u8 *)"63", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"42", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"26", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"58", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"28", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"106", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"32", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"122", (u8 *)"30", (u8 *)"FCC", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"34", (u8 *)"ETSI", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"30", (u8 *)"MKK", (u8 *)"5G", (u8 *)"80M", (u8 *)"VHT", (u8 *)"2T", (u8 *)"155", (u8 *)"63"};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.h"
void rtl8821ae_phy_rf6052_set_cck_txpower(struct ieee80211_hw *hw, u8 *ppowerlevel);


#line 35 
void rtl8821ae_phy_rf6052_set_ofdm_txpower(struct ieee80211_hw *hw, u8 *ppowerlevel_ofdm, u8 *ppowerlevel_bw20, u8 *ppowerlevel_bw40, u8 channel);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
static bool _rtl8821ae_phy_rf6052_config_parafile(struct ieee80211_hw *hw);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
void rtl8821ae_phy_rf6052_set_bandwidth(struct ieee80211_hw *hw, u8 bandwidth)
{
  
#line 37 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 39 
  switch ((int)bandwidth) {
    case 0: 
#line 40 
    ;
    
#line 41 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,24U,3072U,3U);
    
#line 42 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_B,24U,3072U,3U);
    
#line 43 
    goto ldv_52885;
    case 1: 
#line 44 
    ;
    
#line 45 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,24U,3072U,1U);
    
#line 46 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_B,24U,3072U,1U);
    
#line 47 
    goto ldv_52885;
    case 2: 
#line 48 
    ;
    
#line 49 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,24U,3072U,0U);
    
#line 50 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_B,24U,3072U,0U);
    
#line 51 
    goto ldv_52885;
    default: 
#line 52 
    ;
    
#line 53 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 1ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel >= 0) != 0L) {
      int tmp;
      int tmp_0;
      
#line 53 
      ;
      
#line 53 
      tmp = preempt_count();
      
#line 53 
      tmp_0 = preempt_count();
      
#line 53 
      printk("\001","rtl8821ae_phy_rf6052_set_bandwidth",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)bandwidth);
    }
    else ;
    
#line 55 
    goto ldv_52885;
  }
  ldv_52885: 
#line 57 
  ;
  
#line 58 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
void rtl8821ae_phy_rf6052_set_cck_txpower(struct ieee80211_hw *hw, u8 *ppowerlevel)
{
  u32 tmpval;
  u8 idx1;
  u8 idx2;
  u8 *ptr;
  u8 direction;
  u32 pwrtrac_value;
  
#line 62 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 63 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 64 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  
#line 65 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 66 
  u32 tx_agc[2U] = {0U, 0U};
  
#line 67 
  bool turbo_scanoff = (_Bool)0;
  
#line 73 
  if ((unsigned int)rtlefuse->eeprom_regulatory != 0U) 
#line 74 
                                                       turbo_scanoff = (_Bool)1; else ;
  
#line 76 
  if ((int)mac->act_scanning != 0) {
    
#line 77 
    tx_agc[0] = 1061109567U;
    
#line 78 
    tx_agc[1] = 1061109567U;
    
#line 80 
    if ((int)turbo_scanoff != 0) {
      
#line 81 
      idx1 = (unsigned char)0U;
      
#line 81 
      goto ldv_52907;
      ldv_52906: 
#line 82 
      ;
      
#line 84 
      tx_agc[(int)idx1] = (unsigned int)((((int)*(ppowerlevel + (int)idx1) | ((int)*(ppowerlevel + (int)idx1) << 8)) | ((int)*(ppowerlevel + (int)idx1) << 16)) | ((int)*(ppowerlevel + (int)idx1) << 24));
      
#line 83 
      idx1 = (u8)((int)idx1 + 1);
      ldv_52907: 
#line 84 
      ;
      
#line 81 
      if ((unsigned int)idx1 <= 1U) 
#line 84 
                                    goto ldv_52906; else 
#line 87 
                                                         goto ldv_52908;
      ldv_52908: 
#line 88 
      ;
    }
    else ;
  }
  else {
    
#line 91 
    idx1 = (unsigned char)0U;
    
#line 91 
    goto ldv_52910;
    ldv_52909: 
#line 92 
    ;
    
#line 92 
    tx_agc[(int)idx1] = (unsigned int)((((int)*(ppowerlevel + (int)idx1) | ((int)*(ppowerlevel + (int)idx1) << 8)) | ((int)*(ppowerlevel + (int)idx1) << 16)) | ((int)*(ppowerlevel + (int)idx1) << 24));
    
#line 91 
    idx1 = (u8)((int)idx1 + 1);
    ldv_52910: 
#line 92 
    ;
    
#line 91 
    if ((unsigned int)idx1 <= 1U) 
#line 93 
                                  goto ldv_52909; else 
#line 96 
                                                       goto ldv_52911;
    ldv_52911: 
#line 97 
    ;
    
#line 98 
    if ((unsigned int)rtlefuse->eeprom_regulatory == 0U) {
      
#line 99 
      tmpval = rtlphy->mcs_txpwrlevel_origoffset[0][6] + (rtlphy->mcs_txpwrlevel_origoffset[0][7] << 8);
      
#line 103 
      tx_agc[0] += tmpval;
      
#line 105 
      tmpval = rtlphy->mcs_txpwrlevel_origoffset[0][14] + (rtlphy->mcs_txpwrlevel_origoffset[0][15] << 24);
      
#line 108 
      tx_agc[1] += tmpval;
    }
    else ;
  }
  
#line 112 
  idx1 = (unsigned char)0U;
  
#line 112 
  goto ldv_52916;
  ldv_52915: 
#line 113 
  ;
  
#line 113 
  ptr = (u8 *)(& tx_agc[(int)idx1]);
  
#line 114 
  idx2 = (unsigned char)0U;
  
#line 114 
  goto ldv_52913;
  ldv_52912: 
#line 115 
  ;
  
#line 115 
  if ((unsigned int)*ptr > 63U) 
#line 116 
                                *ptr = (unsigned char)63U; else ;
  
#line 117 
  ptr += 1;
  
#line 114 
  idx2 = (u8)((int)idx2 + 1);
  ldv_52913: 
#line 115 
  ;
  
#line 114 
  if ((unsigned int)idx2 <= 3U) 
#line 116 
                                goto ldv_52912; else 
#line 119 
                                                     goto ldv_52914;
  ldv_52914: 
#line 120 
  ;
  
#line 112 
  idx1 = (u8)((int)idx1 + 1);
  ldv_52916: 
#line 113 
  ;
  
#line 112 
  if ((unsigned int)idx1 <= 1U) 
#line 114 
                                goto ldv_52915; else 
#line 117 
                                                     goto ldv_52917;
  ldv_52917: 
#line 118 
  ;
  
#line 120 
  rtl8821ae_dm_txpower_track_adjust(hw,(unsigned char)1,& direction,& pwrtrac_value);
  
#line 121 
  if ((unsigned int)direction == 1U) {
    
#line 122 
    tx_agc[0] += pwrtrac_value;
    
#line 123 
    tx_agc[1] += pwrtrac_value;
  }
  else 
    
#line 124 
    if ((unsigned int)direction == 2U) {
      
#line 125 
      tx_agc[0] -= pwrtrac_value;
      
#line 126 
      tx_agc[1] -= pwrtrac_value;
    }
    else ;
  
#line 128 
  tmpval = tx_agc[0];
  
#line 129 
  rtl_set_bbreg(hw,3104U,4294967295U,tmpval);
  
#line 131 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) 
    
#line 131 
    printk("\001",tmpval,3104); else ;
  
#line 135 
  tmpval = tx_agc[1];
  
#line 136 
  rtl_set_bbreg(hw,3616U,4294967295U,tmpval);
  
#line 138 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) 
    
#line 138 
    printk("\001",tmpval,3616); else ;
  
#line 139 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
static void rtl8821ae_phy_get_power_base(struct ieee80211_hw *hw, u8 *ppowerlevel_ofdm, u8 *ppowerlevel_bw20, u8 *ppowerlevel_bw40, u8 channel, u32 *ofdmbase, u32 *mcsbase)
{
  u32 powerbase0;
  u32 powerbase1;
  u8 i;
  u8 powerlevel[2U];
  
#line 149 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 150 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 154 
  i = (unsigned char)0U;
  
#line 154 
  goto ldv_52934;
  ldv_52933: 
#line 155 
  ;
  
#line 155 
  powerbase0 = (unsigned int)*(ppowerlevel_ofdm + (int)i);
  
#line 157 
  powerbase0 = (((powerbase0 << 24) | (powerbase0 << 16)) | (powerbase0 << 8)) | powerbase0;
  
#line 159 
  *(ofdmbase + (int)i) = powerbase0;
  
#line 160 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
    int tmp;
    
#line 160 
    ;
    
#line 160 
    if ((unsigned int)i == 0U) 
#line 160 
                               tmp = 65; else 
#line 160 
                                              tmp = 66;
    
#line 160 
    printk("\001",tmp,*(ofdmbase + (int)i));
  }
  else ;
  
#line 154 
  i = (u8)((int)i + 1);
  ldv_52934: 
#line 155 
  ;
  
#line 154 
  if ((unsigned int)i <= 1U) 
#line 156 
                             goto ldv_52933; else 
#line 159 
                                                  goto ldv_52935;
  ldv_52935: 
#line 160 
  ;
  
#line 165 
  i = (unsigned char)0U;
  
#line 165 
  goto ldv_52937;
  ldv_52936: 
#line 166 
  ;
  
#line 166 
  if ((unsigned int)rtlphy->current_chan_bw == 0U) 
#line 167 
                                                   powerlevel[(int)i] = *(ppowerlevel_bw20 + (int)i); else 
                                                                    
#line 169 
                                                                    powerlevel[(int)i] = *(ppowerlevel_bw40 + (int)i);
  
#line 171 
  powerbase1 = (unsigned int)powerlevel[(int)i];
  
#line 172 
  powerbase1 = (((powerbase1 << 24) | (powerbase1 << 16)) | (powerbase1 << 8)) | powerbase1;
  
#line 175 
  *(mcsbase + (int)i) = powerbase1;
  
#line 177 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
    int tmp_0;
    
#line 177 
    ;
    
#line 177 
    if ((unsigned int)i == 0U) 
#line 177 
                               tmp_0 = 65; else 
#line 177 
                                                tmp_0 = 66;
    
#line 177 
    printk("\001",tmp_0,*(mcsbase + (int)i));
  }
  else ;
  
#line 165 
  i = (u8)((int)i + 1);
  ldv_52937: 
#line 166 
  ;
  
#line 165 
  if ((unsigned int)i <= 1U) 
#line 167 
                             goto ldv_52936; else 
#line 170 
                                                  goto ldv_52938;
  ldv_52938: 
#line 171 
  ;
  
#line 172 
  return;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
static void get_txpower_writeval_by_regulatory(struct ieee80211_hw *hw, u8 channel, u8 index, u32 *powerbase0, u32 *powerbase1, u32 *p_outwriteval)
{
  u8 i;
  u8 pwr_diff_limit[4U];
  u8 customer_pwr_diff;
  u32 writeval;
  u32 customer_limit;
  u32 rf;
  
#line 189 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 190 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 191 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  
#line 192 
  u8 chnlgroup = (unsigned char)0U;
  
#line 192 
  u8 pwr_diff = (unsigned char)0U;
  
#line 195 
  rf = 0U;
  
#line 195 
  goto ldv_52968;
  ldv_52967: 
#line 196 
  ;
  
#line 196 
  switch ((int)rtlefuse->eeprom_regulatory) {
    int tmp;
    u32 tmp_0;
    int tmp_2;
    u32 tmp_3;
    int tmp_8;
    u32 tmp_10;
    int tmp_12;
    u32 tmp_13;
    case 0: 
#line 197 
    ;
    
#line 198 
    chnlgroup = (unsigned char)0U;
    
#line 201 
    if (rf != 0U) 
#line 201 
                  tmp = 8; else 
#line 201 
                                tmp = 0;
    
#line 203 
    if ((unsigned int)index <= 1U) 
#line 203 
                                   tmp_0 = *(powerbase0 + rf); else 
#line 203 
                                                                    tmp_0 = *(powerbase1 + rf);
    
#line 200 
    writeval = rtlphy->mcs_txpwrlevel_origoffset[(int)chnlgroup][(int)index + tmp] + tmp_0;
    
#line 205 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_1;
      
#line 205 
      ;
      
#line 205 
      if (rf == 0U) 
#line 205 
                    tmp_1 = 65; else 
#line 205 
                                     tmp_1 = 66;
      
#line 205 
      printk("\001",tmp_1,writeval);
    }
    else ;
    
#line 208 
    goto ldv_52959;
    case 1: 
#line 209 
    ;
    
#line 210 
    if ((unsigned int)rtlphy->pwrgroup_cnt == 1U) 
#line 211 
                                                  chnlgroup = (unsigned char)0U;
    else 
      
#line 213 
      if ((unsigned int)channel <= 2U) 
#line 214 
                                       chnlgroup = (unsigned char)0U;
      else 
        
#line 215 
        if ((unsigned int)channel <= 5U) 
#line 216 
                                         chnlgroup = (unsigned char)1U;
        else 
          
#line 217 
          if ((unsigned int)channel <= 8U) 
#line 218 
                                           chnlgroup = (unsigned char)2U;
          else 
            
#line 219 
            if ((unsigned int)channel <= 11U) 
#line 220 
                                              chnlgroup = (unsigned char)3U;
            else 
              
#line 221 
              if ((unsigned int)channel <= 13U) 
#line 222 
                                                chnlgroup = (unsigned char)4U;
              else 
                
#line 223 
                if ((unsigned int)channel == 14U) 
#line 224 
                                                  chnlgroup = (unsigned char)5U; else ;
    
#line 229 
    if (rf != 0U) 
#line 229 
                  tmp_2 = 8; else 
#line 229 
                                  tmp_2 = 0;
    
#line 229 
    if ((unsigned int)index <= 1U) 
#line 229 
                                   tmp_3 = *(powerbase0 + rf); else 
#line 229 
                                                                    tmp_3 = *(powerbase1 + rf);
    
#line 227 
    writeval = rtlphy->mcs_txpwrlevel_origoffset[(int)chnlgroup][(int)index + tmp_2] + tmp_3;
    
#line 233 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_4;
      
#line 233 
      ;
      
#line 233 
      if (rf == 0U) 
#line 233 
                    tmp_4 = 65; else 
#line 233 
                                     tmp_4 = 66;
      
#line 233 
      printk("\001",tmp_4,writeval);
    }
    else ;
    
#line 237 
    goto ldv_52959;
    case 2: 
#line 238 
    ;
    
#line 239 
    if ((unsigned int)index <= 1U) 
#line 239 
                                   writeval = *(powerbase0 + rf); else 
                                                                    
#line 239 
                                                                    writeval = *(powerbase1 + rf);
    
#line 242 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_5;
      
#line 242 
      ;
      
#line 242 
      if (rf == 0U) 
#line 242 
                    tmp_5 = 65; else 
#line 242 
                                     tmp_5 = 66;
      
#line 242 
      printk("\001",tmp_5,writeval);
    }
    else ;
    
#line 245 
    goto ldv_52959;
    case 3: 
#line 246 
    ;
    
#line 247 
    chnlgroup = (unsigned char)0U;
    
#line 249 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) {
      
#line 250 
      if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
        int tmp_6;
        
#line 250 
        ;
        
#line 250 
        if (rf == 0U) 
#line 250 
                      tmp_6 = 65; else 
#line 250 
                                       tmp_6 = 66;
        
#line 250 
        printk("\001",tmp_6,(int)rtlefuse->pwrgroup_ht40[rf][(int)channel + -1]);
      }
      else ;
    }
    else 
      
#line 256 
      if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
        int tmp_7;
        
#line 256 
        ;
        
#line 256 
        if (rf == 0U) 
#line 256 
                      tmp_7 = 65; else 
#line 256 
                                       tmp_7 = 66;
        
#line 256 
        printk("\001",tmp_7,(int)rtlefuse->pwrgroup_ht20[rf][(int)channel + -1]);
      }
      else ;
    
#line 263 
    if ((unsigned int)index <= 1U) 
#line 264 
                                   pwr_diff = (unsigned char)rtlefuse->txpwr_legacyhtdiff[rf][(int)channel + -1];
    else 
      
#line 265 
      if ((unsigned int)rtlphy->current_chan_bw == 0U) 
#line 266 
                                                       pwr_diff = (unsigned char)rtlefuse->txpwr_ht20diff[rf][(int)channel + -1]; else ;
    
#line 269 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) 
#line 270 
                                                     customer_pwr_diff = rtlefuse->pwrgroup_ht40[rf][(int)channel + -1]; else 
                                                                    
#line 273 
                                                                    customer_pwr_diff = rtlefuse->pwrgroup_ht20[rf][(int)channel + -1];
    
#line 276 
    if ((int)pwr_diff > (int)customer_pwr_diff) 
#line 277 
                                                pwr_diff = (unsigned char)0U; else 
                                                                    
#line 279 
                                                                    pwr_diff = (unsigned char)((int)customer_pwr_diff - (int)pwr_diff);
    
#line 281 
    i = (unsigned char)0U;
    
#line 281 
    goto ldv_52964;
    ldv_52963: 
#line 282 
    ;
    
#line 284 
    if (rf != 0U) 
#line 284 
                  tmp_8 = 8; else 
#line 284 
                                  tmp_8 = 0;
    
#line 282 
    pwr_diff_limit[(int)i] = (unsigned char)((rtlphy->mcs_txpwrlevel_origoffset[(int)chnlgroup][(int)index + tmp_8] & (unsigned int)(127 << (int)i * 8)) >> (int)i * 8);
    
#line 287 
    if ((int)pwr_diff_limit[(int)i] > (int)pwr_diff) 
#line 288 
                                                     pwr_diff_limit[(int)i] = pwr_diff; else ;
    
#line 281 
    i = (u8)((int)i + 1);
    ldv_52964: 
#line 282 
    ;
    
#line 281 
    if ((unsigned int)i <= 3U) 
#line 283 
                               goto ldv_52963; else 
#line 286 
                                                    goto ldv_52965;
    ldv_52965: 
#line 287 
    ;
    
#line 291 
    customer_limit = (unsigned int)(((((int)pwr_diff_limit[3] << 24) | ((int)pwr_diff_limit[2] << 16)) | ((int)pwr_diff_limit[1] << 8)) | (int)pwr_diff_limit[0]);
    
#line 295 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_9;
      
#line 295 
      ;
      
#line 295 
      if (rf == 0U) 
#line 295 
                    tmp_9 = 65; else 
#line 295 
                                     tmp_9 = 66;
      
#line 295 
      printk("\001",tmp_9,customer_limit);
    }
    else ;
    
#line 299 
    if ((unsigned int)index <= 1U) 
#line 299 
                                   tmp_10 = *(powerbase0 + rf); else 
                                                                  
#line 299 
                                                                  tmp_10 = *(powerbase1 + rf);
    
#line 299 
    writeval = tmp_10 + customer_limit;
    
#line 302 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_11;
      
#line 302 
      ;
      
#line 302 
      if (rf == 0U) 
#line 302 
                    tmp_11 = 65; else 
#line 302 
                                      tmp_11 = 66;
      
#line 302 
      printk("\001",tmp_11,writeval);
    }
    else ;
    
#line 305 
    goto ldv_52959;
    default: 
#line 306 
    ;
    
#line 307 
    chnlgroup = (unsigned char)0U;
    
#line 310 
    if (rf != 0U) 
#line 310 
                  tmp_12 = 8; else 
#line 310 
                                   tmp_12 = 0;
    
#line 311 
    if ((unsigned int)index <= 1U) 
#line 311 
                                   tmp_13 = *(powerbase0 + rf); else 
                                                                  
#line 311 
                                                                  tmp_13 = *(powerbase1 + rf);
    
#line 308 
    writeval = rtlphy->mcs_txpwrlevel_origoffset[(int)chnlgroup][(int)index + tmp_12] + tmp_13;
    
#line 313 
    if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) {
      int tmp_14;
      
#line 313 
      ;
      
#line 313 
      if (rf == 0U) 
#line 313 
                    tmp_14 = 65; else 
#line 313 
                                      tmp_14 = 66;
      
#line 313 
      printk("\001",tmp_14,writeval);
    }
    else ;
    
#line 316 
    goto ldv_52959;
  }
  ldv_52959: 
#line 319 
  ;
  
#line 319 
  if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 3U) 
#line 320 
                                                               writeval += 4193909242U;
  else 
    
#line 321 
    if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 4U) 
#line 323 
                                                                 writeval += 4092851188U; else ;
  
#line 324 
  *(p_outwriteval + rf) = writeval;
  
#line 195 
  rf += 1U;
  ldv_52968: 
#line 196 
  ;
  
#line 195 
  if (rf <= 1U) 
#line 197 
                goto ldv_52967; else 
#line 200 
                                     goto ldv_52969;
  ldv_52969: 
#line 201 
  ;
  
#line 202 
  return;
}


#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
static void _rtl8821ae_write_ofdm_power_reg(struct ieee80211_hw *hw, u8 index, u32 *pvalue)
{
  u8 i;
  u8 rf;
  u8 pwr_val[4U];
  u32 writeval;
  u16 regoffset;
  
#line 331 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 332 
  u16 regoffset_a[6U] = {(unsigned short)3108U, (unsigned short)3112U, (unsigned short)3116U, (unsigned short)3120U, (unsigned short)3124U, (unsigned short)3128U};
  
#line 337 
  u16 regoffset_b[6U] = {(unsigned short)3620U, (unsigned short)3624U, (unsigned short)3628U, (unsigned short)3632U, (unsigned short)3636U, (unsigned short)3640U};
  
#line 346 
  rf = (unsigned char)0U;
  
#line 346 
  goto ldv_52987;
  ldv_52986: 
#line 347 
  ;
  
#line 347 
  writeval = *(pvalue + (int)rf);
  
#line 348 
  i = (unsigned char)0U;
  
#line 348 
  goto ldv_52984;
  ldv_52983: 
#line 349 
  ;
  
#line 349 
  pwr_val[(int)i] = (unsigned char)(((unsigned int)(127 << (int)i * 8) & writeval) >> (int)i * 8);
  
#line 352 
  if ((unsigned int)pwr_val[(int)i] > 63U) 
#line 353 
                                           pwr_val[(int)i] = (unsigned char)63U; else ;
  
#line 348 
  i = (u8)((int)i + 1);
  ldv_52984: 
#line 349 
  ;
  
#line 348 
  if ((unsigned int)i <= 3U) 
#line 350 
                             goto ldv_52983; else 
#line 353 
                                                  goto ldv_52985;
  ldv_52985: 
#line 354 
  ;
  
#line 355 
  writeval = (unsigned int)(((((int)pwr_val[3] << 24) | ((int)pwr_val[2] << 16)) | ((int)pwr_val[1] << 8)) | (int)pwr_val[0]);
  
#line 358 
  if ((unsigned int)rf == 0U) 
#line 359 
                              regoffset = regoffset_a[(int)index]; else 
                                                                    
#line 361 
                                                                    regoffset = regoffset_b[(int)index];
  
#line 362 
  rtl_set_bbreg(hw,(unsigned int)regoffset,4294967295U,writeval);
  
#line 364 
  if ((long)(((unsigned long)rtlpriv->dbg.dbgp_type[9] & 256UL) != 0UL) != 0L) 
    
#line 364 
    printk("\001",(int)regoffset,writeval); else ;
  
#line 346 
  rf = (u8)((int)rf + 1);
  ldv_52987: 
#line 347 
  ;
  
#line 346 
  if ((unsigned int)rf <= 1U) 
#line 348 
                              goto ldv_52986; else 
#line 351 
                                                   goto ldv_52988;
  ldv_52988: 
#line 352 
  ;
  
#line 353 
  return;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
void rtl8821ae_phy_rf6052_set_ofdm_txpower(struct ieee80211_hw *hw, u8 *ppowerlevel_ofdm, u8 *ppowerlevel_bw20, u8 *ppowerlevel_bw40, u8 channel)
{
  u32 writeval[2U];
  u32 powerbase0[2U];
  u32 powerbase1[2U];
  u8 index;
  u8 direction;
  u32 pwrtrac_value;
  
#line 380 
  rtl8821ae_phy_get_power_base(hw,ppowerlevel_ofdm,ppowerlevel_bw20,ppowerlevel_bw40,(unsigned char)((int)channel),&(powerbase0[0]),&(powerbase1[0]));
  
#line 387 
  rtl8821ae_dm_txpower_track_adjust(hw,(unsigned char)1,& direction,& pwrtrac_value);
  
#line 389 
  index = (unsigned char)0U;
  
#line 389 
  goto ldv_53003;
  ldv_53002: 
#line 390 
  ;
  
#line 390 
  get_txpower_writeval_by_regulatory(hw,(unsigned char)((int)channel),(unsigned char)((int)index),&(powerbase0[0]),&(powerbase1[0]),&(writeval[0]));
  
#line 394 
  if ((unsigned int)direction == 1U) {
    
#line 395 
    writeval[0] += pwrtrac_value;
    
#line 396 
    writeval[1] += pwrtrac_value;
  }
  else 
    
#line 397 
    if ((unsigned int)direction == 2U) {
      
#line 398 
      writeval[0] -= pwrtrac_value;
      
#line 399 
      writeval[1] -= pwrtrac_value;
    }
    else ;
  
#line 401 
  _rtl8821ae_write_ofdm_power_reg(hw,(unsigned char)((int)index),&(writeval[0]));
  
#line 389 
  index = (u8)((int)index + 1);
  ldv_53003: 
#line 390 
  ;
  
#line 389 
  if ((unsigned int)index <= 5U) 
#line 391 
                                 goto ldv_53002; else 
#line 394 
                                                      goto ldv_53004;
  ldv_53004: 
#line 395 
  ;
  
#line 396 
  return;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
bool rtl8821ae_phy_rf6052_config(struct ieee80211_hw *hw)
{
  bool tmp;
  
#line 407 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 408 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 410 
  if ((unsigned int)rtlphy->rf_type == 0U) 
#line 411 
                                           rtlphy->num_total_rfpath = (unsigned char)1U; else 
                                                                    
#line 413 
                                                                    rtlphy->num_total_rfpath = (unsigned char)2U;
  
#line 415 
  tmp = _rtl8821ae_phy_rf6052_config_parafile(hw);
  
#line 415 
  return tmp;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/rf.c"
static bool _rtl8821ae_phy_rf6052_config_parafile(struct ieee80211_hw *hw)
{
  bool __retres;
  u8 rfpath;
  
#line 420 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  
#line 421 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  
#line 422 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  
#line 424 
  bool rtstatus = (_Bool)1;
  
#line 426 
  rfpath = (unsigned char)0U;
  
#line 426 
  goto ldv_53025;
  ldv_53024: 
#line 427 
  ;
  
#line 427 
  switch ((int)rfpath) {
    case 0: 
#line 428 
    ;
    
#line 429 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 430 
                                              rtstatus = rtl8812ae_phy_config_rf_with_headerfile(hw,(enum radio_path)rfpath); else 
                                                                    
#line 434 
                                                                    rtstatus = rtl8821ae_phy_config_rf_with_headerfile(hw,(enum radio_path)rfpath);
    
#line 437 
    goto ldv_53019;
    case 1: 
#line 439 
    ;
    
#line 440 
    if ((unsigned int)rtlhal->hw_type == 14U) 
#line 441 
                                              rtstatus = rtl8812ae_phy_config_rf_with_headerfile(hw,(enum radio_path)rfpath); else 
                                                                    
#line 445 
                                                                    rtstatus = rtl8821ae_phy_config_rf_with_headerfile(hw,(enum radio_path)rfpath);
    
#line 448 
    goto ldv_53019;
    case 2: 
#line 449 
    ;
    
#line 450 
    goto ldv_53019;
    case 3: 
#line 451 
    ;
    
#line 452 
    goto ldv_53019;
  }
  ldv_53019: 
#line 455 
  ;
  
#line 455 
  if (! rtstatus) {
    
#line 456 
    if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
      int tmp;
      int tmp_0;
      
#line 456 
      ;
      
#line 456 
      tmp = preempt_count();
      
#line 456 
      tmp_0 = preempt_count();
      
#line 456 
      printk("\001","_rtl8821ae_phy_rf6052_config_parafile",(unsigned long)tmp_0 & 2096896UL,tmp != 0,(int)rfpath);
    }
    else ;
    
#line 458 
    __retres = (_Bool)0;
    
#line 458 
    goto return_label;
  }
  else ;
  
#line 426 
  rfpath = (u8)((int)rfpath + 1);
  ldv_53025: 
#line 427 
  ;
  
#line 426 
  if ((int)rtlphy->num_total_rfpath > (int)rfpath) 
#line 428 
                                                   goto ldv_53024; else 
                                                                    
#line 431 
                                                                    goto ldv_53026;
  ldv_53026: 
#line 432 
  ;
  
#line 463 
  if ((long)((rtlpriv->dbg.global_debugcomponents & 4ULL) != 0ULL) != 0L && (long)(rtlpriv->dbg.global_debuglevel > 4) != 0L) {
    int tmp_1;
    int tmp_2;
    
#line 463 
    tmp_1 = preempt_count();
    
#line 463 
    tmp_2 = preempt_count();
    
#line 463 
    printk("\001","_rtl8821ae_phy_rf6052_config_parafile",(unsigned long)tmp_2 & 2096896UL,tmp_1 != 0);
  }
  else ;
  
#line 464 
  __retres = rtstatus;
  return_label: 
#line 464 
                return __retres;
}


#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.h"
struct wlan_pwr_cfg rtl8812_power_on_flow[16U];


#line 329 
struct wlan_pwr_cfg rtl8812_radio_off_flow[16U];


#line 340 
struct wlan_pwr_cfg rtl8812_suspend_flow[31U];


#line 344 
struct wlan_pwr_cfg rtl8812_resume_flow[31U];


#line 348 
struct wlan_pwr_cfg rtl8812_hwpdn_flow[41U];


#line 352 
struct wlan_pwr_cfg rtl8812_enter_lps_flow[16U];


#line 355 
struct wlan_pwr_cfg rtl8812_leave_lps_flow[16U];


#line 683 
struct wlan_pwr_cfg rtl8821A_power_on_flow[26U];


#line 686 
struct wlan_pwr_cfg rtl8821A_radio_off_flow[16U];


#line 697 
struct wlan_pwr_cfg rtl8821A_suspend_flow[31U];


#line 701 
struct wlan_pwr_cfg rtl8821A_resume_flow[31U];


#line 705 
struct wlan_pwr_cfg rtl8821A_hwpdn_flow[31U];


#line 712 
struct wlan_pwr_cfg rtl8821A_leave_lps_flow[16U];


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_power_on_flow[16U] = {{.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_radio_off_flow[16U] = {{.offset = (unsigned short)3072U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)3584U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)42U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_card_disable_flow[41U] = {{.offset = (unsigned short)3072U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)3584U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)42U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)3U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)0U}, {.offset = (unsigned short)128U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)5U}, {.offset = (unsigned short)66U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)240U, .value = (unsigned char)204U}, {.offset = (unsigned short)66U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)240U, .value = (unsigned char)236U}, {.offset = (unsigned short)67U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)7U}, {.offset = (unsigned short)69U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)70U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)71U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)20U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)128U}, {.offset = (unsigned short)21U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)18U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)16U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)32U}, {.offset = (unsigned short)31U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)118U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)8U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_card_enable_flow[41U] = {{.offset = (unsigned short)18U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)20U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)21U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)70U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)67U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)0U}, {.offset = (unsigned short)3U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)4U}, {.offset = (unsigned short)769U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_suspend_flow[31U] = {{.offset = (unsigned short)3072U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)3584U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)42U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)66U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)240U, .value = (unsigned char)192U}, {.offset = (unsigned short)66U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)240U, .value = (unsigned char)224U}, {.offset = (unsigned short)67U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)7U}, {.offset = (unsigned short)69U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)70U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)71U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)20U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)128U}, {.offset = (unsigned short)21U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)16U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)8U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_resume_flow[31U] = {{.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)0U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)21U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)20U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)70U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)67U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)8U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_hwpdn_flow[41U] = {{.offset = (unsigned short)3072U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)3584U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)42U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)128U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_enter_lps_flow[16U] = {{.offset = (unsigned short)769U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)1314U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)127U}, {.offset = (unsigned short)1528U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1529U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1530U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1531U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)3072U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)3584U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)4U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)256U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)3U}, {.offset = (unsigned short)257U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)1363U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8812_leave_lps_flow[16U] = {{.offset = (unsigned short)128U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)65112U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)865U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)1U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)265U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)41U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)192U, .value = (unsigned char)0U}, {.offset = (unsigned short)257U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)256U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)3U, .value = (unsigned char)3U}, {.offset = (unsigned short)1314U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_power_on_flow[26U] = {{.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)1U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)28U, .value = (unsigned char)0U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)48U, .value = (unsigned char)48U}, {.offset = (unsigned short)37U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)99U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)98U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)88U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)90U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)122U, .cut_msk = (unsigned char)1U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)58U}, {.offset = (unsigned short)46U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)130U}, {.offset = (unsigned short)16U, .cut_msk = (unsigned char)2U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)64U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_radio_off_flow[16U] = {{.offset = (unsigned short)31U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_card_disable_flow[31U] = {{.offset = (unsigned short)31U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)32U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)8U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)4U, .value = (unsigned char)4U}, {.offset = (unsigned short)74U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)16U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_card_enable_flow[41U] = {{.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)136U, .value = (unsigned char)0U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)74U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)0U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)769U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)1U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)28U, .value = (unsigned char)0U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)48U, .value = (unsigned char)48U}, {.offset = (unsigned short)37U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)99U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)98U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)88U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)90U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)122U, .cut_msk = (unsigned char)1U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)58U}, {.offset = (unsigned short)46U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)130U}, {.offset = (unsigned short)16U, .cut_msk = (unsigned char)2U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)64U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_suspend_flow[31U] = {{.offset = (unsigned short)31U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)24U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)8U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)16U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)32U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)24U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_resume_flow[31U] = {{.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)136U, .value = (unsigned char)0U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)134U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)0U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)1U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)28U, .value = (unsigned char)0U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)117U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)24U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)103U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)48U, .value = (unsigned char)48U}, {.offset = (unsigned short)37U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)99U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)98U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)88U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)1U}, {.offset = (unsigned short)90U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)122U, .cut_msk = (unsigned char)1U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)58U}, {.offset = (unsigned short)46U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)130U}, {.offset = (unsigned short)16U, .cut_msk = (unsigned char)2U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)64U, .value = (unsigned char)64U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_hwpdn_flow[31U] = {{.offset = (unsigned short)31U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)79U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)73U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)0U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)32U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)35U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)16U}, {.offset = (unsigned short)7U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)32U}, {.offset = (unsigned short)6U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)5U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)128U, .value = (unsigned char)128U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_enter_lps_flow[16U] = {{.offset = (unsigned short)769U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)1314U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)1528U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1529U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1530U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1531U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)1U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)0U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)256U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)3U}, {.offset = (unsigned short)257U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)0U}, {.offset = (unsigned short)147U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)1363U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)32U, .value = (unsigned char)32U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/rtlwifi/rtl8821ae/pwrseq.c"
struct wlan_pwr_cfg rtl8821A_leave_lps_flow[16U] = {{.offset = (unsigned short)128U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)65112U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)865U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)132U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))3U, .msk = (unsigned char)0U, .value = (unsigned char)1U}, {.offset = (unsigned short)8U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)16U, .value = (unsigned char)0U}, {.offset = (unsigned short)265U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U, .msk = (unsigned char)128U, .value = (unsigned char)0U}, {.offset = (unsigned short)41U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)192U, .value = (unsigned char)0U}, {.offset = (unsigned short)257U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)2U, .value = (unsigned char)2U}, {.offset = (unsigned short)256U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)255U}, {.offset = (unsigned short)2U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)3U, .value = (unsigned char)3U}, {.offset = (unsigned short)1314U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U, .msk = (unsigned char)255U, .value = (unsigned char)0U}, {.offset = (unsigned short)65535U, .cut_msk = (unsigned char)255U, .fab_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .interface_msk = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U, .base = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U, .cmd = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))4U, .msk = (unsigned char)0U, .value = (unsigned char)0U}};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 36 
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0);


#line 37 
void ldv_dispatch_register_2_3(struct pci_driver *arg0);


#line 38 
void *ldv_pci_scenario_6(void *arg0);


#line 39 
void *ldv_pm_ops_scenario_7(void *arg0);


#line 42 
void *ldv_timer_scenario_5(void *arg0);


#line 43 
void *ldv_initialization_1(void *arg0);


#line 44 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_6;

#line 48  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_7;

#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_5;

#line 53  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 60 
  tmp_0 = ldv_undef_int();
  
#line 60 
  if (tmp_0 != 0) {
    
#line 62 
    ldv_4_timer_list = arg0;
    
#line 66 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 70 
    __retres = 0;
    
#line 70 
    goto return_label;
  }
  else {
    int tmp;
    
#line 77 
    tmp = ldv_undef_int_negative();
    
#line 77 
    __retres = tmp;
    
#line 77 
    goto return_label;
  }
  return_label: 
#line 60 
                return __retres;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 90 
  ldv_initialize();
  
#line 93 
  ldv_initialization_1((void *)0);
  
#line 95 
  __retres = 0;
  
#line 95 
  return __retres;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_6 *cf_arg_6;
  int tmp;
  
#line 103 
  tmp = ldv_undef_int();
  
#line 103 
  switch (tmp) {
    case 0: 
#line 104 
    ;
    
#line 105 
    ret = pthread_join(ldv_thread_6,(void **)0);
    
#line 106 
    __VERIFIER_assume(ret == 0);
    
#line 107 
    goto ldv_26353;
    default: 
#line 109 
    ;
    
#line 109 
    __VERIFIER_assume(0);
  }
  ldv_26353: 
#line 110 
  ;
  
#line 111 
  return;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_2_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_6 *cf_arg_6;
  int tmp;
  
#line 118 
  tmp = ldv_undef_int();
  
#line 118 
  switch (tmp) {
    case 0: 
#line 119 
    ;
    
#line 120 
    cf_arg_6 = (struct ldv_struct_pci_scenario_6 *)ldv_xmalloc(16UL);
    
#line 121 
    cf_arg_6->arg0 = arg0;
    
#line 122 
    ret = pthread_create(& ldv_thread_6,(pthread_attr_t const *)0,& ldv_pci_scenario_6,(void *)cf_arg_6);
    
#line 123 
    __VERIFIER_assume(ret == 0);
    
#line 124 
    goto ldv_26361;
    default: 
#line 126 
    ;
    
#line 126 
    __VERIFIER_assume(0);
  }
  ldv_26361: 
#line 127 
  ;
  
#line 128 
  return;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_6(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_6_resource_1;
  struct pci_device_id *ldv_6_ldv_param_1_2;
  struct pm_message ldv_6_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 137 
  struct pci_driver *ldv_6_container = ldv_emg_alias_rtl8821ae_driver_2;
  
#line 138 
  int ldv_6_ret = ldv_undef_int();
  
#line 141 
  struct ldv_struct_pci_scenario_6 *data = (struct ldv_struct_pci_scenario_6 *)arg0;
  
#line 145 
  ldv_6_ret = ldv_undef_int();
  
#line 148 
  if (data != (struct ldv_struct_pci_scenario_6 *)0) {
    
#line 149 
    ldv_6_container = data->arg0;
    
#line 150 
    ldv_free((void *)data);
  }
  else ;
  
#line 161 
  goto ldv_main_6;
  
#line 163 
  __retres = (void *)0;
  
#line 163 
  goto return_label;
  ldv_main_6: 
#line 166 
  ;
  
#line 169 
  tmp_2 = ldv_undef_int();
  
#line 169 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 171 
    ldv_6_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 176 
    ldv_pre_probe();
    
#line 178 
    ldv_6_ret = (*ldv_emg_alias_rtl_pci_probe_2)(ldv_6_resource_1,ldv_6_ldv_param_1_2);
    
#line 180 
    ldv_6_ret = ldv_post_probe(ldv_6_ret);
    
#line 184 
    ldv_free((void *)ldv_6_ldv_param_1_2);
    
#line 187 
    tmp_1 = ldv_undef_int();
    
#line 187 
    if (tmp_1 != 0) {
      
#line 189 
      __VERIFIER_assume(ldv_6_ret == 0);
      
#line 196 
      goto ldv_call_6;
    }
    else {
      
#line 200 
      __VERIFIER_assume(ldv_6_ret != 0);
      
#line 207 
      goto ldv_main_6;
    }
  }
  else {
    
#line 219 
    __retres = (void *)0;
    
#line 219 
    goto return_label;
  }
  
#line 222 
  __retres = (void *)0;
  
#line 222 
  goto return_label;
  ldv_call_6: 
#line 225 
  ;
  
#line 228 
  tmp_3 = ldv_undef_int();
  
#line 228 
  switch (tmp_3) {
    case 1: 
#line 229 
    ;
    
#line 238 
    goto ldv_call_6;
    case 2: 
#line 241 
    ;
    
#line 243 
    if (ldv_6_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 245 
      ldv_6_ret = (*(ldv_6_container->suspend))(ldv_6_resource_1,ldv_6_resource_0);
      
#line 247 
      ldv_6_ret = ldv_filter_err_code(ldv_6_ret);
    }
    else 
#line 249 
         ldv_6_ret = ldv_undef_int();
    
#line 254 
    if (ldv_6_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 256 
      ldv_6_ret = (*(ldv_6_container->suspend_late))(ldv_6_resource_1,ldv_6_resource_0);
      
#line 258 
      ldv_6_ret = ldv_filter_err_code(ldv_6_ret);
    }
    else 
#line 260 
         ldv_6_ret = ldv_undef_int();
    
#line 265 
    if (ldv_6_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 267 
      (*(ldv_6_container->resume_early))(ldv_6_resource_1); else ;
    
#line 272 
    if (ldv_6_container->resume != (int (*)(struct pci_dev *))0) 
#line 274 
                                                                 (*(ldv_6_container->resume))(ldv_6_resource_1); else ;
    
#line 282 
    goto ldv_call_6;
    case 3: 
#line 285 
    ;
    
#line 287 
    if (ldv_6_container->shutdown != (void (*)(struct pci_dev *))0) 
#line 289 
                                                                    (*(ldv_6_container->shutdown))(ldv_6_resource_1); else ;
    
#line 295 
    (*ldv_emg_alias_rtl_pci_disconnect_3)(ldv_6_resource_1);
    
#line 302 
    goto ldv_main_6;
    default: 
#line 305 
    ;
    
#line 305 
    __VERIFIER_assume(0);
  }
  
#line 308 
  __retres = (void *)0;
  return_label: 
#line 308 
                return __retres;
}


#line 313  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_7(void *arg0)
{
  void *__retres;
  struct device *ldv_7_device;
  int tmp;
  
#line 316 
  struct dev_pm_ops *ldv_7_pm_ops = ldv_emg_alias_rtlwifi_pm_ops_3;
  
#line 327 
  goto ldv_do_7;
  
#line 329 
  __retres = (void *)0;
  
#line 329 
  goto return_label;
  ldv_do_7: 
#line 332 
  ;
  
#line 335 
  tmp = ldv_undef_int();
  
#line 335 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 336 
    ;
    
#line 338 
    if (ldv_7_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 340 
                                                                   (*(ldv_7_pm_ops->runtime_idle))(ldv_7_device); else ;
    
#line 348 
    goto ldv_do_7;
    case 2: 
#line 351 
    ;
    
#line 353 
    if (ldv_7_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 355 
      (*(ldv_7_pm_ops->runtime_suspend))(ldv_7_device); else ;
    
#line 360 
    if (ldv_7_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 362 
      (*(ldv_7_pm_ops->runtime_resume))(ldv_7_device); else ;
    
#line 370 
    goto ldv_do_7;
    case 3: 
#line 373 
    ;
    
#line 375 
    if (ldv_7_pm_ops->prepare != (int (*)(struct device *))0) 
#line 377 
                                                              (*(ldv_7_pm_ops->prepare))(ldv_7_device); else ;
    
#line 381 
    tmp_0 = ldv_undef_int();
    
#line 381 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 382 
      ;
      
#line 385 
      (*ldv_emg_alias_rtl_pci_suspend_2)(ldv_7_device);
      
#line 388 
      tmp_1 = ldv_undef_int();
      
#line 388 
      if (tmp_1 != 0) {
        
#line 390 
        if (ldv_7_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 392 
          (*(ldv_7_pm_ops->suspend_noirq))(ldv_7_device); else ;
        
#line 397 
        if (ldv_7_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 399 
          (*(ldv_7_pm_ops->resume_noirq))(ldv_7_device); else ;
      }
      else {
        
#line 406 
        if (ldv_7_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 408 
          (*(ldv_7_pm_ops->suspend_late))(ldv_7_device); else ;
        
#line 413 
        if (ldv_7_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 415 
          (*(ldv_7_pm_ops->resume_early))(ldv_7_device); else ;
      }
      
#line 422 
      (*ldv_emg_alias_rtl_pci_resume_4)(ldv_7_device);
      
#line 425 
      goto ldv_26388;
      case 2: 
#line 427 
      ;
      
#line 430 
      (*ldv_emg_alias_rtl_pci_suspend_2)(ldv_7_device);
      
#line 433 
      tmp_2 = ldv_undef_int();
      
#line 433 
      if (tmp_2 != 0) {
        
#line 435 
        if (ldv_7_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 437 
          (*(ldv_7_pm_ops->freeze_late))(ldv_7_device); else ;
        
#line 442 
        if (ldv_7_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 444 
          (*(ldv_7_pm_ops->thaw_early))(ldv_7_device); else ;
      }
      else {
        
#line 451 
        if (ldv_7_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 453 
          (*(ldv_7_pm_ops->freeze_noirq))(ldv_7_device); else ;
        
#line 458 
        if (ldv_7_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 460 
          (*(ldv_7_pm_ops->thaw_noirq))(ldv_7_device); else ;
      }
      
#line 467 
      (*ldv_emg_alias_rtl_pci_resume_4)(ldv_7_device);
      
#line 470 
      goto ldv_26388;
      case 3: 
#line 472 
      ;
      
#line 475 
      (*ldv_emg_alias_rtl_pci_suspend_2)(ldv_7_device);
      
#line 478 
      tmp_3 = ldv_undef_int();
      
#line 478 
      if (tmp_3 != 0) {
        
#line 480 
        if (ldv_7_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 482 
          (*(ldv_7_pm_ops->poweroff_late))(ldv_7_device); else ;
        
#line 487 
        if (ldv_7_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 489 
          (*(ldv_7_pm_ops->restore_early))(ldv_7_device); else ;
      }
      else {
        
#line 496 
        if (ldv_7_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 498 
          (*(ldv_7_pm_ops->poweroff_noirq))(ldv_7_device); else ;
        
#line 503 
        if (ldv_7_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 505 
          (*(ldv_7_pm_ops->restore_noirq))(ldv_7_device); else ;
      }
      
#line 512 
      (*ldv_emg_alias_rtl_pci_resume_4)(ldv_7_device);
      
#line 515 
      goto ldv_26388;
      default: 
#line 517 
      ;
      
#line 517 
      __VERIFIER_assume(0);
    }
    ldv_26388: 
#line 520 
    ;
    
#line 520 
    if (ldv_7_pm_ops->complete != (void (*)(struct device *))0) 
#line 522 
                                                                (*(ldv_7_pm_ops->complete))(ldv_7_device); else ;
    
#line 530 
    goto ldv_do_7;
    case 4: 
#line 533 
    ;
    
#line 539 
    __retres = (void *)0;
    
#line 539 
    goto return_label;
    default: 
#line 542 
    ;
    
#line 542 
    __VERIFIER_assume(0);
  }
  
#line 545 
  __retres = (void *)0;
  return_label: 
#line 545 
                return __retres;
}


#line 550  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 553 
  struct pci_driver *ldv_2_pci_driver = ldv_emg_alias_rtl8821ae_driver_2;
  
#line 557 
  tmp_0 = ldv_undef_int();
  
#line 557 
  if (tmp_0 != 0) {
    
#line 559 
    ldv_2_pci_driver = arg0;
    
#line 563 
    ldv_dispatch_register_2_3(ldv_2_pci_driver);
    
#line 567 
    __retres = 0;
    
#line 567 
    goto return_label;
  }
  else {
    int tmp;
    
#line 574 
    tmp = ldv_undef_int_negative();
    
#line 574 
    __retres = tmp;
    
#line 574 
    goto return_label;
  }
  return_label: 
#line 557 
                return __retres;
}


#line 584  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 587 
  struct pci_driver *ldv_3_pci_driver = ldv_emg_alias_rtl8821ae_driver_2;
  
#line 590 
  ldv_3_pci_driver = arg0;
  
#line 594 
  ldv_dispatch_deregister_3_1(ldv_3_pci_driver);
  
#line 598 
  goto return_label;
  return_label: 
#line 600 
                return;
}


#line 605  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_5(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_5_container;
  
#line 610 
  struct ldv_struct_timer_scenario_5 *data = (struct ldv_struct_timer_scenario_5 *)arg0;
  
#line 615 
  if (data != (struct ldv_struct_timer_scenario_5 *)0) {
    
#line 616 
    ldv_5_container = data->arg0;
    
#line 617 
    ldv_free((void *)data);
  }
  else ;
  
#line 622 
  if (ldv_5_container->function != (void (*)(unsigned long ))0) {
    
#line 624 
    ldv_switch_to_interrupt_context();
    
#line 626 
    (*(ldv_5_container->function))(ldv_5_container->data);
    
#line 628 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 637 
  __retres = (void *)0;
  
#line 637 
  goto return_label;
  
#line 639 
  __retres = (void *)0;
  return_label: 
#line 639 
                return __retres;
}


#line 644  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 651 
  ldv_1_ret = ldv_emg_rtl8821ae_driver_init();
  
#line 652 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 655 
  tmp = ldv_undef_int();
  
#line 655 
  if (tmp != 0) {
    
#line 657 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 661 
    __retres = (void *)0;
    
#line 661 
    goto return_label;
  }
  else {
    
#line 665 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 670 
    ldv_emg_rtl8821ae_driver_exit();
    
#line 674 
    __retres = (void *)0;
    
#line 674 
    goto return_label;
  }
  
#line 677 
  __retres = (void *)0;
  return_label: 
#line 677 
                return __retres;
}


#line 682  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/rtlwifi/rtl8821ae/rtl8821ae.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_5 *cf_arg_5;
  int tmp;
  
#line 685 
  tmp = ldv_undef_int();
  
#line 685 
  switch (tmp) {
    case 0: 
#line 686 
    ;
    
#line 687 
    cf_arg_5 = (struct ldv_struct_timer_scenario_5 *)ldv_xmalloc(16UL);
    
#line 688 
    cf_arg_5->arg0 = arg0;
    
#line 689 
    ret = pthread_create(& ldv_thread_5,(pthread_attr_t const *)0,& ldv_timer_scenario_5,(void *)cf_arg_5);
    
#line 690 
    __VERIFIER_assume(ret == 0);
    
#line 691 
    goto ldv_26419;
    default: 
#line 693 
    ;
    
#line 693 
    __VERIFIER_assume(0);
  }
  ldv_26419: 
#line 694 
  ;
  
#line 695 
  return;
}


