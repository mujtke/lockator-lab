/* Generated by Frama-C */

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_rx_331 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) payload_csum_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dribbling : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mii_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) receive_watchdog : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frame_type : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) collision : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipc_csum_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_descriptor : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_descriptor : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_tag : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) overflow_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) length_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sa_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) descriptor_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error_summary : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) frame_length : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) da_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buffer1_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buffer2_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) reserved1 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) second_address_chained : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) reserved2 : 5 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disable_ic : 1 ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_erx_332 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_mac_addr : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dribbling : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error_gmii : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) receive_watchdog : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frame_type : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) late_collision : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipc_csum_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_descriptor : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_descriptor : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_tag : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) overflow_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) length_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sa_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) descriptor_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error_summary : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) frame_length : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) da_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) buffer1_size : 13 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved1 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) second_address_chained : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) buffer2_size : 13 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) reserved2 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disable_ic : 1 ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_tx_333 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) underflow_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) excessive_deferral : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) collision_count : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_frame : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) excessive_collisions : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) late_collision : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_carrier : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) loss_carrier : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) payload_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frame_flushed : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) jabber_timeout : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error_summary : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_header_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) time_stamp_status : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) reserved1 : 13 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buffer1_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buffer2_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) time_stamp_enable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disable_padding : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) second_address_chained : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc_disable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) checksum_insertion : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_segment : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_segment : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) interrupt : 1 ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_etx_334 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) underflow_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) excessive_deferral : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) collision_count : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_frame : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) excessive_collisions : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) late_collision : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_carrier : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) loss_carrier : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) payload_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frame_flushed : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) jabber_timeout : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error_summary : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_header_error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) time_stamp_status : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) reserved1 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) second_address_chained : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) checksum_insertion : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved2 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) time_stamp_enable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disable_padding : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc_disable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_segment : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_segment : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) interrupt : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) buffer1_size : 13 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) reserved3 : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) buffer2_size : 13 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) reserved4 : 3 ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
union __anonunion_des01_330 {
   struct __anonstruct_rx_331 rx ;
   struct __anonstruct_erx_332 erx ;
   struct __anonstruct_tx_333 tx ;
   struct __anonstruct_etx_334 etx ;
   u64 all_flags ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct dma_desc {
   union __anonunion_des01_330 des01 ;
   unsigned int des2 ;
   unsigned int des3 ;
};

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs.h"
struct __anonstruct_erx_336 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) ip_payload_type : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_hdr_err : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_payload_err : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_csum_bypassed : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipv4_pkt_rcvd : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipv6_pkt_rcvd : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) msg_type : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ptp_frame_type : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ptp_ver : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timestamp_dropped : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) av_pkt_rcvd : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) av_tagged_pkt_rcvd : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) vlan_tag_priority_val : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) reserved3 : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l3_filter_match : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_filter_match : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) l3_l4_filter_no_match : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) reserved4 : 4 ;
};

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs.h"
struct __anonstruct_etx_337 {
   u32 reserved ;
};

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs.h"
union __anonunion_des4_335 {
   struct __anonstruct_erx_336 erx ;
   struct __anonstruct_etx_337 etx ;
};

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs.h"
struct dma_extended_desc {
   struct dma_desc basic ;
   union __anonunion_des4_335 des4 ;
   unsigned int des5 ;
   unsigned int des6 ;
   unsigned int des7 ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc.h"
struct stmmac_extra_stats {
   unsigned long tx_underflow ;
   unsigned long tx_carrier ;
   unsigned long tx_losscarrier ;
   unsigned long vlan_tag ;
   unsigned long tx_deferred ;
   unsigned long tx_vlan ;
   unsigned long tx_jabber ;
   unsigned long tx_frame_flushed ;
   unsigned long tx_payload_error ;
   unsigned long tx_ip_header_error ;
   unsigned long rx_desc ;
   unsigned long sa_filter_fail ;
   unsigned long overflow_error ;
   unsigned long ipc_csum_error ;
   unsigned long rx_collision ;
   unsigned long rx_crc ;
   unsigned long dribbling_bit ;
   unsigned long rx_length ;
   unsigned long rx_mii ;
   unsigned long rx_multicast ;
   unsigned long rx_gmac_overflow ;
   unsigned long rx_watchdog ;
   unsigned long da_rx_filter_fail ;
   unsigned long sa_rx_filter_fail ;
   unsigned long rx_missed_cntr ;
   unsigned long rx_overflow_cntr ;
   unsigned long rx_vlan ;
   unsigned long tx_undeflow_irq ;
   unsigned long tx_process_stopped_irq ;
   unsigned long tx_jabber_irq ;
   unsigned long rx_overflow_irq ;
   unsigned long rx_buf_unav_irq ;
   unsigned long rx_process_stopped_irq ;
   unsigned long rx_watchdog_irq ;
   unsigned long tx_early_irq ;
   unsigned long fatal_bus_error_irq ;
   unsigned long rx_early_irq ;
   unsigned long threshold ;
   unsigned long tx_pkt_n ;
   unsigned long rx_pkt_n ;
   unsigned long normal_irq_n ;
   unsigned long rx_normal_irq_n ;
   unsigned long napi_poll ;
   unsigned long tx_normal_irq_n ;
   unsigned long tx_clean ;
   unsigned long tx_reset_ic_bit ;
   unsigned long irq_receive_pmt_irq_n ;
   unsigned long mmc_tx_irq_n ;
   unsigned long mmc_rx_irq_n ;
   unsigned long mmc_rx_csum_offload_irq_n ;
   unsigned long irq_tx_path_in_lpi_mode_n ;
   unsigned long irq_tx_path_exit_lpi_mode_n ;
   unsigned long irq_rx_path_in_lpi_mode_n ;
   unsigned long irq_rx_path_exit_lpi_mode_n ;
   unsigned long phy_eee_wakeup_error_n ;
   unsigned long ip_hdr_err ;
   unsigned long ip_payload_err ;
   unsigned long ip_csum_bypassed ;
   unsigned long ipv4_pkt_rcvd ;
   unsigned long ipv6_pkt_rcvd ;
   unsigned long rx_msg_type_ext_no_ptp ;
   unsigned long rx_msg_type_sync ;
   unsigned long rx_msg_type_follow_up ;
   unsigned long rx_msg_type_delay_req ;
   unsigned long rx_msg_type_delay_resp ;
   unsigned long rx_msg_type_pdelay_req ;
   unsigned long rx_msg_type_pdelay_resp ;
   unsigned long rx_msg_type_pdelay_follow_up ;
   unsigned long ptp_frame_type ;
   unsigned long ptp_ver ;
   unsigned long timestamp_dropped ;
   unsigned long av_pkt_rcvd ;
   unsigned long av_tagged_pkt_rcvd ;
   unsigned long vlan_tag_priority_val ;
   unsigned long l3_filter_match ;
   unsigned long l4_filter_match ;
   unsigned long l3_l4_filter_no_match ;
   unsigned long irq_pcs_ane_n ;
   unsigned long irq_pcs_link_n ;
   unsigned long irq_rgmii_n ;
   unsigned long pcs_link ;
   unsigned long pcs_duplex ;
   unsigned long pcs_speed ;
};

#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_desc_ops {
   void (*init_rx_desc)(struct dma_desc *, int , int , int ) ;
   void (*init_tx_desc)(struct dma_desc *, int , int ) ;
   void (*prepare_tx_desc)(struct dma_desc *, int , int , int , int ) ;
   void (*set_tx_owner)(struct dma_desc *) ;
   int (*get_tx_owner)(struct dma_desc *) ;
   void (*close_tx_desc)(struct dma_desc *) ;
   void (*release_tx_desc)(struct dma_desc *, int ) ;
   void (*clear_tx_ic)(struct dma_desc *) ;
   int (*get_tx_ls)(struct dma_desc *) ;
   int (*tx_status)(void *, struct stmmac_extra_stats *, struct dma_desc *, void *) ;
   int (*get_tx_len)(struct dma_desc *) ;
   int (*get_rx_owner)(struct dma_desc *) ;
   void (*set_rx_owner)(struct dma_desc *) ;
   int (*get_rx_frame_len)(struct dma_desc *, int ) ;
   int (*rx_status)(void *, struct stmmac_extra_stats *, struct dma_desc *) ;
   void (*rx_extended_status)(void *, struct stmmac_extra_stats *, struct dma_extended_desc *) ;
   void (*enable_tx_timestamp)(struct dma_desc *) ;
   int (*get_tx_timestamp_status)(struct dma_desc *) ;
   u64 (*get_timestamp)(void *, u32 ) ;
   int (*get_rx_timestamp_status)(void *, u32 ) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_343 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_343 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_344 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_344 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_ring_mode.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_346 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_347 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_345 {
   struct __anonstruct_346 __anonCompField___anonunion_345_4 ;
   struct __anonstruct_347 __anonCompField___anonunion_345_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_345 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_348 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_348 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_349 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_349 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_353 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_354 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_355 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_352 {
   struct __anonstruct_futex_353 futex ;
   struct __anonstruct_nanosleep_354 nanosleep ;
   struct __anonstruct_poll_355 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_352 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_356 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_356 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_366 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_367 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_365 {
   struct __anonstruct_366 __anonCompField___anonunion_365_12 ;
   struct __anonstruct_367 __anonCompField___anonunion_365_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_368 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_365 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_368 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_372 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_371 {
   struct raw_spinlock rlock ;
   struct __anonstruct_372 __anonCompField___anonunion_371_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_371 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_373 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_373 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_382 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_382 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_384 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_383 {
   struct __anonstruct_384 __anonCompField___anonunion_383_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_383 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 213 
struct clk;

#line 487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
struct device_node;

#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
union __anonunion_385 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_385 __anonCompField_idr_layer_21 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct vm_area_struct;

#line 188 
struct super_block;

#line 189 
struct file_system_type;

#line 190 
struct kernfs_open_node;

#line 191 
struct kernfs_iattrs;

#line 214 
struct kernfs_root;

#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_390 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_390 __anonCompField_kernfs_node_22 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_391 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_391 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_392 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_392 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_393 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_393 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_458 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_458 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 15 
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct fwnode_handle;

#line 21 
struct iommu_ops;

#line 22 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 652 
struct mfd_cell;

#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct stmmac_mdio_bus_data {
   int (*phy_reset)(void *) ;
   unsigned int phy_mask ;
   int *irqs ;
   int probed_phy_irq ;
   int reset_gpio ;
   int active_low ;
   u32 delays[3U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stmmac.h"
struct stmmac_dma_cfg {
   int pbl ;
   int fixed_burst ;
   int mixed_burst ;
   int burst_len ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stmmac.h"
struct plat_stmmacenet_data {
   char *phy_bus_name ;
   int bus_id ;
   int phy_addr ;
   int interface ;
   struct stmmac_mdio_bus_data *mdio_bus_data ;
   struct device_node *phy_node ;
   struct stmmac_dma_cfg *dma_cfg ;
   int clk_csr ;
   int has_gmac ;
   int enh_desc ;
   int tx_coe ;
   int rx_coe ;
   int bugged_jumbo ;
   int pmt ;
   int force_sf_dma_mode ;
   int force_thresh_dma_mode ;
   int riwt_off ;
   int max_speed ;
   int maxmtu ;
   int multicast_filter_bins ;
   int unicast_filter_entries ;
   int tx_fifo_size ;
   int rx_fifo_size ;
   void (*fix_mac_speed)(void *, unsigned int ) ;
   void (*bus_setup)(void *) ;
   void *(*setup)(struct platform_device *) ;
   void (*free)(struct platform_device *, void *) ;
   int (*init)(struct platform_device *, void *) ;
   void (*exit)(struct platform_device *, void *) ;
   void *custom_cfg ;
   void *custom_data ;
   void *bsp_priv ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_488 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_488 __anonCompField_iov_iter_33 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_489 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_489 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_490 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_490 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_491 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_491 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_492 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_492 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_493 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_493 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_494 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_494 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_495 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_495 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_496 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_496 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_497 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_498 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_497 ifr_ifrn ;
   union __anonunion_ifr_ifru_498 ifr_ifru ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_node;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_507 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_506 {
   struct __anonstruct_507 __anonCompField___anonunion_506_34 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_506 __anonCompField_lockref_35 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_509 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_508 {
   struct __anonstruct_509 __anonCompField___anonunion_508_36 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_508 __anonCompField_qstr_37 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_510 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_510 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct mem_cgroup;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_514 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_513 {
   struct __anonstruct_514 __anonCompField___anonunion_513_38 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_513 __anonCompField_radix_tree_node_39 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435 
struct pid_namespace;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct bdi_writeback;

#line 62 
struct export_operations;

#line 64 
struct pipe_inode_info;

#line 66 
struct kstatfs;

#line 67 
struct swap_info_struct;

#line 68 
struct vm_fault;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_519 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_519 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_520 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_520 __anonCompField_kqid_41 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526 
struct address_space;

#line 527 
struct writeback_control;

#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_523 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_524 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_525 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_523 __anonCompField_inode_42 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_524 __anonCompField_inode_43 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_525 __anonCompField_inode_44 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_526 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_526 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_528 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_527 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_528 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_527 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 2251 
struct kmem_cache;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_534 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_535 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_533 {
   struct __anonstruct_534 __anonCompField___anonunion_533_47 ;
   struct __anonstruct_535 __anonCompField___anonunion_533_48 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_533 __anonCompField_uprobe_task_49 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_536 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_538 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_542 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_541 {
   atomic_t _mapcount ;
   struct __anonstruct_542 __anonCompField___anonunion_541_52 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_540 {
   union __anonunion_541 __anonCompField___anonstruct_540_53 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_539 {
   unsigned long counters ;
   struct __anonstruct_540 __anonCompField___anonunion_539_54 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_537 {
   union __anonunion_538 __anonCompField___anonstruct_537_51 ;
   union __anonunion_539 __anonCompField___anonstruct_537_55 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_544 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_545 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_543 {
   struct list_head lru ;
   struct __anonstruct_544 __anonCompField___anonunion_543_57 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_545 __anonCompField___anonunion_543_58 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_546 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_536 __anonCompField_page_50 ;
   struct __anonstruct_537 __anonCompField_page_56 ;
   union __anonunion_543 __anonCompField_page_59 ;
   union __anonunion_546 __anonCompField_page_60 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_547 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_547 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_549 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_549 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_551 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_552 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_553 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_554 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_556 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_555 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_556 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_557 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_558 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_550 {
   int _pad[28U] ;
   struct __anonstruct__kill_551 _kill ;
   struct __anonstruct__timer_552 _timer ;
   struct __anonstruct__rt_553 _rt ;
   struct __anonstruct__sigchld_554 _sigchld ;
   struct __anonstruct__sigfault_555 _sigfault ;
   struct __anonstruct__sigpoll_557 _sigpoll ;
   struct __anonstruct__sigsys_558 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_550 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_561 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_562 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_564 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_563 {
   struct keyring_index_key index_key ;
   struct __anonstruct_564 __anonCompField___anonunion_563_63 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_565 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_567 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_566 {
   union __anonunion_payload_567 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_561 __anonCompField_key_61 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_562 __anonCompField_key_62 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_563 __anonCompField_key_64 ;
   union __anonunion_type_data_565 type_data ;
   union __anonunion_566 __anonCompField_key_65 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_596 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_596 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24997 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_601 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_602 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24997 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_601 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_602 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_605 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_604 {
   u64 v64 ;
   struct __anonstruct_605 __anonCompField___anonunion_604_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_604 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_608 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_607 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_608 __anonCompField___anonstruct_607_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_606 {
   struct __anonstruct_607 __anonCompField___anonunion_606_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_610 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_609 {
   __wsum csum ;
   struct __anonstruct_610 __anonCompField___anonunion_609_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_611 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_612 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_613 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_606 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_609 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_611 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_612 __anonCompField_sk_buff_82 ;
   union __anonunion_613 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_26054 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_26054 phy_interface_t;

#line 126 
enum ldv_26107 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_26107 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct proc_dir_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_632 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_632 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30559 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30560 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_642 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_643 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_644 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_642 adj_list ;
   struct __anonstruct_all_adj_list_643 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30559 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30560 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_644 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_657 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_657 __anonCompField_kernel_param_95 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs.h"
struct stmmac_counters {
   unsigned int mmc_tx_octetcount_gb ;
   unsigned int mmc_tx_framecount_gb ;
   unsigned int mmc_tx_broadcastframe_g ;
   unsigned int mmc_tx_multicastframe_g ;
   unsigned int mmc_tx_64_octets_gb ;
   unsigned int mmc_tx_65_to_127_octets_gb ;
   unsigned int mmc_tx_128_to_255_octets_gb ;
   unsigned int mmc_tx_256_to_511_octets_gb ;
   unsigned int mmc_tx_512_to_1023_octets_gb ;
   unsigned int mmc_tx_1024_to_max_octets_gb ;
   unsigned int mmc_tx_unicast_gb ;
   unsigned int mmc_tx_multicast_gb ;
   unsigned int mmc_tx_broadcast_gb ;
   unsigned int mmc_tx_underflow_error ;
   unsigned int mmc_tx_singlecol_g ;
   unsigned int mmc_tx_multicol_g ;
   unsigned int mmc_tx_deferred ;
   unsigned int mmc_tx_latecol ;
   unsigned int mmc_tx_exesscol ;
   unsigned int mmc_tx_carrier_error ;
   unsigned int mmc_tx_octetcount_g ;
   unsigned int mmc_tx_framecount_g ;
   unsigned int mmc_tx_excessdef ;
   unsigned int mmc_tx_pause_frame ;
   unsigned int mmc_tx_vlan_frame_g ;
   unsigned int mmc_rx_framecount_gb ;
   unsigned int mmc_rx_octetcount_gb ;
   unsigned int mmc_rx_octetcount_g ;
   unsigned int mmc_rx_broadcastframe_g ;
   unsigned int mmc_rx_multicastframe_g ;
   unsigned int mmc_rx_crc_error ;
   unsigned int mmc_rx_align_error ;
   unsigned int mmc_rx_run_error ;
   unsigned int mmc_rx_jabber_error ;
   unsigned int mmc_rx_undersize_g ;
   unsigned int mmc_rx_oversize_g ;
   unsigned int mmc_rx_64_octets_gb ;
   unsigned int mmc_rx_65_to_127_octets_gb ;
   unsigned int mmc_rx_128_to_255_octets_gb ;
   unsigned int mmc_rx_256_to_511_octets_gb ;
   unsigned int mmc_rx_512_to_1023_octets_gb ;
   unsigned int mmc_rx_1024_to_max_octets_gb ;
   unsigned int mmc_rx_unicast_g ;
   unsigned int mmc_rx_length_error ;
   unsigned int mmc_rx_autofrangetype ;
   unsigned int mmc_rx_pause_frames ;
   unsigned int mmc_rx_fifo_overflow ;
   unsigned int mmc_rx_vlan_frames_gb ;
   unsigned int mmc_rx_watchdog_error ;
   unsigned int mmc_rx_ipc_intr_mask ;
   unsigned int mmc_rx_ipc_intr ;
   unsigned int mmc_rx_ipv4_gd ;
   unsigned int mmc_rx_ipv4_hderr ;
   unsigned int mmc_rx_ipv4_nopay ;
   unsigned int mmc_rx_ipv4_frag ;
   unsigned int mmc_rx_ipv4_udsbl ;
   unsigned int mmc_rx_ipv4_gd_octets ;
   unsigned int mmc_rx_ipv4_hderr_octets ;
   unsigned int mmc_rx_ipv4_nopay_octets ;
   unsigned int mmc_rx_ipv4_frag_octets ;
   unsigned int mmc_rx_ipv4_udsbl_octets ;
   unsigned int mmc_rx_ipv6_gd_octets ;
   unsigned int mmc_rx_ipv6_hderr_octets ;
   unsigned int mmc_rx_ipv6_nopay_octets ;
   unsigned int mmc_rx_ipv6_gd ;
   unsigned int mmc_rx_ipv6_hderr ;
   unsigned int mmc_rx_ipv6_nopay ;
   unsigned int mmc_rx_udp_gd ;
   unsigned int mmc_rx_udp_err ;
   unsigned int mmc_rx_tcp_gd ;
   unsigned int mmc_rx_tcp_err ;
   unsigned int mmc_rx_icmp_gd ;
   unsigned int mmc_rx_icmp_err ;
   unsigned int mmc_rx_udp_gd_octets ;
   unsigned int mmc_rx_udp_err_octets ;
   unsigned int mmc_rx_tcp_gd_octets ;
   unsigned int mmc_rx_tcp_err_octets ;
   unsigned int mmc_rx_icmp_gd_octets ;
   unsigned int mmc_rx_icmp_err_octets ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct rgmii_adv {
   unsigned int pause ;
   unsigned int duplex ;
   unsigned int lp_pause ;
   unsigned int lp_duplex ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct dma_features {
   unsigned int mbps_10_100 ;
   unsigned int mbps_1000 ;
   unsigned int half_duplex ;
   unsigned int hash_filter ;
   unsigned int multi_addr ;
   unsigned int pcs ;
   unsigned int sma_mdio ;
   unsigned int pmt_remote_wake_up ;
   unsigned int pmt_magic_frame ;
   unsigned int rmon ;
   unsigned int time_stamp ;
   unsigned int atime_stamp ;
   unsigned int eee ;
   unsigned int av ;
   unsigned int tx_coe ;
   unsigned int rx_coe_type1 ;
   unsigned int rx_coe_type2 ;
   unsigned int rxfifo_over_2048 ;
   unsigned int number_rx_channel ;
   unsigned int number_tx_channel ;
   unsigned int enh_desc ;
};

#line 350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_dma_ops {
   int (*init)(void *, int , int , int , int , u32 , u32 , int ) ;
   void (*dump_regs)(void *) ;
   void (*dma_mode)(void *, int , int , int ) ;
   void (*dma_diagnostic_fr)(void *, struct stmmac_extra_stats *, void *) ;
   void (*enable_dma_transmission)(void *) ;
   void (*enable_dma_irq)(void *) ;
   void (*disable_dma_irq)(void *) ;
   void (*start_tx)(void *) ;
   void (*stop_tx)(void *) ;
   void (*start_rx)(void *) ;
   void (*stop_rx)(void *) ;
   int (*dma_interrupt)(void *, struct stmmac_extra_stats *) ;
   unsigned int (*get_hw_feature)(void *) ;
   void (*rx_watchdog)(void *, u32 ) ;
};

#line 379 
struct mac_device_info;

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_ops {
   void (*core_init)(struct mac_device_info *, int ) ;
   int (*rx_ipc)(struct mac_device_info *) ;
   void (*dump_regs)(struct mac_device_info *) ;
   int (*host_irq_status)(struct mac_device_info *, struct stmmac_extra_stats *) ;
   void (*set_filter)(struct mac_device_info *, struct net_device *) ;
   void (*flow_ctrl)(struct mac_device_info *, unsigned int , unsigned int , unsigned int ) ;
   void (*pmt)(struct mac_device_info *, unsigned long ) ;
   void (*set_umac_addr)(struct mac_device_info *, unsigned char *, unsigned int ) ;
   void (*get_umac_addr)(struct mac_device_info *, unsigned char *, unsigned int ) ;
   void (*set_eee_mode)(struct mac_device_info *) ;
   void (*reset_eee_mode)(struct mac_device_info *) ;
   void (*set_eee_timer)(struct mac_device_info *, int , int ) ;
   void (*set_eee_pls)(struct mac_device_info *, int ) ;
   void (*ctrl_ane)(struct mac_device_info *, bool ) ;
   void (*get_adv)(struct mac_device_info *, struct rgmii_adv *) ;
};

#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_hwtimestamp {
   void (*config_hw_tstamping)(void *, u32 ) ;
   void (*config_sub_second_increment)(void *) ;
   int (*init_systime)(void *, u32 , u32 ) ;
   int (*config_addend)(void *, u32 ) ;
   int (*adjust_systime)(void *, u32 , u32 , int ) ;
   u64 (*get_systime)(void *) ;
};

#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct mac_link {
   int port ;
   int duplex ;
   int speed ;
};

#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct mii_regs {
   unsigned int addr ;
   unsigned int data ;
};

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_mode_ops {
   void (*init)(void *, dma_addr_t , unsigned int , unsigned int ) ;
   unsigned int (*is_jumbo_frm)(int , int ) ;
   int (*jumbo_frm)(void *, struct sk_buff *, int ) ;
   int (*set_16kib_bfsize)(int ) ;
   void (*init_desc3)(struct dma_desc *) ;
   void (*refill_desc3)(void *, struct dma_desc *) ;
   void (*clean_desc3)(void *, struct dma_desc *) ;
};

#line 448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct mac_device_info {
   struct stmmac_ops const *mac ;
   struct stmmac_desc_ops const *desc ;
   struct stmmac_dma_ops const *dma ;
   struct stmmac_mode_ops const *mode ;
   struct stmmac_hwtimestamp const *ptp ;
   struct mii_regs mii ;
   struct mac_link link ;
   unsigned int synopsys_uid ;
   void *pcsr ;
   int multicast_filter_bins ;
   int unicast_filter_entries ;
   int mcast_bits_log2 ;
   unsigned int rx_csum ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pps.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations const *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pps_kernel.h"
struct ptp_clock_time {
   __s64 sec ;
   __u32 nsec ;
   __u32 reserved ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_extts_request {
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[2U] ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_perout_request {
   struct ptp_clock_time start ;
   struct ptp_clock_time period ;
   unsigned int index ;
   unsigned int flags ;
   unsigned int rsv[4U] ;
};

#line 83 
enum ptp_pin_function {
    PTP_PF_NONE = 0,
    PTP_PF_EXTTS = 1,
    PTP_PF_PEROUT = 2,
    PTP_PF_PHYSYNC = 3
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_pin_desc {
   char name[64U] ;
   unsigned int index ;
   unsigned int func ;
   unsigned int chan ;
   unsigned int rsv[5U] ;
};

#line 134 
enum ldv_33161 {
    PTP_CLK_REQ_EXTTS = 0,
    PTP_CLK_REQ_PEROUT = 1,
    PTP_CLK_REQ_PPS = 2
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
union __anonunion_676 {
   struct ptp_extts_request extts ;
   struct ptp_perout_request perout ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ptp_clock.h"
struct ptp_clock_request {
   enum ldv_33161 type ;
   union __anonunion_676 __anonCompField_ptp_clock_request_96 ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock_info {
   struct module *owner ;
   char name[16U] ;
   s32 max_adj ;
   int n_alarm ;
   int n_ext_ts ;
   int n_per_out ;
   int n_pins ;
   int pps ;
   struct ptp_pin_desc *pin_config ;
   int (*adjfreq)(struct ptp_clock_info *, s32 ) ;
   int (*adjtime)(struct ptp_clock_info *, s64 ) ;
   int (*gettime64)(struct ptp_clock_info *, struct timespec *) ;
   int (*settime64)(struct ptp_clock_info *, struct timespec const *) ;
   int (*enable)(struct ptp_clock_info *, struct ptp_clock_request *, int ) ;
   int (*verify)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ) ;
};

#line 113 
struct ptp_clock;

#line 190 
struct reset_control;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac.h"
struct stmmac_tx_info {
   dma_addr_t buf ;
   bool map_as_page ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac.h"
struct stmmac_priv {
   struct dma_extended_desc *dma_etx ;
   struct dma_desc *dma_tx ;
   struct sk_buff **tx_skbuff ;
   unsigned int cur_tx ;
   unsigned int dirty_tx ;
   unsigned int dma_tx_size ;
   u32 tx_count_frames ;
   u32 tx_coal_frames ;
   u32 tx_coal_timer ;
   struct stmmac_tx_info *tx_skbuff_dma ;
   dma_addr_t dma_tx_phy ;
   int tx_coalesce ;
   int hwts_tx_en ;
   spinlock_t tx_lock ;
   bool tx_path_in_lpi_mode ;
   struct timer_list txtimer ;
   struct dma_desc *dma_rx ;
   struct dma_extended_desc *dma_erx ;
   struct sk_buff **rx_skbuff ;
   unsigned int cur_rx ;
   unsigned int dirty_rx ;
   unsigned int dma_rx_size ;
   unsigned int dma_buf_sz ;
   u32 rx_riwt ;
   int hwts_rx_en ;
   dma_addr_t *rx_skbuff_dma ;
   dma_addr_t dma_rx_phy ;
   struct napi_struct napi ;
   void *ioaddr ;
   struct net_device *dev ;
   struct device *device ;
   struct mac_device_info *hw ;
   spinlock_t lock ;
   struct phy_device *phydev ;
   int oldlink ;
   int speed ;
   int oldduplex ;
   unsigned int flow_ctrl ;
   unsigned int pause ;
   struct mii_bus *mii ;
   int mii_irq[32U] ;
   struct stmmac_extra_stats xstats ;
   struct plat_stmmacenet_data *plat ;
   struct dma_features dma_cap ;
   struct stmmac_counters mmc ;
   int hw_cap_support ;
   int synopsys_id ;
   u32 msg_enable ;
   int wolopts ;
   int wol_irq ;
   struct clk *stmmac_clk ;
   struct clk *pclk ;
   struct reset_control *stmmac_rst ;
   int clk_csr ;
   struct timer_list eee_ctrl_timer ;
   int lpi_irq ;
   int eee_enabled ;
   int eee_active ;
   int tx_lpi_timer ;
   int pcs ;
   unsigned int mode ;
   int extend_desc ;
   struct ptp_clock *ptp_clock ;
   struct ptp_clock_info ptp_clock_ops ;
   unsigned int default_addend ;
   struct clk *clk_ptp_ref ;
   unsigned int clk_ptp_rate ;
   u32 adv_ts ;
   int use_riwt ;
   int irq_wake ;
   spinlock_t ptp_lock ;
   struct dentry *dbgfs_dir ;
   struct dentry *dbgfs_rings_status ;
   struct dentry *dbgfs_dma_cap ;
};

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_16214 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_16214 socket_state;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_2253 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_2253 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 767 
struct rtable;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_2348 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_2348 __anonCompField_bpf_prog_98 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_2359 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_2359 __anonCompField_dst_entry_99 ;
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst.h"
struct hwtstamp_config {
   int flags ;
   int tx_type ;
   int rx_filter ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_2360 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_2360 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_2362 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_2361 {
   __addrpair skc_addrpair ;
   struct __anonstruct_2362 __anonCompField___anonunion_2361_100 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_2363 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_2365 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_2364 {
   __portpair skc_portpair ;
   struct __anonstruct_2365 __anonCompField___anonunion_2364_103 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_2366 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_2367 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_2361 __anonCompField_sock_common_101 ;
   union __anonunion_2363 __anonCompField_sock_common_102 ;
   union __anonunion_2364 __anonCompField_sock_common_104 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_2366 __anonCompField_sock_common_105 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_2367 __anonCompField_sock_common_106 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_2368 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_2368 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_2371 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_2371 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct vlan_ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_vlan_proto ;
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/reset.h"
struct stmmac_resources {
   void *addr ;
   char const *mac ;
   int wol_irq ;
   int lpi_irq ;
   int irq ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_dma.h"
struct stmmac_stats {
   char stat_string[32U] ;
   int sizeof_stat ;
   int stat_offset ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_character_driver_scenario_11 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_13 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_desc_ops const ndesc_ops;


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ndesc_rx_set_on_ring(struct dma_desc *p, int end)
{
  
#line 66 
  p->des01.rx.buffer2_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))2047U;
  
#line 67 
  if (end != 0) 
#line 68 
                p->des01.rx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 69 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ndesc_tx_set_on_ring(struct dma_desc *p, int end)
{
  
#line 73 
  if (end != 0) 
#line 74 
                p->des01.tx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 75 
  return;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ndesc_end_tx_desc_on_ring(struct dma_desc *p, int ter)
{
  
#line 79 
  p->des01.tx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))ter;
  
#line 80 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void norm_set_tx_desc_len_on_ring(struct dma_desc *p, int len)
{
  
#line 84 
  if ((long)(len > 2048) != 0L) {
    
#line 85 
    p->des01.etx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))2047U;
    
#line 86 
    p->des01.etx.buffer2_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))((int)((unsigned short)len) - (int)((unsigned short)p->des01.etx.buffer1_size));
  }
  else 
#line 88 
       p->des01.tx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))len;
  
#line 89 
  return;
}


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ndesc_rx_set_on_chain(struct dma_desc *p, int end)
{
  
#line 117 
  p->des01.rx.second_address_chained = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 118 
  return;
}


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ndesc_tx_set_on_chain(struct dma_desc *p, int ring_size)
{
  
#line 122 
  p->des01.tx.second_address_chained = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 123 
  return;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void norm_set_tx_desc_len_on_chain(struct dma_desc *p, int len)
{
  
#line 132 
  p->des01.tx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))len;
  
#line 133 
  return;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_tx_status(void *data, struct stmmac_extra_stats *x, struct dma_desc *p, void *ioaddr)
{
  
#line 32 
  int ret = 0;
  
#line 33 
  struct net_device_stats *stats = (struct net_device_stats *)data;
  
#line 35 
  if ((long)((int)*((unsigned char *)(& p->des01.tx) + 1UL) < 0) != 0L) {
    
#line 36 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 0UL) != 0U) != 0L) {
      
#line 37 
      x->tx_underflow += 1UL;
      
#line 38 
      stats->tx_fifo_errors += 1UL;
    }
    else ;
    
#line 40 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 1UL) != 0U) != 0L) {
      
#line 41 
      x->tx_carrier += 1UL;
      
#line 42 
      stats->tx_carrier_errors += 1UL;
    }
    else ;
    
#line 44 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 1UL) != 0U) != 0L) {
      
#line 45 
      x->tx_losscarrier += 1UL;
      
#line 46 
      stats->tx_carrier_errors += 1UL;
    }
    else ;
    
#line 48 
    if ((((long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 0UL) != 0U) != 0L || (long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 1UL) != 0U) != 0L) != 0) != 0 || (long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 1UL) != 0U) != 0L) 
      
#line 51 
      stats->collisions += (unsigned long)p->des01.tx.collision_count; else ;
    
#line 52 
    ret = -1;
  }
  else ;
  
#line 55 
  if ((unsigned int)*((unsigned char *)(& p->des01.etx) + 0UL) != 0U) 
    
#line 56 
    x->tx_vlan += 1UL; else ;
  
#line 58 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.tx) + 0UL) != 0U) != 0L) 
    
#line 59 
    x->tx_deferred += 1UL; else ;
  
#line 61 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_tx_len(struct dma_desc *p)
{
  int __retres;
  
#line 66 
  __retres = (int)p->des01.tx.buffer1_size;
  
#line 66 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_rx_status(void *data, struct stmmac_extra_stats *x, struct dma_desc *p)
{
  int __retres;
  
#line 76 
  int ret = 0;
  
#line 77 
  struct net_device_stats *stats = (struct net_device_stats *)data;
  
#line 79 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) == 0U) != 0L) {
    
#line 80 
    printk("\001","ndesc_get_rx_status");
    
#line 82 
    stats->rx_length_errors += 1UL;
    
#line 83 
    __retres = 1;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 86 
  if ((long)((int)*((unsigned char *)(& p->des01.rx) + 1UL) < 0) != 0L) {
    
#line 87 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) != 0U) != 0L) 
      
#line 88 
      x->rx_desc += 1UL; else ;
    
#line 89 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) != 0U) != 0L) 
      
#line 90 
      x->sa_filter_fail += 1UL; else ;
    
#line 91 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) != 0U) != 0L) 
      
#line 92 
      x->overflow_error += 1UL; else ;
    
#line 93 
    if ((long)((int)*((unsigned char *)(& p->des01.rx) + 0UL) < 0) != 0L) 
      
#line 94 
      x->ipc_csum_error += 1UL; else ;
    
#line 95 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 0UL) != 0U) != 0L) {
      
#line 96 
      x->rx_collision += 1UL;
      
#line 97 
      stats->collisions += 1UL;
    }
    else ;
    
#line 99 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 0UL) != 0U) != 0L) {
      
#line 100 
      x->rx_crc += 1UL;
      
#line 101 
      stats->rx_crc_errors += 1UL;
    }
    else ;
    
#line 103 
    ret = 1;
  }
  else ;
  
#line 105 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 0UL) != 0U) != 0L) 
    
#line 106 
    x->dribbling_bit += 1UL; else ;
  
#line 108 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) != 0U) != 0L) {
    
#line 109 
    x->rx_length += 1UL;
    
#line 110 
    ret = 1;
  }
  else ;
  
#line 112 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.rx) + 0UL) != 0U) != 0L) {
    
#line 113 
    x->rx_mii += 1UL;
    
#line 114 
    ret = 1;
  }
  else ;
  
#line 117 
  if ((unsigned int)*((unsigned char *)(& p->des01.rx) + 1UL) != 0U) 
    
#line 118 
    x->vlan_tag += 1UL; else ;
  
#line 120 
  __retres = ret;
  return_label: 
#line 120 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_init_rx_desc(struct dma_desc *p, int disable_rx_ic, int mode, int end)
{
  
#line 126 
  p->des01.all_flags = 0ULL;
  
#line 127 
  p->des01.rx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 128 
  p->des01.rx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))2047U;
  
#line 130 
  if (mode == 1) 
#line 131 
                 ndesc_rx_set_on_chain(p,end); else 
#line 133 
                                                    ndesc_rx_set_on_ring(p,end);
  
#line 135 
  if (disable_rx_ic != 0) 
#line 136 
                          p->des01.rx.disable_ic = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 137 
  return;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_init_tx_desc(struct dma_desc *p, int mode, int end)
{
  
#line 141 
  p->des01.all_flags = 0ULL;
  
#line 142 
  if (mode == 1) 
#line 143 
                 ndesc_tx_set_on_chain(p,end); else 
#line 145 
                                                    ndesc_tx_set_on_ring(p,end);
  
#line 146 
  return;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_tx_owner(struct dma_desc *p)
{
  int __retres;
  
#line 150 
  __retres = (int)p->des01.tx.own;
  
#line 150 
  return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_rx_owner(struct dma_desc *p)
{
  int __retres;
  
#line 155 
  __retres = (int)p->des01.rx.own;
  
#line 155 
  return __retres;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_set_tx_owner(struct dma_desc *p)
{
  
#line 160 
  p->des01.tx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 161 
  return;
}


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_set_rx_owner(struct dma_desc *p)
{
  
#line 165 
  p->des01.rx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 166 
  return;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_tx_ls(struct dma_desc *p)
{
  int __retres;
  
#line 170 
  __retres = (int)p->des01.tx.last_segment;
  
#line 170 
  return __retres;
}


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_release_tx_desc(struct dma_desc *p, int mode)
{
  
#line 175 
  int ter = (int)p->des01.tx.end_ring;
  
#line 177 
  memset((void *)p,0,8UL);
  
#line 178 
  if (mode == 1) 
#line 179 
                 ndesc_tx_set_on_chain(p,ter); else 
#line 181 
                                                    ndesc_end_tx_desc_on_ring(p,ter);
  
#line 182 
  return;
}


#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_prepare_tx_desc(struct dma_desc *p, int is_fs, int len, int csum_flag, int mode)
{
  
#line 187 
  p->des01.tx.first_segment = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_fs;
  
#line 188 
  if (mode == 1) 
#line 189 
                 norm_set_tx_desc_len_on_chain(p,len); else 
#line 191 
                                                            norm_set_tx_desc_len_on_ring(p,len);
  
#line 193 
  if ((long)(csum_flag != 0) != 0L) 
#line 194 
                                    p->des01.tx.checksum_insertion = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U; else ;
  
#line 195 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_clear_tx_ic(struct dma_desc *p)
{
  
#line 199 
  p->des01.tx.interrupt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 200 
  return;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_close_tx_desc(struct dma_desc *p)
{
  
#line 204 
  p->des01.tx.last_segment = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 205 
  p->des01.tx.interrupt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 206 
  return;
}


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_rx_frame_len(struct dma_desc *p, int rx_coe_type)
{
  int __retres;
  
#line 215 
  if (rx_coe_type == 1) {
    
#line 216 
    __retres = (int)p->des01.rx.frame_length + -2;
    
#line 216 
    goto return_label;
  }
  else {
    
#line 218 
    __retres = (int)p->des01.rx.frame_length;
    
#line 218 
    goto return_label;
  }
  return_label: 
#line 215 
                return __retres;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static void ndesc_enable_tx_timestamp(struct dma_desc *p)
{
  
#line 223 
  p->des01.tx.time_stamp_enable = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 224 
  return;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_tx_timestamp_status(struct dma_desc *p)
{
  int __retres;
  
#line 228 
  __retres = (int)p->des01.tx.time_stamp_status;
  
#line 228 
  return __retres;
}


#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static u64 ndesc_get_timestamp(void *desc, u32 ats)
{
  u64 ns;
  
#line 233 
  struct dma_desc *p = (struct dma_desc *)desc;
  
#line 236 
  ns = (unsigned long long)p->des2;
  
#line 238 
  ns = (unsigned long long)p->des3 * 1000000000ULL + ns;
  
#line 240 
  return ns;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
static int ndesc_get_rx_timestamp_status(void *desc, u32 ats)
{
  int __retres;
  
#line 245 
  struct dma_desc *p = (struct dma_desc *)desc;
  
#line 247 
  if (p->des2 == 4294967295U && p->des3 == 4294967295U) {
    
#line 249 
    __retres = 0;
    
#line 249 
    goto return_label;
  }
  else {
    
#line 251 
    __retres = 1;
    
#line 251 
    goto return_label;
  }
  return_label: 
#line 247 
                return __retres;
}


#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/norm_desc.c"
struct stmmac_desc_ops const ndesc_ops = {.init_rx_desc = & ndesc_init_rx_desc, .init_tx_desc = & ndesc_init_tx_desc, .prepare_tx_desc = & ndesc_prepare_tx_desc, .set_tx_owner = & ndesc_set_tx_owner, .get_tx_owner = & ndesc_get_tx_owner, .close_tx_desc = & ndesc_close_tx_desc, .release_tx_desc = & ndesc_release_tx_desc, .clear_tx_ic = & ndesc_clear_tx_ic, .get_tx_ls = & ndesc_get_tx_ls, .tx_status = & ndesc_get_tx_status, .get_tx_len = & ndesc_get_tx_len, .get_rx_owner = & ndesc_get_rx_owner, .set_rx_owner = & ndesc_set_rx_owner, .get_rx_frame_len = & ndesc_get_rx_frame_len, .rx_status = & ndesc_get_rx_status, .rx_extended_status = (void (*)(void *, struct stmmac_extra_stats *, struct dma_extended_desc *))0, .enable_tx_timestamp = & ndesc_enable_tx_timestamp, .get_tx_timestamp_status = & ndesc_get_tx_timestamp_status, .get_timestamp = & ndesc_get_timestamp, .get_rx_timestamp_status = & ndesc_get_rx_timestamp_status};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/fvtp/.tmp_ring_mode.c"
void ldv_inline_asm(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_mode_ops const ring_mode_ops;


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static int stmmac_jumbo_frm(void *p, struct sk_buff *skb, int csum)
{
  int __retres;
  struct dma_desc *desc;
  unsigned int bmax;
  unsigned int len;
  
#line 33 
  struct stmmac_priv *priv = (struct stmmac_priv *)p;
  
#line 34 
  unsigned int txsize = priv->dma_tx_size;
  
#line 35 
  unsigned int entry = priv->cur_tx % txsize;
  
#line 37 
  unsigned int nopaged_len = skb_headlen((struct sk_buff const *)skb);
  
#line 40 
  if (priv->extend_desc != 0) 
#line 41 
                              desc = (struct dma_desc *)(priv->dma_etx + entry); else 
                                                                    
#line 43 
                                                                    desc = priv->dma_tx + entry;
  
#line 45 
  if ((priv->plat)->enh_desc != 0) 
#line 46 
                                   bmax = 8192U; else 
#line 48 
                                                      bmax = 2048U;
  
#line 50 
  len = nopaged_len - bmax;
  
#line 52 
  if (nopaged_len > 8192U) {
    dma_addr_t tmp_0;
    int tmp_1;
    dma_addr_t tmp_2;
    int tmp_3;
    
#line 54 
    tmp_0 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)bmax,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 54 
    desc->des2 = (unsigned int)tmp_0;
    
#line 56 
    tmp_1 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 56 
    if (tmp_1 != 0) {
      
#line 57 
      __retres = -1;
      
#line 57 
      goto return_label;
    }
    else ;
    
#line 59 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 60 
    desc->des3 = desc->des2 + 4096U;
    
#line 61 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,1,(int)bmax,csum,2);
    
#line 62 
    ldv_inline_asm();
    
#line 64 
    *(priv->tx_skbuff + entry) = (struct sk_buff *)0;
    
#line 65 
    priv->cur_tx += 1U;
    
#line 65 
    entry = priv->cur_tx % txsize;
    
#line 67 
    if (priv->extend_desc != 0) 
#line 68 
                                desc = (struct dma_desc *)(priv->dma_etx + entry); else 
                                                                    
#line 70 
                                                                    desc = priv->dma_tx + entry;
    
#line 72 
    tmp_2 = dma_map_single_attrs(priv->device,(void *)(skb->data + bmax),(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 72 
    desc->des2 = (unsigned int)tmp_2;
    
#line 74 
    tmp_3 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 74 
    if (tmp_3 != 0) {
      
#line 75 
      __retres = -1;
      
#line 75 
      goto return_label;
    }
    else ;
    
#line 76 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 77 
    desc->des3 = desc->des2 + 4096U;
    
#line 78 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,0,(int)len,csum,2);
    
#line 79 
    ldv_inline_asm();
    
#line 81 
    (*(((priv->hw)->desc)->set_tx_owner))(desc);
  }
  else {
    dma_addr_t tmp_4;
    int tmp_5;
    
#line 83 
    tmp_4 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)nopaged_len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 83 
    desc->des2 = (unsigned int)tmp_4;
    
#line 85 
    tmp_5 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 85 
    if (tmp_5 != 0) {
      
#line 86 
      __retres = -1;
      
#line 86 
      goto return_label;
    }
    else ;
    
#line 87 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 88 
    desc->des3 = desc->des2 + 4096U;
    
#line 89 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,1,(int)nopaged_len,csum,2);
  }
  
#line 93 
  __retres = (int)entry;
  return_label: 
#line 93 
                return __retres;
}


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static unsigned int stmmac_is_jumbo_frm(int len, int enh_desc)
{
  
#line 98 
  unsigned int ret = 0U;
  
#line 100 
  if (len > 4095) 
#line 101 
                  ret = 1U; else ;
  
#line 103 
  return ret;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static void stmmac_refill_desc3(void *priv_ptr, struct dma_desc *p)
{
  
#line 108 
  struct stmmac_priv *priv = (struct stmmac_priv *)priv_ptr;
  
#line 111 
  if (priv->dma_buf_sz > 8191U) 
#line 112 
                                p->des3 = p->des2 + 8192U; else ;
  
#line 113 
  return;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static void stmmac_init_desc3(struct dma_desc *p)
{
  
#line 118 
  p->des3 = p->des2 + 8192U;
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static void stmmac_clean_desc3(void *priv_ptr, struct dma_desc *p)
{
  
#line 123 
  if ((long)(p->des3 != 0U) != 0L) 
#line 124 
                                   p->des3 = 0U; else ;
  
#line 125 
  return;
}


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
static int stmmac_set_16kib_bfsize(int mtu)
{
  
#line 129 
  int ret = 0;
  
#line 130 
  if ((long)(mtu > 8191) != 0L) 
#line 131 
                                ret = 16384; else ;
  
#line 132 
  return ret;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/ring_mode.c"
struct stmmac_mode_ops const ring_mode_ops = {.init = (void (*)(void *, dma_addr_t , unsigned int , unsigned int ))0, .is_jumbo_frm = & stmmac_is_jumbo_frm, .jumbo_frm = & stmmac_jumbo_frm, .set_16kib_bfsize = & stmmac_set_16kib_bfsize, .init_desc3 = & stmmac_init_desc3, .refill_desc3 = & stmmac_refill_desc3, .clean_desc3 = & stmmac_clean_desc3};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  
#line 567 
  ldv_inline_asm();
  
#line 568 
  return;
}


#line 570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  
#line 572 
  rep_nop();
  
#line 573 
  return;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus *mdiobus_alloc_size(size_t);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
__inline static struct mii_bus *mdiobus_alloc(void)
{
  struct mii_bus *tmp;
  
#line 198 
  tmp = mdiobus_alloc_size(0UL);
  
#line 198 
  return tmp;
}


#line 201 
int mdiobus_register(struct mii_bus *);


#line 202 
void mdiobus_unregister(struct mii_bus *);


#line 203 
void mdiobus_free(struct mii_bus *);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac.h"
int stmmac_mdio_unregister(struct net_device *ndev);


#line 137 
int stmmac_mdio_register(struct net_device *ndev);


#line 138 
int stmmac_mdio_reset(struct mii_bus *bus);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
static int stmmac_mdio_busy_wait(void *ioaddr, unsigned int mii_addr)
{
  int __retres;
  unsigned long curr;
  unsigned int tmp;
  int tmp_0;
  
#line 43 
  unsigned long finish = jiffies + 750UL;
  ldv_48626: 
#line 44 
  ;
  
#line 46 
  curr = jiffies;
  
#line 47 
  tmp = readl((void const volatile *)(ioaddr + mii_addr));
  
#line 47 
  if ((tmp & 1U) != 0U) 
#line 48 
                        cpu_relax();
  else {
    
#line 50 
    __retres = 0;
    
#line 50 
    goto return_label;
  }
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 51 
    tmp_0 = 1;
  }
  
#line 51 
  if (tmp_0 == 0) 
#line 51 
                  goto _LOR;
  else {
    int tmp_1;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 51 
      tmp_1 = 1;
    }
    
#line 51 
    if (tmp_1 == 0) 
#line 51 
                    goto _LOR;
    else 
      
#line 51 
      if ((long)(curr - finish) < 0L) _LOR: 
#line 53 
                                            goto ldv_48626; else 
#line 56 
                                                                 goto ldv_48627;
  }
  ldv_48627: 
#line 57 
  ;
  
#line 53 
  __retres = -16;
  return_label: 
#line 53 
                return __retres;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
static int stmmac_mdio_read(struct mii_bus *bus, int phyaddr_0, int phyreg)
{
  int __retres;
  int data;
  int tmp_0;
  int tmp_1;
  unsigned int tmp_2;
  
#line 68 
  struct net_device *ndev = (struct net_device *)bus->priv;
  
#line 69 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 70 
  unsigned int mii_address = (priv->hw)->mii.addr;
  
#line 71 
  unsigned int mii_data = (priv->hw)->mii.data;
  
#line 74 
  u16 regValue = (unsigned short)((phyaddr_0 << 11) | ((phyreg << 6) & 1984));
  
#line 76 
  regValue = (unsigned short)((((unsigned int)((unsigned short)(priv->clk_csr << 2)) & 60U) | (unsigned int)regValue) | 1U);
  
#line 78 
  tmp_0 = stmmac_mdio_busy_wait(priv->ioaddr,mii_address);
  
#line 78 
  if (tmp_0 != 0) {
    
#line 79 
    __retres = -16;
    
#line 79 
    goto return_label;
  }
  else ;
  
#line 81 
  writel((unsigned int)regValue,(void volatile *)(priv->ioaddr + mii_address));
  
#line 83 
  tmp_1 = stmmac_mdio_busy_wait(priv->ioaddr,mii_address);
  
#line 83 
  if (tmp_1 != 0) {
    
#line 84 
    __retres = -16;
    
#line 84 
    goto return_label;
  }
  else ;
  
#line 87 
  tmp_2 = readl((void const volatile *)(priv->ioaddr + mii_data));
  
#line 87 
  data = (int)tmp_2;
  
#line 89 
  __retres = data;
  return_label: 
#line 89 
                return __retres;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
static int stmmac_mdio_write(struct mii_bus *bus, int phyaddr_0, int phyreg, u16 phydata)
{
  int __retres;
  int tmp_0;
  int tmp_1;
  
#line 103 
  struct net_device *ndev = (struct net_device *)bus->priv;
  
#line 104 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 105 
  unsigned int mii_address = (priv->hw)->mii.addr;
  
#line 106 
  unsigned int mii_data = (priv->hw)->mii.data;
  
#line 108 
  u16 value = (unsigned short)(((phyaddr_0 << 11) | ((phyreg << 6) & 1984)) | 2);
  
#line 112 
  value = (unsigned short)((((unsigned int)((unsigned short)(priv->clk_csr << 2)) & 60U) | (unsigned int)value) | 1U);
  
#line 115 
  tmp_0 = stmmac_mdio_busy_wait(priv->ioaddr,mii_address);
  
#line 115 
  if (tmp_0 != 0) {
    
#line 116 
    __retres = -16;
    
#line 116 
    goto return_label;
  }
  else ;
  
#line 119 
  writel((unsigned int)phydata,(void volatile *)(priv->ioaddr + mii_data));
  
#line 120 
  writel((unsigned int)value,(void volatile *)(priv->ioaddr + mii_address));
  
#line 123 
  tmp_1 = stmmac_mdio_busy_wait(priv->ioaddr,mii_address);
  
#line 123 
  __retres = tmp_1;
  return_label: 
#line 123 
                return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
int stmmac_mdio_reset(struct mii_bus *bus)
{
  int __retres;
  
#line 184 
  __retres = 0;
  
#line 184 
  return __retres;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
int stmmac_mdio_register(struct net_device *ndev)
{
  int __retres;
  struct mii_bus *new_bus;
  int *irqlist;
  int addr;
  int found;
  
#line 194 
  int err = 0;
  
#line 197 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 198 
  struct stmmac_mdio_bus_data *mdio_bus_data = (priv->plat)->mdio_bus_data;
  
#line 201 
  if (mdio_bus_data == (struct stmmac_mdio_bus_data *)0) {
    
#line 202 
    __retres = 0;
    
#line 202 
    goto return_label;
  }
  else ;
  
#line 204 
  new_bus = mdiobus_alloc();
  
#line 205 
  if (new_bus == (struct mii_bus *)0) {
    
#line 206 
    __retres = -12;
    
#line 206 
    goto return_label;
  }
  else ;
  
#line 208 
  if (mdio_bus_data->irqs != (int *)0) 
#line 209 
                                       irqlist = mdio_bus_data->irqs;
  else {
    
#line 211 
    addr = 0;
    
#line 211 
    goto ldv_48664;
    ldv_48663: 
#line 212 
    ;
    
#line 212 
    priv->mii_irq[addr] = -1;
    
#line 211 
    addr += 1;
    ldv_48664: 
#line 212 
    ;
    
#line 211 
    if (addr <= 31) 
#line 213 
                    goto ldv_48663; else 
#line 216 
                                         goto ldv_48665;
    ldv_48665: 
#line 217 
    ;
    
#line 213 
    irqlist = (int *)(& priv->mii_irq);
  }
  
#line 217 
  if ((priv->device)->of_node != (struct device_node *)0) 
#line 218 
                                                          mdio_bus_data->reset_gpio = -1; else ;
  
#line 221 
  new_bus->name = "stmmac";
  
#line 222 
  new_bus->read = & stmmac_mdio_read;
  
#line 223 
  new_bus->write = & stmmac_mdio_write;
  
#line 224 
  new_bus->reset = & stmmac_mdio_reset;
  
#line 225 
  snprintf((char *)(& new_bus->id),17UL,"%s-%x",new_bus->name,(priv->plat)->bus_id);
  
#line 227 
  new_bus->priv = (void *)ndev;
  
#line 228 
  new_bus->irq = irqlist;
  
#line 229 
  new_bus->phy_mask = mdio_bus_data->phy_mask;
  
#line 230 
  new_bus->parent = priv->device;
  
#line 231 
  err = mdiobus_register(new_bus);
  
#line 232 
  if (err != 0) {
    
#line 233 
    printk("\001",new_bus->name);
    
#line 234 
    goto bus_register_fail;
  }
  else ;
  
#line 237 
  found = 0;
  
#line 238 
  addr = 0;
  
#line 238 
  goto ldv_48676;
  ldv_48675: 
#line 239 
  ;
  {
    
#line 239 
    struct phy_device *phydev = new_bus->phy_map[addr];
    
#line 240 
    if (phydev != (struct phy_device *)0) {
      char irq_num[4U];
      char *irq_str;
      char *tmp_0;
      char const *tmp_1;
      
#line 241 
      int act = 0;
      
#line 249 
      if (mdio_bus_data->irqs == (int *)0 && mdio_bus_data->probed_phy_irq > 0) {
        
#line 251 
        *(irqlist + addr) = mdio_bus_data->probed_phy_irq;
        
#line 252 
        phydev->irq = mdio_bus_data->probed_phy_irq;
      }
      else ;
      
#line 260 
      if ((priv->plat)->phy_addr == -1) 
#line 261 
                                        (priv->plat)->phy_addr = addr; else ;
      
#line 263 
      act = (priv->plat)->phy_addr == addr;
      
#line 264 
      switch (phydev->irq) {
        case -1: 
#line 265 
        ;
        
#line 266 
        irq_str = (char *)"POLL";
        
#line 267 
        goto ldv_48672;
        case -2: 
#line 268 
        ;
        
#line 269 
        irq_str = (char *)"IGNORE";
        
#line 270 
        goto ldv_48672;
        default: 
#line 271 
        ;
        
#line 272 
        sprintf((char *)(& irq_num),"%d",phydev->irq);
        
#line 273 
        irq_str = (char *)(& irq_num);
        
#line 274 
        goto ldv_48672;
      }
      ldv_48672: 
#line 276 
      ;
      
#line 276 
      if (act != 0) 
#line 276 
                    tmp_0 = (char *)" active"; else 
#line 276 
                                                    tmp_0 = (char *)"";
      
#line 276 
      tmp_1 = dev_name((struct device const *)(& phydev->dev));
      
#line 276 
      ;
      
#line 276 
      ;
      
#line 276 
      ;
      
#line 276 
      ;
      
#line 276 
      printk("\001",(char *)(& ndev->name),phydev->phy_id,addr,irq_str,tmp_1,tmp_0);
      
#line 280 
      found = 1;
    }
    else ;
  }
  
#line 238 
  addr += 1;
  ldv_48676: 
#line 239 
  ;
  
#line 238 
  if (addr <= 31) 
#line 240 
                  goto ldv_48675; else 
#line 243 
                                       goto ldv_48677;
  ldv_48677: 
#line 244 
  ;
  
#line 284 
  if (found == 0) {
    
#line 285 
    printk("\001",(char *)(& ndev->name));
    
#line 286 
    mdiobus_unregister(new_bus);
    
#line 287 
    mdiobus_free(new_bus);
    
#line 288 
    __retres = -19;
    
#line 288 
    goto return_label;
  }
  else ;
  
#line 291 
  priv->mii = new_bus;
  
#line 293 
  __retres = 0;
  
#line 293 
  goto return_label;
  bus_register_fail: 
#line 295 
  ;
  
#line 296 
  mdiobus_free(new_bus);
  
#line 297 
  __retres = err;
  return_label: 
#line 297 
                return __retres;
}


#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_mdio.c"
int stmmac_mdio_unregister(struct net_device *ndev)
{
  int __retres;
  
#line 307 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 309 
  if (priv->mii == (struct mii_bus *)0) {
    
#line 310 
    __retres = 0;
    
#line 310 
    goto return_label;
  }
  else ;
  
#line 312 
  mdiobus_unregister(priv->mii);
  
#line 313 
  (priv->mii)->priv = (void *)0;
  
#line 314 
  mdiobus_free(priv->mii);
  
#line 315 
  priv->mii = (struct mii_bus *)0;
  
#line 317 
  __retres = 0;
  return_label: 
#line 317 
                return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_pr_debug(struct _ddebug *, char const * , ...);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64_rem(u64 dividend, u32 divisor, u32 *remainder)
{
  u64 __retres;
  
#line 20 
  *remainder = (unsigned int)(dividend % (unsigned long long)divisor);
  
#line 21 
  __retres = dividend / (unsigned long long)divisor;
  
#line 21 
  return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/math64.h"
__inline static u64 div_u64(u64 dividend, u32 divisor)
{
  u32 remainder;
  u64 tmp;
  
#line 100 
  tmp = div_u64_rem(dividend,divisor,& remainder);
  
#line 100 
  return tmp;
}


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR(void const *ptr);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/time.h"
struct timespec ns_to_timespec(s64 const);


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
struct ptp_clock *ptp_clock_register(struct ptp_clock_info *, struct device *);


#line 133 
int ptp_clock_unregister(struct ptp_clock *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac.h"
int stmmac_ptp_register(struct stmmac_priv *priv);


#line 142 
void stmmac_ptp_unregister(struct stmmac_priv *priv);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static int stmmac_adjust_freq(struct ptp_clock_info *ptp, s32 ppb)
{
  int __retres;
  struct stmmac_priv *tmp;
  unsigned long flags;
  u32 diff;
  u32 addend;
  u64 adj;
  u64 tmp_0;
  {
    
#line 38 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 38 
    tmp = (struct stmmac_priv *)__mptr + 18446744073709549320U;
  }
  
#line 37 
  struct stmmac_priv *priv = tmp;
  
#line 41 
  int neg_adj = 0;
  
#line 44 
  if (ppb < 0) {
    
#line 45 
    neg_adj = 1;
    
#line 46 
    ppb = - ppb;
  }
  else ;
  
#line 49 
  addend = priv->default_addend;
  
#line 50 
  adj = (unsigned long long)addend;
  
#line 51 
  adj = (unsigned long long)ppb * adj;
  
#line 52 
  tmp_0 = div_u64(adj,1000000000U);
  
#line 52 
  diff = (unsigned int)tmp_0;
  
#line 53 
  if (neg_adj != 0) 
#line 53 
                    addend -= diff; else 
#line 53 
                                         addend += diff;
  
#line 55 
  ldv___ldv_spin_lock_72(& priv->ptp_lock);
  
#line 57 
  (*(((priv->hw)->ptp)->config_addend))(priv->ioaddr,addend);
  
#line 59 
  ldv_spin_unlock_irqrestore_73(& priv->ptp_lock,flags);
  
#line 61 
  __retres = 0;
  
#line 61 
  return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static int stmmac_adjust_time(struct ptp_clock_info *ptp, s64 delta)
{
  int __retres;
  struct stmmac_priv *tmp;
  unsigned long flags;
  u32 sec;
  u32 nsec;
  u32 quotient;
  u32 reminder;
  u64 tmp_0;
  {
    
#line 75 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 75 
    tmp = (struct stmmac_priv *)__mptr + 18446744073709549320U;
  }
  
#line 74 
  struct stmmac_priv *priv = tmp;
  
#line 79 
  int neg_adj = 0;
  
#line 81 
  if (delta < 0LL) {
    
#line 82 
    neg_adj = 1;
    
#line 83 
    delta = - delta;
  }
  else ;
  
#line 86 
  tmp_0 = div_u64_rem((unsigned long long)delta,1000000000U,& reminder);
  
#line 86 
  quotient = (unsigned int)tmp_0;
  
#line 87 
  sec = quotient;
  
#line 88 
  nsec = reminder;
  
#line 90 
  ldv___ldv_spin_lock_74(& priv->ptp_lock);
  
#line 92 
  (*(((priv->hw)->ptp)->adjust_systime))(priv->ioaddr,sec,nsec,neg_adj);
  
#line 94 
  ldv_spin_unlock_irqrestore_75(& priv->ptp_lock,flags);
  
#line 96 
  __retres = 0;
  
#line 96 
  return __retres;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static int stmmac_get_time(struct ptp_clock_info *ptp, struct timespec *ts)
{
  int __retres;
  struct stmmac_priv *tmp;
  unsigned long flags;
  u64 ns;
  {
    
#line 111 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 111 
    tmp = (struct stmmac_priv *)__mptr + 18446744073709549320U;
  }
  
#line 110 
  struct stmmac_priv *priv = tmp;
  
#line 115 
  ldv___ldv_spin_lock_76(& priv->ptp_lock);
  
#line 117 
  ns = (*(((priv->hw)->ptp)->get_systime))(priv->ioaddr);
  
#line 119 
  ldv_spin_unlock_irqrestore_77(& priv->ptp_lock,flags);
  
#line 121 
  *ts = ns_to_timespec((long long)ns);
  
#line 123 
  __retres = 0;
  
#line 123 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static int stmmac_set_time(struct ptp_clock_info *ptp, struct timespec const *ts)
{
  int __retres;
  struct stmmac_priv *tmp;
  unsigned long flags;
  {
    
#line 139 
    struct ptp_clock_info const *__mptr = (struct ptp_clock_info const *)ptp;
    
#line 139 
    tmp = (struct stmmac_priv *)__mptr + 18446744073709549320U;
  }
  
#line 138 
  struct stmmac_priv *priv = tmp;
  
#line 142 
  ldv___ldv_spin_lock_78(& priv->ptp_lock);
  
#line 144 
  (*(((priv->hw)->ptp)->init_systime))(priv->ioaddr,(unsigned int)ts->tv_sec,(unsigned int)ts->tv_nsec);
  
#line 146 
  ldv_spin_unlock_irqrestore_79(& priv->ptp_lock,flags);
  
#line 148 
  __retres = 0;
  
#line 148 
  return __retres;
}


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static int stmmac_enable(struct ptp_clock_info *ptp, struct ptp_clock_request *rq, int on)
{
  int __retres;
  
#line 154 
  __retres = -95;
  
#line 154 
  return __retres;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
static struct ptp_clock_info stmmac_ptp_clock_ops = {.owner = & __this_module, .name = {(char)'s', (char)'t', (char)'m', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'c', (char)'l', (char)'o', (char)'c', (char)'k'}, .max_adj = 62500000, .n_alarm = 0, .n_ext_ts = 0, .n_per_out = 0, .n_pins = 0, .pps = 0, .pin_config = (struct ptp_pin_desc *)0, .adjfreq = & stmmac_adjust_freq, .adjtime = & stmmac_adjust_time, .gettime64 = & stmmac_get_time, .settime64 = & stmmac_set_time, .enable = & stmmac_enable, .verify = (int (*)(struct ptp_clock_info *, unsigned int , enum ptp_pin_function , unsigned int ))0};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
int stmmac_ptp_register(struct stmmac_priv *priv)
{
  int __retres;
  bool tmp;
  
#line 182 
  spinlock_check(& priv->ptp_lock);
  {
    struct lock_class_key __key;
    
#line 182 
    __raw_spin_lock_init(& priv->ptp_lock.__anonCompField_spinlock_18.rlock,"&(&priv->ptp_lock)->rlock",& __key);
  }
  
#line 183 
  priv->ptp_clock_ops = stmmac_ptp_clock_ops;
  
#line 185 
  priv->ptp_clock = ptp_clock_register(& priv->ptp_clock_ops,priv->device);
  
#line 187 
  tmp = IS_ERR((void const *)priv->ptp_clock);
  
#line 187 
  if ((int)tmp != 0) {
    
#line 188 
    priv->ptp_clock = (struct ptp_clock *)0;
    
#line 189 
    printk("\001",(char *)(& (priv->dev)->name));
  }
  else {
    
#line 191 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_ptp_register", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c", .format = "Added PTP HW clock successfully on %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))192U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 191 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 191 
                                                        __dynamic_pr_debug(& descriptor,"Added PTP HW clock successfully on %s\n",(char *)(& (priv->dev)->name)); else ;
  }
  
#line 194 
  __retres = 0;
  
#line 194 
  return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c"
void stmmac_ptp_unregister(struct stmmac_priv *priv)
{
  
#line 205 
  if (priv->ptp_clock != (struct ptp_clock *)0) {
    
#line 206 
    ptp_clock_unregister(priv->ptp_clock);
    
#line 207 
    priv->ptp_clock = (struct ptp_clock *)0;
    {
      
#line 208 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_ptp_unregister", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c", .format = "Removed PTP HW clock successfully on %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))209U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 208 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 208 
                                                          __dynamic_pr_debug(& descriptor,"Removed PTP HW clock successfully on %s\n",(char *)(& (priv->dev)->name)); else ;
    }
  }
  else ;
  
#line 211 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 84 
  ret = ldv_is_err(ptr);
  
#line 85 
  __retres = (_Bool)(ret != 0L);
  
#line 85 
  return __retres;
}


#line 736  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 740 
  ldv_spin_model_lock((char *)"ptp_lock_of_stmmac_priv");
  
#line 742 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 743 
  return;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 750 
  ldv_spin_model_unlock((char *)"ptp_lock_of_stmmac_priv");
  
#line 752 
  spin_unlock_irqrestore(lock,flags);
  
#line 753 
  return;
}


#line 756  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 760 
  ldv_spin_model_lock((char *)"ptp_lock_of_stmmac_priv");
  
#line 762 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 763 
  return;
}


#line 766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 770 
  ldv_spin_model_unlock((char *)"ptp_lock_of_stmmac_priv");
  
#line 772 
  spin_unlock_irqrestore(lock,flags);
  
#line 773 
  return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 780 
  ldv_spin_model_lock((char *)"ptp_lock_of_stmmac_priv");
  
#line 782 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 790 
  ldv_spin_model_unlock((char *)"ptp_lock_of_stmmac_priv");
  
#line 792 
  spin_unlock_irqrestore(lock,flags);
  
#line 793 
  return;
}


#line 796  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1)
{
  
#line 800 
  ldv_spin_model_lock((char *)"ptp_lock_of_stmmac_priv");
  
#line 802 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 803 
  return;
}


#line 806  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ptp.c.aux"
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags)
{
  
#line 810 
  ldv_spin_model_unlock((char *)"ptp_lock_of_stmmac_priv");
  
#line 812 
  spin_unlock_irqrestore(lock,flags);
  
#line 813 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_hwtimestamp const stmmac_ptp;


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static void stmmac_config_hw_tstamping(void *ioaddr, u32 data)
{
  
#line 33 
  writel(data,(void volatile *)(ioaddr + 1792U));
  
#line 34 
  return;
}


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static void stmmac_config_sub_second_increment(void *ioaddr)
{
  unsigned long data;
  
#line 38 
  u32 value = readl((void const volatile *)(ioaddr + 1792U));
  
#line 45 
  data = 20UL;
  
#line 48 
  if ((value & 512U) == 0U) 
#line 49 
                            data = (data * 1000UL) / 465UL; else ;
  
#line 51 
  writel((unsigned int)data,(void volatile *)(ioaddr + 1796U));
  
#line 52 
  return;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static int stmmac_init_systime(void *ioaddr, u32 sec, u32 nsec)
{
  int __retres;
  int limit;
  u32 value;
  unsigned int tmp;
  int tmp_1;
  
#line 59 
  writel(sec,(void volatile *)(ioaddr + 1808U));
  
#line 60 
  writel(nsec,(void volatile *)(ioaddr + 1812U));
  
#line 62 
  value = readl((void const volatile *)(ioaddr + 1792U));
  
#line 63 
  value |= 4U;
  
#line 64 
  writel(value,(void volatile *)(ioaddr + 1792U));
  
#line 67 
  limit = 10;
  
#line 68 
  goto ldv_45588;
  ldv_45587: 
#line 69 
  ;
  
#line 69 
  tmp = readl((void const volatile *)(ioaddr + 1792U));
  
#line 69 
  if ((tmp & 4U) == 0U) 
#line 70 
                        goto ldv_45582; else ;
  {
    
#line 71 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 71 
      goto ldv_45585;
      ldv_45584: 
#line 72 
      ;
      
#line 71 
      __const_udelay(4295000UL);
      ldv_45585: 
#line 73 
      ;
      
#line 71 
      tmp_0 = __ms;
      
#line 71 
      __ms -= 1UL;
      
#line 71 
      ;
      
#line 71 
      if (tmp_0 != 0UL) 
#line 73 
                        goto ldv_45584; else 
#line 76 
                                             goto ldv_45586;
      ldv_45586: 
#line 77 
      ;
    }
  }
  ldv_45588: 
#line 80 
  ;
  
#line 68 
  tmp_1 = limit;
  
#line 68 
  limit -= 1;
  
#line 68 
  ;
  
#line 68 
  if (tmp_1 != 0) 
#line 70 
                  goto ldv_45587; else 
#line 73 
                                       goto ldv_45582;
  ldv_45582: 
#line 74 
  ;
  
#line 73 
  if (limit < 0) {
    
#line 74 
    __retres = -16;
    
#line 74 
    goto return_label;
  }
  else ;
  
#line 76 
  __retres = 0;
  return_label: 
#line 76 
                return __retres;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static int stmmac_config_addend(void *ioaddr, u32 addend)
{
  int __retres;
  u32 value;
  int limit;
  unsigned int tmp;
  int tmp_1;
  
#line 84 
  writel(addend,(void volatile *)(ioaddr + 1816U));
  
#line 86 
  value = readl((void const volatile *)(ioaddr + 1792U));
  
#line 87 
  value |= 32U;
  
#line 88 
  writel(value,(void volatile *)(ioaddr + 1792U));
  
#line 91 
  limit = 10;
  
#line 92 
  goto ldv_45601;
  ldv_45600: 
#line 93 
  ;
  
#line 93 
  tmp = readl((void const volatile *)(ioaddr + 1792U));
  
#line 93 
  if ((tmp & 32U) == 0U) 
#line 94 
                         goto ldv_45595; else ;
  {
    
#line 95 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 95 
      goto ldv_45598;
      ldv_45597: 
#line 96 
      ;
      
#line 95 
      __const_udelay(4295000UL);
      ldv_45598: 
#line 97 
      ;
      
#line 95 
      tmp_0 = __ms;
      
#line 95 
      __ms -= 1UL;
      
#line 95 
      ;
      
#line 95 
      if (tmp_0 != 0UL) 
#line 97 
                        goto ldv_45597; else 
#line 100 
                                             goto ldv_45599;
      ldv_45599: 
#line 101 
      ;
    }
  }
  ldv_45601: 
#line 104 
  ;
  
#line 92 
  tmp_1 = limit;
  
#line 92 
  limit -= 1;
  
#line 92 
  ;
  
#line 92 
  if (tmp_1 != 0) 
#line 94 
                  goto ldv_45600; else 
#line 97 
                                       goto ldv_45595;
  ldv_45595: 
#line 98 
  ;
  
#line 97 
  if (limit < 0) {
    
#line 98 
    __retres = -16;
    
#line 98 
    goto return_label;
  }
  else ;
  
#line 100 
  __retres = 0;
  return_label: 
#line 100 
                return __retres;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static int stmmac_adjust_systime(void *ioaddr, u32 sec, u32 nsec, int add_sub)
{
  int __retres;
  u32 value;
  int limit;
  unsigned int tmp;
  int tmp_1;
  
#line 109 
  writel(sec,(void volatile *)(ioaddr + 1808U));
  
#line 110 
  writel((unsigned int)(add_sub << 31) | nsec,(void volatile *)(ioaddr + 1812U));
  
#line 113 
  value = readl((void const volatile *)(ioaddr + 1792U));
  
#line 114 
  value |= 8U;
  
#line 115 
  writel(value,(void volatile *)(ioaddr + 1792U));
  
#line 118 
  limit = 10;
  
#line 119 
  goto ldv_45616;
  ldv_45615: 
#line 120 
  ;
  
#line 120 
  tmp = readl((void const volatile *)(ioaddr + 1792U));
  
#line 120 
  if ((tmp & 8U) == 0U) 
#line 121 
                        goto ldv_45610; else ;
  {
    
#line 122 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 122 
      goto ldv_45613;
      ldv_45612: 
#line 123 
      ;
      
#line 122 
      __const_udelay(4295000UL);
      ldv_45613: 
#line 124 
      ;
      
#line 122 
      tmp_0 = __ms;
      
#line 122 
      __ms -= 1UL;
      
#line 122 
      ;
      
#line 122 
      if (tmp_0 != 0UL) 
#line 124 
                        goto ldv_45612; else 
#line 127 
                                             goto ldv_45614;
      ldv_45614: 
#line 128 
      ;
    }
  }
  ldv_45616: 
#line 131 
  ;
  
#line 119 
  tmp_1 = limit;
  
#line 119 
  limit -= 1;
  
#line 119 
  ;
  
#line 119 
  if (tmp_1 != 0) 
#line 121 
                  goto ldv_45615; else 
#line 124 
                                       goto ldv_45610;
  ldv_45610: 
#line 125 
  ;
  
#line 124 
  if (limit < 0) {
    
#line 125 
    __retres = -16;
    
#line 125 
    goto return_label;
  }
  else ;
  
#line 127 
  __retres = 0;
  return_label: 
#line 127 
                return __retres;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
static u64 stmmac_get_systime(void *ioaddr)
{
  u64 ns;
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 134 
  tmp = readl((void const volatile *)(ioaddr + 1804U));
  
#line 134 
  ns = (unsigned long long)tmp;
  
#line 136 
  tmp_0 = readl((void const volatile *)(ioaddr + 1800U));
  
#line 136 
  ns = (unsigned long long)tmp_0 * 1000000000ULL + ns;
  
#line 138 
  return ns;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c"
struct stmmac_hwtimestamp const stmmac_ptp = {.config_hw_tstamping = & stmmac_config_hw_tstamping, .config_sub_second_increment = & stmmac_config_sub_second_increment, .init_systime = & stmmac_init_systime, .config_addend = & stmmac_config_addend, .adjust_systime = & stmmac_adjust_systime, .get_systime = & stmmac_get_systime};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100.h"
struct stmmac_dma_ops const dwmac100_dma_ops;


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_dma.h"
void dwmac_enable_dma_transmission(void *ioaddr);


#line 108 
void dwmac_enable_dma_irq(void *ioaddr);


#line 109 
void dwmac_disable_dma_irq(void *ioaddr);


#line 110 
void dwmac_dma_start_tx(void *ioaddr);


#line 111 
void dwmac_dma_stop_tx(void *ioaddr);


#line 112 
void dwmac_dma_start_rx(void *ioaddr);


#line 113 
void dwmac_dma_stop_rx(void *ioaddr);


#line 114 
int dwmac_dma_interrupt(void *ioaddr, struct stmmac_extra_stats *x);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c"
static int dwmac100_dma_init(void *ioaddr, int pbl, int fb, int mb, int burst_len, u32 dma_tx, u32 dma_rx, int atds)
{
  int __retres;
  int limit;
  unsigned int tmp_0;
  int tmp_2;
  
#line 38 
  u32 value = readl((void const volatile *)(ioaddr + 4096U));
  
#line 42 
  value |= 1U;
  
#line 43 
  writel(value,(void volatile *)(ioaddr + 4096U));
  
#line 44 
  limit = 10;
  
#line 45 
  goto ldv_45613;
  ldv_45612: 
#line 46 
  ;
  
#line 46 
  tmp_0 = readl((void const volatile *)(ioaddr + 4096U));
  
#line 46 
  if ((tmp_0 & 1U) == 0U) 
#line 47 
                          goto ldv_45607; else ;
  {
    
#line 48 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_1;
      
#line 48 
      goto ldv_45610;
      ldv_45609: 
#line 49 
      ;
      
#line 48 
      __const_udelay(4295000UL);
      ldv_45610: 
#line 50 
      ;
      
#line 48 
      tmp_1 = __ms;
      
#line 48 
      __ms -= 1UL;
      
#line 48 
      ;
      
#line 48 
      if (tmp_1 != 0UL) 
#line 50 
                        goto ldv_45609; else 
#line 53 
                                             goto ldv_45611;
      ldv_45611: 
#line 54 
      ;
    }
  }
  ldv_45613: 
#line 57 
  ;
  
#line 45 
  tmp_2 = limit;
  
#line 45 
  limit -= 1;
  
#line 45 
  ;
  
#line 45 
  if (tmp_2 != 0) 
#line 47 
                  goto ldv_45612; else 
#line 50 
                                       goto ldv_45607;
  ldv_45607: 
#line 51 
  ;
  
#line 50 
  if (limit < 0) {
    
#line 51 
    __retres = -16;
    
#line 51 
    goto return_label;
  }
  else ;
  
#line 54 
  writel((unsigned int)(pbl << 8),(void volatile *)(ioaddr + 4096U));
  
#line 58 
  writel(106593U,(void volatile *)(ioaddr + 4124U));
  
#line 63 
  writel(dma_tx,(void volatile *)(ioaddr + 4112U));
  
#line 64 
  writel(dma_rx,(void volatile *)(ioaddr + 4108U));
  
#line 66 
  __retres = 0;
  return_label: 
#line 66 
                return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c"
static void dwmac100_dma_operation_mode(void *ioaddr, int txmode, int rxmode, int rxfifosz)
{
  
#line 77 
  u32 csr6 = readl((void const volatile *)(ioaddr + 4120U));
  
#line 79 
  if (txmode <= 32) 
#line 80 
                    csr6 |= 4227072U;
  else 
    
#line 81 
    if (txmode <= 64) 
#line 82 
                      csr6 |= 16384U; else 
#line 84 
                                           csr6 |= 32768U;
  
#line 86 
  writel(csr6,(void volatile *)(ioaddr + 4120U));
  
#line 87 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c"
static void dwmac100_dump_dma_regs(void *ioaddr)
{
  int i;
  {
    
#line 93 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac100_dump_dma_regs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c", .format = "DWMAC 100 DMA CSR\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))93U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 93 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 93 
                                                        __dynamic_pr_debug(& descriptor,"DWMAC 100 DMA CSR\n"); else ;
  }
  
#line 94 
  i = 0;
  
#line 94 
  goto ldv_45629;
  ldv_45628: 
#line 95 
  ;
  {
    
#line 95 
    struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "dwmac100_dump_dma_regs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c", .format = "\t CSR%d (offset 0x%x): 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))97U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 95 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) {
      unsigned int tmp;
      
#line 95 
      tmp = readl((void const volatile *)(ioaddr + ((unsigned int)(i * 4) + 4096U)));
      
#line 95 
      ;
      
#line 95 
      ;
      
#line 95 
      __dynamic_pr_debug(& descriptor_0,"\t CSR%d (offset 0x%x): 0x%08x\n",i,(i + 1024) * 4,tmp);
    }
    else ;
  }
  
#line 94 
  i += 1;
  ldv_45629: 
#line 95 
  ;
  
#line 94 
  if (i <= 8) 
#line 96 
              goto ldv_45628; else 
#line 99 
                                   goto ldv_45630;
  ldv_45630: 
#line 100 
  ;
  {
    
#line 99 
    struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "dwmac100_dump_dma_regs", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c", .format = "\tCSR20 (0x%x): 0x%08x, CSR21 (0x%x): 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))101U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 99 
    if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) {
      unsigned int tmp_0;
      unsigned int tmp_1;
      
#line 99 
      tmp_0 = readl((void const volatile *)(ioaddr + 4180U));
      
#line 99 
      tmp_1 = readl((void const volatile *)(ioaddr + 4176U));
      
#line 99 
      __dynamic_pr_debug(& descriptor_1,"\tCSR20 (0x%x): 0x%08x, CSR21 (0x%x): 0x%08x\n",4176,tmp_1,4180,tmp_0);
    }
    else ;
  }
  
#line 101 
  return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c"
static void dwmac100_dma_diagnostic_fr(void *data, struct stmmac_extra_stats *x, void *ioaddr)
{
  
#line 108 
  struct net_device_stats *stats = (struct net_device_stats *)data;
  
#line 109 
  u32 csr8 = readl((void const volatile *)(ioaddr + 4128U));
  
#line 111 
  if ((long)(csr8 != 0U) != 0L) {
    
#line 112 
    if ((csr8 & 268435456U) != 0U) {
      
#line 113 
      stats->rx_over_errors += 2048UL;
      
#line 114 
      x->rx_overflow_cntr += 2048UL;
    }
    else {
      unsigned int ove_cntr;
      
#line 117 
      ove_cntr = (csr8 >> 17) & 2047U;
      
#line 118 
      stats->rx_over_errors += (unsigned long)ove_cntr;
      
#line 119 
      x->rx_overflow_cntr += (unsigned long)ove_cntr;
    }
    
#line 122 
    if ((csr8 & 65536U) != 0U) {
      
#line 123 
      stats->rx_missed_errors += 65535UL;
      
#line 124 
      x->rx_missed_cntr += 65535UL;
    }
    else {
      
#line 126 
      unsigned int miss_f = csr8 & 65535U;
      
#line 127 
      stats->rx_missed_errors += (unsigned long)miss_f;
      
#line 128 
      x->rx_missed_cntr += (unsigned long)miss_f;
    }
  }
  else ;
  
#line 131 
  return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_dma.c"
struct stmmac_dma_ops const dwmac100_dma_ops = {.init = & dwmac100_dma_init, .dump_regs = & dwmac100_dump_dma_regs, .dma_mode = & dwmac100_dma_operation_mode, .dma_diagnostic_fr = & dwmac100_dma_diagnostic_fr, .enable_dma_transmission = & dwmac_enable_dma_transmission, .enable_dma_irq = & dwmac_enable_dma_irq, .disable_dma_irq = & dwmac_disable_dma_irq, .start_tx = & dwmac_dma_start_tx, .stop_tx = & dwmac_dma_stop_tx, .start_rx = & dwmac_dma_start_rx, .stop_rx = & dwmac_dma_stop_rx, .dma_interrupt = & dwmac_dma_interrupt, .get_hw_feature = (unsigned int (*)(void *))0, .rx_watchdog = (void (*)(void *, u32 ))0};
unsigned short __builtin_bswap16(unsigned short);

void __builtin_prefetch(void const * , ...);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
void print_hex_dump(char const *, char const *, int, int, int, void const *, size_t, bool);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 67 
int strcmp(char const *, char const *);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR_0(void const *ptr);


#line 50 
static bool IS_ERR_OR_NULL(void const *ptr);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 350 
static void ldv_spin_lock_65(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_83(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 399 
static void ldv_spin_unlock_66(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_85(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_99(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_100(spinlock_t *lock);


#line 462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 464 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 465 
  return;
}


#line 494 
static void ldv_spin_unlock_irqrestore_77_0(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_110(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_78_0(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_109(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_111(spinlock_t *ldv_func_arg1);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned int jiffies_to_usecs(unsigned long const);


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 365 
unsigned long __usecs_to_jiffies(unsigned int const);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 369 
  __retres = (unsigned long)(((long)u + 3999L) / 4000L);
  
#line 369 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 410 
  if (0 != 0) {
    unsigned int tmp;
    unsigned long tmp_0;
    
#line 411 
    tmp = jiffies_to_usecs(4611686018427387902UL);
    
#line 411 
    ;
    
#line 411 
    if (tmp < u) {
      
#line 412 
      __retres = 4611686018427387902UL;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    tmp_0 = _usecs_to_jiffies(u);
    
#line 413 
    __retres = tmp_0;
    
#line 413 
    goto return_label;
  }
  else {
    unsigned long tmp_1;
    
#line 415 
    tmp_1 = __usecs_to_jiffies(u);
    
#line 415 
    __retres = tmp_1;
    
#line 415 
    goto return_label;
  }
  return_label: 
#line 410 
                return __retres;
}


#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static ktime_t ns_to_ktime(u64 ns)
{
  
#line 285 
  ktime_t const ktime_zero = {.tv64 = 0LL};
  
#line 287 
  ktime_t __constr_expr_17 = {.tv64 = (long long)((unsigned long long)ktime_zero.tv64 + ns)};
  
#line 287 
  return __constr_expr_17;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
void getnstimeofday64(struct timespec *);


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
__inline static void getnstimeofday(struct timespec *ts)
{
  
#line 54 
  getnstimeofday64(ts);
  
#line 55 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_98(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_76(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_91(struct timer_list *ldv_func_arg1);


#line 244 
static int ldv_del_timer_sync_92(struct timer_list *ldv_func_arg1);


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
int clk_prepare(struct clk *);


#line 193 
void clk_unprepare(struct clk *);


#line 237 
struct clk *devm_clk_get(struct device *, char const *);


#line 249 
int clk_enable(struct clk *);


#line 265 
void clk_disable(struct clk *);


#line 272 
unsigned long clk_get_rate(struct clk *);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static int clk_prepare_enable(struct clk *clk)
{
  int __retres;
  int ret;
  
#line 471 
  ret = clk_prepare(clk);
  
#line 472 
  if (ret != 0) {
    
#line 473 
    __retres = ret;
    
#line 473 
    goto return_label;
  }
  else ;
  
#line 474 
  ret = clk_enable(clk);
  
#line 475 
  if (ret != 0) 
#line 476 
                clk_unprepare(clk); else ;
  
#line 478 
  __retres = ret;
  return_label: 
#line 478 
                return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static void clk_disable_unprepare(struct clk *clk)
{
  
#line 484 
  clk_disable(clk);
  
#line 485 
  clk_unprepare(clk);
  
#line 486 
  return;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static phys_addr_t virt_to_phys(void volatile *address)
{
  phys_addr_t tmp;
  
#line 120 
  tmp = (phys_addr_t)__phys_addr((unsigned long)address);
  
#line 120 
  return tmp;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_86(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_87(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_88(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_90(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_93(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_94(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 177 
static void ldv_free_irq_95(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
ssize_t seq_read(struct file *, char *, size_t, loff_t *);


#line 115 
loff_t seq_lseek(struct file *, loff_t, int);


#line 122 
int seq_printf(struct seq_file *, char const * , ...);


#line 131 
int single_open(struct file *, int (*)(struct seq_file *, void *), void *);


#line 133 
int single_release(struct inode *, struct file *);


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
int pinctrl_pm_select_default_state(struct device *);


#line 45 
int pinctrl_pm_select_sleep_state(struct device *);


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_may_wakeup(struct device *dev)
{
  bool __retres;
  
#line 88 
  __retres = (_Bool)(((unsigned int)*((unsigned char *)(& dev->power) + 4UL) != 0U && dev->power.wakeup != (struct wakeup_source *)0) != 0);
  
#line 88 
  return __retres;
}


#line 102 
void device_set_wakeup_capable(struct device *, bool);


#line 110 
void pm_wakeup_event(struct device *, unsigned int);


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct skb_shared_hwtstamps *skb_hwtstamps(struct sk_buff *skb)
{
  struct skb_shared_hwtstamps *__retres;
  unsigned char *tmp;
  
#line 1002 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1002 
  __retres = & ((struct skb_shared_info *)tmp)->hwtstamps;
  
#line 1002 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static void dql_queued(struct dql *dql, unsigned int count)
{
  
#line 74 
  if ((long)(count > 268435455U) != 0L) {
    
#line 76 
    ldv_inline_asm();
    
#line 74 
    ;
  }
  else ;
  
#line 76 
  dql->last_obj_cnt = count;
  
#line 77 
  ldv_inline_asm();
  
#line 85 
  dql->num_queued += count;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static int dql_avail(struct dql const *dql)
{
  int __retres;
  unsigned int const volatile *tmp;
  unsigned int const volatile *tmp_0;
  {
    
#line 91 
    unsigned int const __var = 0U;
    
#line 91 
    tmp = (unsigned int const volatile *)(& dql->adj_limit);
  }
  {
    
#line 91 
    unsigned int const __var_0 = 0U;
    
#line 91 
    tmp_0 = (unsigned int const volatile *)(& dql->num_queued);
  }
  
#line 91 
  ;
  
#line 91 
  __retres = (int)(*tmp - *tmp_0);
  
#line 91 
  return __retres;
}


#line 95 
void dql_completed(struct dql *, unsigned int);


#line 98 
void dql_reset(struct dql *);


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device *phy_connect(struct net_device *, char const *, void (*)(struct net_device *), phy_interface_t);


#line 745 
void phy_disconnect(struct phy_device *);


#line 747 
void phy_start(struct phy_device *);


#line 748 
void phy_stop(struct phy_device *);


#line 779 
int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);


#line 781 
void phy_print_status(struct phy_device *);


#line 791 
int phy_init_eee(struct phy_device *, bool);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_106(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_sent_queue(struct netdev_queue *dev_queue, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2649 
  dql_queued(& dev_queue->dql,bytes);
  
#line 2651 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2651 
  if ((long)(tmp >= 0) != 0L) 
#line 2652 
                              goto return_label; else ;
  
#line 2654 
  set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2655 
  ldv_inline_asm();
  
#line 2664 
  tmp_0 = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2664 
  if ((long)(tmp_0 >= 0) != 0L) 
#line 2665 
                                set_bit(1L,(unsigned long volatile *)(& dev_queue->state)); else ;
  return_label: 
#line 2666 
                return;
}


#line 2678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_sent_queue(struct net_device *dev, unsigned int bytes)
{
  struct netdev_queue *tmp;
  
#line 2680 
  ;
  
#line 2680 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2680 
  netdev_tx_sent_queue(tmp,bytes);
  
#line 2681 
  return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_completed_queue(struct netdev_queue *dev_queue, unsigned int pkts, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2687 
  if ((long)(bytes == 0U) != 0L) 
#line 2688 
                                 goto return_label; else ;
  
#line 2690 
  dql_completed(& dev_queue->dql,bytes);
  
#line 2691 
  ldv_inline_asm();
  
#line 2699 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2699 
  if (tmp < 0) 
#line 2700 
               goto return_label; else ;
  
#line 2702 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2702 
  if (tmp_0 != 0) 
#line 2703 
                  netif_schedule_queue(dev_queue); else ;
  return_label: 
#line 2704 
                return;
}


#line 2717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_completed_queue(struct net_device *dev, unsigned int pkts, unsigned int bytes)
{
  struct netdev_queue *tmp;
  
#line 2720 
  ;
  
#line 2720 
  ;
  
#line 2720 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2720 
  netdev_tx_completed_queue(tmp,pkts,bytes);
  
#line 2721 
  return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_reset_queue(struct netdev_queue *q)
{
  
#line 2726 
  set_bit(1L,(unsigned long volatile *)(& q->state));
  
#line 2727 
  dql_reset(& q->dql);
  
#line 2728 
  return;
}


#line 2738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_reset_queue(struct net_device *dev_queue)
{
  struct netdev_queue *tmp;
  
#line 2740 
  tmp = netdev_get_tx_queue((struct net_device const *)dev_queue,0U);
  
#line 2740 
  netdev_tx_reset_queue(tmp);
  
#line 2741 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_consume_skb_any(struct sk_buff *skb)
{
  
#line 2938 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_CONSUMED);
  
#line 2939 
  return;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_lock(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3219 
  ldv_spin_lock_65(& dev->tx_global_lock);
  {
    int pscr_ret__;
    {
      
#line 3220 
      void const *__vpp_verify = (void const *)0;
      
#line 3220 
      void const *tmp = __vpp_verify;
    }
    
#line 3220 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3220 
      ;
      {
        int pfo_ret__;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43077;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43077;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43077;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43077;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43077: 
#line 3220 
        ;
        
#line 3220 
        tmp_0 = pfo_ret__;
      }
      
#line 3220 
      pscr_ret__ = tmp_0;
      
#line 3220 
      goto ldv_43083;
      case (unsigned long)2: 
#line 3220 
      ;
      {
        int pfo_ret___0;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43087;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43087;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43087;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43087;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43087: 
#line 3220 
        ;
        
#line 3220 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3220 
      pscr_ret__ = tmp_0_0;
      
#line 3220 
      goto ldv_43083;
      case (unsigned long)4: 
#line 3220 
      ;
      {
        int pfo_ret___1;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43096;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43096;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43096;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43096;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43096: 
#line 3220 
        ;
        
#line 3220 
        tmp_1 = pfo_ret___1;
      }
      
#line 3220 
      pscr_ret__ = tmp_1;
      
#line 3220 
      goto ldv_43083;
      case (unsigned long)8: 
#line 3220 
      ;
      {
        int pfo_ret___2;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43105;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43105;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43105;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43105;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43105: 
#line 3220 
        ;
        
#line 3220 
        tmp_2 = pfo_ret___2;
      }
      
#line 3220 
      pscr_ret__ = tmp_2;
      
#line 3220 
      goto ldv_43083;
      default: 
#line 3220 
      ;
      
#line 3220 
      __bad_size_call_parameter();
      
#line 3220 
      goto ldv_43083;
    }
    ldv_43083: 
#line 3220 
    ;
    
#line 3220 
    tmp_3 = pscr_ret__;
  }
  
#line 3220 
  cpu = tmp_3;
  
#line 3221 
  i = 0U;
  
#line 3221 
  goto ldv_43115;
  ldv_43114: 
#line 3222 
  ;
  {
    
#line 3222 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3230 
    __netif_tx_lock(txq,cpu);
    
#line 3231 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3232 
    __netif_tx_unlock(txq);
  }
  
#line 3221 
  i += 1U;
  ldv_43115: 
#line 3222 
  ;
  
#line 3221 
  if (dev->num_tx_queues > i) 
#line 3223 
                              goto ldv_43114; else 
#line 3226 
                                                   goto ldv_43116;
  ldv_43116: 
#line 3227 
  ;
  
#line 3228 
  return;
}


#line 3242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_unlock(struct net_device *dev)
{
  unsigned int i;
  
#line 3246 
  i = 0U;
  
#line 3246 
  goto ldv_43126;
  ldv_43125: 
#line 3247 
  ;
  {
    
#line 3247 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3253 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3254 
    netif_schedule_queue(txq);
  }
  
#line 3246 
  i += 1U;
  ldv_43126: 
#line 3247 
  ;
  
#line 3246 
  if (dev->num_tx_queues > i) 
#line 3248 
                              goto ldv_43125; else 
#line 3251 
                                                   goto ldv_43127;
  ldv_43127: 
#line 3252 
  ;
  
#line 3256 
  ldv_spin_unlock_66(& dev->tx_global_lock);
  
#line 3257 
  return;
}


#line 3355 
static int ldv_register_netdev_104(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_105(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_107(struct net_device *ldv_func_arg1);


#line 3683 
void netdev_update_features(struct net_device *);


#line 3824 
void netdev_alert(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_103(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static int __vlan_get_tag(struct sk_buff const *skb, u16 *vlan_tci)
{
  int __retres;
  
#line 425 
  struct vlan_ethhdr *veth = (struct vlan_ethhdr *)skb->data;
  
#line 427 
  if ((unsigned int)veth->h_vlan_proto != 129U && (unsigned int)veth->h_vlan_proto != 43144U) {
    
#line 429 
    __retres = -22;
    
#line 429 
    goto return_label;
  }
  else ;
  
#line 431 
  if (0 != 0) 
#line 431 
              *vlan_tci = (unsigned short)(((int)veth->h_vlan_TCI << 8) | ((int)veth->h_vlan_TCI >> 8)); else 
                                                                    
#line 431 
                                                                    *vlan_tci = __fswab16((unsigned short)((int)veth->h_vlan_TCI));
  
#line 432 
  __retres = 0;
  return_label: 
#line 432 
                return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_101(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 58 
static struct dentry *ldv_debugfs_create_file_102(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 66 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 77 
void debugfs_remove_recursive(struct dentry *);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc.h"
void dwmac_mmc_ctrl(void *ioaddr, unsigned int mode);


#line 132 
void dwmac_mmc_intr_all_mask(void *ioaddr);


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
struct stmmac_desc_ops const enh_desc_ops;


#line 465 
struct mac_device_info *dwmac1000_setup(void *ioaddr, int mcbins, int perfect_uc_entries);


#line 467 
struct mac_device_info *dwmac100_setup(void *ioaddr);


#line 474 
void stmmac_set_mac(void *ioaddr, bool enable);


#line 478 
struct stmmac_mode_ops const chain_mode_ops;


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/reset.h"
int reset_control_assert(struct reset_control *);


#line 12 
int reset_control_deassert(struct reset_control *);


#line 17 
struct reset_control *devm_reset_control_get(struct device *, char const *);


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac.h"
void stmmac_set_ethtool_ops(struct net_device *netdev);


#line 143 
int stmmac_resume(struct net_device *ndev);


#line 144 
int stmmac_suspend(struct net_device *ndev);


#line 145 
int stmmac_dvr_remove(struct net_device *ndev);


#line 146 
int stmmac_dvr_probe(struct device *device, struct plat_stmmacenet_data *plat_dat, struct stmmac_resources *res);


#line 149 
void stmmac_disable_eee_mode(struct stmmac_priv *priv);


#line 150 
bool stmmac_eee_init(struct stmmac_priv *priv);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_mdio.h"
struct phy_device *of_phy_connect(struct net_device *, struct device_node *, void (*)(struct net_device *), u32, phy_interface_t);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int watchdog = 5000;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int debug = -1;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int phyaddr = -1;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int dma_txsize = 256;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int dma_rxsize = 256;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int flow_ctrl = 0;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int pause = 65535;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int tc = 64;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int buf_sz = 1536;

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static u32 const default_msg_level = 63U;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int eee_timer = 1000;

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static unsigned int chain_mode;

#line 118 
static irqreturn_t stmmac_interrupt(int irq, void *dev_id);


#line 121 
static int stmmac_init_fs(struct net_device *dev);


#line 122 
static void stmmac_exit_fs(struct net_device *dev);


#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_verify_args(void)
{
  
#line 134 
  if ((long)(watchdog < 0) != 0L) 
#line 135 
                                  watchdog = 5000; else ;
  
#line 136 
  if ((long)(dma_rxsize < 0) != 0L) 
#line 137 
                                    dma_rxsize = 256; else ;
  
#line 138 
  if ((long)(dma_txsize < 0) != 0L) 
#line 139 
                                    dma_txsize = 256; else ;
  
#line 140 
  if ((long)((unsigned int)buf_sz + 4294965760U > 14848U) != 0L) 
#line 141 
                                                                 buf_sz = 1536; else ;
  
#line 142 
  if ((long)(flow_ctrl > 1) != 0L) 
#line 143 
                                   flow_ctrl = 3;
  else 
    
#line 144 
    if ((long)(flow_ctrl < 0) != 0L) 
#line 145 
                                     flow_ctrl = 0; else ;
  
#line 146 
  if ((long)((unsigned int)pause > 65535U) != 0L) 
#line 147 
                                                  pause = 65535; else ;
  
#line 148 
  if (eee_timer < 0) 
#line 149 
                     eee_timer = 1000; else ;
  
#line 150 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_clk_csr_set(struct stmmac_priv *priv)
{
  u32 clk_rate;
  unsigned long tmp;
  
#line 168 
  tmp = clk_get_rate(priv->stmmac_clk);
  
#line 168 
  clk_rate = (unsigned int)tmp;
  
#line 177 
  if ((priv->clk_csr & 32) == 0) {
    
#line 178 
    if (clk_rate <= 34999999U) 
#line 179 
                               priv->clk_csr = 2;
    else 
      
#line 180 
      if (clk_rate + 4259967296U <= 24999999U) 
#line 181 
                                               priv->clk_csr = 3;
      else 
        
#line 182 
        if (clk_rate + 4234967296U <= 39999999U) 
#line 183 
                                                 priv->clk_csr = 0;
        else 
          
#line 184 
          if (clk_rate + 4194967296U <= 49999999U) 
#line 185 
                                                   priv->clk_csr = 1;
          else 
            
#line 186 
            if (clk_rate + 4144967296U <= 99999999U) 
#line 187 
                                                     priv->clk_csr = 4;
            else 
              
#line 188 
              if (clk_rate + 4044967296U <= 49999999U) 
#line 189 
                                                       priv->clk_csr = 5; else ;
  }
  else ;
  
#line 190 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void print_pkt(unsigned char *buf, int len)
{
  {
    
#line 195 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "len = %d byte, buf addr: 0x%p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))195U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 195 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 195 
                                                        __dynamic_pr_debug(& descriptor,"len = %d byte, buf addr: 0x%p\n",len,buf); else ;
  }
  {
    
#line 196 
    struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "print_pkt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))196U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 196 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 196 
                                                          print_hex_dump("\001","",2,16,1,(void const *)buf,(unsigned long)len,(_Bool)1); else ;
  }
  
#line 198 
  return;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
__inline static u32 stmmac_tx_avail(struct stmmac_priv *priv)
{
  u32 __retres;
  
#line 204 
  __retres = ((priv->dirty_tx + priv->dma_tx_size) - priv->cur_tx) + 4294967295U;
  
#line 204 
  return __retres;
}


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
__inline static void stmmac_hw_fix_mac_speed(struct stmmac_priv *priv)
{
  
#line 215 
  struct phy_device *phydev = priv->phydev;
  
#line 217 
  if ((long)((priv->plat)->fix_mac_speed != (void (*)(void *, unsigned int ))0) != 0L) 
    
#line 218 
    (*((priv->plat)->fix_mac_speed))((priv->plat)->bsp_priv,(unsigned int)phydev->speed); else ;
  
#line 219 
  return;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_enable_eee_mode(struct stmmac_priv *priv)
{
  
#line 230 
  if (priv->dirty_tx == priv->cur_tx && ! priv->tx_path_in_lpi_mode) 
    
#line 232 
    (*(((priv->hw)->mac)->set_eee_mode))(priv->hw); else ;
  
#line 233 
  return;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
void stmmac_disable_eee_mode(struct stmmac_priv *priv)
{
  
#line 243 
  (*(((priv->hw)->mac)->reset_eee_mode))(priv->hw);
  
#line 244 
  ldv_del_timer_sync_73(& priv->eee_ctrl_timer);
  
#line 245 
  priv->tx_path_in_lpi_mode = (_Bool)0;
  
#line 246 
  return;
}


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_eee_ctrl_timer(unsigned long arg)
{
  unsigned long tmp;
  
#line 257 
  struct stmmac_priv *priv = (struct stmmac_priv *)arg;
  
#line 259 
  stmmac_enable_eee_mode(priv);
  
#line 260 
  tmp = msecs_to_jiffies((unsigned int)eee_timer);
  
#line 260 
  ;
  
#line 260 
  ;
  
#line 260 
  ldv_mod_timer_74(& priv->eee_ctrl_timer,tmp + jiffies);
  
#line 261 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
bool stmmac_eee_init(struct stmmac_priv *priv)
{
  unsigned long flags;
  
#line 273 
  char *phy_bus_name = (priv->plat)->phy_bus_name;
  
#line 275 
  bool ret = (_Bool)0;
  
#line 280 
  if ((priv->pcs == 1 || priv->pcs == 4) || priv->pcs == 8) 
#line 282 
                                                            goto out; else ;
  
#line 285 
  if (phy_bus_name != (char *)0) {
    int tmp;
    
#line 285 
    tmp = strcmp((char const *)phy_bus_name,"fixed");
    
#line 285 
    if (tmp == 0) 
#line 286 
                  goto out; else ;
  }
  else ;
  
#line 289 
  if (priv->dma_cap.eee != 0U) {
    int tmp_0;
    
#line 290 
    int tx_lpi_timer = priv->tx_lpi_timer;
    
#line 293 
    tmp_0 = phy_init_eee(priv->phydev,(_Bool)1);
    
#line 293 
    if (tmp_0 != 0) {
      
#line 299 
      ldv___ldv_spin_lock_75(& priv->lock);
      
#line 300 
      if (priv->eee_active != 0) {
        {
          
#line 301 
          struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_eee_init", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "stmmac: disable EEE\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))301U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 301 
          if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 301 
                                                              __dynamic_pr_debug(& descriptor,"stmmac: disable EEE\n"); else ;
        }
        
#line 302 
        ldv_del_timer_sync_76(& priv->eee_ctrl_timer);
        
#line 303 
        (*(((priv->hw)->mac)->set_eee_timer))(priv->hw,0,tx_lpi_timer);
      }
      else ;
      
#line 306 
      priv->eee_active = 0;
      
#line 307 
      ldv_spin_unlock_irqrestore_77_0(& priv->lock,flags);
      
#line 308 
      goto out;
    }
    else ;
    
#line 311 
    ldv___ldv_spin_lock_78_0(& priv->lock);
    
#line 312 
    if (priv->eee_active == 0) {
      unsigned long tmp_1;
      
#line 313 
      priv->eee_active = 1;
      {
        struct lock_class_key __key;
        
#line 314 
        init_timer_key(& priv->eee_ctrl_timer,0U,"((&priv->eee_ctrl_timer))",& __key);
      }
      
#line 314 
      priv->eee_ctrl_timer.function = & stmmac_eee_ctrl_timer;
      
#line 314 
      priv->eee_ctrl_timer.data = (unsigned long)priv;
      
#line 317 
      tmp_1 = msecs_to_jiffies((unsigned int)eee_timer);
      
#line 317 
      ;
      
#line 317 
      ;
      
#line 317 
      ldv_mod_timer_79(& priv->eee_ctrl_timer,tmp_1 + jiffies);
      
#line 320 
      (*(((priv->hw)->mac)->set_eee_timer))(priv->hw,1000,tx_lpi_timer);
    }
    else ;
    
#line 325 
    (*(((priv->hw)->mac)->set_eee_pls))(priv->hw,(priv->phydev)->link);
    
#line 327 
    ret = (_Bool)1;
    
#line 328 
    ldv_spin_unlock_irqrestore_80(& priv->lock,flags);
    {
      
#line 330 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_eee_init", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "stmmac: Energy-Efficient Ethernet initialized\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))330U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 330 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 330 
                                                            __dynamic_pr_debug(& descriptor_0,"stmmac: Energy-Efficient Ethernet initialized\n"); else ;
    }
  }
  else ;
  out: 
#line 332 
  ;
  
#line 333 
  return ret;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_get_tx_hwtstamp(struct stmmac_priv *priv, unsigned int entry, struct sk_buff *skb)
{
  struct skb_shared_hwtstamps shhwtstamp;
  u64 ns;
  int tmp_0;
  
#line 349 
  void *desc = (void *)0;
  
#line 351 
  if (priv->hwts_tx_en == 0) 
#line 352 
                             goto return_label; else ;
  
#line 355 
  if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 356 
                                                goto return_label;
  else {
    unsigned char *tmp;
    
#line 355 
    tmp = skb_end_pointer((struct sk_buff const *)skb);
    
#line 355 
    ;
    
#line 355 
    if ((long)(((int)((struct skb_shared_info *)tmp)->tx_flags & 4) == 0) != 0L) 
      
#line 356 
      goto return_label; else ;
  }
  
#line 358 
  if (priv->adv_ts != 0U) 
#line 359 
                          desc = (void *)(priv->dma_etx + entry); else 
                                                                    
#line 361 
                                                                    desc = (void *)(priv->dma_tx + entry);
  
#line 364 
  tmp_0 = (*(((priv->hw)->desc)->get_tx_timestamp_status))((struct dma_desc *)desc);
  
#line 364 
  if (tmp_0 == 0) 
#line 365 
                  goto return_label; else ;
  
#line 368 
  ns = (*(((priv->hw)->desc)->get_timestamp))(desc,priv->adv_ts);
  
#line 370 
  memset((void *)(& shhwtstamp),0,8UL);
  
#line 371 
  shhwtstamp.hwtstamp = ns_to_ktime(ns);
  
#line 373 
  skb_tstamp_tx(skb,& shhwtstamp);
  return_label: 
#line 375 
                return;
}


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_get_rx_hwtstamp(struct stmmac_priv *priv, unsigned int entry, struct sk_buff *skb)
{
  u64 ns;
  int tmp;
  
#line 389 
  struct skb_shared_hwtstamps *shhwtstamp = (struct skb_shared_hwtstamps *)0;
  
#line 391 
  void *desc = (void *)0;
  
#line 393 
  if (priv->hwts_rx_en == 0) 
#line 394 
                             goto return_label; else ;
  
#line 396 
  if (priv->adv_ts != 0U) 
#line 397 
                          desc = (void *)(priv->dma_erx + entry); else 
                                                                    
#line 399 
                                                                    desc = (void *)(priv->dma_rx + entry);
  
#line 402 
  tmp = (*(((priv->hw)->desc)->get_rx_timestamp_status))(desc,priv->adv_ts);
  
#line 402 
  if (tmp == 0) 
#line 403 
                goto return_label; else ;
  
#line 406 
  ns = (*(((priv->hw)->desc)->get_timestamp))(desc,priv->adv_ts);
  
#line 407 
  shhwtstamp = skb_hwtstamps(skb);
  
#line 408 
  memset((void *)shhwtstamp,0,8UL);
  
#line 409 
  shhwtstamp->hwtstamp = ns_to_ktime(ns);
  return_label: 
#line 410 
                return;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_hwtstamp_ioctl(struct net_device *dev, struct ifreq *ifr)
{
  int __retres;
  struct hwtstamp_config config;
  struct timespec now;
  unsigned long tmp_0;
  int tmp_3;
  unsigned long tmp_2;
  
#line 425 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 428 
  u64 temp = 0ULL;
  
#line 429 
  u32 ptp_v2 = 0U;
  
#line 430 
  u32 tstamp_all = 0U;
  
#line 431 
  u32 ptp_over_ipv4_udp = 0U;
  
#line 432 
  u32 ptp_over_ipv6_udp = 0U;
  
#line 433 
  u32 ptp_over_ethernet = 0U;
  
#line 434 
  u32 snap_type_sel = 0U;
  
#line 435 
  u32 ts_master_en = 0U;
  
#line 436 
  u32 ts_event_en = 0U;
  
#line 437 
  u32 value = 0U;
  
#line 439 
  if (priv->dma_cap.time_stamp == 0U && priv->adv_ts == 0U) {
    
#line 440 
    netdev_alert((struct net_device const *)priv->dev,"No support for HW time stamping\n");
    
#line 441 
    priv->hwts_tx_en = 0;
    
#line 442 
    priv->hwts_rx_en = 0;
    
#line 444 
    __retres = -95;
    
#line 444 
    goto return_label;
  }
  else ;
  
#line 447 
  tmp_0 = copy_from_user((void *)(& config),(void const *)ifr->ifr_ifru.ifru_data,12UL);
  
#line 447 
  if (tmp_0 != 0UL) {
    
#line 449 
    __retres = -14;
    
#line 449 
    goto return_label;
  }
  else ;
  {
    
#line 451 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_hwtstamp_ioctl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s config flags:0x%x, tx_type:0x%x, rx_filter:0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))452U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 451 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 451 
                                                        __dynamic_pr_debug(& descriptor,"%s config flags:0x%x, tx_type:0x%x, rx_filter:0x%x\n","stmmac_hwtstamp_ioctl",config.flags,config.tx_type,config.rx_filter); else ;
  }
  
#line 455 
  if (config.flags != 0) {
    
#line 456 
    __retres = -22;
    
#line 456 
    goto return_label;
  }
  else ;
  
#line 458 
  if ((unsigned int)config.tx_type > 1U) {
    
#line 460 
    __retres = -34;
    
#line 460 
    goto return_label;
  }
  else ;
  
#line 462 
  if (priv->adv_ts != 0U) {
    
#line 463 
    switch (config.rx_filter) {
      case 0: 
#line 464 
      ;
      
#line 466 
      config.rx_filter = 0;
      
#line 467 
      goto ldv_53219;
      case 3: 
#line 469 
      ;
      
#line 471 
      config.rx_filter = 3;
      
#line 473 
      snap_type_sel = 65536U;
      
#line 475 
      ptp_over_ipv4_udp = 8192U;
      
#line 476 
      ptp_over_ipv6_udp = 4096U;
      
#line 477 
      goto ldv_53219;
      case 4: 
#line 479 
      ;
      
#line 481 
      config.rx_filter = 4;
      
#line 483 
      ts_event_en = 16384U;
      
#line 485 
      ptp_over_ipv4_udp = 8192U;
      
#line 486 
      ptp_over_ipv6_udp = 4096U;
      
#line 487 
      goto ldv_53219;
      case 5: 
#line 489 
      ;
      
#line 491 
      config.rx_filter = 5;
      
#line 493 
      ts_master_en = 32768U;
      
#line 494 
      ts_event_en = 16384U;
      
#line 496 
      ptp_over_ipv4_udp = 8192U;
      
#line 497 
      ptp_over_ipv6_udp = 4096U;
      
#line 498 
      goto ldv_53219;
      case 6: 
#line 500 
      ;
      
#line 502 
      config.rx_filter = 6;
      
#line 503 
      ptp_v2 = 1024U;
      
#line 505 
      snap_type_sel = 65536U;
      
#line 507 
      ptp_over_ipv4_udp = 8192U;
      
#line 508 
      ptp_over_ipv6_udp = 4096U;
      
#line 509 
      goto ldv_53219;
      case 7: 
#line 511 
      ;
      
#line 513 
      config.rx_filter = 7;
      
#line 514 
      ptp_v2 = 1024U;
      
#line 516 
      ts_event_en = 16384U;
      
#line 518 
      ptp_over_ipv4_udp = 8192U;
      
#line 519 
      ptp_over_ipv6_udp = 4096U;
      
#line 520 
      goto ldv_53219;
      case 8: 
#line 522 
      ;
      
#line 524 
      config.rx_filter = 8;
      
#line 525 
      ptp_v2 = 1024U;
      
#line 527 
      ts_master_en = 32768U;
      
#line 528 
      ts_event_en = 16384U;
      
#line 530 
      ptp_over_ipv4_udp = 8192U;
      
#line 531 
      ptp_over_ipv6_udp = 4096U;
      
#line 532 
      goto ldv_53219;
      case 12: 
#line 534 
      ;
      
#line 536 
      config.rx_filter = 12;
      
#line 537 
      ptp_v2 = 1024U;
      
#line 539 
      snap_type_sel = 65536U;
      
#line 541 
      ptp_over_ipv4_udp = 8192U;
      
#line 542 
      ptp_over_ipv6_udp = 4096U;
      
#line 543 
      ptp_over_ethernet = 2048U;
      
#line 544 
      goto ldv_53219;
      case 13: 
#line 546 
      ;
      
#line 548 
      config.rx_filter = 13;
      
#line 549 
      ptp_v2 = 1024U;
      
#line 551 
      ts_event_en = 16384U;
      
#line 553 
      ptp_over_ipv4_udp = 8192U;
      
#line 554 
      ptp_over_ipv6_udp = 4096U;
      
#line 555 
      ptp_over_ethernet = 2048U;
      
#line 556 
      goto ldv_53219;
      case 14: 
#line 558 
      ;
      
#line 560 
      config.rx_filter = 14;
      
#line 561 
      ptp_v2 = 1024U;
      
#line 563 
      ts_master_en = 32768U;
      
#line 564 
      ts_event_en = 16384U;
      
#line 566 
      ptp_over_ipv4_udp = 8192U;
      
#line 567 
      ptp_over_ipv6_udp = 4096U;
      
#line 568 
      ptp_over_ethernet = 2048U;
      
#line 569 
      goto ldv_53219;
      case 1: 
#line 571 
      ;
      
#line 573 
      config.rx_filter = 1;
      
#line 574 
      tstamp_all = 256U;
      
#line 575 
      goto ldv_53219;
      default: 
#line 577 
      ;
      
#line 578 
      __retres = -34;
      
#line 578 
      goto return_label;
    }
    ldv_53219: 
#line 580 
    ;
  }
  else {
    
#line 581 
    switch (config.rx_filter) {
      case 0: 
#line 582 
      ;
      
#line 583 
      config.rx_filter = 0;
      
#line 584 
      goto ldv_53232;
      default: 
#line 585 
      ;
      
#line 587 
      config.rx_filter = 3;
      
#line 588 
      goto ldv_53232;
    }
    ldv_53232: 
#line 590 
    ;
  }
  
#line 591 
  priv->hwts_rx_en = config.rx_filter != 0;
  
#line 592 
  priv->hwts_tx_en = config.tx_type == 1;
  
#line 594 
  if (priv->hwts_tx_en == 0 && priv->hwts_rx_en == 0) 
#line 595 
                                                      (*(((priv->hw)->ptp)->config_hw_tstamping))(priv->ioaddr,0U);
  else {
    u64 tmp_1;
    
#line 597 
    value = (((((((tstamp_all | ptp_v2) | ptp_over_ethernet) | ptp_over_ipv6_udp) | ptp_over_ipv4_udp) | ts_event_en) | ts_master_en) | snap_type_sel) | 515U;
    
#line 602 
    (*(((priv->hw)->ptp)->config_hw_tstamping))(priv->ioaddr,value);
    
#line 605 
    (*(((priv->hw)->ptp)->config_sub_second_increment))(priv->ioaddr);
    
#line 618 
    temp = 214748364800000000ULL;
    
#line 619 
    tmp_1 = div_u64(temp,priv->clk_ptp_rate);
    
#line 619 
    priv->default_addend = (unsigned int)tmp_1;
    
#line 620 
    (*(((priv->hw)->ptp)->config_addend))(priv->ioaddr,priv->default_addend);
    
#line 624 
    getnstimeofday(& now);
    
#line 625 
    (*(((priv->hw)->ptp)->init_systime))(priv->ioaddr,(unsigned int)now.tv_sec,(unsigned int)now.tv_nsec);
  }
  
#line 630 
  tmp_2 = copy_to_user(ifr->ifr_ifru.ifru_data,(void const *)(& config),12UL);
  
#line 630 
  if (tmp_2 != 0UL) 
#line 630 
                    tmp_3 = -14; else 
#line 630 
                                      tmp_3 = 0;
  
#line 630 
  __retres = tmp_3;
  return_label: 
#line 630 
                return __retres;
}


#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init_ptp(struct stmmac_priv *priv)
{
  int __retres;
  bool tmp_1;
  int tmp_2;
  
#line 642 
  if (priv->dma_cap.time_stamp == 0U && priv->dma_cap.atime_stamp == 0U) {
    
#line 643 
    __retres = -95;
    
#line 643 
    goto return_label;
  }
  else ;
  
#line 646 
  priv->clk_ptp_ref = devm_clk_get(priv->device,"clk_ptp_ref");
  
#line 647 
  tmp_1 = IS_ERR_0((void const *)priv->clk_ptp_ref);
  
#line 647 
  if ((int)tmp_1 != 0) {
    unsigned long tmp;
    
#line 648 
    tmp = clk_get_rate(priv->stmmac_clk);
    
#line 648 
    priv->clk_ptp_rate = (unsigned int)tmp;
    
#line 649 
    priv->clk_ptp_ref = (struct clk *)0;
  }
  else {
    unsigned long tmp_0;
    
#line 651 
    clk_prepare_enable(priv->clk_ptp_ref);
    
#line 652 
    tmp_0 = clk_get_rate(priv->clk_ptp_ref);
    
#line 652 
    priv->clk_ptp_rate = (unsigned int)tmp_0;
  }
  
#line 655 
  priv->adv_ts = 0U;
  
#line 656 
  if (priv->dma_cap.atime_stamp != 0U && priv->extend_desc != 0) 
#line 657 
                                                                 priv->adv_ts = 1U; else ;
  
#line 659 
  if ((priv->msg_enable & 8192U) != 0U && priv->dma_cap.time_stamp != 0U) {
    
#line 660 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_init_ptp", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "IEEE 1588-2002 Time Stamp supported\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))660U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 660 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 660 
                                                        __dynamic_pr_debug(& descriptor,"IEEE 1588-2002 Time Stamp supported\n"); else ;
  }
  else ;
  
#line 662 
  if ((priv->msg_enable & 8192U) != 0U && priv->adv_ts != 0U) {
    
#line 663 
    struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_init_ptp", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "IEEE 1588-2008 Advanced Time Stamp supported\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))663U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 663 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 663 
                                                          __dynamic_pr_debug(& descriptor_0,"IEEE 1588-2008 Advanced Time Stamp supported\n"); else ;
  }
  else ;
  
#line 665 
  (priv->hw)->ptp = & stmmac_ptp;
  
#line 666 
  priv->hwts_tx_en = 0;
  
#line 667 
  priv->hwts_rx_en = 0;
  
#line 669 
  tmp_2 = stmmac_ptp_register(priv);
  
#line 669 
  __retres = tmp_2;
  return_label: 
#line 669 
                return __retres;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_release_ptp(struct stmmac_priv *priv)
{
  
#line 674 
  if (priv->clk_ptp_ref != (struct clk *)0) 
#line 675 
                                            clk_disable_unprepare(priv->clk_ptp_ref); else ;
  
#line 676 
  stmmac_ptp_unregister(priv);
  
#line 677 
  return;
}


#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_adjust_link(struct net_device *dev)
{
  unsigned long flags;
  bool tmp_1;
  
#line 690 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 691 
  struct phy_device *phydev = priv->phydev;
  
#line 693 
  int new_state = 0;
  
#line 694 
  unsigned int fc = priv->flow_ctrl;
  
#line 694 
  unsigned int pause_time = priv->pause;
  
#line 696 
  if (phydev == (struct phy_device *)0) 
#line 697 
                                        goto return_label; else ;
  
#line 699 
  ldv___ldv_spin_lock_81(& priv->lock);
  
#line 701 
  if (phydev->link != 0) {
    
#line 702 
    u32 ctrl = readl((void const volatile *)priv->ioaddr);
    
#line 706 
    if (phydev->duplex != priv->oldduplex) {
      
#line 707 
      new_state = 1;
      
#line 708 
      if (phydev->duplex == 0) 
#line 709 
                               ctrl = (unsigned int)(~ (priv->hw)->link.duplex) & ctrl; else 
                                                                    
#line 711 
                                                                    ctrl = (unsigned int)(priv->hw)->link.duplex | ctrl;
      
#line 712 
      priv->oldduplex = phydev->duplex;
    }
    else ;
    
#line 715 
    if (phydev->pause != 0) 
#line 716 
                            (*(((priv->hw)->mac)->flow_ctrl))(priv->hw,(unsigned int)phydev->duplex,fc,pause_time); else ;
    
#line 719 
    if (phydev->speed != priv->speed) {
      
#line 720 
      new_state = 1;
      
#line 721 
      switch (phydev->speed) {
        case 1000: 
#line 722 
        ;
        
#line 723 
        if ((long)((priv->plat)->has_gmac != 0) != 0L) 
#line 724 
                                                       ctrl = (unsigned int)(~ (priv->hw)->link.port) & ctrl; else ;
        
#line 725 
        stmmac_hw_fix_mac_speed(priv);
        
#line 726 
        goto ldv_53254;
        case 100: 
#line 727 
        ;
        case 10: 
#line 728 
        ;
        
#line 729 
        if ((priv->plat)->has_gmac != 0) {
          
#line 730 
          ctrl = (unsigned int)(priv->hw)->link.port | ctrl;
          
#line 731 
          if (phydev->speed == 100) 
#line 732 
                                    ctrl = (unsigned int)(priv->hw)->link.speed | ctrl; else 
                                                                    
#line 734 
                                                                    ctrl = (unsigned int)(~ (priv->hw)->link.speed) & ctrl;
        }
        else 
#line 737 
             ctrl = (unsigned int)(~ (priv->hw)->link.port) & ctrl;
        
#line 739 
        stmmac_hw_fix_mac_speed(priv);
        
#line 740 
        goto ldv_53254;
        default: 
#line 741 
        ;
        
#line 742 
        if ((priv->msg_enable & 4U) != 0U) 
#line 743 
                                           printk("\001",(char *)(& dev->name),phydev->speed); else ;
        
#line 745 
        goto ldv_53254;
      }
      ldv_53254: 
#line 748 
      ;
      
#line 748 
      priv->speed = phydev->speed;
    }
    else ;
    
#line 751 
    writel(ctrl,(void volatile *)priv->ioaddr);
    
#line 753 
    if (priv->oldlink == 0) {
      
#line 754 
      new_state = 1;
      
#line 755 
      priv->oldlink = 1;
    }
    else ;
  }
  else 
    
#line 757 
    if (priv->oldlink != 0) {
      
#line 758 
      new_state = 1;
      
#line 759 
      priv->oldlink = 0;
      
#line 760 
      priv->speed = 0;
      
#line 761 
      priv->oldduplex = -1;
    }
    else ;
  
#line 764 
  if (new_state != 0 && (priv->msg_enable & 4U) != 0U) 
#line 765 
                                                       phy_print_status(phydev); else ;
  
#line 767 
  ldv_spin_unlock_irqrestore_82(& priv->lock,flags);
  
#line 772 
  tmp_1 = stmmac_eee_init(priv);
  
#line 772 
  priv->eee_enabled = (int)tmp_1;
  return_label: 
#line 773 
                return;
}


#line 782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_check_pcs_mode(struct stmmac_priv *priv)
{
  
#line 784 
  int interface = (priv->plat)->interface;
  
#line 786 
  if (priv->dma_cap.pcs != 0U) {
    
#line 787 
    if ((unsigned int)interface + 4294967289U <= 3U) {
      {
        
#line 791 
        struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_check_pcs_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "STMMAC: PCS RGMII support enable\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))791U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 791 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 791 
                                                            __dynamic_pr_debug(& descriptor,"STMMAC: PCS RGMII support enable\n"); else ;
      }
      
#line 792 
      priv->pcs = 1;
    }
    else 
      
#line 793 
      if (interface == 3) {
        {
          
#line 794 
          struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_check_pcs_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "STMMAC: PCS SGMII support enable\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))794U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 794 
          if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 794 
                                                                __dynamic_pr_debug(& descriptor_0,"STMMAC: PCS SGMII support enable\n"); else ;
        }
        
#line 795 
        priv->pcs = 2;
      }
      else ;
  }
  else ;
  
#line 797 
  return;
}


#line 808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init_phy(struct net_device *dev)
{
  int __retres;
  struct phy_device *phydev;
  char phy_id_fmt[20U];
  char bus_id[17U];
  bool tmp_1;
  
#line 810 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 814 
  int interface = (priv->plat)->interface;
  
#line 815 
  int max_speed = (priv->plat)->max_speed;
  
#line 816 
  priv->oldlink = 0;
  
#line 817 
  priv->speed = 0;
  
#line 818 
  priv->oldduplex = -1;
  
#line 820 
  if ((priv->plat)->phy_node != (struct device_node *)0) 
#line 821 
                                                         phydev = of_phy_connect(dev,(priv->plat)->phy_node,& stmmac_adjust_link,0U,(enum ldv_26054)interface);
  else {
    
#line 824 
    if ((priv->plat)->phy_bus_name != (char *)0) 
#line 825 
                                                 snprintf((char *)(& bus_id),17UL,"%s-%x",(priv->plat)->phy_bus_name,(priv->plat)->bus_id); else 
                                                                    
#line 828 
                                                                    snprintf((char *)(& bus_id),17UL,"stmmac-%x",(priv->plat)->bus_id);
    
#line 831 
    snprintf((char *)(& phy_id_fmt),20UL,"%s:%02x",(char *)(& bus_id),(priv->plat)->phy_addr);
    {
      
#line 833 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_init_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "stmmac_init_phy:  trying to attach to %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))834U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 833 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 833 
                                                          __dynamic_pr_debug(& descriptor,"stmmac_init_phy:  trying to attach to %s\n",(char *)(& phy_id_fmt)); else ;
    }
    
#line 836 
    phydev = phy_connect(dev,(char const *)(& phy_id_fmt),& stmmac_adjust_link,(enum ldv_26054)interface);
  }
  
#line 840 
  tmp_1 = IS_ERR_OR_NULL((void const *)phydev);
  
#line 840 
  if ((int)tmp_1 != 0) {
    long tmp_0;
    
#line 841 
    printk("\001",(char *)(& dev->name));
    
#line 842 
    if (phydev == (struct phy_device *)0) {
      
#line 843 
      __retres = -19;
      
#line 843 
      goto return_label;
    }
    else ;
    
#line 845 
    tmp_0 = PTR_ERR((void const *)phydev);
    
#line 845 
    __retres = (int)tmp_0;
    
#line 845 
    goto return_label;
  }
  else ;
  
#line 849 
  if ((interface == 1 || interface == 6) || (unsigned int)max_speed + 4294967295U <= 998U) 
    
#line 852 
    phydev->advertising &= 4294967247U; else ;
  
#line 862 
  if ((priv->plat)->phy_node == (struct device_node *)0 && phydev->phy_id == 0U) {
    
#line 863 
    phy_disconnect(phydev);
    
#line 864 
    __retres = -19;
    
#line 864 
    goto return_label;
  }
  else ;
  {
    
#line 866 
    struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_init_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "stmmac_init_phy:  %s: attached to PHY (UID 0x%x)", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))867U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 866 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 866 
                                                          __dynamic_pr_debug(& descriptor_0,"stmmac_init_phy:  %s: attached to PHY (UID 0x%x)",(char *)(& dev->name),phydev->phy_id,phydev->link); else ;
  }
  
#line 869 
  priv->phydev = phydev;
  
#line 871 
  __retres = 0;
  return_label: 
#line 871 
                return __retres;
}


#line 881  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_display_ring(void *head, int size, int extend_desc)
{
  int i;
  
#line 884 
  struct dma_extended_desc *ep = (struct dma_extended_desc *)head;
  
#line 885 
  struct dma_desc *p = (struct dma_desc *)head;
  
#line 887 
  i = 0;
  
#line 887 
  goto ldv_53287;
  ldv_53286: 
#line 888 
  ;
  {
    u64 x;
    
#line 889 
    if (extend_desc != 0) {
      phys_addr_t tmp;
      
#line 890 
      x = *((u64 *)ep);
      
#line 891 
      ;
      
#line 891 
      ;
      
#line 891 
      ;
      
#line 891 
      ;
      
#line 891 
      tmp = virt_to_phys((void volatile *)ep);
      
#line 891 
      ;
      
#line 891 
      printk("\001",i,(unsigned int)tmp,(unsigned int)x,(unsigned int)(x >> 32),ep->basic.des2,ep->basic.des3);
      
#line 895 
      ep += 1;
    }
    else {
      phys_addr_t tmp_0;
      
#line 897 
      x = *((u64 *)p);
      
#line 898 
      ;
      
#line 898 
      ;
      
#line 898 
      ;
      
#line 898 
      ;
      
#line 898 
      tmp_0 = virt_to_phys((void volatile *)p);
      
#line 898 
      ;
      
#line 898 
      printk("\001",i,(unsigned int)tmp_0,(unsigned int)x,(unsigned int)(x >> 32),p->des2,p->des3);
      
#line 902 
      p += 1;
    }
    
#line 904 
    printk("\001");
  }
  
#line 887 
  i += 1;
  ldv_53287: 
#line 888 
  ;
  
#line 887 
  if (i < size) 
#line 889 
                goto ldv_53286; else 
#line 892 
                                     goto ldv_53288;
  ldv_53288: 
#line 893 
  ;
  
#line 894 
  return;
}


#line 908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_display_rings(struct stmmac_priv *priv)
{
  
#line 910 
  unsigned int txsize = priv->dma_tx_size;
  
#line 911 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 913 
  if (priv->extend_desc != 0) {
    
#line 914 
    printk("\001");
    
#line 915 
    stmmac_display_ring((void *)priv->dma_erx,(int)rxsize,1);
    
#line 916 
    printk("\001");
    
#line 917 
    stmmac_display_ring((void *)priv->dma_etx,(int)txsize,1);
  }
  else {
    
#line 919 
    printk("\001");
    
#line 920 
    stmmac_display_ring((void *)priv->dma_rx,(int)rxsize,0);
    
#line 921 
    printk("\001");
    
#line 922 
    stmmac_display_ring((void *)priv->dma_tx,(int)txsize,0);
  }
  
#line 924 
  return;
}


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_set_bfsize(int mtu, int bufsize)
{
  
#line 928 
  int ret = bufsize;
  
#line 930 
  if (mtu > 4095) 
#line 931 
                  ret = 8192;
  else 
    
#line 932 
    if (mtu > 2047) 
#line 933 
                    ret = 4096;
    else 
      
#line 934 
      if (mtu > 1536) 
#line 935 
                      ret = 2048; else 
#line 937 
                                       ret = 1536;
  
#line 939 
  return ret;
}


#line 948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_clear_descriptors(struct stmmac_priv *priv)
{
  int i;
  
#line 951 
  unsigned int txsize = priv->dma_tx_size;
  
#line 952 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 955 
  i = 0;
  
#line 955 
  goto ldv_53306;
  ldv_53305: 
#line 956 
  ;
  
#line 956 
  if (priv->extend_desc != 0) 
#line 957 
                              (*(((priv->hw)->desc)->init_rx_desc))(& (priv->dma_erx + i)->basic,priv->use_riwt,(int)priv->mode,rxsize + 4294967295U == (unsigned int)i); else 
                                                                    
#line 961 
                                                                    (*(((priv->hw)->desc)->init_rx_desc))(priv->dma_rx + i,priv->use_riwt,(int)priv->mode,rxsize + 4294967295U == (unsigned int)i);
  
#line 955 
  i += 1;
  ldv_53306: 
#line 956 
  ;
  
#line 955 
  if ((unsigned int)i < rxsize) 
#line 957 
                                goto ldv_53305; else 
#line 960 
                                                     goto ldv_53307;
  ldv_53307: 
#line 961 
  ;
  
#line 964 
  i = 0;
  
#line 964 
  goto ldv_53309;
  ldv_53308: 
#line 965 
  ;
  
#line 965 
  if (priv->extend_desc != 0) 
#line 966 
                              (*(((priv->hw)->desc)->init_tx_desc))(& (priv->dma_etx + i)->basic,(int)priv->mode,txsize + 4294967295U == (unsigned int)i); else 
                                                                    
#line 970 
                                                                    (*(((priv->hw)->desc)->init_tx_desc))(priv->dma_tx + i,(int)priv->mode,txsize + 4294967295U == (unsigned int)i);
  
#line 964 
  i += 1;
  ldv_53309: 
#line 965 
  ;
  
#line 964 
  if ((unsigned int)i < txsize) 
#line 966 
                                goto ldv_53308; else 
#line 969 
                                                     goto ldv_53310;
  ldv_53310: 
#line 970 
  ;
  
#line 971 
  return;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init_rx_buffers(struct stmmac_priv *priv, struct dma_desc *p, int i, gfp_t flags)
{
  int __retres;
  struct sk_buff *skb;
  int tmp;
  
#line 989 
  skb = __netdev_alloc_skb_ip_align(priv->dev,priv->dma_buf_sz,flags);
  
#line 990 
  if (skb == (struct sk_buff *)0) {
    
#line 991 
    printk("\001","stmmac_init_rx_buffers");
    
#line 992 
    __retres = -12;
    
#line 992 
    goto return_label;
  }
  else ;
  
#line 994 
  *(priv->rx_skbuff + i) = skb;
  
#line 995 
  *(priv->rx_skbuff_dma + i) = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)priv->dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 998 
  tmp = dma_mapping_error(priv->device,*(priv->rx_skbuff_dma + i));
  
#line 998 
  if (tmp != 0) {
    
#line 999 
    printk("\001","stmmac_init_rx_buffers");
    
#line 1000 
    dev_kfree_skb_any(skb);
    
#line 1001 
    __retres = -22;
    
#line 1001 
    goto return_label;
  }
  else ;
  
#line 1004 
  p->des2 = (unsigned int)*(priv->rx_skbuff_dma + i);
  
#line 1006 
  if (((priv->hw)->mode)->init_desc3 != (void (*)(struct dma_desc *))0 && priv->dma_buf_sz == 16384U) 
    
#line 1008 
    (*(((priv->hw)->mode)->init_desc3))(p); else ;
  
#line 1010 
  __retres = 0;
  return_label: 
#line 1010 
                return __retres;
}


#line 1013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_free_rx_buffers(struct stmmac_priv *priv, int i)
{
  
#line 1015 
  if (*(priv->rx_skbuff + i) != (struct sk_buff *)0) {
    
#line 1016 
    dma_unmap_single_attrs(priv->device,*(priv->rx_skbuff_dma + i),(unsigned long)priv->dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1018 
    dev_kfree_skb_any(*(priv->rx_skbuff + i));
  }
  else ;
  
#line 1020 
  *(priv->rx_skbuff + i) = (struct sk_buff *)0;
  
#line 1021 
  return;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int init_dma_desc_rings(struct net_device *dev, gfp_t flags)
{
  int __retres;
  int i;
  
#line 1034 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1035 
  unsigned int txsize = priv->dma_tx_size;
  
#line 1036 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 1037 
  unsigned int bfsize = 0U;
  
#line 1038 
  int ret = -12;
  
#line 1040 
  if (((priv->hw)->mode)->set_16kib_bfsize != (int (*)(int ))0) {
    int tmp_0;
    
#line 1041 
    tmp_0 = (*(((priv->hw)->mode)->set_16kib_bfsize))((int)dev->mtu);
    
#line 1041 
    bfsize = (unsigned int)tmp_0;
  }
  else ;
  
#line 1043 
  if (bfsize <= 16383U) {
    int tmp_1;
    
#line 1044 
    tmp_1 = stmmac_set_bfsize((int)dev->mtu,(int)priv->dma_buf_sz);
    
#line 1044 
    bfsize = (unsigned int)tmp_1;
  }
  else ;
  
#line 1046 
  priv->dma_buf_sz = bfsize;
  
#line 1048 
  if ((priv->msg_enable & 2U) != 0U) {
    
#line 1049 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "init_dma_desc_rings", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: txsize %d, rxsize %d, bfsize %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1050U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1049 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1049 
                                                        __dynamic_pr_debug(& descriptor,"%s: txsize %d, rxsize %d, bfsize %d\n","init_dma_desc_rings",txsize,rxsize,bfsize); else ;
  }
  else ;
  
#line 1052 
  if ((priv->msg_enable & 2U) != 0U) {
    {
      
#line 1053 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "init_dma_desc_rings", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "(%s) dma_rx_phy=0x%08x dma_tx_phy=0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1054U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1053 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1053 
                                                            __dynamic_pr_debug(& descriptor_0,"(%s) dma_rx_phy=0x%08x dma_tx_phy=0x%08x\n","init_dma_desc_rings",(unsigned int)priv->dma_rx_phy,(unsigned int)priv->dma_tx_phy); else ;
    }
    {
      
#line 1057 
      struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "init_dma_desc_rings", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "\tSKB addresses:\nskb\t\tskb data\tdma data\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1057U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1057 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 1057 
                                                            __dynamic_pr_debug(& descriptor_1,"\tSKB addresses:\nskb\t\tskb data\tdma data\n"); else ;
    }
  }
  else ;
  
#line 1059 
  i = 0;
  
#line 1059 
  goto ldv_53341;
  ldv_53340: 
#line 1060 
  ;
  {
    struct dma_desc *p;
    
#line 1061 
    if (priv->extend_desc != 0) 
#line 1062 
                                p = & (priv->dma_erx + i)->basic; else 
                                                                    
#line 1064 
                                                                    p = priv->dma_rx + i;
    
#line 1066 
    ret = stmmac_init_rx_buffers(priv,p,i,flags);
    
#line 1067 
    if (ret != 0) 
#line 1068 
                  goto err_init_rx_buffers; else ;
    
#line 1070 
    if ((priv->msg_enable & 2U) != 0U) {
      
#line 1071 
      struct _ddebug descriptor_2 = {.modname = "stmmac", .function = "init_dma_desc_rings", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "[%p]\t[%p]\t[%x]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1073U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1071 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 1071 
                                                            __dynamic_pr_debug(& descriptor_2,"[%p]\t[%p]\t[%x]\n",*(priv->rx_skbuff + i),(*(priv->rx_skbuff + i))->data,(unsigned int)*(priv->rx_skbuff_dma + i)); else ;
    }
    else ;
  }
  
#line 1059 
  i += 1;
  ldv_53341: 
#line 1060 
  ;
  
#line 1059 
  if ((unsigned int)i < rxsize) 
#line 1061 
                                goto ldv_53340; else 
#line 1064 
                                                     goto ldv_53342;
  ldv_53342: 
#line 1065 
  ;
  
#line 1075 
  priv->cur_rx = 0U;
  
#line 1076 
  priv->dirty_rx = (unsigned int)i - rxsize;
  
#line 1077 
  buf_sz = (int)bfsize;
  
#line 1080 
  if (priv->mode == 1U) 
    
#line 1081 
    if (priv->extend_desc != 0) {
      
#line 1082 
      (*(((priv->hw)->mode)->init))((void *)priv->dma_erx,priv->dma_rx_phy,rxsize,1U);
      
#line 1084 
      (*(((priv->hw)->mode)->init))((void *)priv->dma_etx,priv->dma_tx_phy,txsize,1U);
    }
    else {
      
#line 1087 
      (*(((priv->hw)->mode)->init))((void *)priv->dma_rx,priv->dma_rx_phy,rxsize,0U);
      
#line 1089 
      (*(((priv->hw)->mode)->init))((void *)priv->dma_tx,priv->dma_tx_phy,txsize,0U);
    }
  else ;
  
#line 1095 
  i = 0;
  
#line 1095 
  goto ldv_53345;
  ldv_53344: 
#line 1096 
  ;
  {
    struct dma_desc *p_0;
    
#line 1097 
    if (priv->extend_desc != 0) 
#line 1098 
                                p_0 = & (priv->dma_etx + i)->basic; else 
                                                                    
#line 1100 
                                                                    p_0 = priv->dma_tx + i;
    
#line 1101 
    p_0->des2 = 0U;
    
#line 1102 
    (priv->tx_skbuff_dma + i)->buf = 0ULL;
    
#line 1103 
    (priv->tx_skbuff_dma + i)->map_as_page = (_Bool)0;
    
#line 1104 
    *(priv->tx_skbuff + i) = (struct sk_buff *)0;
  }
  
#line 1095 
  i += 1;
  ldv_53345: 
#line 1096 
  ;
  
#line 1095 
  if ((unsigned int)i < txsize) 
#line 1097 
                                goto ldv_53344; else 
#line 1100 
                                                     goto ldv_53346;
  ldv_53346: 
#line 1101 
  ;
  
#line 1107 
  priv->dirty_tx = 0U;
  
#line 1108 
  priv->cur_tx = 0U;
  
#line 1109 
  netdev_reset_queue(priv->dev);
  
#line 1111 
  stmmac_clear_descriptors(priv);
  
#line 1113 
  if ((priv->msg_enable & 8192U) != 0U) 
#line 1114 
                                        stmmac_display_rings(priv); else ;
  
#line 1116 
  __retres = 0;
  
#line 1116 
  goto return_label;
  err_init_rx_buffers: 
#line 1117 
  ;
  
#line 1118 
  goto ldv_53348;
  ldv_53347: 
#line 1119 
  ;
  
#line 1119 
  stmmac_free_rx_buffers(priv,i);
  ldv_53348: 
#line 1120 
  ;
  
#line 1118 
  i -= 1;
  
#line 1118 
  if (i >= 0) 
#line 1120 
              goto ldv_53347; else 
#line 1123 
                                   goto ldv_53349;
  ldv_53349: 
#line 1124 
  ;
  
#line 1120 
  __retres = ret;
  return_label: 
#line 1120 
                return __retres;
}


#line 1123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void dma_free_rx_skbufs(struct stmmac_priv *priv)
{
  int i;
  
#line 1127 
  i = 0;
  
#line 1127 
  goto ldv_53355;
  ldv_53354: 
#line 1128 
  ;
  
#line 1128 
  stmmac_free_rx_buffers(priv,i);
  
#line 1127 
  i += 1;
  ldv_53355: 
#line 1128 
  ;
  
#line 1127 
  if (priv->dma_rx_size > (unsigned int)i) 
#line 1129 
                                           goto ldv_53354; else 
#line 1132 
                                                                goto ldv_53356;
  ldv_53356: 
#line 1133 
  ;
  
#line 1134 
  return;
}


#line 1131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void dma_free_tx_skbufs(struct stmmac_priv *priv)
{
  int i;
  
#line 1135 
  i = 0;
  
#line 1135 
  goto ldv_53363;
  ldv_53362: 
#line 1136 
  ;
  {
    struct dma_desc *p;
    
#line 1138 
    if (priv->extend_desc != 0) 
#line 1139 
                                p = & (priv->dma_etx + i)->basic; else 
                                                                    
#line 1141 
                                                                    p = priv->dma_tx + i;
    
#line 1143 
    if ((priv->tx_skbuff_dma + i)->buf != 0ULL) 
      
#line 1144 
      if ((int)(priv->tx_skbuff_dma + i)->map_as_page != 0) {
        int tmp;
        
#line 1147 
        tmp = (*(((priv->hw)->desc)->get_tx_len))(p);
        
#line 1145 
        ;
        
#line 1145 
        ;
        
#line 1145 
        dma_unmap_page(priv->device,(priv->tx_skbuff_dma + i)->buf,(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE);
      }
      else {
        int tmp_0;
        
#line 1150 
        tmp_0 = (*(((priv->hw)->desc)->get_tx_len))(p);
        
#line 1150 
        ;
        
#line 1150 
        ;
        
#line 1150 
        dma_unmap_single_attrs(priv->device,(priv->tx_skbuff_dma + i)->buf,(unsigned long)tmp_0,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      }
    else ;
    
#line 1156 
    if (*(priv->tx_skbuff + i) != (struct sk_buff *)0) {
      
#line 1157 
      dev_kfree_skb_any(*(priv->tx_skbuff + i));
      
#line 1158 
      *(priv->tx_skbuff + i) = (struct sk_buff *)0;
      
#line 1159 
      (priv->tx_skbuff_dma + i)->buf = 0ULL;
      
#line 1160 
      (priv->tx_skbuff_dma + i)->map_as_page = (_Bool)0;
    }
    else ;
  }
  
#line 1135 
  i += 1;
  ldv_53363: 
#line 1136 
  ;
  
#line 1135 
  if (priv->dma_tx_size > (unsigned int)i) 
#line 1137 
                                           goto ldv_53362; else 
#line 1140 
                                                                goto ldv_53364;
  ldv_53364: 
#line 1141 
  ;
  
#line 1142 
  return;
}


#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int alloc_dma_desc_resources(struct stmmac_priv *priv)
{
  int __retres;
  
#line 1175 
  unsigned int txsize = priv->dma_tx_size;
  
#line 1176 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 1177 
  int ret = -12;
  
#line 1179 
  priv->rx_skbuff_dma = (dma_addr_t *)kmalloc_array((unsigned long)rxsize,8UL,208U);
  
#line 1181 
  if (priv->rx_skbuff_dma == (dma_addr_t *)0ULL) {
    
#line 1182 
    __retres = -12;
    
#line 1182 
    goto return_label;
  }
  else ;
  
#line 1184 
  priv->rx_skbuff = (struct sk_buff **)kmalloc_array((unsigned long)rxsize,8UL,208U);
  
#line 1186 
  if (priv->rx_skbuff == (struct sk_buff **)0) 
#line 1187 
                                               goto err_rx_skbuff; else ;
  
#line 1189 
  priv->tx_skbuff_dma = (struct stmmac_tx_info *)kmalloc_array((unsigned long)txsize,16UL,208U);
  
#line 1192 
  if (priv->tx_skbuff_dma == (struct stmmac_tx_info *)0) 
#line 1193 
                                                         goto err_tx_skbuff_dma; else ;
  
#line 1195 
  priv->tx_skbuff = (struct sk_buff **)kmalloc_array((unsigned long)txsize,8UL,208U);
  
#line 1197 
  if (priv->tx_skbuff == (struct sk_buff **)0) 
#line 1198 
                                               goto err_tx_skbuff; else ;
  
#line 1200 
  if (priv->extend_desc != 0) {
    
#line 1201 
    priv->dma_erx = (struct dma_extended_desc *)dma_zalloc_coherent(priv->device,(unsigned long)rxsize * 32UL,& priv->dma_rx_phy,208U);
    
#line 1206 
    if (priv->dma_erx == (struct dma_extended_desc *)0) 
#line 1207 
                                                        goto err_dma; else ;
    
#line 1209 
    priv->dma_etx = (struct dma_extended_desc *)dma_zalloc_coherent(priv->device,(unsigned long)txsize * 32UL,& priv->dma_tx_phy,208U);
    
#line 1214 
    if (priv->dma_etx == (struct dma_extended_desc *)0) {
      
#line 1215 
      dma_free_attrs(priv->device,(unsigned long)priv->dma_rx_size * 32UL,(void *)priv->dma_erx,priv->dma_rx_phy,(struct dma_attrs *)0);
      
#line 1218 
      goto err_dma;
    }
    else ;
  }
  else {
    
#line 1221 
    priv->dma_rx = (struct dma_desc *)dma_zalloc_coherent(priv->device,(unsigned long)rxsize * 16UL,& priv->dma_rx_phy,208U);
    
#line 1225 
    if (priv->dma_rx == (struct dma_desc *)0) 
#line 1226 
                                              goto err_dma; else ;
    
#line 1228 
    priv->dma_tx = (struct dma_desc *)dma_zalloc_coherent(priv->device,(unsigned long)txsize * 16UL,& priv->dma_tx_phy,208U);
    
#line 1232 
    if (priv->dma_tx == (struct dma_desc *)0) {
      
#line 1233 
      dma_free_attrs(priv->device,(unsigned long)priv->dma_rx_size * 16UL,(void *)priv->dma_rx,priv->dma_rx_phy,(struct dma_attrs *)0);
      
#line 1236 
      goto err_dma;
    }
    else ;
  }
  
#line 1240 
  __retres = 0;
  
#line 1240 
  goto return_label;
  err_dma: 
#line 1242 
  ;
  
#line 1243 
  kfree((void const *)priv->tx_skbuff);
  err_tx_skbuff: 
#line 1244 
  ;
  
#line 1245 
  kfree((void const *)priv->tx_skbuff_dma);
  err_tx_skbuff_dma: 
#line 1246 
  ;
  
#line 1247 
  kfree((void const *)priv->rx_skbuff);
  err_rx_skbuff: 
#line 1248 
  ;
  
#line 1249 
  kfree((void const *)priv->rx_skbuff_dma);
  
#line 1250 
  __retres = ret;
  return_label: 
#line 1250 
                return __retres;
}


#line 1253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void free_dma_desc_resources(struct stmmac_priv *priv)
{
  
#line 1256 
  dma_free_rx_skbufs(priv);
  
#line 1257 
  dma_free_tx_skbufs(priv);
  
#line 1260 
  if (priv->extend_desc == 0) {
    
#line 1261 
    dma_free_attrs(priv->device,(unsigned long)priv->dma_tx_size * 16UL,(void *)priv->dma_tx,priv->dma_tx_phy,(struct dma_attrs *)0);
    
#line 1264 
    dma_free_attrs(priv->device,(unsigned long)priv->dma_rx_size * 16UL,(void *)priv->dma_rx,priv->dma_rx_phy,(struct dma_attrs *)0);
  }
  else {
    
#line 1268 
    dma_free_attrs(priv->device,(unsigned long)priv->dma_tx_size * 32UL,(void *)priv->dma_etx,priv->dma_tx_phy,(struct dma_attrs *)0);
    
#line 1271 
    dma_free_attrs(priv->device,(unsigned long)priv->dma_rx_size * 32UL,(void *)priv->dma_erx,priv->dma_rx_phy,(struct dma_attrs *)0);
  }
  
#line 1275 
  kfree((void const *)priv->rx_skbuff_dma);
  
#line 1276 
  kfree((void const *)priv->rx_skbuff);
  
#line 1277 
  kfree((void const *)priv->tx_skbuff_dma);
  
#line 1278 
  kfree((void const *)priv->tx_skbuff);
  
#line 1279 
  return;
}


#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_dma_operation_mode(struct stmmac_priv *priv)
{
  
#line 1289 
  int rxfifosz = (priv->plat)->rx_fifo_size;
  
#line 1291 
  if ((priv->plat)->force_thresh_dma_mode != 0) 
#line 1292 
                                                (*(((priv->hw)->dma)->dma_mode))(priv->ioaddr,tc,tc,rxfifosz);
  else 
    
#line 1293 
    if ((priv->plat)->force_sf_dma_mode != 0 || (priv->plat)->tx_coe != 0) {
      
#line 1301 
      (*(((priv->hw)->dma)->dma_mode))(priv->ioaddr,1,1,rxfifosz);
      
#line 1303 
      priv->xstats.threshold = 1UL;
    }
    else 
#line 1305 
         (*(((priv->hw)->dma)->dma_mode))(priv->ioaddr,tc,1,rxfifosz);
  
#line 1306 
  return;
}


#line 1314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_tx_clean(struct stmmac_priv *priv)
{
  bool tmp_5;
  
#line 1316 
  unsigned int txsize = priv->dma_tx_size;
  
#line 1317 
  unsigned int bytes_compl = 0U;
  
#line 1317 
  unsigned int pkts_compl = 0U;
  
#line 1319 
  ldv_spin_lock_83(& priv->tx_lock);
  
#line 1321 
  priv->xstats.tx_clean += 1UL;
  
#line 1323 
  goto ldv_53397;
  ldv_53396: 
#line 1324 
  ;
  {
    int last;
    struct dma_desc *p;
    int tmp;
    
#line 1325 
    unsigned int entry = priv->dirty_tx % txsize;
    
#line 1326 
    struct sk_buff *skb = *(priv->tx_skbuff + entry);
    
#line 1329 
    if (priv->extend_desc != 0) 
#line 1330 
                                p = (struct dma_desc *)(priv->dma_etx + entry); else 
                                                                    
#line 1332 
                                                                    p = priv->dma_tx + entry;
    
#line 1335 
    tmp = (*(((priv->hw)->desc)->get_tx_owner))(p);
    
#line 1335 
    if (tmp != 0) 
#line 1336 
                  goto ldv_53392; else ;
    
#line 1339 
    last = (*(((priv->hw)->desc)->get_tx_ls))(p);
    
#line 1340 
    if ((long)(last != 0) != 0L) {
      int tmp_0;
      
#line 1341 
      tmp_0 = (*(((priv->hw)->desc)->tx_status))((void *)(& (priv->dev)->stats),& priv->xstats,p,priv->ioaddr);
      
#line 1341 
      int tx_error = tmp_0;
      
#line 1345 
      if ((long)(tx_error == 0) != 0L) {
        
#line 1346 
        (priv->dev)->stats.tx_packets += 1UL;
        
#line 1347 
        priv->xstats.tx_pkt_n += 1UL;
      }
      else 
#line 1349 
           (priv->dev)->stats.tx_errors += 1UL;
      
#line 1351 
      stmmac_get_tx_hwtstamp(priv,entry,skb);
    }
    else ;
    
#line 1353 
    if ((priv->msg_enable & 1024U) != 0U) {
      
#line 1354 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_tx_clean", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: curr %d, dirty %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1355U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1354 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1354 
                                                          __dynamic_pr_debug(& descriptor,"%s: curr %d, dirty %d\n","stmmac_tx_clean",priv->cur_tx,priv->dirty_tx); else ;
    }
    else ;
    
#line 1357 
    if ((long)((priv->tx_skbuff_dma + entry)->buf != 0ULL) != 0L) {
      
#line 1358 
      if ((int)(priv->tx_skbuff_dma + entry)->map_as_page != 0) {
        int tmp_1;
        
#line 1361 
        tmp_1 = (*(((priv->hw)->desc)->get_tx_len))(p);
        
#line 1359 
        ;
        
#line 1359 
        ;
        
#line 1359 
        dma_unmap_page(priv->device,(priv->tx_skbuff_dma + entry)->buf,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE);
      }
      else {
        int tmp_2;
        
#line 1364 
        tmp_2 = (*(((priv->hw)->desc)->get_tx_len))(p);
        
#line 1364 
        ;
        
#line 1364 
        ;
        
#line 1364 
        dma_unmap_single_attrs(priv->device,(priv->tx_skbuff_dma + entry)->buf,(unsigned long)tmp_2,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      }
      
#line 1368 
      (priv->tx_skbuff_dma + entry)->buf = 0ULL;
      
#line 1369 
      (priv->tx_skbuff_dma + entry)->map_as_page = (_Bool)0;
    }
    else ;
    
#line 1371 
    (*(((priv->hw)->mode)->clean_desc3))((void *)priv,p);
    
#line 1373 
    if ((long)(skb != (struct sk_buff *)0) != 0L) {
      
#line 1374 
      pkts_compl += 1U;
      
#line 1375 
      bytes_compl = skb->len + bytes_compl;
      
#line 1376 
      dev_consume_skb_any(skb);
      
#line 1377 
      *(priv->tx_skbuff + entry) = (struct sk_buff *)0;
    }
    else ;
    
#line 1380 
    (*(((priv->hw)->desc)->release_tx_desc))(p,(int)priv->mode);
    
#line 1382 
    priv->dirty_tx += 1U;
  }
  ldv_53397: 
#line 1384 
  ;
  
#line 1323 
  if (priv->dirty_tx != priv->cur_tx) 
#line 1325 
                                      goto ldv_53396; else 
#line 1328 
                                                           goto ldv_53392;
  ldv_53392: 
#line 1329 
  ;
  
#line 1385 
  netdev_completed_queue(priv->dev,pkts_compl,bytes_compl);
  
#line 1387 
  tmp_5 = netif_queue_stopped((struct net_device const *)priv->dev);
  
#line 1387 
  if ((long)((int)tmp_5 != 0) != 0L) {
    u32 tmp_6;
    
#line 1387 
    tmp_6 = stmmac_tx_avail(priv);
    
#line 1387 
    ;
    
#line 1387 
    if ((long)(tmp_6 > priv->dma_tx_size / 4U) != 0L) {
      bool tmp_3;
      
#line 1389 
      netif_tx_lock(priv->dev);
      
#line 1390 
      tmp_3 = netif_queue_stopped((struct net_device const *)priv->dev);
      
#line 1390 
      if ((int)tmp_3 != 0) {
        u32 tmp_4;
        
#line 1390 
        tmp_4 = stmmac_tx_avail(priv);
        
#line 1390 
        ;
        
#line 1390 
        if (tmp_4 > priv->dma_tx_size / 4U) {
          
#line 1392 
          if ((priv->msg_enable & 1024U) != 0U) {
            
#line 1393 
            struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_tx_clean", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: restart transmit\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1393U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
            
#line 1393 
            if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1393 
                                                                  __dynamic_pr_debug(& descriptor_0,"%s: restart transmit\n","stmmac_tx_clean"); else ;
          }
          else ;
          
#line 1394 
          netif_wake_queue(priv->dev);
        }
        else ;
      }
      else ;
      
#line 1396 
      netif_tx_unlock(priv->dev);
    }
    else ;
  }
  else ;
  
#line 1399 
  if (priv->eee_enabled != 0 && ! priv->tx_path_in_lpi_mode) {
    unsigned long tmp_7;
    
#line 1400 
    stmmac_enable_eee_mode(priv);
    
#line 1401 
    tmp_7 = msecs_to_jiffies((unsigned int)eee_timer);
    
#line 1401 
    ;
    
#line 1401 
    ;
    
#line 1401 
    ldv_mod_timer_84(& priv->eee_ctrl_timer,tmp_7 + jiffies);
  }
  else ;
  
#line 1403 
  ldv_spin_unlock_85(& priv->tx_lock);
  
#line 1404 
  return;
}


#line 1406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
__inline static void stmmac_enable_dma_irq(struct stmmac_priv *priv)
{
  
#line 1408 
  (*(((priv->hw)->dma)->enable_dma_irq))(priv->ioaddr);
  
#line 1409 
  return;
}


#line 1411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
__inline static void stmmac_disable_dma_irq(struct stmmac_priv *priv)
{
  
#line 1413 
  (*(((priv->hw)->dma)->disable_dma_irq))(priv->ioaddr);
  
#line 1414 
  return;
}


#line 1422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_tx_err(struct stmmac_priv *priv)
{
  int i;
  
#line 1425 
  int txsize = (int)priv->dma_tx_size;
  
#line 1426 
  netif_start_queue(priv->dev);
  
#line 1428 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr);
  
#line 1429 
  dma_free_tx_skbufs(priv);
  
#line 1430 
  i = 0;
  
#line 1430 
  goto ldv_53411;
  ldv_53410: 
#line 1431 
  ;
  
#line 1431 
  if (priv->extend_desc != 0) 
#line 1432 
                              (*(((priv->hw)->desc)->init_tx_desc))(& (priv->dma_etx + i)->basic,(int)priv->mode,txsize + -1 == i); else 
                                                                    
#line 1436 
                                                                    (*(((priv->hw)->desc)->init_tx_desc))(priv->dma_tx + i,(int)priv->mode,txsize + -1 == i);
  
#line 1430 
  i += 1;
  ldv_53411: 
#line 1431 
  ;
  
#line 1430 
  if (i < txsize) 
#line 1432 
                  goto ldv_53410; else 
#line 1435 
                                       goto ldv_53412;
  ldv_53412: 
#line 1436 
  ;
  
#line 1439 
  priv->dirty_tx = 0U;
  
#line 1440 
  priv->cur_tx = 0U;
  
#line 1441 
  netdev_reset_queue(priv->dev);
  
#line 1442 
  (*(((priv->hw)->dma)->start_tx))(priv->ioaddr);
  
#line 1444 
  (priv->dev)->stats.tx_errors += 1UL;
  
#line 1445 
  netif_wake_queue(priv->dev);
  
#line 1446 
  return;
}


#line 1455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_dma_interrupt(struct stmmac_priv *priv)
{
  int status;
  
#line 1458 
  int rxfifosz = (priv->plat)->rx_fifo_size;
  
#line 1460 
  status = (*(((priv->hw)->dma)->dma_interrupt))(priv->ioaddr,& priv->xstats);
  
#line 1461 
  if ((long)((status & 4) != 0) != 0L || (status & 8) != 0) {
    bool tmp;
    
#line 1462 
    tmp = napi_schedule_prep(& priv->napi);
    
#line 1462 
    if ((long)((int)tmp != 0) != 0L) {
      
#line 1463 
      stmmac_disable_dma_irq(priv);
      
#line 1464 
      __napi_schedule(& priv->napi);
    }
    else ;
  }
  else ;
  
#line 1467 
  if ((long)((status & 2) != 0) != 0L) {
    
#line 1469 
    if ((long)(priv->xstats.threshold != 1UL) != 0L && tc <= 256) {
      
#line 1471 
      tc += 64;
      
#line 1472 
      if ((priv->plat)->force_thresh_dma_mode != 0) 
#line 1473 
                                                    (*(((priv->hw)->dma)->dma_mode))(priv->ioaddr,tc,tc,rxfifosz); else 
                                                                    
#line 1476 
                                                                    (*(((priv->hw)->dma)->dma_mode))(priv->ioaddr,tc,1,rxfifosz);
      
#line 1478 
      priv->xstats.threshold = (unsigned long)tc;
    }
    else ;
  }
  else 
    
#line 1480 
    if ((long)(status == 1) != 0L) 
#line 1481 
                                   stmmac_tx_err(priv); else ;
  
#line 1482 
  return;
}


#line 1489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_mmc_setup(struct stmmac_priv *priv)
{
  
#line 1491 
  unsigned int mode = 53U;
  
#line 1494 
  dwmac_mmc_intr_all_mask(priv->ioaddr);
  
#line 1496 
  if (priv->dma_cap.rmon != 0U) {
    
#line 1497 
    dwmac_mmc_ctrl(priv->ioaddr,mode);
    
#line 1498 
    memset((void *)(& priv->mmc),0,316UL);
  }
  else 
#line 1500 
       printk("\001");
  
#line 1501 
  return;
}


#line 1509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static u32 stmmac_get_synopsys_id(struct stmmac_priv *priv)
{
  u32 __retres;
  
#line 1511 
  u32 hwid = (priv->hw)->synopsys_uid;
  
#line 1514 
  if ((long)(hwid != 0U) != 0L) {
    
#line 1515 
    u32 uid = (hwid >> 8) & 255U;
    
#line 1516 
    u32 synid = hwid & 255U;
    
#line 1518 
    printk("\001",uid,synid);
    
#line 1521 
    __retres = synid;
    
#line 1521 
    goto return_label;
  }
  else ;
  
#line 1523 
  __retres = 0U;
  return_label: 
#line 1523 
                return __retres;
}


#line 1533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_selec_desc_mode(struct stmmac_priv *priv)
{
  
#line 1535 
  if ((priv->plat)->enh_desc != 0) {
    
#line 1536 
    printk("\001");
    
#line 1539 
    if (priv->synopsys_id > 52) {
      
#line 1540 
      printk("\001");
      
#line 1541 
      priv->extend_desc = 1;
    }
    else 
#line 1543 
         printk("\001");
    
#line 1545 
    (priv->hw)->desc = & enh_desc_ops;
  }
  else {
    
#line 1547 
    printk("\001");
    
#line 1548 
    (priv->hw)->desc = & ndesc_ops;
  }
  
#line 1550 
  return;
}


#line 1561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_get_hw_features(struct stmmac_priv *priv)
{
  int __retres;
  
#line 1563 
  u32 hw_cap = 0U;
  
#line 1565 
  if (((priv->hw)->dma)->get_hw_feature != (unsigned int (*)(void *))0) {
    
#line 1566 
    hw_cap = (*(((priv->hw)->dma)->get_hw_feature))(priv->ioaddr);
    
#line 1568 
    priv->dma_cap.mbps_10_100 = hw_cap & 1U;
    
#line 1569 
    priv->dma_cap.mbps_1000 = (hw_cap >> 1) & 1U;
    
#line 1570 
    priv->dma_cap.half_duplex = (hw_cap >> 2) & 1U;
    
#line 1571 
    priv->dma_cap.hash_filter = (hw_cap >> 4) & 1U;
    
#line 1572 
    priv->dma_cap.multi_addr = (hw_cap >> 5) & 1U;
    
#line 1573 
    priv->dma_cap.pcs = (hw_cap >> 6) & 1U;
    
#line 1574 
    priv->dma_cap.sma_mdio = (hw_cap >> 8) & 1U;
    
#line 1575 
    priv->dma_cap.pmt_remote_wake_up = (hw_cap >> 9) & 1U;
    
#line 1577 
    priv->dma_cap.pmt_magic_frame = (hw_cap >> 10) & 1U;
    
#line 1580 
    priv->dma_cap.rmon = (hw_cap >> 11) & 1U;
    
#line 1582 
    priv->dma_cap.time_stamp = (hw_cap >> 12) & 1U;
    
#line 1585 
    priv->dma_cap.atime_stamp = (hw_cap >> 13) & 1U;
    
#line 1588 
    priv->dma_cap.eee = (hw_cap >> 14) & 1U;
    
#line 1589 
    priv->dma_cap.av = (hw_cap >> 15) & 1U;
    
#line 1591 
    priv->dma_cap.tx_coe = (hw_cap >> 16) & 1U;
    
#line 1592 
    priv->dma_cap.rx_coe_type1 = (hw_cap >> 17) & 1U;
    
#line 1594 
    priv->dma_cap.rx_coe_type2 = (hw_cap >> 18) & 1U;
    
#line 1596 
    priv->dma_cap.rxfifo_over_2048 = (hw_cap >> 19) & 1U;
    
#line 1599 
    priv->dma_cap.number_rx_channel = (hw_cap >> 20) & 3U;
    
#line 1601 
    priv->dma_cap.number_tx_channel = (hw_cap >> 22) & 3U;
    
#line 1604 
    priv->dma_cap.enh_desc = (hw_cap >> 24) & 1U;
  }
  else ;
  
#line 1607 
  __retres = (int)hw_cap;
  
#line 1607 
  return __retres;
}


#line 1617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_check_ether_addr(struct stmmac_priv *priv)
{
  int tmp_2;
  bool tmp_1;
  
#line 1619 
  tmp_1 = is_valid_ether_addr((u8 const *)(priv->dev)->dev_addr);
  
#line 1619 
  if (tmp_1) 
#line 1619 
             tmp_2 = 0; else 
#line 1619 
                             tmp_2 = 1;
  
#line 1619 
  if (tmp_2) {
    int tmp_0;
    bool tmp;
    
#line 1620 
    (*(((priv->hw)->mac)->get_umac_addr))(priv->hw,(priv->dev)->dev_addr,0U);
    
#line 1622 
    tmp = is_valid_ether_addr((u8 const *)(priv->dev)->dev_addr);
    
#line 1622 
    if (tmp) 
#line 1622 
             tmp_0 = 0; else 
#line 1622 
                             tmp_0 = 1;
    
#line 1622 
    if (tmp_0) 
#line 1623 
               eth_hw_addr_random(priv->dev); else ;
    
#line 1624 
    printk("\001",(char *)(& (priv->dev)->name),(priv->dev)->dev_addr);
  }
  else ;
  
#line 1626 
  return;
}


#line 1637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init_dma_engine(struct stmmac_priv *priv)
{
  int tmp;
  
#line 1639 
  int pbl = 8;
  
#line 1639 
  int fixed_burst = 0;
  
#line 1639 
  int burst_len = 0;
  
#line 1640 
  int mixed_burst = 0;
  
#line 1641 
  int atds = 0;
  
#line 1643 
  if ((priv->plat)->dma_cfg != (struct stmmac_dma_cfg *)0) {
    
#line 1644 
    pbl = ((priv->plat)->dma_cfg)->pbl;
    
#line 1645 
    fixed_burst = ((priv->plat)->dma_cfg)->fixed_burst;
    
#line 1646 
    mixed_burst = ((priv->plat)->dma_cfg)->mixed_burst;
    
#line 1647 
    burst_len = ((priv->plat)->dma_cfg)->burst_len;
  }
  else ;
  
#line 1650 
  if (priv->extend_desc != 0 && priv->mode == 2U) 
#line 1651 
                                                  atds = 1; else ;
  
#line 1653 
  tmp = (*(((priv->hw)->dma)->init))(priv->ioaddr,pbl,fixed_burst,mixed_burst,burst_len,(unsigned int)priv->dma_tx_phy,(unsigned int)priv->dma_rx_phy,atds);
  
#line 1653 
  return tmp;
}


#line 1664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_tx_timer(unsigned long data)
{
  
#line 1666 
  struct stmmac_priv *priv = (struct stmmac_priv *)data;
  
#line 1668 
  stmmac_tx_clean(priv);
  
#line 1669 
  return;
}


#line 1679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_init_tx_coalesce(struct stmmac_priv *priv)
{
  unsigned long tmp;
  
#line 1681 
  priv->tx_coal_frames = 64U;
  
#line 1682 
  priv->tx_coal_timer = 40000U;
  {
    struct lock_class_key __key;
    
#line 1683 
    init_timer_key(& priv->txtimer,0U,"(&priv->txtimer)",& __key);
  }
  
#line 1684 
  tmp = usecs_to_jiffies(priv->tx_coal_timer);
  
#line 1684 
  priv->txtimer.expires = tmp + jiffies;
  
#line 1685 
  priv->txtimer.data = (unsigned long)priv;
  
#line 1686 
  priv->txtimer.function = & stmmac_tx_timer;
  
#line 1687 
  add_timer(& priv->txtimer);
  
#line 1688 
  return;
}


#line 1702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_hw_setup(struct net_device *dev, bool init_ptp)
{
  int __retres;
  int ret;
  
#line 1704 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1708 
  ret = stmmac_init_dma_engine(priv);
  
#line 1709 
  if (ret < 0) {
    
#line 1710 
    printk("\001","stmmac_hw_setup");
    
#line 1711 
    __retres = ret;
    
#line 1711 
    goto return_label;
  }
  else ;
  
#line 1715 
  (*(((priv->hw)->mac)->set_umac_addr))(priv->hw,dev->dev_addr,0U);
  
#line 1718 
  if ((priv->plat)->bus_setup != (void (*)(void *))0) 
#line 1719 
                                                      (*((priv->plat)->bus_setup))(priv->ioaddr); else ;
  
#line 1722 
  (*(((priv->hw)->mac)->core_init))(priv->hw,(int)dev->mtu);
  
#line 1724 
  ret = (*(((priv->hw)->mac)->rx_ipc))(priv->hw);
  
#line 1725 
  if (ret == 0) {
    
#line 1726 
    printk("\001");
    
#line 1727 
    (priv->plat)->rx_coe = 0;
    
#line 1728 
    (priv->hw)->rx_csum = 0U;
  }
  else ;
  
#line 1732 
  stmmac_set_mac(priv->ioaddr,(_Bool)1);
  
#line 1735 
  stmmac_dma_operation_mode(priv);
  
#line 1737 
  stmmac_mmc_setup(priv);
  
#line 1739 
  if ((int)init_ptp != 0) {
    
#line 1740 
    ret = stmmac_init_ptp(priv);
    
#line 1741 
    if (ret != 0 && ret != -95) 
#line 1742 
                                printk("\001","stmmac_hw_setup"); else ;
  }
  else ;
  
#line 1746 
  ret = stmmac_init_fs(dev);
  
#line 1747 
  if (ret < 0) 
#line 1748 
               printk("\001","stmmac_hw_setup"); else ;
  {
    
#line 1751 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_hw_setup", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: DMA RX/TX processes started...\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1751U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1751 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1751 
                                                        __dynamic_pr_debug(& descriptor,"%s: DMA RX/TX processes started...\n",(char *)(& dev->name)); else ;
  }
  
#line 1752 
  (*(((priv->hw)->dma)->start_tx))(priv->ioaddr);
  
#line 1753 
  (*(((priv->hw)->dma)->start_rx))(priv->ioaddr);
  
#line 1756 
  if ((priv->msg_enable & 8192U) != 0U) {
    
#line 1757 
    (*(((priv->hw)->mac)->dump_regs))(priv->hw);
    
#line 1758 
    (*(((priv->hw)->dma)->dump_regs))(priv->ioaddr);
  }
  else ;
  
#line 1760 
  priv->tx_lpi_timer = 30;
  
#line 1762 
  if (priv->use_riwt != 0 && ((priv->hw)->dma)->rx_watchdog != (void (*)(void *, u32 ))0) {
    
#line 1763 
    priv->rx_riwt = 255U;
    
#line 1764 
    (*(((priv->hw)->dma)->rx_watchdog))(priv->ioaddr,255U);
  }
  else ;
  
#line 1767 
  if (priv->pcs != 0 && ((priv->hw)->mac)->ctrl_ane != (void (*)(struct mac_device_info *, bool ))0) 
    
#line 1768 
    (*(((priv->hw)->mac)->ctrl_ane))(priv->hw,(_Bool)0); else ;
  
#line 1770 
  __retres = 0;
  return_label: 
#line 1770 
                return __retres;
}


#line 1782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_open(struct net_device *dev)
{
  int __retres;
  int ret;
  
#line 1784 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1787 
  stmmac_check_ether_addr(priv);
  
#line 1789 
  if ((priv->pcs != 1 && priv->pcs != 4) && priv->pcs != 8) {
    
#line 1791 
    ret = stmmac_init_phy(dev);
    
#line 1792 
    if (ret != 0) {
      
#line 1793 
      printk("\001","stmmac_open",ret);
      
#line 1795 
      __retres = ret;
      
#line 1795 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1800 
  memset((void *)(& priv->xstats),0,704UL);
  
#line 1801 
  priv->xstats.threshold = (unsigned long)tc;
  
#line 1804 
  priv->dma_tx_size = (unsigned int)(dma_txsize + 63) & 4294967232U;
  
#line 1805 
  priv->dma_rx_size = (unsigned int)(dma_rxsize + 63) & 4294967232U;
  
#line 1806 
  priv->dma_buf_sz = (unsigned int)(buf_sz + 63) & 4294967232U;
  
#line 1808 
  ret = alloc_dma_desc_resources(priv);
  
#line 1809 
  if (ret < 0) {
    
#line 1810 
    printk("\001","stmmac_open");
    
#line 1811 
    goto dma_desc_error;
  }
  else ;
  
#line 1814 
  ret = init_dma_desc_rings(dev,208U);
  
#line 1815 
  if (ret < 0) {
    
#line 1816 
    printk("\001","stmmac_open");
    
#line 1817 
    goto init_error;
  }
  else ;
  
#line 1820 
  ret = stmmac_hw_setup(dev,(_Bool)1);
  
#line 1821 
  if (ret < 0) {
    
#line 1822 
    printk("\001","stmmac_open");
    
#line 1823 
    goto init_error;
  }
  else ;
  
#line 1826 
  stmmac_init_tx_coalesce(priv);
  
#line 1828 
  if (priv->phydev != (struct phy_device *)0) 
#line 1829 
                                              phy_start(priv->phydev); else ;
  
#line 1832 
  ret = ldv_request_irq_86((unsigned int)dev->irq,& stmmac_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
  
#line 1834 
  if ((long)(ret < 0) != 0L) {
    
#line 1835 
    printk("\001","stmmac_open",dev->irq,ret);
    
#line 1837 
    goto init_error;
  }
  else ;
  
#line 1841 
  if (priv->wol_irq != dev->irq) {
    
#line 1842 
    ret = ldv_request_irq_87((unsigned int)priv->wol_irq,& stmmac_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
    
#line 1844 
    if ((long)(ret < 0) != 0L) {
      
#line 1845 
      printk("\001","stmmac_open",priv->wol_irq,ret);
      
#line 1847 
      goto wolirq_error;
    }
    else ;
  }
  else ;
  
#line 1852 
  if (priv->lpi_irq > 0) {
    
#line 1853 
    ret = ldv_request_irq_88((unsigned int)priv->lpi_irq,& stmmac_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
    
#line 1855 
    if ((long)(ret < 0) != 0L) {
      
#line 1856 
      printk("\001","stmmac_open",priv->lpi_irq,ret);
      
#line 1858 
      goto lpiirq_error;
    }
    else ;
  }
  else ;
  
#line 1862 
  napi_enable(& priv->napi);
  
#line 1863 
  netif_start_queue(dev);
  
#line 1865 
  __retres = 0;
  
#line 1865 
  goto return_label;
  lpiirq_error: 
#line 1867 
  ;
  
#line 1868 
  if (priv->wol_irq != dev->irq) 
#line 1869 
                                 ldv_free_irq_89((unsigned int)priv->wol_irq,(void *)dev); else ;
  wolirq_error: 
#line 1870 
  ;
  
#line 1871 
  ldv_free_irq_90((unsigned int)dev->irq,(void *)dev);
  init_error: 
#line 1873 
  ;
  
#line 1874 
  free_dma_desc_resources(priv);
  dma_desc_error: 
#line 1875 
  ;
  
#line 1876 
  if (priv->phydev != (struct phy_device *)0) 
#line 1877 
                                              phy_disconnect(priv->phydev); else ;
  
#line 1879 
  __retres = ret;
  return_label: 
#line 1879 
                return __retres;
}


#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_release(struct net_device *dev)
{
  int __retres;
  
#line 1890 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1892 
  if (priv->eee_enabled != 0) 
#line 1893 
                              ldv_del_timer_sync_91(& priv->eee_ctrl_timer); else ;
  
#line 1896 
  if (priv->phydev != (struct phy_device *)0) {
    
#line 1897 
    phy_stop(priv->phydev);
    
#line 1898 
    phy_disconnect(priv->phydev);
    
#line 1899 
    priv->phydev = (struct phy_device *)0;
  }
  else ;
  
#line 1902 
  netif_start_queue(dev);
  
#line 1904 
  napi_disable(& priv->napi);
  
#line 1906 
  ldv_del_timer_sync_92(& priv->txtimer);
  
#line 1909 
  ldv_free_irq_93((unsigned int)dev->irq,(void *)dev);
  
#line 1910 
  if (priv->wol_irq != dev->irq) 
#line 1911 
                                 ldv_free_irq_94((unsigned int)priv->wol_irq,(void *)dev); else ;
  
#line 1912 
  if (priv->lpi_irq > 0) 
#line 1913 
                         ldv_free_irq_95((unsigned int)priv->lpi_irq,(void *)dev); else ;
  
#line 1916 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr);
  
#line 1917 
  (*(((priv->hw)->dma)->stop_rx))(priv->ioaddr);
  
#line 1920 
  free_dma_desc_resources(priv);
  
#line 1923 
  stmmac_set_mac(priv->ioaddr,(_Bool)0);
  
#line 1925 
  netif_carrier_off(dev);
  
#line 1928 
  stmmac_exit_fs(dev);
  
#line 1931 
  stmmac_release_ptp(priv);
  
#line 1933 
  __retres = 0;
  
#line 1933 
  return __retres;
}


#line 1944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static netdev_tx_t stmmac_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  unsigned int entry;
  int i;
  unsigned char *tmp_0;
  struct dma_desc *desc;
  struct dma_desc *first;
  u32 tmp_4;
  u32 tmp_14;
  unsigned char *tmp_17;
  
#line 1946 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 1947 
  unsigned int txsize = priv->dma_tx_size;
  
#line 1949 
  int csum_insertion = 0;
  
#line 1949 
  int is_jumbo = 0;
  
#line 1950 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1950 
  int nfrags = (int)((struct skb_shared_info *)tmp_0)->nr_frags;
  
#line 1952 
  unsigned int nopaged_len = skb_headlen((struct sk_buff const *)skb);
  
#line 1953 
  unsigned int enh_desc = (unsigned int)(priv->plat)->enh_desc;
  
#line 1955 
  ldv_spin_lock_96(& priv->tx_lock);
  
#line 1957 
  tmp_4 = stmmac_tx_avail(priv);
  
#line 1957 
  ;
  
#line 1957 
  if ((long)(tmp_4 < (unsigned int)(nfrags + 1)) != 0L) {
    int tmp_3;
    bool tmp_2;
    
#line 1958 
    ldv_spin_unlock_97(& priv->tx_lock);
    
#line 1959 
    tmp_2 = netif_queue_stopped((struct net_device const *)dev);
    
#line 1959 
    if (tmp_2) 
#line 1959 
               tmp_3 = 0; else 
#line 1959 
                               tmp_3 = 1;
    
#line 1959 
    if (tmp_3) {
      
#line 1960 
      netif_start_queue(dev);
      
#line 1962 
      printk("\001","stmmac_xmit");
    }
    else ;
    
#line 1964 
    __retres = NETDEV_TX_BUSY;
    
#line 1964 
    goto return_label;
  }
  else ;
  
#line 1967 
  if ((int)priv->tx_path_in_lpi_mode != 0) 
#line 1968 
                                           stmmac_disable_eee_mode(priv); else ;
  
#line 1970 
  entry = priv->cur_tx % txsize;
  
#line 1972 
  csum_insertion = (unsigned int)*((unsigned char *)skb + 145UL) == 6U;
  
#line 1974 
  if (priv->extend_desc != 0) 
#line 1975 
                              desc = (struct dma_desc *)(priv->dma_etx + entry); else 
                                                                    
#line 1977 
                                                                    desc = priv->dma_tx + entry;
  
#line 1979 
  first = desc;
  
#line 1982 
  if (enh_desc != 0U) {
    unsigned int tmp_5;
    
#line 1983 
    tmp_5 = (*(((priv->hw)->mode)->is_jumbo_frm))((int)skb->len,(int)enh_desc);
    
#line 1983 
    is_jumbo = (int)tmp_5;
  }
  else ;
  
#line 1985 
  if ((long)(is_jumbo == 0) != 0L) {
    dma_addr_t tmp_6;
    int tmp_7;
    
#line 1986 
    tmp_6 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)nopaged_len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 1986 
    desc->des2 = (unsigned int)tmp_6;
    
#line 1988 
    tmp_7 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 1988 
    if (tmp_7 != 0) 
#line 1989 
                    goto dma_map_err; else ;
    
#line 1990 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 1991 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,1,(int)nopaged_len,csum_insertion,(int)priv->mode);
  }
  else {
    int tmp_8;
    
#line 1994 
    desc = first;
    
#line 1995 
    tmp_8 = (*(((priv->hw)->mode)->jumbo_frm))((void *)priv,skb,csum_insertion);
    
#line 1995 
    entry = (unsigned int)tmp_8;
  }
  
#line 2000 
  i = 0;
  
#line 2000 
  goto ldv_53496;
  ldv_53495: 
#line 2001 
  ;
  {
    unsigned char *tmp_9;
    unsigned int tmp_10;
    dma_addr_t tmp_11;
    int tmp_12;
    
#line 2001 
    tmp_9 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2001 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_9)->frags[i]);
    
#line 2002 
    tmp_10 = skb_frag_size(frag);
    
#line 2002 
    int len = (int)tmp_10;
    
#line 2004 
    *(priv->tx_skbuff + entry) = (struct sk_buff *)0;
    
#line 2005 
    priv->cur_tx += 1U;
    
#line 2005 
    entry = priv->cur_tx % txsize;
    
#line 2006 
    if (priv->extend_desc != 0) 
#line 2007 
                                desc = (struct dma_desc *)(priv->dma_etx + entry); else 
                                                                    
#line 2009 
                                                                    desc = priv->dma_tx + entry;
    
#line 2011 
    tmp_11 = skb_frag_dma_map(priv->device,frag,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 2011 
    desc->des2 = (unsigned int)tmp_11;
    
#line 2013 
    tmp_12 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 2013 
    if (tmp_12 != 0) 
#line 2014 
                     goto dma_map_err; else ;
    
#line 2016 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 2017 
    (priv->tx_skbuff_dma + entry)->map_as_page = (_Bool)1;
    
#line 2018 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,0,len,csum_insertion,(int)priv->mode);
    
#line 2020 
    ldv_inline_asm();
    
#line 2021 
    (*(((priv->hw)->desc)->set_tx_owner))(desc);
    
#line 2022 
    ldv_inline_asm();
  }
  
#line 2000 
  i += 1;
  ldv_53496: 
#line 2001 
  ;
  
#line 2000 
  if (i < nfrags) 
#line 2002 
                  goto ldv_53495; else 
#line 2005 
                                       goto ldv_53497;
  ldv_53497: 
#line 2006 
  ;
  
#line 2025 
  *(priv->tx_skbuff + entry) = skb;
  
#line 2028 
  (*(((priv->hw)->desc)->close_tx_desc))(desc);
  
#line 2029 
  ldv_inline_asm();
  
#line 2035 
  priv->tx_count_frames = (priv->tx_count_frames + (unsigned int)nfrags) + 1U;
  
#line 2036 
  if (priv->tx_coal_frames > priv->tx_count_frames) {
    unsigned long tmp_13;
    
#line 2037 
    (*(((priv->hw)->desc)->clear_tx_ic))(desc);
    
#line 2038 
    priv->xstats.tx_reset_ic_bit += 1UL;
    
#line 2039 
    tmp_13 = usecs_to_jiffies(priv->tx_coal_timer);
    
#line 2039 
    ;
    
#line 2039 
    ;
    
#line 2039 
    ldv_mod_timer_98(& priv->txtimer,tmp_13 + jiffies);
  }
  else 
#line 2042 
       priv->tx_count_frames = 0U;
  
#line 2045 
  (*(((priv->hw)->desc)->set_tx_owner))(first);
  
#line 2046 
  ldv_inline_asm();
  
#line 2048 
  priv->cur_tx += 1U;
  
#line 2050 
  if ((priv->msg_enable & 4096U) != 0U) {
    {
      
#line 2051 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: curr %d dirty=%d entry=%d, first=%p, nfrags=%d", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2053U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2051 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2051 
                                                          __dynamic_pr_debug(& descriptor,"%s: curr %d dirty=%d entry=%d, first=%p, nfrags=%d","stmmac_xmit",priv->cur_tx % txsize,priv->dirty_tx % txsize,entry,first,nfrags); else ;
    }
    
#line 2055 
    if (priv->extend_desc != 0) 
#line 2056 
                                stmmac_display_ring((void *)priv->dma_etx,(int)txsize,1); else 
                                                                    
#line 2058 
                                                                    stmmac_display_ring((void *)priv->dma_tx,(int)txsize,0);
    {
      
#line 2060 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = ">>> frame to be transmitted: ", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2060U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2060 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 2060 
                                                            __dynamic_pr_debug(& descriptor_0,">>> frame to be transmitted: "); else ;
    }
    
#line 2061 
    print_pkt(skb->data,(int)skb->len);
  }
  else ;
  
#line 2063 
  tmp_14 = stmmac_tx_avail(priv);
  
#line 2063 
  if ((long)(tmp_14 <= 18U) != 0L) {
    
#line 2064 
    if ((priv->msg_enable & 8192U) != 0U) {
      
#line 2065 
      struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "stmmac_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: stop transmitted packets\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2065U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2065 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 2065 
                                                            __dynamic_pr_debug(& descriptor_1,"%s: stop transmitted packets\n","stmmac_xmit"); else ;
    }
    else ;
    
#line 2066 
    netif_start_queue(dev);
  }
  else ;
  
#line 2069 
  dev->stats.tx_bytes += (unsigned long)skb->len;
  
#line 2071 
  tmp_17 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2071 
  ;
  
#line 2071 
  if ((long)(((int)((struct skb_shared_info *)tmp_17)->tx_flags & 1) != 0) != 0L) {
    
#line 2071 
    if ((long)(priv->hwts_tx_en != 0) != 0L) {
      unsigned char *tmp_15;
      unsigned char *tmp_16;
      
#line 2074 
      tmp_15 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2074 
      tmp_16 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2074 
      ((struct skb_shared_info *)tmp_15)->tx_flags = (unsigned char)((unsigned int)((struct skb_shared_info *)tmp_16)->tx_flags | 4U);
      
#line 2075 
      (*(((priv->hw)->desc)->enable_tx_timestamp))(first);
    }
    else ;
  }
  else ;
  
#line 2078 
  if (priv->hwts_tx_en == 0) 
#line 2079 
                             skb_tx_timestamp(skb); else ;
  
#line 2081 
  netdev_sent_queue(dev,skb->len);
  
#line 2082 
  (*(((priv->hw)->dma)->enable_dma_transmission))(priv->ioaddr);
  
#line 2084 
  ldv_spin_unlock_99(& priv->tx_lock);
  
#line 2085 
  __retres = NETDEV_TX_OK;
  
#line 2085 
  goto return_label;
  dma_map_err: 
#line 2087 
  ;
  
#line 2088 
  ldv_spin_unlock_100(& priv->tx_lock);
  
#line 2089 
  dev_err((struct device const *)priv->device,"Tx dma map failed\n");
  
#line 2090 
  consume_skb(skb);
  
#line 2091 
  (priv->dev)->stats.tx_dropped += 1UL;
  
#line 2092 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2092 
                return __retres;
}


#line 2095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_rx_vlan(struct net_device *dev, struct sk_buff *skb)
{
  struct ethhdr *ehdr;
  u16 vlanid;
  
#line 2100 
  if ((dev->features & 256ULL) != 0ULL) {
    int tmp;
    
#line 2101 
    tmp = __vlan_get_tag((struct sk_buff const *)skb,& vlanid);
    
#line 2101 
    if (tmp == 0) {
      
#line 2104 
      ehdr = (struct ethhdr *)skb->data;
      
#line 2105 
      memmove((void *)(skb->data + 4U),(void const *)ehdr,12UL);
      
#line 2106 
      skb_pull(skb,4U);
      
#line 2107 
      __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vlanid));
    }
    else ;
  }
  else ;
  
#line 2109 
  return;
}


#line 2118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
__inline static void stmmac_rx_refill(struct stmmac_priv *priv)
{
  
#line 2120 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 2121 
  int bfsize = (int)priv->dma_buf_sz;
  
#line 2123 
  goto ldv_53519;
  ldv_53518: 
#line 2124 
  ;
  {
    struct dma_desc *p;
    
#line 2124 
    unsigned int entry = priv->dirty_rx % rxsize;
    
#line 2127 
    if (priv->extend_desc != 0) 
#line 2128 
                                p = (struct dma_desc *)(priv->dma_erx + entry); else 
                                                                    
#line 2130 
                                                                    p = priv->dma_rx + entry;
    
#line 2132 
    if ((long)(*(priv->rx_skbuff + entry) == (struct sk_buff *)0) != 0L) {
      struct sk_buff *skb;
      int tmp;
      
#line 2135 
      skb = netdev_alloc_skb_ip_align(priv->dev,(unsigned int)bfsize);
      
#line 2137 
      if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 2138 
                                                    goto ldv_53515; else ;
      
#line 2140 
      *(priv->rx_skbuff + entry) = skb;
      
#line 2141 
      *(priv->rx_skbuff_dma + entry) = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)bfsize,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 2144 
      tmp = dma_mapping_error(priv->device,*(priv->rx_skbuff_dma + entry));
      
#line 2144 
      if (tmp != 0) {
        
#line 2146 
        dev_err((struct device const *)priv->device,"Rx dma map failed\n");
        
#line 2147 
        consume_skb(skb);
        
#line 2148 
        goto ldv_53515;
      }
      else ;
      
#line 2150 
      p->des2 = (unsigned int)*(priv->rx_skbuff_dma + entry);
      
#line 2152 
      (*(((priv->hw)->mode)->refill_desc3))((void *)priv,p);
      
#line 2154 
      if ((priv->msg_enable & 2048U) != 0U) {
        
#line 2155 
        struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_rx_refill", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "\trefill entry #%d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2155U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 2155 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2155 
                                                            __dynamic_pr_debug(& descriptor,"\trefill entry #%d\n",entry); else ;
      }
      else ;
    }
    else ;
    
#line 2158 
    ldv_inline_asm();
    
#line 2158 
    (*(((priv->hw)->desc)->set_rx_owner))(p);
    
#line 2159 
    ldv_inline_asm();
  }
  
#line 2123 
  priv->dirty_rx += 1U;
  ldv_53519: 
#line 2124 
  ;
  
#line 2123 
  if (priv->cur_rx != priv->dirty_rx) 
#line 2125 
                                      goto ldv_53518; else 
#line 2128 
                                                           goto ldv_53515;
  ldv_53515: 
#line 2129 
  ;
  
#line 2130 
  return;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_rx(struct stmmac_priv *priv, int limit)
{
  int __retres;
  unsigned int next_entry;
  
#line 2172 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 2173 
  unsigned int entry = priv->cur_rx % rxsize;
  
#line 2175 
  unsigned int count = 0U;
  
#line 2176 
  int coe = (int)(priv->hw)->rx_csum;
  
#line 2178 
  if ((priv->msg_enable & 2048U) != 0U) {
    {
      
#line 2179 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_rx", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: descriptor ring:\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2179U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2179 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2179 
                                                          __dynamic_pr_debug(& descriptor,"%s: descriptor ring:\n","stmmac_rx"); else ;
    }
    
#line 2180 
    if (priv->extend_desc != 0) 
#line 2181 
                                stmmac_display_ring((void *)priv->dma_erx,(int)rxsize,1); else 
                                                                    
#line 2183 
                                                                    stmmac_display_ring((void *)priv->dma_rx,(int)rxsize,0);
  }
  else ;
  
#line 2185 
  goto ldv_53540;
  ldv_53539: 
#line 2186 
  ;
  {
    int status;
    struct dma_desc *p;
    int tmp;
    
#line 2189 
    if (priv->extend_desc != 0) 
#line 2190 
                                p = (struct dma_desc *)(priv->dma_erx + entry); else 
                                                                    
#line 2192 
                                                                    p = priv->dma_rx + entry;
    
#line 2194 
    tmp = (*(((priv->hw)->desc)->get_rx_owner))(p);
    
#line 2194 
    if (tmp != 0) 
#line 2195 
                  goto ldv_53533; else ;
    
#line 2197 
    count += 1U;
    
#line 2199 
    priv->cur_rx += 1U;
    
#line 2199 
    next_entry = priv->cur_rx % rxsize;
    
#line 2200 
    if (priv->extend_desc != 0) 
#line 2201 
                                __builtin_prefetch((void const *)(priv->dma_erx + next_entry)); else 
                                                                    
#line 2203 
                                                                    __builtin_prefetch((void const *)(priv->dma_rx + next_entry));
    
#line 2206 
    status = (*(((priv->hw)->desc)->rx_status))((void *)(& (priv->dev)->stats),& priv->xstats,p);
    
#line 2208 
    if (priv->extend_desc != 0 && ((priv->hw)->desc)->rx_extended_status != (void (*)(void *, struct stmmac_extra_stats *, struct dma_extended_desc *))0) 
      
#line 2209 
      (*(((priv->hw)->desc)->rx_extended_status))((void *)(& (priv->dev)->stats),& priv->xstats,priv->dma_erx + entry); else ;
    
#line 2213 
    if ((long)(status == 1) != 0L) {
      
#line 2214 
      (priv->dev)->stats.rx_errors += 1UL;
      
#line 2215 
      if (priv->hwts_rx_en != 0 && priv->extend_desc == 0) {
        
#line 2221 
        *(priv->rx_skbuff + entry) = (struct sk_buff *)0;
        
#line 2222 
        dma_unmap_single_attrs(priv->device,*(priv->rx_skbuff_dma + entry),(unsigned long)priv->dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      }
      else ;
    }
    else {
      struct sk_buff *skb;
      int frame_len;
      
#line 2231 
      frame_len = (*(((priv->hw)->desc)->get_rx_frame_len))(p,coe);
      
#line 2236 
      if ((long)(status != 4) != 0L) 
#line 2237 
                                     frame_len += -4; else ;
      
#line 2239 
      if ((priv->msg_enable & 2048U) != 0U) {
        {
          
#line 2240 
          struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "stmmac_rx", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "\tdesc: %p [entry %d] buff=0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2241U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 2240 
          if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 2240 
                                                                __dynamic_pr_debug(& descriptor_0,"\tdesc: %p [entry %d] buff=0x%x\n",p,entry,p->des2); else ;
        }
        
#line 2242 
        if (frame_len > 1514) {
          
#line 2243 
          struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "stmmac_rx", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "\tframe size %d, COE: %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2244U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 2243 
          if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 2243 
                                                                __dynamic_pr_debug(& descriptor_1,"\tframe size %d, COE: %d\n",frame_len,status); else ;
        }
        else ;
      }
      else ;
      
#line 2246 
      skb = *(priv->rx_skbuff + entry);
      
#line 2247 
      if ((long)(skb == (struct sk_buff *)0) != 0L) {
        
#line 2248 
        printk("\001",(char *)(& (priv->dev)->name));
        
#line 2250 
        (priv->dev)->stats.rx_dropped += 1UL;
        
#line 2251 
        goto ldv_53533;
      }
      else ;
      
#line 2253 
      __builtin_prefetch((void const *)skb->data);
      
#line 2254 
      *(priv->rx_skbuff + entry) = (struct sk_buff *)0;
      
#line 2256 
      stmmac_get_rx_hwtstamp(priv,entry,skb);
      
#line 2258 
      skb_put(skb,(unsigned int)frame_len);
      
#line 2259 
      dma_unmap_single_attrs(priv->device,*(priv->rx_skbuff_dma + entry),(unsigned long)priv->dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 2263 
      if ((priv->msg_enable & 4096U) != 0U) {
        {
          
#line 2264 
          struct _ddebug descriptor_2 = {.modname = "stmmac", .function = "stmmac_rx", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "frame received (%dbytes)", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2264U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
          
#line 2264 
          if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 2264 
                                                                __dynamic_pr_debug(& descriptor_2,"frame received (%dbytes)",frame_len); else ;
        }
        
#line 2265 
        print_pkt(skb->data,frame_len);
      }
      else ;
      
#line 2268 
      stmmac_rx_vlan(priv->dev,skb);
      
#line 2270 
      skb->protocol = eth_type_trans(skb,priv->dev);
      
#line 2272 
      if ((long)(coe == 0) != 0L) 
#line 2273 
                                  skb_checksum_none_assert((struct sk_buff const *)skb); else 
                                                                    
#line 2275 
                                                                    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
      
#line 2277 
      napi_gro_receive(& priv->napi,skb);
      
#line 2279 
      (priv->dev)->stats.rx_packets += 1UL;
      
#line 2280 
      (priv->dev)->stats.rx_bytes += (unsigned long)frame_len;
    }
    
#line 2282 
    entry = next_entry;
  }
  ldv_53540: 
#line 2284 
  ;
  
#line 2185 
  if (count < (unsigned int)limit) 
#line 2187 
                                   goto ldv_53539; else 
#line 2190 
                                                        goto ldv_53533;
  ldv_53533: 
#line 2191 
  ;
  
#line 2285 
  stmmac_rx_refill(priv);
  
#line 2287 
  priv->xstats.rx_pkt_n += (unsigned long)count;
  
#line 2289 
  __retres = (int)count;
  
#line 2289 
  return __retres;
}


#line 2300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_poll(struct napi_struct *napi, int budget)
{
  struct stmmac_priv *tmp;
  {
    
#line 2302 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2302 
    tmp = (struct stmmac_priv *)__mptr + 18446744073709551232U;
  }
  
#line 2302 
  struct stmmac_priv *priv = tmp;
  
#line 2303 
  int work_done = 0;
  
#line 2305 
  priv->xstats.napi_poll += 1UL;
  
#line 2306 
  stmmac_tx_clean(priv);
  
#line 2308 
  work_done = stmmac_rx(priv,budget);
  
#line 2309 
  if (work_done < budget) {
    
#line 2310 
    napi_complete(napi);
    
#line 2311 
    stmmac_enable_dma_irq(priv);
  }
  else ;
  
#line 2313 
  return work_done;
}


#line 2324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_tx_timeout(struct net_device *dev)
{
  
#line 2326 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2329 
  stmmac_tx_err(priv);
  
#line 2330 
  return;
}


#line 2341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_set_rx_mode(struct net_device *dev)
{
  
#line 2343 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2345 
  (*(((priv->hw)->mac)->set_filter))(priv->hw,dev);
  
#line 2346 
  return;
}


#line 2359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int max_mtu;
  bool tmp_0;
  
#line 2361 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2364 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2364 
  if ((int)tmp_0 != 0) {
    
#line 2365 
    printk("\001",(char *)(& dev->name));
    
#line 2366 
    __retres = -16;
    
#line 2366 
    goto return_label;
  }
  else ;
  
#line 2369 
  if ((priv->plat)->enh_desc != 0) 
#line 2370 
                                   max_mtu = 9000;
  else {
    int tmp_2;
    {
      int tmp_1;
      
#line 2372 
      int _max1 = 32;
      
#line 2372 
      int _max2 = 64;
      
#line 2372 
      if (_max1 > _max2) 
#line 2372 
                         tmp_1 = _max1; else 
#line 2372 
                                             tmp_1 = _max2;
      
#line 2372 
      tmp_2 = tmp_1;
    }
    
#line 2372 
    max_mtu = (int)(3776U - (unsigned int)tmp_2);
  }
  
#line 2374 
  if ((priv->plat)->maxmtu < max_mtu) 
#line 2375 
                                      max_mtu = (priv->plat)->maxmtu; else ;
  
#line 2377 
  if (new_mtu <= 45 || new_mtu > max_mtu) {
    
#line 2378 
    printk("\001",(char *)(& dev->name),max_mtu);
    
#line 2379 
    __retres = -22;
    
#line 2379 
    goto return_label;
  }
  else ;
  
#line 2382 
  dev->mtu = (unsigned int)new_mtu;
  
#line 2383 
  netdev_update_features(dev);
  
#line 2385 
  __retres = 0;
  return_label: 
#line 2385 
                return __retres;
}


#line 2388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static netdev_features_t stmmac_fix_features(struct net_device *dev, netdev_features_t features)
{
  
#line 2391 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2393 
  if ((priv->plat)->rx_coe == 0) 
#line 2394 
                                 features &= 18446744056529682431ULL; else ;
  
#line 2396 
  if ((priv->plat)->tx_coe == 0) 
#line 2397 
                                 features &= 18446744073709551589ULL; else ;
  
#line 2404 
  if ((priv->plat)->bugged_jumbo != 0 && dev->mtu > 1500U) 
#line 2405 
                                                           features &= 18446744073709551589ULL; else ;
  
#line 2407 
  return features;
}


#line 2410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2413 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 2416 
  if ((features & 17179869184ULL) != 0ULL) 
#line 2417 
                                           (priv->hw)->rx_csum = (unsigned int)(priv->plat)->rx_coe; else 
                                                                    
#line 2419 
                                                                    (priv->hw)->rx_csum = 0U;
  
#line 2423 
  (*(((priv->hw)->mac)->rx_ipc))(priv->hw);
  
#line 2425 
  __retres = 0;
  
#line 2425 
  return __retres;
}


#line 2439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static irqreturn_t stmmac_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 2441 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 2442 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2444 
  if (priv->irq_wake != 0) 
#line 2445 
                           pm_wakeup_event(priv->device,0U); else ;
  
#line 2447 
  if ((long)(dev == (struct net_device *)0) != 0L) {
    
#line 2448 
    printk("\001","stmmac_interrupt");
    
#line 2449 
    __retres = IRQ_NONE;
    
#line 2449 
    goto return_label;
  }
  else ;
  
#line 2453 
  if ((priv->plat)->has_gmac != 0) {
    int tmp_0;
    
#line 2454 
    tmp_0 = (*(((priv->hw)->mac)->host_irq_status))(priv->hw,& priv->xstats);
    
#line 2454 
    int status = tmp_0;
    
#line 2456 
    if ((long)(status != 0) != 0L) {
      
#line 2458 
      if ((status & 1) != 0) 
#line 2459 
                             priv->tx_path_in_lpi_mode = (_Bool)1; else ;
      
#line 2460 
      if ((status & 2) != 0) 
#line 2461 
                             priv->tx_path_in_lpi_mode = (_Bool)0; else ;
    }
    else ;
  }
  else ;
  
#line 2466 
  stmmac_dma_interrupt(priv);
  
#line 2468 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2468 
                return __retres;
}


#line 2475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_poll_controller(struct net_device *dev)
{
  
#line 2477 
  disable_irq((unsigned int)dev->irq);
  
#line 2478 
  stmmac_interrupt(dev->irq,(void *)dev);
  
#line 2479 
  enable_irq((unsigned int)dev->irq);
  
#line 2480 
  return;
}


#line 2492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 2494 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2495 
  int ret = -95;
  
#line 2497 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2497 
  if (tmp_0) 
#line 2497 
             tmp_1 = 0; else 
#line 2497 
                             tmp_1 = 1;
  
#line 2497 
  if (tmp_1) {
    
#line 2498 
    __retres = -22;
    
#line 2498 
    goto return_label;
  }
  else ;
  
#line 2500 
  switch (cmd) {
    case 35143: 
#line 2501 
    ;
    case 35144: 
#line 2502 
    ;
    case 35145: 
#line 2503 
    ;
    
#line 2504 
    if (priv->phydev == (struct phy_device *)0) {
      
#line 2505 
      __retres = -22;
      
#line 2505 
      goto return_label;
    }
    else ;
    
#line 2506 
    ret = phy_mii_ioctl(priv->phydev,rq,cmd);
    
#line 2507 
    goto ldv_53597;
    case 35248: 
#line 2508 
    ;
    
#line 2509 
    ret = stmmac_hwtstamp_ioctl(dev,rq);
    
#line 2510 
    goto ldv_53597;
    default: 
#line 2511 
    ;
    
#line 2512 
    goto ldv_53597;
  }
  ldv_53597: 
#line 2515 
  ;
  
#line 2515 
  __retres = ret;
  return_label: 
#line 2515 
                return __retres;
}


#line 2519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static struct dentry *stmmac_fs_dir;

#line 2521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void sysfs_display_ring(void *head, int size, int extend_desc, struct seq_file *seq)
{
  int i;
  
#line 2525 
  struct dma_extended_desc *ep = (struct dma_extended_desc *)head;
  
#line 2526 
  struct dma_desc *p = (struct dma_desc *)head;
  
#line 2528 
  i = 0;
  
#line 2528 
  goto ldv_53612;
  ldv_53611: 
#line 2529 
  ;
  {
    u64 x;
    
#line 2530 
    if (extend_desc != 0) {
      phys_addr_t tmp;
      
#line 2531 
      x = *((u64 *)ep);
      
#line 2532 
      ;
      
#line 2532 
      ;
      
#line 2532 
      ;
      
#line 2532 
      ;
      
#line 2533 
      tmp = virt_to_phys((void volatile *)ep);
      
#line 2532 
      ;
      
#line 2532 
      ;
      
#line 2532 
      seq_printf(seq,"%d [0x%x]: 0x%x 0x%x 0x%x 0x%x\n",i,(unsigned int)tmp,(unsigned int)x,(unsigned int)(x >> 32),ep->basic.des2,ep->basic.des3);
      
#line 2536 
      ep += 1;
    }
    else {
      phys_addr_t tmp_0;
      
#line 2538 
      x = *((u64 *)p);
      
#line 2539 
      ;
      
#line 2539 
      ;
      
#line 2539 
      ;
      
#line 2539 
      ;
      
#line 2540 
      tmp_0 = virt_to_phys((void volatile *)ep);
      
#line 2539 
      ;
      
#line 2539 
      ;
      
#line 2539 
      seq_printf(seq,"%d [0x%x]: 0x%x 0x%x 0x%x 0x%x\n",i,(unsigned int)tmp_0,(unsigned int)x,(unsigned int)(x >> 32),p->des2,p->des3);
      
#line 2543 
      p += 1;
    }
    
#line 2545 
    seq_printf(seq,"\n");
  }
  
#line 2528 
  i += 1;
  ldv_53612: 
#line 2529 
  ;
  
#line 2528 
  if (i < size) 
#line 2530 
                goto ldv_53611; else 
#line 2533 
                                     goto ldv_53613;
  ldv_53613: 
#line 2534 
  ;
  
#line 2535 
  return;
}


#line 2549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_sysfs_ring_read(struct seq_file *seq, void *v)
{
  int __retres;
  
#line 2551 
  struct net_device *dev = (struct net_device *)seq->private;
  
#line 2552 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2553 
  unsigned int txsize = priv->dma_tx_size;
  
#line 2554 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 2556 
  if (priv->extend_desc != 0) {
    
#line 2557 
    seq_printf(seq,"Extended RX descriptor ring:\n");
    
#line 2558 
    sysfs_display_ring((void *)priv->dma_erx,(int)rxsize,1,seq);
    
#line 2559 
    seq_printf(seq,"Extended TX descriptor ring:\n");
    
#line 2560 
    sysfs_display_ring((void *)priv->dma_etx,(int)txsize,1,seq);
  }
  else {
    
#line 2562 
    seq_printf(seq,"RX descriptor ring:\n");
    
#line 2563 
    sysfs_display_ring((void *)priv->dma_rx,(int)rxsize,0,seq);
    
#line 2564 
    seq_printf(seq,"TX descriptor ring:\n");
    
#line 2565 
    sysfs_display_ring((void *)priv->dma_tx,(int)txsize,0,seq);
  }
  
#line 2568 
  __retres = 0;
  
#line 2568 
  return __retres;
}


#line 2571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_sysfs_ring_open(struct inode *inode, struct file *file)
{
  int tmp;
  
#line 2573 
  tmp = single_open(file,& stmmac_sysfs_ring_read,inode->i_private);
  
#line 2573 
  return tmp;
}


#line 2576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static struct file_operations const stmmac_rings_status_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & stmmac_sysfs_ring_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_sysfs_dma_cap_read(struct seq_file *seq, void *v)
{
  int __retres;
  char *tmp_0;
  char *tmp_1;
  char *tmp_2;
  char *tmp_3;
  char *tmp_4;
  char *tmp_5;
  char *tmp_6;
  char *tmp_7;
  char *tmp_8;
  char *tmp_9;
  char *tmp_10;
  char *tmp_11;
  char *tmp_12;
  char *tmp_13;
  char *tmp_14;
  char *tmp_15;
  char *tmp_16;
  char *tmp_17;
  char *tmp_18;
  
#line 2586 
  struct net_device *dev = (struct net_device *)seq->private;
  
#line 2587 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2589 
  if (priv->hw_cap_support == 0) {
    
#line 2590 
    seq_printf(seq,"DMA HW features not supported\n");
    
#line 2591 
    __retres = 0;
    
#line 2591 
    goto return_label;
  }
  else ;
  
#line 2594 
  seq_printf(seq,"==============================\n");
  
#line 2595 
  seq_printf(seq,"\tDMA HW features\n");
  
#line 2596 
  seq_printf(seq,"==============================\n");
  
#line 2598 
  if (priv->dma_cap.mbps_10_100 != 0U) 
#line 2598 
                                       tmp_0 = (char *)"Y"; else 
#line 2598 
                                                                 tmp_0 = (char *)"N";
  
#line 2598 
  ;
  
#line 2598 
  seq_printf(seq,"\t10/100 Mbps %s\n",tmp_0);
  
#line 2600 
  if (priv->dma_cap.mbps_1000 != 0U) 
#line 2600 
                                     tmp_1 = (char *)"Y"; else 
#line 2600 
                                                               tmp_1 = (char *)"N";
  
#line 2600 
  ;
  
#line 2600 
  seq_printf(seq,"\t1000 Mbps %s\n",tmp_1);
  
#line 2602 
  if (priv->dma_cap.half_duplex != 0U) 
#line 2602 
                                       tmp_2 = (char *)"Y"; else 
#line 2602 
                                                                 tmp_2 = (char *)"N";
  
#line 2602 
  ;
  
#line 2602 
  seq_printf(seq,"\tHalf duple %s\n",tmp_2);
  
#line 2604 
  if (priv->dma_cap.hash_filter != 0U) 
#line 2604 
                                       tmp_3 = (char *)"Y"; else 
#line 2604 
                                                                 tmp_3 = (char *)"N";
  
#line 2604 
  ;
  
#line 2604 
  seq_printf(seq,"\tHash Filter: %s\n",tmp_3);
  
#line 2606 
  if (priv->dma_cap.multi_addr != 0U) 
#line 2606 
                                      tmp_4 = (char *)"Y"; else 
#line 2606 
                                                                tmp_4 = (char *)"N";
  
#line 2606 
  ;
  
#line 2606 
  seq_printf(seq,"\tMultiple MAC address registers: %s\n",tmp_4);
  
#line 2608 
  if (priv->dma_cap.pcs != 0U) 
#line 2608 
                               tmp_5 = (char *)"Y"; else 
#line 2608 
                                                         tmp_5 = (char *)"N";
  
#line 2608 
  ;
  
#line 2608 
  seq_printf(seq,"\tPCS (TBI/SGMII/RTBI PHY interfatces): %s\n",tmp_5);
  
#line 2610 
  if (priv->dma_cap.sma_mdio != 0U) 
#line 2610 
                                    tmp_6 = (char *)"Y"; else 
#line 2610 
                                                              tmp_6 = (char *)"N";
  
#line 2610 
  ;
  
#line 2610 
  seq_printf(seq,"\tSMA (MDIO) Interface: %s\n",tmp_6);
  
#line 2612 
  if (priv->dma_cap.pmt_remote_wake_up != 0U) 
#line 2612 
                                              tmp_7 = (char *)"Y"; else 
                                                                    
#line 2612 
                                                                    tmp_7 = (char *)"N";
  
#line 2612 
  ;
  
#line 2612 
  seq_printf(seq,"\tPMT Remote wake up: %s\n",tmp_7);
  
#line 2614 
  if (priv->dma_cap.pmt_magic_frame != 0U) 
#line 2614 
                                           tmp_8 = (char *)"Y"; else 
                                                                  
#line 2614 
                                                                  tmp_8 = (char *)"N";
  
#line 2614 
  ;
  
#line 2614 
  seq_printf(seq,"\tPMT Magic Frame: %s\n",tmp_8);
  
#line 2616 
  if (priv->dma_cap.rmon != 0U) 
#line 2616 
                                tmp_9 = (char *)"Y"; else 
#line 2616 
                                                          tmp_9 = (char *)"N";
  
#line 2616 
  ;
  
#line 2616 
  seq_printf(seq,"\tRMON module: %s\n",tmp_9);
  
#line 2618 
  if (priv->dma_cap.time_stamp != 0U) 
#line 2618 
                                      tmp_10 = (char *)"Y"; else 
#line 2618 
                                                                 tmp_10 = (char *)"N";
  
#line 2618 
  ;
  
#line 2618 
  seq_printf(seq,"\tIEEE 1588-2002 Time Stamp: %s\n",tmp_10);
  
#line 2620 
  if (priv->dma_cap.atime_stamp != 0U) 
#line 2620 
                                       tmp_11 = (char *)"Y"; else 
#line 2620 
                                                                  tmp_11 = (char *)"N";
  
#line 2620 
  ;
  
#line 2620 
  seq_printf(seq,"\tIEEE 1588-2008 Advanced Time Stamp:%s\n",tmp_11);
  
#line 2622 
  if (priv->dma_cap.eee != 0U) 
#line 2622 
                               tmp_12 = (char *)"Y"; else 
#line 2622 
                                                          tmp_12 = (char *)"N";
  
#line 2622 
  ;
  
#line 2622 
  seq_printf(seq,"\t802.3az - Energy-Efficient Ethernet (EEE) %s\n",tmp_12);
  
#line 2624 
  if (priv->dma_cap.av != 0U) 
#line 2624 
                              tmp_13 = (char *)"Y"; else 
#line 2624 
                                                         tmp_13 = (char *)"N";
  
#line 2624 
  ;
  
#line 2624 
  seq_printf(seq,"\tAV features: %s\n",tmp_13);
  
#line 2625 
  if (priv->dma_cap.tx_coe != 0U) 
#line 2625 
                                  tmp_14 = (char *)"Y"; else 
#line 2625 
                                                             tmp_14 = (char *)"N";
  
#line 2625 
  ;
  
#line 2625 
  seq_printf(seq,"\tChecksum Offload in TX: %s\n",tmp_14);
  
#line 2627 
  if (priv->dma_cap.rx_coe_type1 != 0U) 
#line 2627 
                                        tmp_15 = (char *)"Y"; else 
#line 2627 
                                                                   tmp_15 = (char *)"N";
  
#line 2627 
  ;
  
#line 2627 
  seq_printf(seq,"\tIP Checksum Offload (type1) in RX: %s\n",tmp_15);
  
#line 2629 
  if (priv->dma_cap.rx_coe_type2 != 0U) 
#line 2629 
                                        tmp_16 = (char *)"Y"; else 
#line 2629 
                                                                   tmp_16 = (char *)"N";
  
#line 2629 
  ;
  
#line 2629 
  seq_printf(seq,"\tIP Checksum Offload (type2) in RX: %s\n",tmp_16);
  
#line 2631 
  if (priv->dma_cap.rxfifo_over_2048 != 0U) 
#line 2631 
                                            tmp_17 = (char *)"Y"; else 
                                                                    
#line 2631 
                                                                    tmp_17 = (char *)"N";
  
#line 2631 
  ;
  
#line 2631 
  seq_printf(seq,"\tRXFIFO > 2048bytes: %s\n",tmp_17);
  
#line 2633 
  seq_printf(seq,"\tNumber of Additional RX channel: %d\n",priv->dma_cap.number_rx_channel);
  
#line 2635 
  seq_printf(seq,"\tNumber of Additional TX channel: %d\n",priv->dma_cap.number_tx_channel);
  
#line 2637 
  if (priv->dma_cap.enh_desc != 0U) 
#line 2637 
                                    tmp_18 = (char *)"Y"; else 
#line 2637 
                                                               tmp_18 = (char *)"N";
  
#line 2637 
  ;
  
#line 2637 
  seq_printf(seq,"\tEnhanced descriptors: %s\n",tmp_18);
  
#line 2640 
  __retres = 0;
  return_label: 
#line 2640 
                return __retres;
}


#line 2643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_sysfs_dma_cap_open(struct inode *inode, struct file *file)
{
  int tmp;
  
#line 2645 
  tmp = single_open(file,& stmmac_sysfs_dma_cap_read,inode->i_private);
  
#line 2645 
  return tmp;
}


#line 2648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static struct file_operations const stmmac_dma_cap_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & stmmac_sysfs_dma_cap_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init_fs(struct net_device *dev)
{
  int __retres;
  
#line 2658 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2661 
  priv->dbgfs_dir = debugfs_create_dir((char const *)(& dev->name),stmmac_fs_dir);
  
#line 2663 
  if (priv->dbgfs_dir == (struct dentry *)0) 
#line 2663 
                                             goto _LOR;
  else {
    bool tmp_0;
    
#line 2663 
    tmp_0 = IS_ERR_0((void const *)priv->dbgfs_dir);
    
#line 2663 
    if ((int)tmp_0 != 0) {
      _LOR: {
              
#line 2664 
              printk("\001",(char *)"stmmaceth",(char *)(& dev->name));
              
#line 2667 
              __retres = -12;
              
#line 2667 
              goto return_label;
            }
    }
    else ;
  }
  
#line 2671 
  priv->dbgfs_rings_status = ldv_debugfs_create_file_101("descriptors_status",(unsigned short)292,priv->dbgfs_dir,(void *)dev,& stmmac_rings_status_fops);
  
#line 2676 
  if (priv->dbgfs_rings_status == (struct dentry *)0) 
#line 2676 
                                                      goto _LOR_0;
  else {
    bool tmp_1;
    
#line 2676 
    tmp_1 = IS_ERR_0((void const *)priv->dbgfs_rings_status);
    
#line 2676 
    if ((int)tmp_1 != 0) {
      _LOR_0: {
                
#line 2677 
                printk("\001");
                
#line 2678 
                debugfs_remove_recursive(priv->dbgfs_dir);
                
#line 2680 
                __retres = -12;
                
#line 2680 
                goto return_label;
              }
    }
    else ;
  }
  
#line 2684 
  priv->dbgfs_dma_cap = ldv_debugfs_create_file_102("dma_cap",(unsigned short)292,priv->dbgfs_dir,(void *)dev,& stmmac_dma_cap_fops);
  
#line 2688 
  if (priv->dbgfs_dma_cap == (struct dentry *)0) 
#line 2688 
                                                 goto _LOR_1;
  else {
    bool tmp_2;
    
#line 2688 
    tmp_2 = IS_ERR_0((void const *)priv->dbgfs_dma_cap);
    
#line 2688 
    if ((int)tmp_2 != 0) {
      _LOR_1: {
                
#line 2689 
                printk("\001");
                
#line 2690 
                debugfs_remove_recursive(priv->dbgfs_dir);
                
#line 2692 
                __retres = -12;
                
#line 2692 
                goto return_label;
              }
    }
    else ;
  }
  
#line 2695 
  __retres = 0;
  return_label: 
#line 2695 
                return __retres;
}


#line 2698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_exit_fs(struct net_device *dev)
{
  
#line 2700 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 2702 
  debugfs_remove_recursive(priv->dbgfs_dir);
  
#line 2703 
  return;
}


#line 2706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static struct net_device_ops const stmmac_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & stmmac_open, .ndo_stop = & stmmac_release, .ndo_start_xmit = & stmmac_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & stmmac_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = & stmmac_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & stmmac_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & stmmac_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & stmmac_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & stmmac_fix_features, .ndo_set_features = & stmmac_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_hw_init(struct stmmac_priv *priv)
{
  int __retres;
  struct mac_device_info *mac;
  u32 tmp;
  
#line 2735 
  if ((priv->plat)->has_gmac != 0) {
    
#line 2736 
    (priv->dev)->priv_flags |= 131072U;
    
#line 2737 
    mac = dwmac1000_setup(priv->ioaddr,(priv->plat)->multicast_filter_bins,(priv->plat)->unicast_filter_entries);
  }
  else 
#line 2741 
       mac = dwmac100_setup(priv->ioaddr);
  
#line 2743 
  if (mac == (struct mac_device_info *)0) {
    
#line 2744 
    __retres = -12;
    
#line 2744 
    goto return_label;
  }
  else ;
  
#line 2746 
  priv->hw = mac;
  
#line 2749 
  tmp = stmmac_get_synopsys_id(priv);
  
#line 2749 
  priv->synopsys_id = (int)tmp;
  
#line 2752 
  if (chain_mode != 0U) {
    
#line 2753 
    (priv->hw)->mode = & chain_mode_ops;
    
#line 2754 
    printk("\001");
    
#line 2755 
    priv->mode = 1U;
  }
  else {
    
#line 2757 
    (priv->hw)->mode = & ring_mode_ops;
    
#line 2758 
    printk("\001");
    
#line 2759 
    priv->mode = 2U;
  }
  
#line 2763 
  priv->hw_cap_support = stmmac_get_hw_features(priv);
  
#line 2764 
  if (priv->hw_cap_support != 0) {
    
#line 2765 
    printk("\001");
    
#line 2772 
    (priv->plat)->enh_desc = (int)priv->dma_cap.enh_desc;
    
#line 2773 
    (priv->plat)->pmt = (int)priv->dma_cap.pmt_remote_wake_up;
    
#line 2776 
    if ((priv->plat)->force_thresh_dma_mode != 0) 
#line 2777 
                                                  (priv->plat)->tx_coe = 0; else 
                                                                    
#line 2779 
                                                                    (priv->plat)->tx_coe = (int)priv->dma_cap.tx_coe;
    
#line 2781 
    if (priv->dma_cap.rx_coe_type2 != 0U) 
#line 2782 
                                          (priv->plat)->rx_coe = 2;
    else 
      
#line 2783 
      if (priv->dma_cap.rx_coe_type1 != 0U) 
#line 2784 
                                            (priv->plat)->rx_coe = 1; else ;
  }
  else 
#line 2787 
       printk("\001");
  
#line 2790 
  stmmac_selec_desc_mode(priv);
  
#line 2792 
  if ((priv->plat)->rx_coe != 0) {
    
#line 2793 
    (priv->hw)->rx_csum = (unsigned int)(priv->plat)->rx_coe;
    
#line 2794 
    printk("\001",(priv->plat)->rx_coe);
  }
  else ;
  
#line 2797 
  if ((priv->plat)->tx_coe != 0) 
#line 2798 
                                 printk("\001"); else ;
  
#line 2800 
  if ((priv->plat)->pmt != 0) {
    
#line 2801 
    printk("\001");
    
#line 2802 
    device_set_wakeup_capable(priv->device,(_Bool)1);
  }
  else ;
  
#line 2805 
  __retres = 0;
  return_label: 
#line 2805 
                return __retres;
}


#line 2818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
int stmmac_dvr_probe(struct device *device, struct plat_stmmacenet_data *plat_dat, struct stmmac_resources *res)
{
  int __retres;
  struct stmmac_priv *priv;
  bool tmp_1;
  bool tmp_3;
  bool tmp_5;
  unsigned long tmp_6;
  
#line 2822 
  int ret = 0;
  
#line 2823 
  struct net_device *ndev = (struct net_device *)0;
  
#line 2826 
  ndev = ldv_alloc_etherdev_mqs_103(2560,1U,1U);
  
#line 2827 
  if (ndev == (struct net_device *)0) {
    
#line 2828 
    __retres = -12;
    
#line 2828 
    goto return_label;
  }
  else ;
  
#line 2830 
  ndev->dev.parent = device;
  
#line 2832 
  priv = (struct stmmac_priv *)netdev_priv((struct net_device const *)ndev);
  
#line 2833 
  priv->device = device;
  
#line 2834 
  priv->dev = ndev;
  
#line 2836 
  stmmac_set_ethtool_ops(ndev);
  
#line 2837 
  priv->pause = (unsigned int)pause;
  
#line 2838 
  priv->plat = plat_dat;
  
#line 2839 
  priv->ioaddr = res->addr;
  
#line 2840 
  (priv->dev)->base_addr = (unsigned long)res->addr;
  
#line 2842 
  (priv->dev)->irq = res->irq;
  
#line 2843 
  priv->wol_irq = res->wol_irq;
  
#line 2844 
  priv->lpi_irq = res->lpi_irq;
  
#line 2846 
  if (res->mac != (char const *)0) 
#line 2847 
                                   memcpy((void *)(priv->dev)->dev_addr,(void const *)res->mac,6UL); else ;
  
#line 2849 
  dev_set_drvdata(device,(void *)priv->dev);
  
#line 2852 
  stmmac_verify_args();
  
#line 2857 
  if ((unsigned int)phyaddr <= 31U) 
#line 2858 
                                    (priv->plat)->phy_addr = phyaddr; else ;
  
#line 2860 
  priv->stmmac_clk = devm_clk_get(priv->device,"stmmaceth");
  
#line 2861 
  tmp_1 = IS_ERR_0((void const *)priv->stmmac_clk);
  
#line 2861 
  if ((int)tmp_1 != 0) {
    
#line 2862 
    dev_warn((struct device const *)priv->device,"%s: warning: cannot get CSR clock\n","stmmac_dvr_probe");
    
#line 2867 
    if ((priv->plat)->clk_csr == 0) {
      long tmp_0;
      
#line 2868 
      tmp_0 = PTR_ERR((void const *)priv->stmmac_clk);
      
#line 2868 
      ret = (int)tmp_0;
      
#line 2869 
      goto error_clk_get;
    }
    else 
#line 2871 
         priv->stmmac_clk = (struct clk *)0;
  }
  else ;
  
#line 2874 
  clk_prepare_enable(priv->stmmac_clk);
  
#line 2876 
  priv->pclk = devm_clk_get(priv->device,"pclk");
  
#line 2877 
  tmp_3 = IS_ERR_0((void const *)priv->pclk);
  
#line 2877 
  if ((int)tmp_3 != 0) {
    long tmp_2;
    
#line 2878 
    tmp_2 = PTR_ERR((void const *)priv->pclk);
    
#line 2878 
    if (tmp_2 == -517L) {
      
#line 2879 
      ret = -517;
      
#line 2880 
      goto error_pclk_get;
    }
    else ;
    
#line 2882 
    priv->pclk = (struct clk *)0;
  }
  else ;
  
#line 2884 
  clk_prepare_enable(priv->pclk);
  
#line 2886 
  priv->stmmac_rst = devm_reset_control_get(priv->device,"stmmaceth");
  
#line 2888 
  tmp_5 = IS_ERR_0((void const *)priv->stmmac_rst);
  
#line 2888 
  if ((int)tmp_5 != 0) {
    long tmp_4;
    
#line 2889 
    tmp_4 = PTR_ERR((void const *)priv->stmmac_rst);
    
#line 2889 
    if (tmp_4 == -517L) {
      
#line 2890 
      ret = -517;
      
#line 2891 
      goto error_hw_init;
    }
    else ;
    
#line 2893 
    _dev_info((struct device const *)priv->device,"no reset control found\n");
    
#line 2894 
    priv->stmmac_rst = (struct reset_control *)0;
  }
  else ;
  
#line 2896 
  if (priv->stmmac_rst != (struct reset_control *)0) 
#line 2897 
                                                     reset_control_deassert(priv->stmmac_rst); else ;
  
#line 2900 
  ret = stmmac_hw_init(priv);
  
#line 2901 
  if (ret != 0) 
#line 2902 
                goto error_hw_init; else ;
  
#line 2904 
  ndev->netdev_ops = & stmmac_netdev_ops;
  
#line 2906 
  ndev->hw_features = 17179869203ULL;
  
#line 2908 
  ndev->features = (ndev->features | ndev->hw_features) | 32ULL;
  
#line 2909 
  tmp_6 = msecs_to_jiffies((unsigned int)watchdog);
  
#line 2909 
  ndev->watchdog_timeo = (int)tmp_6;
  
#line 2912 
  ndev->features |= 256ULL;
  
#line 2914 
  priv->msg_enable = netif_msg_init(debug,(int)default_msg_level);
  
#line 2916 
  if (flow_ctrl != 0) 
#line 2917 
                      priv->flow_ctrl = 3U; else ;
  
#line 2924 
  if (priv->synopsys_id > 52 && (priv->plat)->riwt_off == 0) {
    
#line 2925 
    priv->use_riwt = 1;
    
#line 2926 
    printk("\001");
  }
  else ;
  
#line 2929 
  netif_napi_add(ndev,& priv->napi,& stmmac_poll,64);
  
#line 2931 
  spinlock_check(& priv->lock);
  {
    struct lock_class_key __key;
    
#line 2931 
    __raw_spin_lock_init(& priv->lock.__anonCompField_spinlock_18.rlock,"&(&priv->lock)->rlock",& __key);
  }
  
#line 2932 
  spinlock_check(& priv->tx_lock);
  {
    struct lock_class_key __key_0;
    
#line 2932 
    __raw_spin_lock_init(& priv->tx_lock.__anonCompField_spinlock_18.rlock,"&(&priv->tx_lock)->rlock",& __key_0);
  }
  
#line 2934 
  ret = ldv_register_netdev_104(ndev);
  
#line 2935 
  if (ret != 0) {
    
#line 2936 
    printk("\001","stmmac_dvr_probe",ret);
    
#line 2937 
    goto error_netdev_register;
  }
  else ;
  
#line 2946 
  if ((priv->plat)->clk_csr == 0) 
#line 2947 
                                  stmmac_clk_csr_set(priv); else 
#line 2949 
                                                                 priv->clk_csr = (priv->plat)->clk_csr;
  
#line 2951 
  stmmac_check_pcs_mode(priv);
  
#line 2953 
  if ((priv->pcs != 1 && priv->pcs != 4) && priv->pcs != 8) {
    
#line 2956 
    ret = stmmac_mdio_register(ndev);
    
#line 2957 
    if (ret < 0) {
      {
        
#line 2958 
        struct _ddebug descriptor = {.modname = "stmmac", .function = "stmmac_dvr_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c", .format = "%s: MDIO bus (id: %d) registration failed", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2959U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 2958 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2958 
                                                            __dynamic_pr_debug(& descriptor,"%s: MDIO bus (id: %d) registration failed","stmmac_dvr_probe",(priv->plat)->bus_id); else ;
      }
      
#line 2960 
      goto error_mdio_register;
    }
    else ;
  }
  else ;
  
#line 2964 
  __retres = 0;
  
#line 2964 
  goto return_label;
  error_mdio_register: 
#line 2966 
  ;
  
#line 2967 
  ldv_unregister_netdev_105(ndev);
  error_netdev_register: 
#line 2968 
  ;
  
#line 2969 
  netif_napi_del(& priv->napi);
  error_hw_init: 
#line 2970 
  ;
  
#line 2971 
  clk_disable_unprepare(priv->pclk);
  error_pclk_get: 
#line 2972 
  ;
  
#line 2973 
  clk_disable_unprepare(priv->stmmac_clk);
  error_clk_get: 
#line 2974 
  ;
  
#line 2975 
  ldv_free_netdev_106(ndev);
  
#line 2977 
  __retres = ret;
  return_label: 
#line 2977 
                return __retres;
}


#line 2979  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static char const __kstrtab_stmmac_dvr_probe[17U] = {(char)'s', (char)'t', (char)'m', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'v', (char)'r', (char)'_', (char)'p', (char)'r', (char)'o', (char)'b', (char)'e', (char)'\000'};

#line 2979 
struct kernel_symbol const __ksymtab_stmmac_dvr_probe;


#line 2979  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
struct kernel_symbol const __ksymtab_stmmac_dvr_probe = {.value = (unsigned long)(& stmmac_dvr_probe), .name = (char const *)(& __kstrtab_stmmac_dvr_probe)};

#line 2987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
int stmmac_dvr_remove(struct net_device *ndev)
{
  int __retres;
  
#line 2989 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 2991 
  printk("\001","stmmac_dvr_remove");
  
#line 2993 
  (*(((priv->hw)->dma)->stop_rx))(priv->ioaddr);
  
#line 2994 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr);
  
#line 2996 
  stmmac_set_mac(priv->ioaddr,(_Bool)0);
  
#line 2997 
  netif_carrier_off(ndev);
  
#line 2998 
  ldv_unregister_netdev_107(ndev);
  
#line 2999 
  if (priv->stmmac_rst != (struct reset_control *)0) 
#line 3000 
                                                     reset_control_assert(priv->stmmac_rst); else ;
  
#line 3001 
  clk_disable_unprepare(priv->pclk);
  
#line 3002 
  clk_disable_unprepare(priv->stmmac_clk);
  
#line 3003 
  if ((priv->pcs != 1 && priv->pcs != 4) && priv->pcs != 8) 
#line 3005 
                                                            stmmac_mdio_unregister(ndev); else ;
  
#line 3006 
  ldv_free_netdev_108(ndev);
  
#line 3008 
  __retres = 0;
  
#line 3008 
  return __retres;
}


#line 3010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static char const __kstrtab_stmmac_dvr_remove[18U] = {(char)'s', (char)'t', (char)'m', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'v', (char)'r', (char)'_', (char)'r', (char)'e', (char)'m', (char)'o', (char)'v', (char)'e', (char)'\000'};

#line 3010 
struct kernel_symbol const __ksymtab_stmmac_dvr_remove;


#line 3010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
struct kernel_symbol const __ksymtab_stmmac_dvr_remove = {.value = (unsigned long)(& stmmac_dvr_remove), .name = (char const *)(& __kstrtab_stmmac_dvr_remove)};

#line 3019  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
int stmmac_suspend(struct net_device *ndev)
{
  int __retres;
  unsigned long flags;
  bool tmp_2;
  
#line 3021 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 3024 
  if (ndev == (struct net_device *)0) {
    
#line 3025 
    __retres = 0;
    
#line 3025 
    goto return_label;
  }
  else {
    int tmp_1;
    bool tmp_0;
    
#line 3024 
    tmp_0 = netif_running((struct net_device const *)ndev);
    
#line 3024 
    if (tmp_0) 
#line 3024 
               tmp_1 = 0; else 
#line 3024 
                               tmp_1 = 1;
    
#line 3024 
    if (tmp_1) {
      
#line 3025 
      __retres = 0;
      
#line 3025 
      goto return_label;
    }
    else ;
  }
  
#line 3027 
  if (priv->phydev != (struct phy_device *)0) 
#line 3028 
                                              phy_stop(priv->phydev); else ;
  
#line 3030 
  ldv___ldv_spin_lock_109(& priv->lock);
  
#line 3032 
  netif_device_detach(ndev);
  
#line 3033 
  netif_start_queue(ndev);
  
#line 3035 
  napi_disable(& priv->napi);
  
#line 3038 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr);
  
#line 3039 
  (*(((priv->hw)->dma)->stop_rx))(priv->ioaddr);
  
#line 3041 
  stmmac_clear_descriptors(priv);
  
#line 3044 
  tmp_2 = device_may_wakeup(priv->device);
  
#line 3044 
  if ((int)tmp_2 != 0) {
    
#line 3045 
    (*(((priv->hw)->mac)->pmt))(priv->hw,(unsigned long)priv->wolopts);
    
#line 3046 
    priv->irq_wake = 1;
  }
  else {
    
#line 3048 
    stmmac_set_mac(priv->ioaddr,(_Bool)0);
    
#line 3049 
    pinctrl_pm_select_sleep_state(priv->device);
    
#line 3051 
    clk_disable(priv->pclk);
    
#line 3052 
    clk_disable(priv->stmmac_clk);
  }
  
#line 3054 
  ldv_spin_unlock_irqrestore_110(& priv->lock,flags);
  
#line 3056 
  priv->oldlink = 0;
  
#line 3057 
  priv->speed = 0;
  
#line 3058 
  priv->oldduplex = -1;
  
#line 3059 
  __retres = 0;
  return_label: 
#line 3059 
                return __retres;
}


#line 3061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static char const __kstrtab_stmmac_suspend[15U] = {(char)'s', (char)'t', (char)'m', (char)'m', (char)'a', (char)'c', (char)'_', (char)'s', (char)'u', (char)'s', (char)'p', (char)'e', (char)'n', (char)'d', (char)'\000'};

#line 3061 
struct kernel_symbol const __ksymtab_stmmac_suspend;


#line 3061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
struct kernel_symbol const __ksymtab_stmmac_suspend = {.value = (unsigned long)(& stmmac_suspend), .name = (char const *)(& __kstrtab_stmmac_suspend)};

#line 3069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
int stmmac_resume(struct net_device *ndev)
{
  int __retres;
  unsigned long flags;
  int tmp_1;
  bool tmp_0;
  bool tmp_2;
  
#line 3071 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)ndev);
  
#line 3074 
  tmp_0 = netif_running((struct net_device const *)ndev);
  
#line 3074 
  if (tmp_0) 
#line 3074 
             tmp_1 = 0; else 
#line 3074 
                             tmp_1 = 1;
  
#line 3074 
  if (tmp_1) {
    
#line 3075 
    __retres = 0;
    
#line 3075 
    goto return_label;
  }
  else ;
  
#line 3077 
  ldv___ldv_spin_lock_111(& priv->lock);
  
#line 3085 
  tmp_2 = device_may_wakeup(priv->device);
  
#line 3085 
  if ((int)tmp_2 != 0) {
    
#line 3086 
    (*(((priv->hw)->mac)->pmt))(priv->hw,0UL);
    
#line 3087 
    priv->irq_wake = 0;
  }
  else {
    
#line 3089 
    pinctrl_pm_select_default_state(priv->device);
    
#line 3091 
    clk_enable(priv->stmmac_clk);
    
#line 3092 
    clk_enable(priv->pclk);
    
#line 3094 
    if (priv->mii != (struct mii_bus *)0) 
#line 3095 
                                          stmmac_mdio_reset(priv->mii); else ;
  }
  
#line 3098 
  netif_device_attach(ndev);
  
#line 3100 
  init_dma_desc_rings(ndev,32U);
  
#line 3101 
  stmmac_hw_setup(ndev,(_Bool)0);
  
#line 3102 
  stmmac_init_tx_coalesce(priv);
  
#line 3104 
  napi_enable(& priv->napi);
  
#line 3106 
  netif_start_queue(ndev);
  
#line 3108 
  ldv_spin_unlock_irqrestore_112(& priv->lock,flags);
  
#line 3110 
  if (priv->phydev != (struct phy_device *)0) 
#line 3111 
                                              phy_start(priv->phydev); else ;
  
#line 3113 
  __retres = 0;
  return_label: 
#line 3113 
                return __retres;
}


#line 3115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static char const __kstrtab_stmmac_resume[14U] = {(char)'s', (char)'t', (char)'m', (char)'m', (char)'a', (char)'c', (char)'_', (char)'r', (char)'e', (char)'s', (char)'u', (char)'m', (char)'e', (char)'\000'};

#line 3115 
struct kernel_symbol const __ksymtab_stmmac_resume;


#line 3115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
struct kernel_symbol const __ksymtab_stmmac_resume = {.value = (unsigned long)(& stmmac_resume), .name = (char const *)(& __kstrtab_stmmac_resume)};

#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static int stmmac_init(void)
{
  int __retres;
  
#line 3174 
  if (stmmac_fs_dir == (struct dentry *)0) {
    
#line 3175 
    stmmac_fs_dir = debugfs_create_dir("stmmaceth",(struct dentry *)0);
    
#line 3177 
    if (stmmac_fs_dir == (struct dentry *)0) 
#line 3177 
                                             goto _LOR;
    else {
      bool tmp;
      
#line 3177 
      tmp = IS_ERR_0((void const *)stmmac_fs_dir);
      
#line 3177 
      if ((int)tmp != 0) {
        _LOR: {
                
#line 3178 
                printk("\001",(char *)"stmmaceth");
                
#line 3181 
                __retres = -12;
                
#line 3181 
                goto return_label;
              }
      }
      else ;
    }
  }
  else ;
  
#line 3186 
  __retres = 0;
  return_label: 
#line 3186 
                return __retres;
}


#line 3189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c"
static void stmmac_exit(void)
{
  
#line 3192 
  debugfs_remove_recursive(stmmac_fs_dir);
  
#line 3193 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
struct file_operations *ldv_emg_alias_stmmac_rings_status_fops_2 = (struct file_operations *)(& stmmac_rings_status_fops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
struct file_operations *ldv_emg_alias_stmmac_dma_cap_fops_2 = (struct file_operations *)(& stmmac_dma_cap_fops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
long long (*ldv_emg_alias_seq_lseek_3)(struct file *, long long , int ) = & seq_lseek;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
long (*ldv_emg_alias_seq_read_4)(struct file *, char *, unsigned long , long long *) = & seq_read;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int (*ldv_emg_alias_eth_mac_addr_15)(struct net_device *, void *) = & eth_mac_addr;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int (*ldv_emg_alias_single_release_5)(struct inode *, struct file *) = & single_release;

#line 64 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 65 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 66 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 67 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 68 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 69 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 70 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 71 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 77 
  tmp = stmmac_open(arg0);
  
#line 77 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
void ldv_emg_wrapper_stmmac_tx_timeout_17(struct net_device *arg0)
{
  
#line 82 
  stmmac_tx_timeout(arg0);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
void ldv_emg_wrapper_stmmac_poll_controller_30(struct net_device *arg0)
{
  
#line 87 
  stmmac_poll_controller(arg0);
  
#line 88 
  return;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
enum irqreturn ldv_emg_wrapper_stmmac_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 92 
  tmp = stmmac_interrupt(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
unsigned long long ldv_emg_wrapper_stmmac_fix_features_10(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 97 
  tmp = stmmac_fix_features(arg0,arg1);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_sysfs_dma_cap_open_6(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 102 
  tmp = stmmac_sysfs_dma_cap_open(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
void ldv_emg_stmmac_exit(void)
{
  
#line 107 
  stmmac_exit();
  
#line 108 
  return;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_sysfs_ring_open_3(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 111 
  tmp = stmmac_sysfs_ring_open(arg0,arg1);
  
#line 111 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_ioctl_20(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 116 
  tmp = stmmac_ioctl(arg0,arg1,arg2);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
void ldv_emg_wrapper_stmmac_set_rx_mode_29(struct net_device *arg0)
{
  
#line 121 
  stmmac_set_rx_mode(arg0);
  
#line 122 
  return;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_change_mtu_6(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 126 
  tmp = stmmac_change_mtu(arg0,arg1);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_stmmac_init(void)
{
  int tmp;
  
#line 131 
  tmp = stmmac_init();
  
#line 131 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_set_features_8(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 135 
  tmp = stmmac_set_features(arg0,arg1);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
int ldv_emg_wrapper_stmmac_release_2(struct net_device *arg0)
{
  int tmp;
  
#line 140 
  tmp = stmmac_release(arg0);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
enum netdev_tx ldv_emg_wrapper_stmmac_xmit_14(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 145 
  tmp = stmmac_xmit(arg0,arg1);
  
#line 145 
  return tmp;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 160 
  tmp = ldv_ptr_err(ptr);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static bool IS_ERR_0(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 168 
  ret = ldv_is_err(ptr);
  
#line 169 
  __retres = (_Bool)(ret != 0L);
  
#line 169 
  return __retres;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static bool IS_ERR_OR_NULL(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 177 
  ret = ldv_is_err_or_null(ptr);
  
#line 178 
  __retres = (_Bool)(ret != 0L);
  
#line 178 
  return __retres;
}


#line 525  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 528 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 528 
  return tmp;
}


#line 687  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 691 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 693 
  spin_lock(lock);
  
#line 694 
  return;
}


#line 730  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 734 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 736 
  spin_unlock(lock);
  
#line 737 
  return;
}


#line 750  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_lock_65(spinlock_t *lock)
{
  
#line 754 
  ldv_spin_model_lock((char *)"tx_global_lock_of_net_device");
  
#line 756 
  spin_lock(lock);
  
#line 757 
  return;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_66(spinlock_t *lock)
{
  
#line 764 
  ldv_spin_model_unlock((char *)"tx_global_lock_of_net_device");
  
#line 766 
  spin_unlock(lock);
  
#line 767 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 834 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 834 
  return tmp;
}


#line 838  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 842 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 842 
  return tmp;
}


#line 846  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 850 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 852 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 853 
  return;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_del_timer_sync_76(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 860 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 860 
  return tmp;
}


#line 864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_irqrestore_77_0(spinlock_t *lock, unsigned long flags)
{
  
#line 868 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 870 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 871 
  return;
}


#line 874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_78_0(spinlock_t *ldv_func_arg1)
{
  
#line 878 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 880 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 881 
  return;
}


#line 884  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 888 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 888 
  return tmp;
}


#line 892  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 896 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 898 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 899 
  return;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 906 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 908 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 909 
  return;
}


#line 912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 916 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 918 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 919 
  return;
}


#line 922  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_lock_83(spinlock_t *lock)
{
  
#line 926 
  ldv_spin_model_lock((char *)"tx_lock_of_stmmac_priv");
  
#line 928 
  spin_lock(lock);
  
#line 929 
  return;
}


#line 932  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 936 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 936 
  return tmp;
}


#line 940  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_85(spinlock_t *lock)
{
  
#line 944 
  ldv_spin_model_unlock((char *)"tx_lock_of_stmmac_priv");
  
#line 946 
  spin_unlock(lock);
  
#line 947 
  return;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_request_irq_86(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 954 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 954 
  return tmp;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_request_irq_87(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 962 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 962 
  return tmp;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_request_irq_88(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 970 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 970 
  return tmp;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 978 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_irq_90(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 986 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_del_timer_sync_91(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 994 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 994 
  return tmp;
}


#line 998  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_del_timer_sync_92(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1002 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1002 
  return tmp;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_irq_93(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1010 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_irq_94(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1018 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1019 
  return;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_irq_95(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1026 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1027 
  return;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 1034 
  ldv_spin_model_lock((char *)"tx_lock_of_stmmac_priv");
  
#line 1036 
  spin_lock(lock);
  
#line 1037 
  return;
}


#line 1040  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 1044 
  ldv_spin_model_unlock((char *)"tx_lock_of_stmmac_priv");
  
#line 1046 
  spin_unlock(lock);
  
#line 1047 
  return;
}


#line 1050  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_mod_timer_98(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1054 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1054 
  return tmp;
}


#line 1058  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_99(spinlock_t *lock)
{
  
#line 1062 
  ldv_spin_model_unlock((char *)"tx_lock_of_stmmac_priv");
  
#line 1064 
  spin_unlock(lock);
  
#line 1065 
  return;
}


#line 1068  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_100(spinlock_t *lock)
{
  
#line 1072 
  ldv_spin_model_unlock((char *)"tx_lock_of_stmmac_priv");
  
#line 1074 
  spin_unlock(lock);
  
#line 1075 
  return;
}


#line 1078  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static struct dentry *ldv_debugfs_create_file_101(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1082 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1082 
  return tmp;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static struct dentry *ldv_debugfs_create_file_102(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1090 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1090 
  return tmp;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_103(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1098 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1098 
  return tmp;
}


#line 1102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static int ldv_register_netdev_104(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1106 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1106 
  return tmp;
}


#line 1110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_unregister_netdev_105(struct net_device *ldv_func_arg1)
{
  
#line 1114 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1115 
  return;
}


#line 1118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_netdev_106(struct net_device *ldv_func_arg1)
{
  
#line 1122 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1123 
  return;
}


#line 1126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_unregister_netdev_107(struct net_device *ldv_func_arg1)
{
  
#line 1130 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1131 
  return;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1)
{
  
#line 1138 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1139 
  return;
}


#line 1142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_109(spinlock_t *ldv_func_arg1)
{
  
#line 1146 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 1148 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1149 
  return;
}


#line 1152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_irqrestore_110(spinlock_t *lock, unsigned long flags)
{
  
#line 1156 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 1158 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1159 
  return;
}


#line 1162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv___ldv_spin_lock_111(spinlock_t *ldv_func_arg1)
{
  
#line 1166 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 1168 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1169 
  return;
}


#line 1172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_main.c.aux"
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags)
{
  
#line 1176 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 1178 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1179 
  return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc.h"
void dwmac_mmc_read(void *ioaddr, struct stmmac_counters *mmc);


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc_core.c"
void dwmac_mmc_ctrl(void *ioaddr, unsigned int mode)
{
  
#line 137 
  u32 value = readl((void const volatile *)(ioaddr + 256U));
  
#line 139 
  value = (mode & 63U) | value;
  
#line 141 
  writel(value,(void volatile *)(ioaddr + 256U));
  {
    
#line 143 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac_mmc_ctrl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc_core.c", .format = "stmmac: MMC ctrl register (offset 0x%x): 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))144U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 143 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 143 
                                                        __dynamic_pr_debug(& descriptor,"stmmac: MMC ctrl register (offset 0x%x): 0x%08x\n",256,value); else ;
  }
  
#line 145 
  return;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc_core.c"
void dwmac_mmc_intr_all_mask(void *ioaddr)
{
  
#line 150 
  writel(4294967295U,(void volatile *)(ioaddr + 268U));
  
#line 151 
  writel(4294967295U,(void volatile *)(ioaddr + 272U));
  
#line 152 
  writel(4294967295U,(void volatile *)(ioaddr + 512U));
  
#line 153 
  return;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/mmc_core.c"
void dwmac_mmc_read(void *ioaddr, struct stmmac_counters *mmc)
{
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  unsigned int tmp_8;
  unsigned int tmp_9;
  unsigned int tmp_10;
  unsigned int tmp_11;
  unsigned int tmp_12;
  unsigned int tmp_13;
  unsigned int tmp_14;
  unsigned int tmp_15;
  unsigned int tmp_16;
  unsigned int tmp_17;
  unsigned int tmp_18;
  unsigned int tmp_19;
  unsigned int tmp_20;
  unsigned int tmp_21;
  unsigned int tmp_22;
  unsigned int tmp_23;
  unsigned int tmp_24;
  unsigned int tmp_25;
  unsigned int tmp_26;
  unsigned int tmp_27;
  unsigned int tmp_28;
  unsigned int tmp_29;
  unsigned int tmp_30;
  unsigned int tmp_31;
  unsigned int tmp_32;
  unsigned int tmp_33;
  unsigned int tmp_34;
  unsigned int tmp_35;
  unsigned int tmp_36;
  unsigned int tmp_37;
  unsigned int tmp_38;
  unsigned int tmp_39;
  unsigned int tmp_40;
  unsigned int tmp_41;
  unsigned int tmp_42;
  unsigned int tmp_43;
  unsigned int tmp_44;
  unsigned int tmp_45;
  unsigned int tmp_46;
  unsigned int tmp_47;
  unsigned int tmp_48;
  unsigned int tmp_49;
  unsigned int tmp_50;
  unsigned int tmp_51;
  unsigned int tmp_52;
  unsigned int tmp_53;
  unsigned int tmp_54;
  unsigned int tmp_55;
  unsigned int tmp_56;
  unsigned int tmp_57;
  unsigned int tmp_58;
  unsigned int tmp_59;
  unsigned int tmp_60;
  unsigned int tmp_61;
  unsigned int tmp_62;
  unsigned int tmp_63;
  unsigned int tmp_64;
  unsigned int tmp_65;
  unsigned int tmp_66;
  unsigned int tmp_67;
  unsigned int tmp_68;
  unsigned int tmp_69;
  unsigned int tmp_70;
  unsigned int tmp_71;
  unsigned int tmp_72;
  unsigned int tmp_73;
  unsigned int tmp_74;
  unsigned int tmp_75;
  unsigned int tmp_76;
  unsigned int tmp_77;
  
#line 162 
  tmp = readl((void const volatile *)(ioaddr + 276U));
  
#line 162 
  mmc->mmc_tx_octetcount_gb += tmp;
  
#line 163 
  tmp_0 = readl((void const volatile *)(ioaddr + 280U));
  
#line 163 
  mmc->mmc_tx_framecount_gb += tmp_0;
  
#line 164 
  tmp_1 = readl((void const volatile *)(ioaddr + 284U));
  
#line 164 
  mmc->mmc_tx_broadcastframe_g += tmp_1;
  
#line 165 
  tmp_2 = readl((void const volatile *)(ioaddr + 288U));
  
#line 165 
  mmc->mmc_tx_multicastframe_g += tmp_2;
  
#line 166 
  tmp_3 = readl((void const volatile *)(ioaddr + 292U));
  
#line 166 
  mmc->mmc_tx_64_octets_gb += tmp_3;
  
#line 167 
  tmp_4 = readl((void const volatile *)(ioaddr + 296U));
  
#line 168 
  mmc->mmc_tx_65_to_127_octets_gb += tmp_4;
  
#line 169 
  tmp_5 = readl((void const volatile *)(ioaddr + 300U));
  
#line 170 
  mmc->mmc_tx_128_to_255_octets_gb += tmp_5;
  
#line 171 
  tmp_6 = readl((void const volatile *)(ioaddr + 304U));
  
#line 172 
  mmc->mmc_tx_256_to_511_octets_gb += tmp_6;
  
#line 173 
  tmp_7 = readl((void const volatile *)(ioaddr + 308U));
  
#line 174 
  mmc->mmc_tx_512_to_1023_octets_gb += tmp_7;
  
#line 175 
  tmp_8 = readl((void const volatile *)(ioaddr + 312U));
  
#line 176 
  mmc->mmc_tx_1024_to_max_octets_gb += tmp_8;
  
#line 177 
  tmp_9 = readl((void const volatile *)(ioaddr + 316U));
  
#line 177 
  mmc->mmc_tx_unicast_gb += tmp_9;
  
#line 178 
  tmp_10 = readl((void const volatile *)(ioaddr + 320U));
  
#line 178 
  mmc->mmc_tx_multicast_gb += tmp_10;
  
#line 179 
  tmp_11 = readl((void const volatile *)(ioaddr + 324U));
  
#line 179 
  mmc->mmc_tx_broadcast_gb += tmp_11;
  
#line 180 
  tmp_12 = readl((void const volatile *)(ioaddr + 328U));
  
#line 180 
  mmc->mmc_tx_underflow_error += tmp_12;
  
#line 181 
  tmp_13 = readl((void const volatile *)(ioaddr + 332U));
  
#line 181 
  mmc->mmc_tx_singlecol_g += tmp_13;
  
#line 182 
  tmp_14 = readl((void const volatile *)(ioaddr + 336U));
  
#line 182 
  mmc->mmc_tx_multicol_g += tmp_14;
  
#line 183 
  tmp_15 = readl((void const volatile *)(ioaddr + 340U));
  
#line 183 
  mmc->mmc_tx_deferred += tmp_15;
  
#line 184 
  tmp_16 = readl((void const volatile *)(ioaddr + 344U));
  
#line 184 
  mmc->mmc_tx_latecol += tmp_16;
  
#line 185 
  tmp_17 = readl((void const volatile *)(ioaddr + 348U));
  
#line 185 
  mmc->mmc_tx_exesscol += tmp_17;
  
#line 186 
  tmp_18 = readl((void const volatile *)(ioaddr + 352U));
  
#line 186 
  mmc->mmc_tx_carrier_error += tmp_18;
  
#line 187 
  tmp_19 = readl((void const volatile *)(ioaddr + 356U));
  
#line 187 
  mmc->mmc_tx_octetcount_g += tmp_19;
  
#line 188 
  tmp_20 = readl((void const volatile *)(ioaddr + 360U));
  
#line 188 
  mmc->mmc_tx_framecount_g += tmp_20;
  
#line 189 
  tmp_21 = readl((void const volatile *)(ioaddr + 364U));
  
#line 189 
  mmc->mmc_tx_excessdef += tmp_21;
  
#line 190 
  tmp_22 = readl((void const volatile *)(ioaddr + 368U));
  
#line 190 
  mmc->mmc_tx_pause_frame += tmp_22;
  
#line 191 
  tmp_23 = readl((void const volatile *)(ioaddr + 372U));
  
#line 191 
  mmc->mmc_tx_vlan_frame_g += tmp_23;
  
#line 194 
  tmp_24 = readl((void const volatile *)(ioaddr + 384U));
  
#line 194 
  mmc->mmc_rx_framecount_gb += tmp_24;
  
#line 195 
  tmp_25 = readl((void const volatile *)(ioaddr + 388U));
  
#line 195 
  mmc->mmc_rx_octetcount_gb += tmp_25;
  
#line 196 
  tmp_26 = readl((void const volatile *)(ioaddr + 392U));
  
#line 196 
  mmc->mmc_rx_octetcount_g += tmp_26;
  
#line 197 
  tmp_27 = readl((void const volatile *)(ioaddr + 396U));
  
#line 197 
  mmc->mmc_rx_broadcastframe_g += tmp_27;
  
#line 198 
  tmp_28 = readl((void const volatile *)(ioaddr + 400U));
  
#line 198 
  mmc->mmc_rx_multicastframe_g += tmp_28;
  
#line 199 
  tmp_29 = readl((void const volatile *)(ioaddr + 404U));
  
#line 199 
  mmc->mmc_rx_crc_error += tmp_29;
  
#line 200 
  tmp_30 = readl((void const volatile *)(ioaddr + 408U));
  
#line 200 
  mmc->mmc_rx_align_error += tmp_30;
  
#line 201 
  tmp_31 = readl((void const volatile *)(ioaddr + 412U));
  
#line 201 
  mmc->mmc_rx_run_error += tmp_31;
  
#line 202 
  tmp_32 = readl((void const volatile *)(ioaddr + 416U));
  
#line 202 
  mmc->mmc_rx_jabber_error += tmp_32;
  
#line 203 
  tmp_33 = readl((void const volatile *)(ioaddr + 420U));
  
#line 203 
  mmc->mmc_rx_undersize_g += tmp_33;
  
#line 204 
  tmp_34 = readl((void const volatile *)(ioaddr + 424U));
  
#line 204 
  mmc->mmc_rx_oversize_g += tmp_34;
  
#line 205 
  tmp_35 = readl((void const volatile *)(ioaddr + 428U));
  
#line 205 
  mmc->mmc_rx_64_octets_gb += tmp_35;
  
#line 206 
  tmp_36 = readl((void const volatile *)(ioaddr + 432U));
  
#line 207 
  mmc->mmc_rx_65_to_127_octets_gb += tmp_36;
  
#line 208 
  tmp_37 = readl((void const volatile *)(ioaddr + 436U));
  
#line 209 
  mmc->mmc_rx_128_to_255_octets_gb += tmp_37;
  
#line 210 
  tmp_38 = readl((void const volatile *)(ioaddr + 440U));
  
#line 211 
  mmc->mmc_rx_256_to_511_octets_gb += tmp_38;
  
#line 212 
  tmp_39 = readl((void const volatile *)(ioaddr + 444U));
  
#line 213 
  mmc->mmc_rx_512_to_1023_octets_gb += tmp_39;
  
#line 214 
  tmp_40 = readl((void const volatile *)(ioaddr + 448U));
  
#line 215 
  mmc->mmc_rx_1024_to_max_octets_gb += tmp_40;
  
#line 216 
  tmp_41 = readl((void const volatile *)(ioaddr + 452U));
  
#line 216 
  mmc->mmc_rx_unicast_g += tmp_41;
  
#line 217 
  tmp_42 = readl((void const volatile *)(ioaddr + 456U));
  
#line 217 
  mmc->mmc_rx_length_error += tmp_42;
  
#line 218 
  tmp_43 = readl((void const volatile *)(ioaddr + 460U));
  
#line 218 
  mmc->mmc_rx_autofrangetype += tmp_43;
  
#line 219 
  tmp_44 = readl((void const volatile *)(ioaddr + 464U));
  
#line 219 
  mmc->mmc_rx_pause_frames += tmp_44;
  
#line 220 
  tmp_45 = readl((void const volatile *)(ioaddr + 468U));
  
#line 220 
  mmc->mmc_rx_fifo_overflow += tmp_45;
  
#line 221 
  tmp_46 = readl((void const volatile *)(ioaddr + 472U));
  
#line 221 
  mmc->mmc_rx_vlan_frames_gb += tmp_46;
  
#line 222 
  tmp_47 = readl((void const volatile *)(ioaddr + 476U));
  
#line 222 
  mmc->mmc_rx_watchdog_error += tmp_47;
  
#line 224 
  tmp_48 = readl((void const volatile *)(ioaddr + 512U));
  
#line 224 
  mmc->mmc_rx_ipc_intr_mask += tmp_48;
  
#line 225 
  tmp_49 = readl((void const volatile *)(ioaddr + 520U));
  
#line 225 
  mmc->mmc_rx_ipc_intr += tmp_49;
  
#line 227 
  tmp_50 = readl((void const volatile *)(ioaddr + 528U));
  
#line 227 
  mmc->mmc_rx_ipv4_gd += tmp_50;
  
#line 228 
  tmp_51 = readl((void const volatile *)(ioaddr + 532U));
  
#line 228 
  mmc->mmc_rx_ipv4_hderr += tmp_51;
  
#line 229 
  tmp_52 = readl((void const volatile *)(ioaddr + 536U));
  
#line 229 
  mmc->mmc_rx_ipv4_nopay += tmp_52;
  
#line 230 
  tmp_53 = readl((void const volatile *)(ioaddr + 540U));
  
#line 230 
  mmc->mmc_rx_ipv4_frag += tmp_53;
  
#line 231 
  tmp_54 = readl((void const volatile *)(ioaddr + 544U));
  
#line 231 
  mmc->mmc_rx_ipv4_udsbl += tmp_54;
  
#line 233 
  tmp_55 = readl((void const volatile *)(ioaddr + 592U));
  
#line 233 
  mmc->mmc_rx_ipv4_gd_octets += tmp_55;
  
#line 234 
  tmp_56 = readl((void const volatile *)(ioaddr + 596U));
  
#line 235 
  mmc->mmc_rx_ipv4_hderr_octets += tmp_56;
  
#line 236 
  tmp_57 = readl((void const volatile *)(ioaddr + 600U));
  
#line 237 
  mmc->mmc_rx_ipv4_nopay_octets += tmp_57;
  
#line 238 
  tmp_58 = readl((void const volatile *)(ioaddr + 604U));
  
#line 238 
  mmc->mmc_rx_ipv4_frag_octets += tmp_58;
  
#line 239 
  tmp_59 = readl((void const volatile *)(ioaddr + 608U));
  
#line 240 
  mmc->mmc_rx_ipv4_udsbl_octets += tmp_59;
  
#line 243 
  tmp_60 = readl((void const volatile *)(ioaddr + 612U));
  
#line 243 
  mmc->mmc_rx_ipv6_gd_octets += tmp_60;
  
#line 244 
  tmp_61 = readl((void const volatile *)(ioaddr + 616U));
  
#line 245 
  mmc->mmc_rx_ipv6_hderr_octets += tmp_61;
  
#line 246 
  tmp_62 = readl((void const volatile *)(ioaddr + 620U));
  
#line 247 
  mmc->mmc_rx_ipv6_nopay_octets += tmp_62;
  
#line 249 
  tmp_63 = readl((void const volatile *)(ioaddr + 548U));
  
#line 249 
  mmc->mmc_rx_ipv6_gd += tmp_63;
  
#line 250 
  tmp_64 = readl((void const volatile *)(ioaddr + 552U));
  
#line 250 
  mmc->mmc_rx_ipv6_hderr += tmp_64;
  
#line 251 
  tmp_65 = readl((void const volatile *)(ioaddr + 556U));
  
#line 251 
  mmc->mmc_rx_ipv6_nopay += tmp_65;
  
#line 254 
  tmp_66 = readl((void const volatile *)(ioaddr + 560U));
  
#line 254 
  mmc->mmc_rx_udp_gd += tmp_66;
  
#line 255 
  tmp_67 = readl((void const volatile *)(ioaddr + 564U));
  
#line 255 
  mmc->mmc_rx_udp_err += tmp_67;
  
#line 256 
  tmp_68 = readl((void const volatile *)(ioaddr + 568U));
  
#line 256 
  mmc->mmc_rx_tcp_gd += tmp_68;
  
#line 257 
  tmp_69 = readl((void const volatile *)(ioaddr + 572U));
  
#line 257 
  mmc->mmc_rx_tcp_err += tmp_69;
  
#line 258 
  tmp_70 = readl((void const volatile *)(ioaddr + 576U));
  
#line 258 
  mmc->mmc_rx_icmp_gd += tmp_70;
  
#line 259 
  tmp_71 = readl((void const volatile *)(ioaddr + 580U));
  
#line 259 
  mmc->mmc_rx_icmp_err += tmp_71;
  
#line 261 
  tmp_72 = readl((void const volatile *)(ioaddr + 624U));
  
#line 261 
  mmc->mmc_rx_udp_gd_octets += tmp_72;
  
#line 262 
  tmp_73 = readl((void const volatile *)(ioaddr + 628U));
  
#line 262 
  mmc->mmc_rx_udp_err_octets += tmp_73;
  
#line 263 
  tmp_74 = readl((void const volatile *)(ioaddr + 632U));
  
#line 263 
  mmc->mmc_rx_tcp_gd_octets += tmp_74;
  
#line 264 
  tmp_75 = readl((void const volatile *)(ioaddr + 636U));
  
#line 264 
  mmc->mmc_rx_tcp_err_octets += tmp_75;
  
#line 265 
  tmp_76 = readl((void const volatile *)(ioaddr + 640U));
  
#line 265 
  mmc->mmc_rx_icmp_gd_octets += tmp_76;
  
#line 266 
  tmp_77 = readl((void const volatile *)(ioaddr + 644U));
  
#line 266 
  mmc->mmc_rx_icmp_err_octets += tmp_77;
  
#line 267 
  return;
}


#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/common.h"
void stmmac_set_mac_addr(void *ioaddr, u8 *addr, unsigned int high, unsigned int low);


#line 471 
void stmmac_get_mac_addr(void *ioaddr, unsigned char *addr, unsigned int high, unsigned int low);


#line 476 
void dwmac_dma_flush_tx_fifo(void *ioaddr);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_enable_dma_transmission(void *ioaddr)
{
  
#line 32 
  writel(1U,(void volatile *)(ioaddr + 4100U));
  
#line 33 
  return;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_enable_dma_irq(void *ioaddr)
{
  
#line 37 
  writel(106593U,(void volatile *)(ioaddr + 4124U));
  
#line 38 
  return;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_disable_dma_irq(void *ioaddr)
{
  
#line 42 
  writel(0U,(void volatile *)(ioaddr + 4124U));
  
#line 43 
  return;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_dma_start_tx(void *ioaddr)
{
  
#line 47 
  u32 value = readl((void const volatile *)(ioaddr + 4120U));
  
#line 48 
  value |= 8192U;
  
#line 49 
  writel(value,(void volatile *)(ioaddr + 4120U));
  
#line 50 
  return;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_dma_stop_tx(void *ioaddr)
{
  
#line 54 
  u32 value = readl((void const volatile *)(ioaddr + 4120U));
  
#line 55 
  value &= 4294959103U;
  
#line 56 
  writel(value,(void volatile *)(ioaddr + 4120U));
  
#line 57 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_dma_start_rx(void *ioaddr)
{
  
#line 61 
  u32 value = readl((void const volatile *)(ioaddr + 4120U));
  
#line 62 
  value |= 2U;
  
#line 63 
  writel(value,(void volatile *)(ioaddr + 4120U));
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_dma_stop_rx(void *ioaddr)
{
  
#line 68 
  u32 value = readl((void const volatile *)(ioaddr + 4120U));
  
#line 69 
  value &= 4294967293U;
  
#line 70 
  writel(value,(void volatile *)(ioaddr + 4120U));
  
#line 71 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
int dwmac_dma_interrupt(void *ioaddr, struct stmmac_extra_stats *x)
{
  
#line 146 
  int ret = 0;
  
#line 148 
  u32 intr_status = readl((void const volatile *)(ioaddr + 4116U));
  
#line 157 
  if ((long)((intr_status & 32768U) != 0U) != 0L) {
    
#line 158 
    if ((long)((intr_status & 32U) != 0U) != 0L) {
      
#line 159 
      ret = 2;
      
#line 160 
      x->tx_undeflow_irq += 1UL;
    }
    else ;
    
#line 162 
    if ((long)((intr_status & 8U) != 0U) != 0L) 
#line 163 
                                                x->tx_jabber_irq += 1UL; else ;
    
#line 165 
    if ((long)((intr_status & 16U) != 0U) != 0L) 
#line 166 
                                                 x->rx_overflow_irq += 1UL; else ;
    
#line 168 
    if ((long)((intr_status & 128U) != 0U) != 0L) 
#line 169 
                                                  x->rx_buf_unav_irq += 1UL; else ;
    
#line 170 
    if ((long)((intr_status & 256U) != 0U) != 0L) 
#line 171 
                                                  x->rx_process_stopped_irq += 1UL; else ;
    
#line 172 
    if ((long)((intr_status & 512U) != 0U) != 0L) 
#line 173 
                                                  x->rx_watchdog_irq += 1UL; else ;
    
#line 174 
    if ((long)((intr_status & 1024U) != 0U) != 0L) 
#line 175 
                                                   x->tx_early_irq += 1UL; else ;
    
#line 176 
    if ((long)((intr_status & 2U) != 0U) != 0L) {
      
#line 177 
      x->tx_process_stopped_irq += 1UL;
      
#line 178 
      ret = 1;
    }
    else ;
    
#line 180 
    if ((long)((intr_status & 8192U) != 0U) != 0L) {
      
#line 181 
      x->fatal_bus_error_irq += 1UL;
      
#line 182 
      ret = 1;
    }
    else ;
  }
  else ;
  
#line 186 
  if ((long)((intr_status & 65536U) != 0U) != 0L) {
    
#line 187 
    x->normal_irq_n += 1UL;
    
#line 188 
    if ((long)((intr_status & 64U) != 0U) != 0L) {
      
#line 189 
      u32 value = readl((void const volatile *)(ioaddr + 4124U));
      
#line 191 
      if ((long)((value & 64U) != 0U) != 0L) {
        
#line 192 
        x->rx_normal_irq_n += 1UL;
        
#line 193 
        ret |= 4;
      }
      else ;
    }
    else ;
    
#line 196 
    if ((long)((intr_status & 1U) != 0U) != 0L) {
      
#line 197 
      x->tx_normal_irq_n += 1UL;
      
#line 198 
      ret |= 8;
    }
    else ;
    
#line 200 
    if ((long)((intr_status & 16384U) != 0U) != 0L) 
#line 201 
                                                    x->rx_early_irq += 1UL; else ;
  }
  else ;
  
#line 204 
  if ((long)((intr_status & 469762048U) != 0U) != 0L) 
#line 206 
                                                      printk("\001","dwmac_dma_interrupt",intr_status); else ;
  
#line 209 
  writel(intr_status & 131071U,(void volatile *)(ioaddr + 4116U));
  
#line 211 
  return ret;
}


#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void dwmac_dma_flush_tx_fifo(void *ioaddr)
{
  unsigned int tmp_0;
  
#line 216 
  u32 csr6 = readl((void const volatile *)(ioaddr + 4120U));
  
#line 217 
  writel(csr6 | 1048576U,(void volatile *)(ioaddr + 4120U));
  ldv_45620: 
#line 218 
  ;
  
#line 219 
  tmp_0 = readl((void const volatile *)(ioaddr + 4120U));
  
#line 219 
  if ((tmp_0 & 1048576U) != 0U) 
#line 221 
                                goto ldv_45620; else 
#line 224 
                                                     goto ldv_45621;
  ldv_45621: 
#line 225 
  ;
  
#line 226 
  return;
}


#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void stmmac_set_mac_addr(void *ioaddr, u8 *addr, unsigned int high, unsigned int low)
{
  unsigned long data;
  
#line 227 
  data = (unsigned long)(((int)*(addr + 5U) << 8) | (int)*(addr + 4U));
  
#line 232 
  writel((unsigned int)data | 2147483648U,(void volatile *)(ioaddr + high));
  
#line 233 
  data = (unsigned long)(((((int)*(addr + 3U) << 24) | ((int)*(addr + 2U) << 16)) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 234 
  writel((unsigned int)data,(void volatile *)(ioaddr + low));
  
#line 235 
  return;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void stmmac_set_mac(void *ioaddr, bool enable)
{
  
#line 240 
  u32 value = readl((void const volatile *)ioaddr);
  
#line 242 
  if ((int)enable != 0) 
#line 243 
                        value |= 12U; else 
#line 245 
                                           value &= 4294967283U;
  
#line 247 
  writel(value,(void volatile *)ioaddr);
  
#line 248 
  return;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac_lib.c"
void stmmac_get_mac_addr(void *ioaddr, unsigned char *addr, unsigned int high, unsigned int low)
{
  unsigned int hi_addr;
  unsigned int lo_addr;
  
#line 256 
  hi_addr = readl((void const volatile *)(ioaddr + high));
  
#line 257 
  lo_addr = readl((void const volatile *)(ioaddr + low));
  
#line 260 
  *addr = (unsigned char)lo_addr;
  
#line 261 
  *(addr + 1U) = (unsigned char)(lo_addr >> 8);
  
#line 262 
  *(addr + 2U) = (unsigned char)(lo_addr >> 16);
  
#line 263 
  *(addr + 3U) = (unsigned char)(lo_addr >> 24);
  
#line 264 
  *(addr + 4U) = (unsigned char)hi_addr;
  
#line 265 
  *(addr + 5U) = (unsigned char)(hi_addr >> 8);
  
#line 266 
  return;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc(size_t size, gfp_t flags);


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000.h"
struct stmmac_dma_ops const dwmac1000_dma_ops;


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_core_init(struct mac_device_info *hw, int mtu)
{
  
#line 37 
  void *ioaddr = hw->pcsr;
  
#line 38 
  u32 value = readl((void const volatile *)ioaddr);
  
#line 39 
  value |= 6389888U;
  
#line 40 
  if (mtu > 1500) 
#line 41 
                  value |= 134217728U; else ;
  
#line 42 
  if (mtu > 2000) 
#line 43 
                  value |= 1048576U; else ;
  
#line 45 
  writel(value,(void volatile *)ioaddr);
  
#line 48 
  writel(519U,(void volatile *)(ioaddr + 60U));
  
#line 52 
  writel(0U,(void volatile *)(ioaddr + 28U));
  
#line 53 
  return;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static int dwmac1000_rx_ipc_enable(struct mac_device_info *hw)
{
  int __retres;
  
#line 58 
  void *ioaddr = hw->pcsr;
  
#line 59 
  u32 value = readl((void const volatile *)ioaddr);
  
#line 61 
  if (hw->rx_csum != 0U) 
#line 62 
                         value |= 1024U; else 
#line 64 
                                              value &= 4294966271U;
  
#line 66 
  writel(value,(void volatile *)ioaddr);
  
#line 68 
  value = readl((void const volatile *)ioaddr);
  
#line 70 
  __retres = (value & 1024U) != 0U;
  
#line 70 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_dump_regs(struct mac_device_info *hw)
{
  int i;
  
#line 75 
  void *ioaddr = hw->pcsr;
  
#line 77 
  printk("\001",ioaddr);
  
#line 79 
  i = 0;
  
#line 79 
  goto ldv_45674;
  ldv_45673: 
#line 80 
  ;
  {
    unsigned int tmp;
    
#line 80 
    int offset = i * 4;
    
#line 81 
    tmp = readl((void const volatile *)(ioaddr + offset));
    
#line 81 
    ;
    
#line 81 
    ;
    
#line 81 
    printk("\001",i,offset,tmp);
  }
  
#line 79 
  i += 1;
  ldv_45674: 
#line 80 
  ;
  
#line 79 
  if (i <= 54) 
#line 81 
               goto ldv_45673; else 
#line 84 
                                    goto ldv_45675;
  ldv_45675: 
#line 85 
  ;
  
#line 86 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_umac_addr(struct mac_device_info *hw, unsigned char *addr, unsigned int reg_n)
{
  int tmp;
  int tmp_0;
  
#line 90 
  void *ioaddr = hw->pcsr;
  
#line 92 
  if (reg_n > 15U) 
#line 92 
                   tmp = 2052; else 
#line 92 
                                    tmp = 68;
  
#line 91 
  ;
  
#line 91 
  if (reg_n > 15U) 
#line 91 
                   tmp_0 = 2048; else 
#line 91 
                                      tmp_0 = 64;
  
#line 91 
  ;
  
#line 91 
  ;
  
#line 91 
  ;
  
#line 91 
  stmmac_set_mac_addr(ioaddr,addr,(unsigned int)tmp_0 + reg_n * 8U,(unsigned int)tmp + reg_n * 8U);
  
#line 93 
  return;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_get_umac_addr(struct mac_device_info *hw, unsigned char *addr, unsigned int reg_n)
{
  int tmp;
  int tmp_0;
  
#line 99 
  void *ioaddr = hw->pcsr;
  
#line 101 
  if (reg_n > 15U) 
#line 101 
                   tmp = 2052; else 
#line 101 
                                    tmp = 68;
  
#line 100 
  ;
  
#line 100 
  if (reg_n > 15U) 
#line 100 
                   tmp_0 = 2048; else 
#line 100 
                                      tmp_0 = 64;
  
#line 100 
  ;
  
#line 100 
  ;
  
#line 100 
  ;
  
#line 100 
  stmmac_get_mac_addr(ioaddr,addr,(unsigned int)tmp_0 + reg_n * 8U,(unsigned int)tmp + reg_n * 8U);
  
#line 102 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_mchash(void *ioaddr, u32 *mcfilterbits, int mcbitslog2)
{
  int numhashregs;
  int regs;
  
#line 109 
  switch (mcbitslog2) {
    case 6: 
#line 110 
    ;
    
#line 111 
    writel(*mcfilterbits,(void volatile *)(ioaddr + 12U));
    
#line 112 
    writel(*(mcfilterbits + 1U),(void volatile *)(ioaddr + 8U));
    
#line 113 
    goto return_label;
    case 7: 
#line 115 
    ;
    
#line 116 
    numhashregs = 4;
    
#line 117 
    goto ldv_45697;
    case 8: 
#line 118 
    ;
    
#line 119 
    numhashregs = 8;
    
#line 120 
    goto ldv_45697;
    default: 
#line 121 
    ;
    {
      
#line 122 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_set_mchash", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "STMMAC: err in setting mulitcast filter\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))122U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 122 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 122 
                                                          __dynamic_pr_debug(& descriptor,"STMMAC: err in setting mulitcast filter\n"); else ;
    }
    
#line 123 
    goto return_label;
  }
  ldv_45697: 
#line 126 
  ;
  
#line 126 
  regs = 0;
  
#line 126 
  goto ldv_45703;
  ldv_45702: 
#line 127 
  ;
  
#line 127 
  writel(*(mcfilterbits + regs),(void volatile *)(ioaddr + ((unsigned int)(regs * 4) + 1280U)));
  
#line 126 
  regs += 1;
  ldv_45703: 
#line 127 
  ;
  
#line 126 
  if (regs < numhashregs) 
#line 128 
                          goto ldv_45702; else 
#line 131 
                                               goto ldv_45704;
  ldv_45704: 
#line 132 
  ;
  return_label: 
#line 133 
                return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_filter(struct mac_device_info *hw, struct net_device *dev)
{
  u32 mc_filter[8U];
  
#line 134 
  void *ioaddr = (void *)dev->base_addr;
  
#line 135 
  unsigned int value = 0U;
  
#line 136 
  unsigned int perfect_addr_number = (unsigned int)hw->unicast_filter_entries;
  
#line 138 
  int mcbitslog2 = hw->mcast_bits_log2;
  {
    
#line 140 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_set_filter", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "%s: # mcasts %d, # unicast %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))141U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 140 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 140 
                                                        __dynamic_pr_debug(& descriptor,"%s: # mcasts %d, # unicast %d\n","dwmac1000_set_filter",dev->mc.count,dev->uc.count); else ;
  }
  
#line 143 
  memset((void *)(& mc_filter),0,32UL);
  
#line 145 
  if ((dev->flags & 256U) != 0U) 
#line 146 
                                 value = 1U;
  else 
    
#line 147 
    if ((dev->flags & 512U) != 0U) 
#line 148 
                                   value = 16U;
    else 
      
#line 149 
      if (dev->mc.count != 0) {
        struct netdev_hw_addr *ha;
        struct netdev_hw_addr *tmp;
        struct netdev_hw_addr *tmp_5;
        
#line 153 
        value = 4U;
        {
          
#line 155 
          struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
          
#line 155 
          tmp = (struct netdev_hw_addr *)__mptr;
        }
        
#line 155 
        ha = tmp;
        
#line 155 
        goto ldv_45727;
        ldv_45726: 
#line 156 
        ;
        {
          u32 tmp_4;
          {
            u32 tmp_0;
            u32 tmp_3;
            
#line 161 
            tmp_0 = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
            
#line 161 
            u32 __x = ~ tmp_0;
            
#line 161 
            if (0 != 0) {
              u32 tmp_1;
              {
                
#line 161 
                u32 __x_0 = __x_0;
                
#line 161 
                __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
                
#line 161 
                __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
                
#line 161 
                __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
                
#line 161 
                __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
                
#line 161 
                __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
                
#line 161 
                tmp_1 = __x_0;
              }
              
#line 161 
              tmp_3 = tmp_1;
            }
            else 
#line 161 
                 tmp_3 = __bitrev32(__x);
            
#line 161 
            tmp_4 = tmp_3;
          }
          
#line 161 
          int bit_nr = (int)(tmp_4 >> (32 - mcbitslog2));
          
#line 168 
          mc_filter[bit_nr >> 5] |= (unsigned int)(1 << (bit_nr & 31));
        }
        {
          
#line 155 
          struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
          
#line 155 
          tmp_5 = (struct netdev_hw_addr *)__mptr_0;
        }
        
#line 155 
        ha = tmp_5;
        ldv_45727: 
#line 157 
        ;
        
#line 155 
        if (& ha->list != & dev->mc.list) 
#line 157 
                                          goto ldv_45726; else 
#line 160 
                                                               goto ldv_45728;
        ldv_45728: 
#line 161 
        ;
      }
      else ;
  
#line 172 
  dwmac1000_set_mchash(ioaddr,(u32 *)(& mc_filter),mcbitslog2);
  
#line 175 
  if ((unsigned int)dev->uc.count > perfect_addr_number) 
#line 179 
                                                         value |= 1U;
  else {
    struct netdev_hw_addr *ha_0;
    struct netdev_hw_addr *tmp_6;
    int tmp_7;
    int tmp_8;
    struct netdev_hw_addr *tmp_9;
    
#line 181 
    int reg = 1;
    {
      
#line 184 
      struct list_head const *__mptr_1 = (struct list_head const *)dev->uc.list.next;
      
#line 184 
      tmp_6 = (struct netdev_hw_addr *)__mptr_1;
    }
    
#line 184 
    ha_0 = tmp_6;
    
#line 184 
    goto ldv_45736;
    ldv_45735: 
#line 185 
    ;
    
#line 187 
    if (reg > 15) 
#line 187 
                  tmp_7 = 2052; else 
#line 187 
                                     tmp_7 = 68;
    
#line 185 
    ;
    
#line 186 
    if (reg > 15) 
#line 186 
                  tmp_8 = 2048; else 
#line 186 
                                     tmp_8 = 64;
    
#line 185 
    ;
    
#line 185 
    ;
    
#line 185 
    ;
    
#line 185 
    stmmac_set_mac_addr(ioaddr,(u8 *)(& ha_0->addr),(unsigned int)(tmp_8 + reg * 8),(unsigned int)(tmp_7 + reg * 8));
    
#line 188 
    reg += 1;
    {
      
#line 184 
      struct list_head const *__mptr_2 = (struct list_head const *)ha_0->list.next;
      
#line 184 
      tmp_9 = (struct netdev_hw_addr *)__mptr_2;
    }
    
#line 184 
    ha_0 = tmp_9;
    ldv_45736: 
#line 186 
    ;
    
#line 184 
    if (& ha_0->list != & dev->uc.list) 
#line 186 
                                        goto ldv_45735; else 
#line 189 
                                                             goto ldv_45737;
    ldv_45737: 
#line 190 
    ;
  }
  
#line 196 
  writel(value,(void volatile *)(ioaddr + 4U));
  
#line 197 
  return;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_flow_ctrl(struct mac_device_info *hw, unsigned int duplex, unsigned int fc, unsigned int pause_time)
{
  
#line 203 
  void *ioaddr = hw->pcsr;
  
#line 207 
  unsigned int flow = 8U;
  {
    
#line 209 
    struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_flow_ctrl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "GMAC Flow-Control:\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))209U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 209 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 209 
                                                        __dynamic_pr_debug(& descriptor,"GMAC Flow-Control:\n"); else ;
  }
  
#line 210 
  if ((fc & 1U) != 0U) {
    {
      
#line 211 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "dwmac1000_flow_ctrl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "\tReceive Flow-Control ON\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))211U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 211 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 211 
                                                            __dynamic_pr_debug(& descriptor_0,"\tReceive Flow-Control ON\n"); else ;
    }
    
#line 212 
    flow |= 4U;
  }
  else ;
  
#line 214 
  if ((fc & 2U) != 0U) {
    {
      
#line 215 
      struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "dwmac1000_flow_ctrl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "\tTransmit Flow-Control ON\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))215U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 215 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 215 
                                                            __dynamic_pr_debug(& descriptor_1,"\tTransmit Flow-Control ON\n"); else ;
    }
    
#line 216 
    flow |= 2U;
  }
  else ;
  
#line 219 
  if (duplex != 0U) {
    {
      
#line 220 
      struct _ddebug descriptor_2 = {.modname = "stmmac", .function = "dwmac1000_flow_ctrl", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "\tduplex mode: PAUSE %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))220U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 220 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 220 
                                                            __dynamic_pr_debug(& descriptor_2,"\tduplex mode: PAUSE %d\n",pause_time); else ;
    }
    
#line 221 
    flow = (pause_time << 16) | flow;
  }
  else ;
  
#line 224 
  writel(flow,(void volatile *)(ioaddr + 24U));
  
#line 225 
  return;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_pmt(struct mac_device_info *hw, unsigned long mode)
{
  
#line 229 
  void *ioaddr = hw->pcsr;
  
#line 230 
  unsigned int pmt = 0U;
  
#line 232 
  if ((mode & 32UL) != 0UL) {
    {
      
#line 233 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_pmt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "GMAC: WOL Magic frame\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))233U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 233 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 233 
                                                          __dynamic_pr_debug(& descriptor,"GMAC: WOL Magic frame\n"); else ;
    }
    
#line 234 
    pmt |= 3U;
  }
  else ;
  
#line 236 
  if ((mode & 2UL) != 0UL) {
    {
      
#line 237 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "dwmac1000_pmt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "GMAC: WOL on global unicast\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))237U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 237 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 237 
                                                            __dynamic_pr_debug(& descriptor_0,"GMAC: WOL on global unicast\n"); else ;
    }
    
#line 238 
    pmt |= 512U;
  }
  else ;
  
#line 241 
  writel(pmt,(void volatile *)(ioaddr + 44U));
  
#line 242 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static int dwmac1000_irq_status(struct mac_device_info *hw, struct stmmac_extra_stats *x)
{
  
#line 247 
  void *ioaddr = hw->pcsr;
  
#line 248 
  u32 intr_status = readl((void const volatile *)(ioaddr + 56U));
  
#line 249 
  int ret = 0;
  
#line 252 
  if ((intr_status & 64U) != 0U) 
#line 253 
                                 x->mmc_tx_irq_n += 1UL; else ;
  
#line 254 
  if ((long)((intr_status & 32U) != 0U) != 0L) 
#line 255 
                                               x->mmc_rx_irq_n += 1UL; else ;
  
#line 256 
  if ((long)((intr_status & 128U) != 0U) != 0L) 
#line 257 
                                                x->mmc_rx_csum_offload_irq_n += 1UL; else ;
  
#line 258 
  if ((long)((intr_status & 8U) != 0U) != 0L) {
    
#line 260 
    readl((void const volatile *)(ioaddr + 44U));
    
#line 261 
    x->irq_receive_pmt_irq_n += 1UL;
  }
  else ;
  
#line 264 
  if ((intr_status & 1024U) != 0U) {
    unsigned int tmp_0;
    
#line 266 
    tmp_0 = readl((void const volatile *)(ioaddr + 48U));
    
#line 266 
    ret = (int)tmp_0;
    
#line 268 
    if ((ret & 1) != 0) 
#line 269 
                        x->irq_tx_path_in_lpi_mode_n += 1UL; else ;
    
#line 270 
    if ((ret & 2) != 0) 
#line 271 
                        x->irq_tx_path_exit_lpi_mode_n += 1UL; else ;
    
#line 272 
    if ((ret & 4) != 0) 
#line 273 
                        x->irq_rx_path_in_lpi_mode_n += 1UL; else ;
    
#line 274 
    if ((ret & 8) != 0) 
#line 275 
                        x->irq_rx_path_exit_lpi_mode_n += 1UL; else ;
  }
  else ;
  
#line 278 
  if ((intr_status & 4U) != 0U || (intr_status & 2U) != 0U) {
    
#line 279 
    readl((void const volatile *)(ioaddr + 196U));
    
#line 280 
    x->irq_pcs_ane_n += 1UL;
  }
  else ;
  
#line 282 
  if ((intr_status & 1U) != 0U) {
    
#line 283 
    u32 status = readl((void const volatile *)(ioaddr + 216U));
    
#line 284 
    x->irq_rgmii_n += 1UL;
    
#line 287 
    if ((status & 8U) != 0U) {
      
#line 288 
      int speed_value = (int)(status >> 1) & 2;
      
#line 290 
      x->pcs_duplex = (unsigned long)status & 1UL;
      
#line 292 
      if (speed_value == 2) 
#line 293 
                            x->pcs_speed = 1000UL;
      else 
        
#line 294 
        if (speed_value == 1) 
#line 295 
                              x->pcs_speed = 100UL; else 
#line 297 
                                                         x->pcs_speed = 10UL;
      
#line 299 
      x->pcs_link = 1UL;
      {
        
#line 300 
        struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_irq_status", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "%s: Link is Up - %d/%s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))302U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 300 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
          char *tmp_2;
          
#line 300 
          if (x->pcs_duplex != 0UL) 
#line 300 
                                    tmp_2 = (char *)"Full"; else 
#line 300 
                                                                 tmp_2 = (char *)"Half";
          
#line 300 
          ;
          
#line 300 
          __dynamic_pr_debug(& descriptor,"%s: Link is Up - %d/%s\n","dwmac1000_irq_status",(int)x->pcs_speed,tmp_2);
        }
        else ;
      }
    }
    else {
      
#line 304 
      x->pcs_link = 0UL;
      {
        
#line 305 
        struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "dwmac1000_irq_status", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c", .format = "%s: Link is Down\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))305U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 305 
        if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 305 
                                                              __dynamic_pr_debug(& descriptor_0,"%s: Link is Down\n","dwmac1000_irq_status"); else ;
      }
    }
  }
  else ;
  
#line 309 
  return ret;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_eee_mode(struct mac_device_info *hw)
{
  u32 value;
  
#line 314 
  void *ioaddr = hw->pcsr;
  
#line 321 
  value = readl((void const volatile *)(ioaddr + 48U));
  
#line 322 
  value |= 589824U;
  
#line 323 
  writel(value,(void volatile *)(ioaddr + 48U));
  
#line 324 
  return;
}


#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_reset_eee_mode(struct mac_device_info *hw)
{
  u32 value;
  
#line 328 
  void *ioaddr = hw->pcsr;
  
#line 331 
  value = readl((void const volatile *)(ioaddr + 48U));
  
#line 332 
  value &= 4294377471U;
  
#line 333 
  writel(value,(void volatile *)(ioaddr + 48U));
  
#line 334 
  return;
}


#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_eee_pls(struct mac_device_info *hw, int link)
{
  u32 value;
  
#line 338 
  void *ioaddr = hw->pcsr;
  
#line 341 
  value = readl((void const volatile *)(ioaddr + 48U));
  
#line 343 
  if (link != 0) 
#line 344 
                 value |= 131072U; else 
#line 346 
                                        value &= 4294836223U;
  
#line 348 
  writel(value,(void volatile *)(ioaddr + 48U));
  
#line 349 
  return;
}


#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_set_eee_timer(struct mac_device_info *hw, int ls, int tw)
{
  
#line 353 
  void *ioaddr = hw->pcsr;
  
#line 354 
  int value = (tw & 65535) | ((ls << 16) & 134152192);
  
#line 363 
  writel((unsigned int)value,(void volatile *)(ioaddr + 52U));
  
#line 364 
  return;
}


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_ctrl_ane(struct mac_device_info *hw, bool restart)
{
  
#line 368 
  void *ioaddr = hw->pcsr;
  
#line 370 
  u32 value = 20480U;
  
#line 372 
  if ((int)restart != 0) 
#line 373 
                         value |= 512U; else ;
  
#line 375 
  writel(value,(void volatile *)(ioaddr + 192U));
  
#line 376 
  return;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static void dwmac1000_get_adv(struct mac_device_info *hw, struct rgmii_adv *adv)
{
  
#line 380 
  void *ioaddr = hw->pcsr;
  
#line 381 
  u32 value = readl((void const volatile *)(ioaddr + 200U));
  
#line 383 
  if ((value & 32U) != 0U) 
#line 384 
                           adv->duplex = 1U; else ;
  
#line 385 
  if ((value & 64U) != 0U) 
#line 386 
                           adv->duplex = adv->duplex; else ;
  
#line 388 
  adv->pause = (value >> 7) & 3U;
  
#line 390 
  value = readl((void const volatile *)(ioaddr + 204U));
  
#line 392 
  if ((value & 32U) != 0U) 
#line 393 
                           adv->lp_duplex = 1U; else ;
  
#line 394 
  if ((value & 64U) != 0U) 
#line 395 
                           adv->lp_duplex = 0U; else ;
  
#line 397 
  adv->lp_pause = (value >> 7) & 3U;
  
#line 398 
  return;
}


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
static struct stmmac_ops const dwmac1000_ops = {.core_init = & dwmac1000_core_init, .rx_ipc = & dwmac1000_rx_ipc_enable, .dump_regs = & dwmac1000_dump_regs, .host_irq_status = & dwmac1000_irq_status, .set_filter = & dwmac1000_set_filter, .flow_ctrl = & dwmac1000_flow_ctrl, .pmt = & dwmac1000_pmt, .set_umac_addr = & dwmac1000_set_umac_addr, .get_umac_addr = & dwmac1000_get_umac_addr, .set_eee_mode = & dwmac1000_set_eee_mode, .reset_eee_mode = & dwmac1000_reset_eee_mode, .set_eee_timer = & dwmac1000_set_eee_timer, .set_eee_pls = & dwmac1000_set_eee_pls, .ctrl_ane = & dwmac1000_ctrl_ane, .get_adv = & dwmac1000_get_adv};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_core.c"
struct mac_device_info *dwmac1000_setup(void *ioaddr, int mcbins, int perfect_uc_entries)
{
  struct mac_device_info *__retres;
  struct mac_device_info *mac;
  
#line 422 
  u32 hwid = readl((void const volatile *)(ioaddr + 32U));
  
#line 424 
  mac = (struct mac_device_info *)kzalloc(88UL,208U);
  
#line 425 
  if (mac == (struct mac_device_info *)0) {
    
#line 426 
    __retres = (struct mac_device_info *)0;
    
#line 426 
    goto return_label;
  }
  else ;
  
#line 428 
  mac->pcsr = ioaddr;
  
#line 429 
  mac->multicast_filter_bins = mcbins;
  
#line 430 
  mac->unicast_filter_entries = perfect_uc_entries;
  
#line 431 
  mac->mcast_bits_log2 = 0;
  
#line 433 
  if (mac->multicast_filter_bins != 0) 
    
#line 434 
    if (0 != 0) {
      int tmp_67;
      
#line 434 
      if (mac->multicast_filter_bins <= 0) 
#line 434 
                                           tmp_67 = ____ilog2_NaN();
      else {
        int tmp_66;
        
#line 434 
        if (mac->multicast_filter_bins >= 0) {
          int tmp_65;
          
#line 434 
          if (((unsigned long long)mac->multicast_filter_bins & 4611686018427387904ULL) == 0ULL) {
            int tmp_64;
            
#line 434 
            if (((unsigned long long)mac->multicast_filter_bins & 2305843009213693952ULL) == 0ULL) {
              int tmp_63;
              
#line 434 
              if (((unsigned long long)mac->multicast_filter_bins & 1152921504606846976ULL) == 0ULL) {
                int tmp_62;
                
#line 434 
                if (((unsigned long long)mac->multicast_filter_bins & 576460752303423488ULL) == 0ULL) {
                  int tmp_61;
                  
#line 434 
                  if (((unsigned long long)mac->multicast_filter_bins & 288230376151711744ULL) == 0ULL) {
                    int tmp_60;
                    
#line 434 
                    if (((unsigned long long)mac->multicast_filter_bins & 144115188075855872ULL) == 0ULL) {
                      int tmp_59;
                      
#line 434 
                      if (((unsigned long long)mac->multicast_filter_bins & 72057594037927936ULL) == 0ULL) {
                        int tmp_58;
                        
#line 434 
                        if (((unsigned long long)mac->multicast_filter_bins & 36028797018963968ULL) == 0ULL) {
                          int tmp_57;
                          
#line 434 
                          if (((unsigned long long)mac->multicast_filter_bins & 18014398509481984ULL) == 0ULL) {
                            int tmp_56;
                            
#line 434 
                            if (((unsigned long long)mac->multicast_filter_bins & 9007199254740992ULL) == 0ULL) {
                              int tmp_55;
                              
#line 434 
                              if (((unsigned long long)mac->multicast_filter_bins & 4503599627370496ULL) == 0ULL) {
                                int tmp_54;
                                
#line 434 
                                if (((unsigned long long)mac->multicast_filter_bins & 2251799813685248ULL) == 0ULL) {
                                  int tmp_53;
                                  
#line 434 
                                  if (((unsigned long long)mac->multicast_filter_bins & 1125899906842624ULL) == 0ULL) {
                                    int tmp_52;
                                    
#line 434 
                                    if (((unsigned long long)mac->multicast_filter_bins & 562949953421312ULL) == 0ULL) {
                                      int tmp_51;
                                      
#line 434 
                                      if (((unsigned long long)mac->multicast_filter_bins & 281474976710656ULL) == 0ULL) {
                                        int tmp_50;
                                        
#line 434 
                                        if (((unsigned long long)mac->multicast_filter_bins & 140737488355328ULL) == 0ULL) {
                                          int tmp_49;
                                          
#line 434 
                                          if (((unsigned long long)mac->multicast_filter_bins & 70368744177664ULL) == 0ULL) {
                                            int tmp_48;
                                            
#line 434 
                                            if (((unsigned long long)mac->multicast_filter_bins & 35184372088832ULL) == 0ULL) {
                                              int tmp_47;
                                              
#line 434 
                                              if (((unsigned long long)mac->multicast_filter_bins & 17592186044416ULL) == 0ULL) {
                                                int tmp_46;
                                                
#line 434 
                                                if (((unsigned long long)mac->multicast_filter_bins & 8796093022208ULL) == 0ULL) {
                                                  int tmp_45;
                                                  
#line 434 
                                                  if (((unsigned long long)mac->multicast_filter_bins & 4398046511104ULL) == 0ULL) {
                                                    int tmp_44;
                                                    
#line 434 
                                                    if (((unsigned long long)mac->multicast_filter_bins & 2199023255552ULL) == 0ULL) {
                                                      int tmp_43;
                                                      
#line 434 
                                                      if (((unsigned long long)mac->multicast_filter_bins & 1099511627776ULL) == 0ULL) {
                                                        int tmp_42;
                                                        
#line 434 
                                                        if (((unsigned long long)mac->multicast_filter_bins & 549755813888ULL) == 0ULL) {
                                                          int tmp_41;
                                                          
#line 434 
                                                          if (((unsigned long long)mac->multicast_filter_bins & 274877906944ULL) == 0ULL) {
                                                            int tmp_40;
                                                            
#line 434 
                                                            if (((unsigned long long)mac->multicast_filter_bins & 137438953472ULL) == 0ULL) {
                                                              int tmp_39;
                                                              
#line 434 
                                                              if (((unsigned long long)mac->multicast_filter_bins & 68719476736ULL) == 0ULL) {
                                                                int tmp_38;
                                                                
#line 434 
                                                                if (((unsigned long long)mac->multicast_filter_bins & 34359738368ULL) == 0ULL) {
                                                                  int tmp_37;
                                                                  
#line 434 
                                                                  if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 17179869184ULL) == 0ULL) {
                                                                    int tmp_36;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 8589934592ULL) == 0ULL) {
                                                                    int tmp_35;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 4294967296ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 434 
                                                                    if (
                                                                    mac->multicast_filter_bins >= 0) {
                                                                    int tmp_33;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 1073741824ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 536870912ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 268435456ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 134217728ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 67108864ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 33554432ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 16777216ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 8388608ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 4194304ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 2097152ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 1048576ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 524288ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 262144ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 131072ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 65536ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 32768ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 16384ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 8192ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 4096ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 2048ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 1024ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 512ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 256ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 128ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 64ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 32ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 16ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 8ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 4ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 2ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 434 
                                                                    if (
                                                                    ((unsigned long long)mac->multicast_filter_bins & 1ULL) == 0ULL) 
                                                                    
#line 434 
                                                                    tmp_3 = ____ilog2_NaN(); else 
                                                                    
#line 434 
                                                                    tmp_3 = 0;
                                                                    
#line 434 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_4 = 1;
                                                                    
#line 434 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_5 = 2;
                                                                    
#line 434 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_6 = 3;
                                                                    
#line 434 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_7 = 4;
                                                                    
#line 434 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_8 = 5;
                                                                    
#line 434 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_9 = 6;
                                                                    
#line 434 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_10 = 7;
                                                                    
#line 434 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_11 = 8;
                                                                    
#line 434 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_12 = 9;
                                                                    
#line 434 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_13 = 10;
                                                                    
#line 434 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_14 = 11;
                                                                    
#line 434 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_15 = 12;
                                                                    
#line 434 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_16 = 13;
                                                                    
#line 434 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_17 = 14;
                                                                    
#line 434 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_18 = 15;
                                                                    
#line 434 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_19 = 16;
                                                                    
#line 434 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_20 = 17;
                                                                    
#line 434 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_21 = 18;
                                                                    
#line 434 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_22 = 19;
                                                                    
#line 434 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_23 = 20;
                                                                    
#line 434 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_24 = 21;
                                                                    
#line 434 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_25 = 22;
                                                                    
#line 434 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_26 = 23;
                                                                    
#line 434 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_27 = 24;
                                                                    
#line 434 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_28 = 25;
                                                                    
#line 434 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_29 = 26;
                                                                    
#line 434 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_30 = 27;
                                                                    
#line 434 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_31 = 28;
                                                                    
#line 434 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_32 = 29;
                                                                    
#line 434 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_33 = 30;
                                                                    
#line 434 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_34 = 31;
                                                                    
#line 434 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_35 = 32;
                                                                    
#line 434 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 434 
                                                                    tmp_36 = 33;
                                                                    
#line 434 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 434 
                                                                    tmp_37 = 34;
                                                                  
#line 434 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 434 
                                                                  tmp_38 = 35;
                                                                
#line 434 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 434 
                                                                   tmp_39 = 36;
                                                              
#line 434 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 434 
                                                                 tmp_40 = 37;
                                                            
#line 434 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 434 
                                                               tmp_41 = 38;
                                                          
#line 434 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 434 
                                                             tmp_42 = 39;
                                                        
#line 434 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 434 
                                                           tmp_43 = 40;
                                                      
#line 434 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 434 
                                                         tmp_44 = 41;
                                                    
#line 434 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 434 
                                                       tmp_45 = 42;
                                                  
#line 434 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 434 
                                                     tmp_46 = 43;
                                                
#line 434 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 434 
                                                   tmp_47 = 44;
                                              
#line 434 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 434 
                                                 tmp_48 = 45;
                                            
#line 434 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 434 
                                               tmp_49 = 46;
                                          
#line 434 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 434 
                                             tmp_50 = 47;
                                        
#line 434 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 434 
                                           tmp_51 = 48;
                                      
#line 434 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 434 
                                         tmp_52 = 49;
                                    
#line 434 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 434 
                                       tmp_53 = 50;
                                  
#line 434 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 434 
                                     tmp_54 = 51;
                                
#line 434 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 434 
                                   tmp_55 = 52;
                              
#line 434 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 434 
                                 tmp_56 = 53;
                            
#line 434 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 434 
                               tmp_57 = 54;
                          
#line 434 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 434 
                             tmp_58 = 55;
                        
#line 434 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 434 
                           tmp_59 = 56;
                      
#line 434 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 434 
                         tmp_60 = 57;
                    
#line 434 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 434 
                       tmp_61 = 58;
                  
#line 434 
                  tmp_62 = tmp_61;
                }
                else 
#line 434 
                     tmp_62 = 59;
                
#line 434 
                tmp_63 = tmp_62;
              }
              else 
#line 434 
                   tmp_63 = 60;
              
#line 434 
              tmp_64 = tmp_63;
            }
            else 
#line 434 
                 tmp_64 = 61;
            
#line 434 
            tmp_65 = tmp_64;
          }
          else 
#line 434 
               tmp_65 = 62;
          
#line 434 
          tmp_66 = tmp_65;
        }
        else 
#line 434 
             tmp_66 = 63;
        
#line 434 
        tmp_67 = tmp_66;
      }
      
#line 434 
      mac->mcast_bits_log2 = tmp_67;
    }
    else 
#line 434 
         mac->mcast_bits_log2 = __ilog2_u32((unsigned int)mac->multicast_filter_bins);
  else ;
  
#line 436 
  mac->mac = & dwmac1000_ops;
  
#line 437 
  mac->dma = & dwmac1000_dma_ops;
  
#line 439 
  mac->link.port = 32768;
  
#line 440 
  mac->link.duplex = 2048;
  
#line 441 
  mac->link.speed = 16384;
  
#line 442 
  mac->mii.addr = 16U;
  
#line 443 
  mac->mii.data = 20U;
  
#line 444 
  mac->synopsys_uid = hwid;
  
#line 446 
  __retres = mac;
  return_label: 
#line 446 
                return __retres;
}


#line 419  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_dwmac1000_core.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 422 
  tmp = ldv_kzalloc(size,flags);
  
#line 422 
  return tmp;
}


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ehn_desc_rx_set_on_ring(struct dma_desc *p, int end)
{
  
#line 38 
  p->des01.erx.buffer2_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))8191U;
  
#line 39 
  if (end != 0) 
#line 40 
                p->des01.erx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 41 
  return;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ehn_desc_tx_set_on_ring(struct dma_desc *p, int end)
{
  
#line 45 
  if (end != 0) 
#line 46 
                p->des01.etx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 47 
  return;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void enh_desc_end_tx_desc_on_ring(struct dma_desc *p, int ter)
{
  
#line 51 
  p->des01.etx.end_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))ter;
  
#line 52 
  return;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void enh_set_tx_desc_len_on_ring(struct dma_desc *p, int len)
{
  
#line 56 
  if ((long)(len > 4096) != 0L) {
    
#line 57 
    p->des01.etx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))4096U;
    
#line 58 
    p->des01.etx.buffer2_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))((unsigned int)((unsigned short)len) + 61440U);
  }
  else 
#line 60 
       p->des01.etx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))len;
  
#line 61 
  return;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ehn_desc_rx_set_on_chain(struct dma_desc *p, int end)
{
  
#line 96 
  p->des01.erx.second_address_chained = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 97 
  return;
}


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void ehn_desc_tx_set_on_chain(struct dma_desc *p, int end)
{
  
#line 101 
  p->des01.etx.second_address_chained = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 102 
  return;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/descs_com.h"
__inline static void enh_set_tx_desc_len_on_chain(struct dma_desc *p, int len)
{
  
#line 111 
  p->des01.etx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))len;
  
#line 112 
  return;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_tx_status(void *data, struct stmmac_extra_stats *x, struct dma_desc *p, void *ioaddr)
{
  
#line 32 
  int ret = 0;
  
#line 33 
  struct net_device_stats *stats = (struct net_device_stats *)data;
  
#line 35 
  if ((long)((int)*((unsigned char *)(& p->des01.etx) + 1UL) < 0) != 0L) {
    
#line 36 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) 
      
#line 37 
      x->tx_jabber += 1UL; else ;
    
#line 39 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) {
      
#line 40 
      x->tx_frame_flushed += 1UL;
      
#line 41 
      dwmac_dma_flush_tx_fifo(ioaddr);
    }
    else ;
    
#line 44 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) {
      
#line 45 
      x->tx_losscarrier += 1UL;
      
#line 46 
      stats->tx_carrier_errors += 1UL;
    }
    else ;
    
#line 48 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) {
      
#line 49 
      x->tx_carrier += 1UL;
      
#line 50 
      stats->tx_carrier_errors += 1UL;
    }
    else ;
    
#line 52 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) 
      
#line 53 
      stats->collisions += (unsigned long)p->des01.etx.collision_count; else ;
    
#line 55 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) 
      
#line 56 
      stats->collisions += (unsigned long)p->des01.etx.collision_count; else ;
    
#line 58 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 0UL) != 0U) != 0L) 
      
#line 59 
      x->tx_deferred += 1UL; else ;
    
#line 61 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 0UL) != 0U) != 0L) {
      
#line 62 
      dwmac_dma_flush_tx_fifo(ioaddr);
      
#line 63 
      x->tx_underflow += 1UL;
    }
    else ;
    
#line 66 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 2UL) != 0U) != 0L) 
      
#line 67 
      x->tx_ip_header_error += 1UL; else ;
    
#line 69 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 1UL) != 0U) != 0L) {
      
#line 70 
      x->tx_payload_error += 1UL;
      
#line 71 
      dwmac_dma_flush_tx_fifo(ioaddr);
    }
    else ;
    
#line 74 
    ret = -1;
  }
  else ;
  
#line 77 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.etx) + 0UL) != 0U) != 0L) 
    
#line 78 
    x->tx_deferred += 1UL; else ;
  
#line 81 
  if ((unsigned int)*((unsigned char *)(& p->des01.etx) + 0UL) != 0U) 
    
#line 82 
    x->tx_vlan += 1UL; else ;
  
#line 85 
  return ret;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_tx_len(struct dma_desc *p)
{
  int __retres;
  
#line 90 
  __retres = (int)p->des01.etx.buffer1_size;
  
#line 90 
  return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_coe_rdes0(int ipc_err, int type, int payload_err)
{
  
#line 95 
  int ret = 0;
  
#line 96 
  u32 status = (unsigned int)(((type << 2) | (ipc_err << 1)) | payload_err) & 7U;
  
#line 109 
  if (status == 0U) 
#line 110 
                    ret = 4;
  else 
    
#line 111 
    if (status == 4U) 
#line 112 
                      ret = 0;
    else 
      
#line 113 
      if (status == 5U) 
#line 114 
                        ret = 2;
      else 
        
#line 115 
        if (status == 6U) 
#line 116 
                          ret = 2;
        else 
          
#line 117 
          if (status == 7U) 
#line 118 
                            ret = 2;
          else 
            
#line 119 
            if (status == 1U) 
#line 120 
                              ret = 1;
            else 
              
#line 121 
              if (status == 3U) 
#line 122 
                                ret = 1; else ;
  
#line 123 
  return ret;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_get_ext_status(void *data, struct stmmac_extra_stats *x, struct dma_extended_desc *p)
{
  
#line 129 
  if ((long)((unsigned int)*((unsigned char *)(& p->basic.des01.erx) + 0UL) != 0U) != 0L) {
    
#line 130 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 0UL) != 0U) 
      
#line 131 
      x->ip_hdr_err += 1UL; else ;
    
#line 132 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 0UL) != 0U) 
      
#line 133 
      x->ip_payload_err += 1UL; else ;
    
#line 134 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 0UL) != 0U) 
      
#line 135 
      x->ip_csum_bypassed += 1UL; else ;
    
#line 136 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 0UL) != 0U) 
      
#line 137 
      x->ipv4_pkt_rcvd += 1UL; else ;
    
#line 138 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 0UL) != 0U) 
      
#line 139 
      x->ipv6_pkt_rcvd += 1UL; else ;
    
#line 140 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 1U) 
      
#line 141 
      x->rx_msg_type_sync += 1UL;
    else 
      
#line 142 
      if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 2U) 
        
#line 143 
        x->rx_msg_type_follow_up += 1UL;
      else 
        
#line 144 
        if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 3U) 
          
#line 145 
          x->rx_msg_type_delay_req += 1UL;
        else 
          
#line 146 
          if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 4U) 
            
#line 147 
            x->rx_msg_type_delay_resp += 1UL;
          else 
            
#line 148 
            if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 5U) 
              
#line 149 
              x->rx_msg_type_pdelay_req += 1UL;
            else 
              
#line 150 
              if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 6U) 
                
#line 151 
                x->rx_msg_type_pdelay_resp += 1UL;
              else 
                
#line 152 
                if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) == 7U) 
                  
#line 153 
                  x->rx_msg_type_pdelay_follow_up += 1UL; else 
#line 155 
                                                               x->rx_msg_type_ext_no_ptp += 1UL;
    
#line 156 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) != 0U) 
      
#line 157 
      x->ptp_frame_type += 1UL; else ;
    
#line 158 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) != 0U) 
      
#line 159 
      x->ptp_ver += 1UL; else ;
    
#line 160 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 1UL) != 0U) 
      
#line 161 
      x->timestamp_dropped += 1UL; else ;
    
#line 162 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 2UL) != 0U) 
      
#line 163 
      x->av_pkt_rcvd += 1UL; else ;
    
#line 164 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 2UL) != 0U) 
      
#line 165 
      x->av_tagged_pkt_rcvd += 1UL; else ;
    
#line 166 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 2UL) != 0U) 
      
#line 167 
      x->vlan_tag_priority_val += 1UL; else ;
    
#line 168 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 3UL) != 0U) 
      
#line 169 
      x->l3_filter_match += 1UL; else ;
    
#line 170 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 3UL) != 0U) 
      
#line 171 
      x->l4_filter_match += 1UL; else ;
    
#line 172 
    if ((unsigned int)*((unsigned char *)(& p->des4.erx) + 3UL) != 0U) 
      
#line 173 
      x->l3_l4_filter_no_match += 1UL; else ;
  }
  else ;
  
#line 175 
  return;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_rx_status(void *data, struct stmmac_extra_stats *x, struct dma_desc *p)
{
  
#line 180 
  int ret = 0;
  
#line 181 
  struct net_device_stats *stats = (struct net_device_stats *)data;
  
#line 183 
  if ((long)((int)*((unsigned char *)(& p->des01.erx) + 1UL) < 0) != 0L) {
    
#line 184 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 1UL) != 0U) != 0L) {
      
#line 185 
      x->rx_desc += 1UL;
      
#line 186 
      stats->rx_length_errors += 1UL;
    }
    else ;
    
#line 188 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 1UL) != 0U) != 0L) 
      
#line 189 
      x->rx_gmac_overflow += 1UL; else ;
    
#line 191 
    if ((long)((int)*((unsigned char *)(& p->des01.erx) + 0UL) < 0) != 0L) 
      
#line 192 
      printk("\001"); else ;
    
#line 194 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 0UL) != 0U) != 0L) 
      
#line 195 
      stats->collisions += 1UL; else ;
    
#line 197 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 0UL) != 0U) != 0L) 
      
#line 198 
      x->rx_watchdog += 1UL; else ;
    
#line 200 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 0UL) != 0U) != 0L) 
      
#line 201 
      x->rx_mii += 1UL; else ;
    
#line 203 
    if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 0UL) != 0U) != 0L) {
      
#line 204 
      x->rx_crc += 1UL;
      
#line 205 
      stats->rx_crc_errors += 1UL;
    }
    else ;
    
#line 207 
    ret = 1;
  }
  else ;
  
#line 214 
  ret = enh_desc_coe_rdes0((int)p->des01.erx.ipc_csum_error,(int)p->des01.erx.frame_type,(int)p->des01.erx.rx_mac_addr);
  
#line 217 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 0UL) != 0U) != 0L) 
    
#line 218 
    x->dribbling_bit += 1UL; else ;
  
#line 220 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 1UL) != 0U) != 0L) {
    
#line 221 
    x->sa_rx_filter_fail += 1UL;
    
#line 222 
    ret = 1;
  }
  else ;
  
#line 224 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 3UL) != 0U) != 0L) {
    
#line 225 
    x->da_rx_filter_fail += 1UL;
    
#line 226 
    ret = 1;
  }
  else ;
  
#line 228 
  if ((long)((unsigned int)*((unsigned char *)(& p->des01.erx) + 1UL) != 0U) != 0L) {
    
#line 229 
    x->rx_length += 1UL;
    
#line 230 
    ret = 1;
  }
  else ;
  
#line 233 
  if ((unsigned int)*((unsigned char *)(& p->des01.erx) + 1UL) != 0U) 
    
#line 234 
    x->rx_vlan += 1UL; else ;
  
#line 237 
  return ret;
}


#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_init_rx_desc(struct dma_desc *p, int disable_rx_ic, int mode, int end)
{
  
#line 243 
  p->des01.all_flags = 0ULL;
  
#line 244 
  p->des01.erx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 245 
  p->des01.erx.buffer1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))))8191U;
  
#line 247 
  if (mode == 1) 
#line 248 
                 ehn_desc_rx_set_on_chain(p,end); else 
#line 250 
                                                       ehn_desc_rx_set_on_ring(p,end);
  
#line 252 
  if (disable_rx_ic != 0) 
#line 253 
                          p->des01.erx.disable_ic = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 254 
  return;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_init_tx_desc(struct dma_desc *p, int mode, int end)
{
  
#line 258 
  p->des01.all_flags = 0ULL;
  
#line 259 
  if (mode == 1) 
#line 260 
                 ehn_desc_tx_set_on_chain(p,end); else 
#line 262 
                                                       ehn_desc_tx_set_on_ring(p,end);
  
#line 263 
  return;
}


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_tx_owner(struct dma_desc *p)
{
  int __retres;
  
#line 267 
  __retres = (int)p->des01.etx.own;
  
#line 267 
  return __retres;
}


#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_rx_owner(struct dma_desc *p)
{
  int __retres;
  
#line 272 
  __retres = (int)p->des01.erx.own;
  
#line 272 
  return __retres;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_set_tx_owner(struct dma_desc *p)
{
  
#line 277 
  p->des01.etx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 278 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_set_rx_owner(struct dma_desc *p)
{
  
#line 282 
  p->des01.erx.own = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 283 
  return;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_tx_ls(struct dma_desc *p)
{
  int __retres;
  
#line 287 
  __retres = (int)p->des01.etx.last_segment;
  
#line 287 
  return __retres;
}


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_release_tx_desc(struct dma_desc *p, int mode)
{
  
#line 292 
  int ter = (int)p->des01.etx.end_ring;
  
#line 294 
  memset((void *)p,0,8UL);
  
#line 295 
  if (mode == 1) 
#line 296 
                 ehn_desc_tx_set_on_chain(p,ter); else 
#line 298 
                                                       enh_desc_end_tx_desc_on_ring(p,ter);
  
#line 299 
  return;
}


#line 301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_prepare_tx_desc(struct dma_desc *p, int is_fs, int len, int csum_flag, int mode)
{
  
#line 304 
  p->des01.etx.first_segment = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_fs;
  
#line 306 
  if (mode == 1) 
#line 307 
                 enh_set_tx_desc_len_on_chain(p,len); else 
#line 309 
                                                           enh_set_tx_desc_len_on_ring(p,len);
  
#line 311 
  if ((long)(csum_flag != 0) != 0L) 
#line 312 
                                    p->des01.etx.checksum_insertion = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U; else ;
  
#line 313 
  return;
}


#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_clear_tx_ic(struct dma_desc *p)
{
  
#line 317 
  p->des01.etx.interrupt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 318 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_close_tx_desc(struct dma_desc *p)
{
  
#line 322 
  p->des01.etx.last_segment = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 323 
  p->des01.etx.interrupt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 324 
  return;
}


#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_rx_frame_len(struct dma_desc *p, int rx_coe_type)
{
  int __retres;
  
#line 333 
  if (rx_coe_type == 1) {
    
#line 334 
    __retres = (int)p->des01.erx.frame_length + -2;
    
#line 334 
    goto return_label;
  }
  else {
    
#line 336 
    __retres = (int)p->des01.erx.frame_length;
    
#line 336 
    goto return_label;
  }
  return_label: 
#line 333 
                return __retres;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static void enh_desc_enable_tx_timestamp(struct dma_desc *p)
{
  
#line 341 
  p->des01.etx.time_stamp_enable = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 342 
  return;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_tx_timestamp_status(struct dma_desc *p)
{
  int __retres;
  
#line 346 
  __retres = (int)p->des01.etx.time_stamp_status;
  
#line 346 
  return __retres;
}


#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static u64 enh_desc_get_timestamp(void *desc, u32 ats)
{
  u64 ns;
  
#line 353 
  if (ats != 0U) {
    
#line 354 
    struct dma_extended_desc *p = (struct dma_extended_desc *)desc;
    
#line 355 
    ns = (unsigned long long)p->des6;
    
#line 357 
    ns = (unsigned long long)p->des7 * 1000000000ULL + ns;
  }
  else {
    
#line 359 
    struct dma_desc *p_0 = (struct dma_desc *)desc;
    
#line 360 
    ns = (unsigned long long)p_0->des2;
    
#line 361 
    ns = (unsigned long long)p_0->des3 * 1000000000ULL + ns;
  }
  
#line 364 
  return ns;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
static int enh_desc_get_rx_timestamp_status(void *desc, u32 ats)
{
  int __retres;
  
#line 369 
  if (ats != 0U) {
    
#line 370 
    struct dma_extended_desc *p = (struct dma_extended_desc *)desc;
    
#line 371 
    __retres = (int)p->basic.des01.erx.ipc_csum_error;
    
#line 371 
    goto return_label;
  }
  else {
    
#line 373 
    struct dma_desc *p_0 = (struct dma_desc *)desc;
    
#line 374 
    if (p_0->des2 == 4294967295U && p_0->des3 == 4294967295U) {
      
#line 376 
      __retres = 0;
      
#line 376 
      goto return_label;
    }
    else {
      
#line 378 
      __retres = 1;
      
#line 378 
      goto return_label;
    }
  }
  return_label: 
#line 369 
                return __retres;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/enh_desc.c"
struct stmmac_desc_ops const enh_desc_ops = {.init_rx_desc = & enh_desc_init_rx_desc, .init_tx_desc = & enh_desc_init_tx_desc, .prepare_tx_desc = & enh_desc_prepare_tx_desc, .set_tx_owner = & enh_desc_set_tx_owner, .get_tx_owner = & enh_desc_get_tx_owner, .close_tx_desc = & enh_desc_close_tx_desc, .release_tx_desc = & enh_desc_release_tx_desc, .clear_tx_ic = & enh_desc_clear_tx_ic, .get_tx_ls = & enh_desc_get_tx_ls, .tx_status = & enh_desc_get_tx_status, .get_tx_len = & enh_desc_get_tx_len, .get_rx_owner = & enh_desc_get_rx_owner, .set_rx_owner = & enh_desc_set_rx_owner, .get_rx_frame_len = & enh_desc_get_rx_frame_len, .rx_status = & enh_desc_get_rx_status, .rx_extended_status = & enh_desc_get_ext_status, .enable_tx_timestamp = & enh_desc_enable_tx_timestamp, .get_tx_timestamp_status = & enh_desc_get_tx_timestamp_status, .get_timestamp = & enh_desc_get_timestamp, .get_rx_timestamp_status = & enh_desc_get_rx_timestamp_status};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
static int stmmac_jumbo_frm_0(void *p, struct sk_buff *skb, int csum)
{
  int __retres;
  unsigned int bmax;
  unsigned int len;
  dma_addr_t tmp_0;
  int tmp_1;
  
#line 33 
  struct stmmac_priv *priv = (struct stmmac_priv *)p;
  
#line 34 
  unsigned int txsize = priv->dma_tx_size;
  
#line 35 
  unsigned int entry = priv->cur_tx % txsize;
  
#line 36 
  struct dma_desc *desc = priv->dma_tx + entry;
  
#line 37 
  unsigned int nopaged_len = skb_headlen((struct sk_buff const *)skb);
  
#line 39 
  unsigned int i = 1U;
  
#line 41 
  if ((priv->plat)->enh_desc != 0) 
#line 42 
                                   bmax = 8192U; else 
#line 44 
                                                      bmax = 2048U;
  
#line 46 
  len = nopaged_len - bmax;
  
#line 48 
  tmp_0 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)bmax,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 48 
  desc->des2 = (unsigned int)tmp_0;
  
#line 50 
  tmp_1 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
  
#line 50 
  if (tmp_1 != 0) {
    
#line 51 
    __retres = -1;
    
#line 51 
    goto return_label;
  }
  else ;
  
#line 52 
  (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
  
#line 53 
  (*(((priv->hw)->desc)->prepare_tx_desc))(desc,1,(int)bmax,csum,1);
  
#line 55 
  goto ldv_47893;
  ldv_47892: 
#line 56 
  ;
  
#line 56 
  *(priv->tx_skbuff + entry) = (struct sk_buff *)0;
  
#line 57 
  priv->cur_tx += 1U;
  
#line 57 
  entry = priv->cur_tx % txsize;
  
#line 58 
  desc = priv->dma_tx + entry;
  
#line 60 
  if (len > bmax) {
    dma_addr_t tmp_2;
    int tmp_3;
    
#line 61 
    tmp_2 = dma_map_single_attrs(priv->device,(void *)(skb->data + bmax * i),(unsigned long)bmax,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 61 
    desc->des2 = (unsigned int)tmp_2;
    
#line 64 
    tmp_3 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 64 
    if (tmp_3 != 0) {
      
#line 65 
      __retres = -1;
      
#line 65 
      goto return_label;
    }
    else ;
    
#line 66 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 67 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,0,(int)bmax,csum,1);
    
#line 69 
    (*(((priv->hw)->desc)->set_tx_owner))(desc);
    
#line 70 
    len -= bmax;
    
#line 71 
    i += 1U;
  }
  else {
    dma_addr_t tmp_4;
    int tmp_5;
    
#line 73 
    tmp_4 = dma_map_single_attrs(priv->device,(void *)(skb->data + bmax * i),(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 73 
    desc->des2 = (unsigned int)tmp_4;
    
#line 76 
    tmp_5 = dma_mapping_error(priv->device,(unsigned long long)desc->des2);
    
#line 76 
    if (tmp_5 != 0) {
      
#line 77 
      __retres = -1;
      
#line 77 
      goto return_label;
    }
    else ;
    
#line 78 
    (priv->tx_skbuff_dma + entry)->buf = (unsigned long long)desc->des2;
    
#line 79 
    (*(((priv->hw)->desc)->prepare_tx_desc))(desc,0,(int)len,csum,1);
    
#line 81 
    (*(((priv->hw)->desc)->set_tx_owner))(desc);
    
#line 82 
    len = 0U;
  }
  ldv_47893: 
#line 84 
  ;
  
#line 55 
  if (len != 0U) 
#line 57 
                 goto ldv_47892; else 
#line 60 
                                      goto ldv_47894;
  ldv_47894: 
#line 61 
  ;
  
#line 85 
  __retres = (int)entry;
  return_label: 
#line 85 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
static unsigned int stmmac_is_jumbo_frm_0(int len, int enh_desc)
{
  
#line 90 
  unsigned int ret = 0U;
  
#line 92 
  if ((enh_desc != 0 && len > 8192) || (enh_desc == 0 && len > 2048)) 
    
#line 94 
    ret = 1U; else ;
  
#line 97 
  return ret;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
static void stmmac_init_dma_chain(void *des, dma_addr_t phy_addr, unsigned int size, unsigned int extend_desc)
{
  int i;
  
#line 108 
  dma_addr_t dma_phy = phy_addr;
  
#line 110 
  if (extend_desc != 0U) {
    
#line 111 
    struct dma_extended_desc *p = (struct dma_extended_desc *)des;
    
#line 112 
    i = 0;
    
#line 112 
    goto ldv_47910;
    ldv_47909: 
#line 113 
    ;
    
#line 113 
    dma_phy += 32ULL;
    
#line 114 
    p->basic.des3 = (unsigned int)dma_phy;
    
#line 115 
    p += 1;
    
#line 112 
    i += 1;
    ldv_47910: 
#line 113 
    ;
    
#line 112 
    if (size + 4294967295U > (unsigned int)i) 
#line 114 
                                              goto ldv_47909; else 
#line 117 
                                                                   goto ldv_47911;
    ldv_47911: 
#line 118 
    ;
    
#line 117 
    p->basic.des3 = (unsigned int)phy_addr;
  }
  else {
    
#line 120 
    struct dma_desc *p_0 = (struct dma_desc *)des;
    
#line 121 
    i = 0;
    
#line 121 
    goto ldv_47914;
    ldv_47913: 
#line 122 
    ;
    
#line 122 
    dma_phy += 16ULL;
    
#line 123 
    p_0->des3 = (unsigned int)dma_phy;
    
#line 124 
    p_0 += 1;
    
#line 121 
    i += 1;
    ldv_47914: 
#line 122 
    ;
    
#line 121 
    if (size + 4294967295U > (unsigned int)i) 
#line 123 
                                              goto ldv_47913; else 
#line 126 
                                                                   goto ldv_47915;
    ldv_47915: 
#line 127 
    ;
    
#line 126 
    p_0->des3 = (unsigned int)phy_addr;
  }
  
#line 128 
  return;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
static void stmmac_refill_desc3_0(void *priv_ptr, struct dma_desc *p)
{
  
#line 132 
  struct stmmac_priv *priv = (struct stmmac_priv *)priv_ptr;
  
#line 134 
  if (priv->hwts_rx_en != 0 && priv->extend_desc == 0) 
#line 139 
                                                       p->des3 = (unsigned int)priv->dma_rx_phy + ((priv->dirty_rx + 1U) % priv->dma_rx_size) * 16U; else ;
  
#line 142 
  return;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
static void stmmac_clean_desc3_0(void *priv_ptr, struct dma_desc *p)
{
  int tmp;
  
#line 147 
  struct stmmac_priv *priv = (struct stmmac_priv *)priv_ptr;
  
#line 149 
  tmp = (*(((priv->hw)->desc)->get_tx_ls))(p);
  
#line 149 
  if (tmp != 0) {
    
#line 149 
    if (priv->extend_desc == 0) 
#line 154 
                                p->des3 = (unsigned int)priv->dma_tx_phy + ((priv->dirty_tx + 1U) % priv->dma_tx_size) * 16U; else ;
  }
  else ;
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/chain_mode.c"
struct stmmac_mode_ops const chain_mode_ops = {.init = & stmmac_init_dma_chain, .is_jumbo_frm = & stmmac_is_jumbo_frm_0, .jumbo_frm = & stmmac_jumbo_frm_0, .set_16kib_bfsize = (int (*)(int ))0, .init_desc3 = (void (*)(struct dma_desc *))0, .refill_desc3 = & stmmac_refill_desc3_0, .clean_desc3 = & stmmac_clean_desc3_0};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_72(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_74(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_76(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_78(spinlock_t *lock);


#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 373 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 374 
  return;
}


#line 415 
static void ldv_spin_unlock_73(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_75(spinlock_t *lock);


#line 445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 447 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 448 
  return;
}


#line 461 
static void ldv_spin_unlock_irq_77(spinlock_t *lock);


#line 465 
static void ldv_spin_unlock_irq_79(spinlock_t *lock);


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_can_wakeup(struct device *dev)
{
  bool __retres;
  
#line 83 
  __retres = (_Bool)((int)dev->power.can_wakeup != 0);
  
#line 83 
  return __retres;
}


#line 104 
int device_set_wakeup_enable(struct device *, bool);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 86 
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);


#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
int irq_set_irq_wake(unsigned int, unsigned int);


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static int enable_irq_wake(unsigned int irq)
{
  int tmp;
  
#line 356 
  tmp = irq_set_irq_wake(irq,1U);
  
#line 356 
  return tmp;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static int disable_irq_wake(unsigned int irq)
{
  int tmp;
  
#line 361 
  tmp = irq_set_irq_wake(irq,0U);
  
#line 361 
  return tmp;
}


#line 749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
int phy_start_aneg(struct phy_device *);


#line 777 
int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);


#line 778 
int phy_ethtool_gset(struct phy_device *, struct ethtool_cmd *);


#line 792 
int phy_get_eee_err(struct phy_device *);


#line 793 
int phy_ethtool_set_eee(struct phy_device *, struct ethtool_eee *);


#line 794 
int phy_ethtool_get_eee(struct phy_device *, struct ethtool_eee *);


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ptp_clock_kernel.h"
int ptp_clock_index(struct ptp_clock *);


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static struct stmmac_stats const stmmac_gstrings_stats[80U] = {{.stat_string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 960}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 968}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'o', (char)'s', (char)'s', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 976}, {.stat_string = {(char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'t', (char)'a', (char)'g', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 984}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 992}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1000}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1008}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'f', (char)'l', (char)'u', (char)'s', (char)'h', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1016}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'y', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1024}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'i', (char)'p', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1032}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'e', (char)'s', (char)'c', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1040}, {.stat_string = {(char)'s', (char)'a', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1048}, {.stat_string = {(char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1056}, {.stat_string = {(char)'i', (char)'p', (char)'c', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1064}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1072}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1080}, {.stat_string = {(char)'d', (char)'r', (char)'i', (char)'b', (char)'b', (char)'l', (char)'i', (char)'n', (char)'g', (char)'_', (char)'b', (char)'i', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1088}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1096}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'i', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1104}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1112}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'g', (char)'m', (char)'a', (char)'c', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1120}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1128}, {.stat_string = {(char)'d', (char)'a', (char)'_', (char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1136}, {.stat_string = {(char)'s', (char)'a', (char)'_', (char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1144}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d', (char)'_', (char)'c', (char)'n', (char)'t', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1152}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'n', (char)'t', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1160}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1168}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1176}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1184}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1192}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1200}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'u', (char)'f', (char)'_', (char)'u', (char)'n', (char)'a', (char)'v', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1208}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1216}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1224}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'a', (char)'r', (char)'l', (char)'y', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1232}, {.stat_string = {(char)'f', (char)'a', (char)'t', (char)'a', (char)'l', (char)'_', (char)'b', (char)'u', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1240}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'a', (char)'r', (char)'l', (char)'y', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1248}, {.stat_string = {(char)'t', (char)'h', (char)'r', (char)'e', (char)'s', (char)'h', (char)'o', (char)'l', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1256}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1264}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1272}, {.stat_string = {(char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1280}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1288}, {.stat_string = {(char)'n', (char)'a', (char)'p', (char)'i', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1296}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1304}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'l', (char)'e', (char)'a', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1312}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'_', (char)'i', (char)'c', (char)'_', (char)'b', (char)'i', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1320}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'r', (char)'e', (char)'c', (char)'e', (char)'i', (char)'v', (char)'e', (char)'_', (char)'p', (char)'m', (char)'t', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1328}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1336}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1344}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1352}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'t', (char)'h', (char)'_', (char)'i', (char)'n', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1360}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'t', (char)'h', (char)'_', (char)'e', (char)'x', (char)'i', (char)'t', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1368}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'t', (char)'h', (char)'_', (char)'i', (char)'n', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1376}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'t', (char)'h', (char)'_', (char)'e', (char)'x', (char)'i', (char)'t', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1384}, {.stat_string = {(char)'p', (char)'h', (char)'y', (char)'_', (char)'e', (char)'e', (char)'e', (char)'_', (char)'w', (char)'a', (char)'k', (char)'e', (char)'u', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1392}, {.stat_string = {(char)'i', (char)'p', (char)'_', (char)'h', (char)'d', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1400}, {.stat_string = {(char)'i', (char)'p', (char)'_', (char)'p', (char)'a', (char)'y', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1408}, {.stat_string = {(char)'i', (char)'p', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'b', (char)'y', (char)'p', (char)'a', (char)'s', (char)'s', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1416}, {.stat_string = {(char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'r', (char)'c', (char)'v', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1424}, {.stat_string = {(char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'r', (char)'c', (char)'v', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1432}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'e', (char)'x', (char)'t', (char)'_', (char)'n', (char)'o', (char)'_', (char)'p', (char)'t', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1440}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'s', (char)'y', (char)'n', (char)'c', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1448}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'f', (char)'o', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'u', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1456}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1464}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'s', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1472}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1480}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'s', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1488}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'f', (char)'o', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'u', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1496}, {.stat_string = {(char)'p', (char)'t', (char)'p', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1504}, {.stat_string = {(char)'p', (char)'t', (char)'p', (char)'_', (char)'v', (char)'e', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1512}, {.stat_string = {(char)'t', (char)'i', (char)'m', (char)'e', (char)'s', (char)'t', (char)'a', (char)'m', (char)'p', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1520}, {.stat_string = {(char)'a', (char)'v', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'r', (char)'c', (char)'v', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1528}, {.stat_string = {(char)'a', (char)'v', (char)'_', (char)'t', (char)'a', (char)'g', (char)'g', (char)'e', (char)'d', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'r', (char)'c', (char)'v', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1536}, {.stat_string = {(char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'t', (char)'a', (char)'g', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'v', (char)'a', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1544}, {.stat_string = {(char)'l', (char)'3', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1552}, {.stat_string = {(char)'l', (char)'4', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1560}, {.stat_string = {(char)'l', (char)'3', (char)'_', (char)'l', (char)'4', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'n', (char)'o', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1568}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'c', (char)'s', (char)'_', (char)'a', (char)'n', (char)'e', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1576}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'p', (char)'c', (char)'s', (char)'_', (char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1584}, {.stat_string = {(char)'i', (char)'r', (char)'q', (char)'_', (char)'r', (char)'g', (char)'m', (char)'i', (char)'i', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1592}};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static struct stmmac_stats const stmmac_mmc[79U] = {{.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1756}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1760}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1764}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1768}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1772}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1776}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1780}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1784}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1788}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1792}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1796}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1800}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1804}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1808}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'c', (char)'o', (char)'l', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1812}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'o', (char)'l', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1816}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1820}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'l', (char)'a', (char)'t', (char)'e', (char)'c', (char)'o', (char)'l', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1824}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'e', (char)'s', (char)'s', (char)'c', (char)'o', (char)'l', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1828}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1832}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1836}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1840}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'c', (char)'e', (char)'s', (char)'s', (char)'d', (char)'e', (char)'f', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1844}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1848}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'t', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1852}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1856}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1860}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1864}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1868}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1872}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1876}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1880}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'r', (char)'u', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1884}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1888}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1892}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1896}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1900}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1904}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1908}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1912}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1916}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1920}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1924}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1928}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'a', (char)'u', (char)'t', (char)'o', (char)'f', (char)'r', (char)'a', (char)'n', (char)'g', (char)'e', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1932}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1936}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1940}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'g', (char)'b', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1944}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1948}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'c', (char)'_', (char)'i', (char)'n', (char)'t', (char)'r', (char)'_', (char)'m', (char)'a', (char)'s', (char)'k', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1952}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'c', (char)'_', (char)'i', (char)'n', (char)'t', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1956}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'g', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1960}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'h', (char)'d', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1964}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'n', (char)'o', (char)'p', (char)'a', (char)'y', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1968}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'f', (char)'r', (char)'a', (char)'g', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1972}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'u', (char)'d', (char)'s', (char)'b', (char)'l', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1976}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'g', (char)'d', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1980}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'h', (char)'d', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1984}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'n', (char)'o', (char)'p', (char)'a', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1988}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'f', (char)'r', (char)'a', (char)'g', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1992}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'4', (char)'_', (char)'u', (char)'d', (char)'s', (char)'b', (char)'l', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1996}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'g', (char)'d', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2000}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'h', (char)'d', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2004}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'n', (char)'o', (char)'p', (char)'a', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2008}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'g', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2012}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'h', (char)'d', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2016}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'v', (char)'6', (char)'_', (char)'n', (char)'o', (char)'p', (char)'a', (char)'y', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2020}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'g', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2024}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2028}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'g', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2032}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2036}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'g', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2040}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2044}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'g', (char)'d', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2048}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2052}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'g', (char)'d', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2056}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2060}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'g', (char)'d', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2064}, {.stat_string = {(char)'m', (char)'m', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 2068}};

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_ethtool_getdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  
#line 233 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 235 
  if ((priv->plat)->has_gmac != 0) 
#line 236 
                                   strlcpy((char *)(& info->driver),"st_gmac",32UL); else 
                                                                    
#line 238 
                                                                    strlcpy((char *)(& info->driver),"st_mac100",32UL);
  
#line 241 
  strlcpy((char *)(& info->version),"March_2013",32UL);
  
#line 242 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_ethtool_getsettings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int rc;
  int tmp_1;
  bool tmp_0;
  
#line 247 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 248 
  struct phy_device *phy = priv->phydev;
  
#line 251 
  if ((priv->pcs & 1) != 0 || (priv->pcs & 2) != 0) {
    struct rgmii_adv adv;
    
#line 254 
    if (priv->xstats.pcs_link == 0UL) {
      
#line 255 
      ethtool_cmd_speed_set(cmd,4294967295U);
      
#line 256 
      cmd->duplex = (unsigned char)255U;
      
#line 257 
      __retres = 0;
      
#line 257 
      goto return_label;
    }
    else ;
    
#line 259 
    cmd->duplex = (unsigned char)priv->xstats.pcs_duplex;
    
#line 261 
    ethtool_cmd_speed_set(cmd,(unsigned int)priv->xstats.pcs_speed);
    
#line 264 
    if (((priv->hw)->mac)->get_adv == (void (*)(struct mac_device_info *, struct rgmii_adv *))0) {
      
#line 265 
      __retres = -95;
      
#line 265 
      goto return_label;
    }
    else ;
    
#line 267 
    (*(((priv->hw)->mac)->get_adv))(priv->hw,& adv);
    
#line 271 
    if ((adv.pause & 1U) != 0U) 
#line 272 
                                cmd->advertising |= 8192U; else ;
    
#line 273 
    if ((adv.pause & 2U) != 0U) 
#line 274 
                                cmd->advertising |= 16384U; else ;
    
#line 275 
    if ((adv.lp_pause & 1U) != 0U) 
#line 276 
                                   cmd->lp_advertising |= 8192U; else ;
    
#line 277 
    if ((adv.lp_pause & 2U) != 0U) 
#line 278 
                                   cmd->lp_advertising |= 16384U; else ;
    
#line 281 
    cmd->autoneg = (unsigned char)64U;
    
#line 282 
    cmd->supported |= 64U;
    
#line 283 
    cmd->advertising |= 64U;
    
#line 284 
    cmd->lp_advertising |= 64U;
    
#line 286 
    if (adv.duplex != 0U) {
      
#line 287 
      cmd->supported |= 42U;
      
#line 290 
      cmd->advertising |= 42U;
    }
    else {
      
#line 294 
      cmd->supported |= 21U;
      
#line 297 
      cmd->advertising |= 21U;
    }
    
#line 301 
    if (adv.lp_duplex != 0U) 
#line 302 
                             cmd->lp_advertising |= 42U; else 
#line 306 
                                                              cmd->lp_advertising |= 21U;
    
#line 309 
    cmd->port = (unsigned char)255U;
    
#line 311 
    __retres = 0;
    
#line 311 
    goto return_label;
  }
  else ;
  
#line 314 
  if (phy == (struct phy_device *)0) {
    
#line 315 
    printk("\001","stmmac_ethtool_getsettings",(char *)(& dev->name));
    
#line 317 
    __retres = -19;
    
#line 317 
    goto return_label;
  }
  else ;
  
#line 319 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 319 
  if (tmp_0) 
#line 319 
             tmp_1 = 0; else 
#line 319 
                             tmp_1 = 1;
  
#line 319 
  if (tmp_1) {
    
#line 320 
    printk("\001",(char *)(& dev->name));
    
#line 322 
    __retres = -16;
    
#line 322 
    goto return_label;
  }
  else ;
  
#line 324 
  cmd->transceiver = (unsigned char)0U;
  
#line 325 
  rc = phy_ethtool_gset(phy,cmd);
  
#line 326 
  __retres = rc;
  return_label: 
#line 326 
                return __retres;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_ethtool_setsettings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int rc;
  
#line 332 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 333 
  struct phy_device *phy = priv->phydev;
  
#line 336 
  if ((priv->pcs & 1) != 0 || (priv->pcs & 2) != 0) {
    
#line 337 
    u32 mask = 8256U;
    
#line 340 
    if ((unsigned int)cmd->autoneg != 1U) {
      
#line 341 
      __retres = -22;
      
#line 341 
      goto return_label;
    }
    else ;
    
#line 343 
    mask &= 63U;
    
#line 350 
    ldv_spin_lock_72(& priv->lock);
    
#line 351 
    if (((priv->hw)->mac)->ctrl_ane != (void (*)(struct mac_device_info *, bool ))0) 
      
#line 352 
      (*(((priv->hw)->mac)->ctrl_ane))(priv->hw,(_Bool)1); else ;
    
#line 353 
    ldv_spin_unlock_73(& priv->lock);
    
#line 355 
    __retres = 0;
    
#line 355 
    goto return_label;
  }
  else ;
  
#line 358 
  ldv_spin_lock_74(& priv->lock);
  
#line 359 
  rc = phy_ethtool_sset(phy,cmd);
  
#line 360 
  ldv_spin_unlock_75(& priv->lock);
  
#line 362 
  __retres = rc;
  return_label: 
#line 362 
                return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static u32 stmmac_ethtool_getmsglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 367 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 368 
  __retres = priv->msg_enable;
  
#line 368 
  return __retres;
}


#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_ethtool_setmsglevel(struct net_device *dev, u32 level)
{
  
#line 373 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 374 
  priv->msg_enable = level;
  
#line 375 
  return;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_check_if_running(struct net_device *dev)
{
  int __retres;
  int tmp_0;
  bool tmp;
  
#line 380 
  tmp = netif_running((struct net_device const *)dev);
  
#line 380 
  if (tmp) 
#line 380 
           tmp_0 = 0; else 
#line 380 
                           tmp_0 = 1;
  
#line 380 
  if (tmp_0) {
    
#line 381 
    __retres = -16;
    
#line 381 
    goto return_label;
  }
  else ;
  
#line 382 
  __retres = 0;
  return_label: 
#line 382 
                return __retres;
}


#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_ethtool_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 387 
  __retres = 4180;
  
#line 387 
  return __retres;
}


#line 390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_ethtool_gregs(struct net_device *dev, struct ethtool_regs *regs, void *space)
{
  int i;
  
#line 394 
  u32 *reg_space = (u32 *)space;
  
#line 396 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 398 
  memset((void *)reg_space,0,4180UL);
  
#line 400 
  if ((priv->plat)->has_gmac == 0) {
    
#line 402 
    i = 0;
    
#line 402 
    goto ldv_48027;
    ldv_48026: 
#line 403 
    ;
    
#line 403 
    *(reg_space + i) = readl((void const volatile *)(priv->ioaddr + i * 4));
    
#line 402 
    i += 1;
    ldv_48027: 
#line 403 
    ;
    
#line 402 
    if (i <= 11) 
#line 404 
                 goto ldv_48026; else 
#line 407 
                                      goto ldv_48028;
    ldv_48028: 
#line 408 
    ;
    
#line 405 
    i = 0;
    
#line 405 
    goto ldv_48030;
    ldv_48029: 
#line 406 
    ;
    
#line 406 
    *(reg_space + ((unsigned int)i + 12U)) = readl((void const volatile *)(priv->ioaddr + (i + 1024) * 4));
    
#line 405 
    i += 1;
    ldv_48030: 
#line 406 
    ;
    
#line 405 
    if (i <= 8) 
#line 407 
                goto ldv_48029; else 
#line 410 
                                     goto ldv_48031;
    ldv_48031: 
#line 411 
    ;
    
#line 408 
    *(reg_space + 22U) = readl((void const volatile *)(priv->ioaddr + 4176U));
    
#line 409 
    *(reg_space + 23U) = readl((void const volatile *)(priv->ioaddr + 4180U));
  }
  else {
    
#line 412 
    i = 0;
    
#line 412 
    goto ldv_48033;
    ldv_48032: 
#line 413 
    ;
    
#line 413 
    *(reg_space + i) = readl((void const volatile *)(priv->ioaddr + i * 4));
    
#line 412 
    i += 1;
    ldv_48033: 
#line 413 
    ;
    
#line 412 
    if (i <= 54) 
#line 414 
                 goto ldv_48032; else 
#line 417 
                                      goto ldv_48034;
    ldv_48034: 
#line 418 
    ;
    
#line 415 
    i = 0;
    
#line 415 
    goto ldv_48036;
    ldv_48035: 
#line 416 
    ;
    
#line 416 
    *(reg_space + ((unsigned int)i + 55U)) = readl((void const volatile *)(priv->ioaddr + (i + 1024) * 4));
    
#line 415 
    i += 1;
    ldv_48036: 
#line 416 
    ;
    
#line 415 
    if (i <= 21) 
#line 417 
                 goto ldv_48035; else 
#line 420 
                                      goto ldv_48037;
    ldv_48037: 
#line 421 
    ;
  }
  
#line 423 
  return;
}


#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause_0)
{
  
#line 425 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 427 
  if (priv->pcs != 0) 
#line 428 
                      goto return_label; else ;
  
#line 430 
  pause_0->rx_pause = 0U;
  
#line 431 
  pause_0->tx_pause = 0U;
  
#line 432 
  pause_0->autoneg = (unsigned int)(priv->phydev)->autoneg;
  
#line 434 
  if ((priv->flow_ctrl & 1U) != 0U) 
#line 435 
                                    pause_0->rx_pause = 1U; else ;
  
#line 436 
  if ((priv->flow_ctrl & 2U) != 0U) 
#line 437 
                                    pause_0->tx_pause = 1U; else ;
  return_label: 
#line 438 
                return;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause_0)
{
  int __retres;
  
#line 445 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 446 
  struct phy_device *phy = priv->phydev;
  
#line 447 
  int new_pause = 0;
  
#line 448 
  int ret = 0;
  
#line 450 
  if (priv->pcs != 0) {
    
#line 451 
    __retres = -95;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 453 
  if (pause_0->rx_pause != 0U) 
#line 454 
                               new_pause |= 1; else ;
  
#line 455 
  if (pause_0->tx_pause != 0U) 
#line 456 
                               new_pause |= 2; else ;
  
#line 458 
  priv->flow_ctrl = (unsigned int)new_pause;
  
#line 459 
  phy->autoneg = (int)pause_0->autoneg;
  
#line 461 
  if (phy->autoneg != 0) {
    bool tmp_0;
    
#line 462 
    tmp_0 = netif_running((struct net_device const *)netdev);
    
#line 462 
    if ((int)tmp_0 != 0) 
#line 463 
                         ret = phy_start_aneg(phy); else ;
  }
  else 
#line 465 
       (*(((priv->hw)->mac)->flow_ctrl))(priv->hw,(unsigned int)phy->duplex,priv->flow_ctrl,priv->pause);
  
#line 467 
  __retres = ret;
  return_label: 
#line 467 
                return __retres;
}


#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *dummy, u64 *data)
{
  int i;
  
#line 473 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 474 
  int j = 0;
  
#line 477 
  if ((priv->plat)->has_gmac == 0) 
#line 478 
                                   (*(((priv->hw)->dma)->dma_diagnostic_fr))((void *)(& dev->stats),& priv->xstats,priv->ioaddr);
  else {
    
#line 483 
    if (priv->dma_cap.rmon != 0U) {
      
#line 484 
      dwmac_mmc_read(priv->ioaddr,& priv->mmc);
      
#line 486 
      i = 0;
      
#line 486 
      goto ldv_48064;
      ldv_48063: 
#line 487 
      ;
      {
        char *p;
        int tmp_0;
        
#line 488 
        p = (char *)priv + stmmac_mmc[i].stat_offset;
        
#line 490 
        tmp_0 = j;
        
#line 490 
        j += 1;
        
#line 490 
        if (stmmac_mmc[i].sizeof_stat == 8) 
#line 490 
                                            *(data + tmp_0) = *((u64 *)p); else 
                                                                    
#line 490 
                                                                    *(data + tmp_0) = (unsigned long long)*((u32 *)p);
      }
      
#line 486 
      i += 1;
      ldv_48064: 
#line 487 
      ;
      
#line 486 
      if ((unsigned int)i <= 78U) 
#line 488 
                                  goto ldv_48063; else 
#line 491 
                                                       goto ldv_48065;
      ldv_48065: 
#line 492 
      ;
    }
    else ;
    
#line 495 
    if (priv->eee_enabled != 0) {
      
#line 496 
      int val = phy_get_eee_err(priv->phydev);
      
#line 497 
      if (val != 0) 
#line 498 
                    priv->xstats.phy_eee_wakeup_error_n = (unsigned long)val; else ;
    }
    else ;
  }
  
#line 501 
  i = 0;
  
#line 501 
  goto ldv_48072;
  ldv_48071: 
#line 502 
  ;
  {
    int tmp_2;
    
#line 502 
    char *p_0 = (char *)priv + stmmac_gstrings_stats[i].stat_offset;
    
#line 503 
    tmp_2 = j;
    
#line 503 
    j += 1;
    
#line 503 
    if (stmmac_gstrings_stats[i].sizeof_stat == 8) 
#line 503 
                                                   *(data + tmp_2) = *((u64 *)p_0); else 
                                                                    
#line 503 
                                                                    *(data + tmp_2) = (unsigned long long)*((u32 *)p_0);
  }
  
#line 501 
  i += 1;
  ldv_48072: 
#line 502 
  ;
  
#line 501 
  if ((unsigned int)i <= 79U) 
#line 503 
                              goto ldv_48071; else 
#line 506 
                                                   goto ldv_48073;
  ldv_48073: 
#line 507 
  ;
  
#line 508 
  return;
}


#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  int len;
  
#line 510 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)netdev);
  
#line 513 
  switch (sset) {
    case 1: 
#line 514 
    ;
    
#line 515 
    len = 80;
    
#line 517 
    if (priv->dma_cap.rmon != 0U) 
#line 518 
                                  len = (int)((unsigned int)len + 79U); else ;
    
#line 520 
    __retres = len;
    
#line 520 
    goto return_label;
    default: 
#line 521 
    ;
    
#line 522 
    __retres = -95;
    
#line 522 
    goto return_label;
  }
  return_label: 
#line 513 
                return __retres;
}


#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  int i;
  
#line 529 
  u8 *p = data;
  
#line 530 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 532 
  switch (stringset) {
    case (u32)1: 
#line 533 
    ;
    
#line 534 
    if (priv->dma_cap.rmon != 0U) {
      
#line 535 
      i = 0;
      
#line 535 
      goto ldv_48101;
      ldv_48100: 
#line 536 
      ;
      
#line 536 
      memcpy((void *)p,(void const *)(& stmmac_mmc[i].stat_string),32UL);
      
#line 538 
      p += 32U;
      
#line 535 
      i += 1;
      ldv_48101: 
#line 536 
      ;
      
#line 535 
      if ((unsigned int)i <= 78U) 
#line 537 
                                  goto ldv_48100; else 
#line 540 
                                                       goto ldv_48102;
      ldv_48102: 
#line 541 
      ;
    }
    else ;
    
#line 540 
    i = 0;
    
#line 540 
    goto ldv_48107;
    ldv_48106: 
#line 541 
    ;
    
#line 541 
    memcpy((void *)p,(void const *)(& stmmac_gstrings_stats[i].stat_string),32UL);
    
#line 543 
    p += 32U;
    
#line 540 
    i += 1;
    ldv_48107: 
#line 541 
    ;
    
#line 540 
    if ((unsigned int)i <= 79U) 
#line 542 
                                goto ldv_48106; else 
#line 545 
                                                     goto ldv_48108;
    ldv_48108: 
#line 546 
    ;
    
#line 545 
    goto ldv_48109;
    default: 
#line 546 
    ;
    {
      
#line 547 
      int __ret_warn_on = 1;
      
#line 547 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 547 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c",547); else ;
      
#line 547 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 548 
    goto ldv_48109;
  }
  ldv_48109: 
#line 550 
  ;
  
#line 551 
  return;
}


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static void stmmac_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  bool tmp_0;
  
#line 555 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 557 
  ldv_spin_lock_irq_76(& priv->lock);
  
#line 558 
  tmp_0 = device_can_wakeup(priv->device);
  
#line 558 
  if ((int)tmp_0 != 0) {
    
#line 559 
    wol->supported = 34U;
    
#line 560 
    wol->wolopts = (unsigned int)priv->wolopts;
  }
  else ;
  
#line 562 
  ldv_spin_unlock_irq_77(& priv->lock);
  
#line 563 
  return;
}


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 567 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 568 
  u32 support = 34U;
  
#line 573 
  if (priv->hw_cap_support != 0 && priv->dma_cap.pmt_magic_frame == 0U) 
    
#line 574 
    wol->wolopts &= 4294967263U; else ;
  
#line 576 
  tmp_0 = device_can_wakeup(priv->device);
  
#line 576 
  if (tmp_0) 
#line 576 
             tmp_1 = 0; else 
#line 576 
                             tmp_1 = 1;
  
#line 576 
  if (tmp_1) {
    
#line 577 
    __retres = -22;
    
#line 577 
    goto return_label;
  }
  else ;
  
#line 579 
  if ((wol->wolopts & ~ support) != 0U) {
    
#line 580 
    __retres = -22;
    
#line 580 
    goto return_label;
  }
  else ;
  
#line 582 
  if (wol->wolopts != 0U) {
    
#line 583 
    printk("\001");
    
#line 584 
    device_set_wakeup_enable(priv->device,(_Bool)1);
    
#line 585 
    enable_irq_wake((unsigned int)priv->wol_irq);
  }
  else {
    
#line 587 
    device_set_wakeup_enable(priv->device,(_Bool)0);
    
#line 588 
    disable_irq_wake((unsigned int)priv->wol_irq);
  }
  
#line 591 
  ldv_spin_lock_irq_78(& priv->lock);
  
#line 592 
  priv->wolopts = (int)wol->wolopts;
  
#line 593 
  ldv_spin_unlock_irq_79(& priv->lock);
  
#line 595 
  __retres = 0;
  return_label: 
#line 595 
                return __retres;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_ethtool_op_get_eee(struct net_device *dev, struct ethtool_eee *edata)
{
  int __retres;
  int tmp_0;
  
#line 601 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 603 
  if (priv->dma_cap.eee == 0U) {
    
#line 604 
    __retres = -95;
    
#line 604 
    goto return_label;
  }
  else ;
  
#line 606 
  edata->eee_enabled = (unsigned int)priv->eee_enabled;
  
#line 607 
  edata->eee_active = (unsigned int)priv->eee_active;
  
#line 608 
  edata->tx_lpi_timer = (unsigned int)priv->tx_lpi_timer;
  
#line 610 
  tmp_0 = phy_ethtool_get_eee(priv->phydev,edata);
  
#line 610 
  __retres = tmp_0;
  return_label: 
#line 610 
                return __retres;
}


#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_ethtool_op_set_eee(struct net_device *dev, struct ethtool_eee *edata)
{
  int __retres;
  int tmp_1;
  
#line 616 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 618 
  priv->eee_enabled = (int)edata->eee_enabled;
  
#line 620 
  if (priv->eee_enabled == 0) 
#line 621 
                              stmmac_disable_eee_mode(priv);
  else {
    bool tmp_0;
    
#line 627 
    tmp_0 = stmmac_eee_init(priv);
    
#line 627 
    priv->eee_enabled = (int)tmp_0;
    
#line 628 
    if (priv->eee_enabled == 0) {
      
#line 629 
      __retres = -95;
      
#line 629 
      goto return_label;
    }
    else ;
    
#line 632 
    priv->tx_lpi_timer = (int)edata->tx_lpi_timer;
  }
  
#line 635 
  tmp_1 = phy_ethtool_set_eee(priv->phydev,edata);
  
#line 635 
  __retres = tmp_1;
  return_label: 
#line 635 
                return __retres;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static u32 stmmac_usec2riwt(u32 usec, struct stmmac_priv *priv)
{
  u32 __retres;
  
#line 640 
  unsigned long clk = clk_get_rate(priv->stmmac_clk);
  
#line 642 
  if (clk == 0UL) {
    
#line 643 
    __retres = 0U;
    
#line 643 
    goto return_label;
  }
  else ;
  
#line 645 
  __retres = (unsigned int)(((unsigned long)usec * (clk / 1000000UL)) / 256UL);
  return_label: 
#line 645 
                return __retres;
}


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static u32 stmmac_riwt2usec(u32 riwt, struct stmmac_priv *priv)
{
  u32 __retres;
  
#line 650 
  unsigned long clk = clk_get_rate(priv->stmmac_clk);
  
#line 652 
  if (clk == 0UL) {
    
#line 653 
    __retres = 0U;
    
#line 653 
    goto return_label;
  }
  else ;
  
#line 655 
  __retres = (unsigned int)((unsigned long)(riwt * 256U) / (clk / 1000000UL));
  return_label: 
#line 655 
                return __retres;
}


#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_get_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 661 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 663 
  ec->tx_coalesce_usecs = priv->tx_coal_timer;
  
#line 664 
  ec->tx_max_coalesced_frames = priv->tx_coal_frames;
  
#line 666 
  if (priv->use_riwt != 0) 
#line 667 
                           ec->rx_coalesce_usecs = stmmac_riwt2usec(priv->rx_riwt,priv); else ;
  
#line 669 
  __retres = 0;
  
#line 669 
  return __retres;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_set_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)
{
  int __retres;
  unsigned int rx_riwt;
  
#line 675 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 679 
  if ((((((((((((((((((ec->rx_max_coalesced_frames != 0U || ec->rx_coalesce_usecs_irq != 0U) || ec->rx_max_coalesced_frames_irq != 0U) || ec->tx_coalesce_usecs_irq != 0U) || ec->use_adaptive_rx_coalesce != 0U) || ec->use_adaptive_tx_coalesce != 0U) || ec->pkt_rate_low != 0U) || ec->rx_coalesce_usecs_low != 0U) || ec->rx_max_coalesced_frames_low != 0U) || ec->tx_coalesce_usecs_high != 0U) || ec->tx_max_coalesced_frames_low != 0U) || ec->pkt_rate_high != 0U) || ec->tx_coalesce_usecs_low != 0U) || ec->rx_coalesce_usecs_high != 0U) || ec->rx_max_coalesced_frames_high != 0U) || ec->tx_max_coalesced_frames_irq != 0U) || ec->stats_block_coalesce_usecs != 0U) || ec->tx_max_coalesced_frames_high != 0U) || ec->rate_sample_interval != 0U) {
    
#line 690 
    __retres = -95;
    
#line 690 
    goto return_label;
  }
  else ;
  
#line 692 
  if (ec->rx_coalesce_usecs == 0U) {
    
#line 693 
    __retres = -22;
    
#line 693 
    goto return_label;
  }
  else ;
  
#line 695 
  if (ec->tx_coalesce_usecs == 0U && ec->tx_max_coalesced_frames == 0U) {
    
#line 697 
    __retres = -22;
    
#line 697 
    goto return_label;
  }
  else ;
  
#line 699 
  if (ec->tx_coalesce_usecs > 100000U || ec->tx_max_coalesced_frames > 256U) {
    
#line 701 
    __retres = -22;
    
#line 701 
    goto return_label;
  }
  else ;
  
#line 703 
  rx_riwt = stmmac_usec2riwt(ec->rx_coalesce_usecs,priv);
  
#line 705 
  if (rx_riwt + 4294967264U > 223U) {
    
#line 706 
    __retres = -22;
    
#line 706 
    goto return_label;
  }
  else 
    
#line 707 
    if (priv->use_riwt == 0) {
      
#line 708 
      __retres = -95;
      
#line 708 
      goto return_label;
    }
    else ;
  
#line 711 
  priv->tx_coal_frames = ec->tx_max_coalesced_frames;
  
#line 712 
  priv->tx_coal_timer = ec->tx_coalesce_usecs;
  
#line 713 
  priv->rx_riwt = rx_riwt;
  
#line 714 
  (*(((priv->hw)->dma)->rx_watchdog))(priv->ioaddr,priv->rx_riwt);
  
#line 716 
  __retres = 0;
  return_label: 
#line 716 
                return __retres;
}


#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static int stmmac_get_ts_info(struct net_device *dev, struct ethtool_ts_info *info)
{
  int __retres;
  
#line 722 
  struct stmmac_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 724 
  if (priv->hwts_tx_en != 0 && priv->hwts_rx_en != 0) {
    
#line 726 
    info->so_timestamping = 69U;
    
#line 730 
    if (priv->ptp_clock != (struct ptp_clock *)0) 
#line 731 
                                                  info->phc_index = ptp_clock_index(priv->ptp_clock); else ;
    
#line 733 
    info->tx_types = 3U;
    
#line 735 
    info->rx_filters = 29179U;
    
#line 746 
    __retres = 0;
    
#line 746 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 748 
    tmp_0 = ethtool_op_get_ts_info(dev,info);
    
#line 748 
    __retres = tmp_0;
    
#line 748 
    goto return_label;
  }
  return_label: 
#line 724 
                return __retres;
}


#line 751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
static struct ethtool_ops const stmmac_ethtool_ops = {.get_settings = & stmmac_ethtool_getsettings, .set_settings = & stmmac_ethtool_setsettings, .get_drvinfo = & stmmac_ethtool_getdrvinfo, .get_regs_len = & stmmac_ethtool_get_regs_len, .get_regs = & stmmac_ethtool_gregs, .get_wol = & stmmac_get_wol, .set_wol = & stmmac_set_wol, .get_msglevel = & stmmac_ethtool_getmsglevel, .set_msglevel = & stmmac_ethtool_setmsglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & stmmac_get_coalesce, .set_coalesce = & stmmac_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & stmmac_get_pauseparam, .set_pauseparam = & stmmac_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & stmmac_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & stmmac_get_ethtool_stats, .begin = & stmmac_check_if_running, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & stmmac_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & stmmac_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = & stmmac_ethtool_op_get_eee, .set_eee = & stmmac_ethtool_op_set_eee, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c"
void stmmac_set_ethtool_ops(struct net_device *netdev)
{
  
#line 777 
  netdev->ethtool_ops = & stmmac_ethtool_ops;
  
#line 778 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_7)(struct net_device *) = & ethtool_op_get_link;

#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 71 
  stmmac_get_pauseparam(arg0,arg1);
  
#line 72 
  return;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_ethtool_getdrvinfo_9(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 76 
  stmmac_ethtool_getdrvinfo(arg0,arg1);
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_ethtool_op_get_eee_11(struct net_device *arg0, struct ethtool_eee *arg1)
{
  int tmp;
  
#line 81 
  tmp = stmmac_ethtool_op_get_eee(arg0,arg1);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_get_coalesce_26(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 86 
  tmp = stmmac_get_coalesce(arg0,arg1);
  
#line 86 
  return tmp;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_ethtool_setmsglevel_25(struct net_device *arg0, unsigned int arg1)
{
  
#line 91 
  stmmac_ethtool_setmsglevel(arg0,arg1);
  
#line 92 
  return;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_ethtool_op_set_eee_12(struct net_device *arg0, struct ethtool_eee *arg1)
{
  int tmp;
  
#line 96 
  tmp = stmmac_ethtool_op_set_eee(arg0,arg1);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_ethtool_gregs_23(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 101 
  stmmac_ethtool_gregs(arg0,arg1,arg2);
  
#line 102 
  return;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_get_sset_count_24(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 106 
  tmp = stmmac_get_sset_count(arg0,arg1);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_get_wol_19(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 111 
  stmmac_get_wol(arg0,arg1);
  
#line 112 
  return;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_get_strings_18(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 116 
  stmmac_get_strings(arg0,arg1,arg2);
  
#line 117 
  return;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_ethtool_getsettings_16(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 121 
  tmp = stmmac_ethtool_getsettings(arg0,arg1);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_check_if_running_21(struct net_device *arg0)
{
  int tmp;
  
#line 126 
  tmp = stmmac_check_if_running(arg0);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_set_coalesce_28(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 131 
  tmp = stmmac_set_coalesce(arg0,arg1);
  
#line 131 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_ethtool_setsettings_3(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 136 
  tmp = stmmac_ethtool_setsettings(arg0,arg1);
  
#line 136 
  return tmp;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_get_ts_info_4(struct net_device *arg0, struct ethtool_ts_info *arg1)
{
  int tmp;
  
#line 141 
  tmp = stmmac_get_ts_info(arg0,arg1);
  
#line 141 
  return tmp;
}


#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
unsigned int ldv_emg_wrapper_stmmac_ethtool_getmsglevel_13(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 146 
  tmp = stmmac_ethtool_getmsglevel(arg0);
  
#line 146 
  return tmp;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_set_pauseparam_31(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 151 
  tmp = stmmac_set_pauseparam(arg0,arg1);
  
#line 151 
  return tmp;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
void ldv_emg_wrapper_stmmac_get_ethtool_stats_5(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 156 
  stmmac_get_ethtool_stats(arg0,arg1,arg2);
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_set_wol_22(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 161 
  tmp = stmmac_set_wol(arg0,arg1);
  
#line 161 
  return tmp;
}


#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
int ldv_emg_wrapper_stmmac_ethtool_get_regs_len_27(struct net_device *arg0)
{
  int tmp;
  
#line 166 
  tmp = stmmac_ethtool_get_regs_len(arg0);
  
#line 166 
  return tmp;
}


#line 841  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_lock_72(spinlock_t *lock)
{
  
#line 845 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 847 
  spin_lock_0(lock);
  
#line 848 
  return;
}


#line 851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_unlock_73(spinlock_t *lock)
{
  
#line 855 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 857 
  spin_unlock_0(lock);
  
#line 858 
  return;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_lock_74(spinlock_t *lock)
{
  
#line 865 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 867 
  spin_lock_0(lock);
  
#line 868 
  return;
}


#line 871  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_unlock_75(spinlock_t *lock)
{
  
#line 875 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 877 
  spin_unlock_0(lock);
  
#line 878 
  return;
}


#line 881  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_lock_irq_76(spinlock_t *lock)
{
  
#line 885 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 887 
  spin_lock_irq(lock);
  
#line 888 
  return;
}


#line 891  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_unlock_irq_77(spinlock_t *lock)
{
  
#line 895 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 897 
  spin_unlock_irq(lock);
  
#line 898 
  return;
}


#line 901  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_lock_irq_78(spinlock_t *lock)
{
  
#line 905 
  ldv_spin_model_lock((char *)"lock_of_stmmac_priv");
  
#line 907 
  spin_lock_irq(lock);
  
#line 908 
  return;
}


#line 911  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_stmmac_ethtool.c.aux"
static void ldv_spin_unlock_irq_79(spinlock_t *lock)
{
  
#line 915 
  ldv_spin_model_unlock((char *)"lock_of_stmmac_priv");
  
#line 917 
  spin_unlock_irq(lock);
  
#line 918 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static int dwmac1000_dma_init(void *ioaddr, int pbl, int fb, int mb, int burst_len, u32 dma_tx, u32 dma_rx, int atds)
{
  int __retres;
  int limit;
  unsigned int tmp_0;
  int tmp_2;
  
#line 36 
  u32 value = readl((void const volatile *)(ioaddr + 4096U));
  
#line 40 
  value |= 1U;
  
#line 41 
  writel(value,(void volatile *)(ioaddr + 4096U));
  
#line 42 
  limit = 10;
  
#line 43 
  goto ldv_45653;
  ldv_45652: 
#line 44 
  ;
  
#line 44 
  tmp_0 = readl((void const volatile *)(ioaddr + 4096U));
  
#line 44 
  if ((tmp_0 & 1U) == 0U) 
#line 45 
                          goto ldv_45647; else ;
  {
    
#line 46 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_1;
      
#line 46 
      goto ldv_45650;
      ldv_45649: 
#line 47 
      ;
      
#line 46 
      __const_udelay(4295000UL);
      ldv_45650: 
#line 48 
      ;
      
#line 46 
      tmp_1 = __ms;
      
#line 46 
      __ms -= 1UL;
      
#line 46 
      ;
      
#line 46 
      if (tmp_1 != 0UL) 
#line 48 
                        goto ldv_45649; else 
#line 51 
                                             goto ldv_45651;
      ldv_45651: 
#line 52 
      ;
    }
  }
  ldv_45653: 
#line 55 
  ;
  
#line 43 
  tmp_2 = limit;
  
#line 43 
  limit -= 1;
  
#line 43 
  ;
  
#line 43 
  if (tmp_2 != 0) 
#line 45 
                  goto ldv_45652; else 
#line 48 
                                       goto ldv_45647;
  ldv_45647: 
#line 49 
  ;
  
#line 48 
  if (limit < 0) {
    
#line 49 
    __retres = -16;
    
#line 49 
    goto return_label;
  }
  else ;
  
#line 62 
  value = (unsigned int)(((pbl << 8) | (pbl << 17)) | 16777216);
  
#line 66 
  if (fb != 0) 
#line 67 
               value |= 65536U; else ;
  
#line 70 
  if (mb != 0) 
#line 71 
               value |= 67108864U; else ;
  
#line 73 
  if (atds != 0) 
#line 74 
                 value |= 128U; else ;
  
#line 76 
  writel(value,(void volatile *)(ioaddr + 4096U));
  
#line 95 
  writel((unsigned int)burst_len,(void volatile *)(ioaddr + 4136U));
  
#line 98 
  writel(106593U,(void volatile *)(ioaddr + 4124U));
  
#line 103 
  writel(dma_tx,(void volatile *)(ioaddr + 4112U));
  
#line 104 
  writel(dma_rx,(void volatile *)(ioaddr + 4108U));
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static u32 dwmac1000_configure_fc(u32 csr6, int rxfifosz)
{
  
#line 111 
  csr6 &= 4286577151U;
  
#line 112 
  csr6 &= 4290766847U;
  
#line 118 
  if (rxfifosz <= 4095) {
    
#line 119 
    csr6 &= 4294967039U;
    {
      
#line 120 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_configure_fc", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c", .format = "GMAC: disabling flow control, rxfifo too small(%d)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))121U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 120 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 120 
                                                          __dynamic_pr_debug(& descriptor,"GMAC: disabling flow control, rxfifo too small(%d)\n",rxfifosz); else ;
    }
  }
  else {
    
#line 123 
    csr6 |= 256U;
    
#line 124 
    csr6 = csr6;
    
#line 125 
    csr6 |= 2048U;
  }
  
#line 127 
  return csr6;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static void dwmac1000_dma_operation_mode(void *ioaddr, int txmode, int rxmode, int rxfifosz)
{
  
#line 133 
  u32 csr6 = readl((void const volatile *)(ioaddr + 4120U));
  
#line 135 
  if (txmode == 1) {
    {
      
#line 136 
      struct _ddebug descriptor = {.modname = "stmmac", .function = "dwmac1000_dma_operation_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c", .format = "GMAC: enable TX store and forward mode\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))136U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 136 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 136 
                                                          __dynamic_pr_debug(& descriptor,"GMAC: enable TX store and forward mode\n"); else ;
    }
    
#line 138 
    csr6 |= 2097152U;
    
#line 142 
    csr6 |= 4U;
  }
  else {
    {
      
#line 144 
      struct _ddebug descriptor_0 = {.modname = "stmmac", .function = "dwmac1000_dma_operation_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c", .format = "GMAC: disabling TX SF (threshold %d)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))144U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 144 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 144 
                                                            __dynamic_pr_debug(& descriptor_0,"GMAC: disabling TX SF (threshold %d)\n",txmode); else ;
    }
    
#line 145 
    csr6 &= 4292870143U;
    
#line 146 
    csr6 &= 4294852607U;
    
#line 148 
    if (txmode <= 32) 
#line 149 
                      csr6 |= 81920U;
    else 
      
#line 150 
      if (txmode <= 64) 
#line 151 
                        csr6 = csr6;
      else 
        
#line 152 
        if (txmode <= 128) 
#line 153 
                           csr6 |= 16384U;
        else 
          
#line 154 
          if (txmode <= 192) 
#line 155 
                             csr6 |= 32768U; else 
#line 157 
                                                  csr6 |= 49152U;
  }
  
#line 160 
  if (rxmode == 1) {
    {
      
#line 161 
      struct _ddebug descriptor_1 = {.modname = "stmmac", .function = "dwmac1000_dma_operation_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c", .format = "GMAC: enable RX store and forward mode\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))161U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 161 
      if ((long)(((int)descriptor_1.flags & 1) != 0) != 0L) 
#line 161 
                                                            __dynamic_pr_debug(& descriptor_1,"GMAC: enable RX store and forward mode\n"); else ;
    }
    
#line 162 
    csr6 |= 33554432U;
  }
  else {
    {
      
#line 164 
      struct _ddebug descriptor_2 = {.modname = "stmmac", .function = "dwmac1000_dma_operation_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c", .format = "GMAC: disable RX SF mode (threshold %d)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))164U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 164 
      if ((long)(((int)descriptor_2.flags & 1) != 0) != 0L) 
#line 164 
                                                            __dynamic_pr_debug(& descriptor_2,"GMAC: disable RX SF mode (threshold %d)\n",rxmode); else ;
    }
    
#line 165 
    csr6 &= 4261412863U;
    
#line 166 
    csr6 &= 4294967271U;
    
#line 167 
    if (rxmode <= 32) 
#line 168 
                      csr6 |= 8U;
    else 
      
#line 169 
      if (rxmode <= 64) 
#line 170 
                        csr6 = csr6;
      else 
        
#line 171 
        if (rxmode <= 96) 
#line 172 
                          csr6 |= 16U; else 
#line 174 
                                            csr6 |= 24U;
  }
  
#line 178 
  csr6 = dwmac1000_configure_fc(csr6,rxfifosz);
  
#line 180 
  writel(csr6,(void volatile *)(ioaddr + 4120U));
  
#line 181 
  return;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static void dwmac1000_dump_dma_regs(void *ioaddr)
{
  int i;
  
#line 186 
  printk("\001");
  
#line 187 
  i = 0;
  
#line 187 
  goto ldv_45678;
  ldv_45677: 
#line 188 
  ;
  
#line 188 
  if ((unsigned int)i + 4294967287U > 8U) {
    unsigned int tmp;
    
#line 189 
    int offset = i * 4;
    
#line 190 
    tmp = readl((void const volatile *)(ioaddr + ((unsigned int)offset + 4096U)));
    
#line 190 
    ;
    
#line 190 
    ;
    
#line 190 
    printk("\001",i,offset + 4096,tmp);
  }
  else ;
  
#line 187 
  i += 1;
  ldv_45678: 
#line 188 
  ;
  
#line 187 
  if (i <= 21) 
#line 189 
               goto ldv_45677; else 
#line 192 
                                    goto ldv_45679;
  ldv_45679: 
#line 193 
  ;
  
#line 194 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static unsigned int dwmac1000_get_hw_feature(void *ioaddr)
{
  unsigned int tmp;
  
#line 199 
  tmp = readl((void const volatile *)(ioaddr + 4184U));
  
#line 199 
  return tmp;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
static void dwmac1000_rx_watchdog(void *ioaddr, u32 riwt)
{
  
#line 204 
  writel(riwt,(void volatile *)(ioaddr + 4132U));
  
#line 205 
  return;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac1000_dma.c"
struct stmmac_dma_ops const dwmac1000_dma_ops = {.init = & dwmac1000_dma_init, .dump_regs = & dwmac1000_dump_dma_regs, .dma_mode = & dwmac1000_dma_operation_mode, .dma_diagnostic_fr = (void (*)(void *, struct stmmac_extra_stats *, void *))0, .enable_dma_transmission = & dwmac_enable_dma_transmission, .enable_dma_irq = & dwmac_enable_dma_irq, .disable_dma_irq = & dwmac_disable_dma_irq, .start_tx = & dwmac_dma_start_tx, .stop_tx = & dwmac_dma_stop_tx, .start_rx = & dwmac_dma_start_rx, .stop_rx = & dwmac_dma_stop_rx, .dma_interrupt = & dwmac_dma_interrupt, .get_hw_feature = & dwmac1000_get_hw_feature, .rx_watchdog = & dwmac1000_rx_watchdog};

#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_0(size_t size, gfp_t flags);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_core_init(struct mac_device_info *hw, int mtu)
{
  
#line 37 
  void *ioaddr = hw->pcsr;
  
#line 38 
  u32 value = readl((void const volatile *)ioaddr);
  
#line 40 
  writel(value | 268435712U,(void volatile *)ioaddr);
  
#line 43 
  writel(33024U,(void volatile *)(ioaddr + 32U));
  
#line 44 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_dump_mac_regs(struct mac_device_info *hw)
{
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  
#line 49 
  void *ioaddr = hw->pcsr;
  
#line 50 
  printk("\001",ioaddr);
  
#line 53 
  tmp = readl((void const volatile *)ioaddr);
  
#line 53 
  printk("\001",0,tmp);
  
#line 55 
  tmp_0 = readl((void const volatile *)(ioaddr + 4U));
  
#line 55 
  printk("\001",4,tmp_0);
  
#line 57 
  tmp_1 = readl((void const volatile *)(ioaddr + 8U));
  
#line 57 
  printk("\001",8,tmp_1);
  
#line 59 
  tmp_2 = readl((void const volatile *)(ioaddr + 12U));
  
#line 59 
  printk("\001",12,tmp_2);
  
#line 61 
  tmp_3 = readl((void const volatile *)(ioaddr + 16U));
  
#line 61 
  printk("\001",16,tmp_3);
  
#line 63 
  tmp_4 = readl((void const volatile *)(ioaddr + 28U));
  
#line 63 
  printk("\001",28,tmp_4);
  
#line 65 
  tmp_5 = readl((void const volatile *)(ioaddr + 32U));
  
#line 65 
  printk("\001",32,tmp_5);
  
#line 67 
  tmp_6 = readl((void const volatile *)(ioaddr + 36U));
  
#line 67 
  printk("\001",36,tmp_6);
  
#line 68 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static int dwmac100_rx_ipc_enable(struct mac_device_info *hw)
{
  int __retres;
  
#line 73 
  __retres = 0;
  
#line 73 
  return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static int dwmac100_irq_status(struct mac_device_info *hw, struct stmmac_extra_stats *x)
{
  int __retres;
  
#line 79 
  __retres = 0;
  
#line 79 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_set_umac_addr(struct mac_device_info *hw, unsigned char *addr, unsigned int reg_n)
{
  
#line 86 
  void *ioaddr = hw->pcsr;
  
#line 87 
  stmmac_set_mac_addr(ioaddr,addr,4U,8U);
  
#line 88 
  return;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_get_umac_addr(struct mac_device_info *hw, unsigned char *addr, unsigned int reg_n)
{
  
#line 94 
  void *ioaddr = hw->pcsr;
  
#line 95 
  stmmac_get_mac_addr(ioaddr,addr,4U,8U);
  
#line 96 
  return;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_set_filter(struct mac_device_info *hw, struct net_device *dev)
{
  
#line 101 
  void *ioaddr = (void *)dev->base_addr;
  
#line 102 
  u32 value = readl((void const volatile *)ioaddr);
  
#line 104 
  if ((dev->flags & 256U) != 0U) {
    
#line 105 
    value |= 262144U;
    
#line 106 
    value &= 4294270975U;
  }
  else 
    
#line 108 
    if (dev->mc.count > 64 || (dev->flags & 512U) != 0U) {
      
#line 110 
      value |= 524288U;
      
#line 111 
      value &= 4294541311U;
      
#line 112 
      writel(4294967295U,(void volatile *)(ioaddr + 12U));
      
#line 113 
      writel(4294967295U,(void volatile *)(ioaddr + 16U));
    }
    else 
      
#line 114 
      if (dev->mc.count == 0) 
#line 115 
                              value &= 4294008831U;
      else {
        u32 mc_filter[2U];
        struct netdev_hw_addr *ha;
        struct netdev_hw_addr *tmp_0;
        struct netdev_hw_addr *tmp_6;
        
#line 124 
        value |= 8192U;
        
#line 125 
        value &= 4294017023U;
        
#line 128 
        memset((void *)(& mc_filter),0,8UL);
        {
          
#line 129 
          struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
          
#line 129 
          tmp_0 = (struct netdev_hw_addr *)__mptr;
        }
        
#line 129 
        ha = tmp_0;
        
#line 129 
        goto ldv_45663;
        ldv_45662: 
#line 130 
        ;
        {
          u32 tmp_5;
          {
            u32 tmp_4;
            
#line 133 
            u32 __x = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
            
#line 133 
            if (0 != 0) {
              u32 tmp_2;
              {
                
#line 133 
                u32 __x_0 = __x_0;
                
#line 133 
                __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
                
#line 133 
                __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
                
#line 133 
                __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
                
#line 133 
                __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
                
#line 133 
                __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
                
#line 133 
                tmp_2 = __x_0;
              }
              
#line 133 
              tmp_4 = tmp_2;
            }
            else 
#line 133 
                 tmp_4 = __bitrev32(__x);
            
#line 133 
            tmp_5 = tmp_4;
          }
          
#line 133 
          int bit_nr = (int)(tmp_5 >> 26);
          
#line 138 
          mc_filter[bit_nr >> 5] |= (unsigned int)(1 << (bit_nr & 31));
        }
        {
          
#line 129 
          struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
          
#line 129 
          tmp_6 = (struct netdev_hw_addr *)__mptr_0;
        }
        
#line 129 
        ha = tmp_6;
        ldv_45663: 
#line 131 
        ;
        
#line 129 
        if (& ha->list != & dev->mc.list) 
#line 131 
                                          goto ldv_45662; else 
#line 134 
                                                               goto ldv_45664;
        ldv_45664: 
#line 135 
        ;
        
#line 140 
        writel(mc_filter[0],(void volatile *)(ioaddr + 16U));
        
#line 141 
        writel(mc_filter[1],(void volatile *)(ioaddr + 12U));
      }
  
#line 144 
  writel(value,(void volatile *)ioaddr);
  
#line 145 
  return;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_flow_ctrl(struct mac_device_info *hw, unsigned int duplex, unsigned int fc, unsigned int pause_time)
{
  
#line 150 
  void *ioaddr = hw->pcsr;
  
#line 151 
  unsigned int flow = 2U;
  
#line 153 
  if (duplex != 0U) 
#line 154 
                    flow = (pause_time << 16) | flow; else ;
  
#line 155 
  writel(flow,(void volatile *)(ioaddr + 28U));
  
#line 156 
  return;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static void dwmac100_pmt(struct mac_device_info *hw, unsigned long mode)
{
  
#line 161 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
static struct stmmac_ops const dwmac100_ops = {.core_init = & dwmac100_core_init, .rx_ipc = & dwmac100_rx_ipc_enable, .dump_regs = & dwmac100_dump_mac_regs, .host_irq_status = & dwmac100_irq_status, .set_filter = & dwmac100_set_filter, .flow_ctrl = & dwmac100_flow_ctrl, .pmt = & dwmac100_pmt, .set_umac_addr = & dwmac100_set_umac_addr, .get_umac_addr = & dwmac100_get_umac_addr, .set_eee_mode = (void (*)(struct mac_device_info *))0, .reset_eee_mode = (void (*)(struct mac_device_info *))0, .set_eee_timer = (void (*)(struct mac_device_info *, int , int ))0, .set_eee_pls = (void (*)(struct mac_device_info *, int ))0, .ctrl_ane = (void (*)(struct mac_device_info *, bool ))0, .get_adv = (void (*)(struct mac_device_info *, struct rgmii_adv *))0};

#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/stmicro/stmmac/dwmac100_core.c"
struct mac_device_info *dwmac100_setup(void *ioaddr)
{
  struct mac_device_info *__retres;
  struct mac_device_info *mac;
  
#line 180 
  mac = (struct mac_device_info *)kzalloc_0(88UL,208U);
  
#line 181 
  if (mac == (struct mac_device_info *)0) {
    
#line 182 
    __retres = (struct mac_device_info *)0;
    
#line 182 
    goto return_label;
  }
  else ;
  
#line 184 
  printk("\001");
  
#line 186 
  mac->pcsr = ioaddr;
  
#line 187 
  mac->mac = & dwmac100_ops;
  
#line 188 
  mac->dma = & dwmac100_dma_ops;
  
#line 190 
  mac->link.port = 134217728;
  
#line 191 
  mac->link.duplex = 1048576;
  
#line 192 
  mac->link.speed = 0;
  
#line 193 
  mac->mii.addr = 20U;
  
#line 194 
  mac->mii.data = 24U;
  
#line 195 
  mac->synopsys_uid = 0U;
  
#line 197 
  __retres = mac;
  return_label: 
#line 197 
                return __retres;
}


#line 495  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/weaver/.tmp_dwmac100_core.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 498 
  tmp = ldv_kzalloc(size,flags);
  
#line 498 
  return tmp;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 91 
void *ldv_character_driver_scenario_11(void *arg0);


#line 92 
void ldv_dispatch_register_9_3(struct file_operations *arg0);


#line 94 
void *ldv_character_driver_scenario_12(void *arg0);


#line 95 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 96 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 99 
void *ldv_initialization_1(void *arg0);


#line 100 
void *ldv_timer_scenario_13(void *arg0);


#line 101 
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 102 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 103 
void ldv_dispatch_register_7_4(struct net_device *arg0);


#line 107 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 108 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 110 
void *ldv_interrupt_scenario_14(void *arg0);


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 128 
  ldv_8_timer_list = arg0;
  
#line 132 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 133 
  ;
  
#line 133 
  __retres = 0;
  
#line 133 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 144 
  ldv_initialize();
  
#line 147 
  ldv_initialization_1((void *)0);
  
#line 149 
  __retres = 0;
  
#line 149 
  return __retres;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_11(void *arg0)
{
  void *__retres;
  struct file *ldv_11_resource_1;
  int ldv_11_ldv_param_2_3;
  long long ldv_11_ldv_param_1_2;
  char *ldv_11_ldv_param_1_4;
  struct inode *ldv_11_resource_0;
  unsigned long ldv_11_size_cnt;
  long long *ldv_11_ldv_param_3_5;
  char *ldv_11_ldv_param_1_6;
  long long *ldv_11_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 165 
  struct file_operations *ldv_11_container = ldv_emg_alias_stmmac_rings_status_fops_2;
  
#line 166 
  int ldv_11_ret = ldv_undef_int();
  
#line 169 
  struct ldv_struct_character_driver_scenario_11 *data = (struct ldv_struct_character_driver_scenario_11 *)arg0;
  
#line 173 
  ldv_11_ret = ldv_undef_int();
  
#line 176 
  if (data != (struct ldv_struct_character_driver_scenario_11 *)0) {
    
#line 177 
    ldv_11_container = data->arg0;
    
#line 178 
    ldv_free((void *)data);
  }
  else ;
  
#line 183 
  ldv_11_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 184 
  tmp_1 = ldv_undef_int();
  
#line 184 
  ldv_11_size_cnt = (unsigned long)tmp_1;
  
#line 191 
  goto ldv_main_11;
  
#line 193 
  __retres = (void *)0;
  
#line 193 
  goto return_label;
  ldv_main_11: 
#line 196 
  ;
  
#line 199 
  tmp_3 = ldv_undef_int();
  
#line 199 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 202 
    ldv_11_ret = ldv_emg_wrapper_stmmac_sysfs_ring_open_3(ldv_11_resource_0,ldv_11_resource_1);
    
#line 204 
    ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    
#line 207 
    tmp_2 = ldv_undef_int();
    
#line 207 
    if (tmp_2 != 0) {
      
#line 209 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 216 
      goto ldv_call_11;
    }
    else {
      
#line 220 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 227 
      goto ldv_main_11;
    }
  }
  else {
    
#line 232 
    ldv_free((void *)ldv_11_resource_0);
    
#line 240 
    __retres = (void *)0;
    
#line 240 
    goto return_label;
  }
  
#line 243 
  __retres = (void *)0;
  
#line 243 
  goto return_label;
  ldv_call_11: 
#line 246 
  ;
  
#line 249 
  tmp_4 = ldv_undef_int();
  
#line 249 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 250 
    ;
    
#line 252 
    ldv_11_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 253 
    ldv_11_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 257 
    if (ldv_11_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 263 
      __VERIFIER_assume(ldv_11_size_cnt <= 2147479552UL);
      
#line 265 
      (*(ldv_11_container->write))(ldv_11_resource_1,(char const *)ldv_11_ldv_param_1_6,ldv_11_size_cnt,ldv_11_ldv_param_3_7);
    }
    else ;
    
#line 270 
    ldv_free((void *)ldv_11_ldv_param_3_7);
    
#line 271 
    ldv_free((void *)ldv_11_ldv_param_1_6);
    
#line 278 
    goto ldv_call_11;
    case 2: 
#line 281 
    ;
    
#line 284 
    (*ldv_emg_alias_single_release_5)(ldv_11_resource_0,ldv_11_resource_1);
    
#line 291 
    goto ldv_main_11;
    case 3: 
#line 294 
    ;
    
#line 298 
    tmp_9 = ldv_undef_int();
    
#line 298 
    if (tmp_9 != 0) 
#line 301 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_11_resource_1,ldv_11_ldv_param_1_2,ldv_11_ldv_param_2_3);
    else {
      
#line 307 
      ldv_11_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 308 
      ldv_11_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 313 
      (*ldv_emg_alias_seq_read_4)(ldv_11_resource_1,ldv_11_ldv_param_1_4,ldv_11_size_cnt,ldv_11_ldv_param_3_5);
      
#line 317 
      ldv_free((void *)ldv_11_ldv_param_1_4);
      
#line 318 
      ldv_free((void *)ldv_11_ldv_param_3_5);
    }
    
#line 322 
    goto ldv_43861;
    default: 
#line 324 
    ;
    
#line 324 
    __VERIFIER_assume(0);
  }
  ldv_43861: 
#line 333 
  ;
  
#line 333 
  goto ldv_call_11;
  
#line 335 
  __retres = (void *)0;
  return_label: 
#line 335 
                return __retres;
}


#line 340  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_11 *cf_arg_11;
  struct ldv_struct_character_driver_scenario_11 *cf_arg_12;
  int tmp;
  
#line 344 
  tmp = ldv_undef_int();
  
#line 344 
  switch (tmp) {
    case 0: 
#line 345 
    ;
    
#line 346 
    cf_arg_11 = (struct ldv_struct_character_driver_scenario_11 *)ldv_xmalloc(16UL);
    
#line 347 
    cf_arg_11->arg0 = arg0;
    
#line 348 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_character_driver_scenario_11,(void *)cf_arg_11);
    
#line 349 
    __VERIFIER_assume(ret == 0);
    
#line 350 
    goto ldv_43870;
    case 1: 
#line 352 
    ;
    
#line 353 
    cf_arg_12 = (struct ldv_struct_character_driver_scenario_11 *)ldv_xmalloc(16UL);
    
#line 354 
    cf_arg_12->arg0 = arg0;
    
#line 355 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_character_driver_scenario_12,(void *)cf_arg_12);
    
#line 356 
    __VERIFIER_assume(ret == 0);
    
#line 357 
    goto ldv_43870;
    default: 
#line 359 
    ;
    
#line 359 
    __VERIFIER_assume(0);
  }
  ldv_43870: 
#line 360 
  ;
  
#line 361 
  return;
}


#line 365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_9_dentry;
  struct file_operations *ldv_9_file_operations;
  int tmp_1;
  
#line 373 
  tmp_1 = ldv_undef_int();
  
#line 373 
  if (tmp_1 != 0) {
    
#line 375 
    ldv_9_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 376 
    ldv_9_file_operations = arg4;
    
#line 380 
    ldv_dispatch_register_9_3(ldv_9_file_operations);
    
#line 384 
    __retres = ldv_9_dentry;
    
#line 384 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 391 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 391 
    __retres = tmp_0;
    
#line 391 
    goto return_label;
  }
  return_label: 
#line 373 
                return __retres;
}


#line 401  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_12(void *arg0)
{
  void *__retres;
  struct file *ldv_12_resource_1;
  int ldv_12_ldv_param_2_3;
  long long ldv_12_ldv_param_1_2;
  char *ldv_12_ldv_param_1_4;
  struct inode *ldv_12_resource_0;
  unsigned long ldv_12_size_cnt;
  long long *ldv_12_ldv_param_3_5;
  char *ldv_12_ldv_param_1_6;
  long long *ldv_12_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 412 
  struct file_operations *ldv_12_container = ldv_emg_alias_stmmac_dma_cap_fops_2;
  
#line 413 
  int ldv_12_ret = ldv_undef_int();
  
#line 416 
  struct ldv_struct_character_driver_scenario_11 *data = (struct ldv_struct_character_driver_scenario_11 *)arg0;
  
#line 420 
  ldv_12_ret = ldv_undef_int();
  
#line 423 
  if (data != (struct ldv_struct_character_driver_scenario_11 *)0) {
    
#line 424 
    ldv_12_container = data->arg0;
    
#line 425 
    ldv_free((void *)data);
  }
  else ;
  
#line 430 
  ldv_12_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 431 
  tmp_1 = ldv_undef_int();
  
#line 431 
  ldv_12_size_cnt = (unsigned long)tmp_1;
  
#line 438 
  goto ldv_main_12;
  
#line 440 
  __retres = (void *)0;
  
#line 440 
  goto return_label;
  ldv_main_12: 
#line 443 
  ;
  
#line 446 
  tmp_3 = ldv_undef_int();
  
#line 446 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 449 
    ldv_12_ret = ldv_emg_wrapper_stmmac_sysfs_dma_cap_open_6(ldv_12_resource_0,ldv_12_resource_1);
    
#line 451 
    ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    
#line 454 
    tmp_2 = ldv_undef_int();
    
#line 454 
    if (tmp_2 != 0) {
      
#line 456 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 463 
      goto ldv_call_12;
    }
    else {
      
#line 467 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 474 
      goto ldv_main_12;
    }
  }
  else {
    
#line 479 
    ldv_free((void *)ldv_12_resource_0);
    
#line 487 
    __retres = (void *)0;
    
#line 487 
    goto return_label;
  }
  
#line 490 
  __retres = (void *)0;
  
#line 490 
  goto return_label;
  ldv_call_12: 
#line 493 
  ;
  
#line 496 
  tmp_4 = ldv_undef_int();
  
#line 496 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 497 
    ;
    
#line 499 
    ldv_12_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 500 
    ldv_12_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 504 
    if (ldv_12_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 510 
      __VERIFIER_assume(ldv_12_size_cnt <= 2147479552UL);
      
#line 512 
      (*(ldv_12_container->write))(ldv_12_resource_1,(char const *)ldv_12_ldv_param_1_6,ldv_12_size_cnt,ldv_12_ldv_param_3_7);
    }
    else ;
    
#line 517 
    ldv_free((void *)ldv_12_ldv_param_1_6);
    
#line 518 
    ldv_free((void *)ldv_12_ldv_param_3_7);
    
#line 525 
    goto ldv_call_12;
    case 2: 
#line 528 
    ;
    
#line 531 
    (*ldv_emg_alias_single_release_5)(ldv_12_resource_0,ldv_12_resource_1);
    
#line 538 
    goto ldv_main_12;
    case 3: 
#line 541 
    ;
    
#line 545 
    tmp_9 = ldv_undef_int();
    
#line 545 
    if (tmp_9 != 0) 
#line 548 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_12_resource_1,ldv_12_ldv_param_1_2,ldv_12_ldv_param_2_3);
    else {
      
#line 554 
      ldv_12_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 555 
      ldv_12_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 560 
      (*ldv_emg_alias_seq_read_4)(ldv_12_resource_1,ldv_12_ldv_param_1_4,ldv_12_size_cnt,ldv_12_ldv_param_3_5);
      
#line 564 
      ldv_free((void *)ldv_12_ldv_param_3_5);
      
#line 565 
      ldv_free((void *)ldv_12_ldv_param_1_4);
    }
    
#line 569 
    goto ldv_43902;
    default: 
#line 571 
    ;
    
#line 571 
    __VERIFIER_assume(0);
  }
  ldv_43902: 
#line 580 
  ;
  
#line 580 
  goto ldv_call_12;
  
#line 582 
  __retres = (void *)0;
  return_label: 
#line 582 
                return __retres;
}


#line 587  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 590 
  tmp = ldv_undef_int();
  
#line 590 
  switch (tmp) {
    case 0: 
#line 591 
    ;
    
#line 592 
    cf_arg_13 = (struct ldv_struct_timer_scenario_13 *)ldv_xmalloc(16UL);
    
#line 593 
    cf_arg_13->arg0 = arg0;
    
#line 594 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_timer_scenario_13,(void *)cf_arg_13);
    
#line 595 
    __VERIFIER_assume(ret == 0);
    
#line 596 
    goto ldv_43910;
    default: 
#line 598 
    ;
    
#line 598 
    __VERIFIER_assume(0);
  }
  ldv_43910: 
#line 599 
  ;
  
#line 600 
  return;
}


#line 604  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  int tmp;
  
#line 607 
  tmp = ldv_undef_int();
  
#line 607 
  switch (tmp) {
    case 0: 
#line 608 
    ;
    
#line 609 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 610 
    __VERIFIER_assume(ret == 0);
    
#line 611 
    goto ldv_43918;
    default: 
#line 613 
    ;
    
#line 613 
    __VERIFIER_assume(0);
  }
  ldv_43918: 
#line 614 
  ;
  
#line 615 
  return;
}


#line 619  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 626 
  tmp_0 = ldv_undef_int();
  
#line 626 
  if (tmp_0 != 0) {
    
#line 628 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 632 
    __retres = ldv_5_netdev;
    
#line 632 
    goto return_label;
  }
  else {
    
#line 639 
    __retres = (struct net_device *)0;
    
#line 639 
    goto return_label;
  }
  return_label: 
#line 626 
                return __retres;
}


#line 649  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_10_line;
  void *ldv_10_data;
  enum irqreturn (*ldv_10_thread)(int , void *);
  int tmp_0;
  
#line 654 
  enum irqreturn (*ldv_10_callback)(int , void *) = & ldv_emg_wrapper_stmmac_interrupt_2;
  
#line 659 
  tmp_0 = ldv_undef_int();
  
#line 659 
  if (tmp_0 != 0) {
    
#line 661 
    ldv_10_line = (int)arg0;
    
#line 662 
    ldv_10_callback = arg1;
    
#line 663 
    ldv_10_thread = (enum irqreturn (*)(int , void *))0;
    
#line 664 
    ldv_10_data = arg4;
    
#line 668 
    ldv_dispatch_irq_register_10_3(ldv_10_line,ldv_10_callback,ldv_10_thread,ldv_10_data);
    
#line 672 
    __retres = 0;
    
#line 672 
    goto return_label;
  }
  else {
    int tmp;
    
#line 679 
    tmp = ldv_undef_int_negative();
    
#line 679 
    __retres = tmp;
    
#line 679 
    goto return_label;
  }
  return_label: 
#line 659 
                return __retres;
}


#line 689  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 696 
  ldv_1_ret = ldv_emg_stmmac_init();
  
#line 697 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 700 
  tmp = ldv_undef_int();
  
#line 700 
  if (tmp != 0) {
    
#line 702 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 706 
    __retres = (void *)0;
    
#line 706 
    goto return_label;
  }
  else {
    
#line 710 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 715 
    ldv_emg_stmmac_exit();
    
#line 719 
    __retres = (void *)0;
    
#line 719 
    goto return_label;
  }
  
#line 722 
  __retres = (void *)0;
  return_label: 
#line 722 
                return __retres;
}


#line 727  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_13(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_13_container;
  
#line 732 
  struct ldv_struct_timer_scenario_13 *data = (struct ldv_struct_timer_scenario_13 *)arg0;
  
#line 737 
  if (data != (struct ldv_struct_timer_scenario_13 *)0) {
    
#line 738 
    ldv_13_container = data->arg0;
    
#line 739 
    ldv_free((void *)data);
  }
  else ;
  
#line 744 
  if (ldv_13_container->function != (void (*)(unsigned long ))0) {
    
#line 746 
    ldv_switch_to_interrupt_context();
    
#line 748 
    (*(ldv_13_container->function))(ldv_13_container->data);
    
#line 750 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 759 
  __retres = (void *)0;
  
#line 759 
  goto return_label;
  
#line 761 
  __retres = (void *)0;
  return_label: 
#line 761 
                return __retres;
}


#line 766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 769 
  tmp = ldv_undef_int();
  
#line 769 
  switch (tmp) {
    case 0: 
#line 770 
    ;
    
#line 771 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 772 
    cf_arg_14->arg0 = arg0;
    
#line 773 
    cf_arg_14->arg1 = arg1;
    
#line 774 
    cf_arg_14->arg2 = arg2;
    
#line 775 
    cf_arg_14->arg3 = arg3;
    
#line 776 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 777 
    __VERIFIER_assume(ret == 0);
    
#line 778 
    goto ldv_43965;
    default: 
#line 780 
    ;
    
#line 780 
    __VERIFIER_assume(0);
  }
  ldv_43965: 
#line 781 
  ;
  
#line 782 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 789 
  tmp = ldv_undef_int();
  
#line 789 
  switch (tmp) {
    case 0: 
#line 790 
    ;
    
#line 791 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 792 
    __VERIFIER_assume(ret == 0);
    
#line 793 
    goto ldv_43973;
    default: 
#line 795 
    ;
    
#line 795 
    __VERIFIER_assume(0);
  }
  ldv_43973: 
#line 796 
  ;
  
#line 797 
  return;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 804 
  tmp = ldv_undef_int();
  
#line 804 
  switch (tmp) {
    case 0: 
#line 805 
    ;
    
#line 806 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 807 
    cf_arg_15->arg0 = arg0;
    
#line 808 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 809 
    __VERIFIER_assume(ret == 0);
    
#line 810 
    goto ldv_43981;
    default: 
#line 812 
    ;
    
#line 812 
    __VERIFIER_assume(0);
  }
  ldv_43981: 
#line 813 
  ;
  
#line 814 
  return;
}


#line 818  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 824 
  ldv_6_netdev = arg0;
  
#line 829 
  ldv_emg_wrapper_stmmac_release_2(ldv_6_netdev);
  
#line 833 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 837 
  goto return_label;
  return_label: 
#line 839 
                return;
}


#line 844  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 850 
  ldv_3_line = (int)arg0;
  
#line 854 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 858 
  goto return_label;
  return_label: 
#line 860 
                return;
}


#line 865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_7_netdev;
  int tmp_3;
  
#line 869 
  int ldv_7_ret = ldv_undef_int();
  
#line 872 
  ldv_7_ret = ldv_undef_int();
  
#line 875 
  tmp_3 = ldv_undef_int();
  
#line 875 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 877 
    ldv_7_netdev = arg0;
    
#line 882 
    ldv_7_ret = ldv_emg_wrapper_stmmac_open_2(ldv_7_netdev);
    
#line 885 
    tmp_1 = ldv_undef_int();
    
#line 885 
    if (tmp_1 != 0) {
      
#line 887 
      __VERIFIER_assume(ldv_7_ret == 0);
      
#line 891 
      ldv_dispatch_register_7_4(ldv_7_netdev);
      
#line 895 
      __retres = 0;
      
#line 895 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 902 
      __VERIFIER_assume(ldv_7_ret != 0);
      
#line 903 
      ldv_failed_register_netdev();
      
#line 904 
      tmp_0 = ldv_undef_int_negative();
      
#line 904 
      __retres = tmp_0;
      
#line 904 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 912 
    ldv_failed_register_netdev();
    
#line 913 
    tmp_2 = ldv_undef_int_negative();
    
#line 913 
    __retres = tmp_2;
    
#line 913 
    goto return_label;
  }
  return_label: 
#line 875 
                return __retres;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_28;
  struct ethtool_cmd *ldv_15_ldv_param_1_3;
  struct ethtool_eee *ldv_15_ldv_param_1_13;
  void *ldv_15_ldv_param_1_15;
  struct sk_buff *ldv_15_ldv_param_0_14;
  void *ldv_15_ldv_param_2_23;
  int ldv_15_ldv_param_1_8;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_2;
  struct ethtool_ts_info *ldv_15_ldv_param_1_4;
  unsigned char *ldv_15_ldv_param_2_25;
  unsigned long long ldv_15_ldv_param_1_11;
  unsigned long long *ldv_15_ldv_param_2_7;
  struct ethtool_coalesce *ldv_15_ldv_param_1_26;
  struct net_device *ldv_15_container;
  int ldv_15_ldv_param_2_20;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_10;
  struct ethtool_eee *ldv_15_ldv_param_1_12;
  struct ethtool_cmd *ldv_15_ldv_param_1_16;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_18;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_21;
  struct ethtool_stats *ldv_15_ldv_param_1_6;
  unsigned long long ldv_15_ldv_param_1_9;
  int ldv_15_ldv_param_1_17;
  struct ifreq *ldv_15_ldv_param_1_19;
  unsigned int ldv_15_ldv_param_1_24;
  unsigned int ldv_15_ldv_param_1_5;
  struct ethtool_regs *ldv_15_ldv_param_1_22;
  struct ethtool_coalesce *ldv_15_ldv_param_1_27;
  int tmp_18;
  
#line 955 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 960 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 961 
    ldv_15_container = data->arg0;
    
#line 962 
    ldv_free((void *)data);
  }
  else ;
  
#line 970 
  goto ldv_call_15;
  
#line 972 
  __retres = (void *)0;
  
#line 972 
  goto return_label;
  ldv_call_15: 
#line 975 
  ;
  
#line 978 
  tmp_18 = ldv_undef_int();
  
#line 978 
  if (tmp_18 != 0) {
    int tmp_0;
    
#line 980 
    ldv_15_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 983 
    tmp_0 = ldv_undef_int();
    
#line 983 
    switch (tmp_0) {
      case 1: 
#line 984 
      ;
      
#line 987 
      ldv_emg_wrapper_stmmac_get_pauseparam_2(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 990 
      goto ldv_44031;
      case 2: 
#line 992 
      ;
      
#line 995 
      ldv_emg_wrapper_stmmac_set_rx_mode_29(ldv_15_container);
      
#line 998 
      goto ldv_44031;
      case 3: 
#line 1000 
      ;
      
#line 1003 
      ldv_emg_wrapper_stmmac_poll_controller_30(ldv_15_container);
      
#line 1006 
      goto ldv_44031;
      case 4: 
#line 1008 
      ;
      
#line 1010 
      ldv_15_ldv_param_1_28 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1015 
      ldv_emg_wrapper_stmmac_set_pauseparam_31(ldv_15_container,ldv_15_ldv_param_1_28);
      
#line 1019 
      ldv_free((void *)ldv_15_ldv_param_1_28);
      
#line 1022 
      goto ldv_44031;
      case 5: 
#line 1024 
      ;
      
#line 1026 
      ldv_15_ldv_param_1_27 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1031 
      ldv_emg_wrapper_stmmac_set_coalesce_28(ldv_15_container,ldv_15_ldv_param_1_27);
      
#line 1035 
      ldv_free((void *)ldv_15_ldv_param_1_27);
      
#line 1038 
      goto ldv_44031;
      case 6: 
#line 1040 
      ;
      
#line 1043 
      ldv_emg_wrapper_stmmac_ethtool_get_regs_len_27(ldv_15_container);
      
#line 1046 
      goto ldv_44031;
      case 7: 
#line 1048 
      ;
      
#line 1050 
      ldv_15_ldv_param_1_26 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1055 
      ldv_emg_wrapper_stmmac_get_coalesce_26(ldv_15_container,ldv_15_ldv_param_1_26);
      
#line 1059 
      ldv_free((void *)ldv_15_ldv_param_1_26);
      
#line 1062 
      goto ldv_44031;
      case 8: 
#line 1064 
      ;
      
#line 1066 
      ldv_15_ldv_param_2_25 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1071 
      ldv_emg_wrapper_stmmac_get_strings_18(ldv_15_container,ldv_15_ldv_param_1_24,ldv_15_ldv_param_2_25);
      
#line 1075 
      ldv_free((void *)ldv_15_ldv_param_2_25);
      
#line 1078 
      goto ldv_44031;
      case 9: 
#line 1080 
      ;
      
#line 1083 
      ldv_emg_wrapper_stmmac_tx_timeout_17(ldv_15_container);
      
#line 1086 
      goto ldv_44031;
      case 10: 
#line 1088 
      ;
      
#line 1090 
      ldv_15_ldv_param_2_23 = ldv_xmalloc_unknown_size(0UL);
      
#line 1091 
      ldv_15_ldv_param_1_22 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1096 
      ldv_emg_wrapper_stmmac_ethtool_gregs_23(ldv_15_container,ldv_15_ldv_param_1_22,ldv_15_ldv_param_2_23);
      
#line 1100 
      ldv_free(ldv_15_ldv_param_2_23);
      
#line 1101 
      ldv_free((void *)ldv_15_ldv_param_1_22);
      
#line 1104 
      goto ldv_44031;
      case 11: 
#line 1106 
      ;
      
#line 1108 
      ldv_15_ldv_param_1_21 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1113 
      ldv_emg_wrapper_stmmac_set_wol_22(ldv_15_container,ldv_15_ldv_param_1_21);
      
#line 1117 
      ldv_free((void *)ldv_15_ldv_param_1_21);
      
#line 1120 
      goto ldv_44031;
      case 12: 
#line 1122 
      ;
      
#line 1125 
      ldv_emg_wrapper_stmmac_check_if_running_21(ldv_15_container);
      
#line 1128 
      goto ldv_44031;
      case 13: 
#line 1130 
      ;
      
#line 1132 
      ldv_15_ldv_param_1_19 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1137 
      ldv_emg_wrapper_stmmac_ioctl_20(ldv_15_container,ldv_15_ldv_param_1_19,ldv_15_ldv_param_2_20);
      
#line 1141 
      ldv_free((void *)ldv_15_ldv_param_1_19);
      
#line 1144 
      goto ldv_44031;
      case 14: 
#line 1146 
      ;
      
#line 1148 
      ldv_15_ldv_param_1_18 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1153 
      ldv_emg_wrapper_stmmac_get_wol_19(ldv_15_container,ldv_15_ldv_param_1_18);
      
#line 1157 
      ldv_free((void *)ldv_15_ldv_param_1_18);
      
#line 1160 
      goto ldv_44031;
      case 15: 
#line 1162 
      ;
      
#line 1168 
      ldv_emg_wrapper_stmmac_get_sset_count_24(ldv_15_container,ldv_15_ldv_param_1_17);
      
#line 1174 
      goto ldv_44031;
      case 16: 
#line 1176 
      ;
      
#line 1178 
      ldv_15_ldv_param_1_16 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1183 
      ldv_emg_wrapper_stmmac_ethtool_getsettings_16(ldv_15_container,ldv_15_ldv_param_1_16);
      
#line 1187 
      ldv_free((void *)ldv_15_ldv_param_1_16);
      
#line 1190 
      goto ldv_44031;
      case 17: 
#line 1192 
      ;
      
#line 1194 
      ldv_15_ldv_param_1_15 = ldv_xmalloc_unknown_size(0UL);
      
#line 1199 
      (*ldv_emg_alias_eth_mac_addr_15)(ldv_15_container,ldv_15_ldv_param_1_15);
      
#line 1203 
      ldv_free(ldv_15_ldv_param_1_15);
      
#line 1206 
      goto ldv_44031;
      case 18: 
#line 1208 
      ;
      
#line 1210 
      ldv_15_ldv_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1215 
      ldv_emg_wrapper_stmmac_xmit_14(ldv_15_ldv_param_0_14,ldv_15_container);
      
#line 1219 
      ldv_free((void *)ldv_15_ldv_param_0_14);
      
#line 1222 
      goto ldv_44031;
      case 19: 
#line 1224 
      ;
      
#line 1227 
      ldv_emg_wrapper_stmmac_ethtool_getmsglevel_13(ldv_15_container);
      
#line 1230 
      goto ldv_44031;
      case 20: 
#line 1232 
      ;
      
#line 1234 
      ldv_15_ldv_param_1_13 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
      
#line 1239 
      ldv_emg_wrapper_stmmac_ethtool_op_set_eee_12(ldv_15_container,ldv_15_ldv_param_1_13);
      
#line 1243 
      ldv_free((void *)ldv_15_ldv_param_1_13);
      
#line 1246 
      goto ldv_44031;
      case 21: 
#line 1248 
      ;
      
#line 1250 
      ldv_15_ldv_param_1_12 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
      
#line 1255 
      ldv_emg_wrapper_stmmac_ethtool_op_get_eee_11(ldv_15_container,ldv_15_ldv_param_1_12);
      
#line 1259 
      ldv_free((void *)ldv_15_ldv_param_1_12);
      
#line 1262 
      goto ldv_44031;
      case 22: 
#line 1264 
      ;
      
#line 1270 
      ldv_emg_wrapper_stmmac_fix_features_10(ldv_15_container,ldv_15_ldv_param_1_11);
      
#line 1276 
      goto ldv_44031;
      case 23: 
#line 1278 
      ;
      
#line 1280 
      ldv_15_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1285 
      ldv_emg_wrapper_stmmac_ethtool_getdrvinfo_9(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 1289 
      ldv_free((void *)ldv_15_ldv_param_1_10);
      
#line 1292 
      goto ldv_44031;
      case 24: 
#line 1294 
      ;
      
#line 1300 
      ldv_emg_wrapper_stmmac_set_features_8(ldv_15_container,ldv_15_ldv_param_1_9);
      
#line 1306 
      goto ldv_44031;
      case 25: 
#line 1308 
      ;
      
#line 1311 
      (*ldv_emg_alias_ethtool_op_get_link_7)(ldv_15_container);
      
#line 1314 
      goto ldv_44031;
      case 26: 
#line 1316 
      ;
      
#line 1322 
      ldv_emg_wrapper_stmmac_change_mtu_6(ldv_15_container,ldv_15_ldv_param_1_8);
      
#line 1328 
      goto ldv_44031;
      case 27: 
#line 1330 
      ;
      
#line 1332 
      ldv_15_ldv_param_2_7 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1333 
      ldv_15_ldv_param_1_6 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1338 
      ldv_emg_wrapper_stmmac_get_ethtool_stats_5(ldv_15_container,ldv_15_ldv_param_1_6,ldv_15_ldv_param_2_7);
      
#line 1342 
      ldv_free((void *)ldv_15_ldv_param_2_7);
      
#line 1343 
      ldv_free((void *)ldv_15_ldv_param_1_6);
      
#line 1346 
      goto ldv_44031;
      case 28: 
#line 1348 
      ;
      
#line 1354 
      ldv_emg_wrapper_stmmac_ethtool_setmsglevel_25(ldv_15_container,ldv_15_ldv_param_1_5);
      
#line 1360 
      goto ldv_44031;
      case 29: 
#line 1362 
      ;
      
#line 1364 
      ldv_15_ldv_param_1_4 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 1369 
      ldv_emg_wrapper_stmmac_get_ts_info_4(ldv_15_container,ldv_15_ldv_param_1_4);
      
#line 1373 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 1376 
      goto ldv_44031;
      case 30: 
#line 1378 
      ;
      
#line 1380 
      ldv_15_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1385 
      ldv_emg_wrapper_stmmac_ethtool_setsettings_3(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1389 
      ldv_free((void *)ldv_15_ldv_param_1_3);
      
#line 1392 
      goto ldv_44031;
      default: 
#line 1394 
      ;
      
#line 1394 
      __VERIFIER_assume(0);
    }
    ldv_44031: 
#line 1397 
    ;
    
#line 1397 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1404 
    goto ldv_call_15;
  }
  else {
    
#line 1412 
    __retres = (void *)0;
    
#line 1412 
    goto return_label;
  }
  
#line 1415 
  __retres = (void *)0;
  return_label: 
#line 1415 
                return __retres;
}


#line 1420  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1423 
  tmp = ldv_undef_int();
  
#line 1423 
  switch (tmp) {
    case 0: 
#line 1424 
    ;
    
#line 1425 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1426 
    __VERIFIER_assume(ret == 0);
    
#line 1427 
    goto ldv_44068;
    default: 
#line 1429 
    ;
    
#line 1429 
    __VERIFIER_assume(0);
  }
  ldv_44068: 
#line 1430 
  ;
  
#line 1431 
  return;
}


#line 1435  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1441 
  ldv_2_netdev = arg0;
  
#line 1442 
  ldv_free((void *)ldv_2_netdev);
  
#line 1446 
  goto return_label;
  return_label: 
#line 1448 
                return;
}


#line 1453  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1459 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_stmmac_interrupt_2;
  
#line 1462 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1467 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1468 
    ldv_14_line = data->arg0;
    
#line 1469 
    ldv_14_callback = data->arg1;
    
#line 1470 
    ldv_14_thread = data->arg2;
    
#line 1471 
    ldv_14_data = data->arg3;
    
#line 1472 
    ldv_free((void *)data);
  }
  else ;
  
#line 1478 
  ldv_switch_to_interrupt_context();
  
#line 1480 
  ldv_14_ret_val = ldv_emg_wrapper_stmmac_interrupt_2(ldv_14_line,ldv_14_data);
  
#line 1482 
  ldv_switch_to_process_context();
  
#line 1485 
  tmp = ldv_undef_int();
  
#line 1485 
  if (tmp != 0) {
    
#line 1487 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1491 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1493 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1500 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1509 
  __retres = (void *)0;
  
#line 1509 
  goto return_label;
  
#line 1511 
  __retres = (void *)0;
  return_label: 
#line 1511 
                return __retres;
}


#line 1516  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/stmicro/stmmac/stmmac.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1523 
  tmp_0 = ldv_undef_int();
  
#line 1523 
  if (tmp_0 != 0) {
    
#line 1525 
    ldv_4_timer_list = arg0;
    
#line 1529 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1533 
    __retres = 0;
    
#line 1533 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1540 
    tmp = ldv_undef_int_negative();
    
#line 1540 
    __retres = tmp;
    
#line 1540 
    goto return_label;
  }
  return_label: 
#line 1523 
                return __retres;
}


