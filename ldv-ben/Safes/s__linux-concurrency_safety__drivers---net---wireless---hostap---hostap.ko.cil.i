/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned char u_char;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_node;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_53 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_19 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_52 __anonCompField_lockref_20 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct path;

#line 51 
struct vfsmount;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_55 {
   u32 hash ;
   u32 len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_54 {
   struct __anonstruct_55 __anonCompField___anonunion_54_21 ;
   u64 hash_len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_54 __anonCompField_qstr_22 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct inode;

#line 90 
struct dentry_operations;

#line 90 
struct super_block;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_56 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_56 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_59 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_59 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_60 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_60 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_61 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_61 nodemask_t;

#line 520 
struct mem_cgroup;

#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 189 
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_63 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_62 {
   struct __anonstruct_63 __anonCompField___anonunion_62_23 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_62 __anonCompField_radix_tree_node_24 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 104 
struct pid_namespace;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 44 
struct vm_area_struct;

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_132 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_131 {
   struct __anonstruct_132 __anonCompField___anonunion_131_25 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_131 __anonCompField_ctl_table_header_26 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_133 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_133 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct bdi_writeback;

#line 62 
struct export_operations;

#line 64 
struct iovec;

#line 65 
struct kiocb;

#line 66 
struct kobject;

#line 67 
struct pipe_inode_info;

#line 68 
struct poll_table_struct;

#line 69 
struct kstatfs;

#line 70 
struct cred;

#line 71 
struct swap_info_struct;

#line 72 
struct iov_iter;

#line 73 
struct vm_fault;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_161 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_161 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_162 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_162 __anonCompField_kqid_38 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526 
struct address_space;

#line 527 
struct writeback_control;

#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_165 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_166 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_167 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_165 __anonCompField_inode_39 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_166 __anonCompField_inode_40 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_167 __anonCompField_inode_41 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_168 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_168 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_170 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_169 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_170 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_169 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct file_system_type;

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 2251 
struct kmem_cache;

#line 3043 
struct proc_dir_entry;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_171 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_171 __anonCompField_iov_iter_42 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_172 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_172 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_173 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_173 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_174 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_174 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_175 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_175 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_176 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_176 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_177 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_177 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_178 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_178 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_179 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_179 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_180 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_181 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_180 ifr_ifrn ;
   union __anonunion_ifr_ifru_181 ifr_ifru ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_188 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_189 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_187 {
   struct __anonstruct_188 __anonCompField___anonunion_187_45 ;
   struct __anonstruct_189 __anonCompField___anonunion_187_46 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_187 __anonCompField_uprobe_task_47 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_190 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_192 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_196 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_195 {
   atomic_t _mapcount ;
   struct __anonstruct_196 __anonCompField___anonunion_195_50 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_194 {
   union __anonunion_195 __anonCompField___anonstruct_194_51 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_193 {
   unsigned long counters ;
   struct __anonstruct_194 __anonCompField___anonunion_193_52 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_191 {
   union __anonunion_192 __anonCompField___anonstruct_191_49 ;
   union __anonunion_193 __anonCompField___anonstruct_191_53 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_198 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_199 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_197 {
   struct list_head lru ;
   struct __anonstruct_198 __anonCompField___anonunion_197_55 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_199 __anonCompField___anonunion_197_56 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_200 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_190 __anonCompField_page_48 ;
   struct __anonstruct_191 __anonCompField_page_54 ;
   union __anonunion_197 __anonCompField_page_57 ;
   union __anonunion_200 __anonCompField_page_58 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_201 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_201 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_203 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_203 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_205 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_206 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_207 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_208 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_210 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_209 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_210 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_211 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_212 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_204 {
   int _pad[28U] ;
   struct __anonstruct__kill_205 _kill ;
   struct __anonstruct__timer_206 _timer ;
   struct __anonstruct__rt_207 _rt ;
   struct __anonstruct__sigchld_208 _sigchld ;
   struct __anonstruct__sigfault_209 _sigfault ;
   struct __anonstruct__sigpoll_211 _sigpoll ;
   struct __anonstruct__sigsys_212 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_204 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_215 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_216 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_218 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_217 {
   struct keyring_index_key index_key ;
   struct __anonstruct_218 __anonCompField___anonunion_217_61 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_219 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_221 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_220 {
   union __anonunion_payload_221 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_215 __anonCompField_key_59 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_216 __anonCompField_key_60 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_217 __anonCompField_key_62 ;
   union __anonunion_type_data_219 type_data ;
   union __anonunion_220 __anonCompField_key_63 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_222 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_222 __anonCompField_idr_layer_64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 331 
struct kernfs_node;

#line 332 
struct kernfs_ops;

#line 333 
struct kernfs_open_file;

#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct kernfs_open_node;

#line 177 
struct kernfs_iattrs;

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_241 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_241 __anonCompField_kernfs_node_68 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_242 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_242 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24298 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_247 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_248 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24298 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_247 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_248 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_251 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_250 {
   u64 v64 ;
   struct __anonstruct_251 __anonCompField___anonunion_250_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_250 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_254 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_253 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_254 __anonCompField___anonstruct_253_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_252 {
   struct __anonstruct_253 __anonCompField___anonunion_252_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_256 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_255 {
   __wsum csum ;
   struct __anonstruct_256 __anonCompField___anonunion_255_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_257 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_258 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_259 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_252 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_255 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_257 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_258 __anonCompField_sk_buff_82 ;
   union __anonunion_259 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct lib80211_crypto_ops {
   char const *name ;
   struct list_head list ;
   void *(*init)(int ) ;
   void (*deinit)(void *) ;
   int (*encrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*encrypt_msdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_msdu)(struct sk_buff *, int , int , void *) ;
   int (*set_key)(void *, int , u8 *, void *) ;
   int (*get_key)(void *, int , u8 *, void *) ;
   void (*print_stats)(struct seq_file *, void *) ;
   unsigned long (*get_flags)(void *) ;
   unsigned long (*set_flags)(unsigned long , void *) ;
   int extra_mpdu_prefix_len ;
   int extra_mpdu_postfix_len ;
   int extra_msdu_prefix_len ;
   int extra_msdu_postfix_len ;
   struct module *owner ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_data {
   struct list_head list ;
   struct lib80211_crypto_ops *ops ;
   void *priv ;
   atomic_t refcnt ;
};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_info {
   char *name ;
   spinlock_t *lock ;
   struct lib80211_crypt_data *crypt[4U] ;
   int tx_keyidx ;
   struct list_head crypt_deinit_list ;
   struct timer_list crypt_deinit_timer ;
   int crypt_quiesced ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct iw_param {
   __s32 value ;
   __u8 fixed ;
   __u8 disabled ;
   __u16 flags ;
};

#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_point {
   void *pointer ;
   __u16 length ;
   __u16 flags ;
};

#line 691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_freq {
   __s32 m ;
   __s16 e ;
   __u8 i ;
   __u8 flags ;
};

#line 708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_quality {
   __u8 qual ;
   __u8 level ;
   __u8 noise ;
   __u8 updated ;
};

#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_discarded {
   __u32 nwid ;
   __u32 code ;
   __u32 fragment ;
   __u32 retries ;
   __u32 misc ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_missed {
   __u32 beacon ;
};

#line 882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_statistics {
   __u16 status ;
   struct iw_quality qual ;
   struct iw_discarded discard ;
   struct iw_missed miss ;
};

#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
union iwreq_data {
   char name[16U] ;
   struct iw_point essid ;
   struct iw_param nwid ;
   struct iw_freq freq ;
   struct iw_param sens ;
   struct iw_param bitrate ;
   struct iw_param txpower ;
   struct iw_param rts ;
   struct iw_param frag ;
   __u32 mode ;
   struct iw_param retry ;
   struct iw_point encoding ;
   struct iw_param power ;
   struct iw_quality qual ;
   struct sockaddr ap_addr ;
   struct sockaddr addr ;
   struct iw_param param ;
   struct iw_point data ;
};

#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_priv_args {
   __u32 cmd ;
   __u16 set_args ;
   __u16 get_args ;
   char name[16U] ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_331 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_331 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28486 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28486 phy_interface_t;

#line 126 
enum ldv_28539 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28539 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30250 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30251 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_344 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_345 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_346 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_344 adj_list ;
   struct __anonstruct_all_adj_list_345 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30250 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30251 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_346 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct iw_request_info {
   __u16 cmd ;
   __u16 flags ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
typedef int (*iw_handler)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_handler_def {
   iw_handler (* const *standard)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   __u16 num_standard ;
   __u16 num_private ;
   __u16 num_private_args ;
   iw_handler (* const *private)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   struct iw_priv_args const *private_args ;
   struct iw_statistics *(*get_wireless_stats)(struct net_device *) ;
};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_spy_data {
   int spy_number ;
   u_char spy_address[8U][6U] ;
   struct iw_quality spy_stat[8U] ;
   struct iw_quality spy_thr_low ;
   struct iw_quality spy_thr_high ;
   u_char spy_thr_under[8U] ;
};

#line 405 
struct libipw_device;

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_public_data {
   struct iw_spy_data *spy_data ;
   struct libipw_device *libipw ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct prism2_download_area {
   u32 addr ;
   u32 len ;
   void *ptr ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct prism2_download_param {
   u32 dl_cmd ;
   u32 start_addr ;
   u32 num_areas ;
   struct prism2_download_area data[0U] ;
};

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_hostscan_result {
   __le16 chid ;
   __le16 anl ;
   __le16 sl ;
   u8 bssid[6U] ;
   __le16 beacon_interval ;
   __le16 capability ;
   __le16 ssid_len ;
   u8 ssid[32U] ;
   u8 sup_rates[10U] ;
   __le16 rate ;
   __le16 atim ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct comm_tallies_sums {
   unsigned int tx_unicast_frames ;
   unsigned int tx_multicast_frames ;
   unsigned int tx_fragments ;
   unsigned int tx_unicast_octets ;
   unsigned int tx_multicast_octets ;
   unsigned int tx_deferred_transmissions ;
   unsigned int tx_single_retry_frames ;
   unsigned int tx_multiple_retry_frames ;
   unsigned int tx_retry_limit_exceeded ;
   unsigned int tx_discards ;
   unsigned int rx_unicast_frames ;
   unsigned int rx_multicast_frames ;
   unsigned int rx_fragments ;
   unsigned int rx_unicast_octets ;
   unsigned int rx_multicast_octets ;
   unsigned int rx_fcs_errors ;
   unsigned int rx_discards_no_buffer ;
   unsigned int tx_discards_wrong_sa ;
   unsigned int rx_discards_wep_undecryptable ;
   unsigned int rx_message_in_msg_fragments ;
   unsigned int rx_message_in_bad_msg_fragments ;
};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_regs {
   u16 cmd ;
   u16 evstat ;
   u16 offset0 ;
   u16 offset1 ;
   u16 swsupport0 ;
};

#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_tx_callback_info {
   u16 idx ;
   void (*func)(struct sk_buff *, int , void *) ;
   void *data ;
   struct hostap_tx_callback_info *next ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct prism2_frag_entry {
   unsigned long first_frag_time ;
   unsigned int seq ;
   unsigned int last_frag ;
   struct sk_buff *skb ;
   u8 src_addr[6U] ;
   u8 dst_addr[6U] ;
};

#line 568 
struct local_info;

#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
typedef struct local_info local_info_t;

#line 575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct prism2_helper_functions {
   int (*card_present)(local_info_t *) ;
   void (*cor_sreset)(local_info_t *) ;
   void (*genesis_reset)(local_info_t *, int ) ;
   int (*cmd)(struct net_device *, u16 , u16 , u16 *, u16 *) ;
   void (*read_regs)(struct net_device *, struct hfa384x_regs *) ;
   int (*get_rid)(struct net_device *, u16 , void *, int , int ) ;
   int (*set_rid)(struct net_device *, u16 , void *, int ) ;
   int (*hw_enable)(struct net_device *, int ) ;
   int (*hw_config)(struct net_device *, int ) ;
   void (*hw_reset)(struct net_device *) ;
   void (*hw_shutdown)(struct net_device *, int ) ;
   int (*reset_port)(struct net_device *) ;
   void (*schedule_reset)(local_info_t *) ;
   int (*download)(local_info_t *, struct prism2_download_param *) ;
   int (*tx)(struct sk_buff *, struct net_device *) ;
   int (*set_tim)(struct net_device *, int , int ) ;
   struct file_operations const *read_aux_fops ;
   int need_tx_headroom ;
   int hw_type ;
};

#line 606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct prism2_download_data_area {
   u32 addr ;
   u32 len ;
   u8 *data ;
};

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct prism2_download_data {
   u32 dl_cmd ;
   u32 start_addr ;
   u32 num_areas ;
   struct prism2_download_data_area data[0U] ;
};

#line 618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_bss_info {
   struct list_head list ;
   unsigned long last_update ;
   unsigned int count ;
   u8 bssid[6U] ;
   u16 capab_info ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   u8 wpa_ie[64U] ;
   size_t wpa_ie_len ;
   u8 rsn_ie[64U] ;
   size_t rsn_ie_len ;
   int chan ;
   int included ;
};

#line 638 
enum ldv_32233 {
    PRISM2_TXPOWER_AUTO = 0,
    PRISM2_TXPOWER_OFF = 1,
    PRISM2_TXPOWER_FIXED = 2,
    PRISM2_TXPOWER_UNKNOWN = 3
};

#line 645 
enum ldv_32234 {
    PRISM2_MONITOR_80211 = 0,
    PRISM2_MONITOR_PRISM = 1,
    PRISM2_MONITOR_CAPHDR = 2,
    PRISM2_MONITOR_RADIOTAP = 3
};

#line 652 
enum ldv_32241 {
    PRISM2_SCAN = 0,
    PRISM2_HOSTSCAN = 1
};

#line 657 
enum ldv_32244 {
    PASSIVE_SCAN_WAIT = 0,
    PASSIVE_SCAN_LISTEN = 1
};

#line 662 
struct ap_data;

#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct local_info {
   struct module *hw_module ;
   int card_idx ;
   int dev_enabled ;
   int master_dev_auto_open ;
   int num_dev_open ;
   struct net_device *dev ;
   struct net_device *ddev ;
   struct list_head hostap_interfaces ;
   rwlock_t iface_lock ;
   spinlock_t cmdlock ;
   spinlock_t baplock ;
   spinlock_t lock ;
   spinlock_t irq_init_lock ;
   struct mutex rid_bap_mtx ;
   u16 infofid ;
   spinlock_t txfidlock ;
   int txfid_len ;
   u16 txfid[8U] ;
   u16 intransmitfid[8U] ;
   int next_txfid ;
   int next_alloc ;
   unsigned long bits ;
   struct ap_data *ap ;
   char essid[33U] ;
   char name[33U] ;
   int name_set ;
   u16 channel_mask ;
   u16 scan_channel_mask ;
   struct comm_tallies_sums comm_tallies ;
   struct proc_dir_entry *proc ;
   int iw_mode ;
   int pseudo_adhoc ;
   char bssid[6U] ;
   int channel ;
   int beacon_int ;
   int dtim_period ;
   int mtu ;
   int frame_dump ;
   int fw_tx_rate_control ;
   u16 tx_rate_control ;
   u16 basic_rates ;
   int hw_resetting ;
   int hw_ready ;
   int hw_reset_tries ;
   int hw_downloading ;
   int shutdown ;
   int pri_only ;
   int no_pri ;
   int sram_type ;
   enum ldv_32233 txpower_type ;
   int txpower ;
   struct list_head cmd_queue ;
   int cmd_queue_len ;
   struct work_struct reset_queue ;
   int is_promisc ;
   struct work_struct set_multicast_list_queue ;
   struct work_struct set_tim_queue ;
   struct list_head set_tim_list ;
   spinlock_t set_tim_lock ;
   int wds_max_connections ;
   int wds_connections ;
   u32 wds_type ;
   u16 tx_control ;
   int manual_retry_count ;
   struct iw_statistics wstats ;
   unsigned long scan_timestamp ;
   enum ldv_32234 monitor_type ;
   int monitor_allow_fcserr ;
   int hostapd ;
   int hostapd_sta ;
   struct net_device *apdev ;
   struct net_device_stats apdevstats ;
   char assoc_ap_addr[6U] ;
   struct net_device *stadev ;
   struct net_device_stats stadevstats ;
   struct lib80211_crypt_info crypt_info ;
   int open_wep ;
   int host_encrypt ;
   int host_decrypt ;
   int privacy_invoked ;
   int fw_encrypt_ok ;
   int bcrx_sta_key ;
   struct prism2_frag_entry frag_cache[4U] ;
   unsigned int frag_next_idx ;
   int ieee_802_1x ;
   int antsel_tx ;
   int antsel_rx ;
   int rts_threshold ;
   int fragm_threshold ;
   int auth_algs ;
   int enh_sec ;
   int tallies32 ;
   struct prism2_helper_functions *func ;
   u8 *pda ;
   int fw_ap ;
   u32 sta_fw_ver ;
   struct tasklet_struct bap_tasklet ;
   struct tasklet_struct info_tasklet ;
   struct sk_buff_head info_list ;
   struct hostap_tx_callback_info *tx_callback ;
   struct tasklet_struct rx_tasklet ;
   struct sk_buff_head rx_list ;
   struct tasklet_struct sta_tx_exc_tasklet ;
   struct sk_buff_head sta_tx_exc_list ;
   int host_roaming ;
   unsigned long last_join_time ;
   struct hfa384x_hostscan_result *last_scan_results ;
   int last_scan_results_count ;
   enum ldv_32241 last_scan_type ;
   struct work_struct info_queue ;
   unsigned long pending_info ;
   int prev_link_status ;
   int prev_linkstatus_connected ;
   u8 preferred_ap[6U] ;
   wait_queue_head_t hostscan_wq ;
   struct timer_list passive_scan_timer ;
   int passive_scan_interval ;
   int passive_scan_channel ;
   enum ldv_32244 passive_scan_state ;
   struct timer_list tick_timer ;
   unsigned long last_tick_timer ;
   unsigned int sw_tick_stuck ;
   unsigned long last_comms_qual_update ;
   int comms_qual ;
   int avg_signal ;
   int avg_noise ;
   struct work_struct comms_qual_update ;
   int rssi_to_dBm ;
   struct list_head bss_list ;
   int num_bss_info ;
   int wpa ;
   int tkip_countermeasures ;
   int drop_unencrypted ;
   u8 *generic_elem ;
   size_t generic_elem_len ;
   struct prism2_download_data *dl_pri ;
   struct prism2_download_data *dl_sec ;
   void *hw_priv ;
};

#line 894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_interface_wds {
   u8 remote_addr[6U] ;
};

#line 911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
union __anonunion_u_364 {
   struct hostap_interface_wds wds ;
};

#line 911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_interface {
   struct list_head list ;
   struct net_device *dev ;
   struct local_info *local ;
   struct net_device_stats stats ;
   struct iw_spy_data spy_data ;
   struct iw_public_data wireless_data ;
   int type ;
   union __anonunion_u_364 u ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
enum ldv_32321 {
    STA_NULLFUNC = 0,
    STA_DISASSOC = 1,
    STA_DEAUTH = 2
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
struct __anonstruct_sta_377 {
   char *challenge ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
struct __anonstruct_ap_378 {
   int ssid_len ;
   unsigned char ssid[33U] ;
   int channel ;
   unsigned long last_beacon ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
union __anonunion_u_376 {
   struct __anonstruct_sta_377 sta ;
   struct __anonstruct_ap_378 ap ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
struct sta_info {
   struct list_head list ;
   struct sta_info *hnext ;
   atomic_t users ;
   struct proc_dir_entry *proc ;
   u8 addr[6U] ;
   u16 aid ;
   u32 flags ;
   u16 capability ;
   u16 listen_interval ;
   u8 supported_rates[32U] ;
   unsigned long last_auth ;
   unsigned long last_assoc ;
   unsigned long last_rx ;
   unsigned long last_tx ;
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   struct sk_buff_head tx_buf ;
   s8 last_rx_silence ;
   s8 last_rx_signal ;
   u8 last_rx_rate ;
   u8 last_rx_updated ;
   u8 tx_supp_rates ;
   u8 tx_rate ;
   u8 tx_rate_idx ;
   u8 tx_max_rate ;
   u32 tx_count[4U] ;
   u32 rx_count[4U] ;
   u32 tx_since_last_failure ;
   u32 tx_consecutive_exc ;
   struct lib80211_crypt_data *crypt ;
   int ap ;
   local_info_t *local ;
   union __anonunion_u_376 u ;
   struct timer_list timer ;
   enum ldv_32321 timeout_next ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
enum ldv_32322 {
    AP_OTHER_AP_SKIP_ALL = 0,
    AP_OTHER_AP_SAME_SSID = 1,
    AP_OTHER_AP_ALL = 2,
    AP_OTHER_AP_EVEN_IBSS = 3
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
typedef enum ldv_32322 ap_policy_enum;

#line 141 
enum ldv_32328 {
    MAC_POLICY_OPEN = 0,
    MAC_POLICY_ALLOW = 1,
    MAC_POLICY_DENY = 2
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct mac_restrictions {
   enum ldv_32328 policy ;
   unsigned int entries ;
   struct list_head mac_list ;
   spinlock_t lock ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct add_sta_proc_data {
   u8 addr[6U] ;
   struct add_sta_proc_data *next ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
typedef int wds_oper_type;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct wds_oper_data {
   wds_oper_type type ;
   u8 addr[6U] ;
   struct wds_oper_data *next ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct ap_data {
   int initialized ;
   local_info_t *local ;
   int bridge_packets ;
   unsigned int bridged_unicast ;
   unsigned int bridged_multicast ;
   unsigned int tx_drop_nonassoc ;
   int nullfunc_ack ;
   spinlock_t sta_table_lock ;
   int num_sta ;
   struct list_head sta_list ;
   struct sta_info *sta_hash[256U] ;
   struct proc_dir_entry *proc ;
   ap_policy_enum ap_policy ;
   unsigned int max_inactivity ;
   int autom_ap_wds ;
   struct mac_restrictions mac_restrictions ;
   int last_tx_rate ;
   struct work_struct add_sta_proc_queue ;
   struct add_sta_proc_data *add_sta_proc_entries ;
   struct work_struct wds_oper_queue ;
   struct wds_oper_data *wds_oper_entries ;
   u16 tx_callback_idx ;
   struct sta_info *sta_aid[128U] ;
   u16 tx_callback_auth ;
   u16 tx_callback_assoc ;
   u16 tx_callback_poll ;
   struct lib80211_crypto_ops *crypt ;
   void *crypt_priv ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __be64;

#line 2893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_auth_733 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_deauth_734 {
   __le16 reason_code ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_assoc_req_735 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_assoc_resp_736 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_reassoc_resp_737 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_reassoc_req_738 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_disassoc_739 {
   __le16 reason_code ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_probe_req_740 {
   
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_beacon_741 {
   u8 timestamp[8U] ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct __anonstruct_probe_resp_742 {
   u8 timestamp[8U] ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
union __anonunion_u_732 {
   struct __anonstruct_auth_733 auth ;
   struct __anonstruct_deauth_734 deauth ;
   struct __anonstruct_assoc_req_735 assoc_req ;
   struct __anonstruct_assoc_resp_736 assoc_resp ;
   struct __anonstruct_reassoc_resp_737 reassoc_resp ;
   struct __anonstruct_reassoc_req_738 reassoc_req ;
   struct __anonstruct_disassoc_739 disassoc ;
   struct __anonstruct_probe_req_740 probe_req ;
   struct __anonstruct_beacon_741 beacon ;
   struct __anonstruct_probe_resp_742 probe_resp ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
struct hostap_ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_732 u ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
struct hostap_80211_rx_status {
   u32 mac_time ;
   u8 signal ;
   u8 noise ;
   u16 rate ;
};

#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct ieee80211_radiotap_header {
   u8 it_version ;
   u8 it_pad ;
   __le16 it_len ;
   __le32 it_present ;
};

#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct linux_wlan_ng_val {
   u32 did ;
   u16 status ;
   u16 len ;
   u32 data ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct linux_wlan_ng_prism_hdr {
   u32 msgcode ;
   u32 msglen ;
   char devname[16U] ;
   struct linux_wlan_ng_val hosttime ;
   struct linux_wlan_ng_val mactime ;
   struct linux_wlan_ng_val channel ;
   struct linux_wlan_ng_val rssi ;
   struct linux_wlan_ng_val sq ;
   struct linux_wlan_ng_val signal ;
   struct linux_wlan_ng_val noise ;
   struct linux_wlan_ng_val rate ;
   struct linux_wlan_ng_val istx ;
   struct linux_wlan_ng_val frmlen ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct linux_wlan_ng_cap_hdr {
   __be32 version ;
   __be32 length ;
   __be64 mactime ;
   __be64 hosttime ;
   __be32 phytype ;
   __be32 channel ;
   __be32 datarate ;
   __be32 antenna ;
   __be32 priority ;
   __be32 ssi_type ;
   __be32 ssi_signal ;
   __be32 ssi_noise ;
   __be32 preamble ;
   __be32 encoding ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_radiotap_rx {
   struct ieee80211_radiotap_header hdr ;
   __le64 tsft ;
   u8 rate ;
   u8 padding ;
   __le16 chan_freq ;
   __le16 chan_flags ;
   s8 dbm_antsignal ;
   s8 dbm_antnoise ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
typedef int ap_rx_ret;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_13274 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 1080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_event {
   __u16 len ;
   __u16 cmd ;
   union iwreq_data u ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_add_sta_1113 {
   u16 aid ;
   u16 capability ;
   u8 tx_supp_rates ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_get_info_sta_1114 {
   u32 inactive_sec ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_crypt_1115 {
   u8 alg[16U] ;
   u32 flags ;
   u32 err ;
   u8 idx ;
   u8 seq[8U] ;
   u16 key_len ;
   u8 key[0U] ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_set_flags_sta_1116 {
   u32 flags_and ;
   u32 flags_or ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_rid_1117 {
   u16 rid ;
   u16 len ;
   u8 data[0U] ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_generic_elem_1118 {
   u8 len ;
   u8 data[0U] ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_mlme_1119 {
   u16 cmd ;
   u16 reason_code ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct __anonstruct_scan_req_1120 {
   u8 ssid_len ;
   u8 ssid[32U] ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
union __anonunion_u_1112 {
   struct __anonstruct_add_sta_1113 add_sta ;
   struct __anonstruct_get_info_sta_1114 get_info_sta ;
   struct __anonstruct_crypt_1115 crypt ;
   struct __anonstruct_set_flags_sta_1116 set_flags_sta ;
   struct __anonstruct_rid_1117 rid ;
   struct __anonstruct_generic_elem_1118 generic_elem ;
   struct __anonstruct_mlme_1119 mlme ;
   struct __anonstruct_scan_req_1120 scan_req ;
};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct prism2_hostapd_param {
   u32 cmd ;
   u8 sta_addr[6U] ;
   union __anonunion_u_1112 u ;
};

#line 913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hostap_skb_tx_data {
   unsigned int __padding_for_default_qdiscs ;
   u32 magic ;
   u8 rate ;
   u8 flags ;
   u16 tx_cb_idx ;
   struct hostap_interface *iface ;
   unsigned long jiffies ;
   unsigned short ethertype ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct mac_entry {
   struct list_head list ;
   u8 addr[6U] ;
};

#line 224 
enum ldv_32788 {
    AP_TX_CONTINUE = 0,
    AP_TX_DROP = 1,
    AP_TX_RETRY = 2,
    AP_TX_BUFFERED = 3,
    AP_TX_CONTINUE_NOT_AUTHORIZED = 4
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
typedef enum ldv_32788 ap_tx_ret;

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
struct hostap_tx_data {
   struct sk_buff *skb ;
   int host_encrypt ;
   struct lib80211_crypt_data *crypt ;
   void *sta_ptr ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11490 {
    WORK_STRUCT_PENDING_BIT_0 = 0,
    WORK_STRUCT_DELAYED_BIT_0 = 1,
    WORK_STRUCT_PWQ_BIT_0 = 2,
    WORK_STRUCT_LINKED_BIT_0 = 3,
    WORK_STRUCT_STATIC_BIT_0 = 4,
    WORK_STRUCT_COLOR_SHIFT_0 = 5,
    WORK_STRUCT_COLOR_BITS_0 = 4,
    WORK_STRUCT_PENDING_0 = 1,
    WORK_STRUCT_DELAYED_0 = 2,
    WORK_STRUCT_PWQ_0 = 4,
    WORK_STRUCT_LINKED_0 = 8,
    WORK_STRUCT_STATIC_0 = 16,
    WORK_NR_COLORS_0 = 15,
    WORK_NO_COLOR_0 = 15,
    WORK_CPU_UNBOUND_0 = 8192,
    WORK_STRUCT_FLAG_BITS_0 = 9,
    WORK_OFFQ_FLAG_BASE_0 = 5,
    __WORK_OFFQ_CANCELING_0 = 5,
    WORK_OFFQ_CANCELING_0 = 32,
    WORK_OFFQ_FLAG_BITS_0 = 1,
    WORK_OFFQ_POOL_SHIFT_0 = 6,
    WORK_OFFQ_LEFT_0 = 58,
    WORK_OFFQ_POOL_BITS_0 = 31,
    WORK_OFFQ_POOL_NONE_0 = 2147483647,
    WORK_STRUCT_FLAG_MASK_0 = 511,
    WORK_STRUCT_WQ_DATA_MASK_0 = -512,
    WORK_STRUCT_NO_POOL_0 = 137438953408,
    WORK_BUSY_PENDING_0 = 1,
    WORK_BUSY_RUNNING_0 = 2,
    WORKER_DESC_LEN_0 = 24
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_join_request {
   u8 bssid[6U] ;
   __le16 channel ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_info_frame {
   __le16 len ;
   __le16 type ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_comm_tallies {
   __le16 tx_unicast_frames ;
   __le16 tx_multicast_frames ;
   __le16 tx_fragments ;
   __le16 tx_unicast_octets ;
   __le16 tx_multicast_octets ;
   __le16 tx_deferred_transmissions ;
   __le16 tx_single_retry_frames ;
   __le16 tx_multiple_retry_frames ;
   __le16 tx_retry_limit_exceeded ;
   __le16 tx_discards ;
   __le16 rx_unicast_frames ;
   __le16 rx_multicast_frames ;
   __le16 rx_fragments ;
   __le16 rx_unicast_octets ;
   __le16 rx_multicast_octets ;
   __le16 rx_fcs_errors ;
   __le16 rx_discards_no_buffer ;
   __le16 tx_discards_wrong_sa ;
   __le16 rx_discards_wep_undecryptable ;
   __le16 rx_message_in_msg_fragments ;
   __le16 rx_message_in_bad_msg_fragments ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_comm_tallies32 {
   __le32 tx_unicast_frames ;
   __le32 tx_multicast_frames ;
   __le32 tx_fragments ;
   __le32 tx_unicast_octets ;
   __le32 tx_multicast_octets ;
   __le32 tx_deferred_transmissions ;
   __le32 tx_single_retry_frames ;
   __le32 tx_multiple_retry_frames ;
   __le32 tx_retry_limit_exceeded ;
   __le32 tx_discards ;
   __le32 rx_unicast_frames ;
   __le32 rx_multicast_frames ;
   __le32 rx_fragments ;
   __le32 rx_unicast_octets ;
   __le32 rx_multicast_octets ;
   __le32 rx_fcs_errors ;
   __le32 rx_discards_no_buffer ;
   __le32 tx_discards_wrong_sa ;
   __le32 rx_discards_wep_undecryptable ;
   __le32 rx_message_in_msg_fragments ;
   __le32 rx_message_in_bad_msg_fragments ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_scan_result {
   __le16 chid ;
   __le16 anl ;
   __le16 sl ;
   u8 bssid[6U] ;
   __le16 beacon_interval ;
   __le16 capability ;
   __le16 ssid_len ;
   u8 ssid[32U] ;
   u8 sup_rates[10U] ;
   __le16 rate ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_1686 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_1686 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_common.h"
struct hfa384x_comms_quality {
   __le16 comm_qual ;
   __le16 signal_level ;
   __le16 noise_level ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_rx_frame {
   __le16 status ;
   __le32 time ;
   u8 silence ;
   u8 signal ;
   u8 rate ;
   u8 rxflow ;
   __le32 reserved ;
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
   __le16 data_len ;
   u8 dst_addr[6U] ;
   u8 src_addr[6U] ;
   __be16 len ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_tx_frame {
   __le16 status ;
   __le16 reserved1 ;
   __le16 reserved2 ;
   __le32 sw_support ;
   u8 retry_count ;
   u8 tx_rate ;
   __le16 tx_control ;
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
   __le16 data_len ;
   u8 dst_addr[6U] ;
   u8 src_addr[6U] ;
   __be16 len ;
};

#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
enum ldv_33037 {
    NONE = 0,
    WEP = 1,
    OTHER = 2
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_2120 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_2120 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
enum ldv_32449 {
    WDS_NO = 0,
    WDS_OWN_FRAME = 1,
    WDS_COMPLIANT_FRAME = 2
};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_2317 {
   unsigned long seg ;
};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_2317 mm_segment_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
struct thread_info {
   struct task_struct *task ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int saved_preempt_count ;
   mm_segment_t addr_limit ;
   void *sysenter_return ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sig_on_uaccess_error : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uaccess_err : 1 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_scan_req {
   __u8 scan_type ;
   __u8 essid_len ;
   __u8 num_channels ;
   __u8 flags ;
   struct sockaddr bssid ;
   __u8 essid[32U] ;
   __u32 min_channel_time ;
   __u32 max_channel_time ;
   struct iw_freq channel_list[32U] ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_encode_ext {
   __u32 ext_flags ;
   __u8 tx_seq[8U] ;
   __u8 rx_seq[8U] ;
   struct sockaddr addr ;
   __u16 alg ;
   __u16 key_len ;
   __u8 key[0U] ;
};

#line 842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_mlme {
   __u16 cmd ;
   __u16 reason_code ;
   struct sockaddr addr ;
};

#line 940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
union __anonunion_ifr_ifrn_2649 {
   char ifrn_name[16U] ;
};

#line 940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iwreq {
   union __anonunion_ifr_ifrn_2649 ifr_ifrn ;
   union iwreq_data u ;
};

#line 957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_range {
   __u32 throughput ;
   __u32 min_nwid ;
   __u32 max_nwid ;
   __u16 old_num_channels ;
   __u8 old_num_frequency ;
   __u8 scan_capa ;
   __u32 event_capa[6U] ;
   __s32 sensitivity ;
   struct iw_quality max_qual ;
   struct iw_quality avg_qual ;
   __u8 num_bitrates ;
   __s32 bitrate[32U] ;
   __s32 min_rts ;
   __s32 max_rts ;
   __s32 min_frag ;
   __s32 max_frag ;
   __s32 min_pmp ;
   __s32 max_pmp ;
   __s32 min_pmt ;
   __s32 max_pmt ;
   __u16 pmp_flags ;
   __u16 pmt_flags ;
   __u16 pm_capa ;
   __u16 encoding_size[8U] ;
   __u8 num_encoding_sizes ;
   __u8 max_encoding_tokens ;
   __u8 encoding_login_index ;
   __u16 txpower_capa ;
   __u8 num_txpower ;
   __s32 txpower[8U] ;
   __u8 we_version_compiled ;
   __u8 we_version_source ;
   __u16 retry_capa ;
   __u16 retry_flags ;
   __u16 r_time_flags ;
   __s32 min_retry ;
   __s32 max_retry ;
   __s32 min_r_time ;
   __s32 max_r_time ;
   __u16 num_channels ;
   __u8 num_frequency ;
   struct iw_freq freq[32U] ;
   __u32 enc_capa ;
};

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_scan_request {
   __le16 channel_list ;
   __le16 txrate ;
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_wlan.h"
struct hfa384x_hostscan_request {
   __le16 channel_list ;
   __le16 txrate ;
   __le16 target_ssid_len ;
   u8 target_ssid[32U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_del_timer_3 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_traverse_kernel_items_scenario_11 {
   struct seq_operations *arg1 ;
   struct seq_file *arg0 ;
   int signal_pending ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_api_smp.h"
void _raw_read_lock_bh(rwlock_t *);


#line 32 
void _raw_read_unlock_bh(rwlock_t *);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_76(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 1207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
__inline static struct inode *file_inode(struct file const *f)
{
  struct inode *__retres;
  
#line 1209 
  __retres = f->f_inode;
  
#line 1209 
  return __retres;
}


#line 2662 
loff_t generic_file_llseek(struct file *, loff_t, int);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct proc_dir_entry *proc_mkdir(char const *, struct proc_dir_entry *);


#line 25 
struct proc_dir_entry *proc_create_data(char const *, umode_t, struct proc_dir_entry *, struct file_operations const *, void *);


#line 39 
void *PDE_DATA(struct inode const *);


#line 41 
void proc_remove(struct proc_dir_entry *);


#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 664 
void copy_to_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
static int ldv_seq_open_72(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 120 
static int ldv_seq_open_75(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 124 
static int ldv_seq_open_78(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 126 
ssize_t seq_read(struct file *, char *, size_t, loff_t *);


#line 127 
loff_t seq_lseek(struct file *, loff_t, int);


#line 128 
int seq_release(struct inode *, struct file *);


#line 130 
int seq_putc(struct seq_file *, char);


#line 134 
int seq_printf(struct seq_file *, char const * , ...);


#line 143 
int single_open(struct file *, int (*)(struct seq_file *, void *), void *);


#line 145 
int single_release(struct inode *, struct file *);


#line 192 
struct list_head *seq_list_start(struct list_head *, loff_t);


#line 194 
struct list_head *seq_list_start_head(struct list_head *, loff_t);


#line 196 
struct list_head *seq_list_next(void *, struct list_head *, loff_t *);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
struct proc_dir_entry *hostap_proc;


#line 77 
void hostap_init_proc(local_info_t *local);


#line 78 
void hostap_remove_proc(local_info_t *local);


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_debug_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  int i;
  
#line 17 
  local_info_t *local = (local_info_t *)m->private;
  
#line 20 
  seq_printf(m,"next_txfid=%d next_alloc=%d\n",local->next_txfid,local->next_alloc);
  
#line 22 
  i = 0;
  
#line 22 
  goto ldv_46085;
  ldv_46084: 
#line 23 
  ;
  
#line 23 
  seq_printf(m,"FID: tx=%04X intransmit=%04X\n",(int)local->txfid[i],(int)local->intransmitfid[i]);
  
#line 22 
  i += 1;
  ldv_46085: 
#line 23 
  ;
  
#line 22 
  if (i <= 7) 
#line 24 
              goto ldv_46084; else 
#line 27 
                                   goto ldv_46086;
  ldv_46086: 
#line 28 
  ;
  
#line 25 
  seq_printf(m,"FW TX rate control: %d\n",local->fw_tx_rate_control);
  
#line 26 
  seq_printf(m,"beacon_int=%d\n",local->beacon_int);
  
#line 27 
  seq_printf(m,"dtim_period=%d\n",local->dtim_period);
  
#line 28 
  seq_printf(m,"wds_max_connections=%d\n",local->wds_max_connections);
  
#line 29 
  seq_printf(m,"dev_enabled=%d\n",local->dev_enabled);
  
#line 30 
  seq_printf(m,"sw_tick_stuck=%d\n",local->sw_tick_stuck);
  
#line 31 
  i = 0;
  
#line 31 
  goto ldv_46088;
  ldv_46087: 
#line 32 
  ;
  
#line 32 
  if (local->crypt_info.crypt[i] != (struct lib80211_crypt_data *)0 && (local->crypt_info.crypt[i])->ops != (struct lib80211_crypto_ops *)0) 
    
#line 34 
    seq_printf(m,"crypt[%d]=%s\n",i,((local->crypt_info.crypt[i])->ops)->name); else ;
  
#line 31 
  i += 1;
  ldv_46088: 
#line 32 
  ;
  
#line 31 
  if (i <= 3) 
#line 33 
              goto ldv_46087; else 
#line 36 
                                   goto ldv_46089;
  ldv_46089: 
#line 37 
  ;
  
#line 38 
  seq_printf(m,"pri_only=%d\n",local->pri_only);
  
#line 39 
  seq_printf(m,"pci=%d\n",(local->func)->hw_type == (unsigned int)2);
  
#line 40 
  seq_printf(m,"sram_type=%d\n",local->sram_type);
  
#line 41 
  seq_printf(m,"no_pri=%d\n",local->no_pri);
  
#line 43 
  __retres = 0;
  
#line 43 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_debug_proc_open(struct inode *inode, struct file *file)
{
  int tmp_0;
  void *tmp;
  
#line 48 
  tmp = PDE_DATA((struct inode const *)inode);
  
#line 48 
  ;
  
#line 48 
  tmp_0 = single_open(file,& prism2_debug_proc_show,tmp);
  
#line 48 
  return tmp_0;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_debug_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_debug_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_stats_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  
#line 62 
  local_info_t *local = (local_info_t *)m->private;
  
#line 63 
  struct comm_tallies_sums *sums = & local->comm_tallies;
  
#line 65 
  seq_printf(m,"TxUnicastFrames=%u\n",sums->tx_unicast_frames);
  
#line 66 
  seq_printf(m,"TxMulticastframes=%u\n",sums->tx_multicast_frames);
  
#line 67 
  seq_printf(m,"TxFragments=%u\n",sums->tx_fragments);
  
#line 68 
  seq_printf(m,"TxUnicastOctets=%u\n",sums->tx_unicast_octets);
  
#line 69 
  seq_printf(m,"TxMulticastOctets=%u\n",sums->tx_multicast_octets);
  
#line 70 
  seq_printf(m,"TxDeferredTransmissions=%u\n",sums->tx_deferred_transmissions);
  
#line 72 
  seq_printf(m,"TxSingleRetryFrames=%u\n",sums->tx_single_retry_frames);
  
#line 73 
  seq_printf(m,"TxMultipleRetryFrames=%u\n",sums->tx_multiple_retry_frames);
  
#line 75 
  seq_printf(m,"TxRetryLimitExceeded=%u\n",sums->tx_retry_limit_exceeded);
  
#line 77 
  seq_printf(m,"TxDiscards=%u\n",sums->tx_discards);
  
#line 78 
  seq_printf(m,"RxUnicastFrames=%u\n",sums->rx_unicast_frames);
  
#line 79 
  seq_printf(m,"RxMulticastFrames=%u\n",sums->rx_multicast_frames);
  
#line 80 
  seq_printf(m,"RxFragments=%u\n",sums->rx_fragments);
  
#line 81 
  seq_printf(m,"RxUnicastOctets=%u\n",sums->rx_unicast_octets);
  
#line 82 
  seq_printf(m,"RxMulticastOctets=%u\n",sums->rx_multicast_octets);
  
#line 83 
  seq_printf(m,"RxFCSErrors=%u\n",sums->rx_fcs_errors);
  
#line 84 
  seq_printf(m,"RxDiscardsNoBuffer=%u\n",sums->rx_discards_no_buffer);
  
#line 85 
  seq_printf(m,"TxDiscardsWrongSA=%u\n",sums->tx_discards_wrong_sa);
  
#line 86 
  seq_printf(m,"RxDiscardsWEPUndecryptable=%u\n",sums->rx_discards_wep_undecryptable);
  
#line 88 
  seq_printf(m,"RxMessageInMsgFragments=%u\n",sums->rx_message_in_msg_fragments);
  
#line 90 
  seq_printf(m,"RxMessageInBadMsgFragments=%u\n",sums->rx_message_in_bad_msg_fragments);
  
#line 94 
  __retres = 0;
  
#line 94 
  return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_stats_proc_open(struct inode *inode, struct file *file)
{
  int tmp_0;
  void *tmp;
  
#line 99 
  tmp = PDE_DATA((struct inode const *)inode);
  
#line 99 
  ;
  
#line 99 
  tmp_0 = single_open(file,& prism2_stats_proc_show,tmp);
  
#line 99 
  return tmp_0;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_stats_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_stats_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_wds_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  struct hostap_interface *iface;
  struct hostap_interface *tmp;
  
#line 112 
  struct list_head *ptr = (struct list_head *)v;
  {
    
#line 115 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 115 
    tmp = (struct hostap_interface *)__mptr;
  }
  
#line 115 
  iface = tmp;
  
#line 116 
  if (iface->type == (unsigned int)4) 
#line 117 
                                      seq_printf(m,"%s\t%pM\n",(char *)(& (iface->dev)->name),(u8 *)(& iface->u.wds.remote_addr)); else ;
  
#line 119 
  __retres = 0;
  
#line 119 
  return __retres;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_wds_proc_start(struct seq_file *m, loff_t *_pos)
{
  void *tmp;
  
#line 124 
  local_info_t *local = (local_info_t *)m->private;
  
#line 125 
  _raw_read_lock_bh(& local->iface_lock);
  
#line 126 
  tmp = (void *)seq_list_start(& local->hostap_interfaces,*_pos);
  
#line 126 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_wds_proc_next(struct seq_file *m, void *v, loff_t *_pos)
{
  void *tmp;
  
#line 131 
  local_info_t *local = (local_info_t *)m->private;
  
#line 132 
  tmp = (void *)seq_list_next(v,& local->hostap_interfaces,_pos);
  
#line 132 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void prism2_wds_proc_stop(struct seq_file *m, void *v)
{
  
#line 137 
  local_info_t *local = (local_info_t *)m->private;
  
#line 138 
  _raw_read_unlock_bh(& local->iface_lock);
  
#line 139 
  return;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct seq_operations const prism2_wds_proc_seqops = {.start = & prism2_wds_proc_start, .stop = & prism2_wds_proc_stop, .next = & prism2_wds_proc_next, .show = & prism2_wds_proc_show};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_wds_proc_open(struct inode *inode, struct file *file)
{
  
#line 150 
  int ret = ldv_seq_open_72(file,& prism2_wds_proc_seqops);
  
#line 151 
  if (ret == 0) {
    
#line 152 
    struct seq_file *m = (struct seq_file *)file->private_data;
    
#line 153 
    m->private = PDE_DATA((struct inode const *)inode);
  }
  else ;
  
#line 155 
  return ret;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_wds_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_wds_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_bss_list_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  struct hostap_bss_info *bss;
  struct hostap_bss_info *tmp;
  
#line 168 
  local_info_t *local = (local_info_t *)m->private;
  
#line 169 
  struct list_head *ptr = (struct list_head *)v;
  
#line 172 
  if (& local->bss_list == ptr) {
    
#line 173 
    seq_printf(m,"#BSSID\tlast_update\tcount\tcapab_info\tSSID(txt)\t");
    
#line 175 
    __retres = 0;
    
#line 175 
    goto return_label;
  }
  else ;
  {
    
#line 178 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 178 
    tmp = (struct hostap_bss_info *)__mptr;
  }
  
#line 178 
  bss = tmp;
  
#line 179 
  seq_printf(m,"%pM\t%lu\t%u\t0x%x\t",(u8 *)(& bss->bssid),bss->last_update,bss->count,(int)bss->capab_info);
  
#line 183 
  seq_printf(m,"%*pE",(int)bss->ssid_len,(u8 *)(& bss->ssid));
  
#line 185 
  seq_putc(m,(char)9);
  
#line 186 
  seq_printf(m,"%*phN",(int)bss->ssid_len,(u8 *)(& bss->ssid));
  
#line 187 
  seq_putc(m,(char)9);
  
#line 188 
  seq_printf(m,"%*phN",(int)bss->wpa_ie_len,(u8 *)(& bss->wpa_ie));
  
#line 189 
  seq_putc(m,(char)10);
  
#line 190 
  __retres = 0;
  return_label: 
#line 190 
                return __retres;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_bss_list_proc_start(struct seq_file *m, loff_t *_pos)
{
  void *tmp;
  
#line 195 
  local_info_t *local = (local_info_t *)m->private;
  
#line 196 
  ldv_spin_lock_bh_73(& local->lock);
  
#line 197 
  tmp = (void *)seq_list_start_head(& local->bss_list,*_pos);
  
#line 197 
  return tmp;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_bss_list_proc_next(struct seq_file *m, void *v, loff_t *_pos)
{
  void *tmp;
  
#line 202 
  local_info_t *local = (local_info_t *)m->private;
  
#line 203 
  tmp = (void *)seq_list_next(v,& local->bss_list,_pos);
  
#line 203 
  return tmp;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void prism2_bss_list_proc_stop(struct seq_file *m, void *v)
{
  
#line 208 
  local_info_t *local = (local_info_t *)m->private;
  
#line 209 
  ldv_spin_unlock_bh_74(& local->lock);
  
#line 210 
  return;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct seq_operations const prism2_bss_list_proc_seqops = {.start = & prism2_bss_list_proc_start, .stop = & prism2_bss_list_proc_stop, .next = & prism2_bss_list_proc_next, .show = & prism2_bss_list_proc_show};

#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_bss_list_proc_open(struct inode *inode, struct file *file)
{
  
#line 221 
  int ret = ldv_seq_open_75(file,& prism2_bss_list_proc_seqops);
  
#line 222 
  if (ret == 0) {
    
#line 223 
    struct seq_file *m = (struct seq_file *)file->private_data;
    
#line 224 
    m->private = PDE_DATA((struct inode const *)inode);
  }
  else ;
  
#line 226 
  return ret;
}


#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_bss_list_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_bss_list_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_crypt_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  int i;
  
#line 239 
  local_info_t *local = (local_info_t *)m->private;
  
#line 242 
  seq_printf(m,"tx_keyidx=%d\n",local->crypt_info.tx_keyidx);
  
#line 243 
  i = 0;
  
#line 243 
  goto ldv_46178;
  ldv_46177: 
#line 244 
  ;
  
#line 244 
  if ((local->crypt_info.crypt[i] != (struct lib80211_crypt_data *)0 && (local->crypt_info.crypt[i])->ops != (struct lib80211_crypto_ops *)0) && ((local->crypt_info.crypt[i])->ops)->print_stats != (void (*)(struct seq_file *, void *))0) 
    
#line 247 
    (*(((local->crypt_info.crypt[i])->ops)->print_stats))(m,(local->crypt_info.crypt[i])->priv); else ;
  
#line 243 
  i += 1;
  ldv_46178: 
#line 244 
  ;
  
#line 243 
  if (i <= 3) 
#line 245 
              goto ldv_46177; else 
#line 248 
                                   goto ldv_46179;
  ldv_46179: 
#line 249 
  ;
  
#line 251 
  __retres = 0;
  
#line 251 
  return __retres;
}


#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_crypt_proc_open(struct inode *inode, struct file *file)
{
  int tmp_0;
  void *tmp;
  
#line 256 
  tmp = PDE_DATA((struct inode const *)inode);
  
#line 256 
  ;
  
#line 256 
  tmp_0 = single_open(file,& prism2_crypt_proc_show,tmp);
  
#line 256 
  return tmp_0;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_crypt_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_crypt_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static ssize_t prism2_pda_proc_read(struct file *file, char *buf, size_t count, loff_t *_pos)
{
  ssize_t __retres;
  local_info_t *tmp_0;
  struct inode *tmp;
  size_t off;
  unsigned long tmp_1;
  
#line 270 
  tmp = file_inode((struct file const *)file);
  
#line 270 
  tmp_0 = (local_info_t *)PDE_DATA((struct inode const *)tmp);
  
#line 270 
  local_info_t *local = tmp_0;
  
#line 273 
  if (local->pda == (u8 *)0U || *_pos > 1023LL) {
    
#line 274 
    __retres = 0L;
    
#line 274 
    goto return_label;
  }
  else ;
  
#line 276 
  off = (unsigned long)*_pos;
  
#line 277 
  if (1024UL - off < count) 
#line 278 
                            count = 1024UL - off; else ;
  
#line 279 
  tmp_1 = copy_to_user((void *)buf,(void const *)(local->pda + off),count);
  
#line 279 
  if (tmp_1 != 0UL) {
    
#line 280 
    __retres = -14L;
    
#line 280 
    goto return_label;
  }
  else ;
  
#line 281 
  *_pos = (long long)((unsigned long long)*_pos + (unsigned long long)count);
  
#line 282 
  __retres = (long)count;
  return_label: 
#line 282 
                return __retres;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_pda_proc_fops = {.owner = (struct module *)0, .llseek = & generic_file_llseek, .read = & prism2_pda_proc_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = (int (*)(struct inode *, struct file *))0, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static ssize_t prism2_aux_dump_proc_no_read(struct file *file, char *buf, size_t bufsize, loff_t *_pos)
{
  ssize_t __retres;
  
#line 294 
  __retres = 0L;
  
#line 294 
  return __retres;
}


#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_aux_dump_proc_fops = {.owner = (struct module *)0, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & prism2_aux_dump_proc_no_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = (int (*)(struct inode *, struct file *))0, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_scan_results_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  unsigned long entry;
  int i;
  int len;
  struct hfa384x_hostscan_result *scanres;
  u8 *p;
  
#line 344 
  local_info_t *local = (local_info_t *)m->private;
  
#line 350 
  if (v == (void *)1) {
    
#line 351 
    seq_printf(m,"CHID ANL SL BcnInt Capab Rate BSSID ATIM SupRates SSID\n");
    
#line 353 
    __retres = 0;
    
#line 353 
    goto return_label;
  }
  else ;
  
#line 356 
  entry = (unsigned long)v + 18446744073709551614UL;
  
#line 357 
  scanres = local->last_scan_results + entry;
  
#line 359 
  seq_printf(m,"%d %d %d %d 0x%02x %d %pM %d ",(int)scanres->chid,(int)((short)scanres->anl),(int)((short)scanres->sl),(int)scanres->beacon_interval,(int)scanres->capability,(int)scanres->rate,(u8 *)(& scanres->bssid),(int)scanres->atim);
  
#line 369 
  p = (u8 *)(& scanres->sup_rates);
  
#line 370 
  i = 0;
  
#line 370 
  goto ldv_46213;
  ldv_46212: 
#line 371 
  ;
  
#line 371 
  if ((unsigned int)*(p + i) == 0U) 
#line 372 
                                    goto ldv_46211; else ;
  
#line 373 
  seq_printf(m,"<%02x>",(int)*(p + i));
  
#line 370 
  i += 1;
  ldv_46213: 
#line 371 
  ;
  
#line 370 
  if ((unsigned int)i <= 9U) 
#line 372 
                             goto ldv_46212; else 
#line 375 
                                                  goto ldv_46211;
  ldv_46211: 
#line 376 
  ;
  
#line 375 
  seq_putc(m,(char)32);
  
#line 377 
  p = (u8 *)(& scanres->ssid);
  
#line 378 
  len = (int)scanres->ssid_len;
  
#line 379 
  if (len > 32) 
#line 380 
                len = 32; else ;
  
#line 381 
  i = 0;
  
#line 381 
  goto ldv_46216;
  ldv_46215: 
#line 382 
  ;
  {
    
#line 382 
    unsigned char c = *(p + i);
    
#line 383 
    if ((unsigned int)c + 224U <= 94U) 
#line 384 
                                       seq_putc(m,(char)((int)((char)c))); else 
                                                                    
#line 386 
                                                                    seq_printf(m,"<%02x>",(int)c);
  }
  
#line 381 
  i += 1;
  ldv_46216: 
#line 382 
  ;
  
#line 381 
  if (i < len) 
#line 383 
               goto ldv_46215; else 
#line 386 
                                    goto ldv_46217;
  ldv_46217: 
#line 387 
  ;
  
#line 388 
  seq_putc(m,(char)10);
  
#line 389 
  __retres = 0;
  return_label: 
#line 389 
                return __retres;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_scan_results_proc_start(struct seq_file *m, loff_t *_pos)
{
  void *__retres;
  
#line 394 
  local_info_t *local = (local_info_t *)m->private;
  
#line 395 
  ldv_spin_lock_bh_76(& local->lock);
  
#line 398 
  if (*_pos > (long long)local->last_scan_results_count) {
    
#line 399 
    __retres = (void *)0;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 400 
  __retres = (void *)(*_pos + 1LL);
  return_label: 
#line 400 
                return __retres;
}


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void *prism2_scan_results_proc_next(struct seq_file *m, void *v, loff_t *_pos)
{
  void *__retres;
  
#line 405 
  local_info_t *local = (local_info_t *)m->private;
  
#line 407 
  *_pos += 1LL;
  
#line 408 
  if (*_pos > (long long)local->last_scan_results_count) {
    
#line 409 
    __retres = (void *)0;
    
#line 409 
    goto return_label;
  }
  else ;
  
#line 410 
  __retres = (void *)(*_pos + 1LL);
  return_label: 
#line 410 
                return __retres;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static void prism2_scan_results_proc_stop(struct seq_file *m, void *v)
{
  
#line 415 
  local_info_t *local = (local_info_t *)m->private;
  
#line 416 
  ldv_spin_unlock_bh_77(& local->lock);
  
#line 417 
  return;
}


#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct seq_operations const prism2_scan_results_proc_seqops = {.start = & prism2_scan_results_proc_start, .stop = & prism2_scan_results_proc_stop, .next = & prism2_scan_results_proc_next, .show = & prism2_scan_results_proc_show};

#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static int prism2_scan_results_proc_open(struct inode *inode, struct file *file)
{
  
#line 428 
  int ret = ldv_seq_open_78(file,& prism2_scan_results_proc_seqops);
  
#line 429 
  if (ret == 0) {
    
#line 430 
    struct seq_file *m = (struct seq_file *)file->private_data;
    
#line 431 
    m->private = PDE_DATA((struct inode const *)inode);
  }
  else ;
  
#line 433 
  return ret;
}


#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static struct file_operations const prism2_scan_results_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_scan_results_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
void hostap_init_proc(local_info_t *local)
{
  struct file_operations const *tmp;
  
#line 449 
  local->proc = (struct proc_dir_entry *)0;
  
#line 451 
  if (hostap_proc == (struct proc_dir_entry *)0) {
    
#line 452 
    printk("\001",(char *)(& (local->dev)->name));
    
#line 454 
    goto return_label;
  }
  else ;
  
#line 457 
  local->proc = proc_mkdir((char const *)(& (local->ddev)->name),hostap_proc);
  
#line 458 
  if (local->proc == (struct proc_dir_entry *)0) {
    
#line 459 
    printk("\001",(char *)(& (local->ddev)->name));
    
#line 461 
    goto return_label;
  }
  else ;
  
#line 465 
  proc_create_data("debug",(unsigned short)0,local->proc,& prism2_debug_proc_fops,(void *)local);
  
#line 468 
  proc_create_data("stats",(unsigned short)0,local->proc,& prism2_stats_proc_fops,(void *)local);
  
#line 470 
  proc_create_data("wds",(unsigned short)0,local->proc,& prism2_wds_proc_fops,(void *)local);
  
#line 472 
  proc_create_data("pda",(unsigned short)0,local->proc,& prism2_pda_proc_fops,(void *)local);
  
#line 474 
  ;
  
#line 474 
  tmp = (struct file_operations const *)((local->func)->read_aux_fops != (struct file_operations const *)0);
  
#line 474 
  if (tmp) ; else 
#line 474 
                  tmp = & prism2_aux_dump_proc_fops;
  
#line 474 
  ;
  
#line 474 
  proc_create_data("aux_dump",(unsigned short)0,local->proc,tmp,(void *)local);
  
#line 477 
  proc_create_data("bss_list",(unsigned short)0,local->proc,& prism2_bss_list_proc_fops,(void *)local);
  
#line 479 
  proc_create_data("crypt",(unsigned short)0,local->proc,& prism2_crypt_proc_fops,(void *)local);
  
#line 486 
  proc_create_data("scan_results",(unsigned short)0,local->proc,& prism2_scan_results_proc_fops,(void *)local);
  return_label: 
#line 488 
                return;
}


#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
void hostap_remove_proc(local_info_t *local)
{
  
#line 494 
  proc_remove(local->proc);
  
#line 495 
  return;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static char const __kstrtab_hostap_init_proc[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'i', (char)'n', (char)'i', (char)'t', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'\000'};

#line 498 
struct kernel_symbol const __ksymtab_hostap_init_proc;


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
struct kernel_symbol const __ksymtab_hostap_init_proc = {.value = (unsigned long)(& hostap_init_proc), .name = (char const *)(& __kstrtab_hostap_init_proc)};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
static char const __kstrtab_hostap_remove_proc[19U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'r', (char)'e', (char)'m', (char)'o', (char)'v', (char)'e', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'\000'};

#line 499 
struct kernel_symbol const __ksymtab_hostap_remove_proc;


#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_proc.c"
struct kernel_symbol const __ksymtab_hostap_remove_proc = {.value = (unsigned long)(& hostap_remove_proc), .name = (char const *)(& __kstrtab_hostap_remove_proc)};

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
struct seq_operations *ldv_emg_alias_prism2_scan_results_proc_seqops_6 = (struct seq_operations *)(& prism2_scan_results_proc_seqops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
struct seq_operations *ldv_emg_alias_prism2_wds_proc_seqops_6 = (struct seq_operations *)(& prism2_wds_proc_seqops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
struct seq_operations *ldv_emg_alias_prism2_bss_list_proc_seqops_6 = (struct seq_operations *)(& prism2_bss_list_proc_seqops);

#line 68 
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1);


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
int ldv_emg_wrapper_prism2_wds_proc_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 73 
  tmp = prism2_wds_proc_show(arg0,arg1);
  
#line 73 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void ldv_emg_wrapper_prism2_bss_list_proc_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 78 
  prism2_bss_list_proc_stop(arg0,arg1);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_bss_list_proc_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 83 
  tmp = prism2_bss_list_proc_next(arg0,arg1,arg2);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
int ldv_emg_wrapper_prism2_scan_results_proc_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 88 
  tmp = prism2_scan_results_proc_show(arg0,arg1);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_wds_proc_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 93 
  tmp = prism2_wds_proc_start(arg0,arg1);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void ldv_emg_wrapper_prism2_scan_results_proc_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 98 
  prism2_scan_results_proc_stop(arg0,arg1);
  
#line 99 
  return;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_wds_proc_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 103 
  tmp = prism2_wds_proc_next(arg0,arg1,arg2);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_scan_results_proc_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 108 
  tmp = prism2_scan_results_proc_start(arg0,arg1);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void ldv_emg_wrapper_prism2_wds_proc_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 113 
  prism2_wds_proc_stop(arg0,arg1);
  
#line 114 
  return;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_scan_results_proc_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 118 
  tmp = prism2_scan_results_proc_next(arg0,arg1,arg2);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
void *ldv_emg_wrapper_prism2_bss_list_proc_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 123 
  tmp = prism2_bss_list_proc_start(arg0,arg1);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
int ldv_emg_wrapper_prism2_bss_list_proc_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 128 
  tmp = prism2_bss_list_proc_show(arg0,arg1);
  
#line 128 
  return tmp;
}


#line 803  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static int ldv_seq_open_72(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 807 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 807 
  return tmp;
}


#line 811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 815 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 817 
  spin_lock_bh(lock);
  
#line 818 
  return;
}


#line 821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 825 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 827 
  spin_unlock_bh(lock);
  
#line 828 
  return;
}


#line 831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static int ldv_seq_open_75(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 835 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 835 
  return tmp;
}


#line 839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static void ldv_spin_lock_bh_76(spinlock_t *lock)
{
  
#line 843 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 845 
  spin_lock_bh(lock);
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 853 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 855 
  spin_unlock_bh(lock);
  
#line 856 
  return;
}


#line 859  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_proc.c.aux"
static int ldv_seq_open_78(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 863 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 863 
  return tmp;
}

unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

unsigned long __builtin_bswap64(unsigned long);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 8 
void ldv_atomic_dec(atomic_t *v);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move(struct list_head *list, struct list_head *head)
{
  
#line 156 
  __list_del_entry(list);
  
#line 157 
  list_add(list,head);
  
#line 158 
  return;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 67 
int strcmp(char const *, char const *);


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_72(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_73(spinlock_t *lock);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 842 
struct sk_buff *skb_clone(struct sk_buff *, gfp_t);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1698 
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 1902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_network_header(struct sk_buff *skb)
{
  
#line 1904 
  skb->network_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1905 
  return;
}


#line 1923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  
#line 1925 
  skb->mac_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1926 
  return;
}


#line 2057 
void skb_trim(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data_offset(struct sk_buff const *skb, int const offset, void *to, unsigned int const len)
{
  
#line 2800 
  memcpy(to,(void const *)(skb->data + offset),(unsigned long)len);
  
#line 2801 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2187 
int dev_queue_xmit_sk(struct sock *, struct sk_buff *);


#line 2188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int dev_queue_xmit(struct sk_buff *skb)
{
  int tmp;
  
#line 2190 
  tmp = dev_queue_xmit_sk(skb->sk,skb);
  
#line 2190 
  return tmp;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
int prism2_rx_80211(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, int type);


#line 83 
void hostap_80211_rx(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats);


#line 85 
void hostap_dump_rx_80211(char const *name, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats);


#line 459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
void wireless_spy_update(struct net_device *, unsigned char *, struct iw_quality *);


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
void hostap_rx(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats);


#line 236 
void hostap_handle_sta_release(void *ptr);


#line 238 
int hostap_update_sta_ps(local_info_t *local, struct ieee80211_hdr *hdr);


#line 242 
ap_rx_ret hostap_handle_sta_rx(local_info_t *local, struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, int wds);


#line 246 
int hostap_handle_sta_crypto(local_info_t *local, struct ieee80211_hdr *hdr, struct lib80211_crypt_data **crypt, void **sta_ptr);


#line 249 
int hostap_is_sta_assoc(struct ap_data *ap, u8 *sta_addr);


#line 250 
int hostap_is_sta_authorized(struct ap_data *ap, u8 *sta_addr);


#line 252 
int hostap_update_rx_stats(struct ap_data *ap, struct ieee80211_hdr *hdr, struct hostap_80211_rx_status *rx_stats);


#line 256 
void hostap_wds_link_oper(local_info_t *local, u8 *addr, wds_oper_type type);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
static long const freq_list[14U] = {2412L, 2417L, 2422L, 2427L, 2432L, 2437L, 2442L, 2447L, 2452L, 2457L, 2462L, 2467L, 2472L, 2484L};

#line 34 
int hostap_80211_get_hdrlen(__le16 fc);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static unsigned char rfc1042_header[6U] = {(unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static unsigned char bridge_tunnel_header[6U] = {(unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)248U};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
void hostap_dump_rx_80211(char const *name, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  struct ieee80211_hdr *hdr;
  u16 fc;
  char *tmp;
  char *tmp_0;
  
#line 26 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 28 
  printk("\001",name,(int)rx_stats->signal,(int)rx_stats->noise,(int)rx_stats->rate,skb->len,jiffies);
  
#line 33 
  if (skb->len <= 1U) 
#line 34 
                      goto return_label; else ;
  
#line 36 
  fc = hdr->frame_control;
  
#line 40 
  if (((int)fc & 512) != 0) 
#line 40 
                            tmp = (char *)" [FromDS]"; else 
#line 40 
                                                            tmp = (char *)"";
  
#line 39 
  if (((int)fc & 256) != 0) 
#line 39 
                            tmp_0 = (char *)" [ToDS]"; else 
#line 39 
                                                            tmp_0 = (char *)"";
  
#line 37 
  ;
  
#line 37 
  ;
  
#line 37 
  ;
  
#line 37 
  printk("\001",(int)fc,((int)fc >> 2) & 3,((int)fc >> 4) & 15,tmp_0,tmp);
  
#line 43 
  if (skb->len <= 23U) {
    
#line 44 
    printk("\n");
    
#line 45 
    goto return_label;
  }
  else ;
  
#line 48 
  printk(" dur=0x%04x seq=0x%04x\n",(int)hdr->duration_id,(int)hdr->seq_ctrl);
  
#line 51 
  printk("\001",(u8 *)(& hdr->addr1));
  
#line 52 
  printk(" A2=%pM",(u8 *)(& hdr->addr2));
  
#line 53 
  printk(" A3=%pM",(u8 *)(& hdr->addr3));
  
#line 54 
  if (skb->len > 29U) 
#line 55 
                      printk(" A4=%pM",(u8 *)(& hdr->addr4)); else ;
  
#line 56 
  printk("\n");
  return_label: 
#line 57 
                return;
}


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
int prism2_rx_80211(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, int type)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int hdrlen;
  int phdrlen;
  int head_need;
  int tail_need;
  u16 fc;
  int prism_header;
  int ret;
  struct ieee80211_hdr *fhdr;
  unsigned int tmp_0;
  int tmp_1;
  
#line 72 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 73 
  local = iface->local;
  
#line 75 
  if ((unsigned int)dev->type == 802U) 
    
#line 76 
    if (local->monitor_type == (unsigned int)PRISM2_MONITOR_PRISM) {
      
#line 77 
      prism_header = 1;
      
#line 78 
      phdrlen = 144;
    }
    else {
      
#line 80 
      prism_header = 2;
      
#line 81 
      phdrlen = 64;
    }
  else 
    
#line 83 
    if ((unsigned int)dev->type == 803U) {
      
#line 84 
      prism_header = 3;
      
#line 85 
      phdrlen = 24;
    }
    else {
      
#line 87 
      prism_header = 0;
      
#line 88 
      phdrlen = 0;
    }
  
#line 91 
  fhdr = (struct ieee80211_hdr *)skb->data;
  
#line 92 
  fc = fhdr->frame_control;
  
#line 94 
  if (type == 1 && ((int)fc & 3) != 0) {
    
#line 95 
    printk("\001",(char *)(& dev->name),(int)fc & 3);
    
#line 97 
    dev_kfree_skb_any(skb);
    
#line 98 
    __retres = 0;
    
#line 98 
    goto return_label;
  }
  else ;
  
#line 101 
  hdrlen = hostap_80211_get_hdrlen((unsigned short)((int)fhdr->frame_control));
  
#line 105 
  head_need = phdrlen;
  
#line 106 
  tail_need = 0;
  
#line 111 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 111 
  head_need = (int)((unsigned int)head_need - tmp_0);
  
#line 112 
  tmp_1 = skb_tailroom((struct sk_buff const *)skb);
  
#line 112 
  tail_need -= tmp_1;
  
#line 114 
  if (head_need > 0 || tail_need > 0) {
    int tmp_4;
    int tmp_2;
    int tmp_3;
    
#line 115 
    if (0 > tail_need) 
#line 115 
                       tmp_2 = 0; else 
#line 115 
                                       tmp_2 = tail_need;
    
#line 115 
    if (0 > head_need) 
#line 115 
                       tmp_3 = 0; else 
#line 115 
                                       tmp_3 = head_need;
    
#line 115 
    ;
    
#line 115 
    tmp_4 = pskb_expand_head(skb,tmp_3,tmp_2,32U);
    
#line 115 
    if (tmp_4 != 0) {
      
#line 118 
      printk("\001",(char *)(& dev->name));
      
#line 120 
      dev_kfree_skb_any(skb);
      
#line 121 
      __retres = 0;
      
#line 121 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 132 
  if (prism_header == 1) {
    struct linux_wlan_ng_prism_hdr *hdr;
    
#line 134 
    hdr = (struct linux_wlan_ng_prism_hdr *)skb_push(skb,(unsigned int)phdrlen);
    
#line 136 
    memset((void *)hdr,0,(unsigned long)phdrlen);
    
#line 137 
    hdr->msgcode = 68U;
    
#line 138 
    hdr->msglen = 144U;
    
#line 139 
    memcpy((void *)(& hdr->devname),(void const *)(& dev->name),16UL);
    
#line 143 
    hdr->hosttime.did = 4164U;
    
#line 143 
    hdr->hosttime.status = (unsigned short)0U;
    
#line 143 
    hdr->hosttime.len = (unsigned short)4U;
    
#line 143 
    hdr->hosttime.data = (unsigned int)jiffies;
    
#line 144 
    hdr->mactime.did = 8260U;
    
#line 144 
    hdr->mactime.status = (unsigned short)0U;
    
#line 144 
    hdr->mactime.len = (unsigned short)4U;
    
#line 144 
    hdr->mactime.data = rx_stats->mac_time;
    
#line 145 
    hdr->channel.did = 12356U;
    
#line 145 
    hdr->channel.status = (unsigned short)1U;
    
#line 145 
    hdr->channel.len = (unsigned short)4U;
    
#line 145 
    hdr->channel.data = 0U;
    
#line 146 
    hdr->rssi.did = 16452U;
    
#line 146 
    hdr->rssi.status = (unsigned short)1U;
    
#line 146 
    hdr->rssi.len = (unsigned short)4U;
    
#line 146 
    hdr->rssi.data = 0U;
    
#line 147 
    hdr->sq.did = 20548U;
    
#line 147 
    hdr->sq.status = (unsigned short)1U;
    
#line 147 
    hdr->sq.len = (unsigned short)4U;
    
#line 147 
    hdr->sq.data = 0U;
    
#line 148 
    hdr->signal.did = 24644U;
    
#line 148 
    hdr->signal.status = (unsigned short)0U;
    
#line 148 
    hdr->signal.len = (unsigned short)4U;
    
#line 148 
    hdr->signal.data = (unsigned int)rx_stats->signal;
    
#line 149 
    hdr->noise.did = 28740U;
    
#line 149 
    hdr->noise.status = (unsigned short)0U;
    
#line 149 
    hdr->noise.len = (unsigned short)4U;
    
#line 149 
    hdr->noise.data = (unsigned int)rx_stats->noise;
    
#line 150 
    hdr->rate.did = 32836U;
    
#line 150 
    hdr->rate.status = (unsigned short)0U;
    
#line 150 
    hdr->rate.len = (unsigned short)4U;
    
#line 150 
    hdr->rate.data = (unsigned int)rx_stats->rate / 5U;
    
#line 151 
    hdr->istx.did = 36932U;
    
#line 151 
    hdr->istx.status = (unsigned short)0U;
    
#line 151 
    hdr->istx.len = (unsigned short)4U;
    
#line 151 
    hdr->istx.data = 0U;
    
#line 152 
    hdr->frmlen.did = 41028U;
    
#line 152 
    hdr->frmlen.status = (unsigned short)0U;
    
#line 152 
    hdr->frmlen.len = (unsigned short)4U;
    
#line 152 
    hdr->frmlen.data = skb->len - (unsigned int)phdrlen;
  }
  else 
    
#line 154 
    if (prism_header == 2) {
      struct linux_wlan_ng_cap_hdr *hdr_0;
      
#line 156 
      hdr_0 = (struct linux_wlan_ng_cap_hdr *)skb_push(skb,(unsigned int)phdrlen);
      
#line 158 
      memset((void *)hdr_0,0,(unsigned long)phdrlen);
      
#line 159 
      hdr_0->version = 17834368U;
      
#line 160 
      if (0 != 0) 
#line 160 
                  hdr_0->length = ((((unsigned int)phdrlen << 24) | (((unsigned int)phdrlen << 8) & 16711680U)) | (((unsigned int)phdrlen >> 8) & 65280U)) | ((unsigned int)phdrlen >> 24); else 
                                                                    
#line 160 
                                                                    hdr_0->length = __fswab32((unsigned int)phdrlen);
      
#line 161 
      if (0 != 0) 
#line 161 
                  hdr_0->mactime = ((((unsigned long long)rx_stats->mac_time << 56) | (((unsigned long long)rx_stats->mac_time << 40) & 71776119061217280ULL)) | (((unsigned long long)rx_stats->mac_time << 24) & 280375465082880ULL)) | (((unsigned long long)rx_stats->mac_time << 8) & 1095216660480ULL); else 
                                                                    
#line 161 
                                                                    hdr_0->mactime = __fswab64((unsigned long long)rx_stats->mac_time);
      
#line 162 
      hdr_0->hosttime = __fswab64((unsigned long long)jiffies);
      
#line 163 
      hdr_0->phytype = 67108864U;
      
#line 164 
      if (0 != 0) 
#line 164 
                  hdr_0->channel = ((((unsigned int)local->channel << 24) | (((unsigned int)local->channel << 8) & 16711680U)) | (((unsigned int)local->channel >> 8) & 65280U)) | ((unsigned int)local->channel >> 24); else 
                                                                    
#line 164 
                                                                    hdr_0->channel = __fswab32((unsigned int)local->channel);
      
#line 165 
      if (0 != 0) 
#line 165 
                  hdr_0->datarate = ((unsigned int)rx_stats->rate << 24) | (((unsigned int)rx_stats->rate << 8) & 16711680U); else 
                                                                    
#line 165 
                                                                    hdr_0->datarate = __fswab32((unsigned int)rx_stats->rate);
      
#line 166 
      hdr_0->antenna = 0U;
      
#line 167 
      hdr_0->priority = 0U;
      
#line 168 
      hdr_0->ssi_type = 50331648U;
      
#line 169 
      if (0 != 0) 
#line 169 
                  hdr_0->ssi_signal = ((unsigned int)rx_stats->signal << 24) | (((unsigned int)rx_stats->signal << 8) & 16711680U); else 
                                                                    
#line 169 
                                                                    hdr_0->ssi_signal = __fswab32((unsigned int)rx_stats->signal);
      
#line 170 
      if (0 != 0) 
#line 170 
                  hdr_0->ssi_noise = ((unsigned int)rx_stats->noise << 24) | (((unsigned int)rx_stats->noise << 8) & 16711680U); else 
                                                                    
#line 170 
                                                                    hdr_0->ssi_noise = __fswab32((unsigned int)rx_stats->noise);
      
#line 171 
      hdr_0->preamble = 0U;
      
#line 172 
      hdr_0->encoding = 16777216U;
    }
    else 
      
#line 173 
      if (prism_header == 3) {
        struct hostap_radiotap_rx *hdr_1;
        
#line 175 
        hdr_1 = (struct hostap_radiotap_rx *)skb_push(skb,(unsigned int)phdrlen);
        
#line 176 
        memset((void *)hdr_1,0,(unsigned long)phdrlen);
        
#line 177 
        hdr_1->hdr.it_len = (unsigned short)phdrlen;
        
#line 178 
        hdr_1->hdr.it_present = 109U;
        
#line 184 
        hdr_1->tsft = (unsigned long long)rx_stats->mac_time;
        
#line 185 
        hdr_1->chan_freq = (unsigned short)freq_list[local->channel + -1];
        
#line 186 
        hdr_1->chan_flags = (unsigned short)160U;
        
#line 188 
        hdr_1->rate = (unsigned char)((unsigned int)rx_stats->rate / 5U);
        
#line 189 
        hdr_1->dbm_antsignal = (signed char)rx_stats->signal;
        
#line 190 
        hdr_1->dbm_antnoise = (signed char)rx_stats->noise;
      }
      else ;
  
#line 193 
  ret = (int)(skb->len - (unsigned int)phdrlen);
  
#line 194 
  skb->dev = dev;
  
#line 195 
  skb_reset_mac_header(skb);
  
#line 196 
  skb_pull(skb,(unsigned int)hdrlen);
  
#line 197 
  if (prism_header != 0) 
#line 198 
                         skb_pull(skb,(unsigned int)phdrlen); else ;
  
#line 199 
  skb->pkt_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))3U;
  
#line 200 
  skb->protocol = (unsigned short)1024U;
  
#line 201 
  memset((void *)(& skb->cb),0,48UL);
  
#line 202 
  netif_rx(skb);
  
#line 204 
  __retres = ret;
  return_label: 
#line 204 
                return __retres;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static void monitor_rx(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  int len;
  
#line 214 
  len = prism2_rx_80211(dev,skb,rx_stats,0);
  
#line 215 
  dev->stats.rx_packets += 1UL;
  
#line 216 
  dev->stats.rx_bytes += (unsigned long)len;
  
#line 217 
  return;
}


#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static struct prism2_frag_entry *prism2_frag_cache_find(local_info_t *local, unsigned int seq, unsigned int frag, u8 *src, u8 *dst)
{
  struct prism2_frag_entry *__retres;
  struct prism2_frag_entry *entry;
  int i;
  
#line 228 
  i = 0;
  
#line 228 
  goto ldv_46069;
  ldv_46068: 
#line 229 
  ;
  
#line 229 
  entry = & local->frag_cache[i];
  
#line 230 
  if (entry->skb != (struct sk_buff *)0) {
    int tmp;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 231 
      tmp = 1;
    }
    
#line 230 
    if (tmp != 0) {
      int tmp_0;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 231 
        tmp_0 = 1;
      }
      
#line 231 
      if (tmp_0 != 0) {
        
#line 231 
        if ((long)((entry->first_frag_time - jiffies) + 500UL) < 0L) {
          
#line 232 
          printk("\001",(char *)(& (local->dev)->name),entry->seq,entry->last_frag);
          
#line 235 
          consume_skb(entry->skb);
          
#line 236 
          entry->skb = (struct sk_buff *)0;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 239 
  if ((entry->skb != (struct sk_buff *)0 && entry->seq == seq) && (entry->last_frag + 1U == frag || frag == 4294967295U)) {
    int tmp_1;
    
#line 240 
    tmp_1 = memcmp((void const *)(& entry->src_addr),(void const *)src,6UL);
    
#line 240 
    if (tmp_1 == 0) {
      int tmp_2;
      
#line 241 
      tmp_2 = memcmp((void const *)(& entry->dst_addr),(void const *)dst,6UL);
      
#line 241 
      if (tmp_2 == 0) {
        
#line 243 
        __retres = entry;
        
#line 243 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 228 
  i += 1;
  ldv_46069: 
#line 229 
  ;
  
#line 228 
  if (i <= 3) 
#line 230 
              goto ldv_46068; else 
#line 233 
                                   goto ldv_46070;
  ldv_46070: 
#line 234 
  ;
  
#line 246 
  __retres = (struct prism2_frag_entry *)0;
  return_label: 
#line 246 
                return __retres;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static struct sk_buff *prism2_frag_cache_get(local_info_t *local, struct ieee80211_hdr *hdr)
{
  struct sk_buff *__retres;
  u16 sc;
  unsigned int frag;
  unsigned int seq;
  struct prism2_frag_entry *entry;
  
#line 254 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 259 
  sc = hdr->seq_ctrl;
  
#line 260 
  frag = (unsigned int)sc & 15U;
  
#line 261 
  seq = (unsigned int)((int)sc >> 4);
  
#line 263 
  if (frag == 0U) {
    
#line 265 
    skb = dev_alloc_skb((local->dev)->mtu + 54U);
    
#line 270 
    if (skb == (struct sk_buff *)0) {
      
#line 271 
      __retres = (struct sk_buff *)0;
      
#line 271 
      goto return_label;
    }
    else ;
    
#line 273 
    entry = & local->frag_cache[local->frag_next_idx];
    
#line 274 
    local->frag_next_idx += 1U;
    
#line 275 
    if (local->frag_next_idx > 3U) 
#line 276 
                                   local->frag_next_idx = 0U; else ;
    
#line 278 
    if (entry->skb != (struct sk_buff *)0) 
#line 279 
                                           consume_skb(entry->skb); else ;
    
#line 281 
    entry->first_frag_time = jiffies;
    
#line 282 
    entry->seq = seq;
    
#line 283 
    entry->last_frag = frag;
    
#line 284 
    entry->skb = skb;
    
#line 285 
    memcpy((void *)(& entry->src_addr),(void const *)(& hdr->addr2),6UL);
    
#line 286 
    memcpy((void *)(& entry->dst_addr),(void const *)(& hdr->addr1),6UL);
  }
  else {
    
#line 290 
    entry = prism2_frag_cache_find(local,seq,frag,(u8 *)(& hdr->addr2),(u8 *)(& hdr->addr1));
    
#line 292 
    if (entry != (struct prism2_frag_entry *)0) {
      
#line 293 
      entry->last_frag = frag;
      
#line 294 
      skb = entry->skb;
    }
    else ;
  }
  
#line 298 
  __retres = skb;
  return_label: 
#line 298 
                return __retres;
}


#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int prism2_frag_cache_invalidate(local_info_t *local, struct ieee80211_hdr *hdr)
{
  int __retres;
  u16 sc;
  unsigned int seq;
  struct prism2_frag_entry *entry;
  
#line 310 
  sc = hdr->seq_ctrl;
  
#line 311 
  seq = (unsigned int)((int)sc >> 4);
  
#line 313 
  entry = prism2_frag_cache_find(local,seq,4294967295U,(u8 *)(& hdr->addr2),(u8 *)(& hdr->addr1));
  
#line 315 
  if (entry == (struct prism2_frag_entry *)0) {
    
#line 316 
    printk("\001",(char *)(& (local->dev)->name),seq);
    
#line 319 
    __retres = -1;
    
#line 319 
    goto return_label;
  }
  else ;
  
#line 322 
  entry->skb = (struct sk_buff *)0;
  
#line 323 
  __retres = 0;
  return_label: 
#line 323 
                return __retres;
}


#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static struct hostap_bss_info *__hostap_get_bss(local_info_t *local, u8 *bssid, u8 *ssid, size_t ssid_len)
{
  struct hostap_bss_info *__retres;
  struct list_head *ptr;
  struct hostap_bss_info *bss;
  struct hostap_bss_info *tmp;
  int tmp_0;
  
#line 333 
  ptr = local->bss_list.next;
  
#line 333 
  goto ldv_46098;
  ldv_46097: 
#line 334 
  ;
  {
    
#line 334 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 334 
    tmp = (struct hostap_bss_info *)__mptr;
  }
  
#line 334 
  bss = tmp;
  
#line 335 
  tmp_0 = memcmp((void const *)(& bss->bssid),(void const *)bssid,6UL);
  
#line 335 
  if (tmp_0 == 0) {
    
#line 335 
    if (ssid == (u8 *)0U) 
#line 335 
                          goto _LOR;
    else 
      
#line 336 
      if (bss->ssid_len == ssid_len) {
        int tmp_1;
        
#line 337 
        tmp_1 = memcmp((void const *)ssid,(void const *)(& bss->ssid),ssid_len);
        
#line 337 
        if (tmp_1 == 0) {
          _LOR: {
                  
#line 339 
                  list_move(& bss->list,& local->bss_list);
                  
#line 340 
                  __retres = bss;
                  
#line 340 
                  goto return_label;
                }
        }
        else ;
      }
      else ;
  }
  else ;
  
#line 333 
  ptr = ptr->next;
  ldv_46098: 
#line 334 
  ;
  
#line 333 
  if (& local->bss_list != ptr) 
#line 335 
                                goto ldv_46097; else 
#line 338 
                                                     goto ldv_46099;
  ldv_46099: 
#line 339 
  ;
  
#line 344 
  __retres = (struct hostap_bss_info *)0;
  return_label: 
#line 344 
                return __retres;
}


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static struct hostap_bss_info *__hostap_add_bss(local_info_t *local, u8 *bssid, u8 *ssid, size_t ssid_len)
{
  struct hostap_bss_info *__retres;
  struct hostap_bss_info *bss;
  
#line 353 
  if (local->num_bss_info > 63) {
    struct hostap_bss_info *tmp;
    {
      
#line 354 
      struct list_head const *__mptr = (struct list_head const *)local->bss_list.prev;
      
#line 354 
      tmp = (struct hostap_bss_info *)__mptr;
    }
    
#line 354 
    bss = tmp;
    
#line 356 
    list_del(& bss->list);
    
#line 357 
    local->num_bss_info -= 1;
  }
  else {
    
#line 359 
    bss = (struct hostap_bss_info *)kmalloc(232UL,32U);
    
#line 360 
    if (bss == (struct hostap_bss_info *)0) {
      
#line 361 
      __retres = (struct hostap_bss_info *)0;
      
#line 361 
      goto return_label;
    }
    else ;
  }
  
#line 364 
  memset((void *)bss,0,232UL);
  
#line 365 
  memcpy((void *)(& bss->bssid),(void const *)bssid,6UL);
  
#line 366 
  memcpy((void *)(& bss->ssid),(void const *)ssid,ssid_len);
  
#line 367 
  bss->ssid_len = ssid_len;
  
#line 368 
  local->num_bss_info += 1;
  
#line 369 
  list_add(& bss->list,& local->bss_list);
  
#line 370 
  __retres = bss;
  return_label: 
#line 370 
                return __retres;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static void __hostap_expire_bss(local_info_t *local)
{
  struct hostap_bss_info *bss;
  struct hostap_bss_info *tmp;
  int tmp_0;
  
#line 378 
  goto ldv_46123;
  ldv_46122: 
#line 379 
  ;
  {
    
#line 379 
    struct list_head const *__mptr = (struct list_head const *)local->bss_list.prev;
    
#line 379 
    tmp = (struct hostap_bss_info *)__mptr;
  }
  
#line 379 
  bss = tmp;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 381 
    tmp_0 = 1;
  }
  
#line 381 
  if (tmp_0 == 0) 
#line 382 
                  goto ldv_46121;
  else {
    int tmp_1;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 381 
      tmp_1 = 1;
    }
    
#line 381 
    if (tmp_1 == 0) 
#line 382 
                    goto ldv_46121;
    else 
      
#line 381 
      if ((long)((bss->last_update - jiffies) + 15000UL) >= 0L) 
#line 382 
                                                                goto ldv_46121; else ;
  }
  
#line 384 
  list_del(& bss->list);
  
#line 385 
  local->num_bss_info -= 1;
  
#line 386 
  kfree((void const *)bss);
  ldv_46123: 
#line 387 
  ;
  
#line 378 
  if (local->num_bss_info > 0) 
#line 380 
                               goto ldv_46122; else 
#line 383 
                                                    goto ldv_46121;
  ldv_46121: 
#line 384 
  ;
  
#line 385 
  return;
}


#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static void hostap_rx_sta_beacon(local_info_t *local, struct sk_buff *skb, int stype)
{
  struct hostap_ieee80211_mgmt *mgmt;
  int left;
  u8 *pos;
  struct hostap_bss_info *bss;
  
#line 397 
  int chan = 0;
  
#line 399 
  u8 *ssid = (u8 *)0U;
  
#line 399 
  u8 *wpa = (u8 *)0U;
  
#line 399 
  u8 *rsn = (u8 *)0U;
  
#line 400 
  size_t ssid_len = 0UL;
  
#line 400 
  size_t wpa_len = 0UL;
  
#line 400 
  size_t rsn_len = 0UL;
  
#line 403 
  if (skb->len <= 35U) 
#line 404 
                       goto return_label; else ;
  
#line 406 
  mgmt = (struct hostap_ieee80211_mgmt *)skb->data;
  
#line 407 
  pos = (u8 *)(& mgmt->u.beacon.variable);
  
#line 408 
  left = (int)((long)skb->len - ((long)pos - (long)skb->data));
  
#line 410 
  goto ldv_46146;
  ldv_46145: 
#line 411 
  ;
  
#line 411 
  if ((int)*(pos + 1U) + 2 > left) 
#line 412 
                                   goto return_label; else ;
  
#line 413 
  switch ((int)*pos) {
    case 0: 
#line 414 
    ;
    
#line 415 
    ssid = pos + 2U;
    
#line 416 
    ssid_len = (unsigned long)*(pos + 1U);
    
#line 417 
    goto ldv_46141;
    case 221: 
#line 418 
    ;
    
#line 419 
    if (((((unsigned int)*(pos + 1U) > 3U && (unsigned int)*(pos + 2U) == 0U) && (unsigned int)*(pos + 3U) == 80U) && (unsigned int)*(pos + 4U) == 242U) && (unsigned int)*(pos + 5U) == 1U) {
      
#line 422 
      wpa = pos;
      
#line 423 
      wpa_len = (unsigned long)((int)*(pos + 1U) + 2);
    }
    else ;
    
#line 425 
    goto ldv_46141;
    case 48: 
#line 426 
    ;
    
#line 427 
    rsn = pos;
    
#line 428 
    rsn_len = (unsigned long)((int)*(pos + 1U) + 2);
    
#line 429 
    goto ldv_46141;
    case 3: 
#line 430 
    ;
    
#line 431 
    if ((unsigned int)*(pos + 1U) != 0U) 
#line 432 
                                         chan = (int)*(pos + 2U); else ;
    
#line 433 
    goto ldv_46141;
  }
  ldv_46141: 
#line 435 
  ;
  
#line 435 
  left -= (int)*(pos + 1U) + 2;
  
#line 436 
  pos += (int)*(pos + 1U) + 2;
  ldv_46146: 
#line 437 
  ;
  
#line 410 
  if (left > 1) 
#line 412 
                goto ldv_46145; else 
#line 415 
                                     goto ldv_46147;
  ldv_46147: 
#line 416 
  ;
  
#line 439 
  if (wpa_len > 64UL) 
#line 440 
                      wpa_len = 64UL; else ;
  
#line 441 
  if (rsn_len > 64UL) 
#line 442 
                      rsn_len = 64UL; else ;
  
#line 443 
  if (ssid_len > 32UL) 
#line 444 
                       ssid_len = 32UL; else ;
  
#line 446 
  ldv_spin_lock_72(& local->lock);
  
#line 447 
  bss = __hostap_get_bss(local,(u8 *)(& mgmt->bssid),ssid,ssid_len);
  
#line 448 
  if (bss == (struct hostap_bss_info *)0) 
#line 449 
                                          bss = __hostap_add_bss(local,(u8 *)(& mgmt->bssid),ssid,ssid_len); else ;
  
#line 450 
  if (bss != (struct hostap_bss_info *)0) {
    
#line 451 
    bss->last_update = jiffies;
    
#line 452 
    bss->count += 1U;
    
#line 453 
    bss->capab_info = mgmt->u.beacon.capab_info;
    
#line 454 
    if (wpa != (u8 *)0U) {
      
#line 455 
      memcpy((void *)(& bss->wpa_ie),(void const *)wpa,wpa_len);
      
#line 456 
      bss->wpa_ie_len = wpa_len;
    }
    else 
#line 458 
         bss->wpa_ie_len = 0UL;
    
#line 459 
    if (rsn != (u8 *)0U) {
      
#line 460 
      memcpy((void *)(& bss->rsn_ie),(void const *)rsn,rsn_len);
      
#line 461 
      bss->rsn_ie_len = rsn_len;
    }
    else 
#line 463 
         bss->rsn_ie_len = 0UL;
    
#line 464 
    bss->chan = chan;
  }
  else ;
  
#line 466 
  __hostap_expire_bss(local);
  
#line 467 
  ldv_spin_unlock_73(& local->lock);
  return_label: 
#line 468 
                return;
}


#line 472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int hostap_rx_frame_mgmt(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, u16 type, u16 stype)
{
  int __retres;
  
#line 476 
  if (local->iw_mode == 3) 
#line 477 
                           hostap_update_sta_ps(local,(struct ieee80211_hdr *)skb->data); else ;
  
#line 479 
  if (local->hostapd != 0 && (unsigned int)type == 0U) {
    
#line 480 
    if ((unsigned int)stype == 128U && local->iw_mode == 3) {
      struct sk_buff *skb2;
      
#line 485 
      skb2 = skb_clone(skb,32U);
      
#line 486 
      if (skb2 != (struct sk_buff *)0) 
#line 487 
                                       hostap_rx(skb2->dev,skb2,rx_stats); else ;
    }
    else ;
    
#line 492 
    local->apdevstats.rx_packets += 1UL;
    
#line 493 
    local->apdevstats.rx_bytes += (unsigned long)skb->len;
    
#line 494 
    if (local->apdev == (struct net_device *)0) {
      
#line 495 
      __retres = -1;
      
#line 495 
      goto return_label;
    }
    else ;
    
#line 496 
    prism2_rx_80211(local->apdev,skb,rx_stats,1);
    
#line 497 
    __retres = 0;
    
#line 497 
    goto return_label;
  }
  else ;
  
#line 500 
  if (local->iw_mode == 3) {
    
#line 501 
    if ((unsigned int)type != 0U && (unsigned int)type != 4U) {
      
#line 503 
      printk("\001",(char *)(& (skb->dev)->name),(int)type >> 2,(int)stype >> 4);
      
#line 506 
      __retres = -1;
      
#line 506 
      goto return_label;
    }
    else ;
    
#line 509 
    hostap_rx(skb->dev,skb,rx_stats);
    
#line 510 
    __retres = 0;
    
#line 510 
    goto return_label;
  }
  else 
    
#line 511 
    if ((unsigned int)type == 0U && ((unsigned int)stype == 128U || (unsigned int)stype == 80U)) {
      
#line 514 
      hostap_rx_sta_beacon(local,skb,(int)stype);
      
#line 515 
      __retres = -1;
      
#line 515 
      goto return_label;
    }
    else 
      
#line 516 
      if ((unsigned int)type == 0U && ((unsigned int)stype == 16U || (unsigned int)stype == 48U)) {
        
#line 522 
        __retres = -1;
        
#line 522 
        goto return_label;
      }
      else {
        
#line 524 
        printk("\001",(char *)(& (skb->dev)->name),(int)type >> 2,(int)stype >> 4);
        
#line 527 
        __retres = -1;
        
#line 527 
        goto return_label;
      }
  return_label: 
#line 500 
                return __retres;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static struct net_device *prism2_rx_get_wds(local_info_t *local, u8 *addr)
{
  struct list_head *ptr;
  struct hostap_interface *tmp;
  struct net_device *tmp_1;
  
#line 536 
  struct hostap_interface *iface = (struct hostap_interface *)0;
  
#line 539 
  _raw_read_lock_bh(& local->iface_lock);
  
#line 540 
  ptr = local->hostap_interfaces.next;
  
#line 540 
  goto ldv_46166;
  ldv_46165: 
#line 541 
  ;
  {
    
#line 541 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 541 
    tmp = (struct hostap_interface *)__mptr;
  }
  
#line 541 
  iface = tmp;
  
#line 542 
  if (iface->type == (unsigned int)4) {
    int tmp_0;
    
#line 542 
    tmp_0 = memcmp((void const *)(& iface->u.wds.remote_addr),(void const *)addr,6UL);
    
#line 542 
    if (tmp_0 == 0) 
#line 544 
                    goto ldv_46164; else ;
  }
  else ;
  
#line 545 
  iface = (struct hostap_interface *)0;
  
#line 540 
  ptr = ptr->next;
  ldv_46166: 
#line 541 
  ;
  
#line 540 
  if (& local->hostap_interfaces != ptr) 
#line 542 
                                         goto ldv_46165; else 
#line 545 
                                                              goto ldv_46164;
  ldv_46164: 
#line 546 
  ;
  
#line 547 
  _raw_read_unlock_bh(& local->iface_lock);
  
#line 549 
  if (iface != (struct hostap_interface *)0) 
#line 549 
                                             tmp_1 = iface->dev; else 
                                                                   
#line 549 
                                                                   tmp_1 = (struct net_device *)0;
  
#line 549 
  return tmp_1;
}


#line 554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int hostap_rx_frame_wds(local_info_t *local, struct ieee80211_hdr *hdr, u16 fc, struct net_device **wds)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 559 
  if (((int)fc & 768) != 768 && (local->iw_mode != 3 || ((int)fc & 256) == 0)) {
    
#line 562 
    __retres = 0;
    
#line 562 
    goto return_label;
  }
  else ;
  
#line 566 
  tmp_0 = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)(local->dev)->dev_addr);
  
#line 566 
  if (tmp_0) 
#line 566 
             tmp_1 = 0; else 
#line 566 
                             tmp_1 = 1;
  
#line 566 
  if (tmp_1) {
    
#line 566 
    if ((((((unsigned int)hdr->addr1[0] != 255U || (unsigned int)hdr->addr1[1] != 255U) || (unsigned int)hdr->addr1[2] != 255U) || (unsigned int)hdr->addr1[3] != 255U) || (unsigned int)hdr->addr1[4] != 255U) || (unsigned int)hdr->addr1[5] != 255U) {
      
#line 576 
      __retres = -1;
      
#line 576 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 580 
  *wds = prism2_rx_get_wds(local,(u8 *)(& hdr->addr2));
  
#line 581 
  if (*wds == (struct net_device *)0 && ((int)fc & 512) != 0) {
    
#line 581 
    if (local->iw_mode != 2 || ((unsigned long)local->wds_type & 2UL) == 0UL) 
      
#line 581 
      goto _LOR;
    else {
      int tmp_2;
      
#line 583 
      tmp_2 = memcmp((void const *)(& hdr->addr2),(void const *)(& local->bssid),6UL);
      
#line 583 
      if (tmp_2 != 0) {
        _LOR: {
                
#line 587 
                printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr2));
                
#line 590 
                if (local->ap != (struct ap_data *)0 && (local->ap)->autom_ap_wds != 0) 
                  
#line 591 
                  hostap_wds_link_oper(local,(u8 *)(& hdr->addr2),0); else ;
                
#line 592 
                __retres = -1;
                
#line 592 
                goto return_label;
              }
      }
      else ;
    }
  }
  else ;
  
#line 595 
  if ((*wds != (struct net_device *)0 && ((int)fc & 512) == 0) && local->ap != (struct ap_data *)0) {
    int tmp_3;
    
#line 595 
    tmp_3 = hostap_is_sta_assoc(local->ap,(u8 *)(& hdr->addr2));
    
#line 595 
    if (tmp_3 != 0) 
#line 602 
                    *wds = (struct net_device *)0; else ;
  }
  else ;
  
#line 605 
  __retres = 0;
  return_label: 
#line 605 
                return __retres;
}


#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int hostap_is_eapol_frame(local_info_t *local, struct sk_buff *skb)
{
  int __retres;
  u16 fc;
  u16 ethertype;
  struct ieee80211_hdr *hdr;
  u8 *pos;
  
#line 611 
  struct net_device *dev = local->dev;
  
#line 616 
  if (skb->len <= 23U) {
    
#line 617 
    __retres = 0;
    
#line 617 
    goto return_label;
  }
  else ;
  
#line 619 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 620 
  fc = hdr->frame_control;
  
#line 623 
  if (((int)fc & 768) == 256) {
    bool tmp_0;
    
#line 624 
    tmp_0 = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
    
#line 624 
    if ((int)tmp_0 != 0) {
      bool tmp_1;
      
#line 625 
      tmp_1 = ether_addr_equal((u8 const *)(& hdr->addr3),(u8 const *)dev->dev_addr);
      
#line 625 
      if ((int)tmp_1 != 0) ; else 
#line 623 
                                  goto _LAND_0;
    }
    else 
#line 623 
         goto _LAND_0;
  }
  else {
    _LAND_0: 
#line 628 
    ;
    
#line 628 
    if (((int)fc & 768) == 512) {
      bool tmp;
      
#line 629 
      tmp = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
      
#line 629 
      if ((int)tmp != 0) ;
      else {
        
#line 633 
        __retres = 0;
        
#line 633 
        goto return_label;
      }
    }
    else {
      
#line 633 
      __retres = 0;
      
#line 633 
      goto return_label;
    }
  }
  
#line 635 
  if (skb->len <= 31U) {
    
#line 636 
    __retres = 0;
    
#line 636 
    goto return_label;
  }
  else ;
  
#line 639 
  pos = skb->data + 24U;
  
#line 640 
  ethertype = (unsigned short)(((int)*(pos + 6U) << 8) | (int)*(pos + 7U));
  
#line 641 
  if ((unsigned int)ethertype == 34958U) {
    
#line 642 
    __retres = 1;
    
#line 642 
    goto return_label;
  }
  else ;
  
#line 644 
  __retres = 0;
  return_label: 
#line 644 
                return __retres;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int hostap_rx_frame_decrypt(local_info_t *local, struct sk_buff *skb, struct lib80211_crypt_data *crypt)
{
  int __retres;
  struct ieee80211_hdr *hdr;
  int res;
  int hdrlen;
  
#line 656 
  if (crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->decrypt_mpdu == (int (*)(struct sk_buff *, int , void *))0) {
    
#line 657 
    __retres = 0;
    
#line 657 
    goto return_label;
  }
  else ;
  
#line 659 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 660 
  hdrlen = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 662 
  if (local->tkip_countermeasures != 0) {
    int tmp_0;
    
#line 662 
    tmp_0 = strcmp((crypt->ops)->name,"TKIP");
    
#line 662 
    if (tmp_0 == 0) {
      int tmp;
      
#line 664 
      tmp = net_ratelimit();
      
#line 664 
      if (tmp != 0) 
#line 665 
                    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr2)); else ;
      
#line 669 
      __retres = -1;
      
#line 669 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 672 
  atomic_inc(& crypt->refcnt);
  
#line 673 
  res = (*((crypt->ops)->decrypt_mpdu))(skb,hdrlen,crypt->priv);
  
#line 674 
  atomic_dec(& crypt->refcnt);
  
#line 675 
  if (res < 0) {
    
#line 676 
    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr2),res);
    
#line 678 
    local->comm_tallies.rx_discards_wep_undecryptable += 1U;
    
#line 679 
    __retres = -1;
    
#line 679 
    goto return_label;
  }
  else ;
  
#line 682 
  __retres = res;
  return_label: 
#line 682 
                return __retres;
}


#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static int hostap_rx_frame_decrypt_msdu(local_info_t *local, struct sk_buff *skb, int keyidx, struct lib80211_crypt_data *crypt)
{
  int __retres;
  struct ieee80211_hdr *hdr;
  int res;
  int hdrlen;
  
#line 694 
  if (crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->decrypt_msdu == (int (*)(struct sk_buff *, int , int , void *))0) {
    
#line 695 
    __retres = 0;
    
#line 695 
    goto return_label;
  }
  else ;
  
#line 697 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 698 
  hdrlen = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 700 
  atomic_inc(& crypt->refcnt);
  
#line 701 
  res = (*((crypt->ops)->decrypt_msdu))(skb,keyidx,hdrlen,crypt->priv);
  
#line 702 
  atomic_dec(& crypt->refcnt);
  
#line 703 
  if (res < 0) {
    
#line 704 
    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr2),keyidx);
    
#line 707 
    __retres = -1;
    
#line 707 
    goto return_label;
  }
  else ;
  
#line 710 
  __retres = 0;
  return_label: 
#line 710 
                return __retres;
}


#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
void hostap_80211_rx(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct ieee80211_hdr *hdr;
  size_t hdrlen;
  u16 fc;
  u16 type;
  u16 stype;
  u16 sc;
  unsigned int frag;
  u8 *payload;
  u16 ethertype;
  u8 dst[6U];
  u8 src[6U];
  int tmp_1;
  int tmp_3;
  
#line 725 
  struct net_device *wds = (struct net_device *)0;
  
#line 728 
  struct sk_buff *skb2 = (struct sk_buff *)0;
  
#line 730 
  int frame_authorized = 0;
  
#line 731 
  int from_assoc_ap = 0;
  
#line 734 
  struct lib80211_crypt_data *crypt = (struct lib80211_crypt_data *)0;
  
#line 735 
  void *sta = (void *)0;
  
#line 736 
  int keyidx = 0;
  
#line 738 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 739 
  local = iface->local;
  
#line 740 
  iface->stats.rx_packets += 1UL;
  
#line 741 
  iface->stats.rx_bytes += (unsigned long)skb->len;
  
#line 745 
  dev = local->ddev;
  
#line 746 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 748 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 750 
  if (skb->len <= 9U) 
#line 751 
                      goto rx_dropped; else ;
  
#line 753 
  fc = hdr->frame_control;
  
#line 754 
  type = (unsigned short)((unsigned int)fc & 12U);
  
#line 755 
  stype = (unsigned short)((unsigned int)fc & 240U);
  
#line 756 
  sc = hdr->seq_ctrl;
  
#line 757 
  frag = (unsigned int)sc & 15U;
  
#line 758 
  tmp_1 = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 758 
  hdrlen = (unsigned long)tmp_1;
  
#line 764 
  if (iface->spy_data.spy_number > 0) {
    struct iw_quality wstats;
    
#line 766 
    wstats.level = rx_stats->signal;
    
#line 767 
    wstats.noise = rx_stats->noise;
    
#line 768 
    wstats.updated = (unsigned char)30U;
    
#line 771 
    wireless_spy_update(dev,(unsigned char *)(& hdr->addr2),& wstats);
  }
  else ;
  
#line 774 
  hostap_update_rx_stats(local->ap,hdr,rx_stats);
  
#line 776 
  if (local->iw_mode == 6) {
    
#line 777 
    monitor_rx(dev,skb,rx_stats);
    
#line 778 
    goto return_label;
  }
  else ;
  
#line 781 
  if (local->host_decrypt != 0) {
    
#line 782 
    int idx = 0;
    
#line 783 
    if ((unsigned long)skb->len >= hdrlen + 3UL) 
#line 784 
                                                 idx = (int)*(skb->data + (hdrlen + (size_t)3U)) >> 6; else ;
    
#line 785 
    crypt = local->crypt_info.crypt[idx];
    
#line 786 
    sta = (void *)0;
    
#line 795 
    if (((int)hdr->addr1[0] & 1) == 0 || local->bcrx_sta_key != 0) 
#line 796 
                                                                   hostap_handle_sta_crypto(local,hdr,& crypt,& sta); else ;
    
#line 801 
    if (crypt != (struct lib80211_crypt_data *)0 && (crypt->ops == (struct lib80211_crypto_ops *)0 || (crypt->ops)->decrypt_mpdu == (int (*)(struct sk_buff *, int , void *))0)) 
      
#line 803 
      crypt = (struct lib80211_crypt_data *)0; else ;
    
#line 805 
    if (crypt == (struct lib80211_crypt_data *)0 && ((int)fc & 16384) != 0) {
      
#line 815 
      local->comm_tallies.rx_discards_wep_undecryptable += 1U;
      
#line 816 
      goto rx_dropped;
    }
    else ;
  }
  else ;
  
#line 820 
  if ((unsigned int)type != 8U) {
    int tmp_2;
    
#line 821 
    if ((((unsigned int)type == 0U && (unsigned int)stype == 176U) && ((int)fc & 16384) != 0) && local->host_decrypt != 0) {
      
#line 824 
      keyidx = hostap_rx_frame_decrypt(local,skb,crypt);
      
#line 823 
      if (keyidx < 0) {
        
#line 826 
        printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2));
        
#line 830 
        goto rx_dropped;
      }
      else ;
    }
    else ;
    
#line 833 
    tmp_2 = hostap_rx_frame_mgmt(local,skb,rx_stats,(unsigned short)((int)type),(unsigned short)((int)stype));
    
#line 833 
    if (tmp_2 != 0) 
#line 834 
                    goto rx_dropped; else 
#line 836 
                                          goto rx_exit;
  }
  else ;
  
#line 840 
  if (skb->len <= 23U) 
#line 841 
                       goto rx_dropped; else ;
  
#line 843 
  switch ((int)fc & 768) {
    case 512: 
#line 844 
    ;
    
#line 845 
    memcpy((void *)(& dst),(void const *)(& hdr->addr1),6UL);
    
#line 846 
    memcpy((void *)(& src),(void const *)(& hdr->addr3),6UL);
    
#line 847 
    goto ldv_46229;
    case 256: 
#line 848 
    ;
    
#line 849 
    memcpy((void *)(& dst),(void const *)(& hdr->addr3),6UL);
    
#line 850 
    memcpy((void *)(& src),(void const *)(& hdr->addr2),6UL);
    
#line 851 
    goto ldv_46229;
    case 768: 
#line 852 
    ;
    
#line 853 
    if (skb->len <= 29U) 
#line 854 
                         goto rx_dropped; else ;
    
#line 855 
    memcpy((void *)(& dst),(void const *)(& hdr->addr3),6UL);
    
#line 856 
    memcpy((void *)(& src),(void const *)(& hdr->addr4),6UL);
    
#line 857 
    goto ldv_46229;
    case 0: 
#line 858 
    ;
    
#line 859 
    memcpy((void *)(& dst),(void const *)(& hdr->addr1),6UL);
    
#line 860 
    memcpy((void *)(& src),(void const *)(& hdr->addr2),6UL);
    
#line 861 
    goto ldv_46229;
  }
  ldv_46229: 
#line 864 
  ;
  
#line 864 
  tmp_3 = hostap_rx_frame_wds(local,hdr,(unsigned short)((int)fc),& wds);
  
#line 864 
  if (tmp_3 != 0) 
#line 865 
                  goto rx_dropped; else ;
  
#line 866 
  if (wds != (struct net_device *)0) {
    
#line 867 
    dev = wds;
    
#line 867 
    skb->dev = dev;
  }
  else ;
  
#line 869 
  if (((local->iw_mode == 3 && wds == (struct net_device *)0) && ((int)fc & 768) == 512) && local->stadev != (struct net_device *)0) {
    int tmp_4;
    
#line 872 
    tmp_4 = memcmp((void const *)(& hdr->addr2),(void const *)(& local->assoc_ap_addr),6UL);
    
#line 872 
    if (tmp_4 == 0) {
      
#line 875 
      dev = local->stadev;
      
#line 875 
      skb->dev = dev;
      
#line 876 
      from_assoc_ap = 1;
    }
    else ;
  }
  else ;
  
#line 879 
  if ((unsigned int)local->iw_mode + 4294967293U <= 1U && from_assoc_ap == 0) {
    ap_rx_ret tmp_5;
    
#line 882 
    tmp_5 = hostap_handle_sta_rx(local,dev,skb,rx_stats,wds != (struct net_device *)0);
    
#line 882 
    switch ((unsigned int)tmp_5) {
      case (unsigned int)3: 
#line 884 
      ;
      
#line 885 
      frame_authorized = 0;
      
#line 886 
      goto ldv_46234;
      case (unsigned int)0: 
#line 887 
      ;
      
#line 888 
      frame_authorized = 1;
      
#line 889 
      goto ldv_46234;
      case (unsigned int)1: 
#line 890 
      ;
      
#line 891 
      goto rx_dropped;
      case (unsigned int)2: 
#line 892 
      ;
      
#line 893 
      goto rx_exit;
    }
    ldv_46234: 
#line 895 
    ;
  }
  else ;
  
#line 899 
  if (((unsigned int)stype != 0U && (unsigned int)stype != 16U) && ((unsigned int)stype != 32U && (unsigned int)stype != 48U)) {
    
#line 903 
    if ((unsigned int)stype != 64U) 
#line 904 
                                    printk("\001",(char *)(& dev->name),(int)type >> 2,(int)stype >> 4); else ;
    
#line 907 
    goto rx_dropped;
  }
  else ;
  
#line 912 
  if (local->host_decrypt != 0 && ((int)fc & 16384) != 0) {
    
#line 913 
    keyidx = hostap_rx_frame_decrypt(local,skb,crypt);
    
#line 912 
    if (keyidx < 0) 
#line 914 
                    goto rx_dropped; else ;
  }
  else ;
  
#line 915 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 919 
  if ((local->host_decrypt != 0 && ((int)fc & 16384) != 0) && (frag != 0U || ((int)fc & 1024) != 0)) {
    int flen;
    
#line 922 
    struct sk_buff *frag_skb = prism2_frag_cache_get(local,hdr);
    
#line 924 
    if (frag_skb == (struct sk_buff *)0) {
      
#line 925 
      printk("\001",(char *)(& dev->name),((int)fc & 1024) != 0,(int)sc >> 4,frag);
      
#line 929 
      goto rx_dropped;
    }
    else ;
    
#line 932 
    flen = (int)skb->len;
    
#line 933 
    if (frag != 0U) 
#line 934 
                    flen = (int)((size_t)flen - hdrlen); else ;
    
#line 936 
    if (frag_skb->tail + (unsigned int)flen > frag_skb->end) {
      
#line 937 
      printk("\001",(char *)(& dev->name));
      
#line 940 
      prism2_frag_cache_invalidate(local,hdr);
      
#line 941 
      goto rx_dropped;
    }
    else ;
    
#line 944 
    if (frag == 0U) {
      unsigned char *tmp_7;
      
#line 947 
      ;
      
#line 947 
      tmp_7 = skb_put(frag_skb,(unsigned int)flen);
      
#line 947 
      ;
      
#line 947 
      skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)tmp_7,(unsigned int)flen);
    }
    else {
      unsigned char *tmp_8;
      
#line 952 
      ;
      
#line 953 
      tmp_8 = skb_put(frag_skb,(unsigned int)flen);
      
#line 952 
      ;
      
#line 952 
      ;
      
#line 952 
      skb_copy_from_linear_data_offset((struct sk_buff const *)skb,(int)hdrlen,(void *)tmp_8,(unsigned int)flen);
    }
    
#line 956 
    consume_skb(skb);
    
#line 957 
    skb = (struct sk_buff *)0;
    
#line 959 
    if (((int)fc & 1024) != 0) 
#line 963 
                               goto rx_exit; else ;
    
#line 968 
    skb = frag_skb;
    
#line 969 
    hdr = (struct ieee80211_hdr *)skb->data;
    
#line 970 
    prism2_frag_cache_invalidate(local,hdr);
  }
  else ;
  
#line 976 
  if (local->host_decrypt != 0 && ((int)fc & 16384) != 0) {
    int tmp_9;
    
#line 976 
    tmp_9 = hostap_rx_frame_decrypt_msdu(local,skb,keyidx,crypt);
    
#line 976 
    if (tmp_9 != 0) 
#line 978 
                    goto rx_dropped; else ;
  }
  else ;
  
#line 980 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 981 
  if ((crypt != (struct lib80211_crypt_data *)0 && ((int)fc & 16384) == 0) && local->open_wep == 0) 
    
#line 982 
    if (local->ieee_802_1x != 0) {
      int tmp_10;
      
#line 982 
      tmp_10 = hostap_is_eapol_frame(local,skb);
      
#line 982 
      if (tmp_10 != 0) ; else 
#line 982 
                              goto _LAND;
    }
    else {
      _LAND: {
               
#line 989 
               printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr2));
               
#line 992 
               goto rx_dropped;
             }
    }
  else ;
  
#line 996 
  if (local->drop_unencrypted != 0 && ((int)fc & 16384) == 0) {
    int tmp_12;
    
#line 996 
    tmp_12 = hostap_is_eapol_frame(local,skb);
    
#line 996 
    if (tmp_12 == 0) {
      int tmp_11;
      
#line 998 
      tmp_11 = net_ratelimit();
      
#line 998 
      if (tmp_11 != 0) 
#line 999 
                       printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2)); else ;
      
#line 1003 
      goto rx_dropped;
    }
    else ;
  }
  else ;
  
#line 1008 
  payload = skb->data + hdrlen;
  
#line 1009 
  ethertype = (unsigned short)(((int)*(payload + 6U) << 8) | (int)*(payload + 7U));
  
#line 1013 
  if (local->ieee_802_1x != 0 && local->iw_mode == 3) {
    
#line 1014 
    if ((unsigned int)ethertype == 34958U) {
      
#line 1017 
      if (local->hostapd != 0 && local->apdev != (struct net_device *)0) {
        
#line 1020 
        prism2_rx_80211(local->apdev,skb,rx_stats,1);
        
#line 1022 
        local->apdevstats.rx_packets += 1UL;
        
#line 1023 
        local->apdevstats.rx_bytes += (unsigned long)skb->len;
        
#line 1024 
        goto rx_exit;
      }
      else ;
    }
    else 
      
#line 1026 
      if (frame_authorized == 0) {
        
#line 1027 
        printk("\001",(char *)(& dev->name),(int)ethertype);
        
#line 1031 
        goto rx_dropped;
      }
      else ;
  }
  else ;
  
#line 1036 
  if ((unsigned long)skb->len - hdrlen > 7UL) {
    int tmp_19;
    
#line 1036 
    tmp_19 = memcmp((void const *)payload,(void const *)(& rfc1042_header),6UL);
    
#line 1036 
    if (tmp_19 == 0) {
      
#line 1038 
      if ((unsigned int)ethertype != 33011U && (unsigned int)ethertype != 33079U) 
        
#line 1036 
        goto _LOR; else 
#line 1036 
                        goto _LAND_1;
    }
    else {
      int tmp_20;
      _LAND_1: 
#line 1038 
      tmp_20 = memcmp((void const *)payload,(void const *)(& bridge_tunnel_header),6UL);
      
#line 1038 
      if (tmp_20 == 0) {
        _LOR: {
                unsigned char *tmp_13;
                unsigned char *tmp_14;
                
#line 1042 
                skb_pull(skb,(unsigned int)hdrlen + 6U);
                
#line 1043 
                tmp_13 = skb_push(skb,6U);
                
#line 1043 
                memcpy((void *)tmp_13,(void const *)(& src),6UL);
                
#line 1044 
                tmp_14 = skb_push(skb,6U);
                
#line 1044 
                memcpy((void *)tmp_14,(void const *)(& dst),6UL);
              }
      }
      else 
#line 1036 
           goto _LAND_0;
    }
  }
  else {
    _LAND_0: {
               __be16 len;
               unsigned char *tmp_16;
               unsigned char *tmp_17;
               unsigned char *tmp_18;
               
#line 1048 
               skb_pull(skb,(unsigned int)hdrlen);
               
#line 1049 
               if (0 != 0) 
#line 1049 
                           len = (unsigned short)(((int)((unsigned short)skb->len) << 8) | ((int)((unsigned short)skb->len) >> 8)); else 
                                                                    
#line 1049 
                                                                    len = __fswab16((unsigned short)((int)((unsigned short)skb->len)));
               
#line 1050 
               tmp_16 = skb_push(skb,2U);
               
#line 1050 
               memcpy((void *)tmp_16,(void const *)(& len),2UL);
               
#line 1051 
               tmp_17 = skb_push(skb,6U);
               
#line 1051 
               memcpy((void *)tmp_17,(void const *)(& src),6UL);
               
#line 1052 
               tmp_18 = skb_push(skb,6U);
               
#line 1052 
               memcpy((void *)tmp_18,(void const *)(& dst),6UL);
             }
  }
  
#line 1055 
  if ((wds != (struct net_device *)0 && ((int)fc & 768) == 256) && skb->len > 19U) {
    
#line 1060 
    skb_copy_from_linear_data_offset((struct sk_buff const *)skb,(int)(skb->len + 4294967290U),(void *)(skb->data + 6U),6U);
    
#line 1063 
    skb_trim(skb,skb->len + 4294967290U);
  }
  else ;
  
#line 1066 
  dev->stats.rx_packets += 1UL;
  
#line 1067 
  dev->stats.rx_bytes += (unsigned long)skb->len;
  
#line 1069 
  if ((local->iw_mode == 3 && wds == (struct net_device *)0) && (local->ap)->bridge_packets != 0) 
    
#line 1071 
    if (((int)dst[0] & 1) != 0) {
      
#line 1074 
      (local->ap)->bridged_multicast += 1U;
      
#line 1075 
      skb2 = skb_clone(skb,32U);
      
#line 1076 
      if (skb2 == (struct sk_buff *)0) 
#line 1077 
                                       printk("\001",(char *)(& dev->name)); else ;
    }
    else {
      int tmp_21;
      
#line 1079 
      tmp_21 = hostap_is_sta_authorized(local->ap,(u8 *)(& dst));
      
#line 1079 
      if (tmp_21 != 0) {
        
#line 1082 
        (local->ap)->bridged_unicast += 1U;
        
#line 1083 
        skb2 = skb;
        
#line 1084 
        skb = (struct sk_buff *)0;
      }
      else ;
    }
  else ;
  
#line 1088 
  if (skb2 != (struct sk_buff *)0) {
    
#line 1090 
    skb2->dev = dev;
    
#line 1091 
    skb2->protocol = (unsigned short)256U;
    
#line 1092 
    skb_reset_mac_header(skb2);
    
#line 1093 
    skb_reset_network_header(skb2);
    
#line 1095 
    dev_queue_xmit(skb2);
  }
  else ;
  
#line 1098 
  if (skb != (struct sk_buff *)0) {
    
#line 1099 
    skb->protocol = eth_type_trans(skb,dev);
    
#line 1100 
    memset((void *)(& skb->cb),0,48UL);
    
#line 1101 
    netif_rx(skb);
  }
  else ;
  rx_exit: 
#line 1104 
  ;
  
#line 1105 
  if (sta != (void *)0) 
#line 1106 
                        hostap_handle_sta_release(sta); else ;
  
#line 1107 
  goto return_label;
  rx_dropped: 
#line 1109 
  ;
  
#line 1110 
  consume_skb(skb);
  
#line 1112 
  dev->stats.rx_dropped += 1UL;
  
#line 1113 
  goto rx_exit;
  return_label: 
#line 1113 
                return;
}


#line 1117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
static char const __kstrtab_hostap_80211_rx[16U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'8', (char)'0', (char)'2', (char)'1', (char)'1', (char)'_', (char)'r', (char)'x', (char)'\000'};

#line 1117 
struct kernel_symbol const __ksymtab_hostap_80211_rx;


#line 1117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_rx.c"
struct kernel_symbol const __ksymtab_hostap_80211_rx = {.value = (unsigned long)(& hostap_80211_rx), .name = (char const *)(& __kstrtab_hostap_80211_rx)};

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 122 
  ldv_atomic_inc(v);
  
#line 123 
  return;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 129 
  ldv_atomic_dec(v);
  
#line 130 
  return;
}


#line 398  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 401 
  tmp = ldv_kmalloc(size,flags);
  
#line 401 
  return tmp;
}


#line 736  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
static void ldv_spin_lock_72(spinlock_t *lock)
{
  
#line 740 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 742 
  spin_lock(lock);
  
#line 743 
  return;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_rx.c.aux"
static void ldv_spin_unlock_73(spinlock_t *lock)
{
  
#line 750 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 752 
  spin_unlock(lock);
  
#line 753 
  return;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
size_t strlen(char const *);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc_0(atomic_t *v);


#line 114 
static void atomic_dec_0(atomic_t *v);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_73(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_94(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_98(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_141(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_143(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_146(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_148(spinlock_t *lock);


#line 390 
static void ldv_spin_lock_150(spinlock_t *lock);


#line 394 
static void ldv_spin_lock_152(spinlock_t *lock);


#line 398 
static void ldv_spin_lock_154(spinlock_t *lock);


#line 402 
static void ldv_spin_lock_156(spinlock_t *lock);


#line 406 
static void ldv_spin_lock_158(spinlock_t *lock);


#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 409 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 410 
  return;
}


#line 435 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 439 
static void ldv_spin_lock_bh_78(spinlock_t *lock);


#line 443 
static void ldv_spin_lock_bh_80(spinlock_t *lock);


#line 447 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 451 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 455 
static void ldv_spin_lock_bh_87(spinlock_t *lock);


#line 459 
static void ldv_spin_lock_bh_89(spinlock_t *lock);


#line 463 
static void ldv_spin_lock_bh_91(spinlock_t *lock);


#line 467 
static void ldv_spin_lock_bh_102(spinlock_t *lock);


#line 471 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 475 
static void ldv_spin_lock_bh_107(spinlock_t *lock);


#line 479 
static void ldv_spin_lock_bh_109(spinlock_t *lock);


#line 483 
static void ldv_spin_lock_bh_112(spinlock_t *lock);


#line 487 
static void ldv_spin_lock_bh_115(spinlock_t *lock);


#line 491 
static void ldv_spin_lock_bh_117(spinlock_t *lock);


#line 495 
static void ldv_spin_lock_bh_119(spinlock_t *lock);


#line 499 
static void ldv_spin_lock_bh_121(spinlock_t *lock);


#line 503 
static void ldv_spin_lock_bh_123(spinlock_t *lock);


#line 507 
static void ldv_spin_lock_bh_125(spinlock_t *lock);


#line 511 
static void ldv_spin_lock_bh_127(spinlock_t *lock);


#line 515 
static void ldv_spin_lock_bh_129(spinlock_t *lock);


#line 519 
static void ldv_spin_lock_bh_131(spinlock_t *lock);


#line 523 
static void ldv_spin_lock_bh_133(spinlock_t *lock);


#line 527 
static void ldv_spin_lock_bh_135(spinlock_t *lock);


#line 531 
static void ldv_spin_lock_bh_137(spinlock_t *lock);


#line 535 
static void ldv_spin_lock_bh_139(spinlock_t *lock);


#line 539 
static void ldv_spin_lock_bh_160(spinlock_t *lock);


#line 543 
static void ldv_spin_lock_bh_162(spinlock_t *lock);


#line 547 
static void ldv_spin_lock_bh_164(spinlock_t *lock);


#line 551 
static void ldv_spin_lock_bh_167(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_74(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_95(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_99(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_142(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_144(spinlock_t *lock);


#line 431 
static void ldv_spin_unlock_145(spinlock_t *lock);


#line 435 
static void ldv_spin_unlock_147(spinlock_t *lock);


#line 439 
static void ldv_spin_unlock_149(spinlock_t *lock);


#line 443 
static void ldv_spin_unlock_151(spinlock_t *lock);


#line 447 
static void ldv_spin_unlock_153(spinlock_t *lock);


#line 451 
static void ldv_spin_unlock_155(spinlock_t *lock);


#line 455 
static void ldv_spin_unlock_157(spinlock_t *lock);


#line 459 
static void ldv_spin_unlock_159(spinlock_t *lock);


#line 460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 462 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 463 
  return;
}


#line 488 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 492 
static void ldv_spin_unlock_bh_79(spinlock_t *lock);


#line 496 
static void ldv_spin_unlock_bh_81(spinlock_t *lock);


#line 500 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 504 
static void ldv_spin_unlock_bh_84(spinlock_t *lock);


#line 508 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 512 
static void ldv_spin_unlock_bh_88(spinlock_t *lock);


#line 516 
static void ldv_spin_unlock_bh_90(spinlock_t *lock);


#line 520 
static void ldv_spin_unlock_bh_92(spinlock_t *lock);


#line 524 
static void ldv_spin_unlock_bh_103(spinlock_t *lock);


#line 528 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 532 
static void ldv_spin_unlock_bh_108(spinlock_t *lock);


#line 536 
static void ldv_spin_unlock_bh_110(spinlock_t *lock);


#line 540 
static void ldv_spin_unlock_bh_111(spinlock_t *lock);


#line 544 
static void ldv_spin_unlock_bh_113(spinlock_t *lock);


#line 548 
static void ldv_spin_unlock_bh_114(spinlock_t *lock);


#line 552 
static void ldv_spin_unlock_bh_116(spinlock_t *lock);


#line 556 
static void ldv_spin_unlock_bh_118(spinlock_t *lock);


#line 560 
static void ldv_spin_unlock_bh_120(spinlock_t *lock);


#line 564 
static void ldv_spin_unlock_bh_122(spinlock_t *lock);


#line 568 
static void ldv_spin_unlock_bh_124(spinlock_t *lock);


#line 572 
static void ldv_spin_unlock_bh_126(spinlock_t *lock);


#line 576 
static void ldv_spin_unlock_bh_128(spinlock_t *lock);


#line 580 
static void ldv_spin_unlock_bh_130(spinlock_t *lock);


#line 584 
static void ldv_spin_unlock_bh_132(spinlock_t *lock);


#line 588 
static void ldv_spin_unlock_bh_134(spinlock_t *lock);


#line 592 
static void ldv_spin_unlock_bh_136(spinlock_t *lock);


#line 596 
static void ldv_spin_unlock_bh_138(spinlock_t *lock);


#line 600 
static void ldv_spin_unlock_bh_140(spinlock_t *lock);


#line 604 
static void ldv_spin_unlock_bh_161(spinlock_t *lock);


#line 608 
static void ldv_spin_unlock_bh_163(spinlock_t *lock);


#line 612 
static void ldv_spin_unlock_bh_165(spinlock_t *lock);


#line 616 
static void ldv_spin_unlock_bh_168(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_72(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 446 
static bool ldv_flush_work_100(struct work_struct *ldv_func_arg1);


#line 450 
static bool ldv_flush_work_101(struct work_struct *ldv_func_arg1);


#line 560 
static bool ldv_schedule_work_106(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_166(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_169(struct work_struct *work);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
void remove_proc_entry(char const *, struct proc_dir_entry *);


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
static int ldv_seq_open_77(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 120 
static int ldv_seq_open_93(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 127 
int seq_puts(struct seq_file *, char const *);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_0(size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head const *list)
{
  int __retres;
  
#line 1013 
  __retres = (struct sk_buff const *)list->next == (struct sk_buff const *)list;
  
#line 1013 
  return __retres;
}


#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head const *list_)
{
  __u32 __retres;
  
#line 1318 
  __retres = list_->qlen;
  
#line 1318 
  return __retres;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  
#line 1347 
  spinlock_check(& list->lock);
  {
    struct lock_class_key __key;
    
#line 1347 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_18.rlock,"&(&list->lock)->rlock",& __key);
  }
  
#line 1348 
  __skb_queue_head_init(list);
  
#line 1349 
  return;
}


#line 1508 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);


#line 1540 
struct sk_buff *skb_dequeue(struct sk_buff_head *);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2130 
void skb_queue_purge(struct sk_buff_head *);


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
void wireless_send_event(struct net_device *, unsigned int, union iwreq_data *, char const *);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_lcp_len(struct iw_request_info *info)
{
  int __retres;
  
#line 470 
  if (((int)info->flags & 1) != 0) {
    
#line 471 
    __retres = 4;
    
#line 471 
    goto return_label;
  }
  else ;
  
#line 473 
  __retres = 8;
  return_label: 
#line 473 
                return __retres;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_point_len(struct iw_request_info *info)
{
  int __retres;
  
#line 479 
  if (((int)info->flags & 1) != 0) {
    
#line 480 
    __retres = 8;
    
#line 480 
    goto return_label;
  }
  else ;
  
#line 482 
  __retres = 16;
  return_label: 
#line 482 
                return __retres;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_event_len_adjust(struct iw_request_info *info, int event_len)
{
  
#line 489 
  if (((int)info->flags & 1) != 0) {
    
#line 490 
    event_len = (int)((unsigned int)event_len + 4294967288U);
    
#line 491 
    event_len = (int)((unsigned int)event_len + 4U);
  }
  else ;
  
#line 495 
  return event_len;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_event(struct iw_request_info *info, char *stream, char *ends, struct iw_event *iwe, int event_len)
{
  
#line 506 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 508 
  event_len = iwe_stream_event_len_adjust(info,event_len);
  
#line 511 
  if ((long)(stream + event_len < ends) != 0L) {
    
#line 512 
    iwe->len = (unsigned short)event_len;
    
#line 514 
    memcpy((void *)stream,(void const *)iwe,4UL);
    
#line 515 
    memcpy((void *)(stream + lcp_len),(void const *)(& iwe->u),(unsigned long)(event_len - lcp_len));
    
#line 517 
    stream += event_len;
  }
  else ;
  
#line 519 
  return stream;
}


#line 539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_point(struct iw_request_info *info, char *stream, char *ends, struct iw_event *iwe, char *extra)
{
  int tmp;
  
#line 542 
  tmp = iwe_stream_point_len(info);
  
#line 542 
  int event_len = tmp + (int)iwe->u.data.length;
  
#line 543 
  int point_len = iwe_stream_point_len(info);
  
#line 544 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 547 
  if ((long)(stream + event_len < ends) != 0L) {
    
#line 548 
    iwe->len = (unsigned short)event_len;
    
#line 549 
    memcpy((void *)stream,(void const *)iwe,4UL);
    
#line 550 
    memcpy((void *)(stream + lcp_len),(void const *)(& iwe->u) + 8U,4UL);
    
#line 553 
    memcpy((void *)(stream + point_len),(void const *)extra,(unsigned long)iwe->u.data.length);
    
#line 554 
    stream += event_len;
  }
  else ;
  
#line 556 
  return stream;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_protected(__le16 fc)
{
  int __retres;
  
#line 319 
  __retres = ((int)fc & 16384) != 0;
  
#line 319 
  return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_ctl(__le16 fc)
{
  int __retres;
  
#line 347 
  __retres = ((int)fc & 12) == 4;
  
#line 347 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data(__le16 fc)
{
  int __retres;
  
#line 357 
  __retres = ((int)fc & 12) == 8;
  
#line 357 
  return __retres;
}


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_assoc_resp(__le16 fc)
{
  int __retres;
  
#line 405 
  __retres = ((int)fc & 252) == 16;
  
#line 405 
  return __retres;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_reassoc_resp(__le16 fc)
{
  int __retres;
  
#line 425 
  __retres = ((int)fc & 252) == 48;
  
#line 425 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_beacon(__le16 fc)
{
  int __retres;
  
#line 455 
  __retres = ((int)fc & 252) == 128;
  
#line 455 
  return __retres;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_auth(__le16 fc)
{
  int __retres;
  
#line 485 
  __retres = ((int)fc & 252) == 176;
  
#line 485 
  return __retres;
}


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypto_ops *lib80211_get_crypto_ops(char const *);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.h"
void hostap_init_data(local_info_t *local);


#line 221 
void hostap_init_ap_proc(local_info_t *local);


#line 222 
void hostap_free_data(struct ap_data *ap);


#line 223 
void hostap_check_sta_fw_version(struct ap_data *ap, int sta_fw_ver);


#line 235 
ap_tx_ret hostap_handle_sta_tx(local_info_t *local, struct hostap_tx_data *tx);


#line 237 
void hostap_handle_sta_tx_exc(local_info_t *local, struct sk_buff *skb);


#line 251 
int hostap_add_sta(struct ap_data *ap, u8 *sta_addr);


#line 254 
void hostap_update_rates(local_info_t *local);


#line 255 
void hostap_add_wds_links(local_info_t *local);


#line 259 
void hostap_deauth_all_stas(struct net_device *dev, struct ap_data *ap, int resend);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
static long const freq_list_0[14U] = {2412L, 2417L, 2422L, 2427L, 2432L, 2437L, 2442L, 2447L, 2452L, 2457L, 2462L, 2467L, 2472L, 2484L};

#line 18 
u16 hostap_tx_callback_register(local_info_t *local, void (*func)(struct sk_buff *, int , void *), void *data);


#line 52 
int prism2_wds_add(local_info_t *local, u8 *remote_addr, int rtnl_locked);


#line 54 
int prism2_wds_del(local_info_t *local, u8 *remote_addr, int rtnl_locked, int do_not_remove);


#line 60 
int ap_control_add_mac(struct mac_restrictions *mac_restrictions, u8 *mac);


#line 61 
int ap_control_del_mac(struct mac_restrictions *mac_restrictions, u8 *mac);


#line 62 
void ap_control_flush_macs(struct mac_restrictions *mac_restrictions);


#line 63 
int ap_control_kick_mac(struct ap_data *ap, struct net_device *dev, u8 *mac);


#line 64 
void ap_control_kickall(struct ap_data *ap);


#line 65 
void *ap_crypt_get_ptrs(struct ap_data *ap, u8 *addr, int permanent, struct lib80211_crypt_data ***crypt);


#line 67 
int prism2_ap_get_sta_qual(local_info_t *local, struct sockaddr *addr, struct iw_quality *qual, int buf_size, int aplist);


#line 70 
int prism2_ap_translate_scan(struct net_device *dev, struct iw_request_info *info, char *buffer);


#line 72 
int prism2_hostapd(struct ap_data *ap, struct prism2_hostapd_param *param);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int other_ap_policy[8U] = {0, -1, -1, -1, -1, -1, -1, -1};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_max_inactivity[8U] = {300, -1, -1, -1, -1, -1, -1, -1};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_bridge_packets[8U] = {1, -1, -1, -1, -1, -1, -1, -1};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int autom_ap_wds[8U] = {0, -1, -1, -1, -1, -1, -1, -1};

#line 55 
static struct sta_info *ap_get_sta(struct ap_data *ap, u8 *sta);


#line 56 
static void hostap_event_expired_sta(struct net_device *dev, struct sta_info *sta);


#line 58 
static void handle_add_proc_queue(struct work_struct *work);


#line 61 
static void handle_wds_oper_queue(struct work_struct *work);


#line 62 
static void prism2_send_mgmt(struct net_device *dev, u16 type_subtype, char *body, int body_len, u8 *addr, u16 tx_cb_idx);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_debug_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  
#line 71 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 73 
  seq_printf(m,"BridgedUnicastFrames=%u\n",ap->bridged_unicast);
  
#line 74 
  seq_printf(m,"BridgedMulticastFrames=%u\n",ap->bridged_multicast);
  
#line 75 
  seq_printf(m,"max_inactivity=%u\n",ap->max_inactivity / 250U);
  
#line 76 
  seq_printf(m,"bridge_packets=%u\n",ap->bridge_packets);
  
#line 77 
  seq_printf(m,"nullfunc_ack=%u\n",ap->nullfunc_ack);
  
#line 78 
  seq_printf(m,"autom_ap_wds=%u\n",ap->autom_ap_wds);
  
#line 79 
  seq_printf(m,"auth_algs=%u\n",(ap->local)->auth_algs);
  
#line 80 
  seq_printf(m,"tx_drop_nonassoc=%u\n",ap->tx_drop_nonassoc);
  
#line 81 
  __retres = 0;
  
#line 81 
  return __retres;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_debug_proc_open(struct inode *inode, struct file *file)
{
  int tmp_0;
  void *tmp;
  
#line 86 
  tmp = PDE_DATA((struct inode const *)inode);
  
#line 86 
  ;
  
#line 86 
  tmp_0 = single_open(file,& ap_debug_proc_show,tmp);
  
#line 86 
  return tmp_0;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct file_operations const ap_debug_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & ap_debug_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_sta_hash_add(struct ap_data *ap, struct sta_info *sta)
{
  
#line 100 
  sta->hnext = ap->sta_hash[(int)sta->addr[5]];
  
#line 101 
  ap->sta_hash[(int)sta->addr[5]] = sta;
  
#line 102 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_sta_hash_del(struct ap_data *ap, struct sta_info *sta)
{
  struct sta_info *s;
  bool tmp;
  
#line 108 
  s = ap->sta_hash[(int)sta->addr[5]];
  
#line 109 
  if (s == (struct sta_info *)0) 
#line 109 
                                 goto return_label; else ;
  
#line 110 
  tmp = ether_addr_equal((u8 const *)(& s->addr),(u8 const *)(& sta->addr));
  
#line 110 
  if ((int)tmp != 0) {
    
#line 111 
    ap->sta_hash[(int)sta->addr[5]] = s->hnext;
    
#line 112 
    goto return_label;
  }
  else ;
  
#line 115 
  goto ldv_46879;
  ldv_46878: 
#line 116 
  ;
  
#line 116 
  s = s->hnext;
  ldv_46879: 
#line 117 
  ;
  
#line 115 
  if (s->hnext != (struct sta_info *)0) {
    int tmp_1;
    bool tmp_0;
    
#line 115 
    tmp_0 = ether_addr_equal((u8 const *)(& (s->hnext)->addr),(u8 const *)(& sta->addr));
    
#line 115 
    if (tmp_0) 
#line 115 
               tmp_1 = 0; else 
#line 115 
                               tmp_1 = 1;
    
#line 115 
    if (tmp_1) 
#line 117 
               goto ldv_46878; else 
#line 120 
                                    goto ldv_46880;
  }
  else 
#line 120 
       goto ldv_46880;
  ldv_46880: 
#line 121 
  ;
  
#line 117 
  if (s->hnext != (struct sta_info *)0) 
#line 118 
                                        s->hnext = (s->hnext)->hnext; else 
                                                                    
#line 120 
                                                                    printk("AP: could not remove STA %pM from hash table\n",(u8 *)(& sta->addr));
  return_label: 
#line 122 
                return;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_free_sta(struct ap_data *ap, struct sta_info *sta)
{
  
#line 126 
  if (sta->ap != 0 && sta->local != (local_info_t *)0) 
#line 127 
                                                       hostap_event_expired_sta((sta->local)->dev,sta); else ;
  
#line 129 
  if (ap->proc != (struct proc_dir_entry *)0) {
    char name[20U];
    
#line 131 
    sprintf((char *)(& name),"%pM",(u8 *)(& sta->addr));
    
#line 132 
    remove_proc_entry((char const *)(& name),ap->proc);
  }
  else ;
  
#line 135 
  if (sta->crypt != (struct lib80211_crypt_data *)0) {
    
#line 136 
    (*(((sta->crypt)->ops)->deinit))((sta->crypt)->priv);
    
#line 137 
    kfree((void const *)sta->crypt);
    
#line 138 
    sta->crypt = (struct lib80211_crypt_data *)0;
  }
  else ;
  
#line 141 
  skb_queue_purge(& sta->tx_buf);
  
#line 143 
  ap->num_sta -= 1;
  
#line 145 
  if ((unsigned int)sta->aid != 0U) 
#line 146 
                                    ap->sta_aid[(int)sta->aid + -1] = (struct sta_info *)0; else ;
  
#line 148 
  if (sta->ap == 0) 
#line 149 
                    kfree((void const *)sta->u.sta.challenge); else ;
  
#line 150 
  ldv_del_timer_sync_72(& sta->timer);
  
#line 153 
  kfree((void const *)sta);
  
#line 154 
  return;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_set_tim(local_info_t *local, int aid, int set)
{
  
#line 159 
  if ((local->func)->set_tim != (int (*)(struct net_device *, int , int ))0) 
    
#line 160 
    (*((local->func)->set_tim))(local->dev,aid,set); else ;
  
#line 161 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_event_new_sta(struct net_device *dev, struct sta_info *sta)
{
  union iwreq_data wrqu;
  
#line 167 
  memset((void *)(& wrqu),0,16UL);
  
#line 168 
  memcpy((void *)(& wrqu.addr.sa_data),(void const *)(& sta->addr),6UL);
  
#line 169 
  wrqu.addr.sa_family = (unsigned short)1U;
  
#line 170 
  wireless_send_event(dev,35843U,& wrqu,(char const *)0);
  
#line 171 
  return;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_event_expired_sta(struct net_device *dev, struct sta_info *sta)
{
  union iwreq_data wrqu;
  
#line 178 
  memset((void *)(& wrqu),0,16UL);
  
#line 179 
  memcpy((void *)(& wrqu.addr.sa_data),(void const *)(& sta->addr),6UL);
  
#line 180 
  wrqu.addr.sa_family = (unsigned short)1U;
  
#line 181 
  wireless_send_event(dev,35844U,& wrqu,(char const *)0);
  
#line 182 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_handle_timer(unsigned long data)
{
  local_info_t *local;
  struct ap_data *ap;
  int was_assoc;
  int tmp;
  int tmp_0;
  
#line 189 
  struct sta_info *sta = (struct sta_info *)data;
  
#line 192 
  unsigned long next_time = 0UL;
  
#line 195 
  if ((sta == (struct sta_info *)0 || sta->local == (local_info_t *)0) || (sta->local)->ap == (struct ap_data *)0) {
    
#line 196 
    printk("\001");
    
#line 197 
    goto return_label;
  }
  else ;
  
#line 200 
  local = sta->local;
  
#line 201 
  ap = local->ap;
  
#line 202 
  was_assoc = (int)sta->flags & 2;
  
#line 204 
  tmp = atomic_read((atomic_t const *)(& sta->users));
  
#line 204 
  if (tmp != 0) 
#line 205 
                next_time = jiffies + 250UL;
  else 
    
#line 206 
    if (((unsigned long)sta->flags & 16UL) != 0UL && ((unsigned long)sta->flags & 1UL) == 0UL) 
      
#line 207 
      next_time = (unsigned long)ap->max_inactivity + jiffies; else ;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 209 
    tmp_0 = 1;
  }
  
#line 209 
  if (tmp_0 != 0) {
    int tmp_1;
    {
      unsigned long __dummy_0;
      unsigned long volatile __dummy2_0;
      
#line 209 
      tmp_1 = 1;
    }
    
#line 209 
    if (tmp_1 != 0) {
      
#line 209 
      if ((long)(jiffies - (sta->last_rx + (unsigned long)ap->max_inactivity)) < 0L) {
        
#line 211 
        sta->timeout_next = STA_NULLFUNC;
        
#line 212 
        next_time = sta->last_rx + (unsigned long)ap->max_inactivity;
      }
      else 
#line 209 
           goto _LAND_0;
    }
    else 
#line 209 
         goto _LAND_0;
  }
  else 
    _LAND_0: 
#line 213 
             if (sta->timeout_next == (unsigned int)STA_DISASSOC && ((unsigned long)sta->flags & 64UL) == 0UL) {
               
#line 216 
               sta->timeout_next = STA_NULLFUNC;
               
#line 217 
               next_time = (unsigned long)ap->max_inactivity + jiffies;
             }
             else ;
  
#line 220 
  if (next_time != 0UL) {
    
#line 221 
    sta->timer.expires = next_time;
    
#line 222 
    add_timer(& sta->timer);
    
#line 223 
    goto return_label;
  }
  else ;
  
#line 226 
  if (sta->ap != 0) 
#line 227 
                    sta->timeout_next = STA_DEAUTH; else ;
  
#line 229 
  if (sta->timeout_next == (unsigned int)STA_DEAUTH && ((unsigned long)sta->flags & 16UL) == 0UL) {
    
#line 230 
    ldv_spin_lock_73(& ap->sta_table_lock);
    
#line 231 
    ap_sta_hash_del(ap,sta);
    
#line 232 
    list_del(& sta->list);
    
#line 233 
    ldv_spin_unlock_74(& ap->sta_table_lock);
    
#line 234 
    sta->flags &= 4294967292U;
  }
  else 
    
#line 235 
    if (sta->timeout_next == (unsigned int)STA_DISASSOC) 
#line 236 
                                                         sta->flags &= 4294967293U; else ;
  
#line 238 
  if ((was_assoc != 0 && ((unsigned long)sta->flags & 2UL) == 0UL) && sta->ap == 0) 
    
#line 239 
    hostap_event_expired_sta(local->dev,sta); else ;
  
#line 241 
  if (sta->timeout_next == (unsigned int)STA_DEAUTH && (unsigned int)sta->aid != 0U) {
    int tmp_2;
    
#line 241 
    tmp_2 = skb_queue_empty((struct sk_buff_head const *)(& sta->tx_buf));
    
#line 241 
    if (tmp_2 == 0) {
      
#line 243 
      hostap_set_tim(local,(int)sta->aid,0);
      
#line 244 
      sta->flags &= 4294967287U;
    }
    else ;
  }
  else ;
  
#line 247 
  if (sta->ap != 0) {
    
#line 248 
    if (ap->autom_ap_wds != 0) {
      
#line 249 
      printk("\001",(char *)(& (local->dev)->name),(u8 *)(& sta->addr));
      
#line 252 
      hostap_wds_link_oper(local,(u8 *)(& sta->addr),1);
    }
    else ;
  }
  else 
    
#line 254 
    if (sta->timeout_next == (unsigned int)STA_NULLFUNC) {
      
#line 260 
      sta->flags |= 64U;
      
#line 261 
      prism2_send_mgmt(local->dev,(unsigned short)8,(char *)0,0,(u8 *)(& sta->addr),(unsigned short)((int)ap->tx_callback_poll));
    }
    else {
      __le16 resp;
      char *tmp_3;
      unsigned int tmp_4;
      
#line 265 
      int deauth = sta->timeout_next == (unsigned int)STA_DEAUTH;
      
#line 267 
      ;
      
#line 267 
      ;
      
#line 267 
      ;
      
#line 267 
      if (deauth != 0) 
#line 267 
                       tmp_3 = (char *)"deauthentication"; else 
#line 267 
                                                                tmp_3 = (char *)"disassociation";
      
#line 267 
      ;
      
#line 267 
      printk("\001",(char *)(& (local->dev)->name),tmp_3,(u8 *)(& sta->addr),sta->last_rx,jiffies);
      
#line 273 
      if (deauth != 0) 
#line 273 
                       resp = (unsigned short)2U; else 
#line 273 
                                                       resp = (unsigned short)4U;
      
#line 275 
      ;
      
#line 275 
      if (deauth != 0) 
#line 275 
                       tmp_4 = 192U; else 
#line 275 
                                          tmp_4 = 160U;
      
#line 275 
      ;
      
#line 275 
      prism2_send_mgmt(local->dev,(unsigned short)((int)tmp_4),(char *)(& resp),2,(u8 *)(& sta->addr),(unsigned short)0);
    }
  
#line 281 
  if (sta->timeout_next == (unsigned int)STA_DEAUTH) {
    
#line 282 
    if (((unsigned long)sta->flags & 16UL) != 0UL) 
#line 283 
                                                   printk("\001",(char *)(& (local->dev)->name),(u8 *)(& sta->addr)); else 
                                                                    
#line 288 
                                                                    ap_free_sta(ap,sta);
    
#line 289 
    goto return_label;
  }
  else ;
  
#line 292 
  if (sta->timeout_next == (unsigned int)STA_NULLFUNC) {
    
#line 293 
    sta->timeout_next = STA_DISASSOC;
    
#line 294 
    sta->timer.expires = jiffies + 250UL;
  }
  else {
    
#line 296 
    sta->timeout_next = STA_DEAUTH;
    
#line 297 
    sta->timer.expires = jiffies + 250UL;
  }
  
#line 300 
  add_timer(& sta->timer);
  return_label: 
#line 301 
                return;
}


#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_deauth_all_stas(struct net_device *dev, struct ap_data *ap, int resend)
{
  u8 addr[6U];
  __le16 resp;
  int i;
  
#line 311 
  printk("\001",(char *)(& dev->name));
  
#line 312 
  eth_broadcast_addr((u8 *)(& addr));
  
#line 314 
  resp = (unsigned short)2U;
  
#line 320 
  i = 0;
  
#line 320 
  goto ldv_46930;
  ldv_46929: 
#line 321 
  ;
  
#line 321 
  prism2_send_mgmt(dev,(unsigned short)192,(char *)(& resp),2,(u8 *)(& addr),(unsigned short)0);
  
#line 325 
  if (resend == 0 || ap->num_sta <= 0) 
#line 326 
                                       goto return_label; else ;
  {
    
#line 328 
    unsigned long __ms = 50UL;
    {
      unsigned long tmp;
      
#line 328 
      goto ldv_46927;
      ldv_46926: 
#line 329 
      ;
      
#line 328 
      __const_udelay(4295000UL);
      ldv_46927: 
#line 330 
      ;
      
#line 328 
      tmp = __ms;
      
#line 328 
      __ms -= 1UL;
      
#line 328 
      ;
      
#line 328 
      if (tmp != 0UL) 
#line 330 
                      goto ldv_46926; else 
#line 333 
                                           goto ldv_46928;
      ldv_46928: 
#line 334 
      ;
    }
  }
  
#line 320 
  i += 1;
  ldv_46930: 
#line 321 
  ;
  
#line 320 
  if (i <= 4) 
#line 322 
              goto ldv_46929; else 
#line 325 
                                   goto ldv_46931;
  ldv_46931: 
#line 326 
  ;
  return_label: 
#line 327 
                return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_control_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  char *policy_txt;
  struct mac_entry *entry;
  
#line 335 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 339 
  if (v == (void *)1) {
    
#line 340 
    switch ((unsigned int)ap->mac_restrictions.policy) {
      case (unsigned int)0: 
#line 341 
      ;
      
#line 342 
      policy_txt = (char *)"open";
      
#line 343 
      goto ldv_46940;
      case (unsigned int)1: 
#line 344 
      ;
      
#line 345 
      policy_txt = (char *)"allow";
      
#line 346 
      goto ldv_46940;
      case (unsigned int)2: 
#line 347 
      ;
      
#line 348 
      policy_txt = (char *)"deny";
      
#line 349 
      goto ldv_46940;
      default: 
#line 350 
      ;
      
#line 351 
      policy_txt = (char *)"unknown";
      
#line 352 
      goto ldv_46940;
    }
    ldv_46940: 
#line 354 
    ;
    
#line 354 
    seq_printf(m,"MAC policy: %s\n",policy_txt);
    
#line 355 
    seq_printf(m,"MAC entries: %u\n",ap->mac_restrictions.entries);
    
#line 356 
    seq_puts(m,"MAC list:\n");
    
#line 357 
    __retres = 0;
    
#line 357 
    goto return_label;
  }
  else ;
  
#line 360 
  entry = (struct mac_entry *)v;
  
#line 361 
  seq_printf(m,"%pM\n",(u8 *)(& entry->addr));
  
#line 362 
  __retres = 0;
  return_label: 
#line 362 
                return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void *ap_control_proc_start(struct seq_file *m, loff_t *_pos)
{
  void *tmp;
  
#line 367 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 368 
  ldv_spin_lock_bh_75(& ap->mac_restrictions.lock);
  
#line 369 
  tmp = (void *)seq_list_start_head(& ap->mac_restrictions.mac_list,*_pos);
  
#line 369 
  return tmp;
}


#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void *ap_control_proc_next(struct seq_file *m, void *v, loff_t *_pos)
{
  void *tmp;
  
#line 374 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 375 
  tmp = (void *)seq_list_next(v,& ap->mac_restrictions.mac_list,_pos);
  
#line 375 
  return tmp;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_control_proc_stop(struct seq_file *m, void *v)
{
  
#line 380 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 381 
  ldv_spin_unlock_bh_76(& ap->mac_restrictions.lock);
  
#line 382 
  return;
}


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct seq_operations const ap_control_proc_seqops = {.start = & ap_control_proc_start, .stop = & ap_control_proc_stop, .next = & ap_control_proc_next, .show = & ap_control_proc_show};

#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_control_proc_open(struct inode *inode, struct file *file)
{
  
#line 393 
  int ret = ldv_seq_open_77(file,& ap_control_proc_seqops);
  
#line 394 
  if (ret == 0) {
    
#line 395 
    struct seq_file *m = (struct seq_file *)file->private_data;
    
#line 396 
    m->private = PDE_DATA((struct inode const *)inode);
  }
  else ;
  
#line 398 
  return ret;
}


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct file_operations const ap_control_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & ap_control_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int ap_control_add_mac(struct mac_restrictions *mac_restrictions, u8 *mac)
{
  int __retres;
  struct mac_entry *entry;
  
#line 413 
  entry = (struct mac_entry *)kmalloc_0(24UL,208U);
  
#line 414 
  if (entry == (struct mac_entry *)0) {
    
#line 415 
    __retres = -12;
    
#line 415 
    goto return_label;
  }
  else ;
  
#line 417 
  memcpy((void *)(& entry->addr),(void const *)mac,6UL);
  
#line 419 
  ldv_spin_lock_bh_78(& mac_restrictions->lock);
  
#line 420 
  list_add_tail(& entry->list,& mac_restrictions->mac_list);
  
#line 421 
  mac_restrictions->entries += 1U;
  
#line 422 
  ldv_spin_unlock_bh_79(& mac_restrictions->lock);
  
#line 424 
  __retres = 0;
  return_label: 
#line 424 
                return __retres;
}


#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int ap_control_del_mac(struct mac_restrictions *mac_restrictions, u8 *mac)
{
  int __retres;
  struct list_head *ptr;
  struct mac_entry *entry;
  struct mac_entry *tmp;
  bool tmp_0;
  
#line 433 
  ldv_spin_lock_bh_80(& mac_restrictions->lock);
  
#line 434 
  ptr = mac_restrictions->mac_list.next;
  
#line 434 
  goto ldv_46982;
  ldv_46981: 
#line 435 
  ;
  {
    
#line 436 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 436 
    tmp = (struct mac_entry *)__mptr;
  }
  
#line 436 
  entry = tmp;
  
#line 438 
  tmp_0 = ether_addr_equal((u8 const *)(& entry->addr),(u8 const *)mac);
  
#line 438 
  if ((int)tmp_0 != 0) {
    
#line 439 
    list_del(ptr);
    
#line 440 
    kfree((void const *)entry);
    
#line 441 
    mac_restrictions->entries -= 1U;
    
#line 442 
    ldv_spin_unlock_bh_81(& mac_restrictions->lock);
    
#line 443 
    __retres = 0;
    
#line 443 
    goto return_label;
  }
  else ;
  
#line 435 
  ptr = ptr->next;
  ldv_46982: 
#line 436 
  ;
  
#line 435 
  if (& mac_restrictions->mac_list != ptr) 
#line 437 
                                           goto ldv_46981; else 
#line 440 
                                                                goto ldv_46983;
  ldv_46983: 
#line 441 
  ;
  
#line 446 
  ldv_spin_unlock_bh_82(& mac_restrictions->lock);
  
#line 447 
  __retres = -1;
  return_label: 
#line 447 
                return __retres;
}


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_control_mac_deny(struct mac_restrictions *mac_restrictions, u8 *mac)
{
  int __retres;
  struct mac_entry *entry;
  struct mac_entry *tmp;
  bool tmp_0;
  struct mac_entry *tmp_1;
  
#line 455 
  int found = 0;
  
#line 457 
  if (mac_restrictions->policy == (unsigned int)MAC_POLICY_OPEN) {
    
#line 458 
    __retres = 0;
    
#line 458 
    goto return_label;
  }
  else ;
  
#line 460 
  ldv_spin_lock_bh_83(& mac_restrictions->lock);
  {
    
#line 461 
    struct list_head const *__mptr = (struct list_head const *)mac_restrictions->mac_list.next;
    
#line 461 
    tmp = (struct mac_entry *)__mptr;
  }
  
#line 461 
  entry = tmp;
  
#line 461 
  goto ldv_46996;
  ldv_46995: 
#line 462 
  ;
  
#line 462 
  tmp_0 = ether_addr_equal((u8 const *)(& entry->addr),(u8 const *)mac);
  
#line 462 
  if ((int)tmp_0 != 0) {
    
#line 463 
    found = 1;
    
#line 464 
    goto ldv_46994;
  }
  else ;
  {
    
#line 461 
    struct list_head const *__mptr_0 = (struct list_head const *)entry->list.next;
    
#line 461 
    tmp_1 = (struct mac_entry *)__mptr_0;
  }
  
#line 461 
  entry = tmp_1;
  ldv_46996: 
#line 463 
  ;
  
#line 461 
  if (& entry->list != & mac_restrictions->mac_list) 
#line 463 
                                                     goto ldv_46995; else 
                                                                    
#line 466 
                                                                    goto ldv_46994;
  ldv_46994: 
#line 467 
  ;
  
#line 467 
  ldv_spin_unlock_bh_84(& mac_restrictions->lock);
  
#line 469 
  if (mac_restrictions->policy == (unsigned int)MAC_POLICY_ALLOW) {
    
#line 470 
    __retres = found == 0;
    
#line 470 
    goto return_label;
  }
  else {
    
#line 472 
    __retres = found;
    
#line 472 
    goto return_label;
  }
  return_label: 
#line 469 
                return __retres;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void ap_control_flush_macs(struct mac_restrictions *mac_restrictions)
{
  struct list_head *ptr;
  struct list_head *n;
  struct mac_entry *entry;
  struct mac_entry *tmp;
  
#line 481 
  if (mac_restrictions->entries == 0U) 
#line 482 
                                       goto return_label; else ;
  
#line 484 
  ldv_spin_lock_bh_85(& mac_restrictions->lock);
  
#line 485 
  ptr = mac_restrictions->mac_list.next;
  
#line 485 
  n = ptr->next;
  
#line 485 
  goto ldv_47006;
  ldv_47005: 
#line 486 
  ;
  {
    
#line 488 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 488 
    tmp = (struct mac_entry *)__mptr;
  }
  
#line 488 
  entry = tmp;
  
#line 489 
  list_del(ptr);
  
#line 490 
  kfree((void const *)entry);
  
#line 487 
  ptr = n;
  
#line 487 
  n = ptr->next;
  ldv_47006: 
#line 488 
  ;
  
#line 486 
  if (& mac_restrictions->mac_list != ptr) 
#line 488 
                                           goto ldv_47005; else 
#line 491 
                                                                goto ldv_47007;
  ldv_47007: 
#line 492 
  ;
  
#line 492 
  mac_restrictions->entries = 0U;
  
#line 493 
  ldv_spin_unlock_bh_86(& mac_restrictions->lock);
  return_label: 
#line 494 
                return;
}


#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int ap_control_kick_mac(struct ap_data *ap, struct net_device *dev, u8 *mac)
{
  int __retres;
  struct sta_info *sta;
  __le16 resp;
  
#line 502 
  ldv_spin_lock_bh_87(& ap->sta_table_lock);
  
#line 503 
  sta = ap_get_sta(ap,mac);
  
#line 504 
  if (sta != (struct sta_info *)0) {
    
#line 505 
    ap_sta_hash_del(ap,sta);
    
#line 506 
    list_del(& sta->list);
  }
  else ;
  
#line 508 
  ldv_spin_unlock_bh_88(& ap->sta_table_lock);
  
#line 510 
  if (sta == (struct sta_info *)0) {
    
#line 511 
    __retres = -22;
    
#line 511 
    goto return_label;
  }
  else ;
  
#line 513 
  resp = (unsigned short)2U;
  
#line 514 
  prism2_send_mgmt(dev,(unsigned short)192,(char *)(& resp),2,(u8 *)(& sta->addr),(unsigned short)0);
  
#line 517 
  if (((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) 
#line 518 
                                                                hostap_event_expired_sta(dev,sta); else ;
  
#line 520 
  ap_free_sta(ap,sta);
  
#line 522 
  __retres = 0;
  return_label: 
#line 522 
                return __retres;
}


#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void ap_control_kickall(struct ap_data *ap)
{
  struct list_head *ptr;
  struct list_head *n;
  struct sta_info *sta;
  struct sta_info *tmp;
  
#line 533 
  ldv_spin_lock_bh_89(& ap->sta_table_lock);
  
#line 534 
  ptr = ap->sta_list.next;
  
#line 534 
  n = ptr->next;
  
#line 534 
  goto ldv_47024;
  ldv_47023: 
#line 535 
  ;
  {
    
#line 536 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 536 
    tmp = (struct sta_info *)__mptr;
  }
  
#line 536 
  sta = tmp;
  
#line 537 
  ap_sta_hash_del(ap,sta);
  
#line 538 
  list_del(& sta->list);
  
#line 539 
  if ((((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) && sta->local != (local_info_t *)0) 
    
#line 540 
    hostap_event_expired_sta((sta->local)->dev,sta); else ;
  
#line 541 
  ap_free_sta(ap,sta);
  
#line 535 
  ptr = n;
  
#line 535 
  n = ptr->next;
  ldv_47024: 
#line 536 
  ;
  
#line 534 
  if (& ap->sta_list != ptr) 
#line 536 
                             goto ldv_47023; else 
#line 539 
                                                  goto ldv_47025;
  ldv_47025: 
#line 540 
  ;
  
#line 543 
  ldv_spin_unlock_bh_90(& ap->sta_table_lock);
  
#line 544 
  return;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_ap_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  int i;
  
#line 551 
  struct sta_info *sta = (struct sta_info *)v;
  
#line 554 
  if (v == (void *)1) {
    
#line 555 
    seq_printf(m,"# BSSID CHAN SIGNAL NOISE RATE SSID FLAGS\n");
    
#line 556 
    __retres = 0;
    
#line 556 
    goto return_label;
  }
  else ;
  
#line 559 
  if (sta->ap == 0) {
    
#line 560 
    __retres = 0;
    
#line 560 
    goto return_label;
  }
  else ;
  
#line 562 
  seq_printf(m,"%pM %d %d %d %d \'",(u8 *)(& sta->addr),sta->u.ap.channel,(int)sta->last_rx_signal,(int)sta->last_rx_silence,(int)sta->last_rx_rate);
  
#line 567 
  i = 0;
  
#line 567 
  goto ldv_47033;
  ldv_47032: 
#line 568 
  ;
  
#line 568 
  if ((unsigned int)sta->u.ap.ssid[i] + 224U <= 94U) 
#line 569 
                                                     seq_putc(m,(char)((int)((char)sta->u.ap.ssid[i]))); else 
                                                                    
#line 571 
                                                                    seq_printf(m,"<%02x>",(int)sta->u.ap.ssid[i]);
  
#line 567 
  i += 1;
  ldv_47033: 
#line 568 
  ;
  
#line 567 
  if (sta->u.ap.ssid_len > i) 
#line 569 
                              goto ldv_47032; else 
#line 572 
                                                   goto ldv_47034;
  ldv_47034: 
#line 573 
  ;
  
#line 574 
  seq_putc(m,(char)39);
  
#line 575 
  if (((int)sta->capability & 1) != 0) 
#line 576 
                                       seq_puts(m," [ESS]"); else ;
  
#line 577 
  if (((int)sta->capability & 2) != 0) 
#line 578 
                                       seq_puts(m," [IBSS]"); else ;
  
#line 579 
  if (((int)sta->capability & 16) != 0) 
#line 580 
                                        seq_puts(m," [WEP]"); else ;
  
#line 581 
  seq_putc(m,(char)10);
  
#line 582 
  __retres = 0;
  return_label: 
#line 582 
                return __retres;
}


#line 585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void *prism2_ap_proc_start(struct seq_file *m, loff_t *_pos)
{
  void *tmp;
  
#line 587 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 588 
  ldv_spin_lock_bh_91(& ap->sta_table_lock);
  
#line 589 
  tmp = (void *)seq_list_start_head(& ap->sta_list,*_pos);
  
#line 589 
  return tmp;
}


#line 592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void *prism2_ap_proc_next(struct seq_file *m, void *v, loff_t *_pos)
{
  void *tmp;
  
#line 594 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 595 
  tmp = (void *)seq_list_next(v,& ap->sta_list,_pos);
  
#line 595 
  return tmp;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void prism2_ap_proc_stop(struct seq_file *m, void *v)
{
  
#line 600 
  struct ap_data *ap = (struct ap_data *)m->private;
  
#line 601 
  ldv_spin_unlock_bh_92(& ap->sta_table_lock);
  
#line 602 
  return;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct seq_operations const prism2_ap_proc_seqops = {.start = & prism2_ap_proc_start, .stop = & prism2_ap_proc_stop, .next = & prism2_ap_proc_next, .show = & prism2_ap_proc_show};

#line 611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_ap_proc_open(struct inode *inode, struct file *file)
{
  
#line 613 
  int ret = ldv_seq_open_93(file,& prism2_ap_proc_seqops);
  
#line 614 
  if (ret == 0) {
    
#line 615 
    struct seq_file *m = (struct seq_file *)file->private_data;
    
#line 616 
    m->private = PDE_DATA((struct inode const *)inode);
  }
  else ;
  
#line 618 
  return ret;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct file_operations const prism2_ap_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_ap_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_check_sta_fw_version(struct ap_data *ap, int sta_fw_ver)
{
  
#line 632 
  if (ap == (struct ap_data *)0) 
#line 633 
                                 goto return_label; else ;
  
#line 635 
  if (sta_fw_ver == 2048) {
    
#line 636 
    printk("\001");
    
#line 638 
    ap->nullfunc_ack = 1;
  }
  else 
#line 640 
       ap->nullfunc_ack = 0;
  
#line 642 
  if (sta_fw_ver == 66562) 
#line 643 
                           printk("\001",(char *)(& ((ap->local)->dev)->name)); else ;
  return_label: 
#line 646 
                return;
}


#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_ap_tx_cb(struct sk_buff *skb, int ok, void *data)
{
  struct ieee80211_hdr *hdr;
  unsigned int tmp;
  int tmp_0;
  
#line 653 
  struct ap_data *ap = (struct ap_data *)data;
  
#line 656 
  if ((ap->local)->hostapd == 0 || (ap->local)->apdev == (struct net_device *)0) {
    
#line 657 
    consume_skb(skb);
    
#line 658 
    goto return_label;
  }
  else ;
  
#line 664 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 665 
  hdr->frame_control = (unsigned short)((unsigned int)hdr->frame_control & 65532U);
  
#line 666 
  if (ok != 0) 
#line 666 
               tmp = 2U; else 
#line 666 
                              tmp = 1U;
  
#line 666 
  hdr->frame_control = (unsigned short)((unsigned int)hdr->frame_control | tmp);
  
#line 668 
  skb->dev = (ap->local)->apdev;
  
#line 669 
  tmp_0 = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 669 
  ;
  
#line 669 
  skb_pull(skb,(unsigned int)tmp_0);
  
#line 670 
  skb->pkt_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))3U;
  
#line 671 
  skb->protocol = (unsigned short)1024U;
  
#line 672 
  memset((void *)(& skb->cb),0,48UL);
  
#line 673 
  netif_rx(skb);
  return_label: 
#line 674 
                return;
}


#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_ap_tx_cb_auth(struct sk_buff *skb, int ok, void *data)
{
  struct ieee80211_hdr *hdr;
  u16 auth_alg;
  u16 auth_transaction;
  u16 status;
  __le16 *pos;
  int tmp;
  __le16 *tmp_0;
  __le16 *tmp_1;
  __le16 *tmp_2;
  
#line 681 
  struct ap_data *ap = (struct ap_data *)data;
  
#line 682 
  struct net_device *dev = (ap->local)->dev;
  
#line 686 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 687 
  char *txt = (char *)0;
  
#line 689 
  if ((ap->local)->hostapd != 0) {
    
#line 690 
    consume_skb(skb);
    
#line 691 
    goto return_label;
  }
  else ;
  
#line 694 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 695 
  tmp = ieee80211_is_auth((unsigned short)((int)hdr->frame_control));
  
#line 695 
  if (tmp == 0) 
#line 695 
                goto _LOR;
  else 
    
#line 695 
    if (skb->len <= 29U) {
      _LOR: {
              
#line 697 
              printk("\001",(char *)(& dev->name));
              
#line 699 
              consume_skb(skb);
              
#line 700 
              goto return_label;
            }
    }
    else ;
  
#line 703 
  pos = (__le16 *)(skb->data + 24U);
  
#line 704 
  tmp_0 = pos;
  
#line 704 
  pos += 1;
  
#line 704 
  auth_alg = *tmp_0;
  
#line 705 
  tmp_1 = pos;
  
#line 705 
  pos += 1;
  
#line 705 
  auth_transaction = *tmp_1;
  
#line 706 
  tmp_2 = pos;
  
#line 706 
  pos += 1;
  
#line 706 
  status = *tmp_2;
  
#line 708 
  if (ok == 0) {
    
#line 709 
    txt = (char *)"frame was not ACKed";
    
#line 710 
    goto done;
  }
  else ;
  
#line 713 
  ldv_spin_lock_94(& ap->sta_table_lock);
  
#line 714 
  sta = ap_get_sta(ap,(u8 *)(& hdr->addr1));
  
#line 715 
  if (sta != (struct sta_info *)0) 
#line 716 
                                   atomic_inc_0(& sta->users); else ;
  
#line 717 
  ldv_spin_unlock_95(& ap->sta_table_lock);
  
#line 719 
  if (sta == (struct sta_info *)0) {
    
#line 720 
    txt = (char *)"STA not found";
    
#line 721 
    goto done;
  }
  else ;
  
#line 724 
  if ((unsigned int)status == 0U && (((unsigned int)auth_alg == 0U && (unsigned int)auth_transaction == 2U) || ((unsigned int)auth_alg == 1U && (unsigned int)auth_transaction == 4U))) {
    
#line 727 
    txt = (char *)"STA authenticated";
    
#line 728 
    sta->flags |= 1U;
    
#line 729 
    sta->last_auth = jiffies;
  }
  else 
    
#line 730 
    if ((unsigned int)status != 0U) 
#line 731 
                                    txt = (char *)"authentication failed"; else ;
  done: 
#line 733 
  ;
  
#line 734 
  if (sta != (struct sta_info *)0) 
#line 735 
                                   atomic_dec_0(& sta->users); else ;
  
#line 736 
  if (txt != (char *)0) 
#line 737 
                        printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr1),(int)auth_alg,(int)auth_transaction,(int)status,txt); else ;
  
#line 742 
  consume_skb(skb);
  return_label: 
#line 743 
                return;
}


#line 747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_ap_tx_cb_assoc(struct sk_buff *skb, int ok, void *data)
{
  struct ieee80211_hdr *hdr;
  u16 status;
  __le16 *pos;
  int tmp;
  __le16 *tmp_1;
  
#line 749 
  struct ap_data *ap = (struct ap_data *)data;
  
#line 750 
  struct net_device *dev = (ap->local)->dev;
  
#line 754 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 755 
  char *txt = (char *)0;
  
#line 757 
  if ((ap->local)->hostapd != 0) {
    
#line 758 
    consume_skb(skb);
    
#line 759 
    goto return_label;
  }
  else ;
  
#line 762 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 763 
  tmp = ieee80211_is_assoc_resp((unsigned short)((int)hdr->frame_control));
  
#line 763 
  if (tmp == 0) {
    int tmp_0;
    
#line 763 
    tmp_0 = ieee80211_is_reassoc_resp((unsigned short)((int)hdr->frame_control));
    
#line 763 
    if (tmp_0 == 0) 
#line 763 
                    goto _LOR; else 
#line 763 
                                    goto _LAND;
  }
  else {
    _LAND: 
#line 764 
    ;
    
#line 764 
    if (skb->len <= 27U) {
      _LOR: {
              
#line 766 
              printk("\001",(char *)(& dev->name));
              
#line 768 
              consume_skb(skb);
              
#line 769 
              goto return_label;
            }
    }
    else ;
  }
  
#line 772 
  if (ok == 0) {
    
#line 773 
    txt = (char *)"frame was not ACKed";
    
#line 774 
    goto done;
  }
  else ;
  
#line 777 
  ldv_spin_lock_96(& ap->sta_table_lock);
  
#line 778 
  sta = ap_get_sta(ap,(u8 *)(& hdr->addr1));
  
#line 779 
  if (sta != (struct sta_info *)0) 
#line 780 
                                   atomic_inc_0(& sta->users); else ;
  
#line 781 
  ldv_spin_unlock_97(& ap->sta_table_lock);
  
#line 783 
  if (sta == (struct sta_info *)0) {
    
#line 784 
    txt = (char *)"STA not found";
    
#line 785 
    goto done;
  }
  else ;
  
#line 788 
  pos = (__le16 *)(skb->data + 24U);
  
#line 789 
  pos += 1;
  
#line 790 
  tmp_1 = pos;
  
#line 790 
  pos += 1;
  
#line 790 
  status = *tmp_1;
  
#line 791 
  if ((unsigned int)status == 0U) {
    
#line 792 
    if (((unsigned long)sta->flags & 2UL) == 0UL) 
#line 793 
                                                  hostap_event_new_sta(dev,sta); else ;
    
#line 794 
    txt = (char *)"STA associated";
    
#line 795 
    sta->flags |= 2U;
    
#line 796 
    sta->last_assoc = jiffies;
  }
  else 
#line 798 
       txt = (char *)"association failed";
  done: 
#line 800 
  ;
  
#line 801 
  if (sta != (struct sta_info *)0) 
#line 802 
                                   atomic_dec_0(& sta->users); else ;
  
#line 803 
  if (txt != (char *)0) 
#line 804 
                        printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr1),txt); else ;
  
#line 807 
  consume_skb(skb);
  return_label: 
#line 808 
                return;
}


#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_ap_tx_cb_poll(struct sk_buff *skb, int ok, void *data)
{
  struct ieee80211_hdr *hdr;
  struct sta_info *sta;
  
#line 814 
  struct ap_data *ap = (struct ap_data *)data;
  
#line 818 
  if (skb->len <= 23U) 
#line 819 
                       goto fail; else ;
  
#line 820 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 821 
  if (ok != 0) {
    
#line 822 
    ldv_spin_lock_98(& ap->sta_table_lock);
    
#line 823 
    sta = ap_get_sta(ap,(u8 *)(& hdr->addr1));
    
#line 824 
    if (sta != (struct sta_info *)0) 
#line 825 
                                     sta->flags &= 4294967231U; else ;
    
#line 826 
    ldv_spin_unlock_99(& ap->sta_table_lock);
  }
  else 
#line 828 
       printk("\001",(char *)(& ((ap->local)->dev)->name),(u8 *)(& hdr->addr1));
  fail: 
#line 833 
  ;
  
#line 834 
  consume_skb(skb);
  
#line 835 
  return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_init_data(local_info_t *local)
{
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 841 
  struct ap_data *ap = local->ap;
  
#line 843 
  if (ap == (struct ap_data *)0) {
    
#line 844 
    printk("\001");
    
#line 845 
    goto return_label;
  }
  else ;
  
#line 847 
  memset((void *)ap,0,3544UL);
  
#line 848 
  ap->local = local;
  
#line 850 
  if (other_ap_policy[local->card_idx] >= 0) 
#line 850 
                                             tmp = local->card_idx; else 
                                                                    
#line 850 
                                                                    tmp = 0;
  
#line 850 
  ap->ap_policy = (enum ldv_32322)other_ap_policy[tmp];
  
#line 851 
  if (ap_bridge_packets[local->card_idx] >= 0) 
#line 851 
                                               tmp_0 = local->card_idx; else 
                                                                    
#line 851 
                                                                    tmp_0 = 0;
  
#line 851 
  ap->bridge_packets = ap_bridge_packets[tmp_0];
  
#line 853 
  if (ap_max_inactivity[local->card_idx] >= 0) 
#line 853 
                                               tmp_1 = local->card_idx; else 
                                                                    
#line 853 
                                                                    tmp_1 = 0;
  
#line 852 
  ap->max_inactivity = (unsigned int)(ap_max_inactivity[tmp_1] * 250);
  
#line 854 
  if (autom_ap_wds[local->card_idx] >= 0) 
#line 854 
                                          tmp_2 = local->card_idx; else 
                                                                    
#line 854 
                                                                    tmp_2 = 0;
  
#line 854 
  ap->autom_ap_wds = autom_ap_wds[tmp_2];
  
#line 856 
  spinlock_check(& ap->sta_table_lock);
  {
    struct lock_class_key __key;
    
#line 856 
    __raw_spin_lock_init(& ap->sta_table_lock.__anonCompField_spinlock_18.rlock,"&(&ap->sta_table_lock)->rlock",& __key);
  }
  
#line 857 
  INIT_LIST_HEAD(& ap->sta_list);
  {
    struct lock_class_key __key_0;
    
#line 860 
    __init_work(& (local->ap)->add_sta_proc_queue,0);
    
#line 860 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 860 
    (local->ap)->add_sta_proc_queue.data = __constr_expr_37;
    
#line 860 
    lockdep_init_map(& (local->ap)->add_sta_proc_queue.lockdep_map,"(&local->ap->add_sta_proc_queue)",& __key_0,0);
    
#line 860 
    INIT_LIST_HEAD(& (local->ap)->add_sta_proc_queue.entry);
    
#line 860 
    (local->ap)->add_sta_proc_queue.func = & handle_add_proc_queue;
  }
  
#line 862 
  ap->tx_callback_idx = hostap_tx_callback_register(local,& hostap_ap_tx_cb,(void *)ap);
  
#line 864 
  if ((unsigned int)ap->tx_callback_idx == 0U) 
#line 865 
                                               printk("\001",(char *)(& (local->dev)->name)); else ;
  {
    struct lock_class_key __key_1;
    
#line 868 
    __init_work(& (local->ap)->wds_oper_queue,0);
    
#line 868 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 868 
    (local->ap)->wds_oper_queue.data = __constr_expr_38;
    
#line 868 
    lockdep_init_map(& (local->ap)->wds_oper_queue.lockdep_map,"(&local->ap->wds_oper_queue)",& __key_1,0);
    
#line 868 
    INIT_LIST_HEAD(& (local->ap)->wds_oper_queue.entry);
    
#line 868 
    (local->ap)->wds_oper_queue.func = & handle_wds_oper_queue;
  }
  
#line 870 
  ap->tx_callback_auth = hostap_tx_callback_register(local,& hostap_ap_tx_cb_auth,(void *)ap);
  
#line 872 
  ap->tx_callback_assoc = hostap_tx_callback_register(local,& hostap_ap_tx_cb_assoc,(void *)ap);
  
#line 874 
  ap->tx_callback_poll = hostap_tx_callback_register(local,& hostap_ap_tx_cb_poll,(void *)ap);
  
#line 876 
  if (((unsigned int)ap->tx_callback_auth == 0U || (unsigned int)ap->tx_callback_assoc == 0U) || (unsigned int)ap->tx_callback_poll == 0U) 
    
#line 878 
    printk("\001",(char *)(& (local->dev)->name)); else ;
  
#line 881 
  spinlock_check(& ap->mac_restrictions.lock);
  {
    struct lock_class_key __key_2;
    
#line 881 
    __raw_spin_lock_init(& ap->mac_restrictions.lock.__anonCompField_spinlock_18.rlock,"&(&ap->mac_restrictions.lock)->rlock",& __key_2);
  }
  
#line 882 
  INIT_LIST_HEAD(& ap->mac_restrictions.mac_list);
  
#line 885 
  ap->initialized = 1;
  return_label: 
#line 886 
                return;
}


#line 889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_init_ap_proc(local_info_t *local)
{
  
#line 891 
  struct ap_data *ap = local->ap;
  
#line 893 
  ap->proc = local->proc;
  
#line 894 
  if (ap->proc == (struct proc_dir_entry *)0) 
#line 895 
                                              goto return_label; else ;
  
#line 898 
  proc_create_data("ap_debug",(unsigned short)0,ap->proc,& ap_debug_proc_fops,(void *)ap);
  
#line 902 
  proc_create_data("ap_control",(unsigned short)0,ap->proc,& ap_control_proc_fops,(void *)ap);
  
#line 903 
  proc_create_data("ap",(unsigned short)0,ap->proc,& prism2_ap_proc_fops,(void *)ap);
  return_label: 
#line 904 
                return;
}


#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_free_data(struct ap_data *ap)
{
  struct sta_info *n;
  struct sta_info *sta;
  struct sta_info *tmp;
  struct sta_info *tmp_0;
  struct sta_info *tmp_1;
  
#line 913 
  if (ap == (struct ap_data *)0 || ap->initialized == 0) {
    
#line 914 
    printk("\001");
    
#line 916 
    goto return_label;
  }
  else ;
  
#line 919 
  ldv_flush_work_100(& ap->add_sta_proc_queue);
  
#line 922 
  ldv_flush_work_101(& ap->wds_oper_queue);
  
#line 923 
  if (ap->crypt != (struct lib80211_crypto_ops *)0) 
#line 924 
                                                    (*((ap->crypt)->deinit))(ap->crypt_priv); else ;
  
#line 925 
  ap->crypt_priv = (void *)0;
  
#line 925 
  ap->crypt = (struct lib80211_crypto_ops *)0;
  {
    
#line 928 
    struct list_head const *__mptr = (struct list_head const *)ap->sta_list.next;
    
#line 928 
    tmp = (struct sta_info *)__mptr;
  }
  
#line 928 
  sta = tmp;
  {
    
#line 928 
    struct list_head const *__mptr_0 = (struct list_head const *)sta->list.next;
    
#line 928 
    tmp_0 = (struct sta_info *)__mptr_0;
  }
  
#line 929 
  n = tmp_0;
  
#line 928 
  goto ldv_47133;
  ldv_47132: 
#line 929 
  ;
  
#line 929 
  ap_sta_hash_del(ap,sta);
  
#line 930 
  list_del(& sta->list);
  
#line 931 
  if ((((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) && sta->local != (local_info_t *)0) 
    
#line 932 
    hostap_event_expired_sta((sta->local)->dev,sta); else ;
  
#line 933 
  ap_free_sta(ap,sta);
  
#line 928 
  sta = n;
  {
    
#line 928 
    struct list_head const *__mptr_1 = (struct list_head const *)n->list.next;
    
#line 928 
    tmp_1 = (struct sta_info *)__mptr_1;
  }
  
#line 928 
  n = tmp_1;
  ldv_47133: 
#line 930 
  ;
  
#line 928 
  if (& sta->list != & ap->sta_list) 
#line 930 
                                     goto ldv_47132; else 
#line 933 
                                                          goto ldv_47134;
  ldv_47134: 
#line 934 
  ;
  
#line 937 
  if (ap->proc != (struct proc_dir_entry *)0) 
#line 938 
                                              remove_proc_entry("ap_debug",ap->proc); else ;
  
#line 943 
  if (ap->proc != (struct proc_dir_entry *)0) {
    
#line 944 
    remove_proc_entry("ap",ap->proc);
    
#line 945 
    remove_proc_entry("ap_control",ap->proc);
  }
  else ;
  
#line 947 
  ap_control_flush_macs(& ap->mac_restrictions);
  
#line 950 
  ap->initialized = 0;
  return_label: 
#line 951 
                return;
}


#line 955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct sta_info *ap_get_sta(struct ap_data *ap, u8 *sta)
{
  struct sta_info *s;
  
#line 959 
  s = ap->sta_hash[(int)*(sta + 5U)];
  
#line 960 
  goto ldv_47141;
  ldv_47140: 
#line 961 
  ;
  
#line 961 
  s = s->hnext;
  ldv_47141: 
#line 962 
  ;
  
#line 960 
  if (s != (struct sta_info *)0) {
    int tmp_0;
    bool tmp;
    
#line 960 
    tmp = ether_addr_equal((u8 const *)(& s->addr),(u8 const *)sta);
    
#line 960 
    if (tmp) 
#line 960 
             tmp_0 = 0; else 
#line 960 
                             tmp_0 = 1;
    
#line 960 
    if (tmp_0) 
#line 962 
               goto ldv_47140; else 
#line 965 
                                    goto ldv_47142;
  }
  else 
#line 965 
       goto ldv_47142;
  ldv_47142: 
#line 966 
  ;
  
#line 962 
  return s;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void prism2_send_mgmt(struct net_device *dev, u16 type_subtype, char *body, int body_len, u8 *addr, u16 tx_cb_idx)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct ieee80211_hdr *hdr;
  u16 fc;
  struct sk_buff *skb;
  struct hostap_skb_tx_data *meta;
  int hdrlen;
  int tmp_4;
  
#line 981 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 982 
  local = iface->local;
  
#line 983 
  dev = local->dev;
  
#line 984 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 986 
  if ((dev->flags & 1U) == 0U) {
    
#line 987 
    printk("\001",(char *)(& dev->name));
    
#line 989 
    goto return_label;
  }
  else ;
  
#line 992 
  skb = dev_alloc_skb((unsigned int)body_len + 30U);
  
#line 993 
  if (skb == (struct sk_buff *)0) {
    
#line 994 
    printk("\001",(char *)(& dev->name));
    
#line 996 
    goto return_label;
  }
  else ;
  
#line 999 
  fc = type_subtype;
  
#line 1000 
  hdrlen = hostap_80211_get_hdrlen((unsigned short)((int)type_subtype));
  
#line 1001 
  hdr = (struct ieee80211_hdr *)skb_put(skb,(unsigned int)hdrlen);
  
#line 1002 
  if (body != (char *)0) {
    unsigned char *tmp_2;
    
#line 1003 
    ;
    
#line 1003 
    ;
    
#line 1003 
    tmp_2 = skb_put(skb,(unsigned int)body_len);
    
#line 1003 
    memcpy((void *)tmp_2,(void const *)body,(unsigned long)body_len);
  }
  else ;
  
#line 1005 
  memset((void *)hdr,0,(unsigned long)hdrlen);
  
#line 1011 
  memcpy((void *)(& hdr->addr1),(void const *)addr,6UL);
  
#line 1012 
  tmp_4 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
  
#line 1012 
  if (tmp_4 != 0) {
    
#line 1013 
    fc = (unsigned short)((unsigned int)fc | 512U);
    
#line 1014 
    memcpy((void *)(& hdr->addr2),(void const *)dev->dev_addr,6UL);
    
#line 1015 
    memcpy((void *)(& hdr->addr3),(void const *)dev->dev_addr,6UL);
  }
  else {
    int tmp_3;
    
#line 1016 
    tmp_3 = ieee80211_is_ctl((unsigned short)((int)hdr->frame_control));
    
#line 1016 
    if (tmp_3 != 0) {
      
#line 1018 
      eth_zero_addr((u8 *)(& hdr->addr2));
      
#line 1019 
      eth_zero_addr((u8 *)(& hdr->addr3));
    }
    else {
      
#line 1021 
      memcpy((void *)(& hdr->addr2),(void const *)dev->dev_addr,6UL);
      
#line 1022 
      memcpy((void *)(& hdr->addr3),(void const *)dev->dev_addr,6UL);
    }
  }
  
#line 1025 
  hdr->frame_control = fc;
  
#line 1027 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 1028 
  memset((void *)meta,0,40UL);
  
#line 1029 
  meta->magic = 4035589794U;
  
#line 1030 
  meta->iface = iface;
  
#line 1031 
  meta->tx_cb_idx = tx_cb_idx;
  
#line 1033 
  skb->dev = dev;
  
#line 1034 
  skb_reset_mac_header(skb);
  
#line 1035 
  skb_reset_network_header(skb);
  
#line 1036 
  dev_queue_xmit(skb);
  return_label: 
#line 1037 
                return;
}


#line 1041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_sta_proc_show(struct seq_file *m, void *v)
{
  int __retres;
  int i;
  char *tmp;
  char *tmp_0;
  char *tmp_1;
  char *tmp_2;
  char *tmp_3;
  char *tmp_4;
  char *tmp_5;
  int tmp_6;
  char *tmp_7;
  char *tmp_9;
  __u32 tmp_10;
  
#line 1043 
  struct sta_info *sta = (struct sta_info *)m->private;
  
#line 1050 
  ;
  
#line 1050 
  ;
  
#line 1062 
  if (((unsigned long)sta->flags & 64UL) != 0UL) 
#line 1062 
                                                 tmp = (char *)" POLL"; else 
                                                                    
#line 1062 
                                                                    tmp = (char *)"";
  
#line 1061 
  if (((unsigned long)sta->flags & 32UL) != 0UL) 
#line 1061 
                                                 tmp_0 = (char *)" AUTHORIZED"; else 
                                                                    
#line 1061 
                                                                    tmp_0 = (char *)"";
  
#line 1060 
  if (((unsigned long)sta->flags & 16UL) != 0UL) 
#line 1060 
                                                 tmp_1 = (char *)" PERM"; else 
                                                                    
#line 1060 
                                                                    tmp_1 = (char *)"";
  
#line 1059 
  if (((unsigned long)sta->flags & 8UL) != 0UL) 
#line 1059 
                                                tmp_2 = (char *)" TIM"; else 
                                                                    
#line 1059 
                                                                    tmp_2 = (char *)"";
  
#line 1058 
  if (((unsigned long)sta->flags & 4UL) != 0UL) 
#line 1058 
                                                tmp_3 = (char *)" PS"; else 
                                                                    
#line 1058 
                                                                    tmp_3 = (char *)"";
  
#line 1057 
  if (((unsigned long)sta->flags & 2UL) != 0UL) 
#line 1057 
                                                tmp_4 = (char *)" ASSOC"; else 
                                                                    
#line 1057 
                                                                    tmp_4 = (char *)"";
  
#line 1056 
  if (((unsigned long)sta->flags & 1UL) != 0UL) 
#line 1056 
                                                tmp_5 = (char *)" AUTH"; else 
                                                                    
#line 1056 
                                                                    tmp_5 = (char *)"";
  
#line 1050 
  ;
  
#line 1050 
  ;
  
#line 1055 
  tmp_6 = atomic_read((atomic_t const *)(& sta->users));
  
#line 1050 
  ;
  
#line 1051 
  if (sta->ap != 0) 
#line 1051 
                    tmp_7 = (char *)"AP"; else 
#line 1051 
                                               tmp_7 = (char *)"STA";
  
#line 1050 
  ;
  
#line 1050 
  seq_printf(m,"%s=%pM\nusers=%d\naid=%d\n",tmp_7,(u8 *)(& sta->addr),tmp_6,(int)sta->aid,sta->flags,tmp_5,tmp_4,tmp_3,tmp_2,tmp_1,tmp_0,tmp,(int)sta->capability,(int)sta->listen_interval);
  
#line 1066 
  i = 0;
  
#line 1066 
  goto ldv_47165;
  ldv_47164: 
#line 1067 
  ;
  
#line 1067 
  if ((unsigned int)sta->supported_rates[i] != 0U) {
    char *tmp_8;
    
#line 1069 
    if (((int)sta->supported_rates[i] & 1) != 0) 
#line 1069 
                                                 tmp_8 = (char *)".5"; else 
                                                                    
#line 1069 
                                                                    tmp_8 = (char *)"";
    
#line 1068 
    ;
    
#line 1068 
    ;
    
#line 1068 
    seq_printf(m,"%d%sMbps ",((int)sta->supported_rates[i] & 127) / 2,tmp_8);
  }
  else ;
  
#line 1066 
  i += 1;
  ldv_47165: 
#line 1067 
  ;
  
#line 1066 
  if ((unsigned int)i <= 31U) 
#line 1068 
                              goto ldv_47164; else 
#line 1071 
                                                   goto ldv_47166;
  ldv_47166: 
#line 1072 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1086 
  if ((unsigned int)sta->last_rx_rate % 10U != 0U) 
#line 1086 
                                                   tmp_9 = (char *)".5"; else 
                                                                    
#line 1086 
                                                                    tmp_9 = (char *)"";
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1083 
  tmp_10 = skb_queue_len((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  ;
  
#line 1071 
  seq_printf(m,"\njiffies=%lu\nlast_auth=%lu\nlast_assoc=%lu\n",jiffies,sta->last_auth,sta->last_assoc,sta->last_rx,sta->last_tx,sta->rx_packets,sta->tx_packets,sta->rx_bytes,sta->tx_bytes,tmp_10,(int)sta->last_rx_silence,(int)sta->last_rx_signal,(int)((unsigned int)sta->last_rx_rate / 10U),tmp_9,(int)sta->tx_rate,sta->tx_count[0],sta->tx_count[1],sta->tx_count[2],sta->tx_count[3],sta->rx_count[0],sta->rx_count[1],sta->rx_count[2],sta->rx_count[3]);
  
#line 1090 
  if ((sta->crypt != (struct lib80211_crypt_data *)0 && (sta->crypt)->ops != (struct lib80211_crypto_ops *)0) && ((sta->crypt)->ops)->print_stats != (void (*)(struct seq_file *, void *))0) 
    
#line 1091 
    (*(((sta->crypt)->ops)->print_stats))(m,(sta->crypt)->priv); else ;
  
#line 1093 
  if (sta->ap != 0) {
    
#line 1094 
    if (sta->u.ap.channel >= 0) 
#line 1095 
                                seq_printf(m,"channel=%d\n",sta->u.ap.channel); else ;
    
#line 1096 
    seq_puts(m,"ssid=");
    
#line 1097 
    i = 0;
    
#line 1097 
    goto ldv_47168;
    ldv_47167: 
#line 1098 
    ;
    
#line 1098 
    if ((unsigned int)sta->u.ap.ssid[i] + 224U <= 94U) 
#line 1099 
                                                       seq_putc(m,(char)((int)((char)sta->u.ap.ssid[i]))); else 
                                                                    
#line 1101 
                                                                    seq_printf(m,"<%02x>",(int)sta->u.ap.ssid[i]);
    
#line 1097 
    i += 1;
    ldv_47168: 
#line 1098 
    ;
    
#line 1097 
    if (sta->u.ap.ssid_len > i) 
#line 1099 
                                goto ldv_47167; else 
#line 1102 
                                                     goto ldv_47169;
    ldv_47169: 
#line 1103 
    ;
    
#line 1103 
    seq_putc(m,(char)10);
  }
  else ;
  
#line 1107 
  __retres = 0;
  
#line 1107 
  return __retres;
}


#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_sta_proc_open(struct inode *inode, struct file *file)
{
  int tmp_0;
  void *tmp;
  
#line 1112 
  tmp = PDE_DATA((struct inode const *)inode);
  
#line 1112 
  ;
  
#line 1112 
  tmp_0 = single_open(file,& prism2_sta_proc_show,tmp);
  
#line 1112 
  return tmp_0;
}


#line 1115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct file_operations const prism2_sta_proc_fops = {.owner = (struct module *)0, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & prism2_sta_proc_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 1122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_add_proc_queue(struct work_struct *work)
{
  struct ap_data *tmp;
  struct sta_info *sta;
  char name[20U];
  struct add_sta_proc_data *entry;
  struct add_sta_proc_data *prev;
  {
    
#line 1124 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1124 
    tmp = (struct ap_data *)__mptr + 18446744073709549304U;
  }
  
#line 1124 
  struct ap_data *ap = tmp;
  
#line 1130 
  entry = ap->add_sta_proc_entries;
  
#line 1131 
  ap->add_sta_proc_entries = (struct add_sta_proc_data *)0;
  
#line 1133 
  goto ldv_47186;
  ldv_47185: 
#line 1134 
  ;
  
#line 1134 
  ldv_spin_lock_bh_102(& ap->sta_table_lock);
  
#line 1135 
  sta = ap_get_sta(ap,(u8 *)(& entry->addr));
  
#line 1136 
  if (sta != (struct sta_info *)0) 
#line 1137 
                                   atomic_inc_0(& sta->users); else ;
  
#line 1138 
  ldv_spin_unlock_bh_103(& ap->sta_table_lock);
  
#line 1140 
  if (sta != (struct sta_info *)0) {
    
#line 1141 
    sprintf((char *)(& name),"%pM",(u8 *)(& sta->addr));
    
#line 1142 
    sta->proc = proc_create_data((char const *)(& name),(unsigned short)0,ap->proc,& prism2_sta_proc_fops,(void *)sta);
    
#line 1146 
    atomic_dec_0(& sta->users);
  }
  else ;
  
#line 1149 
  prev = entry;
  
#line 1150 
  entry = entry->next;
  
#line 1151 
  kfree((void const *)prev);
  ldv_47186: 
#line 1152 
  ;
  
#line 1133 
  if (entry != (struct add_sta_proc_data *)0) 
#line 1135 
                                              goto ldv_47185; else 
#line 1138 
                                                                   goto ldv_47187;
  ldv_47187: 
#line 1139 
  ;
  
#line 1140 
  return;
}


#line 1156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static struct sta_info *ap_add_sta(struct ap_data *ap, u8 *addr)
{
  struct sta_info *__retres;
  struct sta_info *sta;
  
#line 1160 
  sta = (struct sta_info *)kzalloc(512UL,32U);
  
#line 1161 
  if (sta == (struct sta_info *)0) {
    
#line 1162 
    printk("\001");
    
#line 1163 
    __retres = (struct sta_info *)0;
    
#line 1163 
    goto return_label;
  }
  else ;
  
#line 1167 
  sta->local = ap->local;
  
#line 1168 
  skb_queue_head_init(& sta->tx_buf);
  
#line 1169 
  memcpy((void *)(& sta->addr),(void const *)addr,6UL);
  
#line 1171 
  atomic_inc_0(& sta->users);
  
#line 1172 
  ldv_spin_lock_bh_104(& ap->sta_table_lock);
  
#line 1173 
  list_add(& sta->list,& ap->sta_list);
  
#line 1174 
  ap->num_sta += 1;
  
#line 1175 
  ap_sta_hash_add(ap,sta);
  
#line 1176 
  ldv_spin_unlock_bh_105(& ap->sta_table_lock);
  
#line 1178 
  if (ap->proc != (struct proc_dir_entry *)0) {
    struct add_sta_proc_data *entry;
    
#line 1182 
    entry = (struct add_sta_proc_data *)kmalloc_0(16UL,32U);
    
#line 1183 
    if (entry != (struct add_sta_proc_data *)0) {
      
#line 1184 
      memcpy((void *)(& entry->addr),(void const *)(& sta->addr),6UL);
      
#line 1185 
      entry->next = ap->add_sta_proc_entries;
      
#line 1186 
      ap->add_sta_proc_entries = entry;
      
#line 1187 
      ldv_schedule_work_106(& ap->add_sta_proc_queue);
    }
    else 
#line 1189 
         printk("\001");
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 1193 
    init_timer_key(& sta->timer,0U,"(&sta->timer)",& __key);
  }
  
#line 1194 
  sta->timer.expires = (unsigned long)ap->max_inactivity + jiffies;
  
#line 1195 
  sta->timer.data = (unsigned long)sta;
  
#line 1196 
  sta->timer.function = & ap_handle_timer;
  
#line 1197 
  if ((ap->local)->hostapd == 0) 
#line 1198 
                                 add_timer(& sta->timer); else ;
  
#line 1201 
  __retres = sta;
  return_label: 
#line 1201 
                return __retres;
}


#line 1205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_tx_rate_ok(int rateidx, struct sta_info *sta, local_info_t *local)
{
  int __retres;
  
#line 1208 
  if ((int)sta->tx_max_rate < rateidx || (((int)sta->tx_supp_rates >> rateidx) & 1) == 0) {
    
#line 1210 
    __retres = 0;
    
#line 1210 
    goto return_label;
  }
  else ;
  
#line 1212 
  if ((unsigned int)local->tx_rate_control != 0U && (((int)local->tx_rate_control >> rateidx) & 1) == 0) {
    
#line 1214 
    __retres = 0;
    
#line 1214 
    goto return_label;
  }
  else ;
  
#line 1216 
  __retres = 1;
  return_label: 
#line 1216 
                return __retres;
}


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void prism2_check_tx_rates(struct sta_info *sta)
{
  int i;
  u8 tmp_0;
  u8 tmp;
  
#line 1224 
  sta->tx_supp_rates = (unsigned char)0U;
  
#line 1225 
  i = 0;
  
#line 1225 
  goto ldv_47205;
  ldv_47204: 
#line 1226 
  ;
  
#line 1226 
  if (((int)sta->supported_rates[i] & 127) == 2) 
#line 1227 
                                                 sta->tx_supp_rates = (unsigned char)((unsigned int)sta->tx_supp_rates | 1U); else ;
  
#line 1228 
  if (((int)sta->supported_rates[i] & 127) == 4) 
#line 1229 
                                                 sta->tx_supp_rates = (unsigned char)((unsigned int)sta->tx_supp_rates | 2U); else ;
  
#line 1230 
  if (((int)sta->supported_rates[i] & 127) == 11) 
#line 1231 
                                                  sta->tx_supp_rates = (unsigned char)((unsigned int)sta->tx_supp_rates | 4U); else ;
  
#line 1232 
  if (((int)sta->supported_rates[i] & 127) == 22) 
#line 1233 
                                                  sta->tx_supp_rates = (unsigned char)((unsigned int)sta->tx_supp_rates | 8U); else ;
  
#line 1225 
  i += 1;
  ldv_47205: 
#line 1226 
  ;
  
#line 1225 
  if ((unsigned int)i <= 31U) 
#line 1227 
                              goto ldv_47204; else 
#line 1230 
                                                   goto ldv_47206;
  ldv_47206: 
#line 1231 
  ;
  
#line 1235 
  tmp_0 = (unsigned char)0U;
  
#line 1235 
  sta->tx_rate_idx = tmp_0;
  
#line 1235 
  tmp = tmp_0;
  
#line 1235 
  sta->tx_rate = tmp;
  
#line 1235 
  sta->tx_max_rate = tmp;
  
#line 1236 
  if (((unsigned long)sta->tx_supp_rates & 1UL) != 0UL) {
    int tmp_1;
    
#line 1237 
    sta->tx_max_rate = (unsigned char)0U;
    
#line 1238 
    tmp_1 = ap_tx_rate_ok(0,sta,sta->local);
    
#line 1238 
    if (tmp_1 != 0) {
      
#line 1239 
      sta->tx_rate = (unsigned char)10U;
      
#line 1240 
      sta->tx_rate_idx = (unsigned char)0U;
    }
    else ;
  }
  else ;
  
#line 1243 
  if (((unsigned long)sta->tx_supp_rates & 2UL) != 0UL) {
    int tmp_2;
    
#line 1244 
    sta->tx_max_rate = (unsigned char)1U;
    
#line 1245 
    tmp_2 = ap_tx_rate_ok(1,sta,sta->local);
    
#line 1245 
    if (tmp_2 != 0) {
      
#line 1246 
      sta->tx_rate = (unsigned char)20U;
      
#line 1247 
      sta->tx_rate_idx = (unsigned char)1U;
    }
    else ;
  }
  else ;
  
#line 1250 
  if (((unsigned long)sta->tx_supp_rates & 4UL) != 0UL) {
    int tmp_3;
    
#line 1251 
    sta->tx_max_rate = (unsigned char)2U;
    
#line 1252 
    tmp_3 = ap_tx_rate_ok(2,sta,sta->local);
    
#line 1252 
    if (tmp_3 != 0) {
      
#line 1253 
      sta->tx_rate = (unsigned char)55U;
      
#line 1254 
      sta->tx_rate_idx = (unsigned char)2U;
    }
    else ;
  }
  else ;
  
#line 1257 
  if (((unsigned long)sta->tx_supp_rates & 8UL) != 0UL) {
    int tmp_4;
    
#line 1258 
    sta->tx_max_rate = (unsigned char)3U;
    
#line 1259 
    tmp_4 = ap_tx_rate_ok(3,sta,sta->local);
    
#line 1259 
    if (tmp_4 != 0) {
      
#line 1260 
      sta->tx_rate = (unsigned char)110U;
      
#line 1261 
      sta->tx_rate_idx = (unsigned char)3U;
    }
    else ;
  }
  else ;
  
#line 1264 
  return;
}


#line 1269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_crypt_init(struct ap_data *ap)
{
  
#line 1271 
  ap->crypt = lib80211_get_crypto_ops("WEP");
  
#line 1273 
  if (ap->crypt != (struct lib80211_crypto_ops *)0) {
    
#line 1274 
    if ((ap->crypt)->init != (void *(*)(int ))0) {
      
#line 1275 
      ap->crypt_priv = (*((ap->crypt)->init))(0);
      
#line 1276 
      if (ap->crypt_priv == (void *)0) 
#line 1277 
                                       ap->crypt = (struct lib80211_crypto_ops *)0;
      else {
        u8 key[13U];
        
#line 1280 
        get_random_bytes((void *)(& key),13);
        
#line 1281 
        (*((ap->crypt)->set_key))((void *)(& key),13,(u8 *)0U,ap->crypt_priv);
      }
    }
    else ;
  }
  else ;
  
#line 1287 
  if (ap->crypt == (struct lib80211_crypto_ops *)0) 
#line 1288 
                                                    printk("\001"); else ;
  
#line 1289 
  return;
}


#line 1302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char *ap_auth_make_challenge(struct ap_data *ap)
{
  char *__retres;
  char *tmpbuf;
  struct sk_buff *skb;
  unsigned char *tmp_0;
  int tmp_1;
  
#line 1307 
  if (ap->crypt == (struct lib80211_crypto_ops *)0) {
    
#line 1308 
    ap_crypt_init(ap);
    
#line 1309 
    if (ap->crypt == (struct lib80211_crypto_ops *)0) {
      
#line 1310 
      __retres = (char *)0;
      
#line 1310 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1313 
  tmpbuf = (char *)kmalloc_0(128UL,32U);
  
#line 1314 
  if (tmpbuf == (char *)0) {
    
#line 1315 
    printk("\001");
    
#line 1316 
    __retres = (char *)0;
    
#line 1316 
    goto return_label;
  }
  else ;
  
#line 1319 
  skb = dev_alloc_skb((unsigned int)(((ap->crypt)->extra_mpdu_prefix_len + 128) + (ap->crypt)->extra_mpdu_postfix_len));
  
#line 1322 
  if (skb == (struct sk_buff *)0) {
    
#line 1323 
    kfree((void const *)tmpbuf);
    
#line 1324 
    __retres = (char *)0;
    
#line 1324 
    goto return_label;
  }
  else ;
  
#line 1327 
  skb_reserve(skb,(ap->crypt)->extra_mpdu_prefix_len);
  
#line 1328 
  tmp_0 = skb_put(skb,128U);
  
#line 1328 
  memset((void *)tmp_0,0,128UL);
  
#line 1330 
  tmp_1 = (*((ap->crypt)->encrypt_mpdu))(skb,0,ap->crypt_priv);
  
#line 1330 
  if (tmp_1 != 0) {
    
#line 1331 
    consume_skb(skb);
    
#line 1332 
    kfree((void const *)tmpbuf);
    
#line 1333 
    __retres = (char *)0;
    
#line 1333 
    goto return_label;
  }
  else ;
  
#line 1336 
  skb_copy_from_linear_data_offset((struct sk_buff const *)skb,(ap->crypt)->extra_mpdu_prefix_len,(void *)tmpbuf,128U);
  
#line 1338 
  consume_skb(skb);
  
#line 1340 
  __retres = tmpbuf;
  return_label: 
#line 1340 
                return __retres;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_authen(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  size_t hdrlen;
  char body[136U];
  int len;
  int olen;
  u16 auth_alg;
  u16 auth_transaction;
  u16 status_code;
  __le16 *pos;
  struct lib80211_crypt_data *crypt;
  int tmp;
  bool tmp_0;
  
#line 1348 
  struct net_device *dev = local->dev;
  
#line 1349 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1351 
  struct ap_data *ap = local->ap;
  
#line 1352 
  char *challenge = (char *)0;
  
#line 1356 
  u16 resp = (unsigned short)0U;
  
#line 1357 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 1359 
  char *txt = (char *)"";
  
#line 1361 
  len = (int)(skb->len + 4294967272U);
  
#line 1363 
  tmp = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 1363 
  hdrlen = (unsigned long)tmp;
  
#line 1365 
  if (len <= 5) {
    
#line 1366 
    printk("\001",(char *)(& dev->name),len,(u8 *)(& hdr->addr2));
    
#line 1368 
    goto return_label;
  }
  else ;
  
#line 1371 
  ldv_spin_lock_bh_107(& (local->ap)->sta_table_lock);
  
#line 1372 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1373 
  if (sta != (struct sta_info *)0) 
#line 1374 
                                   atomic_inc_0(& sta->users); else ;
  
#line 1375 
  ldv_spin_unlock_bh_108(& (local->ap)->sta_table_lock);
  
#line 1377 
  if (sta != (struct sta_info *)0 && sta->crypt != (struct lib80211_crypt_data *)0) 
    
#line 1378 
    crypt = sta->crypt;
  else {
    
#line 1380 
    int idx = 0;
    
#line 1381 
    if ((unsigned long)skb->len >= hdrlen + 3UL) 
#line 1382 
                                                 idx = (int)*(skb->data + (hdrlen + (size_t)3U)) >> 6; else ;
    
#line 1383 
    crypt = local->crypt_info.crypt[idx];
  }
  
#line 1386 
  pos = (__le16 *)(skb->data + 24U);
  
#line 1387 
  auth_alg = *pos;
  
#line 1388 
  pos += 1;
  
#line 1389 
  auth_transaction = *pos;
  
#line 1390 
  pos += 1;
  
#line 1391 
  status_code = *pos;
  
#line 1392 
  pos += 1;
  
#line 1394 
  tmp_0 = ether_addr_equal((u8 const *)dev->dev_addr,(u8 const *)(& hdr->addr2));
  
#line 1394 
  if ((int)tmp_0 != 0) 
#line 1394 
                       goto _LOR;
  else {
    int tmp_1;
    
#line 1394 
    tmp_1 = ap_control_mac_deny(& ap->mac_restrictions,(u8 *)(& hdr->addr2));
    
#line 1394 
    if (tmp_1 != 0) {
      _LOR: {
              
#line 1396 
              txt = (char *)"authentication denied";
              
#line 1397 
              resp = (unsigned short)1U;
              
#line 1398 
              goto fail;
            }
    }
    else ;
  }
  
#line 1401 
  if ((((unsigned long)local->auth_algs & 1UL) != 0UL && (unsigned int)auth_alg == 0U) || (((unsigned long)local->auth_algs & 2UL) != 0UL && (crypt != (struct lib80211_crypt_data *)0 && (unsigned int)auth_alg == 1U))) ;
  else {
    
#line 1406 
    txt = (char *)"unsupported algorithm";
    
#line 1407 
    resp = (unsigned short)13U;
    
#line 1408 
    goto fail;
  }
  
#line 1411 
  if (len > 7) {
    
#line 1412 
    u8 *u = (u8 *)pos;
    
#line 1413 
    if ((unsigned int)*u == 16U) {
      
#line 1414 
      if ((unsigned int)*(u + 1U) != 128U) {
        
#line 1415 
        txt = (char *)"invalid challenge len";
        
#line 1416 
        resp = (unsigned short)15U;
        
#line 1417 
        goto fail;
      }
      else ;
      
#line 1419 
      if (len + -8 <= 127) {
        
#line 1420 
        txt = (char *)"challenge underflow";
        
#line 1421 
        resp = (unsigned short)15U;
        
#line 1422 
        goto fail;
      }
      else ;
      
#line 1424 
      challenge = (char *)(u + 2U);
    }
    else ;
  }
  else ;
  
#line 1428 
  if (sta != (struct sta_info *)0 && sta->ap != 0) {
    int tmp_2;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 1429 
      tmp_2 = 1;
    }
    
#line 1429 
    if (tmp_2 != 0) {
      int tmp_3;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 1429 
        tmp_3 = 1;
      }
      
#line 1429 
      if (tmp_3 != 0) {
        
#line 1429 
        if ((long)((sta->u.ap.last_beacon + (unsigned long)(((int)sta->listen_interval * 2500) / 1024)) - jiffies) < 0L) {
          
#line 1431 
          printk("\001",(char *)(& dev->name),(u8 *)(& sta->addr));
          
#line 1434 
          sta->ap = 0;
          
#line 1435 
          sta->flags = 0U;
          
#line 1436 
          sta->u.sta.challenge = (char *)0;
        }
        else 
#line 1429 
             goto _LAND_0;
      }
      else 
#line 1429 
           goto _LAND_0;
    }
    else {
      _LAND_0: {
                 
#line 1438 
                 txt = (char *)"AP trying to authenticate?";
                 
#line 1439 
                 resp = (unsigned short)1U;
                 
#line 1440 
                 goto fail;
               }
    }
  }
  else ;
  
#line 1444 
  if (((unsigned int)auth_alg == 0U && (unsigned int)auth_transaction == 1U) || ((unsigned int)auth_alg == 1U && ((unsigned int)auth_transaction == 1U || (((unsigned int)auth_transaction == 3U && sta != (struct sta_info *)0) && sta->u.sta.challenge != (char *)0)))) ;
  else {
    
#line 1450 
    txt = (char *)"unknown authentication transaction number";
    
#line 1451 
    resp = (unsigned short)14U;
    
#line 1452 
    goto fail;
  }
  
#line 1455 
  if (sta == (struct sta_info *)0) {
    
#line 1456 
    txt = (char *)"new STA";
    
#line 1458 
    if ((local->ap)->num_sta > 1023) {
      
#line 1460 
      txt = (char *)"no more room for new STAs";
      
#line 1461 
      resp = (unsigned short)1U;
      
#line 1462 
      goto fail;
    }
    else ;
    
#line 1465 
    sta = ap_add_sta(local->ap,(u8 *)(& hdr->addr2));
    
#line 1466 
    if (sta == (struct sta_info *)0) {
      
#line 1467 
      txt = (char *)"ap_add_sta failed";
      
#line 1468 
      resp = (unsigned short)1U;
      
#line 1469 
      goto fail;
    }
    else ;
  }
  else ;
  
#line 1473 
  switch ((int)auth_alg) {
    case 0: 
#line 1474 
    ;
    
#line 1475 
    txt = (char *)"authOK";
    
#line 1481 
    sta->flags |= 1U;
    
#line 1482 
    goto ldv_47247;
    case 1: 
#line 1484 
    ;
    
#line 1485 
    if ((unsigned int)auth_transaction == 1U) {
      
#line 1486 
      if (sta->u.sta.challenge == (char *)0) {
        
#line 1487 
        sta->u.sta.challenge = ap_auth_make_challenge(local->ap);
        
#line 1489 
        if (sta->u.sta.challenge == (char *)0) {
          
#line 1490 
          resp = (unsigned short)1U;
          
#line 1491 
          goto fail;
        }
        else ;
      }
      else ;
    }
    else {
      
#line 1495 
      if (sta->u.sta.challenge == (char *)0 || challenge == (char *)0) 
        
#line 1495 
        goto _LOR_0;
      else {
        int tmp_4;
        
#line 1496 
        tmp_4 = memcmp((void const *)sta->u.sta.challenge,(void const *)challenge,128UL);
        
#line 1496 
        if (tmp_4 != 0) 
#line 1495 
                        goto _LOR_0;
        else {
          int tmp_5;
          
#line 1498 
          tmp_5 = ieee80211_has_protected((unsigned short)((int)hdr->frame_control));
          
#line 1498 
          if (tmp_5 == 0) {
            _LOR_0: {
                      
#line 1500 
                      txt = (char *)"challenge response incorrect";
                      
#line 1501 
                      resp = (unsigned short)15U;
                      
#line 1502 
                      goto fail;
                    }
          }
          else ;
        }
      }
      
#line 1505 
      txt = (char *)"challenge OK - authOK";
      
#line 1511 
      sta->flags |= 1U;
      
#line 1512 
      kfree((void const *)sta->u.sta.challenge);
      
#line 1513 
      sta->u.sta.challenge = (char *)0;
    }
    
#line 1515 
    goto ldv_47247;
  }
  ldv_47247: 
#line 1518 
  ;
  fail: 
#line 1518 
  ;
  
#line 1519 
  pos = (__le16 *)(& body);
  
#line 1520 
  *pos = auth_alg;
  
#line 1521 
  pos += 1;
  
#line 1522 
  *pos = (unsigned short)((unsigned int)auth_transaction + 1U);
  
#line 1523 
  pos += 1;
  
#line 1524 
  *pos = resp;
  
#line 1525 
  pos += 1;
  
#line 1526 
  olen = 6;
  
#line 1528 
  if ((((unsigned int)resp == 0U && sta != (struct sta_info *)0) && sta->u.sta.challenge != (char *)0) && ((unsigned int)auth_alg == 1U && (unsigned int)auth_transaction == 1U)) {
    u8 *tmp_7;
    u8 *tmp_8;
    
#line 1531 
    u8 *tmp_6 = (u8 *)pos;
    
#line 1532 
    tmp_7 = tmp_6;
    
#line 1532 
    tmp_6 += 1;
    
#line 1532 
    *tmp_7 = (unsigned char)16U;
    
#line 1533 
    tmp_8 = tmp_6;
    
#line 1533 
    tmp_6 += 1;
    
#line 1533 
    *tmp_8 = (unsigned char)128U;
    
#line 1534 
    pos += 1;
    
#line 1535 
    memcpy((void *)pos,(void const *)sta->u.sta.challenge,128UL);
    
#line 1536 
    olen += 130;
  }
  else ;
  
#line 1539 
  prism2_send_mgmt(dev,(unsigned short)176,(char *)(& body),olen,(u8 *)(& hdr->addr2),(unsigned short)((int)ap->tx_callback_auth));
  
#line 1542 
  if (sta != (struct sta_info *)0) {
    
#line 1543 
    sta->last_rx = jiffies;
    
#line 1544 
    atomic_dec_0(& sta->users);
  }
  else ;
  
#line 1547 
  if ((unsigned int)resp != 0U) 
#line 1548 
                                printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),(int)auth_alg,(int)auth_transaction,(int)status_code,len,(int)hdr->frame_control,(int)resp,txt); else ;
  return_label: 
#line 1549 
                return;
}


#line 1558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_assoc(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, int reassoc)
{
  char body[12U];
  char *p;
  char *lpos;
  int len;
  int left;
  __le16 *pos;
  u8 prev_ap[6U];
  int tmp;
  unsigned int tmp_9;
  unsigned int tmp_11;
  
#line 1561 
  struct net_device *dev = local->dev;
  
#line 1562 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1566 
  u16 resp = (unsigned short)0U;
  
#line 1567 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 1568 
  int send_deauth = 0;
  
#line 1569 
  char *txt = (char *)"";
  
#line 1572 
  len = (int)(skb->len + 4294967272U);
  
#line 1572 
  left = len;
  
#line 1574 
  if (reassoc != 0) 
#line 1574 
                    tmp = 10; else 
#line 1574 
                                   tmp = 4;
  
#line 1574 
  ;
  
#line 1574 
  if (tmp > len) {
    
#line 1575 
    printk("\001",(char *)(& dev->name),len,reassoc,(u8 *)(& hdr->addr2));
    
#line 1578 
    goto return_label;
  }
  else ;
  
#line 1581 
  ldv_spin_lock_bh_109(& (local->ap)->sta_table_lock);
  
#line 1582 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1583 
  if (sta == (struct sta_info *)0 || ((unsigned long)sta->flags & 1UL) == 0UL) {
    
#line 1584 
    ldv_spin_unlock_bh_110(& (local->ap)->sta_table_lock);
    
#line 1585 
    txt = (char *)"trying to associate before authentication";
    
#line 1586 
    send_deauth = 1;
    
#line 1587 
    resp = (unsigned short)1U;
    
#line 1588 
    sta = (struct sta_info *)0;
    
#line 1589 
    goto fail;
  }
  else ;
  
#line 1591 
  atomic_inc_0(& sta->users);
  
#line 1592 
  ldv_spin_unlock_bh_111(& (local->ap)->sta_table_lock);
  
#line 1594 
  pos = (__le16 *)(skb->data + 24U);
  
#line 1595 
  sta->capability = *pos;
  
#line 1596 
  pos += 1;
  
#line 1596 
  left += -2;
  
#line 1597 
  sta->listen_interval = *pos;
  
#line 1598 
  pos += 1;
  
#line 1598 
  left += -2;
  
#line 1600 
  if (reassoc != 0) {
    
#line 1601 
    memcpy((void *)(& prev_ap),(void const *)pos,6UL);
    
#line 1602 
    pos += 1;
    
#line 1602 
    pos += 1;
    
#line 1602 
    pos += 1;
    
#line 1602 
    left += -6;
  }
  else 
#line 1604 
       eth_zero_addr((u8 *)(& prev_ap));
  
#line 1606 
  if (left > 1) {
    unsigned int ileft;
    
#line 1608 
    unsigned char *u = (unsigned char *)pos;
    
#line 1610 
    if ((unsigned int)*u == 0U) {
      size_t tmp_0;
      
#line 1611 
      u += 1;
      
#line 1611 
      left -= 1;
      
#line 1612 
      ileft = (unsigned int)*u;
      
#line 1613 
      u += 1;
      
#line 1613 
      left -= 1;
      
#line 1615 
      if (ileft > (unsigned int)left || ileft > 32U) {
        
#line 1616 
        txt = (char *)"SSID overflow";
        
#line 1617 
        resp = (unsigned short)1U;
        
#line 1618 
        goto fail;
      }
      else ;
      
#line 1621 
      tmp_0 = strlen((char const *)(& local->essid));
      
#line 1621 
      ;
      
#line 1621 
      if ((unsigned long)ileft != tmp_0) 
#line 1621 
                                         goto _LOR;
      else {
        int tmp_1;
        
#line 1621 
        tmp_1 = memcmp((void const *)(& local->essid),(void const *)u,(unsigned long)ileft);
        
#line 1621 
        if (tmp_1 != 0) {
          _LOR: {
                  
#line 1623 
                  txt = (char *)"not our SSID";
                  
#line 1624 
                  resp = (unsigned short)12U;
                  
#line 1625 
                  goto fail;
                }
        }
        else ;
      }
      
#line 1628 
      u += ileft;
      
#line 1629 
      left = (int)((unsigned int)left - ileft);
    }
    else ;
    
#line 1632 
    if (left > 1 && (unsigned int)*u == 1U) {
      
#line 1633 
      u += 1;
      
#line 1633 
      left -= 1;
      
#line 1634 
      ileft = (unsigned int)*u;
      
#line 1635 
      u += 1;
      
#line 1635 
      left -= 1;
      
#line 1637 
      if ((ileft > (unsigned int)left || ileft == 0U) || ileft > 32U) {
        
#line 1639 
        txt = (char *)"SUPP_RATES len error";
        
#line 1640 
        resp = (unsigned short)1U;
        
#line 1641 
        goto fail;
      }
      else ;
      
#line 1644 
      memset((void *)(& sta->supported_rates),0,32UL);
      
#line 1646 
      memcpy((void *)(& sta->supported_rates),(void const *)u,(unsigned long)ileft);
      
#line 1647 
      prism2_check_tx_rates(sta);
      
#line 1649 
      u += ileft;
      
#line 1650 
      left = (int)((unsigned int)left - ileft);
    }
    else ;
    
#line 1653 
    if (left > 0) {
      
#line 1654 
      printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),left);
      
#line 1657 
      goto ldv_47273;
      ldv_47272: 
#line 1658 
      ;
      
#line 1658 
      printk("<%02x>",(int)*u);
      
#line 1659 
      u += 1;
      
#line 1659 
      left -= 1;
      ldv_47273: 
#line 1660 
      ;
      
#line 1657 
      if (left > 0) 
#line 1659 
                    goto ldv_47272; else 
#line 1662 
                                         goto ldv_47274;
      ldv_47274: 
#line 1663 
      ;
      
#line 1661 
      printk("]\n");
    }
    else ;
  }
  else {
    
#line 1664 
    txt = (char *)"frame underflow";
    
#line 1665 
    resp = (unsigned short)1U;
    
#line 1666 
    goto fail;
  }
  
#line 1670 
  if ((unsigned int)sta->aid != 0U) 
#line 1671 
                                    txt = (char *)"OK, old AID";
  else {
    
#line 1673 
    ldv_spin_lock_bh_112(& (local->ap)->sta_table_lock);
    
#line 1674 
    sta->aid = (unsigned short)1U;
    
#line 1674 
    goto ldv_47277;
    ldv_47276: 
#line 1675 
    ;
    
#line 1675 
    if ((local->ap)->sta_aid[(int)sta->aid + -1] == (struct sta_info *)0) 
      
#line 1676 
      goto ldv_47275; else ;
    
#line 1674 
    sta->aid = (u16)((int)sta->aid + 1);
    ldv_47277: 
#line 1675 
    ;
    
#line 1674 
    if ((unsigned int)sta->aid <= 128U) 
#line 1676 
                                        goto ldv_47276; else 
#line 1679 
                                                             goto ldv_47275;
    ldv_47275: 
#line 1680 
    ;
    
#line 1677 
    if ((unsigned int)sta->aid > 128U) {
      
#line 1678 
      sta->aid = (unsigned short)0U;
      
#line 1679 
      ldv_spin_unlock_bh_113(& (local->ap)->sta_table_lock);
      
#line 1680 
      resp = (unsigned short)17U;
      
#line 1681 
      txt = (char *)"no room for more AIDs";
    }
    else {
      
#line 1683 
      (local->ap)->sta_aid[(int)sta->aid + -1] = sta;
      
#line 1684 
      ldv_spin_unlock_bh_114(& (local->ap)->sta_table_lock);
      
#line 1685 
      txt = (char *)"OK, new AID";
    }
  }
  fail: 
#line 1689 
  ;
  
#line 1690 
  pos = (__le16 *)(& body);
  
#line 1692 
  if (send_deauth != 0) {
    
#line 1693 
    *pos = (unsigned short)9U;
    
#line 1694 
    pos += 1;
  }
  else {
    unsigned int tmp_2;
    char *tmp_3;
    char *tmp_4;
    
#line 1700 
    *pos = (unsigned short)1U;
    
#line 1701 
    pos += 1;
    
#line 1704 
    *pos = resp;
    
#line 1705 
    pos += 1;
    
#line 1707 
    if (sta != (struct sta_info *)0 && (unsigned int)sta->aid != 0U) 
      
#line 1707 
      tmp_2 = (unsigned int)sta->aid | 49152U; else 
#line 1707 
                                                    tmp_2 = (unsigned int)(-16384);
    
#line 1707 
    *pos = (unsigned short)tmp_2;
    
#line 1709 
    pos += 1;
    
#line 1712 
    p = (char *)pos;
    
#line 1713 
    tmp_3 = p;
    
#line 1713 
    p += 1;
    
#line 1713 
    *tmp_3 = (char)1;
    
#line 1714 
    lpos = p;
    
#line 1715 
    tmp_4 = p;
    
#line 1715 
    p += 1;
    
#line 1715 
    *tmp_4 = (char)0;
    
#line 1716 
    if (((unsigned long)local->tx_rate_control & 1UL) != 0UL) {
      char *tmp_5;
      
#line 1717 
      tmp_5 = p;
      
#line 1717 
      p += 1;
      
#line 1717 
      if (((unsigned long)local->basic_rates & 1UL) != 0UL) 
#line 1717 
                                                            *tmp_5 = (char)(-126); else 
                                                                    
#line 1717 
                                                                    *tmp_5 = (char)2;
      
#line 1718 
      *lpos = (char)((int)*lpos + 1);
    }
    else ;
    
#line 1720 
    if (((unsigned long)local->tx_rate_control & 2UL) != 0UL) {
      char *tmp_6;
      
#line 1721 
      tmp_6 = p;
      
#line 1721 
      p += 1;
      
#line 1721 
      if (((unsigned long)local->basic_rates & 2UL) != 0UL) 
#line 1721 
                                                            *tmp_6 = (char)(-124); else 
                                                                    
#line 1721 
                                                                    *tmp_6 = (char)4;
      
#line 1722 
      *lpos = (char)((int)*lpos + 1);
    }
    else ;
    
#line 1724 
    if (((unsigned long)local->tx_rate_control & 4UL) != 0UL) {
      char *tmp_7;
      
#line 1725 
      tmp_7 = p;
      
#line 1725 
      p += 1;
      
#line 1725 
      if (((unsigned long)local->basic_rates & 4UL) != 0UL) 
#line 1725 
                                                            *tmp_7 = (char)(-117); else 
                                                                    
#line 1725 
                                                                    *tmp_7 = (char)11;
      
#line 1727 
      *lpos = (char)((int)*lpos + 1);
    }
    else ;
    
#line 1729 
    if (((unsigned long)local->tx_rate_control & 8UL) != 0UL) {
      char *tmp_8;
      
#line 1730 
      tmp_8 = p;
      
#line 1730 
      p += 1;
      
#line 1730 
      if (((unsigned long)local->basic_rates & 8UL) != 0UL) 
#line 1730 
                                                            *tmp_8 = (char)(-106); else 
                                                                    
#line 1730 
                                                                    *tmp_8 = (char)22;
      
#line 1732 
      *lpos = (char)((int)*lpos + 1);
    }
    else ;
    
#line 1734 
    pos = (__le16 *)p;
  }
  
#line 1742 
  if (send_deauth == 0) 
#line 1742 
                        tmp_9 = (unsigned int)(local->ap)->tx_callback_assoc; else 
                                                                    
#line 1742 
                                                                    tmp_9 = 0U;
  
#line 1737 
  ;
  
#line 1737 
  ;
  
#line 1737 
  if (send_deauth == 0) {
    unsigned int tmp_10;
    
#line 1738 
    if (reassoc != 0) 
#line 1738 
                      tmp_10 = 48U; else 
#line 1738 
                                         tmp_10 = 16U;
    
#line 1737 
    tmp_11 = tmp_10;
  }
  else 
#line 1737 
       tmp_11 = 192U;
  
#line 1737 
  ;
  
#line 1737 
  prism2_send_mgmt(dev,(unsigned short)((int)tmp_11),(char *)(& body),(int)((long)pos - (long)(& body)),(u8 *)(& hdr->addr2),(unsigned short)((int)tmp_9));
  
#line 1745 
  if (sta != (struct sta_info *)0) {
    
#line 1746 
    if ((unsigned int)resp == 0U) 
#line 1747 
                                  sta->last_rx = jiffies; else ;
    
#line 1751 
    atomic_dec_0(& sta->users);
  }
  else ;
  return_label: 
#line 1753 
                return;
}


#line 1767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_deauth(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  int len;
  u16 reason_code;
  __le16 *pos;
  
#line 1770 
  struct net_device *dev = local->dev;
  
#line 1771 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1772 
  char *body = (char *)(skb->data + 24U);
  
#line 1776 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 1778 
  len = (int)(skb->len + 4294967272U);
  
#line 1780 
  if (len <= 1) {
    
#line 1781 
    printk("handle_deauth - too short payload (len=%d)\n",len);
    
#line 1782 
    goto return_label;
  }
  else ;
  
#line 1785 
  pos = (__le16 *)body;
  
#line 1786 
  reason_code = *pos;
  
#line 1788 
  printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),len,(int)reason_code);
  
#line 1792 
  ldv_spin_lock_bh_115(& (local->ap)->sta_table_lock);
  
#line 1793 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1794 
  if (sta != (struct sta_info *)0) {
    
#line 1795 
    if (((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) 
#line 1796 
                                                                  hostap_event_expired_sta(local->dev,sta); else ;
    
#line 1797 
    sta->flags &= 4294967292U;
  }
  else ;
  
#line 1799 
  ldv_spin_unlock_bh_116(& (local->ap)->sta_table_lock);
  
#line 1800 
  if (sta == (struct sta_info *)0) 
#line 1801 
                                   printk("%s: deauthentication from %pM, ",(char *)(& dev->name),(u8 *)(& hdr->addr2),(int)reason_code); else ;
  return_label: 
#line 1804 
                return;
}


#line 1809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_disassoc(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  int len;
  u16 reason_code;
  __le16 *pos;
  
#line 1812 
  struct net_device *dev = local->dev;
  
#line 1813 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1814 
  char *body = (char *)(skb->data + 24U);
  
#line 1818 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 1820 
  len = (int)(skb->len + 4294967272U);
  
#line 1822 
  if (len <= 1) {
    
#line 1823 
    printk("handle_disassoc - too short payload (len=%d)\n",len);
    
#line 1824 
    goto return_label;
  }
  else ;
  
#line 1827 
  pos = (__le16 *)body;
  
#line 1828 
  reason_code = *pos;
  
#line 1830 
  printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),len,(int)reason_code);
  
#line 1834 
  ldv_spin_lock_bh_117(& (local->ap)->sta_table_lock);
  
#line 1835 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1836 
  if (sta != (struct sta_info *)0) {
    
#line 1837 
    if (((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) 
#line 1838 
                                                                  hostap_event_expired_sta(local->dev,sta); else ;
    
#line 1839 
    sta->flags &= 4294967293U;
  }
  else ;
  
#line 1841 
  ldv_spin_unlock_bh_118(& (local->ap)->sta_table_lock);
  
#line 1842 
  if (sta == (struct sta_info *)0) 
#line 1843 
                                   printk("%s: disassociation from %pM, ",(char *)(& dev->name),(u8 *)(& hdr->addr2),(int)reason_code); else ;
  return_label: 
#line 1846 
                return;
}


#line 1851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_handle_data_nullfunc(local_info_t *local, struct ieee80211_hdr *hdr)
{
  
#line 1854 
  struct net_device *dev = local->dev;
  
#line 1861 
  printk("\001");
  
#line 1862 
  prism2_send_mgmt(dev,(unsigned short)212,(char *)0,0,(u8 *)(& hdr->addr2),(unsigned short)0);
  
#line 1864 
  return;
}


#line 1868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void ap_handle_dropped_data(local_info_t *local, struct ieee80211_hdr *hdr)
{
  struct sta_info *sta;
  __le16 reason;
  unsigned int tmp;
  
#line 1871 
  struct net_device *dev = local->dev;
  
#line 1875 
  ldv_spin_lock_bh_119(& (local->ap)->sta_table_lock);
  
#line 1876 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1877 
  if (sta != (struct sta_info *)0) 
#line 1878 
                                   atomic_inc_0(& sta->users); else ;
  
#line 1879 
  ldv_spin_unlock_bh_120(& (local->ap)->sta_table_lock);
  
#line 1881 
  if (sta != (struct sta_info *)0 && ((unsigned long)sta->flags & 2UL) != 0UL) {
    
#line 1882 
    printk("\001");
    
#line 1883 
    atomic_dec_0(& sta->users);
    
#line 1884 
    goto return_label;
  }
  else ;
  
#line 1887 
  reason = (unsigned short)7U;
  
#line 1888 
  ;
  
#line 1888 
  if (sta == (struct sta_info *)0 || ((unsigned long)sta->flags & 2UL) == 0UL) 
    
#line 1888 
    tmp = 192U; else 
#line 1888 
                     tmp = 160U;
  
#line 1888 
  ;
  
#line 1888 
  prism2_send_mgmt(dev,(unsigned short)((int)tmp),(char *)(& reason),2,(u8 *)(& hdr->addr2),(unsigned short)0);
  
#line 1893 
  if (sta != (struct sta_info *)0) 
#line 1894 
                                   atomic_dec_0(& sta->users); else ;
  return_label: 
#line 1895 
                return;
}


#line 1901  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void pspoll_send_buffered(local_info_t *local, struct sta_info *sta, struct sk_buff *skb)
{
  struct hostap_skb_tx_data *meta;
  int tmp;
  
#line 1906 
  if (((unsigned long)sta->flags & 4UL) == 0UL) {
    
#line 1909 
    dev_queue_xmit(skb);
    
#line 1910 
    goto return_label;
  }
  else ;
  
#line 1915 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 1916 
  meta->flags = (unsigned char)((unsigned int)meta->flags | 2U);
  
#line 1917 
  tmp = skb_queue_empty((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 1917 
  if (tmp == 0) 
#line 1919 
                meta->flags = (unsigned char)((unsigned int)meta->flags | 4U); else ;
  
#line 1921 
  dev_queue_xmit(skb);
  return_label: 
#line 1922 
                return;
}


#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_pspoll(local_info_t *local, struct ieee80211_hdr *hdr, struct hostap_80211_rx_status *rx_stats)
{
  struct sta_info *sta;
  u16 aid;
  struct sk_buff *skb;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  
#line 1930 
  struct net_device *dev = local->dev;
  
#line 1938 
  tmp_0 = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
  
#line 1938 
  if (tmp_0) 
#line 1938 
             tmp_1 = 0; else 
#line 1938 
                             tmp_1 = 1;
  
#line 1938 
  if (tmp_1) {
    
#line 1939 
    printk("\001",(u8 *)(& hdr->addr1));
    
#line 1942 
    goto return_label;
  }
  else ;
  
#line 1945 
  aid = hdr->duration_id;
  
#line 1946 
  if (((unsigned long)aid & 49152UL) != 49152UL) {
    
#line 1947 
    printk("\001");
    
#line 1948 
    goto return_label;
  }
  else ;
  
#line 1950 
  aid = (unsigned short)((unsigned int)aid & 16383U);
  
#line 1951 
  if ((unsigned int)aid + 65535U > 127U) {
    
#line 1952 
    printk("\001",(int)aid);
    
#line 1953 
    goto return_label;
  }
  else ;
  
#line 1957 
  ldv_spin_lock_bh_121(& (local->ap)->sta_table_lock);
  
#line 1958 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 1959 
  if (sta != (struct sta_info *)0) 
#line 1960 
                                   atomic_inc_0(& sta->users); else ;
  
#line 1961 
  ldv_spin_unlock_bh_122(& (local->ap)->sta_table_lock);
  
#line 1963 
  if (sta == (struct sta_info *)0) {
    
#line 1964 
    printk("\001");
    
#line 1965 
    goto return_label;
  }
  else ;
  
#line 1967 
  if ((int)sta->aid != (int)aid) {
    
#line 1968 
    printk("\001",(int)aid,(int)sta->aid);
    
#line 1970 
    goto return_label;
  }
  else ;
  
#line 1982 
  goto ldv_47331;
  ldv_47330: 
#line 1983 
  ;
  
#line 1987 
  pspoll_send_buffered(local,sta,skb);
  
#line 1989 
  if (((unsigned long)sta->flags & 4UL) != 0UL) 
#line 1994 
                                                goto ldv_47329; else ;
  ldv_47331: 
#line 1995 
  ;
  
#line 1982 
  skb = skb_dequeue(& sta->tx_buf);
  
#line 1982 
  if (skb != (struct sk_buff *)0) 
#line 1984 
                                  goto ldv_47330; else 
#line 1987 
                                                       goto ldv_47329;
  ldv_47329: 
#line 1988 
  ;
  
#line 1998 
  tmp_3 = skb_queue_empty((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 1998 
  if (tmp_3 != 0) {
    
#line 2000 
    int tmp = ((unsigned long)sta->flags & 8UL) == 0UL;
    
#line 2003 
    hostap_set_tim(local,(int)aid,0);
    
#line 2004 
    sta->flags &= 4294967287U;
  }
  else ;
  
#line 2007 
  atomic_dec_0(& sta->users);
  return_label: 
#line 2008 
                return;
}


#line 2013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_wds_oper_queue(struct work_struct *work)
{
  struct ap_data *tmp;
  struct wds_oper_data *entry;
  struct wds_oper_data *prev;
  char *tmp_0;
  {
    
#line 2015 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2015 
    tmp = (struct ap_data *)__mptr + 18446744073709549216U;
  }
  
#line 2015 
  struct ap_data *ap = tmp;
  
#line 2017 
  local_info_t *local = ap->local;
  
#line 2020 
  ldv_spin_lock_bh_123(& local->lock);
  
#line 2021 
  entry = (local->ap)->wds_oper_entries;
  
#line 2022 
  (local->ap)->wds_oper_entries = (struct wds_oper_data *)0;
  
#line 2023 
  ldv_spin_unlock_bh_124(& local->lock);
  
#line 2025 
  goto ldv_47342;
  ldv_47341: 
#line 2026 
  ;
  
#line 2026 
  ;
  
#line 2026 
  if (entry->type == (unsigned int)0) 
#line 2026 
                                      tmp_0 = (char *)"adding"; else 
                                                                  
#line 2026 
                                                                  tmp_0 = (char *)"removing";
  
#line 2026 
  ;
  
#line 2026 
  printk("\001",(char *)(& (local->dev)->name),tmp_0,(u8 *)(& entry->addr));
  
#line 2031 
  if (entry->type == (unsigned int)0) 
#line 2032 
                                      prism2_wds_add(local,(u8 *)(& entry->addr),0);
  else 
    
#line 2033 
    if (entry->type == (unsigned int)1) 
#line 2034 
                                        prism2_wds_del(local,(u8 *)(& entry->addr),0,1); else ;
  
#line 2036 
  prev = entry;
  
#line 2037 
  entry = entry->next;
  
#line 2038 
  kfree((void const *)prev);
  ldv_47342: 
#line 2039 
  ;
  
#line 2025 
  if (entry != (struct wds_oper_data *)0) 
#line 2027 
                                          goto ldv_47341; else 
#line 2030 
                                                               goto ldv_47343;
  ldv_47343: 
#line 2031 
  ;
  
#line 2032 
  return;
}


#line 2044  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_beacon(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  int len;
  int left;
  u16 beacon_int;
  u16 capability;
  __le16 *pos;
  unsigned long tmp_1;
  
#line 2047 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2048 
  char *body = (char *)(skb->data + 24U);
  
#line 2052 
  char *ssid = (char *)0;
  
#line 2053 
  unsigned char *supp_rates = (unsigned char *)0U;
  
#line 2054 
  int ssid_len = 0;
  
#line 2054 
  int supp_rates_len = 0;
  
#line 2055 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 2056 
  int new_sta = 0;
  
#line 2056 
  int channel = -1;
  
#line 2058 
  len = (int)(skb->len + 4294967272U);
  
#line 2060 
  if (len <= 11) {
    
#line 2061 
    printk("\001",len);
    
#line 2063 
    goto return_label;
  }
  else ;
  
#line 2066 
  pos = (__le16 *)body;
  
#line 2067 
  left = len;
  
#line 2070 
  pos += 4U;
  
#line 2070 
  left += -8;
  
#line 2072 
  beacon_int = *pos;
  
#line 2073 
  pos += 1;
  
#line 2073 
  left += -2;
  
#line 2075 
  capability = *pos;
  
#line 2076 
  pos += 1;
  
#line 2076 
  left += -2;
  
#line 2078 
  if ((local->ap)->ap_policy != (unsigned int)AP_OTHER_AP_EVEN_IBSS && ((int)capability & 2) != 0) 
    
#line 2080 
    goto return_label; else ;
  
#line 2082 
  if (left > 1) {
    unsigned int ileft;
    
#line 2084 
    unsigned char *u = (unsigned char *)pos;
    
#line 2086 
    if ((unsigned int)*u == 0U) {
      
#line 2087 
      u += 1;
      
#line 2087 
      left -= 1;
      
#line 2088 
      ileft = (unsigned int)*u;
      
#line 2089 
      u += 1;
      
#line 2089 
      left -= 1;
      
#line 2091 
      if (ileft > (unsigned int)left || ileft > 32U) {
        
#line 2092 
        printk("\001");
        
#line 2093 
        goto return_label;
      }
      else ;
      
#line 2096 
      if ((local->ap)->ap_policy == (unsigned int)AP_OTHER_AP_SAME_SSID) {
        size_t tmp;
        
#line 2097 
        tmp = strlen((char const *)(& local->essid));
        
#line 2096 
        ;
        
#line 2096 
        if ((unsigned long)ileft != tmp) 
#line 2100 
                                         goto return_label;
        else {
          int tmp_0;
          
#line 2097 
          tmp_0 = memcmp((void const *)(& local->essid),(void const *)u,(unsigned long)ileft);
          
#line 2097 
          if (tmp_0 != 0) 
#line 2100 
                          goto return_label; else ;
        }
      }
      else ;
      
#line 2103 
      ssid = (char *)u;
      
#line 2104 
      ssid_len = (int)ileft;
      
#line 2106 
      u += ileft;
      
#line 2107 
      left = (int)((unsigned int)left - ileft);
    }
    else ;
    
#line 2110 
    if ((unsigned int)*u == 1U) {
      
#line 2111 
      u += 1;
      
#line 2111 
      left -= 1;
      
#line 2112 
      ileft = (unsigned int)*u;
      
#line 2113 
      u += 1;
      
#line 2113 
      left -= 1;
      
#line 2115 
      if ((ileft > (unsigned int)left || ileft == 0U) || ileft > 8U) {
        
#line 2116 
        printk("\001");
        
#line 2117 
        goto return_label;
      }
      else ;
      
#line 2120 
      supp_rates = u;
      
#line 2121 
      supp_rates_len = (int)ileft;
      
#line 2123 
      u += ileft;
      
#line 2124 
      left = (int)((unsigned int)left - ileft);
    }
    else ;
    
#line 2127 
    if ((unsigned int)*u == 3U) {
      
#line 2128 
      u += 1;
      
#line 2128 
      left -= 1;
      
#line 2129 
      ileft = (unsigned int)*u;
      
#line 2130 
      u += 1;
      
#line 2130 
      left -= 1;
      
#line 2132 
      if (ileft > (unsigned int)left || ileft != 1U) {
        
#line 2133 
        printk("\001");
        
#line 2134 
        goto return_label;
      }
      else ;
      
#line 2137 
      channel = (int)*u;
      
#line 2139 
      u += ileft;
      
#line 2140 
      left = (int)((unsigned int)left - ileft);
    }
    else ;
  }
  else ;
  
#line 2144 
  ldv_spin_lock_bh_125(& (local->ap)->sta_table_lock);
  
#line 2145 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 2146 
  if (sta != (struct sta_info *)0) 
#line 2147 
                                   atomic_inc_0(& sta->users); else ;
  
#line 2148 
  ldv_spin_unlock_bh_126(& (local->ap)->sta_table_lock);
  
#line 2150 
  if (sta == (struct sta_info *)0) {
    
#line 2152 
    new_sta = 1;
    
#line 2153 
    sta = ap_add_sta(local->ap,(u8 *)(& hdr->addr2));
    
#line 2154 
    if (sta == (struct sta_info *)0) {
      
#line 2155 
      printk("\001");
      
#line 2157 
      goto return_label;
    }
    else ;
    
#line 2159 
    hostap_event_new_sta(local->dev,sta);
    
#line 2163 
    sta->flags = 3U;
    
#line 2165 
    if ((local->ap)->autom_ap_wds != 0) 
#line 2166 
                                        hostap_wds_link_oper(local,(u8 *)(& sta->addr),0); else ;
  }
  else ;
  
#line 2170 
  sta->ap = 1;
  
#line 2171 
  if (ssid != (char *)0) {
    
#line 2172 
    sta->u.ap.ssid_len = ssid_len;
    
#line 2173 
    memcpy((void *)(& sta->u.ap.ssid),(void const *)ssid,(unsigned long)ssid_len);
    
#line 2174 
    sta->u.ap.ssid[ssid_len] = (unsigned char)0U;
  }
  else {
    
#line 2176 
    sta->u.ap.ssid_len = 0;
    
#line 2177 
    sta->u.ap.ssid[0] = (unsigned char)0U;
  }
  
#line 2179 
  sta->u.ap.channel = channel;
  
#line 2180 
  sta->rx_packets += 1UL;
  
#line 2181 
  sta->rx_bytes += (unsigned long)len;
  
#line 2182 
  tmp_1 = jiffies;
  
#line 2182 
  sta->last_rx = tmp_1;
  
#line 2182 
  sta->u.ap.last_beacon = tmp_1;
  
#line 2183 
  sta->capability = capability;
  
#line 2184 
  sta->listen_interval = beacon_int;
  
#line 2186 
  atomic_dec_0(& sta->users);
  
#line 2188 
  if (new_sta != 0) {
    
#line 2189 
    memset((void *)(& sta->supported_rates),0,32UL);
    
#line 2190 
    memcpy((void *)(& sta->supported_rates),(void const *)supp_rates,(unsigned long)supp_rates_len);
    
#line 2191 
    prism2_check_tx_rates(sta);
  }
  else ;
  return_label: 
#line 2193 
                return;
}


#line 2199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void handle_ap_item(local_info_t *local, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  u16 fc;
  u16 type;
  u16 stype;
  struct ieee80211_hdr *hdr;
  int tmp_2;
  bool tmp_1;
  int tmp_4;
  bool tmp_3;
  
#line 2203 
  struct net_device *dev = local->dev;
  
#line 2210 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2211 
  fc = hdr->frame_control;
  
#line 2212 
  type = (unsigned short)((unsigned int)fc & 12U);
  
#line 2213 
  stype = (unsigned short)((unsigned int)fc & 240U);
  
#line 2216 
  if (local->hostapd == 0 && (unsigned int)type == 8U) {
    int tmp_0;
    bool tmp;
    
#line 2217 
    printk("\001");
    
#line 2219 
    if (((int)fc & 256) == 0 || ((int)fc & 512) != 0) {
      
#line 2221 
      if ((unsigned int)stype == 64U) {
        
#line 2225 
        ap_handle_dropped_data(local,hdr);
        
#line 2226 
        goto done;
      }
      else ;
      
#line 2228 
      printk("\001",(int)fc);
      
#line 2230 
      goto done;
    }
    else ;
    
#line 2233 
    tmp = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
    
#line 2233 
    if (tmp) 
#line 2233 
             tmp_0 = 0; else 
#line 2233 
                             tmp_0 = 1;
    
#line 2233 
    if (tmp_0) {
      
#line 2234 
      printk("\001",(u8 *)(& hdr->addr1));
      
#line 2236 
      goto done;
    }
    else ;
    
#line 2239 
    if ((local->ap)->nullfunc_ack != 0 && (unsigned int)stype == 64U) 
      
#line 2241 
      ap_handle_data_nullfunc(local,hdr); else 
#line 2243 
                                               ap_handle_dropped_data(local,hdr);
    
#line 2244 
    goto done;
  }
  else ;
  
#line 2247 
  if ((unsigned int)type == 0U && (unsigned int)stype == 128U) {
    
#line 2248 
    handle_beacon(local,skb,rx_stats);
    
#line 2249 
    goto done;
  }
  else ;
  
#line 2253 
  if ((unsigned int)type == 4U && (unsigned int)stype == 160U) {
    
#line 2254 
    handle_pspoll(local,hdr,rx_stats);
    
#line 2255 
    goto done;
  }
  else ;
  
#line 2258 
  if (local->hostapd != 0) {
    
#line 2259 
    printk("\001",(int)type,(int)stype);
    
#line 2261 
    goto done;
  }
  else ;
  
#line 2265 
  if ((unsigned int)type != 0U) {
    
#line 2266 
    printk("\001");
    
#line 2267 
    goto done;
  }
  else ;
  
#line 2270 
  tmp_1 = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
  
#line 2270 
  if (tmp_1) 
#line 2270 
             tmp_2 = 0; else 
#line 2270 
                             tmp_2 = 1;
  
#line 2270 
  if (tmp_2) {
    
#line 2271 
    printk("\001",(u8 *)(& hdr->addr1));
    
#line 2273 
    goto done;
  }
  else ;
  
#line 2276 
  tmp_3 = ether_addr_equal((u8 const *)(& hdr->addr3),(u8 const *)dev->dev_addr);
  
#line 2276 
  if (tmp_3) 
#line 2276 
             tmp_4 = 0; else 
#line 2276 
                             tmp_4 = 1;
  
#line 2276 
  if (tmp_4) {
    
#line 2277 
    printk("\001",(u8 *)(& hdr->addr3));
    
#line 2279 
    goto done;
  }
  else ;
  
#line 2282 
  switch ((int)stype) {
    case 0: 
#line 2283 
    ;
    
#line 2284 
    handle_assoc(local,skb,rx_stats,0);
    
#line 2285 
    goto ldv_47377;
    case 16: 
#line 2286 
    ;
    
#line 2287 
    printk("\001");
    
#line 2288 
    goto ldv_47377;
    case 32: 
#line 2289 
    ;
    
#line 2290 
    handle_assoc(local,skb,rx_stats,1);
    
#line 2291 
    goto ldv_47377;
    case 48: 
#line 2292 
    ;
    
#line 2293 
    printk("\001");
    
#line 2294 
    goto ldv_47377;
    case 144: 
#line 2295 
    ;
    
#line 2296 
    printk("\001");
    
#line 2297 
    goto ldv_47377;
    case 160: 
#line 2298 
    ;
    
#line 2299 
    handle_disassoc(local,skb,rx_stats);
    
#line 2300 
    goto ldv_47377;
    case 176: 
#line 2301 
    ;
    
#line 2302 
    handle_authen(local,skb,rx_stats);
    
#line 2303 
    goto ldv_47377;
    case 192: 
#line 2304 
    ;
    
#line 2305 
    handle_deauth(local,skb,rx_stats);
    
#line 2306 
    goto ldv_47377;
    default: 
#line 2307 
    ;
    
#line 2308 
    printk("\001",(int)stype >> 4);
    
#line 2310 
    goto ldv_47377;
  }
  ldv_47377: 
#line 2314 
  ;
  done: 
#line 2314 
  ;
  
#line 2315 
  consume_skb(skb);
  
#line 2316 
  return;
}


#line 2320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_rx(struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct ieee80211_hdr *hdr;
  
#line 2327 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2328 
  local = iface->local;
  
#line 2330 
  if (skb->len <= 15U) 
#line 2331 
                       goto drop; else ;
  
#line 2333 
  dev->stats.rx_packets += 1UL;
  
#line 2335 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2337 
  if ((local->ap)->ap_policy == (unsigned int)AP_OTHER_AP_SKIP_ALL) {
    int tmp_0;
    
#line 2337 
    tmp_0 = ieee80211_is_beacon((unsigned short)((int)hdr->frame_control));
    
#line 2337 
    if (tmp_0 != 0) 
#line 2339 
                    goto drop; else ;
  }
  else ;
  
#line 2341 
  skb->protocol = (unsigned short)5632U;
  
#line 2342 
  handle_ap_item(local,skb,rx_stats);
  
#line 2343 
  goto return_label;
  drop: 
#line 2345 
  ;
  
#line 2346 
  consume_skb(skb);
  return_label: 
#line 2347 
                return;
}


#line 2351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void schedule_packet_send(local_info_t *local, struct sta_info *sta)
{
  struct sk_buff *skb;
  struct ieee80211_hdr *hdr;
  struct hostap_80211_rx_status rx_stats;
  int tmp;
  
#line 2357 
  tmp = skb_queue_empty((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 2357 
  if (tmp != 0) 
#line 2358 
                goto return_label; else ;
  
#line 2360 
  skb = dev_alloc_skb(16U);
  
#line 2361 
  if (skb == (struct sk_buff *)0) {
    
#line 2362 
    printk("\001",(char *)(& (local->dev)->name));
    
#line 2364 
    goto return_label;
  }
  else ;
  
#line 2367 
  hdr = (struct ieee80211_hdr *)skb_put(skb,16U);
  
#line 2370 
  hdr->frame_control = (unsigned short)164U;
  
#line 2372 
  memcpy((void *)(& hdr->addr1),(void const *)(local->dev)->dev_addr,6UL);
  
#line 2373 
  memcpy((void *)(& hdr->addr2),(void const *)(& sta->addr),6UL);
  
#line 2374 
  hdr->duration_id = (unsigned short)((unsigned int)sta->aid | 49152U);
  
#line 2380 
  skb->dev = local->dev;
  
#line 2382 
  memset((void *)(& rx_stats),0,8UL);
  
#line 2383 
  hostap_rx(local->dev,skb,& rx_stats);
  return_label: 
#line 2384 
                return;
}


#line 2387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int prism2_ap_get_sta_qual(local_info_t *local, struct sockaddr *addr, struct iw_quality *qual, int buf_size, int aplist)
{
  struct list_head *ptr;
  
#line 2391 
  struct ap_data *ap = local->ap;
  
#line 2393 
  int count = 0;
  
#line 2395 
  ldv_spin_lock_bh_127(& ap->sta_table_lock);
  
#line 2397 
  ptr = ap->sta_list.next;
  
#line 2397 
  goto ldv_47416;
  ldv_47415: 
#line 2398 
  ;
  {
    
#line 2399 
    struct sta_info *sta = (struct sta_info *)ptr;
    
#line 2401 
    if (aplist != 0 && sta->ap == 0) 
#line 2402 
                                     goto ldv_47413; else ;
    
#line 2403 
    (addr + count)->sa_family = (unsigned short)1U;
    
#line 2404 
    memcpy((void *)(& (addr + count)->sa_data),(void const *)(& sta->addr),6UL);
    
#line 2405 
    if ((int)sta->last_rx_silence == 0) 
      
#line 2406 
      if ((int)sta->last_rx_signal > 26) 
#line 2406 
                                         (qual + count)->qual = (unsigned char)((((int)sta->last_rx_signal + -27) * 92) / 127); else 
                                                                    
#line 2406 
                                                                    (qual + count)->qual = (unsigned char)0U;
    else 
#line 2409 
         (qual + count)->qual = (unsigned char)((unsigned int)((int)((unsigned char)sta->last_rx_signal) - (int)((unsigned char)sta->last_rx_silence)) + 221U);
    
#line 2411 
    (qual + count)->level = (unsigned char)((unsigned int)((unsigned char)(((int)sta->last_rx_signal * 100) / 255)) + 156U);
    
#line 2412 
    (qual + count)->noise = (unsigned char)((unsigned int)((unsigned char)(((int)sta->last_rx_silence * 100) / 255)) + 156U);
    
#line 2413 
    (qual + count)->updated = sta->last_rx_updated;
    
#line 2415 
    sta->last_rx_updated = (unsigned char)8U;
    
#line 2417 
    count += 1;
    
#line 2418 
    if (count >= buf_size) 
#line 2419 
                           goto ldv_47414; else ;
  }
  ldv_47413: 
#line 2421 
  ;
  
#line 2398 
  ptr = ptr->next;
  ldv_47416: 
#line 2399 
  ;
  
#line 2397 
  if (ptr != (struct list_head *)0 && & ap->sta_list != ptr) 
#line 2399 
                                                             goto ldv_47415; else 
                                                                    
#line 2402 
                                                                    goto ldv_47414;
  ldv_47414: 
#line 2403 
  ;
  
#line 2421 
  ldv_spin_unlock_bh_128(& ap->sta_table_lock);
  
#line 2423 
  return count;
}


#line 2429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int prism2_ap_translate_scan(struct net_device *dev, struct iw_request_info *info, char *buffer)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct ap_data *ap;
  struct list_head *ptr;
  struct iw_event iwe;
  char buf[64U];
  
#line 2437 
  char *current_ev = buffer;
  
#line 2438 
  char *end_buf = buffer + 4096U;
  
#line 2443 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2444 
  local = iface->local;
  
#line 2445 
  ap = local->ap;
  
#line 2447 
  ldv_spin_lock_bh_129(& ap->sta_table_lock);
  
#line 2449 
  ptr = ap->sta_list.next;
  
#line 2449 
  goto ldv_47435;
  ldv_47434: 
#line 2450 
  ;
  {
    
#line 2451 
    struct sta_info *sta = (struct sta_info *)ptr;
    
#line 2454 
    memset((void *)(& iwe),0,24UL);
    
#line 2455 
    iwe.cmd = (unsigned short)35605U;
    
#line 2456 
    iwe.u.ap_addr.sa_family = (unsigned short)1U;
    
#line 2457 
    memcpy((void *)(& iwe.u.ap_addr.sa_data),(void const *)(& sta->addr),6UL);
    
#line 2458 
    iwe.len = (unsigned short)24U;
    
#line 2459 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,24);
    
#line 2464 
    memset((void *)(& iwe),0,24UL);
    
#line 2465 
    iwe.cmd = (unsigned short)35591U;
    
#line 2466 
    if (sta->ap != 0) 
#line 2467 
                      iwe.u.mode = 3U; else 
#line 2469 
                                            iwe.u.mode = 2U;
    
#line 2470 
    iwe.len = (unsigned short)12U;
    
#line 2471 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
    
#line 2475 
    memset((void *)(& iwe),0,24UL);
    
#line 2476 
    iwe.cmd = (unsigned short)35841U;
    
#line 2477 
    if ((int)sta->last_rx_silence == 0) 
      
#line 2478 
      if ((int)sta->last_rx_signal > 26) 
#line 2478 
                                         iwe.u.qual.qual = (unsigned char)((((int)sta->last_rx_signal + -27) * 92) / 127); else 
                                                                    
#line 2478 
                                                                    iwe.u.qual.qual = (unsigned char)0U;
    else 
#line 2481 
         iwe.u.qual.qual = (unsigned char)((unsigned int)((int)((unsigned char)sta->last_rx_signal) - (int)((unsigned char)sta->last_rx_silence)) + 221U);
    
#line 2483 
    iwe.u.qual.level = (unsigned char)((unsigned int)((unsigned char)(((int)sta->last_rx_signal * 100) / 255)) + 156U);
    
#line 2484 
    iwe.u.qual.noise = (unsigned char)((unsigned int)((unsigned char)(((int)sta->last_rx_silence * 100) / 255)) + 156U);
    
#line 2485 
    iwe.u.qual.updated = sta->last_rx_updated;
    
#line 2486 
    iwe.len = (unsigned short)12U;
    
#line 2487 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
    
#line 2491 
    if (sta->ap != 0) {
      size_t tmp_0;
      
#line 2492 
      memset((void *)(& iwe),0,24UL);
      
#line 2493 
      iwe.cmd = (unsigned short)35611U;
      
#line 2494 
      iwe.u.data.length = (unsigned short)sta->u.ap.ssid_len;
      
#line 2495 
      iwe.u.data.flags = (unsigned short)1U;
      
#line 2496 
      current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& sta->u.ap.ssid));
      
#line 2500 
      memset((void *)(& iwe),0,24UL);
      
#line 2501 
      iwe.cmd = (unsigned short)35627U;
      
#line 2502 
      if (((int)sta->capability & 16) != 0) 
#line 2503 
                                            iwe.u.data.flags = (unsigned short)2048U; else 
                                                                    
#line 2506 
                                                                    iwe.u.data.flags = (unsigned short)32768U;
      
#line 2507 
      current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& sta->u.ap.ssid));
      
#line 2511 
      if ((unsigned int)sta->u.ap.channel + 4294967295U <= 13U) {
        
#line 2513 
        memset((void *)(& iwe),0,24UL);
        
#line 2514 
        iwe.cmd = (unsigned short)35589U;
        
#line 2515 
        iwe.u.freq.m = (int)(freq_list_0[sta->u.ap.channel + -1] * (long)100000U);
        
#line 2517 
        iwe.u.freq.e = (short)1;
        
#line 2518 
        current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,16);
      }
      else ;
      
#line 2523 
      memset((void *)(& iwe),0,24UL);
      
#line 2524 
      iwe.cmd = (unsigned short)35842U;
      
#line 2525 
      sprintf((char *)(& buf),"beacon_interval=%d",(int)sta->listen_interval);
      
#line 2527 
      tmp_0 = strlen((char const *)(& buf));
      
#line 2527 
      iwe.u.data.length = (unsigned short)tmp_0;
      
#line 2528 
      current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& buf));
    }
    else ;
    
#line 2533 
    sta->last_rx_updated = (unsigned char)8U;
  }
  
#line 2450 
  ptr = ptr->next;
  ldv_47435: 
#line 2451 
  ;
  
#line 2449 
  if (ptr != (struct list_head *)0 && & ap->sta_list != ptr) 
#line 2451 
                                                             goto ldv_47434; else 
                                                                    
#line 2454 
                                                                    goto ldv_47436;
  ldv_47436: 
#line 2455 
  ;
  
#line 2538 
  ldv_spin_unlock_bh_130(& ap->sta_table_lock);
  
#line 2540 
  __retres = (int)((long)current_ev - (long)buffer);
  
#line 2540 
  return __retres;
}


#line 2544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_hostapd_add_sta(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  struct sta_info *sta;
  
#line 2549 
  ldv_spin_lock_bh_131(& ap->sta_table_lock);
  
#line 2550 
  sta = ap_get_sta(ap,(u8 *)(& param->sta_addr));
  
#line 2551 
  if (sta != (struct sta_info *)0) 
#line 2552 
                                   atomic_inc_0(& sta->users); else ;
  
#line 2553 
  ldv_spin_unlock_bh_132(& ap->sta_table_lock);
  
#line 2555 
  if (sta == (struct sta_info *)0) {
    
#line 2556 
    sta = ap_add_sta(ap,(u8 *)(& param->sta_addr));
    
#line 2557 
    if (sta == (struct sta_info *)0) {
      
#line 2558 
      __retres = -1;
      
#line 2558 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2561 
  if ((((unsigned long)sta->flags & 2UL) == 0UL && sta->ap == 0) && sta->local != (local_info_t *)0) 
    
#line 2562 
    hostap_event_new_sta((sta->local)->dev,sta); else ;
  
#line 2564 
  sta->flags |= 3U;
  
#line 2565 
  sta->last_rx = jiffies;
  
#line 2566 
  sta->aid = param->u.add_sta.aid;
  
#line 2567 
  sta->capability = param->u.add_sta.capability;
  
#line 2568 
  sta->tx_supp_rates = param->u.add_sta.tx_supp_rates;
  
#line 2569 
  if (((unsigned long)sta->tx_supp_rates & 1UL) != 0UL) 
#line 2570 
                                                        sta->supported_rates[0] = (unsigned char)2U; else ;
  
#line 2571 
  if (((unsigned long)sta->tx_supp_rates & 2UL) != 0UL) 
#line 2572 
                                                        sta->supported_rates[1] = (unsigned char)4U; else ;
  
#line 2573 
  if (((unsigned long)sta->tx_supp_rates & 4UL) != 0UL) 
#line 2574 
                                                        sta->supported_rates[2] = (unsigned char)11U; else ;
  
#line 2575 
  if (((unsigned long)sta->tx_supp_rates & 8UL) != 0UL) 
#line 2576 
                                                        sta->supported_rates[3] = (unsigned char)22U; else ;
  
#line 2577 
  prism2_check_tx_rates(sta);
  
#line 2578 
  atomic_dec_0(& sta->users);
  
#line 2579 
  __retres = 0;
  return_label: 
#line 2579 
                return __retres;
}


#line 2583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_hostapd_remove_sta(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  struct sta_info *sta;
  
#line 2588 
  ldv_spin_lock_bh_133(& ap->sta_table_lock);
  
#line 2589 
  sta = ap_get_sta(ap,(u8 *)(& param->sta_addr));
  
#line 2590 
  if (sta != (struct sta_info *)0) {
    
#line 2591 
    ap_sta_hash_del(ap,sta);
    
#line 2592 
    list_del(& sta->list);
  }
  else ;
  
#line 2594 
  ldv_spin_unlock_bh_134(& ap->sta_table_lock);
  
#line 2596 
  if (sta == (struct sta_info *)0) {
    
#line 2597 
    __retres = -2;
    
#line 2597 
    goto return_label;
  }
  else ;
  
#line 2599 
  if ((((unsigned long)sta->flags & 2UL) != 0UL && sta->ap == 0) && sta->local != (local_info_t *)0) 
    
#line 2600 
    hostap_event_expired_sta((sta->local)->dev,sta); else ;
  
#line 2601 
  ap_free_sta(ap,sta);
  
#line 2603 
  __retres = 0;
  return_label: 
#line 2603 
                return __retres;
}


#line 2607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_hostapd_get_info_sta(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  struct sta_info *sta;
  
#line 2612 
  ldv_spin_lock_bh_135(& ap->sta_table_lock);
  
#line 2613 
  sta = ap_get_sta(ap,(u8 *)(& param->sta_addr));
  
#line 2614 
  if (sta != (struct sta_info *)0) 
#line 2615 
                                   atomic_inc_0(& sta->users); else ;
  
#line 2616 
  ldv_spin_unlock_bh_136(& ap->sta_table_lock);
  
#line 2618 
  if (sta == (struct sta_info *)0) {
    
#line 2619 
    __retres = -2;
    
#line 2619 
    goto return_label;
  }
  else ;
  
#line 2621 
  param->u.get_info_sta.inactive_sec = (unsigned int)((jiffies - sta->last_rx) / 250UL);
  
#line 2623 
  atomic_dec_0(& sta->users);
  
#line 2625 
  __retres = 1;
  return_label: 
#line 2625 
                return __retres;
}


#line 2629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_hostapd_set_flags_sta(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  struct sta_info *sta;
  
#line 2634 
  ldv_spin_lock_bh_137(& ap->sta_table_lock);
  
#line 2635 
  sta = ap_get_sta(ap,(u8 *)(& param->sta_addr));
  
#line 2636 
  if (sta != (struct sta_info *)0) {
    
#line 2637 
    sta->flags |= param->u.set_flags_sta.flags_or;
    
#line 2638 
    sta->flags &= param->u.set_flags_sta.flags_and;
  }
  else ;
  
#line 2640 
  ldv_spin_unlock_bh_138(& ap->sta_table_lock);
  
#line 2642 
  if (sta == (struct sta_info *)0) {
    
#line 2643 
    __retres = -2;
    
#line 2643 
    goto return_label;
  }
  else ;
  
#line 2645 
  __retres = 0;
  return_label: 
#line 2645 
                return __retres;
}


#line 2649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int prism2_hostapd_sta_clear_stats(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  struct sta_info *sta;
  int rate;
  
#line 2655 
  ldv_spin_lock_bh_139(& ap->sta_table_lock);
  
#line 2656 
  sta = ap_get_sta(ap,(u8 *)(& param->sta_addr));
  
#line 2657 
  if (sta != (struct sta_info *)0) {
    unsigned long tmp;
    unsigned long tmp_0;
    
#line 2658 
    tmp = 0UL;
    
#line 2658 
    sta->tx_packets = tmp;
    
#line 2658 
    sta->rx_packets = tmp;
    
#line 2659 
    tmp_0 = 0UL;
    
#line 2659 
    sta->tx_bytes = tmp_0;
    
#line 2659 
    sta->rx_bytes = tmp_0;
    
#line 2660 
    rate = 0;
    
#line 2660 
    goto ldv_47464;
    ldv_47463: 
#line 2661 
    ;
    
#line 2661 
    sta->tx_count[rate] = 0U;
    
#line 2662 
    sta->rx_count[rate] = 0U;
    
#line 2660 
    rate += 1;
    ldv_47464: 
#line 2661 
    ;
    
#line 2660 
    if (rate <= 3) 
#line 2662 
                   goto ldv_47463; else 
#line 2665 
                                        goto ldv_47465;
    ldv_47465: 
#line 2666 
    ;
  }
  else ;
  
#line 2665 
  ldv_spin_unlock_bh_140(& ap->sta_table_lock);
  
#line 2667 
  if (sta == (struct sta_info *)0) {
    
#line 2668 
    __retres = -2;
    
#line 2668 
    goto return_label;
  }
  else ;
  
#line 2670 
  __retres = 0;
  return_label: 
#line 2670 
                return __retres;
}


#line 2674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int prism2_hostapd(struct ap_data *ap, struct prism2_hostapd_param *param)
{
  int __retres;
  
#line 2676 
  switch (param->cmd) {
    int tmp;
    int tmp_0;
    int tmp_1;
    int tmp_2;
    int tmp_3;
    case (u32)1: 
#line 2677 
    ;
    
#line 2678 
    ap_control_kickall(ap);
    
#line 2679 
    __retres = 0;
    
#line 2679 
    goto return_label;
    case (u32)2: 
#line 2680 
    ;
    
#line 2681 
    tmp = prism2_hostapd_add_sta(ap,param);
    
#line 2681 
    __retres = tmp;
    
#line 2681 
    goto return_label;
    case (u32)3: 
#line 2682 
    ;
    
#line 2683 
    tmp_0 = prism2_hostapd_remove_sta(ap,param);
    
#line 2683 
    __retres = tmp_0;
    
#line 2683 
    goto return_label;
    case (u32)4: 
#line 2684 
    ;
    
#line 2685 
    tmp_1 = prism2_hostapd_get_info_sta(ap,param);
    
#line 2685 
    __retres = tmp_1;
    
#line 2685 
    goto return_label;
    case (u32)8: 
#line 2686 
    ;
    
#line 2687 
    tmp_2 = prism2_hostapd_set_flags_sta(ap,param);
    
#line 2687 
    __retres = tmp_2;
    
#line 2687 
    goto return_label;
    case (u32)15: 
#line 2688 
    ;
    
#line 2689 
    tmp_3 = prism2_hostapd_sta_clear_stats(ap,param);
    
#line 2689 
    __retres = tmp_3;
    
#line 2689 
    goto return_label;
    default: 
#line 2690 
    ;
    
#line 2691 
    printk("\001",param->cmd);
    
#line 2693 
    __retres = -95;
    
#line 2693 
    goto return_label;
  }
  return_label: 
#line 2676 
                return __retres;
}


#line 2700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static int ap_update_sta_tx_rate(struct sta_info *sta, struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 2702 
  int ret = (int)sta->tx_rate;
  
#line 2706 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2707 
  local = iface->local;
  
#line 2709 
  sta->tx_count[(int)sta->tx_rate_idx] += 1U;
  
#line 2710 
  sta->tx_since_last_failure += 1U;
  
#line 2711 
  sta->tx_consecutive_exc = 0U;
  
#line 2712 
  if (sta->tx_since_last_failure > 49U && (int)sta->tx_rate_idx < (int)sta->tx_max_rate) {
    int old_rate;
    int new_rate;
    int tmp_0;
    
#line 2716 
    new_rate = (int)sta->tx_rate_idx;
    
#line 2716 
    old_rate = new_rate;
    
#line 2717 
    goto ldv_47488;
    ldv_47487: 
#line 2718 
    ;
    
#line 2718 
    new_rate += 1;
    
#line 2719 
    tmp_0 = ap_tx_rate_ok(new_rate,sta,local);
    
#line 2719 
    if (tmp_0 != 0) {
      
#line 2720 
      sta->tx_rate_idx = (unsigned char)new_rate;
      
#line 2721 
      goto ldv_47486;
    }
    else ;
    ldv_47488: 
#line 2723 
    ;
    
#line 2717 
    if ((int)sta->tx_max_rate > new_rate) 
#line 2719 
                                          goto ldv_47487; else 
#line 2722 
                                                               goto ldv_47486;
    ldv_47486: 
#line 2723 
    ;
    
#line 2724 
    if ((int)sta->tx_rate_idx != old_rate) {
      
#line 2725 
      switch ((int)sta->tx_rate_idx) {
        case 0: 
#line 2726 
        ;
        
#line 2726 
        sta->tx_rate = (unsigned char)10U;
        
#line 2726 
        goto ldv_47490;
        case 1: 
#line 2727 
        ;
        
#line 2727 
        sta->tx_rate = (unsigned char)20U;
        
#line 2727 
        goto ldv_47490;
        case 2: 
#line 2728 
        ;
        
#line 2728 
        sta->tx_rate = (unsigned char)55U;
        
#line 2728 
        goto ldv_47490;
        case 3: 
#line 2729 
        ;
        
#line 2729 
        sta->tx_rate = (unsigned char)110U;
        
#line 2729 
        goto ldv_47490;
        default: 
#line 2730 
        ;
        
#line 2730 
        sta->tx_rate = (unsigned char)0U;
        
#line 2730 
        goto ldv_47490;
      }
      ldv_47490: 
#line 2732 
      ;
      
#line 2732 
      printk("\001",(char *)(& dev->name),(u8 *)(& sta->addr),(int)sta->tx_rate);
    }
    else ;
    
#line 2735 
    sta->tx_since_last_failure = 0U;
  }
  else ;
  
#line 2738 
  return ret;
}


#line 2744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
ap_tx_ret hostap_handle_sta_tx(local_info_t *local, struct hostap_tx_data *tx)
{
  ap_tx_ret __retres;
  int set_tim;
  int ret;
  struct ieee80211_hdr *hdr;
  struct hostap_skb_tx_data *meta;
  __u32 tmp_1;
  
#line 2746 
  struct sta_info *sta = (struct sta_info *)0;
  
#line 2747 
  struct sk_buff *skb = tx->skb;
  
#line 2752 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 2753 
  ret = 0;
  
#line 2754 
  if ((local->ap == (struct ap_data *)0 || skb->len <= 9U) || (meta->iface)->type == (unsigned int)3) 
    
#line 2756 
    goto out; else ;
  
#line 2758 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2760 
  if (((int)hdr->addr1[0] & 1) != 0) {
    
#line 2762 
    if ((local->ap)->num_sta <= 0) 
#line 2763 
                                   ret = 1; else ;
    
#line 2764 
    goto out;
  }
  else ;
  
#line 2768 
  ldv_spin_lock_141(& (local->ap)->sta_table_lock);
  
#line 2769 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr1));
  
#line 2770 
  if (sta != (struct sta_info *)0) 
#line 2771 
                                   atomic_inc_0(& sta->users); else ;
  
#line 2772 
  ldv_spin_unlock_142(& (local->ap)->sta_table_lock);
  
#line 2774 
  if ((((local->iw_mode == 3 && sta == (struct sta_info *)0) && ((unsigned long)meta->flags & 1UL) == 0UL) && (meta->iface)->type != (unsigned int)0) && (meta->iface)->type != (unsigned int)2) {
    
#line 2789 
    (local->ap)->tx_drop_nonassoc += 1U;
    
#line 2790 
    ret = 1;
    
#line 2791 
    goto out;
  }
  else ;
  
#line 2794 
  if (sta == (struct sta_info *)0) 
#line 2795 
                                   goto out; else ;
  
#line 2797 
  if (((unsigned long)sta->flags & 32UL) == 0UL) 
#line 2798 
                                                 ret = 4; else ;
  
#line 2801 
  if (local->fw_tx_rate_control == 0) {
    int tmp_0;
    u8 tmp;
    
#line 2802 
    tmp_0 = ap_update_sta_tx_rate(sta,local->dev);
    
#line 2802 
    tmp = (unsigned char)tmp_0;
    
#line 2802 
    meta->rate = tmp;
    
#line 2802 
    (local->ap)->last_tx_rate = (int)tmp;
  }
  else ;
  
#line 2805 
  if (local->iw_mode != 3) 
#line 2806 
                           goto out; else ;
  
#line 2808 
  if (((unsigned long)sta->flags & 4UL) == 0UL) 
#line 2809 
                                                goto out; else ;
  
#line 2811 
  if (((unsigned long)meta->flags & 4UL) != 0UL) 
#line 2813 
                                                 hdr->frame_control = (unsigned short)((unsigned int)hdr->frame_control | 8192U); else ;
  
#line 2817 
  if (((unsigned long)meta->flags & 2UL) != 0UL) 
#line 2820 
                                                 goto out; else ;
  
#line 2823 
  tmp_1 = skb_queue_len((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 2823 
  if (tmp_1 > 31U) {
    
#line 2824 
    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& sta->addr));
    
#line 2831 
    hostap_set_tim(local,(int)sta->aid,1);
    
#line 2832 
    sta->flags |= 8U;
    
#line 2833 
    ret = 1;
    
#line 2834 
    goto out;
  }
  else ;
  
#line 2838 
  set_tim = skb_queue_empty((struct sk_buff_head const *)(& sta->tx_buf));
  
#line 2839 
  skb_queue_tail(& sta->tx_buf,skb);
  
#line 2843 
  if (set_tim != 0) {
    
#line 2844 
    int tmp_2 = ((unsigned long)sta->flags & 8UL) != 0UL;
    
#line 2847 
    hostap_set_tim(local,(int)sta->aid,1);
    
#line 2848 
    sta->flags |= 8U;
  }
  else ;
  
#line 2851 
  ret = 3;
  out: 
#line 2853 
  ;
  
#line 2854 
  if (sta != (struct sta_info *)0) {
    
#line 2855 
    if (ret == 0 || ret == 4) {
      
#line 2857 
      sta->tx_packets += 1UL;
      
#line 2858 
      sta->tx_bytes += (unsigned long)skb->len;
      
#line 2859 
      sta->last_tx = jiffies;
    }
    else ;
    
#line 2862 
    if (((ret == 0 || ret == 4) && sta->crypt != (struct lib80211_crypt_data *)0) && tx->host_encrypt != 0) {
      
#line 2865 
      tx->crypt = sta->crypt;
      
#line 2866 
      tx->sta_ptr = (void *)sta;
    }
    else 
#line 2870 
         atomic_dec_0(& sta->users);
  }
  else ;
  
#line 2873 
  __retres = (enum ldv_32788)ret;
  
#line 2873 
  return __retres;
}


#line 2877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_handle_sta_release(void *ptr)
{
  
#line 2879 
  struct sta_info *sta = (struct sta_info *)ptr;
  
#line 2880 
  atomic_dec_0(& sta->users);
  
#line 2881 
  return;
}


#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_handle_sta_tx_exc(local_info_t *local, struct sk_buff *skb)
{
  struct sta_info *sta;
  struct ieee80211_hdr *hdr;
  struct hostap_skb_tx_data *meta;
  
#line 2891 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 2892 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 2894 
  ldv_spin_lock_143(& (local->ap)->sta_table_lock);
  
#line 2895 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr1));
  
#line 2896 
  if (sta == (struct sta_info *)0) {
    
#line 2897 
    ldv_spin_unlock_144(& (local->ap)->sta_table_lock);
    
#line 2898 
    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr1),jiffies);
    
#line 2901 
    goto return_label;
  }
  else ;
  
#line 2904 
  sta->tx_since_last_failure = 0U;
  
#line 2905 
  sta->tx_consecutive_exc += 1U;
  
#line 2907 
  if ((sta->tx_consecutive_exc > 1U && (unsigned int)sta->tx_rate_idx != 0U) && (int)meta->rate <= (int)sta->tx_rate) {
    int old;
    int rate;
    int tmp;
    
#line 2911 
    rate = (int)sta->tx_rate_idx;
    
#line 2911 
    old = rate;
    
#line 2912 
    goto ldv_47521;
    ldv_47520: 
#line 2913 
    ;
    
#line 2913 
    rate -= 1;
    
#line 2914 
    tmp = ap_tx_rate_ok(rate,sta,local);
    
#line 2914 
    if (tmp != 0) {
      
#line 2915 
      sta->tx_rate_idx = (unsigned char)rate;
      
#line 2916 
      goto ldv_47519;
    }
    else ;
    ldv_47521: 
#line 2918 
    ;
    
#line 2912 
    if (rate > 0) 
#line 2914 
                  goto ldv_47520; else 
#line 2917 
                                       goto ldv_47519;
    ldv_47519: 
#line 2918 
    ;
    
#line 2919 
    if ((int)sta->tx_rate_idx != old) {
      
#line 2920 
      switch ((int)sta->tx_rate_idx) {
        case 0: 
#line 2921 
        ;
        
#line 2921 
        sta->tx_rate = (unsigned char)10U;
        
#line 2921 
        goto ldv_47523;
        case 1: 
#line 2922 
        ;
        
#line 2922 
        sta->tx_rate = (unsigned char)20U;
        
#line 2922 
        goto ldv_47523;
        case 2: 
#line 2923 
        ;
        
#line 2923 
        sta->tx_rate = (unsigned char)55U;
        
#line 2923 
        goto ldv_47523;
        case 3: 
#line 2924 
        ;
        
#line 2924 
        sta->tx_rate = (unsigned char)110U;
        
#line 2924 
        goto ldv_47523;
        default: 
#line 2925 
        ;
        
#line 2925 
        sta->tx_rate = (unsigned char)0U;
        
#line 2925 
        goto ldv_47523;
      }
      ldv_47523: 
#line 2927 
      ;
      
#line 2927 
      printk("\001",(char *)(& (local->dev)->name),(u8 *)(& sta->addr),(int)sta->tx_rate);
    }
    else ;
    
#line 2931 
    sta->tx_consecutive_exc = 0U;
  }
  else ;
  
#line 2933 
  ldv_spin_unlock_145(& (local->ap)->sta_table_lock);
  return_label: 
#line 2934 
                return;
}


#line 2937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static void hostap_update_sta_ps2(local_info_t *local, struct sta_info *sta, int pwrmgt, int type, int stype)
{
  
#line 2940 
  if (pwrmgt != 0 && ((unsigned long)sta->flags & 4UL) == 0UL) 
#line 2941 
                                                               sta->flags |= 4U;
  else 
    
#line 2945 
    if (pwrmgt == 0 && ((unsigned long)sta->flags & 4UL) != 0UL) {
      
#line 2946 
      sta->flags &= 4294967291U;
      
#line 2950 
      if (type != 4 || stype != 160) 
#line 2952 
                                     schedule_packet_send(local,sta); else ;
    }
    else ;
  
#line 2954 
  return;
}


#line 2959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_update_sta_ps(local_info_t *local, struct ieee80211_hdr *hdr)
{
  int __retres;
  struct sta_info *sta;
  u16 fc;
  
#line 2964 
  ldv_spin_lock_146(& (local->ap)->sta_table_lock);
  
#line 2965 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 2966 
  if (sta != (struct sta_info *)0) 
#line 2967 
                                   atomic_inc_0(& sta->users); else ;
  
#line 2968 
  ldv_spin_unlock_147(& (local->ap)->sta_table_lock);
  
#line 2970 
  if (sta == (struct sta_info *)0) {
    
#line 2971 
    __retres = -1;
    
#line 2971 
    goto return_label;
  }
  else ;
  
#line 2973 
  fc = hdr->frame_control;
  
#line 2974 
  hostap_update_sta_ps2(local,sta,(int)fc & 4096,(int)fc & 12,(int)fc & 240);
  
#line 2978 
  atomic_dec_0(& sta->users);
  
#line 2979 
  __retres = 0;
  return_label: 
#line 2979 
                return __retres;
}


#line 2985  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
ap_rx_ret hostap_handle_sta_rx(local_info_t *local, struct net_device *dev, struct sk_buff *skb, struct hostap_80211_rx_status *rx_stats, int wds)
{
  ap_rx_ret __retres;
  int ret;
  struct sta_info *sta;
  u16 fc;
  u16 type;
  u16 stype;
  struct ieee80211_hdr *hdr;
  
#line 2995 
  if (local->ap == (struct ap_data *)0) {
    
#line 2996 
    __retres = 0;
    
#line 2996 
    goto return_label;
  }
  else ;
  
#line 2998 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 3000 
  fc = hdr->frame_control;
  
#line 3001 
  type = (unsigned short)((unsigned int)fc & 12U);
  
#line 3002 
  stype = (unsigned short)((unsigned int)fc & 240U);
  
#line 3004 
  ldv_spin_lock_148(& (local->ap)->sta_table_lock);
  
#line 3005 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 3006 
  if (sta != (struct sta_info *)0) 
#line 3007 
                                   atomic_inc_0(& sta->users); else ;
  
#line 3008 
  ldv_spin_unlock_149(& (local->ap)->sta_table_lock);
  
#line 3010 
  if (sta != (struct sta_info *)0 && ((unsigned long)sta->flags & 32UL) == 0UL) 
    
#line 3011 
    ret = 3; else 
#line 3013 
                  ret = 0;
  
#line 3016 
  if (((int)fc & 256) != 0) {
    
#line 3017 
    if (wds == 0 && (sta == (struct sta_info *)0 || ((unsigned long)sta->flags & 2UL) == 0UL)) {
      
#line 3018 
      if (local->hostapd != 0) 
#line 3019 
                               prism2_rx_80211(local->apdev,skb,rx_stats,2);
      else {
        
#line 3023 
        printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),(int)type >> 2,(int)stype >> 4);
        
#line 3028 
        hostap_rx(dev,skb,rx_stats);
      }
      
#line 3031 
      ret = 2;
      
#line 3032 
      goto out;
    }
    else ;
  }
  else 
    
#line 3034 
    if (((int)fc & 512) != 0) {
      
#line 3035 
      if (wds == 0) {
        bool tmp;
        
#line 3038 
        tmp = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
        
#line 3038 
        if ((int)tmp != 0) {
          
#line 3039 
          printk("\001");
          
#line 3041 
          hostap_dump_rx_80211((char const *)(& dev->name),skb,rx_stats);
        }
        else ;
        
#line 3043 
        ret = 1;
        
#line 3044 
        goto out;
      }
      else ;
    }
    else 
      
#line 3046 
      if ((unsigned int)stype == 64U && sta == (struct sta_info *)0) {
        bool tmp_1;
        
#line 3046 
        tmp_1 = ether_addr_equal((u8 const *)(& hdr->addr1),(u8 const *)dev->dev_addr);
        
#line 3046 
        if ((int)tmp_1 != 0) {
          
#line 3049 
          if (local->hostapd != 0) 
#line 3050 
                                   prism2_rx_80211(local->apdev,skb,rx_stats,2);
          else {
            
#line 3059 
            printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2));
            
#line 3062 
            hostap_rx(dev,skb,rx_stats);
          }
          
#line 3065 
          ret = 2;
          
#line 3066 
          goto out;
        }
        else 
#line 3046 
             goto _LAND;
      }
      else {
        _LAND: 
#line 3067 
        ;
        
#line 3067 
        if ((unsigned int)stype == 64U) ;
        else {
          bool tmp_0;
          
#line 3076 
          tmp_0 = ether_addr_equal((u8 const *)(& hdr->addr3),(u8 const *)dev->dev_addr);
          
#line 3076 
          if ((int)tmp_0 != 0) {
            
#line 3077 
            printk("\001",(char *)(& dev->name),(u8 *)(& hdr->addr2),(int)type >> 2,(int)stype >> 4);
            
#line 3081 
            hostap_dump_rx_80211((char const *)(& dev->name),skb,rx_stats);
          }
          else ;
          
#line 3083 
          ret = 1;
          
#line 3084 
          goto out;
        }
      }
  
#line 3087 
  if (sta != (struct sta_info *)0) {
    
#line 3088 
    hostap_update_sta_ps2(local,sta,(int)fc & 4096,(int)type,(int)stype);
    
#line 3091 
    sta->rx_packets += 1UL;
    
#line 3092 
    sta->rx_bytes += (unsigned long)skb->len;
    
#line 3093 
    sta->last_rx = jiffies;
  }
  else ;
  
#line 3096 
  if (((local->ap)->nullfunc_ack != 0 && (unsigned int)stype == 64U) && ((int)fc & 256) != 0) {
    
#line 3098 
    if (local->hostapd != 0) 
#line 3099 
                             prism2_rx_80211(local->apdev,skb,rx_stats,3); else 
                                                                    
#line 3108 
                                                                    hostap_rx(dev,skb,rx_stats);
    
#line 3111 
    ret = 2;
    
#line 3112 
    goto out;
  }
  else ;
  out: 
#line 3115 
  ;
  
#line 3116 
  if (sta != (struct sta_info *)0) 
#line 3117 
                                   atomic_dec_0(& sta->users); else ;
  
#line 3119 
  __retres = ret;
  return_label: 
#line 3119 
                return __retres;
}


#line 3124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_handle_sta_crypto(local_info_t *local, struct ieee80211_hdr *hdr, struct lib80211_crypt_data **crypt, void **sta_ptr)
{
  int __retres;
  struct sta_info *sta;
  
#line 3131 
  ldv_spin_lock_150(& (local->ap)->sta_table_lock);
  
#line 3132 
  sta = ap_get_sta(local->ap,(u8 *)(& hdr->addr2));
  
#line 3133 
  if (sta != (struct sta_info *)0) 
#line 3134 
                                   atomic_inc_0(& sta->users); else ;
  
#line 3135 
  ldv_spin_unlock_151(& (local->ap)->sta_table_lock);
  
#line 3137 
  if (sta == (struct sta_info *)0) {
    
#line 3138 
    __retres = -1;
    
#line 3138 
    goto return_label;
  }
  else ;
  
#line 3140 
  if (sta->crypt != (struct lib80211_crypt_data *)0) {
    
#line 3141 
    *crypt = sta->crypt;
    
#line 3142 
    *sta_ptr = (void *)sta;
  }
  else 
#line 3146 
       atomic_dec_0(& sta->users);
  
#line 3148 
  __retres = 0;
  return_label: 
#line 3148 
                return __retres;
}


#line 3153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_is_sta_assoc(struct ap_data *ap, u8 *sta_addr)
{
  struct sta_info *sta;
  
#line 3156 
  int ret = 0;
  
#line 3158 
  ldv_spin_lock_152(& ap->sta_table_lock);
  
#line 3159 
  sta = ap_get_sta(ap,sta_addr);
  
#line 3160 
  if ((sta != (struct sta_info *)0 && ((unsigned long)sta->flags & 2UL) != 0UL) && sta->ap == 0) 
    
#line 3161 
    ret = 1; else ;
  
#line 3162 
  ldv_spin_unlock_153(& ap->sta_table_lock);
  
#line 3164 
  return ret;
}


#line 3169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_is_sta_authorized(struct ap_data *ap, u8 *sta_addr)
{
  struct sta_info *sta;
  
#line 3172 
  int ret = 0;
  
#line 3174 
  ldv_spin_lock_154(& ap->sta_table_lock);
  
#line 3175 
  sta = ap_get_sta(ap,sta_addr);
  
#line 3176 
  if (((sta != (struct sta_info *)0 && ((unsigned long)sta->flags & 2UL) != 0UL) && sta->ap == 0) && (((unsigned long)sta->flags & 32UL) != 0UL || (ap->local)->ieee_802_1x == 0)) 
    
#line 3179 
    ret = 1; else ;
  
#line 3180 
  ldv_spin_unlock_155(& ap->sta_table_lock);
  
#line 3182 
  return ret;
}


#line 3187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_add_sta(struct ap_data *ap, u8 *sta_addr)
{
  int __retres;
  struct sta_info *sta;
  
#line 3190 
  int ret = 1;
  
#line 3192 
  if (ap == (struct ap_data *)0) {
    
#line 3193 
    __retres = -1;
    
#line 3193 
    goto return_label;
  }
  else ;
  
#line 3195 
  ldv_spin_lock_156(& ap->sta_table_lock);
  
#line 3196 
  sta = ap_get_sta(ap,sta_addr);
  
#line 3197 
  if (sta != (struct sta_info *)0) 
#line 3198 
                                   ret = 0; else ;
  
#line 3199 
  ldv_spin_unlock_157(& ap->sta_table_lock);
  
#line 3201 
  if (ret == 1) {
    u8 tmp;
    
#line 3202 
    sta = ap_add_sta(ap,sta_addr);
    
#line 3203 
    if (sta == (struct sta_info *)0) {
      
#line 3204 
      __retres = -1;
      
#line 3204 
      goto return_label;
    }
    else ;
    
#line 3205 
    sta->flags = 3U;
    
#line 3206 
    sta->ap = 1;
    
#line 3207 
    memset((void *)(& sta->supported_rates),0,32UL);
    
#line 3211 
    sta->supported_rates[0] = (unsigned char)130U;
    
#line 3212 
    sta->supported_rates[1] = (unsigned char)132U;
    
#line 3213 
    sta->supported_rates[2] = (unsigned char)11U;
    
#line 3214 
    sta->supported_rates[3] = (unsigned char)22U;
    
#line 3215 
    sta->tx_supp_rates = (unsigned char)15U;
    
#line 3217 
    sta->tx_rate = (unsigned char)110U;
    
#line 3218 
    tmp = (unsigned char)3U;
    
#line 3218 
    sta->tx_rate_idx = tmp;
    
#line 3218 
    sta->tx_max_rate = tmp;
  }
  else ;
  
#line 3221 
  __retres = ret;
  return_label: 
#line 3221 
                return __retres;
}


#line 3226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
int hostap_update_rx_stats(struct ap_data *ap, struct ieee80211_hdr *hdr, struct hostap_80211_rx_status *rx_stats)
{
  int __retres;
  struct sta_info *sta;
  int tmp;
  
#line 3232 
  if (ap == (struct ap_data *)0) {
    
#line 3233 
    __retres = -1;
    
#line 3233 
    goto return_label;
  }
  else ;
  
#line 3235 
  ldv_spin_lock_158(& ap->sta_table_lock);
  
#line 3236 
  sta = ap_get_sta(ap,(u8 *)(& hdr->addr2));
  
#line 3237 
  if (sta != (struct sta_info *)0) {
    
#line 3238 
    sta->last_rx_silence = (signed char)rx_stats->noise;
    
#line 3239 
    sta->last_rx_signal = (signed char)rx_stats->signal;
    
#line 3240 
    sta->last_rx_rate = (unsigned char)rx_stats->rate;
    
#line 3241 
    sta->last_rx_updated = (unsigned char)15U;
    
#line 3242 
    if ((unsigned int)rx_stats->rate == 10U) 
#line 3243 
                                             sta->rx_count[0] += 1U;
    else 
      
#line 3244 
      if ((unsigned int)rx_stats->rate == 20U) 
#line 3245 
                                               sta->rx_count[1] += 1U;
      else 
        
#line 3246 
        if ((unsigned int)rx_stats->rate == 55U) 
#line 3247 
                                                 sta->rx_count[2] += 1U;
        else 
          
#line 3248 
          if ((unsigned int)rx_stats->rate == 110U) 
#line 3249 
                                                    sta->rx_count[3] += 1U; else ;
  }
  else ;
  
#line 3251 
  ldv_spin_unlock_159(& ap->sta_table_lock);
  
#line 3253 
  if (sta != (struct sta_info *)0) 
#line 3253 
                                   tmp = 0; else 
#line 3253 
                                                 tmp = -1;
  
#line 3253 
  __retres = tmp;
  return_label: 
#line 3253 
                return __retres;
}


#line 3257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_update_rates(local_info_t *local)
{
  struct sta_info *sta;
  struct sta_info *tmp;
  struct sta_info *tmp_0;
  
#line 3260 
  struct ap_data *ap = local->ap;
  
#line 3262 
  if (ap == (struct ap_data *)0) 
#line 3263 
                                 goto return_label; else ;
  
#line 3265 
  ldv_spin_lock_bh_160(& ap->sta_table_lock);
  {
    
#line 3266 
    struct list_head const *__mptr = (struct list_head const *)ap->sta_list.next;
    
#line 3266 
    tmp = (struct sta_info *)__mptr;
  }
  
#line 3266 
  sta = tmp;
  
#line 3266 
  goto ldv_47596;
  ldv_47595: 
#line 3267 
  ;
  
#line 3267 
  prism2_check_tx_rates(sta);
  {
    
#line 3266 
    struct list_head const *__mptr_0 = (struct list_head const *)sta->list.next;
    
#line 3266 
    tmp_0 = (struct sta_info *)__mptr_0;
  }
  
#line 3266 
  sta = tmp_0;
  ldv_47596: 
#line 3268 
  ;
  
#line 3266 
  if (& sta->list != & ap->sta_list) 
#line 3268 
                                     goto ldv_47595; else 
#line 3271 
                                                          goto ldv_47597;
  ldv_47597: 
#line 3272 
  ;
  
#line 3269 
  ldv_spin_unlock_bh_161(& ap->sta_table_lock);
  return_label: 
#line 3270 
                return;
}


#line 3273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void *ap_crypt_get_ptrs(struct ap_data *ap, u8 *addr, int permanent, struct lib80211_crypt_data ***crypt)
{
  void *__retres;
  struct sta_info *sta;
  
#line 3278 
  ldv_spin_lock_bh_162(& ap->sta_table_lock);
  
#line 3279 
  sta = ap_get_sta(ap,addr);
  
#line 3280 
  if (sta != (struct sta_info *)0) 
#line 3281 
                                   atomic_inc_0(& sta->users); else ;
  
#line 3282 
  ldv_spin_unlock_bh_163(& ap->sta_table_lock);
  
#line 3284 
  if (sta == (struct sta_info *)0 && permanent != 0) 
#line 3285 
                                                     sta = ap_add_sta(ap,addr); else ;
  
#line 3287 
  if (sta == (struct sta_info *)0) {
    
#line 3288 
    __retres = (void *)0;
    
#line 3288 
    goto return_label;
  }
  else ;
  
#line 3290 
  if (permanent != 0) 
#line 3291 
                      sta->flags |= 16U; else ;
  
#line 3293 
  *crypt = & sta->crypt;
  
#line 3295 
  __retres = (void *)sta;
  return_label: 
#line 3295 
                return __retres;
}


#line 3299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_add_wds_links(local_info_t *local)
{
  struct sta_info *sta;
  struct sta_info *tmp;
  struct sta_info *tmp_0;
  
#line 3301 
  struct ap_data *ap = local->ap;
  
#line 3304 
  ldv_spin_lock_bh_164(& ap->sta_table_lock);
  {
    
#line 3305 
    struct list_head const *__mptr = (struct list_head const *)ap->sta_list.next;
    
#line 3305 
    tmp = (struct sta_info *)__mptr;
  }
  
#line 3305 
  sta = tmp;
  
#line 3305 
  goto ldv_47615;
  ldv_47614: 
#line 3306 
  ;
  
#line 3306 
  if (sta->ap != 0) 
#line 3307 
                    hostap_wds_link_oper(local,(u8 *)(& sta->addr),0); else ;
  {
    
#line 3305 
    struct list_head const *__mptr_0 = (struct list_head const *)sta->list.next;
    
#line 3305 
    tmp_0 = (struct sta_info *)__mptr_0;
  }
  
#line 3305 
  sta = tmp_0;
  ldv_47615: 
#line 3307 
  ;
  
#line 3305 
  if (& sta->list != & ap->sta_list) 
#line 3307 
                                     goto ldv_47614; else 
#line 3310 
                                                          goto ldv_47616;
  ldv_47616: 
#line 3311 
  ;
  
#line 3309 
  ldv_spin_unlock_bh_165(& ap->sta_table_lock);
  
#line 3311 
  ldv_schedule_work_166(& (local->ap)->wds_oper_queue);
  
#line 3312 
  return;
}


#line 3315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
void hostap_wds_link_oper(local_info_t *local, u8 *addr, wds_oper_type type)
{
  struct wds_oper_data *entry;
  
#line 3319 
  entry = (struct wds_oper_data *)kmalloc_0(24UL,32U);
  
#line 3320 
  if (entry == (struct wds_oper_data *)0) 
#line 3321 
                                          goto return_label; else ;
  
#line 3322 
  memcpy((void *)(& entry->addr),(void const *)addr,6UL);
  
#line 3323 
  entry->type = type;
  
#line 3324 
  ldv_spin_lock_bh_167(& local->lock);
  
#line 3325 
  entry->next = (local->ap)->wds_oper_entries;
  
#line 3326 
  (local->ap)->wds_oper_entries = entry;
  
#line 3327 
  ldv_spin_unlock_bh_168(& local->lock);
  
#line 3329 
  ldv_schedule_work_169(& (local->ap)->wds_oper_queue);
  return_label: 
#line 3330 
                return;
}


#line 3333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char const __kstrtab_hostap_init_data[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'i', (char)'n', (char)'i', (char)'t', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'\000'};

#line 3333 
struct kernel_symbol const __ksymtab_hostap_init_data;


#line 3333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
struct kernel_symbol const __ksymtab_hostap_init_data = {.value = (unsigned long)(& hostap_init_data), .name = (char const *)(& __kstrtab_hostap_init_data)};

#line 3334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char const __kstrtab_hostap_init_ap_proc[20U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'i', (char)'n', (char)'i', (char)'t', (char)'_', (char)'a', (char)'p', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'\000'};

#line 3334 
struct kernel_symbol const __ksymtab_hostap_init_ap_proc;


#line 3334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
struct kernel_symbol const __ksymtab_hostap_init_ap_proc = {.value = (unsigned long)(& hostap_init_ap_proc), .name = (char const *)(& __kstrtab_hostap_init_ap_proc)};

#line 3335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char const __kstrtab_hostap_free_data[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'f', (char)'r', (char)'e', (char)'e', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'\000'};

#line 3335 
struct kernel_symbol const __ksymtab_hostap_free_data;


#line 3335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
struct kernel_symbol const __ksymtab_hostap_free_data = {.value = (unsigned long)(& hostap_free_data), .name = (char const *)(& __kstrtab_hostap_free_data)};

#line 3336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char const __kstrtab_hostap_check_sta_fw_version[28U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'_', (char)'s', (char)'t', (char)'a', (char)'_', (char)'f', (char)'w', (char)'_', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'o', (char)'n', (char)'\000'};

#line 3336 
struct kernel_symbol const __ksymtab_hostap_check_sta_fw_version;


#line 3336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
struct kernel_symbol const __ksymtab_hostap_check_sta_fw_version = {.value = (unsigned long)(& hostap_check_sta_fw_version), .name = (char const *)(& __kstrtab_hostap_check_sta_fw_version)};

#line 3337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
static char const __kstrtab_hostap_handle_sta_tx_exc[25U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'h', (char)'a', (char)'n', (char)'d', (char)'l', (char)'e', (char)'_', (char)'s', (char)'t', (char)'a', (char)'_', (char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'c', (char)'\000'};

#line 3337 
struct kernel_symbol const __ksymtab_hostap_handle_sta_tx_exc;


#line 3337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ap.c"
struct kernel_symbol const __ksymtab_hostap_handle_sta_tx_exc = {.value = (unsigned long)(& hostap_handle_sta_tx_exc), .name = (char const *)(& __kstrtab_hostap_handle_sta_tx_exc)};

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
struct seq_operations *ldv_emg_alias_prism2_ap_proc_seqops_6 = (struct seq_operations *)(& prism2_ap_proc_seqops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
struct seq_operations *ldv_emg_alias_ap_control_proc_seqops_6 = (struct seq_operations *)(& ap_control_proc_seqops);

#line 62 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 64 
_Bool ldv_emg_flush_work(struct work_struct *arg0);


#line 65 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
int ldv_emg_wrapper_prism2_ap_proc_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 72 
  tmp = prism2_ap_proc_show(arg0,arg1);
  
#line 72 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void *ldv_emg_wrapper_ap_control_proc_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 77 
  tmp = ap_control_proc_start(arg0,arg1);
  
#line 77 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
int ldv_emg_wrapper_ap_control_proc_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 82 
  tmp = ap_control_proc_show(arg0,arg1);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void *ldv_emg_wrapper_prism2_ap_proc_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 87 
  tmp = prism2_ap_proc_next(arg0,arg1,arg2);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void ldv_emg_wrapper_prism2_ap_proc_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 92 
  prism2_ap_proc_stop(arg0,arg1);
  
#line 93 
  return;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void ldv_emg_wrapper_ap_control_proc_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 97 
  ap_control_proc_stop(arg0,arg1);
  
#line 98 
  return;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void *ldv_emg_wrapper_prism2_ap_proc_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 102 
  tmp = prism2_ap_proc_start(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
void *ldv_emg_wrapper_ap_control_proc_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 107 
  tmp = ap_control_proc_next(arg0,arg1,arg2);
  
#line 107 
  return tmp;
}


#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void atomic_inc_0(atomic_t *v)
{
  
#line 168 
  ldv_atomic_inc(v);
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void atomic_dec_0(atomic_t *v)
{
  
#line 175 
  ldv_atomic_dec(v);
  
#line 176 
  return;
}


#line 520  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 523 
  tmp = ldv_kmalloc(size,flags);
  
#line 523 
  return tmp;
}


#line 541  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 544 
  tmp = ldv_kzalloc(size,flags);
  
#line 544 
  return tmp;
}


#line 782  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static int ldv_del_timer_sync_72(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 786 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 786 
  return tmp;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_73(spinlock_t *lock)
{
  
#line 794 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 796 
  spin_lock_0(lock);
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_74(spinlock_t *lock)
{
  
#line 804 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 806 
  spin_unlock_0(lock);
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 814 
  ldv_spin_model_lock((char *)"lock_of_mac_restrictions");
  
#line 816 
  spin_lock_bh_0(lock);
  
#line 817 
  return;
}


#line 820  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 824 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 826 
  spin_unlock_bh_0(lock);
  
#line 827 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static int ldv_seq_open_77(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 834 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 834 
  return tmp;
}


#line 838  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_78(spinlock_t *lock)
{
  
#line 842 
  ldv_spin_model_lock((char *)"lock_of_mac_restrictions");
  
#line 844 
  spin_lock_bh_0(lock);
  
#line 845 
  return;
}


#line 848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_79(spinlock_t *lock)
{
  
#line 852 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 854 
  spin_unlock_bh_0(lock);
  
#line 855 
  return;
}


#line 858  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_80(spinlock_t *lock)
{
  
#line 862 
  ldv_spin_model_lock((char *)"lock_of_mac_restrictions");
  
#line 864 
  spin_lock_bh_0(lock);
  
#line 865 
  return;
}


#line 868  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_81(spinlock_t *lock)
{
  
#line 872 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 874 
  spin_unlock_bh_0(lock);
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 882 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 884 
  spin_unlock_bh_0(lock);
  
#line 885 
  return;
}


#line 888  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 892 
  ldv_spin_model_lock((char *)"lock_of_mac_restrictions");
  
#line 894 
  spin_lock_bh_0(lock);
  
#line 895 
  return;
}


#line 898  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_84(spinlock_t *lock)
{
  
#line 902 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 904 
  spin_unlock_bh_0(lock);
  
#line 905 
  return;
}


#line 908  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 912 
  ldv_spin_model_lock((char *)"lock_of_mac_restrictions");
  
#line 914 
  spin_lock_bh_0(lock);
  
#line 915 
  return;
}


#line 918  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 922 
  ldv_spin_model_unlock((char *)"lock_of_mac_restrictions");
  
#line 924 
  spin_unlock_bh_0(lock);
  
#line 925 
  return;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_87(spinlock_t *lock)
{
  
#line 932 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 934 
  spin_lock_bh_0(lock);
  
#line 935 
  return;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_88(spinlock_t *lock)
{
  
#line 942 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 944 
  spin_unlock_bh_0(lock);
  
#line 945 
  return;
}


#line 948  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_89(spinlock_t *lock)
{
  
#line 952 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 954 
  spin_lock_bh_0(lock);
  
#line 955 
  return;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_90(spinlock_t *lock)
{
  
#line 962 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 964 
  spin_unlock_bh_0(lock);
  
#line 965 
  return;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_91(spinlock_t *lock)
{
  
#line 972 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 974 
  spin_lock_bh_0(lock);
  
#line 975 
  return;
}


#line 978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_92(spinlock_t *lock)
{
  
#line 982 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 984 
  spin_unlock_bh_0(lock);
  
#line 985 
  return;
}


#line 988  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static int ldv_seq_open_93(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 992 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 992 
  return tmp;
}


#line 996  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_94(spinlock_t *lock)
{
  
#line 1000 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1002 
  spin_lock_0(lock);
  
#line 1003 
  return;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_95(spinlock_t *lock)
{
  
#line 1010 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1012 
  spin_unlock_0(lock);
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 1020 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1022 
  spin_lock_0(lock);
  
#line 1023 
  return;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 1030 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1032 
  spin_unlock_0(lock);
  
#line 1033 
  return;
}


#line 1036  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_98(spinlock_t *lock)
{
  
#line 1040 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1042 
  spin_lock_0(lock);
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_99(spinlock_t *lock)
{
  
#line 1050 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1052 
  spin_unlock_0(lock);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static bool ldv_flush_work_100(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 1060 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 1060 
  __retres = tmp != 0;
  
#line 1060 
  return __retres;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static bool ldv_flush_work_101(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 1068 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 1068 
  __retres = tmp != 0;
  
#line 1068 
  return __retres;
}


#line 1072  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_102(spinlock_t *lock)
{
  
#line 1076 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1078 
  spin_lock_bh_0(lock);
  
#line 1079 
  return;
}


#line 1082  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_103(spinlock_t *lock)
{
  
#line 1086 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1088 
  spin_unlock_bh_0(lock);
  
#line 1089 
  return;
}


#line 1092  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1096 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1098 
  spin_lock_bh_0(lock);
  
#line 1099 
  return;
}


#line 1102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1106 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1108 
  spin_unlock_bh_0(lock);
  
#line 1109 
  return;
}


#line 1112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static bool ldv_schedule_work_106(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1116 
  tmp = ldv_emg_schedule_work(work);
  
#line 1116 
  __retres = tmp != 0;
  
#line 1116 
  return __retres;
}


#line 1120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_107(spinlock_t *lock)
{
  
#line 1124 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1126 
  spin_lock_bh_0(lock);
  
#line 1127 
  return;
}


#line 1130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_108(spinlock_t *lock)
{
  
#line 1134 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1136 
  spin_unlock_bh_0(lock);
  
#line 1137 
  return;
}


#line 1140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_109(spinlock_t *lock)
{
  
#line 1144 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1146 
  spin_lock_bh_0(lock);
  
#line 1147 
  return;
}


#line 1150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_110(spinlock_t *lock)
{
  
#line 1154 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1156 
  spin_unlock_bh_0(lock);
  
#line 1157 
  return;
}


#line 1160  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_111(spinlock_t *lock)
{
  
#line 1164 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1166 
  spin_unlock_bh_0(lock);
  
#line 1167 
  return;
}


#line 1170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_112(spinlock_t *lock)
{
  
#line 1174 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1176 
  spin_lock_bh_0(lock);
  
#line 1177 
  return;
}


#line 1180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_113(spinlock_t *lock)
{
  
#line 1184 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1186 
  spin_unlock_bh_0(lock);
  
#line 1187 
  return;
}


#line 1190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_114(spinlock_t *lock)
{
  
#line 1194 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1196 
  spin_unlock_bh_0(lock);
  
#line 1197 
  return;
}


#line 1200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_115(spinlock_t *lock)
{
  
#line 1204 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1206 
  spin_lock_bh_0(lock);
  
#line 1207 
  return;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_116(spinlock_t *lock)
{
  
#line 1214 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1216 
  spin_unlock_bh_0(lock);
  
#line 1217 
  return;
}


#line 1220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_117(spinlock_t *lock)
{
  
#line 1224 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1226 
  spin_lock_bh_0(lock);
  
#line 1227 
  return;
}


#line 1230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_118(spinlock_t *lock)
{
  
#line 1234 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1236 
  spin_unlock_bh_0(lock);
  
#line 1237 
  return;
}


#line 1240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_119(spinlock_t *lock)
{
  
#line 1244 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1246 
  spin_lock_bh_0(lock);
  
#line 1247 
  return;
}


#line 1250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_120(spinlock_t *lock)
{
  
#line 1254 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1256 
  spin_unlock_bh_0(lock);
  
#line 1257 
  return;
}


#line 1260  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_121(spinlock_t *lock)
{
  
#line 1264 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1266 
  spin_lock_bh_0(lock);
  
#line 1267 
  return;
}


#line 1270  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_122(spinlock_t *lock)
{
  
#line 1274 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1276 
  spin_unlock_bh_0(lock);
  
#line 1277 
  return;
}


#line 1280  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_123(spinlock_t *lock)
{
  
#line 1284 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 1286 
  spin_lock_bh_0(lock);
  
#line 1287 
  return;
}


#line 1290  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_124(spinlock_t *lock)
{
  
#line 1294 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 1296 
  spin_unlock_bh_0(lock);
  
#line 1297 
  return;
}


#line 1300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_125(spinlock_t *lock)
{
  
#line 1304 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1306 
  spin_lock_bh_0(lock);
  
#line 1307 
  return;
}


#line 1310  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_126(spinlock_t *lock)
{
  
#line 1314 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1316 
  spin_unlock_bh_0(lock);
  
#line 1317 
  return;
}


#line 1320  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_127(spinlock_t *lock)
{
  
#line 1324 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1326 
  spin_lock_bh_0(lock);
  
#line 1327 
  return;
}


#line 1330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_128(spinlock_t *lock)
{
  
#line 1334 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1336 
  spin_unlock_bh_0(lock);
  
#line 1337 
  return;
}


#line 1340  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_129(spinlock_t *lock)
{
  
#line 1344 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1346 
  spin_lock_bh_0(lock);
  
#line 1347 
  return;
}


#line 1350  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_130(spinlock_t *lock)
{
  
#line 1354 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1356 
  spin_unlock_bh_0(lock);
  
#line 1357 
  return;
}


#line 1360  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_131(spinlock_t *lock)
{
  
#line 1364 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1366 
  spin_lock_bh_0(lock);
  
#line 1367 
  return;
}


#line 1370  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_132(spinlock_t *lock)
{
  
#line 1374 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1376 
  spin_unlock_bh_0(lock);
  
#line 1377 
  return;
}


#line 1380  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_133(spinlock_t *lock)
{
  
#line 1384 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1386 
  spin_lock_bh_0(lock);
  
#line 1387 
  return;
}


#line 1390  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_134(spinlock_t *lock)
{
  
#line 1394 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1396 
  spin_unlock_bh_0(lock);
  
#line 1397 
  return;
}


#line 1400  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_135(spinlock_t *lock)
{
  
#line 1404 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1406 
  spin_lock_bh_0(lock);
  
#line 1407 
  return;
}


#line 1410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_136(spinlock_t *lock)
{
  
#line 1414 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1416 
  spin_unlock_bh_0(lock);
  
#line 1417 
  return;
}


#line 1420  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_137(spinlock_t *lock)
{
  
#line 1424 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1426 
  spin_lock_bh_0(lock);
  
#line 1427 
  return;
}


#line 1430  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_138(spinlock_t *lock)
{
  
#line 1434 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1436 
  spin_unlock_bh_0(lock);
  
#line 1437 
  return;
}


#line 1440  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_139(spinlock_t *lock)
{
  
#line 1444 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1446 
  spin_lock_bh_0(lock);
  
#line 1447 
  return;
}


#line 1450  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_140(spinlock_t *lock)
{
  
#line 1454 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1456 
  spin_unlock_bh_0(lock);
  
#line 1457 
  return;
}


#line 1460  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_141(spinlock_t *lock)
{
  
#line 1464 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1466 
  spin_lock_0(lock);
  
#line 1467 
  return;
}


#line 1470  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_142(spinlock_t *lock)
{
  
#line 1474 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1476 
  spin_unlock_0(lock);
  
#line 1477 
  return;
}


#line 1480  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_143(spinlock_t *lock)
{
  
#line 1484 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1486 
  spin_lock_0(lock);
  
#line 1487 
  return;
}


#line 1490  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_144(spinlock_t *lock)
{
  
#line 1494 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1496 
  spin_unlock_0(lock);
  
#line 1497 
  return;
}


#line 1500  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_145(spinlock_t *lock)
{
  
#line 1504 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1506 
  spin_unlock_0(lock);
  
#line 1507 
  return;
}


#line 1510  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_146(spinlock_t *lock)
{
  
#line 1514 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1516 
  spin_lock_0(lock);
  
#line 1517 
  return;
}


#line 1520  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_147(spinlock_t *lock)
{
  
#line 1524 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1526 
  spin_unlock_0(lock);
  
#line 1527 
  return;
}


#line 1530  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_148(spinlock_t *lock)
{
  
#line 1534 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1536 
  spin_lock_0(lock);
  
#line 1537 
  return;
}


#line 1540  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_149(spinlock_t *lock)
{
  
#line 1544 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1546 
  spin_unlock_0(lock);
  
#line 1547 
  return;
}


#line 1550  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_150(spinlock_t *lock)
{
  
#line 1554 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1556 
  spin_lock_0(lock);
  
#line 1557 
  return;
}


#line 1560  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_151(spinlock_t *lock)
{
  
#line 1564 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1566 
  spin_unlock_0(lock);
  
#line 1567 
  return;
}


#line 1570  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_152(spinlock_t *lock)
{
  
#line 1574 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1576 
  spin_lock_0(lock);
  
#line 1577 
  return;
}


#line 1580  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_153(spinlock_t *lock)
{
  
#line 1584 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1586 
  spin_unlock_0(lock);
  
#line 1587 
  return;
}


#line 1590  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_154(spinlock_t *lock)
{
  
#line 1594 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1596 
  spin_lock_0(lock);
  
#line 1597 
  return;
}


#line 1600  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_155(spinlock_t *lock)
{
  
#line 1604 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1606 
  spin_unlock_0(lock);
  
#line 1607 
  return;
}


#line 1610  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_156(spinlock_t *lock)
{
  
#line 1614 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1616 
  spin_lock_0(lock);
  
#line 1617 
  return;
}


#line 1620  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_157(spinlock_t *lock)
{
  
#line 1624 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1626 
  spin_unlock_0(lock);
  
#line 1627 
  return;
}


#line 1630  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_158(spinlock_t *lock)
{
  
#line 1634 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1636 
  spin_lock_0(lock);
  
#line 1637 
  return;
}


#line 1640  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_159(spinlock_t *lock)
{
  
#line 1644 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1646 
  spin_unlock_0(lock);
  
#line 1647 
  return;
}


#line 1650  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_160(spinlock_t *lock)
{
  
#line 1654 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1656 
  spin_lock_bh_0(lock);
  
#line 1657 
  return;
}


#line 1660  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_161(spinlock_t *lock)
{
  
#line 1664 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1666 
  spin_unlock_bh_0(lock);
  
#line 1667 
  return;
}


#line 1670  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_162(spinlock_t *lock)
{
  
#line 1674 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1676 
  spin_lock_bh_0(lock);
  
#line 1677 
  return;
}


#line 1680  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_163(spinlock_t *lock)
{
  
#line 1684 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1686 
  spin_unlock_bh_0(lock);
  
#line 1687 
  return;
}


#line 1690  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_164(spinlock_t *lock)
{
  
#line 1694 
  ldv_spin_model_lock((char *)"sta_table_lock_of_ap_data");
  
#line 1696 
  spin_lock_bh_0(lock);
  
#line 1697 
  return;
}


#line 1700  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_165(spinlock_t *lock)
{
  
#line 1704 
  ldv_spin_model_unlock((char *)"sta_table_lock_of_ap_data");
  
#line 1706 
  spin_unlock_bh_0(lock);
  
#line 1707 
  return;
}


#line 1710  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static bool ldv_schedule_work_166(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1714 
  tmp = ldv_emg_schedule_work(work);
  
#line 1714 
  __retres = tmp != 0;
  
#line 1714 
  return __retres;
}


#line 1718  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_lock_bh_167(spinlock_t *lock)
{
  
#line 1722 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 1724 
  spin_lock_bh_0(lock);
  
#line 1725 
  return;
}


#line 1728  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static void ldv_spin_unlock_bh_168(spinlock_t *lock)
{
  
#line 1732 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 1734 
  spin_unlock_bh_0(lock);
  
#line 1735 
  return;
}


#line 1738  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ap.c.aux"
static bool ldv_schedule_work_169(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1742 
  tmp = ldv_emg_schedule_work(work);
  
#line 1742 
  __retres = tmp != 0;
  
#line 1742 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/fvtp/.tmp_hostap_info.c"
void ldv_inline_asm(void);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_clear_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 252 
  ldv_inline_asm();
  
#line 253 
  ldv_inline_asm();
  
#line 252 
  __retres = 0;
  
#line 252 
  goto return_label;
  cc_label: 
#line 252 
  ;
  
#line 252 
  __retres = 1;
  return_label: 
#line 252 
                return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_74(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_schedule_work_72(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_78(struct work_struct *work);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_1(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 3047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
void hostap_info_init(local_info_t *local);


#line 84 
void hostap_info_process(local_info_t *local, struct sk_buff *skb);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_commtallies16(local_info_t *local, unsigned char *buf, int left)
{
  struct hfa384x_comm_tallies *tallies;
  
#line 18 
  if ((unsigned int)left <= 41U) {
    
#line 19 
    printk("\001",(char *)(& (local->dev)->name),left);
    
#line 21 
    goto return_label;
  }
  else ;
  
#line 24 
  tallies = (struct hfa384x_comm_tallies *)buf;
  
#line 27 
  local->comm_tallies.tx_unicast_frames += (unsigned int)tallies->tx_unicast_frames;
  
#line 28 
  local->comm_tallies.tx_multicast_frames += (unsigned int)tallies->tx_multicast_frames;
  
#line 29 
  local->comm_tallies.tx_fragments += (unsigned int)tallies->tx_fragments;
  
#line 30 
  local->comm_tallies.tx_unicast_octets += (unsigned int)tallies->tx_unicast_octets;
  
#line 31 
  local->comm_tallies.tx_multicast_octets += (unsigned int)tallies->tx_multicast_octets;
  
#line 32 
  local->comm_tallies.tx_deferred_transmissions += (unsigned int)tallies->tx_deferred_transmissions;
  
#line 33 
  local->comm_tallies.tx_single_retry_frames += (unsigned int)tallies->tx_single_retry_frames;
  
#line 34 
  local->comm_tallies.tx_multiple_retry_frames += (unsigned int)tallies->tx_multiple_retry_frames;
  
#line 35 
  local->comm_tallies.tx_retry_limit_exceeded += (unsigned int)tallies->tx_retry_limit_exceeded;
  
#line 36 
  local->comm_tallies.tx_discards += (unsigned int)tallies->tx_discards;
  
#line 37 
  local->comm_tallies.rx_unicast_frames += (unsigned int)tallies->rx_unicast_frames;
  
#line 38 
  local->comm_tallies.rx_multicast_frames += (unsigned int)tallies->rx_multicast_frames;
  
#line 39 
  local->comm_tallies.rx_fragments += (unsigned int)tallies->rx_fragments;
  
#line 40 
  local->comm_tallies.rx_unicast_octets += (unsigned int)tallies->rx_unicast_octets;
  
#line 41 
  local->comm_tallies.rx_multicast_octets += (unsigned int)tallies->rx_multicast_octets;
  
#line 42 
  local->comm_tallies.rx_fcs_errors += (unsigned int)tallies->rx_fcs_errors;
  
#line 43 
  local->comm_tallies.rx_discards_no_buffer += (unsigned int)tallies->rx_discards_no_buffer;
  
#line 44 
  local->comm_tallies.tx_discards_wrong_sa += (unsigned int)tallies->tx_discards_wrong_sa;
  
#line 45 
  local->comm_tallies.rx_discards_wep_undecryptable += (unsigned int)tallies->rx_discards_wep_undecryptable;
  
#line 46 
  local->comm_tallies.rx_message_in_msg_fragments += (unsigned int)tallies->rx_message_in_msg_fragments;
  
#line 47 
  local->comm_tallies.rx_message_in_bad_msg_fragments += (unsigned int)tallies->rx_message_in_bad_msg_fragments;
  return_label: 
#line 48 
                return;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_commtallies32(local_info_t *local, unsigned char *buf, int left)
{
  struct hfa384x_comm_tallies32 *tallies;
  
#line 58 
  if ((unsigned int)left <= 83U) {
    
#line 59 
    printk("\001",(char *)(& (local->dev)->name),left);
    
#line 61 
    goto return_label;
  }
  else ;
  
#line 64 
  tallies = (struct hfa384x_comm_tallies32 *)buf;
  
#line 67 
  local->comm_tallies.tx_unicast_frames += tallies->tx_unicast_frames;
  
#line 68 
  local->comm_tallies.tx_multicast_frames += tallies->tx_multicast_frames;
  
#line 69 
  local->comm_tallies.tx_fragments += tallies->tx_fragments;
  
#line 70 
  local->comm_tallies.tx_unicast_octets += tallies->tx_unicast_octets;
  
#line 71 
  local->comm_tallies.tx_multicast_octets += tallies->tx_multicast_octets;
  
#line 72 
  local->comm_tallies.tx_deferred_transmissions += tallies->tx_deferred_transmissions;
  
#line 73 
  local->comm_tallies.tx_single_retry_frames += tallies->tx_single_retry_frames;
  
#line 74 
  local->comm_tallies.tx_multiple_retry_frames += tallies->tx_multiple_retry_frames;
  
#line 75 
  local->comm_tallies.tx_retry_limit_exceeded += tallies->tx_retry_limit_exceeded;
  
#line 76 
  local->comm_tallies.tx_discards += tallies->tx_discards;
  
#line 77 
  local->comm_tallies.rx_unicast_frames += tallies->rx_unicast_frames;
  
#line 78 
  local->comm_tallies.rx_multicast_frames += tallies->rx_multicast_frames;
  
#line 79 
  local->comm_tallies.rx_fragments += tallies->rx_fragments;
  
#line 80 
  local->comm_tallies.rx_unicast_octets += tallies->rx_unicast_octets;
  
#line 81 
  local->comm_tallies.rx_multicast_octets += tallies->rx_multicast_octets;
  
#line 82 
  local->comm_tallies.rx_fcs_errors += tallies->rx_fcs_errors;
  
#line 83 
  local->comm_tallies.rx_discards_no_buffer += tallies->rx_discards_no_buffer;
  
#line 84 
  local->comm_tallies.tx_discards_wrong_sa += tallies->tx_discards_wrong_sa;
  
#line 85 
  local->comm_tallies.rx_discards_wep_undecryptable += tallies->rx_discards_wep_undecryptable;
  
#line 86 
  local->comm_tallies.rx_message_in_msg_fragments += tallies->rx_message_in_msg_fragments;
  
#line 87 
  local->comm_tallies.rx_message_in_bad_msg_fragments += tallies->rx_message_in_bad_msg_fragments;
  return_label: 
#line 88 
                return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_commtallies(local_info_t *local, unsigned char *buf, int left)
{
  
#line 96 
  if (local->tallies32 != 0) 
#line 97 
                             prism2_info_commtallies32(local,buf,left); else 
                                                                    
#line 99 
                                                                    prism2_info_commtallies16(local,buf,left);
  
#line 100 
  return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static char const *hfa384x_linkstatus_str(u16 linkstatus)
{
  char const *__retres;
  
#line 107 
  switch ((int)linkstatus) {
    case 1: 
#line 108 
    ;
    
#line 109 
    __retres = "Connected";
    
#line 109 
    goto return_label;
    case 2: 
#line 110 
    ;
    
#line 111 
    __retres = "Disconnected";
    
#line 111 
    goto return_label;
    case 3: 
#line 112 
    ;
    
#line 113 
    __retres = "Access point change";
    
#line 113 
    goto return_label;
    case 4: 
#line 114 
    ;
    
#line 115 
    __retres = "Access point out of range";
    
#line 115 
    goto return_label;
    case 5: 
#line 116 
    ;
    
#line 117 
    __retres = "Access point in range";
    
#line 117 
    goto return_label;
    case 6: 
#line 118 
    ;
    
#line 119 
    __retres = "Association failed";
    
#line 119 
    goto return_label;
    default: 
#line 120 
    ;
    
#line 121 
    __retres = "Unknown";
    
#line 121 
    goto return_label;
  }
  return_label: 
#line 107 
                return __retres;
}


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_linkstatus(local_info_t *local, unsigned char *buf, int left)
{
  u16 val;
  int non_sta_mode;
  
#line 136 
  local->last_join_time = 0UL;
  
#line 138 
  if (left != 2) {
    
#line 139 
    printk("\001",(char *)(& (local->dev)->name),left);
    
#line 141 
    goto return_label;
  }
  else ;
  
#line 144 
  non_sta_mode = ((unsigned int)local->iw_mode + 4294967293U <= 1U || local->iw_mode == 6) != 0;
  
#line 148 
  val = (unsigned short)((int)*buf | ((int)*(buf + 1U) << 8));
  
#line 149 
  if (non_sta_mode == 0 || (unsigned int)val != 2U) {
    char const *tmp;
    
#line 150 
    tmp = hfa384x_linkstatus_str((unsigned short)((int)val));
    
#line 150 
    ;
    
#line 150 
    ;
    
#line 150 
    printk("\001",(char *)(& (local->dev)->name),(int)val,tmp);
  }
  else ;
  
#line 154 
  if (non_sta_mode != 0) {
    
#line 155 
    netif_carrier_on(local->dev);
    
#line 156 
    netif_carrier_on(local->ddev);
    
#line 157 
    goto return_label;
  }
  else ;
  
#line 161 
  set_bit(0L,(unsigned long volatile *)(& local->pending_info));
  
#line 162 
  local->prev_link_status = (int)val;
  
#line 163 
  ldv_schedule_work_72(& local->info_queue);
  return_label: 
#line 164 
                return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_host_roaming(local_info_t *local)
{
  struct hfa384x_join_request req;
  struct hfa384x_hostscan_result *selected;
  struct hfa384x_hostscan_result *entry;
  int i;
  unsigned long flags;
  int tmp_2;
  
#line 170 
  struct net_device *dev = local->dev;
  
#line 175 
  if (local->last_join_time != 0UL) {
    int tmp;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 176 
      tmp = 1;
    }
    
#line 175 
    if (tmp != 0) {
      int tmp_0;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 176 
        tmp_0 = 1;
      }
      
#line 176 
      if (tmp_0 != 0) {
        
#line 176 
        if ((long)((jiffies - local->last_join_time) + 18446744073709549116UL) < 0L) {
          
#line 177 
          printk("\001",(char *)(& dev->name));
          
#line 180 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 191 
  ldv___ldv_spin_lock_73(& local->lock);
  
#line 192 
  if (local->last_scan_results == (struct hfa384x_hostscan_result *)0 || local->last_scan_results_count == 0) {
    
#line 194 
    ldv_spin_unlock_irqrestore_74(& local->lock,flags);
    
#line 195 
    printk("\001",(char *)(& dev->name));
    
#line 197 
    goto return_label;
  }
  else ;
  
#line 200 
  selected = local->last_scan_results;
  
#line 202 
  if ((((((unsigned int)local->preferred_ap[0] != 0U || (unsigned int)local->preferred_ap[1] != 0U) || (unsigned int)local->preferred_ap[2] != 0U) || (unsigned int)local->preferred_ap[3] != 0U) || (unsigned int)local->preferred_ap[4] != 0U) || (unsigned int)local->preferred_ap[5] != 0U) {
    int tmp_1;
    
#line 206 
    printk("\001",(char *)(& dev->name),(u8 *)(& local->preferred_ap));
    
#line 208 
    i = 0;
    
#line 208 
    goto ldv_46114;
    ldv_46113: 
#line 209 
    ;
    
#line 209 
    entry = local->last_scan_results + i;
    
#line 210 
    tmp_1 = memcmp((void const *)(& local->preferred_ap),(void const *)(& entry->bssid),6UL);
    
#line 210 
    if (tmp_1 == 0) {
      
#line 212 
      printk("\001",(char *)(& dev->name));
      
#line 214 
      selected = entry;
      
#line 215 
      goto ldv_46112;
    }
    else ;
    
#line 208 
    i += 1;
    ldv_46114: 
#line 209 
    ;
    
#line 208 
    if (local->last_scan_results_count > i) 
#line 210 
                                            goto ldv_46113; else 
#line 213 
                                                                 goto ldv_46112;
    ldv_46112: 
#line 214 
    ;
  }
  else ;
  
#line 220 
  memcpy((void *)(& req.bssid),(void const *)(& selected->bssid),6UL);
  
#line 221 
  req.channel = selected->chid;
  
#line 222 
  ldv_spin_unlock_irqrestore_75(& local->lock,flags);
  
#line 224 
  printk("\001",(char *)(& dev->name),(u8 *)(& req.bssid),(int)req.channel);
  
#line 227 
  tmp_2 = (*((local->func)->set_rid))(dev,(unsigned short)64738,(void *)(& req),8);
  
#line 227 
  if (tmp_2 != 0) 
#line 229 
                  printk("\001",(char *)(& dev->name)); else ;
  
#line 231 
  local->last_join_time = jiffies;
  return_label: 
#line 232 
                return;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void hostap_report_scan_complete(local_info_t *local)
{
  union iwreq_data wrqu;
  
#line 241 
  wrqu.data.length = (unsigned short)0U;
  
#line 242 
  wrqu.data.flags = (unsigned short)0U;
  
#line 243 
  wireless_send_event(local->dev,35609U,& wrqu,(char const *)0);
  
#line 247 
  local->scan_timestamp = 0UL;
  
#line 248 
  return;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_scanresults(local_info_t *local, unsigned char *buf, int left)
{
  u16 *pos;
  int new_count;
  int i;
  unsigned long flags;
  struct hfa384x_scan_result *res;
  struct hfa384x_hostscan_result *results;
  struct hfa384x_hostscan_result *prev;
  
#line 261 
  if (left <= 3) {
    
#line 262 
    printk("\001",(char *)(& (local->dev)->name),left);
    
#line 264 
    goto return_label;
  }
  else ;
  
#line 267 
  pos = (u16 *)buf;
  
#line 268 
  pos += 1;
  
#line 269 
  pos += 1;
  
#line 270 
  left += -4;
  
#line 272 
  new_count = (int)((unsigned long)left / 62UL);
  
#line 273 
  results = (struct hfa384x_hostscan_result *)kmalloc_1((unsigned long)new_count * 64UL,32U);
  
#line 275 
  if (results == (struct hfa384x_hostscan_result *)0) 
#line 276 
                                                      goto return_label; else ;
  
#line 279 
  res = (struct hfa384x_scan_result *)pos;
  
#line 280 
  i = 0;
  
#line 280 
  goto ldv_46132;
  ldv_46131: 
#line 281 
  ;
  
#line 281 
  memcpy((void *)(results + i),(void const *)(res + i),62UL);
  
#line 283 
  (results + i)->atim = (unsigned short)0U;
  
#line 280 
  i += 1;
  ldv_46132: 
#line 281 
  ;
  
#line 280 
  if (i < new_count) 
#line 282 
                     goto ldv_46131; else 
#line 285 
                                          goto ldv_46133;
  ldv_46133: 
#line 286 
  ;
  
#line 286 
  ldv___ldv_spin_lock_76(& local->lock);
  
#line 287 
  local->last_scan_type = PRISM2_SCAN;
  
#line 288 
  prev = local->last_scan_results;
  
#line 289 
  local->last_scan_results = results;
  
#line 290 
  local->last_scan_results_count = new_count;
  
#line 291 
  ldv_spin_unlock_irqrestore_77(& local->lock,flags);
  
#line 292 
  kfree((void const *)prev);
  
#line 294 
  hostap_report_scan_complete(local);
  
#line 297 
  set_bit(1L,(unsigned long volatile *)(& local->pending_info));
  
#line 298 
  ldv_schedule_work_78(& local->info_queue);
  return_label: 
#line 299 
                return;
}


#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void prism2_info_hostscanresults(local_info_t *local, unsigned char *buf, int left)
{
  int i;
  int result_size;
  int copy_len;
  int new_count;
  struct hfa384x_hostscan_result *results;
  struct hfa384x_hostscan_result *prev;
  unsigned long flags;
  __le16 *pos;
  u8 *ptr;
  
#line 312 
  __wake_up(& local->hostscan_wq,1U,1,(void *)0);
  
#line 314 
  if (left <= 3) {
    
#line 315 
    printk("\001",(char *)(& (local->dev)->name),left);
    
#line 317 
    goto return_label;
  }
  else ;
  
#line 320 
  pos = (__le16 *)buf;
  
#line 321 
  result_size = (int)*pos;
  
#line 321 
  copy_len = result_size;
  
#line 322 
  if (result_size == 0) {
    
#line 323 
    printk("\001",(char *)(& (local->dev)->name));
    
#line 325 
    goto return_label;
  }
  else ;
  
#line 327 
  if ((unsigned int)copy_len > 64U) 
#line 328 
                                    copy_len = 64; else ;
  
#line 330 
  pos += 1;
  
#line 331 
  pos += 1;
  
#line 332 
  left += -4;
  
#line 333 
  ptr = (u8 *)pos;
  
#line 335 
  new_count = left / result_size;
  
#line 336 
  results = (struct hfa384x_hostscan_result *)kcalloc((unsigned long)new_count,64UL,32U);
  
#line 338 
  if (results == (struct hfa384x_hostscan_result *)0) 
#line 339 
                                                      goto return_label; else ;
  
#line 341 
  i = 0;
  
#line 341 
  goto ldv_46149;
  ldv_46148: 
#line 342 
  ;
  
#line 342 
  memcpy((void *)(results + i),(void const *)ptr,(unsigned long)copy_len);
  
#line 343 
  ptr += result_size;
  
#line 344 
  left -= result_size;
  
#line 341 
  i += 1;
  ldv_46149: 
#line 342 
  ;
  
#line 341 
  if (i < new_count) 
#line 343 
                     goto ldv_46148; else 
#line 346 
                                          goto ldv_46150;
  ldv_46150: 
#line 347 
  ;
  
#line 347 
  if (left != 0) 
#line 348 
                 printk("\001",(char *)(& (local->dev)->name),left,result_size); else ;
  
#line 352 
  ldv___ldv_spin_lock_79(& local->lock);
  
#line 353 
  local->last_scan_type = PRISM2_HOSTSCAN;
  
#line 354 
  prev = local->last_scan_results;
  
#line 355 
  local->last_scan_results = results;
  
#line 356 
  local->last_scan_results_count = new_count;
  
#line 357 
  ldv_spin_unlock_irqrestore_80(& local->lock,flags);
  
#line 358 
  kfree((void const *)prev);
  
#line 360 
  hostap_report_scan_complete(local);
  return_label: 
#line 361 
                return;
}


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
void hostap_info_process(local_info_t *local, struct sk_buff *skb)
{
  struct hfa384x_info_frame *info;
  unsigned char *buf;
  int left;
  int i;
  
#line 375 
  info = (struct hfa384x_info_frame *)skb->data;
  
#line 376 
  buf = skb->data + 4U;
  
#line 377 
  left = (int)(skb->len + 4294967292U);
  
#line 379 
  switch ((int)info->type) {
    int tmp;
    case 61696: 
#line 380 
    ;
    
#line 381 
    prism2_info_commtallies(local,buf,left);
    
#line 382 
    goto ldv_46160;
    case 61952: 
#line 385 
    ;
    
#line 386 
    prism2_info_linkstatus(local,buf,left);
    
#line 387 
    goto ldv_46160;
    case 61697: 
#line 389 
    ;
    
#line 390 
    prism2_info_scanresults(local,buf,left);
    
#line 391 
    goto ldv_46160;
    case 61699: 
#line 393 
    ;
    
#line 394 
    prism2_info_hostscanresults(local,buf,left);
    
#line 395 
    goto ldv_46160;
    default: 
#line 399 
    ;
    
#line 400 
    printk("\001",(char *)(& (local->dev)->name),(int)info->len,(int)info->type);
    
#line 403 
    printk("\001");
    
#line 404 
    i = 0;
    
#line 404 
    goto ldv_46166;
    ldv_46165: 
#line 405 
    ;
    
#line 405 
    printk(" %02x",(int)*(buf + i));
    
#line 404 
    i += 1;
    ldv_46166: 
#line 405 
    ;
    
#line 404 
    if (100 < left) 
#line 404 
                    tmp = 100; else 
#line 404 
                                    tmp = left;
    
#line 404 
    ;
    
#line 404 
    if (tmp > i) 
#line 406 
                 goto ldv_46165; else 
#line 409 
                                      goto ldv_46167;
    ldv_46167: 
#line 410 
    ;
    
#line 406 
    printk("\n");
    
#line 407 
    goto ldv_46160;
  }
  ldv_46160: 
#line 410 
  ;
  
#line 411 
  return;
}


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void handle_info_queue_linkstatus(local_info_t *local)
{
  int connected;
  union iwreq_data wrqu;
  int tmp;
  
#line 416 
  int val = local->prev_link_status;
  
#line 420 
  connected = ((val == 1 || val == 3) || val == 5) != 0;
  
#line 425 
  tmp = (*((local->func)->get_rid))(local->dev,(unsigned short)64834,(void *)(& local->bssid),6,1);
  
#line 425 
  if (tmp < 0) 
#line 427 
               printk("\001",(char *)(& (local->dev)->name));
  else {
    
#line 430 
    printk("\001",(char *)(& (local->dev)->name),(unsigned char *)(& local->bssid));
    
#line 433 
    if (((unsigned long)local->wds_type & 2UL) != 0UL) 
#line 434 
                                                       hostap_add_sta(local->ap,(u8 *)(& local->bssid)); else ;
  }
  
#line 438 
  if (connected != 0) {
    
#line 439 
    netif_carrier_on(local->dev);
    
#line 440 
    netif_carrier_on(local->ddev);
    
#line 441 
    memcpy((void *)(& wrqu.ap_addr.sa_data),(void const *)(& local->bssid),6UL);
  }
  else {
    
#line 443 
    netif_carrier_off(local->dev);
    
#line 444 
    netif_carrier_off(local->ddev);
    
#line 445 
    eth_zero_addr((u8 *)(& wrqu.ap_addr.sa_data));
  }
  
#line 447 
  wrqu.ap_addr.sa_family = (unsigned short)1U;
  
#line 455 
  if (connected != 0 || local->prev_linkstatus_connected != 0) 
#line 456 
                                                               wireless_send_event(local->dev,35605U,& wrqu,(char const *)0); else ;
  
#line 457 
  local->prev_linkstatus_connected = connected;
  
#line 458 
  return;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void handle_info_queue_scanresults(local_info_t *local)
{
  
#line 463 
  if (local->host_roaming == 1 && local->iw_mode == 2) 
#line 464 
                                                       prism2_host_roaming(local); else ;
  
#line 466 
  if (local->host_roaming == 2 && local->iw_mode == 2) {
    int tmp_0;
    bool tmp;
    
#line 467 
    tmp = is_zero_ether_addr((u8 const *)(& local->preferred_ap));
    
#line 467 
    if (tmp) 
#line 467 
             tmp_0 = 0; else 
#line 467 
                             tmp_0 = 1;
    
#line 467 
    if (tmp_0) 
#line 475 
               prism2_host_roaming(local); else ;
  }
  else ;
  
#line 476 
  return;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static void handle_info_queue(struct work_struct *work)
{
  local_info_t *tmp;
  int tmp_0;
  int tmp_1;
  {
    
#line 484 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 484 
    tmp = (local_info_t *)__mptr + 18446744073709548864U;
  }
  
#line 484 
  local_info_t *local = tmp;
  
#line 486 
  tmp_0 = test_and_clear_bit(0L,(unsigned long volatile *)(& local->pending_info));
  
#line 486 
  if (tmp_0 != 0) 
#line 488 
                  handle_info_queue_linkstatus(local); else ;
  
#line 490 
  tmp_1 = test_and_clear_bit(1L,(unsigned long volatile *)(& local->pending_info));
  
#line 490 
  if (tmp_1 != 0) 
#line 492 
                  handle_info_queue_scanresults(local); else ;
  
#line 493 
  return;
}


#line 497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
void hostap_info_init(local_info_t *local)
{
  
#line 499 
  skb_queue_head_init(& local->info_list);
  {
    struct lock_class_key __key;
    
#line 501 
    __init_work(& local->info_queue,0);
    
#line 501 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 501 
    local->info_queue.data = __constr_expr_37;
    
#line 501 
    lockdep_init_map(& local->info_queue.lockdep_map,"(&local->info_queue)",& __key,0);
    
#line 501 
    INIT_LIST_HEAD(& local->info_queue.entry);
    
#line 501 
    local->info_queue.func = & handle_info_queue;
  }
  
#line 503 
  return;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static char const __kstrtab_hostap_info_init[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'i', (char)'n', (char)'f', (char)'o', (char)'_', (char)'i', (char)'n', (char)'i', (char)'t', (char)'\000'};

#line 506 
struct kernel_symbol const __ksymtab_hostap_info_init;


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
struct kernel_symbol const __ksymtab_hostap_info_init = {.value = (unsigned long)(& hostap_info_init), .name = (char const *)(& __kstrtab_hostap_info_init)};

#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
static char const __kstrtab_hostap_info_process[20U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'i', (char)'n', (char)'f', (char)'o', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'e', (char)'s', (char)'s', (char)'\000'};

#line 507 
struct kernel_symbol const __ksymtab_hostap_info_process;


#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_info.c"
struct kernel_symbol const __ksymtab_hostap_info_process = {.value = (unsigned long)(& hostap_info_process), .name = (char const *)(& __kstrtab_hostap_info_process)};

#line 398  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void *kmalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 401 
  tmp = ldv_kmalloc(size,flags);
  
#line 401 
  return tmp;
}


#line 412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 415 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 415 
  return tmp;
}


#line 736  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static bool ldv_schedule_work_72(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 740 
  tmp = ldv_emg_schedule_work(work);
  
#line 740 
  __retres = tmp != 0;
  
#line 740 
  return __retres;
}


#line 744  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1)
{
  
#line 748 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 750 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 751 
  return;
}


#line 754  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv_spin_unlock_irqrestore_74(spinlock_t *lock, unsigned long flags)
{
  
#line 758 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 760 
  spin_unlock_irqrestore(lock,flags);
  
#line 761 
  return;
}


#line 764  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 768 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 770 
  spin_unlock_irqrestore(lock,flags);
  
#line 771 
  return;
}


#line 774  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 778 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 780 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 781 
  return;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 788 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 790 
  spin_unlock_irqrestore(lock,flags);
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static bool ldv_schedule_work_78(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 798 
  tmp = ldv_emg_schedule_work(work);
  
#line 798 
  __retres = tmp != 0;
  
#line 798 
  return __retres;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 806 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 808 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 809 
  return;
}


#line 812  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_info.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 816 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 818 
  spin_unlock_irqrestore(lock,flags);
  
#line 819 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_api_smp.h"
unsigned long _raw_write_lock_irqsave(rwlock_t *);


#line 40 
void _raw_write_unlock_irqrestore(rwlock_t *, unsigned long);


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
bool cancel_work_sync(struct work_struct *);


#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
bool try_module_get(struct module *);


#line 588 
void module_put(struct module *);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_2(size_t size, gfp_t flags);


#line 1913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_mac_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1915 
  __retres = skb->head + (int)skb->mac_header;
  
#line 1915 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file_net.h"
extern struct net init_net;


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 2182 
int dev_open(struct net_device *);


#line 2183 
int dev_close(struct net_device *);


#line 2193 
int register_netdevice(struct net_device *);


#line 2194 
void unregister_netdevice_queue(struct net_device *, struct list_head *);


#line 2196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void unregister_netdevice(struct net_device *dev)
{
  
#line 2198 
  unregister_netdevice_queue(dev,(struct list_head *)0);
  
#line 2199 
  return;
}


#line 2202 
void free_netdev(struct net_device *);


#line 2205 
static void ldv_free_netdev_73(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3338 
void ether_setup(struct net_device *);


#line 3356 
static void ldv_unregister_netdev_74(struct net_device *ldv_func_arg1);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_header(struct sk_buff *, struct net_device *, unsigned short, void const *, void const *, unsigned int);


#line 39 
int eth_header_cache(struct neighbour const *, struct hh_cache *, __be16);


#line 41 
void eth_header_cache_update(struct hh_cache *, struct net_device const *, unsigned char const *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_72(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_inherit(struct net_device *dst, struct net_device *src)
{
  
#line 297 
  dst->addr_assign_type = src->addr_assign_type;
  
#line 298 
  ether_addr_copy(dst->dev_addr,(u8 const *)src->dev_addr);
  
#line 299 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_a4(__le16 fc)
{
  int __retres;
  
#line 273 
  __le16 tmp = (unsigned short)768U;
  
#line 274 
  __retres = ((int)fc & (int)tmp) == (int)tmp;
  
#line 274 
  return __retres;
}


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_cts(__le16 fc)
{
  int __retres;
  
#line 555 
  __retres = ((int)fc & 252) == 196;
  
#line 555 
  return __retres;
}


#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_ack(__le16 fc)
{
  int __retres;
  
#line 565 
  __retres = ((int)fc & 252) == 212;
  
#line 565 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
netdev_tx_t hostap_data_start_xmit(struct sk_buff *skb, struct net_device *dev);


#line 91 
netdev_tx_t hostap_mgmt_start_xmit(struct sk_buff *skb, struct net_device *dev);


#line 93 
netdev_tx_t hostap_master_start_xmit(struct sk_buff *skb, struct net_device *dev);


#line 1096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct proc_dir_entry *hostap_proc;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
int hostap_tx_callback_unregister(local_info_t *local, u16 idx);


#line 22 
int hostap_set_word(struct net_device *dev, int rid, u16 val);


#line 23 
int hostap_set_string(struct net_device *dev, int rid, char const *val);


#line 24 
u16 hostap_get_porttype(local_info_t *local);


#line 25 
int hostap_set_encryption(local_info_t *local);


#line 26 
int hostap_set_antsel(local_info_t *local);


#line 27 
int hostap_set_roaming(local_info_t *local);


#line 28 
int hostap_set_auth_algs(local_info_t *local);


#line 29 
void hostap_dump_rx_header(char const *name, struct hfa384x_rx_frame const *rx);


#line 31 
void hostap_dump_tx_header(char const *name, struct hfa384x_tx_frame const *tx);


#line 33 
struct header_ops const hostap_80211_ops;


#line 36 
void hostap_setup_dev(struct net_device *dev, local_info_t *local, int type);


#line 38 
void hostap_set_multicast_list_queue(struct work_struct *work);


#line 39 
int hostap_set_hostapd(local_info_t *local, int val, int rtnl_locked);


#line 40 
int hostap_set_hostapd_sta(local_info_t *local, int val, int rtnl_locked);


#line 43 
struct net_device *hostap_add_interface(struct local_info *local, int type, int rtnl_locked, char const *prefix, char const *name);


#line 46 
void hostap_remove_interface(struct net_device *dev, int rtnl_locked, int remove_from_list);


#line 48 
int prism2_update_comms_qual(struct net_device *dev);


#line 49 
int prism2_sta_send_mgmt(local_info_t *local, u8 *dst, u16 stype, u8 *body, size_t bodylen);


#line 51 
int prism2_sta_deauth(local_info_t *local, u16 reason);


#line 89 
struct iw_handler_def const hostap_iw_handler_def;


#line 90 
struct ethtool_ops const prism2_ethtool_ops;


#line 92 
int hostap_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd);


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct net_device *hostap_add_interface(struct local_info *local, int type, int rtnl_locked, char const *prefix, char const *name)
{
  struct net_device *__retres;
  struct net_device *dev;
  struct net_device *mdev;
  struct hostap_interface *iface;
  int ret;
  
#line 58 
  dev = ldv_alloc_etherdev_mqs_72(352,1U,1U);
  
#line 59 
  if (dev == (struct net_device *)0) {
    
#line 60 
    __retres = (struct net_device *)0;
    
#line 60 
    goto return_label;
  }
  else ;
  
#line 62 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 63 
  iface->dev = dev;
  
#line 64 
  iface->local = local;
  
#line 65 
  iface->type = type;
  
#line 66 
  list_add(& iface->list,& local->hostap_interfaces);
  
#line 68 
  mdev = local->dev;
  
#line 69 
  eth_hw_addr_inherit(dev,mdev);
  
#line 70 
  dev->base_addr = mdev->base_addr;
  
#line 71 
  dev->irq = mdev->irq;
  
#line 72 
  dev->mem_start = mdev->mem_start;
  
#line 73 
  dev->mem_end = mdev->mem_end;
  
#line 75 
  hostap_setup_dev(dev,local,type);
  
#line 76 
  dev->destructor = & free_netdev;
  
#line 78 
  sprintf((char *)(& dev->name),"%s%s",prefix,name);
  
#line 79 
  if (rtnl_locked == 0) 
#line 80 
                        rtnl_lock(); else ;
  
#line 82 
  dev->dev.parent = mdev->dev.parent;
  
#line 83 
  ret = register_netdevice(dev);
  
#line 85 
  if (rtnl_locked == 0) 
#line 86 
                        rtnl_unlock(); else ;
  
#line 88 
  if (ret < 0) {
    
#line 89 
    printk("\001",(char *)(& dev->name));
    
#line 91 
    ldv_free_netdev_73(dev);
    
#line 92 
    __retres = (struct net_device *)0;
    
#line 92 
    goto return_label;
  }
  else ;
  
#line 95 
  printk("\001",(char *)(& mdev->name),(char *)(& dev->name));
  
#line 98 
  __retres = dev;
  return_label: 
#line 98 
                return __retres;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
void hostap_remove_interface(struct net_device *dev, int rtnl_locked, int remove_from_list)
{
  struct hostap_interface *iface;
  
#line 107 
  if (dev == (struct net_device *)0) 
#line 108 
                                     goto return_label; else ;
  
#line 110 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 112 
  if (remove_from_list != 0) 
#line 113 
                             list_del(& iface->list); else ;
  
#line 116 
  if ((iface->local)->ddev == dev) 
#line 117 
                                   (iface->local)->ddev = (struct net_device *)0;
  else 
    
#line 118 
    if ((iface->local)->apdev == dev) 
#line 119 
                                      (iface->local)->apdev = (struct net_device *)0;
    else 
      
#line 120 
      if ((iface->local)->stadev == dev) 
#line 121 
                                         (iface->local)->stadev = (struct net_device *)0; else ;
  
#line 123 
  if (rtnl_locked != 0) 
#line 124 
                        unregister_netdevice(dev); else 
#line 126 
                                                        ldv_unregister_netdev_74(dev);
  return_label: 
#line 127 
                return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
__inline static int prism2_wds_special_addr(u8 *addr)
{
  int __retres;
  
#line 135 
  if ((((((unsigned int)*addr != 0U || (unsigned int)*(addr + 1U) != 0U) || (unsigned int)*(addr + 2U) != 0U) || (unsigned int)*(addr + 3U) != 0U) || (unsigned int)*(addr + 4U) != 0U) || (unsigned int)*(addr + 5U) != 0U) {
    
#line 136 
    __retres = 0;
    
#line 136 
    goto return_label;
  }
  else ;
  
#line 138 
  __retres = 1;
  return_label: 
#line 138 
                return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int prism2_wds_add(local_info_t *local, u8 *remote_addr, int rtnl_locked)
{
  int __retres;
  struct net_device *dev;
  struct list_head *ptr;
  struct hostap_interface *iface;
  struct hostap_interface *empty;
  struct hostap_interface *match;
  struct hostap_interface *tmp;
  int tmp_1;
  int tmp_3;
  size_t tmp_4;
  
#line 149 
  match = (struct hostap_interface *)0;
  
#line 149 
  empty = match;
  
#line 150 
  _raw_read_lock_bh(& local->iface_lock);
  
#line 151 
  ptr = local->hostap_interfaces.next;
  
#line 151 
  goto ldv_47431;
  ldv_47430: 
#line 152 
  ;
  {
    
#line 152 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 152 
    tmp = (struct hostap_interface *)__mptr;
  }
  
#line 152 
  iface = tmp;
  
#line 153 
  if (iface->type != (unsigned int)4) 
#line 154 
                                      goto ldv_47428; else ;
  
#line 156 
  tmp_1 = prism2_wds_special_addr((u8 *)(& iface->u.wds.remote_addr));
  
#line 156 
  if (tmp_1 != 0) 
#line 157 
                  empty = iface;
  else {
    bool tmp_0;
    
#line 158 
    tmp_0 = ether_addr_equal((u8 const *)(& iface->u.wds.remote_addr),(u8 const *)remote_addr);
    
#line 158 
    if ((int)tmp_0 != 0) {
      
#line 159 
      match = iface;
      
#line 160 
      goto ldv_47429;
    }
    else ;
  }
  ldv_47428: 
#line 162 
  ;
  
#line 151 
  ptr = ptr->next;
  ldv_47431: 
#line 152 
  ;
  
#line 151 
  if (& local->hostap_interfaces != ptr) 
#line 153 
                                         goto ldv_47430; else 
#line 156 
                                                              goto ldv_47429;
  ldv_47429: 
#line 157 
  ;
  
#line 163 
  if (match == (struct hostap_interface *)0 && empty != (struct hostap_interface *)0) {
    int tmp_2;
    
#line 163 
    tmp_2 = prism2_wds_special_addr(remote_addr);
    
#line 163 
    if (tmp_2 == 0) {
      
#line 165 
      memcpy((void *)(& empty->u.wds.remote_addr),(void const *)remote_addr,6UL);
      
#line 166 
      _raw_read_unlock_bh(& local->iface_lock);
      
#line 167 
      printk("\001",(char *)(& (local->dev)->name),(char *)(& (empty->dev)->name));
      
#line 169 
      __retres = 0;
      
#line 169 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 171 
  _raw_read_unlock_bh(& local->iface_lock);
  
#line 173 
  tmp_3 = prism2_wds_special_addr(remote_addr);
  
#line 173 
  if (tmp_3 == 0) {
    
#line 174 
    if (match != (struct hostap_interface *)0) {
      
#line 175 
      __retres = -17;
      
#line 175 
      goto return_label;
    }
    else ;
    
#line 176 
    hostap_add_sta(local->ap,remote_addr);
  }
  else ;
  
#line 179 
  if (local->wds_connections >= local->wds_max_connections) {
    
#line 180 
    __retres = -105;
    
#line 180 
    goto return_label;
  }
  else ;
  
#line 183 
  tmp_4 = strlen((char const *)(& (local->dev)->name));
  
#line 183 
  if (tmp_4 > 10UL) {
    
#line 184 
    printk("\001",(char *)(& (local->dev)->name));
    
#line 186 
    __retres = -22;
    
#line 186 
    goto return_label;
  }
  else ;
  
#line 189 
  dev = hostap_add_interface(local,4,rtnl_locked,(char const *)(& (local->ddev)->name),"wds%d");
  
#line 191 
  if (dev == (struct net_device *)0) {
    
#line 192 
    __retres = -12;
    
#line 192 
    goto return_label;
  }
  else ;
  
#line 194 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 195 
  memcpy((void *)(& iface->u.wds.remote_addr),(void const *)remote_addr,6UL);
  
#line 197 
  local->wds_connections += 1;
  
#line 199 
  __retres = 0;
  return_label: 
#line 199 
                return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int prism2_wds_del(local_info_t *local, u8 *remote_addr, int rtnl_locked, int do_not_remove)
{
  unsigned long flags;
  struct list_head *ptr;
  struct hostap_interface *iface;
  struct hostap_interface *tmp;
  bool tmp_0;
  int tmp_1;
  
#line 208 
  struct hostap_interface *selected = (struct hostap_interface *)0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 210 
  flags = _raw_write_lock_irqsave(& local->iface_lock);
  
#line 211 
  ptr = local->hostap_interfaces.next;
  
#line 211 
  goto ldv_47450;
  ldv_47449: 
#line 212 
  ;
  {
    
#line 212 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 212 
    tmp = (struct hostap_interface *)__mptr;
  }
  
#line 212 
  iface = tmp;
  
#line 213 
  if (iface->type != (unsigned int)4) 
#line 214 
                                      goto ldv_47447; else ;
  
#line 216 
  tmp_0 = ether_addr_equal((u8 const *)(& iface->u.wds.remote_addr),(u8 const *)remote_addr);
  
#line 216 
  if ((int)tmp_0 != 0) {
    
#line 217 
    selected = iface;
    
#line 218 
    goto ldv_47448;
  }
  else ;
  ldv_47447: 
#line 220 
  ;
  
#line 211 
  ptr = ptr->next;
  ldv_47450: 
#line 212 
  ;
  
#line 211 
  if (& local->hostap_interfaces != ptr) 
#line 213 
                                         goto ldv_47449; else 
#line 216 
                                                              goto ldv_47448;
  ldv_47448: 
#line 217 
  ;
  
#line 221 
  if (selected != (struct hostap_interface *)0 && do_not_remove == 0) 
    
#line 222 
    list_del(& selected->list); else ;
  {
    unsigned long __dummy_0;
    unsigned long __dummy2_0;
    
  }
  
#line 223 
  _raw_write_unlock_irqrestore(& local->iface_lock,flags);
  
#line 225 
  if (selected != (struct hostap_interface *)0) 
    
#line 226 
    if (do_not_remove != 0) 
#line 227 
                            eth_zero_addr((u8 *)(& selected->u.wds.remote_addr));
    else {
      
#line 229 
      hostap_remove_interface(selected->dev,rtnl_locked,0);
      
#line 230 
      local->wds_connections -= 1;
    }
  else ;
  
#line 234 
  if (selected != (struct hostap_interface *)0) 
#line 234 
                                                tmp_1 = 0; else 
#line 234 
                                                                tmp_1 = -19;
  
#line 234 
  return tmp_1;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
u16 hostap_tx_callback_register(local_info_t *local, void (*func)(struct sk_buff *, int , void *), void *data)
{
  u16 __retres;
  unsigned long flags;
  struct hostap_tx_callback_info *entry;
  
#line 245 
  entry = (struct hostap_tx_callback_info *)kmalloc_2(32UL,208U);
  
#line 246 
  if (entry == (struct hostap_tx_callback_info *)0) {
    
#line 247 
    __retres = (unsigned short)0U;
    
#line 247 
    goto return_label;
  }
  else ;
  
#line 249 
  entry->func = func;
  
#line 250 
  entry->data = data;
  
#line 252 
  ldv___ldv_spin_lock_75(& local->lock);
  
#line 253 
  if (local->tx_callback != (struct hostap_tx_callback_info *)0) 
#line 253 
                                                                 entry->idx = (unsigned short)((unsigned int)(local->tx_callback)->idx + 1U); else 
                                                                    
#line 253 
                                                                    entry->idx = (unsigned short)1U;
  
#line 254 
  entry->next = local->tx_callback;
  
#line 255 
  local->tx_callback = entry;
  
#line 256 
  ldv_spin_unlock_irqrestore_76(& local->lock,flags);
  
#line 258 
  __retres = entry->idx;
  return_label: 
#line 258 
                return __retres;
}


#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_tx_callback_unregister(local_info_t *local, u16 idx)
{
  unsigned long flags;
  struct hostap_tx_callback_info *cb;
  int tmp;
  
#line 265 
  struct hostap_tx_callback_info *prev = (struct hostap_tx_callback_info *)0;
  
#line 267 
  ldv___ldv_spin_lock_77(& local->lock);
  
#line 268 
  cb = local->tx_callback;
  
#line 269 
  goto ldv_47472;
  ldv_47471: 
#line 270 
  ;
  
#line 270 
  prev = cb;
  
#line 271 
  cb = cb->next;
  ldv_47472: 
#line 272 
  ;
  
#line 269 
  if (cb != (struct hostap_tx_callback_info *)0 && (int)cb->idx != (int)idx) 
    
#line 271 
    goto ldv_47471; else 
#line 274 
                         goto ldv_47473;
  ldv_47473: 
#line 275 
  ;
  
#line 273 
  if (cb != (struct hostap_tx_callback_info *)0) {
    
#line 274 
    if (prev == (struct hostap_tx_callback_info *)0) 
#line 275 
                                                     local->tx_callback = cb->next; else 
                                                                    
#line 277 
                                                                    prev->next = cb->next;
    
#line 278 
    kfree((void const *)cb);
  }
  else ;
  
#line 280 
  ldv_spin_unlock_irqrestore_78(& local->lock,flags);
  
#line 282 
  if (cb != (struct hostap_tx_callback_info *)0) 
#line 282 
                                                 tmp = 0; else 
#line 282 
                                                               tmp = -1;
  
#line 282 
  return tmp;
}


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_word(struct net_device *dev, int rid, u16 val)
{
  struct hostap_interface *iface;
  int tmp_1;
  
#line 290 
  __le16 tmp = val;
  
#line 291 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 292 
  tmp_1 = (*(((iface->local)->func)->set_rid))(dev,(unsigned short)((int)((unsigned short)rid)),(void *)(& tmp),2);
  
#line 292 
  return tmp_1;
}


#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_string(struct net_device *dev, int rid, char const *val)
{
  int __retres;
  struct hostap_interface *iface;
  char buf[34U];
  int len;
  size_t tmp_0;
  int tmp_1;
  
#line 302 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 303 
  tmp_0 = strlen(val);
  
#line 303 
  len = (int)tmp_0;
  
#line 304 
  if (len > 32) {
    
#line 305 
    __retres = -1;
    
#line 305 
    goto return_label;
  }
  else ;
  
#line 306 
  memset((void *)(& buf),0,34UL);
  
#line 307 
  buf[0] = (char)len;
  
#line 308 
  memcpy((void *)(& buf) + 2U,(void const *)val,(unsigned long)len);
  
#line 310 
  tmp_1 = (*(((iface->local)->func)->set_rid))(dev,(unsigned short)((int)((unsigned short)rid)),(void *)(& buf),34);
  
#line 310 
  __retres = tmp_1;
  return_label: 
#line 310 
                return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
u16 hostap_get_porttype(local_info_t *local)
{
  u16 __retres;
  
#line 316 
  if (local->iw_mode == 1 && local->pseudo_adhoc != 0) {
    
#line 317 
    __retres = (unsigned short)3U;
    
#line 317 
    goto return_label;
  }
  else ;
  
#line 318 
  if (local->iw_mode == 1) {
    
#line 319 
    __retres = (unsigned short)0U;
    
#line 319 
    goto return_label;
  }
  else ;
  
#line 320 
  if (local->iw_mode == 2) {
    
#line 321 
    __retres = (unsigned short)1U;
    
#line 321 
    goto return_label;
  }
  else ;
  
#line 322 
  if (local->iw_mode == 4) {
    
#line 323 
    __retres = (unsigned short)2U;
    
#line 323 
    goto return_label;
  }
  else ;
  
#line 324 
  if (local->iw_mode == 6) {
    
#line 325 
    __retres = (unsigned short)3U;
    
#line 325 
    goto return_label;
  }
  else ;
  
#line 326 
  __retres = (unsigned short)6U;
  return_label: 
#line 326 
                return __retres;
}


#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_encryption(local_info_t *local)
{
  int __retres;
  u16 val;
  u16 old_val;
  int i;
  int keylen;
  int len;
  int idx;
  char keybuf[14U];
  enum ldv_33037 encrypt_type;
  int tmp_0;
  int tmp_2_0;
  int tmp_3;
  
#line 337 
  idx = local->crypt_info.tx_keyidx;
  
#line 338 
  if (local->crypt_info.crypt[idx] == (struct lib80211_crypt_data *)0 || (local->crypt_info.crypt[idx])->ops == (struct lib80211_crypto_ops *)0) 
    
#line 340 
    encrypt_type = NONE;
  else {
    int tmp;
    
#line 341 
    tmp = strcmp(((local->crypt_info.crypt[idx])->ops)->name,"WEP");
    
#line 341 
    if (tmp == 0) 
#line 342 
                  encrypt_type = WEP; else 
#line 344 
                                           encrypt_type = OTHER;
  }
  
#line 346 
  tmp_0 = (*((local->func)->get_rid))(local->dev,(unsigned short)64552,(void *)(& val),2,1);
  
#line 346 
  if (tmp_0 < 0) {
    
#line 348 
    printk("\001");
    
#line 349 
    goto fail;
  }
  else ;
  
#line 351 
  u16 *tmp_2 = & val;
  
#line 352 
  old_val = val;
  
#line 354 
  if (encrypt_type != (unsigned int)NONE || local->privacy_invoked != 0) 
    
#line 355 
    val = (unsigned short)((unsigned int)val | 1U); else 
#line 357 
                                                         val = (unsigned short)((unsigned int)val & 65534U);
  
#line 359 
  if ((local->open_wep != 0 || encrypt_type == (unsigned int)NONE) || ((local->ieee_802_1x != 0 || local->wpa != 0) && local->host_decrypt != 0)) 
    
#line 361 
    val = (unsigned short)((unsigned int)val & 65533U); else 
#line 363 
                                                             val = (unsigned short)((unsigned int)val | 2U);
  
#line 365 
  if ((encrypt_type != (unsigned int)NONE || local->privacy_invoked != 0) && (encrypt_type == (unsigned int)OTHER || local->host_encrypt != 0)) 
    
#line 367 
    val = (unsigned short)((unsigned int)val | 16U); else 
#line 369 
                                                          val = (unsigned short)((unsigned int)val & 65519U);
  
#line 370 
  if ((encrypt_type != (unsigned int)NONE || local->privacy_invoked != 0) && (encrypt_type == (unsigned int)OTHER || local->host_decrypt != 0)) 
    
#line 372 
    val = (unsigned short)((unsigned int)val | 128U); else 
#line 374 
                                                           val = (unsigned short)((unsigned int)val & 65407U);
  
#line 376 
  if ((int)val != (int)old_val) {
    int tmp_1;
    
#line 376 
    tmp_1 = hostap_set_word(local->dev,64552,(unsigned short)((int)val));
    
#line 376 
    if (tmp_1 != 0) {
      
#line 378 
      printk("\001",(int)val);
      
#line 380 
      goto fail;
    }
    else ;
  }
  else ;
  
#line 383 
  if (encrypt_type != (unsigned int)WEP) {
    
#line 384 
    __retres = 0;
    
#line 384 
    goto return_label;
  }
  else ;
  
#line 388 
  keylen = 6;
  
#line 389 
  len = (*(((local->crypt_info.crypt[idx])->ops)->get_key))((void *)(& keybuf),14,(u8 *)0U,(local->crypt_info.crypt[idx])->priv);
  
#line 391 
  if ((unsigned int)idx <= 3U && len > 5) 
#line 392 
                                          keylen = 14; else ;
  
#line 394 
  i = 0;
  
#line 394 
  goto ldv_47509;
  ldv_47508: 
#line 395 
  ;
  
#line 395 
  memset((void *)(& keybuf),0,14UL);
  
#line 396 
  if (local->crypt_info.crypt[i] != (struct lib80211_crypt_data *)0) 
    
#line 397 
    (*(((local->crypt_info.crypt[i])->ops)->get_key))((void *)(& keybuf),14,(u8 *)0U,(local->crypt_info.crypt[i])->priv); else ;
  
#line 401 
  tmp_2_0 = (*((local->func)->set_rid))(local->dev,(unsigned short)((int)((unsigned int)((unsigned short)i) + 64548U)),(void *)(& keybuf),keylen);
  
#line 401 
  if (tmp_2_0 != 0) {
    
#line 404 
    printk("\001",i,keylen);
    
#line 406 
    goto fail;
  }
  else ;
  
#line 394 
  i += 1;
  ldv_47509: 
#line 395 
  ;
  
#line 394 
  if (i <= 3) 
#line 396 
              goto ldv_47508; else 
#line 399 
                                   goto ldv_47510;
  ldv_47510: 
#line 400 
  ;
  
#line 409 
  tmp_3 = hostap_set_word(local->dev,64547,(unsigned short)((int)((unsigned short)idx)));
  
#line 409 
  if (tmp_3 != 0) {
    
#line 410 
    printk("\001",idx);
    
#line 411 
    goto fail;
  }
  else ;
  
#line 414 
  __retres = 0;
  
#line 414 
  goto return_label;
  fail: 
#line 416 
  ;
  
#line 417 
  printk("\001",(char *)(& (local->dev)->name));
  
#line 418 
  __retres = -1;
  return_label: 
#line 418 
                return __retres;
}


#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_antsel(local_info_t *local)
{
  u16 val;
  
#line 425 
  int ret = 0;
  
#line 427 
  if (local->antsel_tx != 0) {
    int tmp_0;
    
#line 427 
    tmp_0 = (*((local->func)->cmd))(local->dev,(unsigned short)48,(unsigned short)18,(u16 *)0U,& val);
    
#line 427 
    if (tmp_0 == 0) {
      int tmp;
      
#line 431 
      val = (unsigned short)((unsigned int)val & 65529U);
      
#line 432 
      switch (local->antsel_tx) {
        case 1: 
#line 433 
        ;
        
#line 434 
        val = (unsigned short)((unsigned int)val | 2U);
        
#line 435 
        goto ldv_47517;
        case 2: 
#line 436 
        ;
        
#line 437 
        goto ldv_47517;
        case 3: 
#line 438 
        ;
        
#line 439 
        val = (unsigned short)((unsigned int)val | 4U);
        
#line 440 
        goto ldv_47517;
      }
      ldv_47517: 
#line 443 
      ;
      
#line 443 
      tmp = (*((local->func)->cmd))(local->dev,(unsigned short)49,(unsigned short)18,& val,(u16 *)0U);
      
#line 443 
      if (tmp != 0) {
        
#line 445 
        printk("\001",(char *)(& (local->dev)->name));
        
#line 447 
        ret = -1;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 451 
  if (local->antsel_rx != 0) {
    int tmp_2;
    
#line 451 
    tmp_2 = (*((local->func)->cmd))(local->dev,(unsigned short)48,(unsigned short)20,(u16 *)0U,& val);
    
#line 451 
    if (tmp_2 == 0) {
      int tmp_1;
      
#line 455 
      val = (unsigned short)((unsigned int)val & 65532U);
      
#line 456 
      switch (local->antsel_rx) {
        case 1: 
#line 457 
        ;
        
#line 458 
        goto ldv_47521;
        case 2: 
#line 459 
        ;
        
#line 460 
        val = (unsigned short)((unsigned int)val | 1U);
        
#line 461 
        goto ldv_47521;
        case 3: 
#line 462 
        ;
        
#line 463 
        val = (unsigned short)((unsigned int)val | 3U);
        
#line 464 
        goto ldv_47521;
      }
      ldv_47521: 
#line 467 
      ;
      
#line 467 
      tmp_1 = (*((local->func)->cmd))(local->dev,(unsigned short)49,(unsigned short)20,& val,(u16 *)0U);
      
#line 467 
      if (tmp_1 != 0) {
        
#line 469 
        printk("\001",(char *)(& (local->dev)->name));
        
#line 471 
        ret = -1;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 475 
  return ret;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_roaming(local_info_t *local)
{
  u16 val;
  int tmp;
  
#line 483 
  switch (local->host_roaming) {
    case 1: 
#line 484 
    ;
    
#line 485 
    val = (unsigned short)2U;
    
#line 486 
    goto ldv_47529;
    case 2: 
#line 487 
    ;
    
#line 488 
    val = (unsigned short)3U;
    
#line 489 
    goto ldv_47529;
    case 0: 
#line 490 
    ;
    default: 
#line 491 
    ;
    
#line 492 
    val = (unsigned short)1U;
    
#line 493 
    goto ldv_47529;
  }
  ldv_47529: 
#line 496 
  ;
  
#line 496 
  tmp = hostap_set_word(local->dev,64557,(unsigned short)((int)val));
  
#line 496 
  return tmp;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_auth_algs(local_info_t *local)
{
  int __retres;
  int tmp;
  
#line 502 
  int val = local->auth_algs;
  
#line 508 
  if (local->sta_fw_ver <= 1791U && (unsigned int)val + 4294967295U > 1U) 
    
#line 510 
    val = 1; else ;
  
#line 512 
  tmp = hostap_set_word(local->dev,64554,(unsigned short)((int)((unsigned short)val)));
  
#line 512 
  if (tmp != 0) {
    
#line 513 
    printk("\001",(char *)(& (local->dev)->name),local->auth_algs);
    
#line 515 
    __retres = -22;
    
#line 515 
    goto return_label;
  }
  else ;
  
#line 518 
  __retres = 0;
  return_label: 
#line 518 
                return __retres;
}


#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
void hostap_dump_rx_header(char const *name, struct hfa384x_rx_frame const *rx)
{
  u16 status;
  u16 fc;
  char *tmp;
  char *tmp_0;
  int tmp_2;
  
#line 526 
  status = rx->status;
  
#line 528 
  printk("\001",name,(int)status,((int)status >> 8) & 7,(int)status >> 13,(int)status & 1,(int)rx->silence,(int)rx->signal,(int)rx->rate,(int)rx->rxflow,jiffies);
  
#line 534 
  fc = rx->frame_control;
  
#line 541 
  if (((int)fc & 512) != 0) 
#line 541 
                            tmp = (char *)" [FromDS]"; else 
#line 541 
                                                            tmp = (char *)"";
  
#line 540 
  if (((int)fc & 256) != 0) 
#line 540 
                            tmp_0 = (char *)" [ToDS]"; else 
#line 540 
                                                            tmp_0 = (char *)"";
  
#line 535 
  ;
  
#line 535 
  ;
  
#line 535 
  ;
  
#line 535 
  ;
  
#line 535 
  ;
  
#line 535 
  ;
  
#line 535 
  printk("\001",(int)fc,((int)fc >> 2) & 3,((int)fc >> 4) & 15,(int)rx->duration_id,(int)rx->seq_ctrl,(int)rx->data_len,tmp_0,tmp);
  
#line 544 
  printk("\001",(u8 const *)(& rx->addr1),(u8 const *)(& rx->addr2),(u8 const *)(& rx->addr3),(u8 const *)(& rx->addr4));
  
#line 548 
  if (0 != 0) 
#line 548 
              tmp_2 = (int)((unsigned short)(((int)rx->len << 8) | ((int)rx->len >> 8)));
  else {
    __u16 tmp_1;
    
#line 549 
    tmp_1 = __fswab16((unsigned short)((int)rx->len));
    
#line 548 
    tmp_2 = (int)tmp_1;
  }
  
#line 547 
  ;
  
#line 547 
  ;
  
#line 547 
  printk("\001",(u8 const *)(& rx->dst_addr),(u8 const *)(& rx->src_addr),tmp_2);
  
#line 550 
  return;
}


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
void hostap_dump_tx_header(char const *name, struct hfa384x_tx_frame const *tx)
{
  u16 fc;
  char *tmp;
  char *tmp_0;
  int tmp_2;
  
#line 557 
  printk("\001",name,(int)tx->status,(int)tx->retry_count,(int)tx->tx_rate,(int)tx->tx_control,jiffies);
  
#line 562 
  fc = tx->frame_control;
  
#line 569 
  if (((int)fc & 512) != 0) 
#line 569 
                            tmp = (char *)" [FromDS]"; else 
#line 569 
                                                            tmp = (char *)"";
  
#line 568 
  if (((int)fc & 256) != 0) 
#line 568 
                            tmp_0 = (char *)" [ToDS]"; else 
#line 568 
                                                            tmp_0 = (char *)"";
  
#line 563 
  ;
  
#line 563 
  ;
  
#line 563 
  ;
  
#line 563 
  ;
  
#line 563 
  ;
  
#line 563 
  ;
  
#line 563 
  printk("\001",(int)fc,((int)fc >> 2) & 3,((int)fc >> 4) & 15,(int)tx->duration_id,(int)tx->seq_ctrl,(int)tx->data_len,tmp_0,tmp);
  
#line 572 
  printk("\001",(u8 const *)(& tx->addr1),(u8 const *)(& tx->addr2),(u8 const *)(& tx->addr3),(u8 const *)(& tx->addr4));
  
#line 576 
  if (0 != 0) 
#line 576 
              tmp_2 = (int)((unsigned short)(((int)tx->len << 8) | ((int)tx->len >> 8)));
  else {
    __u16 tmp_1;
    
#line 577 
    tmp_1 = __fswab16((unsigned short)((int)tx->len));
    
#line 576 
    tmp_2 = (int)tmp_1;
  }
  
#line 575 
  ;
  
#line 575 
  ;
  
#line 575 
  printk("\001",(u8 const *)(& tx->dst_addr),(u8 const *)(& tx->src_addr),tmp_2);
  
#line 578 
  return;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_80211_header_parse(struct sk_buff const *skb, unsigned char *haddr)
{
  int __retres;
  unsigned char *tmp;
  
#line 584 
  tmp = skb_mac_header(skb);
  
#line 584 
  ;
  
#line 584 
  memcpy((void *)haddr,(void const *)(tmp + 10U),6UL);
  
#line 585 
  __retres = 6;
  
#line 585 
  return __retres;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_80211_get_hdrlen(__le16 fc)
{
  int __retres;
  int tmp_2;
  
#line 591 
  tmp_2 = ieee80211_is_data((unsigned short)((int)fc));
  
#line 591 
  if (tmp_2 != 0) {
    int tmp_3;
    
#line 591 
    tmp_3 = ieee80211_has_a4((unsigned short)((int)fc));
    
#line 591 
    if (tmp_3 != 0) {
      
#line 592 
      __retres = 30;
      
#line 592 
      goto return_label;
    }
    else 
#line 591 
         goto _LAND;
  }
  else {
    int tmp_0;
    _LAND: 
#line 593 
    tmp_0 = ieee80211_is_cts((unsigned short)((int)fc));
    
#line 593 
    if (tmp_0 != 0) 
#line 593 
                    goto _LOR;
    else {
      int tmp_1;
      
#line 593 
      tmp_1 = ieee80211_is_ack((unsigned short)((int)fc));
      
#line 593 
      if (tmp_1 != 0) {
        _LOR: {
                
#line 594 
                __retres = 10;
                
#line 594 
                goto return_label;
              }
      }
      else {
        int tmp;
        
#line 595 
        tmp = ieee80211_is_ctl((unsigned short)((int)fc));
        
#line 595 
        if (tmp != 0) {
          
#line 596 
          __retres = 16;
          
#line 596 
          goto return_label;
        }
        else ;
      }
    }
  }
  
#line 598 
  __retres = 24;
  return_label: 
#line 598 
                return __retres;
}


#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int prism2_close(struct net_device *dev)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  bool tmp_1;
  
#line 609 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 610 
  local = iface->local;
  
#line 612 
  if (local->ddev == dev) 
#line 613 
                          prism2_sta_deauth(local,(unsigned short)3); else ;
  
#line 616 
  if (local->hostapd == 0 && local->dev == dev) {
    
#line 616 
    if ((local->func)->card_present == (int (*)(local_info_t *))0) 
#line 616 
                                                                   goto _LOR;
    else {
      int tmp_0;
      
#line 617 
      tmp_0 = (*((local->func)->card_present))(local);
      
#line 617 
      if (tmp_0 != 0) {
        _LOR: 
#line 617 
        ;
        
#line 617 
        if (local->hw_ready != 0) {
          
#line 618 
          if (local->ap != (struct ap_data *)0) {
            
#line 618 
            if (local->iw_mode == 3) 
#line 619 
                                     hostap_deauth_all_stas(dev,local->ap,1); else ;
          }
          else ;
        }
        else ;
      }
      else ;
    }
  }
  else ;
  
#line 622 
  if (local->dev == dev) 
#line 623 
                         (*((local->func)->hw_shutdown))(dev,2); else ;
  
#line 626 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 626 
  if ((int)tmp_1 != 0) {
    
#line 627 
    netif_start_queue(dev);
    
#line 628 
    netif_device_detach(dev);
  }
  else ;
  
#line 631 
  cancel_work_sync(& local->reset_queue);
  
#line 632 
  cancel_work_sync(& local->set_multicast_list_queue);
  
#line 633 
  cancel_work_sync(& local->set_tim_queue);
  
#line 635 
  cancel_work_sync(& local->info_queue);
  
#line 637 
  cancel_work_sync(& local->comms_qual_update);
  
#line 639 
  module_put(local->hw_module);
  
#line 641 
  local->num_dev_open -= 1;
  
#line 643 
  if (((local->dev != dev && ((local->dev)->flags & 1U) != 0U) && local->master_dev_auto_open != 0) && local->num_dev_open == 1) 
    
#line 648 
    dev_close(local->dev); else ;
  
#line 651 
  __retres = 0;
  
#line 651 
  return __retres;
}


#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int prism2_open(struct net_device *dev)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_2;
  bool tmp_1;
  
#line 662 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 663 
  local = iface->local;
  
#line 665 
  if (local->no_pri != 0) {
    
#line 666 
    printk("\001",(char *)(& dev->name));
    
#line 668 
    __retres = -19;
    
#line 668 
    goto return_label;
  }
  else ;
  
#line 671 
  if ((local->func)->card_present != (int (*)(local_info_t *))0) {
    int tmp_0;
    
#line 671 
    tmp_0 = (*((local->func)->card_present))(local);
    
#line 671 
    if (tmp_0 == 0) {
      
#line 673 
      __retres = -19;
      
#line 673 
      goto return_label;
    }
    else 
#line 671 
         goto _LAND;
  }
  else {
    _LAND: 
#line 671 
    ;
    
#line 671 
    if (local->hw_downloading != 0) {
      
#line 673 
      __retres = -19;
      
#line 673 
      goto return_label;
    }
    else ;
  }
  
#line 675 
  tmp_1 = try_module_get(local->hw_module);
  
#line 675 
  if (tmp_1) 
#line 675 
             tmp_2 = 0; else 
#line 675 
                             tmp_2 = 1;
  
#line 675 
  if (tmp_2) {
    
#line 676 
    __retres = -19;
    
#line 676 
    goto return_label;
  }
  else ;
  
#line 677 
  local->num_dev_open += 1;
  
#line 679 
  if (local->dev_enabled == 0) {
    int tmp_3;
    
#line 679 
    tmp_3 = (*((local->func)->hw_enable))(dev,1);
    
#line 679 
    if (tmp_3 != 0) {
      
#line 680 
      printk("\001",(char *)(& dev->name));
      
#line 682 
      prism2_close(dev);
      
#line 683 
      __retres = -19;
      
#line 683 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 685 
  if (local->dev_enabled == 0) ; else ;
  
#line 687 
  local->dev_enabled = 1;
  
#line 689 
  if (local->dev != dev && ((local->dev)->flags & 1U) == 0U) {
    
#line 692 
    local->master_dev_auto_open = 1;
    
#line 693 
    dev_open(local->dev);
  }
  else ;
  
#line 696 
  netif_device_attach(dev);
  
#line 697 
  netif_start_queue(dev);
  
#line 699 
  __retres = 0;
  return_label: 
#line 699 
                return __retres;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int prism2_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct list_head *ptr;
  int tmp_0;
  struct hostap_interface *tmp_2;
  
#line 708 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 710 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 711 
  local = iface->local;
  
#line 713 
  tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64513,(void *)(& addr->sa_data),6);
  
#line 713 
  if (tmp_0 < 0) {
    
#line 715 
    __retres = -22;
    
#line 715 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 714 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 714 
    if (tmp_1 != 0) {
      
#line 715 
      __retres = -22;
      
#line 715 
      goto return_label;
    }
    else ;
  }
  
#line 717 
  _raw_read_lock_bh(& local->iface_lock);
  
#line 718 
  ptr = local->hostap_interfaces.next;
  
#line 718 
  goto ldv_47576;
  ldv_47575: 
#line 719 
  ;
  {
    
#line 719 
    struct list_head const *__mptr = (struct list_head const *)ptr;
    
#line 719 
    tmp_2 = (struct hostap_interface *)__mptr;
  }
  
#line 719 
  iface = tmp_2;
  
#line 720 
  memcpy((void *)(iface->dev)->dev_addr,(void const *)(& addr->sa_data),6UL);
  
#line 718 
  ptr = ptr->next;
  ldv_47576: 
#line 719 
  ;
  
#line 718 
  if (& local->hostap_interfaces != ptr) 
#line 720 
                                         goto ldv_47575; else 
#line 723 
                                                              goto ldv_47577;
  ldv_47577: 
#line 724 
  ;
  
#line 722 
  memcpy((void *)(local->dev)->dev_addr,(void const *)(& addr->sa_data),6UL);
  
#line 723 
  _raw_read_unlock_bh(& local->iface_lock);
  
#line 725 
  __retres = 0;
  return_label: 
#line 725 
                return __retres;
}


#line 731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
void hostap_set_multicast_list_queue(struct work_struct *work)
{
  local_info_t *tmp;
  int tmp_1;
  {
    
#line 734 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 734 
    tmp = (local_info_t *)__mptr + 18446744073709550528U;
  }
  
#line 733 
  local_info_t *local = tmp;
  
#line 735 
  struct net_device *dev = local->dev;
  
#line 737 
  tmp_1 = hostap_set_word(dev,64645,(unsigned short)((int)((unsigned short)local->is_promisc)));
  
#line 737 
  if (tmp_1 != 0) {
    char *tmp_0;
    
#line 740 
    if (local->is_promisc != 0) 
#line 740 
                                tmp_0 = (char *)"en"; else 
#line 740 
                                                           tmp_0 = (char *)"dis";
    
#line 739 
    ;
    
#line 739 
    printk("\001",(char *)(& dev->name),tmp_0);
  }
  else ;
  
#line 741 
  return;
}


#line 745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static void hostap_set_multicast_list(struct net_device *dev)
{
  
#line 747 
  return;
}


#line 768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int prism2_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  
#line 770 
  if ((unsigned int)new_mtu + 4294967040U > 2034U) {
    
#line 771 
    __retres = -22;
    
#line 771 
    goto return_label;
  }
  else ;
  
#line 773 
  dev->mtu = (unsigned int)new_mtu;
  
#line 774 
  __retres = 0;
  return_label: 
#line 774 
                return __retres;
}


#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static void prism2_tx_timeout(struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct hfa384x_regs regs;
  
#line 784 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 785 
  local = iface->local;
  
#line 787 
  printk("\001",(char *)(& dev->name));
  
#line 788 
  netif_start_queue(local->dev);
  
#line 790 
  (*((local->func)->read_regs))(dev,& regs);
  
#line 791 
  printk("\001",(char *)(& dev->name),(int)regs.cmd,(int)regs.evstat,(int)regs.offset0,(int)regs.offset1,(int)regs.swsupport0);
  
#line 796 
  (*((local->func)->schedule_reset))(local);
  
#line 797 
  return;
}


#line 799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct header_ops const hostap_80211_ops = {.create = & eth_header, .parse = & hostap_80211_header_parse, .cache = & eth_header_cache, .cache_update = & eth_header_cache_update};

#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_80211_ops[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'8', (char)'0', (char)'2', (char)'1', (char)'1', (char)'_', (char)'o', (char)'p', (char)'s', (char)'\000'};

#line 805 
struct kernel_symbol const __ksymtab_hostap_80211_ops;


#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_80211_ops = {.value = (unsigned long)(& hostap_80211_ops), .name = (char const *)(& __kstrtab_hostap_80211_ops)};

#line 808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static struct net_device_ops const hostap_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & prism2_open, .ndo_stop = & prism2_close, .ndo_start_xmit = & hostap_data_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & hostap_set_multicast_list, .ndo_set_mac_address = & prism2_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & hostap_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & prism2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & prism2_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static struct net_device_ops const hostap_mgmt_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & prism2_open, .ndo_stop = & prism2_close, .ndo_start_xmit = & hostap_mgmt_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & hostap_set_multicast_list, .ndo_set_mac_address = & prism2_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & hostap_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & prism2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & prism2_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static struct net_device_ops const hostap_master_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & prism2_open, .ndo_stop = & prism2_close, .ndo_start_xmit = & hostap_master_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & hostap_set_multicast_list, .ndo_set_mac_address = & prism2_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & hostap_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & prism2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & prism2_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
void hostap_setup_dev(struct net_device *dev, local_info_t *local, int type)
{
  struct hostap_interface *iface;
  
#line 852 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 853 
  ether_setup(dev);
  
#line 854 
  dev->priv_flags &= 4294901759U;
  
#line 857 
  if (iface != (struct hostap_interface *)0) {
    
#line 860 
    iface->wireless_data.spy_data = & iface->spy_data;
    
#line 861 
    dev->wireless_data = & iface->wireless_data;
  }
  else ;
  
#line 863 
  dev->wireless_handlers = & hostap_iw_handler_def;
  
#line 864 
  dev->watchdog_timeo = 500;
  
#line 866 
  switch (type) {
    case 2: 
#line 867 
    ;
    
#line 868 
    dev->tx_queue_len = 0UL;
    
#line 869 
    dev->netdev_ops = & hostap_mgmt_netdev_ops;
    
#line 870 
    dev->type = (unsigned short)801U;
    
#line 871 
    dev->header_ops = & hostap_80211_ops;
    
#line 872 
    goto ldv_47615;
    case 0: 
#line 873 
    ;
    
#line 874 
    dev->netdev_ops = & hostap_master_ops;
    
#line 875 
    goto ldv_47615;
    default: 
#line 876 
    ;
    
#line 877 
    dev->tx_queue_len = 0UL;
    
#line 878 
    dev->netdev_ops = & hostap_netdev_ops;
  }
  ldv_47615: 
#line 881 
  ;
  
#line 881 
  dev->mtu = (unsigned int)local->mtu;
  
#line 884 
  dev->ethtool_ops = & prism2_ethtool_ops;
  
#line 885 
  return;
}


#line 888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_enable_hostapd(local_info_t *local, int rtnl_locked)
{
  int __retres;
  
#line 890 
  struct net_device *dev = local->dev;
  
#line 892 
  if (local->apdev != (struct net_device *)0) {
    
#line 893 
    __retres = -17;
    
#line 893 
    goto return_label;
  }
  else ;
  
#line 895 
  printk("\001",(char *)(& dev->name));
  
#line 897 
  local->apdev = hostap_add_interface(local,2,rtnl_locked,(char const *)(& (local->ddev)->name),"ap");
  
#line 900 
  if (local->apdev == (struct net_device *)0) {
    
#line 901 
    __retres = -12;
    
#line 901 
    goto return_label;
  }
  else ;
  
#line 903 
  __retres = 0;
  return_label: 
#line 903 
                return __retres;
}


#line 907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_disable_hostapd(local_info_t *local, int rtnl_locked)
{
  int __retres;
  
#line 909 
  struct net_device *dev = local->dev;
  
#line 911 
  printk("\001",(char *)(& dev->name));
  
#line 913 
  hostap_remove_interface(local->apdev,rtnl_locked,1);
  
#line 914 
  local->apdev = (struct net_device *)0;
  
#line 916 
  __retres = 0;
  
#line 916 
  return __retres;
}


#line 920  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_enable_hostapd_sta(local_info_t *local, int rtnl_locked)
{
  int __retres;
  
#line 922 
  struct net_device *dev = local->dev;
  
#line 924 
  if (local->stadev != (struct net_device *)0) {
    
#line 925 
    __retres = -17;
    
#line 925 
    goto return_label;
  }
  else ;
  
#line 927 
  printk("\001",(char *)(& dev->name));
  
#line 929 
  local->stadev = hostap_add_interface(local,3,rtnl_locked,(char const *)(& (local->ddev)->name),"sta");
  
#line 932 
  if (local->stadev == (struct net_device *)0) {
    
#line 933 
    __retres = -12;
    
#line 933 
    goto return_label;
  }
  else ;
  
#line 935 
  __retres = 0;
  return_label: 
#line 935 
                return __retres;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_disable_hostapd_sta(local_info_t *local, int rtnl_locked)
{
  int __retres;
  
#line 941 
  struct net_device *dev = local->dev;
  
#line 943 
  printk("\001",(char *)(& dev->name));
  
#line 945 
  hostap_remove_interface(local->stadev,rtnl_locked,1);
  
#line 946 
  local->stadev = (struct net_device *)0;
  
#line 948 
  __retres = 0;
  
#line 948 
  return __retres;
}


#line 952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_hostapd(local_info_t *local, int val, int rtnl_locked)
{
  int __retres;
  int ret;
  
#line 956 
  if ((unsigned int)val > 1U) {
    
#line 957 
    __retres = -22;
    
#line 957 
    goto return_label;
  }
  else ;
  
#line 959 
  if (local->hostapd == val) {
    
#line 960 
    __retres = 0;
    
#line 960 
    goto return_label;
  }
  else ;
  
#line 962 
  if (val != 0) {
    
#line 963 
    ret = hostap_enable_hostapd(local,rtnl_locked);
    
#line 964 
    if (ret == 0) 
#line 965 
                  local->hostapd = 1; else ;
  }
  else {
    
#line 967 
    local->hostapd = 0;
    
#line 968 
    ret = hostap_disable_hostapd(local,rtnl_locked);
    
#line 969 
    if (ret != 0) 
#line 970 
                  local->hostapd = 1; else ;
  }
  
#line 973 
  __retres = ret;
  return_label: 
#line 973 
                return __retres;
}


#line 977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int hostap_set_hostapd_sta(local_info_t *local, int val, int rtnl_locked)
{
  int __retres;
  int ret;
  
#line 981 
  if ((unsigned int)val > 1U) {
    
#line 982 
    __retres = -22;
    
#line 982 
    goto return_label;
  }
  else ;
  
#line 984 
  if (local->hostapd_sta == val) {
    
#line 985 
    __retres = 0;
    
#line 985 
    goto return_label;
  }
  else ;
  
#line 987 
  if (val != 0) {
    
#line 988 
    ret = hostap_enable_hostapd_sta(local,rtnl_locked);
    
#line 989 
    if (ret == 0) 
#line 990 
                  local->hostapd_sta = 1; else ;
  }
  else {
    
#line 992 
    local->hostapd_sta = 0;
    
#line 993 
    ret = hostap_disable_hostapd_sta(local,rtnl_locked);
    
#line 994 
    if (ret != 0) 
#line 995 
                  local->hostapd_sta = 1; else ;
  }
  
#line 999 
  __retres = ret;
  return_label: 
#line 999 
                return __retres;
}


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int prism2_update_comms_qual(struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct hfa384x_comms_quality sq;
  
#line 1007 
  int ret = 0;
  
#line 1010 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1011 
  local = iface->local;
  
#line 1012 
  if (local->sta_fw_ver == 0U) 
#line 1013 
                               ret = -1;
  else 
    
#line 1014 
    if (local->sta_fw_ver > 66304U) {
      int tmp_0;
      
#line 1015 
      tmp_0 = (*((local->func)->get_rid))(local->dev,(unsigned short)64849,(void *)(& sq),6,1);
      
#line 1015 
      if (tmp_0 >= 0) {
        
#line 1018 
        local->comms_qual = (int)((short)sq.comm_qual);
        
#line 1019 
        local->avg_signal = (int)((short)sq.signal_level);
        
#line 1020 
        local->avg_noise = (int)((short)sq.noise_level);
        
#line 1021 
        local->last_comms_qual_update = jiffies;
      }
      else 
#line 1023 
           ret = -1;
    }
    else {
      int tmp_1;
      
#line 1025 
      tmp_1 = (*((local->func)->get_rid))(local->dev,(unsigned short)64835,(void *)(& sq),6,1);
      
#line 1025 
      if (tmp_1 >= 0) {
        
#line 1027 
        local->comms_qual = (int)sq.comm_qual;
        
#line 1028 
        local->avg_signal = ((int)sq.signal_level * 100) / 255 + 156;
        
#line 1030 
        local->avg_noise = ((int)sq.noise_level * 100) / 255 + 156;
        
#line 1032 
        local->last_comms_qual_update = jiffies;
      }
      else 
#line 1034 
           ret = -1;
    }
  
#line 1037 
  return ret;
}


#line 1041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int prism2_sta_send_mgmt(local_info_t *local, u8 *dst, u16 stype, u8 *body, size_t bodylen)
{
  int __retres;
  struct sk_buff *skb;
  struct hostap_ieee80211_mgmt *mgmt;
  struct hostap_skb_tx_data *meta;
  
#line 1047 
  struct net_device *dev = local->dev;
  
#line 1049 
  skb = dev_alloc_skb((unsigned int)bodylen + 24U);
  
#line 1050 
  if (skb == (struct sk_buff *)0) {
    
#line 1051 
    __retres = -12;
    
#line 1051 
    goto return_label;
  }
  else ;
  
#line 1053 
  mgmt = (struct hostap_ieee80211_mgmt *)skb_put(skb,24U);
  
#line 1055 
  memset((void *)mgmt,0,24UL);
  
#line 1056 
  mgmt->frame_control = stype;
  
#line 1057 
  memcpy((void *)(& mgmt->da),(void const *)dst,6UL);
  
#line 1058 
  memcpy((void *)(& mgmt->sa),(void const *)dev->dev_addr,6UL);
  
#line 1059 
  memcpy((void *)(& mgmt->bssid),(void const *)dst,6UL);
  
#line 1060 
  if (body != (u8 *)0U) {
    unsigned char *tmp_0;
    
#line 1061 
    ;
    
#line 1061 
    ;
    
#line 1061 
    tmp_0 = skb_put(skb,(unsigned int)bodylen);
    
#line 1061 
    memcpy((void *)tmp_0,(void const *)body,bodylen);
  }
  else ;
  
#line 1063 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 1064 
  memset((void *)meta,0,40UL);
  
#line 1065 
  meta->magic = 4035589794U;
  
#line 1066 
  meta->iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1068 
  skb->dev = dev;
  
#line 1069 
  skb_reset_mac_header(skb);
  
#line 1070 
  skb_reset_network_header(skb);
  
#line 1071 
  dev_queue_xmit(skb);
  
#line 1073 
  __retres = 0;
  return_label: 
#line 1073 
                return __retres;
}


#line 1077  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
int prism2_sta_deauth(local_info_t *local, u16 reason)
{
  int __retres;
  union iwreq_data wrqu;
  int ret;
  
#line 1081 
  __le16 val = reason;
  
#line 1083 
  if (local->iw_mode != 2) {
    
#line 1086 
    __retres = 0;
    
#line 1086 
    goto return_label;
  }
  else {
    bool tmp;
    
#line 1083 
    tmp = is_zero_ether_addr((u8 const *)(& local->bssid));
    
#line 1083 
    if ((int)tmp != 0) {
      
#line 1086 
      __retres = 0;
      
#line 1086 
      goto return_label;
    }
    else {
      bool tmp_0;
      
#line 1084 
      tmp_0 = ether_addr_equal((u8 const *)(& local->bssid),(u8 const *)"DDDDDD");
      
#line 1084 
      if ((int)tmp_0 != 0) {
        
#line 1086 
        __retres = 0;
        
#line 1086 
        goto return_label;
      }
      else ;
    }
  }
  
#line 1088 
  ret = prism2_sta_send_mgmt(local,(u8 *)(& local->bssid),(unsigned short)192,(u8 *)(& val),2UL);
  
#line 1090 
  eth_zero_addr((u8 *)(& wrqu.ap_addr.sa_data));
  
#line 1091 
  wireless_send_event(local->dev,35605U,& wrqu,(char const *)0);
  
#line 1092 
  __retres = ret;
  return_label: 
#line 1092 
                return __retres;
}


#line 1098  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static int hostap_init(void)
{
  int __retres;
  
#line 1100 
  if (init_net.proc_net != (struct proc_dir_entry *)0) {
    
#line 1101 
    hostap_proc = proc_mkdir("hostap",init_net.proc_net);
    
#line 1102 
    if (hostap_proc == (struct proc_dir_entry *)0) 
#line 1103 
                                                   printk("\001"); else ;
  }
  else 
#line 1106 
       hostap_proc = (struct proc_dir_entry *)0;
  
#line 1108 
  __retres = 0;
  
#line 1108 
  return __retres;
}


#line 1112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static void hostap_exit(void)
{
  
#line 1114 
  if (hostap_proc != (struct proc_dir_entry *)0) {
    
#line 1115 
    hostap_proc = (struct proc_dir_entry *)0;
    
#line 1116 
    remove_proc_entry("hostap",init_net.proc_net);
  }
  else ;
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_word[16U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'w', (char)'o', (char)'r', (char)'d', (char)'\000'};

#line 1121 
struct kernel_symbol const __ksymtab_hostap_set_word;


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_word = {.value = (unsigned long)(& hostap_set_word), .name = (char const *)(& __kstrtab_hostap_set_word)};

#line 1122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_string[18U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'s', (char)'t', (char)'r', (char)'i', (char)'n', (char)'g', (char)'\000'};

#line 1122 
struct kernel_symbol const __ksymtab_hostap_set_string;


#line 1122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_string = {.value = (unsigned long)(& hostap_set_string), .name = (char const *)(& __kstrtab_hostap_set_string)};

#line 1123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_get_porttype[20U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'o', (char)'r', (char)'t', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'};

#line 1123 
struct kernel_symbol const __ksymtab_hostap_get_porttype;


#line 1123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_get_porttype = {.value = (unsigned long)(& hostap_get_porttype), .name = (char const *)(& __kstrtab_hostap_get_porttype)};

#line 1124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_encryption[22U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'e', (char)'n', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'};

#line 1124 
struct kernel_symbol const __ksymtab_hostap_set_encryption;


#line 1124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_encryption = {.value = (unsigned long)(& hostap_set_encryption), .name = (char const *)(& __kstrtab_hostap_set_encryption)};

#line 1125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_antsel[18U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'a', (char)'n', (char)'t', (char)'s', (char)'e', (char)'l', (char)'\000'};

#line 1125 
struct kernel_symbol const __ksymtab_hostap_set_antsel;


#line 1125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_antsel = {.value = (unsigned long)(& hostap_set_antsel), .name = (char const *)(& __kstrtab_hostap_set_antsel)};

#line 1126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_roaming[19U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'r', (char)'o', (char)'a', (char)'m', (char)'i', (char)'n', (char)'g', (char)'\000'};

#line 1126 
struct kernel_symbol const __ksymtab_hostap_set_roaming;


#line 1126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_roaming = {.value = (unsigned long)(& hostap_set_roaming), .name = (char const *)(& __kstrtab_hostap_set_roaming)};

#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_auth_algs[21U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'a', (char)'u', (char)'t', (char)'h', (char)'_', (char)'a', (char)'l', (char)'g', (char)'s', (char)'\000'};

#line 1127 
struct kernel_symbol const __ksymtab_hostap_set_auth_algs;


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_auth_algs = {.value = (unsigned long)(& hostap_set_auth_algs), .name = (char const *)(& __kstrtab_hostap_set_auth_algs)};

#line 1128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_dump_rx_header[22U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'d', (char)'u', (char)'m', (char)'p', (char)'_', (char)'r', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'\000'};

#line 1128 
struct kernel_symbol const __ksymtab_hostap_dump_rx_header;


#line 1128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_dump_rx_header = {.value = (unsigned long)(& hostap_dump_rx_header), .name = (char const *)(& __kstrtab_hostap_dump_rx_header)};

#line 1129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_dump_tx_header[22U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'d', (char)'u', (char)'m', (char)'p', (char)'_', (char)'t', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'\000'};

#line 1129 
struct kernel_symbol const __ksymtab_hostap_dump_tx_header;


#line 1129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_dump_tx_header = {.value = (unsigned long)(& hostap_dump_tx_header), .name = (char const *)(& __kstrtab_hostap_dump_tx_header)};

#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_80211_get_hdrlen[24U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'8', (char)'0', (char)'2', (char)'1', (char)'1', (char)'_', (char)'g', (char)'e', (char)'t', (char)'_', (char)'h', (char)'d', (char)'r', (char)'l', (char)'e', (char)'n', (char)'\000'};

#line 1130 
struct kernel_symbol const __ksymtab_hostap_80211_get_hdrlen;


#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_80211_get_hdrlen = {.value = (unsigned long)(& hostap_80211_get_hdrlen), .name = (char const *)(& __kstrtab_hostap_80211_get_hdrlen)};

#line 1131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_setup_dev[17U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'u', (char)'p', (char)'_', (char)'d', (char)'e', (char)'v', (char)'\000'};

#line 1131 
struct kernel_symbol const __ksymtab_hostap_setup_dev;


#line 1131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_setup_dev = {.value = (unsigned long)(& hostap_setup_dev), .name = (char const *)(& __kstrtab_hostap_setup_dev)};

#line 1132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_multicast_list_queue[32U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'l', (char)'i', (char)'s', (char)'t', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'};

#line 1132 
struct kernel_symbol const __ksymtab_hostap_set_multicast_list_queue;


#line 1132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_multicast_list_queue = {.value = (unsigned long)(& hostap_set_multicast_list_queue), .name = (char const *)(& __kstrtab_hostap_set_multicast_list_queue)};

#line 1133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_hostapd[19U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'\000'};

#line 1133 
struct kernel_symbol const __ksymtab_hostap_set_hostapd;


#line 1133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_hostapd = {.value = (unsigned long)(& hostap_set_hostapd), .name = (char const *)(& __kstrtab_hostap_set_hostapd)};

#line 1134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_set_hostapd_sta[23U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'e', (char)'t', (char)'_', (char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'_', (char)'s', (char)'t', (char)'a', (char)'\000'};

#line 1134 
struct kernel_symbol const __ksymtab_hostap_set_hostapd_sta;


#line 1134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_set_hostapd_sta = {.value = (unsigned long)(& hostap_set_hostapd_sta), .name = (char const *)(& __kstrtab_hostap_set_hostapd_sta)};

#line 1135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_add_interface[21U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'a', (char)'d', (char)'d', (char)'_', (char)'i', (char)'n', (char)'t', (char)'e', (char)'r', (char)'f', (char)'a', (char)'c', (char)'e', (char)'\000'};

#line 1135 
struct kernel_symbol const __ksymtab_hostap_add_interface;


#line 1135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_add_interface = {.value = (unsigned long)(& hostap_add_interface), .name = (char const *)(& __kstrtab_hostap_add_interface)};

#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_hostap_remove_interface[24U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'r', (char)'e', (char)'m', (char)'o', (char)'v', (char)'e', (char)'_', (char)'i', (char)'n', (char)'t', (char)'e', (char)'r', (char)'f', (char)'a', (char)'c', (char)'e', (char)'\000'};

#line 1136 
struct kernel_symbol const __ksymtab_hostap_remove_interface;


#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_hostap_remove_interface = {.value = (unsigned long)(& hostap_remove_interface), .name = (char const *)(& __kstrtab_hostap_remove_interface)};

#line 1137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
static char const __kstrtab_prism2_update_comms_qual[25U] = {(char)'p', (char)'r', (char)'i', (char)'s', (char)'m', (char)'2', (char)'_', (char)'u', (char)'p', (char)'d', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'m', (char)'m', (char)'s', (char)'_', (char)'q', (char)'u', (char)'a', (char)'l', (char)'\000'};

#line 1137 
struct kernel_symbol const __ksymtab_prism2_update_comms_qual;


#line 1137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_main.c"
struct kernel_symbol const __ksymtab_prism2_update_comms_qual = {.value = (unsigned long)(& prism2_update_comms_qual), .name = (char const *)(& __kstrtab_prism2_update_comms_qual)};

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 59 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 62 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
int ldv_emg_wrapper_prism2_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 68 
  tmp = prism2_close(arg0);
  
#line 68 
  return tmp;
}


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
int ldv_emg_hostap_init(void)
{
  int tmp;
  
#line 73 
  tmp = hostap_init();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
void ldv_emg_hostap_exit(void)
{
  
#line 77 
  hostap_exit();
  
#line 78 
  return;
}


#line 449  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void *kmalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 452 
  tmp = ldv_kmalloc(size,flags);
  
#line 452 
  return tmp;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_72(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 755 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 755 
  return tmp;
}


#line 759  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv_free_netdev_73(struct net_device *ldv_func_arg1)
{
  
#line 763 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 764 
  return;
}


#line 767  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv_unregister_netdev_74(struct net_device *ldv_func_arg1)
{
  
#line 771 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 772 
  return;
}


#line 775  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 779 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 781 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 782 
  return;
}


#line 785  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 789 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 791 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 792 
  return;
}


#line 795  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 799 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 801 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 802 
  return;
}


#line 805  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_main.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 809 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 811 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 812 
  return;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc_1(atomic_t *v);


#line 114 
static void atomic_dec_1(atomic_t *v);


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 843 
struct sk_buff *skb_copy(struct sk_buff const *, gfp_t);


#line 853 
struct sk_buff *skb_realloc_headroom(struct sk_buff *, unsigned int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cloned(struct sk_buff const *skb)
{
  int tmp_1;
  
#line 1106 
  if ((unsigned int)*((unsigned char *)skb + 142UL) != 0U) {
    int tmp_0;
    unsigned char *tmp;
    
#line 1107 
    tmp = skb_end_pointer(skb);
    
#line 1106 
    tmp_0 = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
    
#line 1106 
    if ((tmp_0 & 65535) != 1) 
#line 1106 
                              tmp_1 = 1; else 
#line 1106 
                                              tmp_1 = 0;
  }
  else 
#line 1106 
       tmp_1 = 0;
  
#line 1106 
  return tmp_1;
}


#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_unshare(struct sk_buff *skb, gfp_t pri)
{
  int tmp_0;
  
#line 1232 
  if ((pri & 16U) != 0U) 
#line 1232 
                         __might_sleep("include/linux/skbuff.h",1232,0); else ;
  
#line 1233 
  tmp_0 = skb_cloned((struct sk_buff const *)skb);
  
#line 1233 
  if (tmp_0 != 0) {
    
#line 1234 
    struct sk_buff *nskb = skb_copy((struct sk_buff const *)skb,pri);
    
#line 1237 
    if ((long)(nskb != (struct sk_buff *)0) != 0L) 
#line 1238 
                                                   consume_skb(skb); else 
                                                                    
#line 1240 
                                                                    kfree_skb(skb);
    
#line 1241 
    skb = nskb;
  }
  else ;
  
#line 1243 
  return skb;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211.h"
void hostap_dump_tx_80211(char const *name, struct sk_buff *skb);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
static unsigned char rfc1042_header_0[6U] = {(unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
static unsigned char bridge_tunnel_header_0[6U] = {(unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)0U, (unsigned char)248U};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
void hostap_dump_tx_80211(char const *name, struct sk_buff *skb)
{
  struct ieee80211_hdr *hdr;
  u16 fc;
  char *tmp;
  char *tmp_0;
  
#line 25 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 27 
  printk("\001",name,skb->len,jiffies);
  
#line 30 
  if (skb->len <= 1U) 
#line 31 
                      goto return_label; else ;
  
#line 33 
  fc = hdr->frame_control;
  
#line 37 
  if (((int)fc & 512) != 0) 
#line 37 
                            tmp = (char *)" [FromDS]"; else 
#line 37 
                                                            tmp = (char *)"";
  
#line 36 
  if (((int)fc & 256) != 0) 
#line 36 
                            tmp_0 = (char *)" [ToDS]"; else 
#line 36 
                                                            tmp_0 = (char *)"";
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  printk("\001",(int)fc,((int)fc >> 2) & 3,((int)fc >> 4) & 15,tmp_0,tmp);
  
#line 40 
  if (skb->len <= 23U) {
    
#line 41 
    printk("\n");
    
#line 42 
    goto return_label;
  }
  else ;
  
#line 45 
  printk(" dur=0x%04x seq=0x%04x\n",(int)hdr->duration_id,(int)hdr->seq_ctrl);
  
#line 48 
  printk("\001",(u8 *)(& hdr->addr1));
  
#line 49 
  printk(" A2=%pM",(u8 *)(& hdr->addr2));
  
#line 50 
  printk(" A3=%pM",(u8 *)(& hdr->addr3));
  
#line 51 
  if (skb->len > 29U) 
#line 52 
                      printk(" A4=%pM",(u8 *)(& hdr->addr4)); else ;
  
#line 53 
  printk("\n");
  return_label: 
#line 54 
                return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
netdev_tx_t hostap_data_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int need_headroom;
  struct ieee80211_hdr hdr;
  u16 fc;
  u8 *encaps_data;
  int hdr_len;
  int encaps_len;
  int skip_header_bytes;
  struct hostap_skb_tx_data *meta;
  int tmp_8;
  unsigned char *tmp_10;
  
#line 65 
  int need_tailroom = 0;
  
#line 67 
  u16 ethertype = (unsigned short)0U;
  
#line 70 
  enum ldv_32449 use_wds = WDS_NO;
  
#line 73 
  int to_assoc_ap = 0;
  
#line 76 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 77 
  local = iface->local;
  
#line 79 
  if (skb->len <= 13U) {
    
#line 80 
    printk("\001",(char *)(& dev->name),skb->len);
    
#line 82 
    kfree_skb(skb);
    
#line 83 
    __retres = NETDEV_TX_OK;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 86 
  if (local->ddev != dev) {
    int tmp_0;
    
#line 89 
    if (local->iw_mode == 3 && ((unsigned long)local->wds_type & 4UL) == 0UL) 
      
#line 89 
      tmp_0 = 1; else 
#line 89 
                      tmp_0 = 2;
    
#line 87 
    use_wds = (enum ldv_32449)tmp_0;
    
#line 90 
    if (local->stadev == dev) {
      
#line 91 
      to_assoc_ap = 1;
      
#line 92 
      use_wds = WDS_NO;
    }
    else 
      
#line 93 
      if (local->apdev == dev) {
        
#line 94 
        printk("\001",(char *)(& dev->name));
        
#line 96 
        kfree_skb(skb);
        
#line 97 
        __retres = NETDEV_TX_OK;
        
#line 97 
        goto return_label;
      }
      else ;
  }
  else 
    
#line 100 
    if (local->iw_mode == 4) {
      
#line 101 
      printk("\001",(char *)(& dev->name));
      
#line 103 
      kfree_skb(skb);
      
#line 104 
      __retres = NETDEV_TX_OK;
      
#line 104 
      goto return_label;
    }
    else 
      
#line 105 
      if (local->iw_mode == 2 && ((unsigned long)local->wds_type & 2UL) != 0UL) {
        int tmp_2;
        bool tmp_1;
        
#line 107 
        tmp_1 = ether_addr_equal((u8 const *)(skb->data + 6U),(u8 const *)dev->dev_addr);
        
#line 107 
        if (tmp_1) 
#line 107 
                   tmp_2 = 0; else 
#line 107 
                                   tmp_2 = 1;
        
#line 107 
        if (tmp_2) 
#line 110 
                   use_wds = WDS_COMPLIANT_FRAME; else ;
      }
      else ;
  
#line 121 
  ethertype = (unsigned short)(((int)*(skb->data + 12U) << 8) | (int)*(skb->data + 13U));
  
#line 123 
  memset((void *)(& hdr),0,30UL);
  
#line 126 
  encaps_data = (u8 *)0U;
  
#line 127 
  encaps_len = 0;
  
#line 128 
  skip_header_bytes = 14;
  
#line 129 
  if ((unsigned int)ethertype == 33011U || (unsigned int)ethertype == 33079U) {
    
#line 130 
    encaps_data = (u8 *)(& bridge_tunnel_header_0);
    
#line 131 
    encaps_len = 6;
    
#line 132 
    skip_header_bytes += -2;
  }
  else 
    
#line 133 
    if ((unsigned int)ethertype > 1535U) {
      
#line 134 
      encaps_data = (u8 *)(& rfc1042_header_0);
      
#line 135 
      encaps_len = 6;
      
#line 136 
      skip_header_bytes += -2;
    }
    else ;
  
#line 139 
  fc = (unsigned short)8U;
  
#line 140 
  hdr_len = 24;
  
#line 142 
  if (use_wds != (unsigned int)WDS_NO) {
    
#line 151 
    if (use_wds == (unsigned int)WDS_COMPLIANT_FRAME) {
      
#line 152 
      fc = (unsigned short)((unsigned int)fc | 768U);
      
#line 155 
      skb_copy_from_linear_data_offset((struct sk_buff const *)skb,6,(void *)(& hdr.addr4),6U);
      
#line 157 
      hdr_len += 6;
    }
    else {
      
#line 161 
      fc = (unsigned short)((unsigned int)fc | 256U);
      
#line 169 
      skb_copy_from_linear_data_offset((struct sk_buff const *)skb,6,(void *)(& hdr.addr4),6U);
      
#line 171 
      need_tailroom += 6;
    }
    
#line 176 
    if (((unsigned long)local->wds_type & 1UL) != 0UL) {
      bool tmp_3;
      
#line 176 
      tmp_3 = is_multicast_ether_addr((u8 const *)skb->data);
      
#line 176 
      if ((int)tmp_3 != 0) 
#line 178 
                           eth_broadcast_addr((u8 *)(& hdr.addr1)); else 
                                                                    
#line 176 
                                                                    goto _LAND;
    }
    else {
      _LAND: 
#line 179 
      ;
      
#line 179 
      if (iface->type == (unsigned int)4) 
#line 180 
                                          memcpy((void *)(& hdr.addr1),(void const *)(& iface->u.wds.remote_addr),6UL); else 
                                                                    
#line 183 
                                                                    memcpy((void *)(& hdr.addr1),(void const *)(& local->bssid),6UL);
    }
    
#line 184 
    memcpy((void *)(& hdr.addr2),(void const *)dev->dev_addr,6UL);
    
#line 185 
    skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& hdr.addr3),6U);
  }
  else 
    
#line 186 
    if (local->iw_mode == 3 && to_assoc_ap == 0) {
      
#line 187 
      fc = (unsigned short)((unsigned int)fc | 512U);
      
#line 189 
      skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& hdr.addr1),6U);
      
#line 190 
      memcpy((void *)(& hdr.addr2),(void const *)dev->dev_addr,6UL);
      
#line 191 
      skb_copy_from_linear_data_offset((struct sk_buff const *)skb,6,(void *)(& hdr.addr3),6U);
    }
    else 
      
#line 193 
      if (local->iw_mode == 2 || to_assoc_ap != 0) {
        char *tmp_4;
        
#line 194 
        fc = (unsigned short)((unsigned int)fc | 256U);
        
#line 197 
        if (to_assoc_ap != 0) 
#line 197 
                              tmp_4 = (char *)(& local->assoc_ap_addr); else 
                                                                    
#line 197 
                                                                    tmp_4 = (char *)(& local->bssid);
        
#line 196 
        memcpy((void *)(& hdr.addr1),(void const *)tmp_4,6UL);
        
#line 198 
        skb_copy_from_linear_data_offset((struct sk_buff const *)skb,6,(void *)(& hdr.addr2),6U);
        
#line 200 
        skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& hdr.addr3),6U);
      }
      else 
        
#line 201 
        if (local->iw_mode == 1) {
          
#line 203 
          skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& hdr.addr1),6U);
          
#line 204 
          skb_copy_from_linear_data_offset((struct sk_buff const *)skb,6,(void *)(& hdr.addr2),6U);
          
#line 206 
          memcpy((void *)(& hdr.addr3),(void const *)(& local->bssid),6UL);
        }
        else ;
  
#line 209 
  hdr.frame_control = fc;
  
#line 211 
  skb_pull(skb,(unsigned int)skip_header_bytes);
  
#line 212 
  need_headroom = ((local->func)->need_tx_headroom + hdr_len) + encaps_len;
  
#line 213 
  tmp_8 = skb_tailroom((struct sk_buff const *)skb);
  
#line 213 
  ;
  
#line 213 
  if (tmp_8 < need_tailroom) {
    int tmp_5;
    
#line 214 
    skb = skb_unshare(skb,32U);
    
#line 215 
    if (skb == (struct sk_buff *)0) {
      
#line 216 
      iface->stats.tx_dropped += 1UL;
      
#line 217 
      __retres = NETDEV_TX_OK;
      
#line 217 
      goto return_label;
    }
    else ;
    
#line 219 
    tmp_5 = pskb_expand_head(skb,need_headroom,need_tailroom,32U);
    
#line 219 
    if (tmp_5 != 0) {
      
#line 221 
      kfree_skb(skb);
      
#line 222 
      iface->stats.tx_dropped += 1UL;
      
#line 223 
      __retres = NETDEV_TX_OK;
      
#line 223 
      goto return_label;
    }
    else ;
  }
  else {
    unsigned int tmp_7;
    
#line 225 
    tmp_7 = skb_headroom((struct sk_buff const *)skb);
    
#line 225 
    ;
    
#line 225 
    if (tmp_7 < (unsigned int)need_headroom) {
      
#line 226 
      struct sk_buff *tmp_6 = skb;
      
#line 227 
      skb = skb_realloc_headroom(skb,(unsigned int)need_headroom);
      
#line 228 
      kfree_skb(tmp_6);
      
#line 229 
      if (skb == (struct sk_buff *)0) {
        
#line 230 
        iface->stats.tx_dropped += 1UL;
        
#line 231 
        __retres = NETDEV_TX_OK;
        
#line 231 
        goto return_label;
      }
      else ;
    }
    else {
      
#line 234 
      skb = skb_unshare(skb,32U);
      
#line 235 
      if (skb == (struct sk_buff *)0) {
        
#line 236 
        iface->stats.tx_dropped += 1UL;
        
#line 237 
        __retres = NETDEV_TX_OK;
        
#line 237 
        goto return_label;
      }
      else ;
    }
  }
  
#line 241 
  if (encaps_data != (u8 *)0U) {
    unsigned char *tmp_9;
    
#line 242 
    ;
    
#line 242 
    ;
    
#line 242 
    tmp_9 = skb_push(skb,(unsigned int)encaps_len);
    
#line 242 
    memcpy((void *)tmp_9,(void const *)encaps_data,(unsigned long)encaps_len);
  }
  else ;
  
#line 243 
  ;
  
#line 243 
  tmp_10 = skb_push(skb,(unsigned int)hdr_len);
  
#line 243 
  memcpy((void *)tmp_10,(void const *)(& hdr),(unsigned long)hdr_len);
  
#line 244 
  if (use_wds == (unsigned int)WDS_OWN_FRAME) {
    unsigned char *tmp_11;
    
#line 245 
    tmp_11 = skb_put(skb,6U);
    
#line 245 
    memcpy((void *)tmp_11,(void const *)(& hdr.addr4),6UL);
  }
  else ;
  
#line 248 
  iface->stats.tx_packets += 1UL;
  
#line 249 
  iface->stats.tx_bytes += (unsigned long)skb->len;
  
#line 251 
  skb_reset_mac_header(skb);
  
#line 252 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 253 
  memset((void *)meta,0,40UL);
  
#line 254 
  meta->magic = 4035589794U;
  
#line 255 
  if (use_wds != (unsigned int)WDS_NO) 
#line 256 
                                       meta->flags = (unsigned char)((unsigned int)meta->flags | 1U); else ;
  
#line 257 
  meta->ethertype = ethertype;
  
#line 258 
  meta->iface = iface;
  
#line 261 
  skb->dev = local->dev;
  
#line 262 
  dev_queue_xmit(skb);
  
#line 263 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 263 
                return __retres;
}


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
netdev_tx_t hostap_mgmt_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct hostap_skb_tx_data *meta;
  struct ieee80211_hdr *hdr;
  u16 fc;
  
#line 277 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 278 
  local = iface->local;
  
#line 280 
  if (skb->len <= 9U) {
    
#line 281 
    printk("\001",(char *)(& dev->name),skb->len);
    
#line 283 
    kfree_skb(skb);
    
#line 284 
    __retres = NETDEV_TX_OK;
    
#line 284 
    goto return_label;
  }
  else ;
  
#line 287 
  iface->stats.tx_packets += 1UL;
  
#line 288 
  iface->stats.tx_bytes += (unsigned long)skb->len;
  
#line 290 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 291 
  memset((void *)meta,0,40UL);
  
#line 292 
  meta->magic = 4035589794U;
  
#line 293 
  meta->iface = iface;
  
#line 295 
  if (skb->len > 31U) {
    int tmp_0;
    
#line 296 
    hdr = (struct ieee80211_hdr *)skb->data;
    
#line 297 
    fc = hdr->frame_control;
    
#line 298 
    tmp_0 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
    
#line 298 
    if (tmp_0 != 0) {
      
#line 298 
      if (((int)fc & 240) == 0) {
        
#line 300 
        u8 *pos = skb->data + 30U;
        
#line 302 
        meta->ethertype = (unsigned short)(((int)*pos << 8) | (int)*(pos + 1U));
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 307 
  skb->dev = local->dev;
  
#line 308 
  dev_queue_xmit(skb);
  
#line 309 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 309 
                return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
static struct sk_buff *hostap_tx_encrypt(struct sk_buff *skb, struct lib80211_crypt_data *crypt)
{
  struct sk_buff *__retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct ieee80211_hdr *hdr;
  int prefix_len;
  int postfix_len;
  int hdr_len;
  int res;
  unsigned int tmp_2;
  
#line 322 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)skb->dev);
  
#line 323 
  local = iface->local;
  
#line 325 
  if (skb->len <= 23U) {
    
#line 326 
    kfree_skb(skb);
    
#line 327 
    __retres = (struct sk_buff *)0;
    
#line 327 
    goto return_label;
  }
  else ;
  
#line 330 
  if (local->tkip_countermeasures != 0) {
    int tmp_1;
    
#line 330 
    tmp_1 = strcmp((crypt->ops)->name,"TKIP");
    
#line 330 
    if (tmp_1 == 0) {
      int tmp_0;
      
#line 332 
      hdr = (struct ieee80211_hdr *)skb->data;
      
#line 333 
      tmp_0 = net_ratelimit();
      
#line 333 
      if (tmp_0 != 0) 
#line 334 
                      printk("\001",(char *)(& (local->dev)->name),(u8 *)(& hdr->addr1)); else ;
      
#line 338 
      kfree_skb(skb);
      
#line 339 
      __retres = (struct sk_buff *)0;
      
#line 339 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 342 
  skb = skb_unshare(skb,32U);
  
#line 343 
  if (skb == (struct sk_buff *)0) {
    
#line 344 
    __retres = (struct sk_buff *)0;
    
#line 344 
    goto return_label;
  }
  else ;
  
#line 346 
  prefix_len = (crypt->ops)->extra_mpdu_prefix_len + (crypt->ops)->extra_msdu_prefix_len;
  
#line 348 
  postfix_len = (crypt->ops)->extra_mpdu_postfix_len + (crypt->ops)->extra_msdu_postfix_len;
  
#line 350 
  tmp_2 = skb_headroom((struct sk_buff const *)skb);
  
#line 350 
  ;
  
#line 350 
  if (tmp_2 < (unsigned int)prefix_len) 
#line 350 
                                        goto _LOR;
  else {
    int tmp_3;
    
#line 350 
    tmp_3 = skb_tailroom((struct sk_buff const *)skb);
    
#line 350 
    ;
    
#line 350 
    if (tmp_3 < postfix_len) {
      int tmp_4;
      _LOR: 
#line 351 
      tmp_4 = pskb_expand_head(skb,prefix_len,postfix_len,32U);
      
#line 351 
      if (tmp_4 != 0) {
        
#line 353 
        kfree_skb(skb);
        
#line 354 
        __retres = (struct sk_buff *)0;
        
#line 354 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  
#line 357 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 358 
  hdr_len = hostap_80211_get_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 362 
  atomic_inc_1(& crypt->refcnt);
  
#line 363 
  res = 0;
  
#line 364 
  if ((crypt->ops)->encrypt_msdu != (int (*)(struct sk_buff *, int , void *))0) 
    
#line 365 
    res = (*((crypt->ops)->encrypt_msdu))(skb,hdr_len,crypt->priv); else ;
  
#line 366 
  if (res == 0 && (crypt->ops)->encrypt_mpdu != (int (*)(struct sk_buff *, int , void *))0) 
    
#line 367 
    res = (*((crypt->ops)->encrypt_mpdu))(skb,hdr_len,crypt->priv); else ;
  
#line 368 
  atomic_dec_1(& crypt->refcnt);
  
#line 369 
  if (res < 0) {
    
#line 370 
    kfree_skb(skb);
    
#line 371 
    __retres = (struct sk_buff *)0;
    
#line 371 
    goto return_label;
  }
  else ;
  
#line 374 
  __retres = skb;
  return_label: 
#line 374 
                return __retres;
}


#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
netdev_tx_t hostap_master_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  u16 fc;
  struct hostap_tx_data tx;
  ap_tx_ret tx_ret;
  struct hostap_skb_tx_data *meta;
  struct ieee80211_hdr *hdr;
  int tmp_1;
  
#line 386 
  netdev_tx_t ret = (enum netdev_tx)16;
  
#line 391 
  int no_encrypt = 0;
  
#line 394 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 395 
  local = iface->local;
  
#line 397 
  tx.skb = skb;
  
#line 398 
  tx.sta_ptr = (void *)0;
  
#line 400 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 401 
  if (meta->magic != 4035589794U) {
    
#line 402 
    printk("\001",(char *)(& dev->name),meta->magic,4035589794U);
    
#line 405 
    ret = NETDEV_TX_OK;
    
#line 406 
    iface->stats.tx_dropped += 1UL;
    
#line 407 
    goto fail;
  }
  else ;
  
#line 410 
  if (local->host_encrypt != 0) {
    
#line 413 
    tx.crypt = local->crypt_info.crypt[local->crypt_info.tx_keyidx];
    
#line 414 
    tx.host_encrypt = 1;
  }
  else {
    
#line 416 
    tx.crypt = (struct lib80211_crypt_data *)0;
    
#line 417 
    tx.host_encrypt = 0;
  }
  
#line 420 
  if (skb->len <= 23U) {
    
#line 421 
    printk("\001",(char *)(& dev->name),skb->len);
    
#line 423 
    ret = NETDEV_TX_OK;
    
#line 424 
    iface->stats.tx_dropped += 1UL;
    
#line 425 
    goto fail;
  }
  else ;
  
#line 432 
  tx_ret = hostap_handle_sta_tx(local,& tx);
  
#line 433 
  skb = tx.skb;
  
#line 434 
  meta = (struct hostap_skb_tx_data *)(& skb->cb);
  
#line 435 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 436 
  fc = hdr->frame_control;
  
#line 437 
  switch ((unsigned int)tx_ret) {
    case (unsigned int)0: 
#line 438 
    ;
    
#line 439 
    goto ldv_46051;
    case (unsigned int)4: 
#line 440 
    ;
    
#line 441 
    if (local->ieee_802_1x != 0) {
      int tmp_0;
      
#line 441 
      tmp_0 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
      
#line 441 
      if (tmp_0 != 0) {
        
#line 442 
        if ((unsigned int)meta->ethertype != 34958U) {
          
#line 443 
          if (((unsigned long)meta->flags & 1UL) == 0UL) {
            
#line 445 
            printk("\001",(char *)(& dev->name),(int)meta->ethertype);
            
#line 448 
            hostap_dump_tx_80211((char const *)(& dev->name),skb);
            
#line 450 
            ret = NETDEV_TX_OK;
            
#line 451 
            iface->stats.tx_dropped += 1UL;
            
#line 452 
            goto fail;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 454 
    goto ldv_46051;
    case (unsigned int)1: 
#line 455 
    ;
    
#line 456 
    ret = NETDEV_TX_OK;
    
#line 457 
    iface->stats.tx_dropped += 1UL;
    
#line 458 
    goto fail;
    case (unsigned int)2: 
#line 459 
    ;
    
#line 460 
    goto fail;
    case (unsigned int)3: 
#line 461 
    ;
    
#line 464 
    ret = NETDEV_TX_OK;
    
#line 465 
    goto tx_exit;
  }
  ldv_46051: 
#line 471 
  ;
  
#line 471 
  if (((((unsigned int)fc & 3U) == 2U && local->ap != (struct ap_data *)0) && (unsigned int)(local->ap)->tx_callback_idx != 0U) && (unsigned int)meta->tx_cb_idx == 0U) {
    
#line 473 
    meta->tx_cb_idx = (local->ap)->tx_callback_idx;
    
#line 476 
    fc = (unsigned short)((unsigned int)fc & 65532U);
    
#line 477 
    hdr->frame_control = fc;
  }
  else ;
  
#line 480 
  tmp_1 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
  
#line 480 
  if (tmp_1 == 0) {
    
#line 481 
    no_encrypt = 1;
    
#line 482 
    tx.crypt = (struct lib80211_crypt_data *)0;
  }
  else ;
  
#line 485 
  if (((local->ieee_802_1x != 0 && (unsigned int)meta->ethertype == 34958U) && tx.crypt != (struct lib80211_crypt_data *)0) && ((int)fc & 16384) == 0) {
    
#line 487 
    no_encrypt = 1;
    
#line 490 
    tx.crypt = (struct lib80211_crypt_data *)0;
  }
  else ;
  
#line 493 
  if (tx.crypt != (struct lib80211_crypt_data *)0 && ((tx.crypt)->ops == (struct lib80211_crypto_ops *)0 || ((tx.crypt)->ops)->encrypt_mpdu == (int (*)(struct sk_buff *, int , void *))0)) 
    
#line 494 
    tx.crypt = (struct lib80211_crypt_data *)0;
  else 
    
#line 495 
    if ((tx.crypt != (struct lib80211_crypt_data *)0 || local->crypt_info.crypt[local->crypt_info.tx_keyidx] != (struct lib80211_crypt_data *)0) && no_encrypt == 0) {
      
#line 500 
      fc = (unsigned short)((unsigned int)fc | 16384U);
      
#line 501 
      hdr->frame_control = fc;
    }
    else 
      
#line 502 
      if (local->drop_unencrypted != 0) {
        int tmp_3;
        
#line 502 
        tmp_3 = ieee80211_is_data((unsigned short)((int)hdr->frame_control));
        
#line 502 
        if (tmp_3 != 0) {
          
#line 503 
          if ((unsigned int)meta->ethertype != 34958U) {
            int tmp_2;
            
#line 505 
            tmp_2 = net_ratelimit();
            
#line 505 
            if (tmp_2 != 0) 
#line 506 
                            printk("\001",(char *)(& dev->name)); else ;
            
#line 509 
            iface->stats.tx_dropped += 1UL;
            
#line 510 
            ret = NETDEV_TX_OK;
            
#line 511 
            goto fail;
          }
          else ;
        }
        else ;
      }
      else ;
  
#line 514 
  if (tx.crypt != (struct lib80211_crypt_data *)0) {
    
#line 515 
    skb = hostap_tx_encrypt(skb,tx.crypt);
    
#line 516 
    if (skb == (struct sk_buff *)0) {
      
#line 517 
      printk("\001",(char *)(& dev->name));
      
#line 519 
      ret = NETDEV_TX_OK;
      
#line 520 
      goto fail;
    }
    else ;
    
#line 522 
    meta = (struct hostap_skb_tx_data *)(& skb->cb);
    
#line 523 
    if (meta->magic != 4035589794U) {
      
#line 524 
      printk("\001",(char *)(& dev->name),meta->magic,4035589794U);
      
#line 528 
      ret = NETDEV_TX_OK;
      
#line 529 
      iface->stats.tx_dropped += 1UL;
      
#line 530 
      goto fail;
    }
    else ;
  }
  else ;
  
#line 534 
  if ((local->func)->tx == (int (*)(struct sk_buff *, struct net_device *))0) 
    
#line 534 
    goto _LOR;
  else {
    int tmp_4;
    
#line 534 
    tmp_4 = (*((local->func)->tx))(skb,dev);
    
#line 534 
    if (tmp_4 != 0) {
      _LOR: {
              
#line 535 
              ret = NETDEV_TX_OK;
              
#line 536 
              iface->stats.tx_dropped += 1UL;
            }
    }
    else {
      
#line 538 
      ret = NETDEV_TX_OK;
      
#line 539 
      iface->stats.tx_packets += 1UL;
      
#line 540 
      iface->stats.tx_bytes += (unsigned long)skb->len;
    }
  }
  fail: 
#line 543 
  ;
  
#line 544 
  if (ret == (unsigned int)NETDEV_TX_OK && skb != (struct sk_buff *)0) 
    
#line 545 
    consume_skb(skb); else ;
  tx_exit: 
#line 546 
  ;
  
#line 547 
  if (tx.sta_ptr != (void *)0) 
#line 548 
                               hostap_handle_sta_release(tx.sta_ptr); else ;
  
#line 549 
  return ret;
}


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
static char const __kstrtab_hostap_master_start_xmit[25U] = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'_', (char)'m', (char)'a', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'x', (char)'m', (char)'i', (char)'t', (char)'\000'};

#line 553 
struct kernel_symbol const __ksymtab_hostap_master_start_xmit;


#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_80211_tx.c"
struct kernel_symbol const __ksymtab_hostap_master_start_xmit = {.value = (unsigned long)(& hostap_master_start_xmit), .name = (char const *)(& __kstrtab_hostap_master_start_xmit)};

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_tx.c.aux"
static void atomic_inc_1(atomic_t *v)
{
  
#line 122 
  ldv_atomic_inc(v);
  
#line 123 
  return;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_80211_tx.c.aux"
static void atomic_dec_1(atomic_t *v)
{
  
#line 129 
  ldv_atomic_dec(v);
  
#line 130 
  return;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __xchg_wrong_size(void);


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/thread_info.h"
__inline static int test_ti_thread_flag(struct thread_info *ti, int flag)
{
  int tmp_1;
  
#line 91 
  if (0 != 0) 
#line 91 
              tmp_1 = constant_test_bit((long)flag,(unsigned long const volatile *)(& ti->flags)); else 
                                                                    
#line 91 
                                                                    tmp_1 = variable_test_bit((long)flag,(unsigned long const volatile *)(& ti->flags));
  
#line 91 
  return tmp_1;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_75(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_76_0(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock);


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_1(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 456 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 457 
  return;
}


#line 486 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
int default_wake_function(wait_queue_t *, unsigned int, int, void *);


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
__inline static void init_waitqueue_entry(wait_queue_t *q, struct task_struct *p)
{
  
#line 92 
  q->flags = 0U;
  
#line 93 
  q->private = (void *)p;
  
#line 94 
  q->func = & default_wake_function;
  
#line 95 
  return;
}


#line 110 
void add_wait_queue(wait_queue_head_t *, wait_queue_t *);


#line 112 
void remove_wait_queue(wait_queue_head_t *, wait_queue_t *);


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
__inline static int timer_pending(struct timer_list const *timer)
{
  int __retres;
  
#line 165 
  __retres = timer->entry.pprev != (struct hlist_node **)0;
  
#line 165 
  return __retres;
}


#line 172 
static int ldv_del_timer_78(struct timer_list *ldv_func_arg1);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
bool capable(int);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
__inline static pid_t task_pid_nr(struct task_struct *tsk)
{
  pid_t __retres;
  
#line 1890 
  __retres = tsk->pid;
  
#line 1890 
  return __retres;
}


#line 2845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
__inline static int test_tsk_thread_flag(struct task_struct *tsk, int flag)
{
  int tmp;
  
#line 2847 
  tmp = test_ti_thread_flag((struct thread_info *)tsk->stack,flag);
  
#line 2847 
  return tmp;
}


#line 2871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
__inline static int signal_pending(struct task_struct *p)
{
  int __retres;
  int tmp;
  
#line 2873 
  tmp = test_tsk_thread_flag(p,2);
  
#line 2873 
  __retres = (long)(tmp != 0);
  
#line 2873 
  return __retres;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_3(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_0(size_t size, gfp_t flags);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
int __request_module(bool, char const * , ...);


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
void lib80211_crypt_delayed_deinit(struct lib80211_crypt_info *, struct lib80211_crypt_data **);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
int iw_handler_set_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 450 
int iw_handler_get_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 453 
int iw_handler_set_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 456 
int iw_handler_get_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_value(struct iw_request_info *info, char *event, char *value, char *ends, struct iw_event *iwe, int event_len)
{
  
#line 580 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 583 
  event_len = (int)((unsigned int)event_len + 4294967288U);
  
#line 586 
  if ((long)(value + event_len < ends) != 0L) {
    
#line 588 
    memcpy((void *)value,(void const *)(& iwe->u),(unsigned long)event_len);
    
#line 589 
    value += event_len;
    
#line 591 
    iwe->len = (unsigned short)((long)value - (long)event);
    
#line 592 
    memcpy((void *)event,(void const *)iwe,(unsigned long)lcp_len);
  }
  else ;
  
#line 594 
  return value;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap.h"
static long const freq_list_1[14U] = {2412L, 2417L, 2422L, 2427L, 2432L, 2437L, 2442L, 2447L, 2452L, 2457L, 2462L, 2467L, 2472L, 2484L};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static struct iw_statistics *hostap_get_wireless_stats(struct net_device *dev)
{
  struct iw_statistics *__retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct iw_statistics *wstats;
  
#line 22 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 23 
  local = iface->local;
  
#line 26 
  if (iface->type != (unsigned int)1) {
    
#line 27 
    __retres = (struct iw_statistics *)0;
    
#line 27 
    goto return_label;
  }
  else ;
  
#line 29 
  wstats = & local->wstats;
  
#line 31 
  wstats->status = (unsigned short)0U;
  
#line 32 
  wstats->discard.code = local->comm_tallies.rx_discards_wep_undecryptable;
  
#line 34 
  wstats->discard.misc = (local->comm_tallies.rx_fcs_errors + local->comm_tallies.rx_discards_no_buffer) + local->comm_tallies.tx_discards_wrong_sa;
  
#line 39 
  wstats->discard.retries = local->comm_tallies.tx_retry_limit_exceeded;
  
#line 41 
  wstats->discard.fragment = local->comm_tallies.rx_message_in_bad_msg_fragments;
  
#line 44 
  if ((unsigned int)local->iw_mode + 4294967293U > 1U) {
    int tmp_0;
    
#line 46 
    int update = 1;
    
#line 54 
    tmp_0 = preempt_count();
    
#line 54 
    if (tmp_0 != 0) 
#line 55 
                    update = 0; else ;
    
#line 58 
    if (update != 0) {
      int tmp_1;
      
#line 58 
      tmp_1 = prism2_update_comms_qual(dev);
      
#line 58 
      if (tmp_1 == 0) 
#line 59 
                      wstats->qual.updated = (unsigned char)15U; else ;
    }
    else ;
    
#line 62 
    wstats->qual.qual = (unsigned char)local->comms_qual;
    
#line 63 
    wstats->qual.level = (unsigned char)local->avg_signal;
    
#line 64 
    wstats->qual.noise = (unsigned char)local->avg_noise;
  }
  else {
    
#line 66 
    wstats->qual.qual = (unsigned char)0U;
    
#line 67 
    wstats->qual.level = (unsigned char)0U;
    
#line 68 
    wstats->qual.noise = (unsigned char)0U;
    
#line 69 
    wstats->qual.updated = (unsigned char)112U;
  }
  
#line 72 
  __retres = wstats;
  return_label: 
#line 72 
                return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_get_datarates(struct net_device *dev, u8 *rates)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u8 buf[12U];
  int len;
  u16 val;
  
#line 84 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 85 
  local = iface->local;
  
#line 87 
  len = (*((local->func)->get_rid))(dev,(unsigned short)64966,(void *)(& buf),12,0);
  
#line 89 
  if (len <= 1) {
    
#line 90 
    __retres = 0;
    
#line 90 
    goto return_label;
  }
  else ;
  
#line 92 
  val = *((__le16 *)(& buf));
  
#line 94 
  if (len + -2 < (int)val || (unsigned int)val > 10U) {
    
#line 95 
    __retres = 0;
    
#line 95 
    goto return_label;
  }
  else ;
  
#line 97 
  memcpy((void *)rates,(void const *)(& buf) + 2U,(unsigned long)val);
  
#line 98 
  __retres = (int)val;
  return_label: 
#line 98 
                return __retres;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_get_name(struct net_device *dev, struct iw_request_info *info, char *name, char *extra)
{
  int __retres;
  u8 rates[10U];
  int len;
  int i;
  char *tmp;
  
#line 107 
  int over2 = 0;
  
#line 109 
  len = prism2_get_datarates(dev,(u8 *)(& rates));
  
#line 111 
  i = 0;
  
#line 111 
  goto ldv_46972;
  ldv_46971: 
#line 112 
  ;
  
#line 112 
  if ((unsigned int)rates[i] == 11U || (unsigned int)rates[i] == 22U) {
    
#line 113 
    over2 = 1;
    
#line 114 
    goto ldv_46970;
  }
  else ;
  
#line 111 
  i += 1;
  ldv_46972: 
#line 112 
  ;
  
#line 111 
  if (i < len) 
#line 113 
               goto ldv_46971; else 
#line 116 
                                    goto ldv_46970;
  ldv_46970: 
#line 117 
  ;
  
#line 118 
  if (over2 != 0) 
#line 118 
                  tmp = (char *)"IEEE 802.11b"; else 
#line 118 
                                                     tmp = (char *)"IEEE 802.11-DS";
  
#line 118 
  ;
  
#line 118 
  strcpy(name,(char const *)tmp);
  
#line 120 
  __retres = 0;
  
#line 120 
  return __retres;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwencode(struct net_device *dev, struct iw_request_info *info, struct iw_point *erq, char *keybuf)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int i;
  struct lib80211_crypt_data **crypt;
  int tmp_4;
  
#line 133 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 134 
  local = iface->local;
  
#line 136 
  i = (int)erq->flags & 255;
  
#line 137 
  if ((unsigned int)i + 4294967295U > 3U) 
#line 138 
                                          i = local->crypt_info.tx_keyidx; else 
                                                                    
#line 140 
                                                                    i -= 1;
  
#line 141 
  if ((unsigned int)i > 3U) {
    
#line 142 
    __retres = -22;
    
#line 142 
    goto return_label;
  }
  else ;
  
#line 144 
  crypt = & local->crypt_info.crypt[i];
  
#line 146 
  if ((int)erq->flags < 0) {
    
#line 147 
    if (*crypt != (struct lib80211_crypt_data *)0) 
#line 148 
                                                   lib80211_crypt_delayed_deinit(& local->crypt_info,crypt); else ;
    
#line 149 
    goto done;
  }
  else ;
  
#line 152 
  if (*crypt != (struct lib80211_crypt_data *)0 && (*crypt)->ops != (struct lib80211_crypto_ops *)0) {
    int tmp_0;
    
#line 152 
    tmp_0 = strcmp(((*crypt)->ops)->name,"WEP");
    
#line 152 
    if (tmp_0 != 0) 
#line 155 
                    lib80211_crypt_delayed_deinit(& local->crypt_info,crypt); else ;
  }
  else ;
  
#line 158 
  if (*crypt == (struct lib80211_crypt_data *)0) {
    struct lib80211_crypt_data *new_crypt;
    
#line 162 
    new_crypt = (struct lib80211_crypt_data *)kzalloc_0(40UL,208U);
    
#line 164 
    if (new_crypt == (struct lib80211_crypt_data *)0) {
      
#line 165 
      __retres = -12;
      
#line 165 
      goto return_label;
    }
    else ;
    
#line 166 
    new_crypt->ops = lib80211_get_crypto_ops("WEP");
    
#line 167 
    if (new_crypt->ops == (struct lib80211_crypto_ops *)0) {
      
#line 168 
      __request_module((_Bool)1,"lib80211_crypt_wep");
      
#line 169 
      new_crypt->ops = lib80211_get_crypto_ops("WEP");
    }
    else ;
    
#line 171 
    if (new_crypt->ops != (struct lib80211_crypto_ops *)0) {
      bool tmp_2;
      
#line 171 
      tmp_2 = try_module_get((new_crypt->ops)->owner);
      
#line 171 
      if ((int)tmp_2 != 0) 
#line 172 
                           new_crypt->priv = (*((new_crypt->ops)->init))(i); else ;
    }
    else ;
    
#line 173 
    if (new_crypt->ops == (struct lib80211_crypto_ops *)0 || new_crypt->priv == (void *)0) {
      
#line 174 
      kfree((void const *)new_crypt);
      
#line 175 
      new_crypt = (struct lib80211_crypt_data *)0;
      
#line 177 
      printk("\001",(char *)(& dev->name));
      
#line 180 
      __retres = -95;
      
#line 180 
      goto return_label;
    }
    else ;
    
#line 182 
    *crypt = new_crypt;
  }
  else ;
  
#line 185 
  if ((unsigned int)erq->length != 0U) {
    int tmp_3;
    int j;
    
#line 186 
    if ((unsigned int)erq->length <= 5U) 
#line 186 
                                         tmp_3 = 5; else 
#line 186 
                                                         tmp_3 = 13;
    
#line 186 
    int len = tmp_3;
    
#line 187 
    int first = 1;
    
#line 188 
    if ((int)erq->length < len) 
#line 189 
                                memset((void *)(keybuf + (int)erq->length),0,(unsigned long)(len - (int)erq->length)); else ;
    
#line 190 
    (*(((*crypt)->ops)->set_key))((void *)keybuf,len,(u8 *)0U,(*crypt)->priv);
    
#line 191 
    j = 0;
    
#line 191 
    goto ldv_46990;
    ldv_46989: 
#line 192 
    ;
    
#line 192 
    if (j != i && local->crypt_info.crypt[j] != (struct lib80211_crypt_data *)0) {
      
#line 193 
      first = 0;
      
#line 194 
      goto ldv_46988;
    }
    else ;
    
#line 191 
    j += 1;
    ldv_46990: 
#line 192 
    ;
    
#line 191 
    if (j <= 3) 
#line 193 
                goto ldv_46989; else 
#line 196 
                                     goto ldv_46988;
    ldv_46988: 
#line 197 
    ;
    
#line 197 
    if (first != 0) 
#line 198 
                    local->crypt_info.tx_keyidx = i; else ;
  }
  else 
#line 201 
       local->crypt_info.tx_keyidx = i;
  done: 
#line 204 
  ;
  
#line 205 
  local->open_wep = (int)erq->flags & 8192;
  
#line 207 
  tmp_4 = hostap_set_encryption(local);
  
#line 207 
  if (tmp_4 != 0) {
    
#line 208 
    printk("\001",(char *)(& dev->name));
    
#line 209 
    __retres = -22;
    
#line 209 
    goto return_label;
  }
  else ;
  
#line 217 
  if (local->iw_mode != 2) {
    int tmp_5;
    
#line 217 
    tmp_5 = (*((local->func)->reset_port))(dev);
    
#line 217 
    if (tmp_5 != 0) {
      
#line 218 
      printk("\001",(char *)(& dev->name));
      
#line 219 
      __retres = -22;
      
#line 219 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 222 
  __retres = 0;
  return_label: 
#line 222 
                return __retres;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwencode(struct net_device *dev, struct iw_request_info *info, struct iw_point *erq, char *key)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int i;
  int len;
  u16 val;
  struct lib80211_crypt_data *crypt;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 236 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 237 
  local = iface->local;
  
#line 239 
  i = (int)erq->flags & 255;
  
#line 240 
  if ((unsigned int)i + 4294967295U > 3U) 
#line 241 
                                          i = local->crypt_info.tx_keyidx; else 
                                                                    
#line 243 
                                                                    i -= 1;
  
#line 244 
  if ((unsigned int)i > 3U) {
    
#line 245 
    __retres = -22;
    
#line 245 
    goto return_label;
  }
  else ;
  
#line 247 
  crypt = local->crypt_info.crypt[i];
  
#line 248 
  erq->flags = (unsigned short)((unsigned int)((unsigned short)i) + 1U);
  
#line 250 
  if (crypt == (struct lib80211_crypt_data *)0 || crypt->ops == (struct lib80211_crypto_ops *)0) {
    
#line 251 
    erq->length = (unsigned short)0U;
    
#line 252 
    erq->flags = (unsigned short)((unsigned int)erq->flags | 32768U);
    
#line 253 
    __retres = 0;
    
#line 253 
    goto return_label;
  }
  else ;
  
#line 256 
  tmp_0 = strcmp((crypt->ops)->name,"WEP");
  
#line 256 
  if (tmp_0 != 0) {
    
#line 259 
    erq->length = (unsigned short)0U;
    
#line 260 
    erq->flags = erq->flags;
    
#line 261 
    __retres = 0;
    
#line 261 
    goto return_label;
  }
  else ;
  
#line 266 
  len = (*((crypt->ops)->get_key))((void *)key,13,(u8 *)0U,crypt->priv);
  
#line 267 
  if (0 > len) 
#line 267 
               tmp_1 = 0; else 
#line 267 
                               tmp_1 = len;
  
#line 267 
  erq->length = (unsigned short)tmp_1;
  
#line 269 
  tmp_2 = (*((local->func)->get_rid))(dev,(unsigned short)64552,(void *)(& val),2,1);
  
#line 269 
  if (tmp_2 < 0) {
    
#line 271 
    printk("CNFWEPFLAGS reading failed\n");
    
#line 272 
    __retres = -95;
    
#line 272 
    goto return_label;
  }
  else ;
  
#line 274 
  u16 *tmp_3 = & val;
  
#line 275 
  if (((unsigned long)val & 1UL) != 0UL) 
#line 276 
                                         erq->flags = erq->flags; else 
                                                                    
#line 278 
                                                                    erq->flags = (unsigned short)((unsigned int)erq->flags | 32768U);
  
#line 279 
  if (((unsigned long)val & 2UL) != 0UL) 
#line 280 
                                         erq->flags = (unsigned short)((unsigned int)erq->flags | 16384U); else 
                                                                    
#line 282 
                                                                    erq->flags = (unsigned short)((unsigned int)erq->flags | 8192U);
  
#line 284 
  __retres = 0;
  return_label: 
#line 284 
                return __retres;
}


#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int hostap_set_rate(struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  int ret;
  int basic_rates;
  int tmp_4;
  int tmp_1;
  
#line 294 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 295 
  local = iface->local;
  
#line 297 
  basic_rates = (int)local->basic_rates & (int)local->tx_rate_control;
  
#line 298 
  if (basic_rates == 0 || (int)local->basic_rates != basic_rates) {
    int tmp_0;
    
#line 299 
    printk("\001",(char *)(& dev->name));
    
#line 302 
    if (basic_rates == 0) 
#line 303 
                          basic_rates = (int)local->tx_rate_control; else ;
    
#line 305 
    local->basic_rates = (unsigned short)basic_rates;
    
#line 306 
    tmp_0 = hostap_set_word(dev,64691,(unsigned short)((int)((unsigned short)basic_rates)));
    
#line 306 
    if (tmp_0 != 0) 
#line 308 
                    printk("\001",(char *)(& dev->name)); else ;
  }
  else ;
  
#line 312 
  tmp_1 = hostap_set_word(dev,64644,(unsigned short)((int)local->tx_rate_control));
  
#line 312 
  if (tmp_1 != 0) 
#line 312 
                  tmp_4 = 1;
  else {
    int tmp_2;
    
#line 313 
    tmp_2 = hostap_set_word(dev,64692,(unsigned short)((int)local->tx_rate_control));
    
#line 313 
    if (tmp_2 != 0) 
#line 312 
                    tmp_4 = 1;
    else {
      int tmp_3;
      
#line 315 
      tmp_3 = (*((local->func)->reset_port))(dev);
      
#line 315 
      if (tmp_3 != 0) 
#line 312 
                      tmp_4 = 1; else 
#line 312 
                                      tmp_4 = 0;
    }
  }
  
#line 312 
  ret = tmp_4;
  
#line 318 
  if (ret != 0) 
#line 319 
                printk("\001",(char *)(& dev->name),(int)local->tx_rate_control); else ;
  
#line 326 
  hostap_update_rates(local);
  
#line 328 
  return ret;
}


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwrate(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  
#line 339 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 340 
  local = iface->local;
  
#line 342 
  if ((unsigned int)rrq->fixed != 0U) {
    
#line 343 
    switch (rrq->value) {
      case 11000000: 
#line 344 
      ;
      
#line 345 
      local->tx_rate_control = (unsigned short)8U;
      
#line 346 
      goto ldv_47019;
      case 5500000: 
#line 347 
      ;
      
#line 348 
      local->tx_rate_control = (unsigned short)4U;
      
#line 349 
      goto ldv_47019;
      case 2000000: 
#line 350 
      ;
      
#line 351 
      local->tx_rate_control = (unsigned short)2U;
      
#line 352 
      goto ldv_47019;
      case 1000000: 
#line 353 
      ;
      
#line 354 
      local->tx_rate_control = (unsigned short)1U;
      
#line 355 
      goto ldv_47019;
      default: 
#line 356 
      ;
      
#line 357 
      local->tx_rate_control = (unsigned short)15U;
      
#line 360 
      goto ldv_47019;
    }
    ldv_47019: 
#line 362 
    ;
  }
  else {
    
#line 363 
    switch (rrq->value) {
      case 11000000: 
#line 364 
      ;
      
#line 365 
      local->tx_rate_control = (unsigned short)15U;
      
#line 368 
      goto ldv_47025;
      case 5500000: 
#line 369 
      ;
      
#line 370 
      local->tx_rate_control = (unsigned short)7U;
      
#line 372 
      goto ldv_47025;
      case 2000000: 
#line 373 
      ;
      
#line 374 
      local->tx_rate_control = (unsigned short)3U;
      
#line 376 
      goto ldv_47025;
      case 1000000: 
#line 377 
      ;
      
#line 378 
      local->tx_rate_control = (unsigned short)1U;
      
#line 379 
      goto ldv_47025;
      default: 
#line 380 
      ;
      
#line 381 
      local->tx_rate_control = (unsigned short)15U;
      
#line 384 
      goto ldv_47025;
    }
    ldv_47025: 
#line 386 
    ;
  }
  
#line 388 
  tmp_0 = hostap_set_rate(dev);
  
#line 388 
  return tmp_0;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwrate(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  u16 val;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  int tmp_1;
  
#line 399 
  int ret = 0;
  
#line 401 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 402 
  local = iface->local;
  
#line 404 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64644,(void *)(& val),2,1);
  
#line 404 
  if (tmp_0 < 0) {
    
#line 406 
    __retres = -22;
    
#line 406 
    goto return_label;
  }
  else ;
  
#line 408 
  if (((int)val & 1) != 0 && (unsigned int)val > 1U) 
#line 409 
                                                     rrq->fixed = (unsigned char)0U; else 
                                                                    
#line 411 
                                                                    rrq->fixed = (unsigned char)1U;
  
#line 413 
  if ((local->iw_mode == 3 && local->ap != (struct ap_data *)0) && local->fw_tx_rate_control == 0) {
    
#line 418 
    if ((local->ap)->last_tx_rate > 0) 
#line 418 
                                       rrq->value = (local->ap)->last_tx_rate * 100000; else 
                                                                    
#line 418 
                                                                    rrq->value = 11000000;
    
#line 420 
    __retres = 0;
    
#line 420 
    goto return_label;
  }
  else ;
  
#line 423 
  tmp_1 = (*((local->func)->get_rid))(dev,(unsigned short)64836,(void *)(& val),2,1);
  
#line 423 
  if (tmp_1 < 0) {
    
#line 425 
    __retres = -22;
    
#line 425 
    goto return_label;
  }
  else ;
  
#line 427 
  switch ((int)val) {
    case 1: 
#line 428 
    ;
    
#line 429 
    rrq->value = 1000000;
    
#line 430 
    goto ldv_47041;
    case 2: 
#line 431 
    ;
    
#line 432 
    rrq->value = 2000000;
    
#line 433 
    goto ldv_47041;
    case 4: 
#line 434 
    ;
    
#line 435 
    rrq->value = 5500000;
    
#line 436 
    goto ldv_47041;
    case 8: 
#line 437 
    ;
    
#line 438 
    rrq->value = 11000000;
    
#line 439 
    goto ldv_47041;
    default: 
#line 440 
    ;
    
#line 442 
    rrq->value = 11000000;
    
#line 443 
    ret = -22;
    
#line 444 
    goto ldv_47041;
  }
  ldv_47041: 
#line 447 
  ;
  
#line 447 
  __retres = ret;
  return_label: 
#line 447 
                return __retres;
}


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwsens(struct net_device *dev, struct iw_request_info *info, struct iw_param *sens, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  
#line 458 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 459 
  local = iface->local;
  
#line 462 
  if ((unsigned int)sens->value + 4294967295U > 2U) {
    
#line 463 
    __retres = -22;
    
#line 463 
    goto return_label;
  }
  else ;
  
#line 465 
  tmp_0 = hostap_set_word(dev,64518,(unsigned short)((int)((unsigned short)sens->value)));
  
#line 465 
  if (tmp_0 != 0) {
    
#line 467 
    __retres = -22;
    
#line 467 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 465 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 465 
    if (tmp_1 != 0) {
      
#line 467 
      __retres = -22;
      
#line 467 
      goto return_label;
    }
    else ;
  }
  
#line 469 
  __retres = 0;
  return_label: 
#line 469 
                return __retres;
}


#line 472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwsens(struct net_device *dev, struct iw_request_info *info, struct iw_param *sens, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 val;
  int tmp_0;
  
#line 480 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 481 
  local = iface->local;
  
#line 484 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64518,(void *)(& val),2,1);
  
#line 484 
  if (tmp_0 < 0) {
    
#line 486 
    __retres = -22;
    
#line 486 
    goto return_label;
  }
  else ;
  
#line 488 
  sens->value = (int)val;
  
#line 489 
  sens->fixed = (unsigned char)1U;
  
#line 491 
  __retres = 0;
  return_label: 
#line 491 
                return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwaplist(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct sockaddr *addr;
  struct iw_quality *qual;
  int tmp_2;
  
#line 505 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 506 
  local = iface->local;
  
#line 508 
  if (local->iw_mode != 3) {
    
#line 509 
    printk("\001");
    
#line 511 
    data->length = (unsigned short)0U;
    
#line 512 
    __retres = -95;
    
#line 512 
    goto return_label;
  }
  else ;
  
#line 515 
  addr = (struct sockaddr *)kmalloc_3(1024UL,208U);
  
#line 516 
  qual = (struct iw_quality *)kmalloc_3(256UL,208U);
  
#line 517 
  if (addr == (struct sockaddr *)0 || qual == (struct iw_quality *)0) {
    
#line 518 
    kfree((void const *)addr);
    
#line 519 
    kfree((void const *)qual);
    
#line 520 
    data->length = (unsigned short)0U;
    
#line 521 
    __retres = -12;
    
#line 521 
    goto return_label;
  }
  else ;
  
#line 524 
  tmp_2 = prism2_ap_get_sta_qual(local,addr,qual,64,1);
  
#line 524 
  data->length = (unsigned short)tmp_2;
  
#line 526 
  memcpy((void *)extra,(void const *)addr,(unsigned long)data->length * 16UL);
  
#line 527 
  data->flags = (unsigned short)1U;
  
#line 528 
  memcpy((void *)(extra + (unsigned long)data->length * 16UL),(void const *)qual,(unsigned long)data->length * 4UL);
  
#line 531 
  kfree((void const *)addr);
  
#line 532 
  kfree((void const *)qual);
  
#line 533 
  __retres = 0;
  return_label: 
#line 533 
                return __retres;
}


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwrts(struct net_device *dev, struct iw_request_info *info, struct iw_param *rts, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 val;
  int tmp_0;
  
#line 545 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 546 
  local = iface->local;
  
#line 548 
  if ((unsigned int)rts->disabled != 0U) 
#line 549 
                                         val = (unsigned short)2347U;
  else 
    
#line 550 
    if ((unsigned int)rts->value > 2347U) {
      
#line 551 
      __retres = -22;
      
#line 551 
      goto return_label;
    }
    else 
#line 553 
         val = (unsigned short)rts->value;
  
#line 555 
  tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64643,(void *)(& val),2);
  
#line 555 
  if (tmp_0 != 0) {
    
#line 557 
    __retres = -22;
    
#line 557 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 555 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 555 
    if (tmp_1 != 0) {
      
#line 557 
      __retres = -22;
      
#line 557 
      goto return_label;
    }
    else ;
  }
  
#line 559 
  local->rts_threshold = rts->value;
  
#line 561 
  __retres = 0;
  return_label: 
#line 561 
                return __retres;
}


#line 564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwrts(struct net_device *dev, struct iw_request_info *info, struct iw_param *rts, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 val;
  int tmp_0;
  
#line 572 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 573 
  local = iface->local;
  
#line 575 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64643,(void *)(& val),2,1);
  
#line 575 
  if (tmp_0 < 0) {
    
#line 577 
    __retres = -22;
    
#line 577 
    goto return_label;
  }
  else ;
  
#line 579 
  rts->value = (int)val;
  
#line 580 
  rts->disabled = (unsigned char)(rts->value == 2347);
  
#line 581 
  rts->fixed = (unsigned char)1U;
  
#line 583 
  __retres = 0;
  return_label: 
#line 583 
                return __retres;
}


#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwfrag(struct net_device *dev, struct iw_request_info *info, struct iw_param *rts, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 val;
  int tmp_0;
  
#line 595 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 596 
  local = iface->local;
  
#line 598 
  if ((unsigned int)rts->disabled != 0U) 
#line 599 
                                         val = (unsigned short)2346U;
  else 
    
#line 600 
    if ((unsigned int)rts->value + 4294967040U > 2090U) {
      
#line 601 
      __retres = -22;
      
#line 601 
      goto return_label;
    }
    else 
#line 603 
         val = (unsigned short)((unsigned int)((unsigned short)rts->value) & 65534U);
  
#line 605 
  local->fragm_threshold = rts->value & -2;
  
#line 606 
  tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64642,(void *)(& val),2);
  
#line 606 
  if (tmp_0 != 0) {
    
#line 609 
    __retres = -22;
    
#line 609 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 608 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 608 
    if (tmp_1 != 0) {
      
#line 609 
      __retres = -22;
      
#line 609 
      goto return_label;
    }
    else ;
  }
  
#line 611 
  __retres = 0;
  return_label: 
#line 611 
                return __retres;
}


#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwfrag(struct net_device *dev, struct iw_request_info *info, struct iw_param *rts, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 val;
  int tmp_0;
  
#line 622 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 623 
  local = iface->local;
  
#line 625 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64642,(void *)(& val),2,1);
  
#line 625 
  if (tmp_0 < 0) {
    
#line 627 
    __retres = -22;
    
#line 627 
    goto return_label;
  }
  else ;
  
#line 629 
  rts->value = (int)val;
  
#line 630 
  rts->disabled = (unsigned char)(rts->value == 2346);
  
#line 631 
  rts->fixed = (unsigned char)1U;
  
#line 633 
  __retres = 0;
  return_label: 
#line 633 
                return __retres;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int hostap_join_ap(struct net_device *dev)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct hfa384x_join_request req;
  unsigned long flags;
  int i;
  struct hfa384x_hostscan_result *entry;
  bool tmp_0;
  int tmp_1;
  
#line 647 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 648 
  local = iface->local;
  
#line 650 
  memcpy((void *)(& req.bssid),(void const *)(& local->preferred_ap),6UL);
  
#line 651 
  req.channel = (unsigned short)0U;
  
#line 653 
  ldv___ldv_spin_lock_72(& local->lock);
  
#line 654 
  i = 0;
  
#line 654 
  goto ldv_47120;
  ldv_47119: 
#line 655 
  ;
  
#line 655 
  if (local->last_scan_results == (struct hfa384x_hostscan_result *)0) 
    
#line 656 
    goto ldv_47118; else ;
  
#line 657 
  entry = local->last_scan_results + i;
  
#line 658 
  tmp_0 = ether_addr_equal((u8 const *)(& local->preferred_ap),(u8 const *)(& entry->bssid));
  
#line 658 
  if ((int)tmp_0 != 0) {
    
#line 659 
    req.channel = entry->chid;
    
#line 660 
    goto ldv_47118;
  }
  else ;
  
#line 654 
  i += 1;
  ldv_47120: 
#line 655 
  ;
  
#line 654 
  if (local->last_scan_results_count > i) 
#line 656 
                                          goto ldv_47119; else 
#line 659 
                                                               goto ldv_47118;
  ldv_47118: 
#line 660 
  ;
  
#line 663 
  ldv_spin_unlock_irqrestore_73(& local->lock,flags);
  
#line 665 
  tmp_1 = (*((local->func)->set_rid))(dev,(unsigned short)64738,(void *)(& req),8);
  
#line 665 
  if (tmp_1 != 0) {
    
#line 667 
    printk("\001",(char *)(& dev->name),(u8 *)(& local->preferred_ap));
    
#line 669 
    __retres = -1;
    
#line 669 
    goto return_label;
  }
  else ;
  
#line 672 
  printk("\001",(char *)(& dev->name),(u8 *)(& local->preferred_ap));
  
#line 675 
  __retres = 0;
  return_label: 
#line 675 
                return __retres;
}


#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwap(struct net_device *dev, struct iw_request_info *info, struct sockaddr *ap_addr, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 690 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 691 
  local = iface->local;
  
#line 693 
  memcpy((void *)(& local->preferred_ap),(void const *)(& ap_addr->sa_data),6UL);
  
#line 695 
  if (local->host_roaming == 1 && local->iw_mode == 2) {
    struct hfa384x_scan_request scan_req;
    int tmp_0;
    
#line 697 
    memset((void *)(& scan_req),0,4UL);
    
#line 698 
    scan_req.channel_list = (unsigned short)16383U;
    
#line 699 
    scan_req.txrate = (unsigned short)1U;
    
#line 700 
    tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64737,(void *)(& scan_req),4);
    
#line 700 
    if (tmp_0 != 0) 
#line 702 
                    printk("\001",(char *)(& dev->name)); else ;
  }
  else 
    
#line 706 
    if (local->host_roaming == 2 && local->iw_mode == 2) {
      int tmp_1;
      
#line 708 
      tmp_1 = hostap_join_ap(dev);
      
#line 708 
      if (tmp_1 != 0) {
        
#line 709 
        __retres = -22;
        
#line 709 
        goto return_label;
      }
      else ;
    }
    else 
#line 711 
         printk("\001",(char *)(& dev->name));
  
#line 716 
  __retres = 0;
  return_label: 
#line 716 
                return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwap(struct net_device *dev, struct iw_request_info *info, struct sockaddr *ap_addr, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 727 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 728 
  local = iface->local;
  
#line 730 
  ap_addr->sa_family = (unsigned short)1U;
  
#line 731 
  switch ((unsigned int)iface->type) {
    int tmp_0;
    case (unsigned int)2: 
#line 732 
    ;
    
#line 733 
    memcpy((void *)(& ap_addr->sa_data),(void const *)dev->dev_addr,6UL);
    
#line 734 
    goto ldv_47139;
    case (unsigned int)3: 
#line 735 
    ;
    
#line 736 
    memcpy((void *)(& ap_addr->sa_data),(void const *)(& local->assoc_ap_addr),6UL);
    
#line 737 
    goto ldv_47139;
    case (unsigned int)4: 
#line 738 
    ;
    
#line 739 
    memcpy((void *)(& ap_addr->sa_data),(void const *)(& iface->u.wds.remote_addr),6UL);
    
#line 740 
    goto ldv_47139;
    default: 
#line 741 
    ;
    
#line 742 
    tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64834,(void *)(& ap_addr->sa_data),6,1);
    
#line 742 
    if (tmp_0 < 0) {
      
#line 744 
      __retres = -95;
      
#line 744 
      goto return_label;
    }
    else ;
    
#line 748 
    memcpy((void *)(& local->bssid),(void const *)(& ap_addr->sa_data),6UL);
    
#line 749 
    goto ldv_47139;
  }
  ldv_47139: 
#line 752 
  ;
  
#line 752 
  __retres = 0;
  return_label: 
#line 752 
                return __retres;
}


#line 756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwnickn(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *nickname)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  
#line 763 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 764 
  local = iface->local;
  
#line 766 
  memset((void *)(& local->name),0,33UL);
  
#line 767 
  memcpy((void *)(& local->name),(void const *)nickname,(unsigned long)data->length);
  
#line 768 
  local->name_set = 1;
  
#line 770 
  tmp_0 = hostap_set_string(dev,64526,(char const *)(& local->name));
  
#line 770 
  if (tmp_0 != 0) {
    
#line 772 
    __retres = -22;
    
#line 772 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 770 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 770 
    if (tmp_1 != 0) {
      
#line 772 
      __retres = -22;
      
#line 772 
      goto return_label;
    }
    else ;
  }
  
#line 774 
  __retres = 0;
  return_label: 
#line 774 
                return __retres;
}


#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwnickn(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *nickname)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int len;
  char name[35U];
  u16 val;
  
#line 787 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 788 
  local = iface->local;
  
#line 790 
  len = (*((local->func)->get_rid))(dev,(unsigned short)64526,(void *)(& name),34,0);
  
#line 792 
  val = *((__le16 *)(& name));
  
#line 793 
  if ((unsigned int)len > 34U || (unsigned int)val > 32U) {
    
#line 794 
    __retres = -95;
    
#line 794 
    goto return_label;
  }
  else ;
  
#line 796 
  name[(int)val + 2] = (char)0;
  
#line 797 
  data->length = (unsigned short)((unsigned int)val + 1U);
  
#line 798 
  memcpy((void *)nickname,(void const *)(& name) + 2U,(unsigned long)((int)val + 1));
  
#line 800 
  __retres = 0;
  return_label: 
#line 800 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwfreq(struct net_device *dev, struct iw_request_info *info, struct iw_freq *freq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  
#line 811 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 812 
  local = iface->local;
  
#line 815 
  if (((int)freq->e == 1 && (long)(freq->m / 100000) >= freq_list_1[0]) && (long)(freq->m / 100000) <= freq_list_1[13UL]) {
    int ch;
    
#line 819 
    int fr = freq->m / 100000;
    
#line 820 
    ch = 0;
    
#line 820 
    goto ldv_47180;
    ldv_47179: 
#line 821 
    ;
    
#line 821 
    if ((long)fr == freq_list_1[ch]) {
      
#line 822 
      freq->e = (short)0;
      
#line 823 
      freq->m = ch + 1;
      
#line 824 
      goto ldv_47178;
    }
    else ;
    
#line 820 
    ch += 1;
    ldv_47180: 
#line 821 
    ;
    
#line 820 
    if ((unsigned int)ch <= 13U) 
#line 822 
                                 goto ldv_47179; else 
#line 825 
                                                      goto ldv_47178;
    ldv_47178: 
#line 826 
    ;
  }
  else ;
  
#line 829 
  if ((((int)freq->e != 0 || freq->m <= 0) || (unsigned int)freq->m > 14U) || (((int)local->channel_mask >> (freq->m + -1)) & 1) == 0) {
    
#line 831 
    __retres = -22;
    
#line 831 
    goto return_label;
  }
  else ;
  
#line 833 
  local->channel = freq->m;
  
#line 834 
  tmp_0 = hostap_set_word(dev,64515,(unsigned short)((int)((unsigned short)local->channel)));
  
#line 834 
  if (tmp_0 != 0) {
    
#line 836 
    __retres = -22;
    
#line 836 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 834 
    tmp_1 = (*((local->func)->reset_port))(dev);
    
#line 834 
    if (tmp_1 != 0) {
      
#line 836 
      __retres = -22;
      
#line 836 
      goto return_label;
    }
    else ;
  }
  
#line 838 
  __retres = 0;
  return_label: 
#line 838 
                return __retres;
}


#line 841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwfreq(struct net_device *dev, struct iw_request_info *info, struct iw_freq *freq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u16 val;
  int tmp_0;
  
#line 849 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 850 
  local = iface->local;
  
#line 852 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64961,(void *)(& val),2,1);
  
#line 852 
  if (tmp_0 < 0) {
    
#line 854 
    __retres = -22;
    
#line 854 
    goto return_label;
  }
  else ;
  
#line 856 
  u16 *tmp_2 = & val;
  
#line 857 
  if ((unsigned int)val + 65535U > 13U) {
    
#line 858 
    __retres = -22;
    
#line 858 
    goto return_label;
  }
  else ;
  
#line 860 
  freq->m = (int)(freq_list_1[(int)val + -1] * (long)100000U);
  
#line 861 
  freq->e = (short)1;
  
#line 863 
  __retres = 0;
  return_label: 
#line 863 
                return __retres;
}


#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static void hostap_monitor_set_type(local_info_t *local)
{
  
#line 869 
  struct net_device *dev = local->ddev;
  
#line 871 
  if (dev == (struct net_device *)0) 
#line 872 
                                     goto return_label; else ;
  
#line 874 
  if ((unsigned int)local->monitor_type + 4294967295U <= 1U) 
#line 876 
                                                             dev->type = (unsigned short)802U;
  else 
    
#line 877 
    if (local->monitor_type == (unsigned int)PRISM2_MONITOR_RADIOTAP) 
      
#line 878 
      dev->type = (unsigned short)803U; else 
#line 880 
                                             dev->type = (unsigned short)801U;
  return_label: 
#line 881 
                return;
}


#line 885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwessid(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *ssid)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 892 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 893 
  local = iface->local;
  
#line 895 
  if (iface->type == (unsigned int)4) {
    
#line 896 
    __retres = -95;
    
#line 896 
    goto return_label;
  }
  else ;
  
#line 898 
  if ((unsigned int)data->flags == 0U) 
#line 899 
                                       *ssid = (char)0; else ;
  
#line 901 
  if (local->iw_mode == 3 && (int)*ssid == 0) {
    
#line 904 
    printk("\001",(char *)(& dev->name));
    
#line 906 
    __retres = -22;
    
#line 906 
    goto return_label;
  }
  else ;
  
#line 909 
  memcpy((void *)(& local->essid),(void const *)ssid,(unsigned long)data->length);
  
#line 910 
  local->essid[(int)data->length] = (char)0;
  
#line 912 
  if (local->fw_ap == 0) {
    int tmp_0;
    
#line 912 
    tmp_0 = hostap_set_string(dev,64514,(char const *)(& local->essid));
    
#line 912 
    if (tmp_0 != 0) {
      
#line 916 
      __retres = -22;
      
#line 916 
      goto return_label;
    }
    else 
#line 912 
         goto _LAND;
  }
  else {
    int tmp_1;
    _LAND: 
#line 914 
    tmp_1 = hostap_set_string(dev,64516,(char const *)(& local->essid));
    
#line 914 
    if (tmp_1 != 0) {
      
#line 916 
      __retres = -22;
      
#line 916 
      goto return_label;
    }
    else {
      int tmp_2;
      
#line 914 
      tmp_2 = (*((local->func)->reset_port))(dev);
      
#line 914 
      if (tmp_2 != 0) {
        
#line 916 
        __retres = -22;
        
#line 916 
        goto return_label;
      }
      else ;
    }
  }
  
#line 918 
  __retres = 0;
  return_label: 
#line 918 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwessid(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *essid)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u16 val;
  
#line 929 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 930 
  local = iface->local;
  
#line 932 
  if (iface->type == (unsigned int)4) {
    
#line 933 
    __retres = -95;
    
#line 933 
    goto return_label;
  }
  else ;
  
#line 935 
  data->flags = (unsigned short)1U;
  
#line 936 
  if (local->iw_mode == 3) {
    size_t tmp_0;
    
#line 937 
    tmp_0 = strlen((char const *)(& local->essid));
    
#line 937 
    data->length = (unsigned short)tmp_0;
    
#line 938 
    memcpy((void *)essid,(void const *)(& local->essid),32UL);
  }
  else {
    int len;
    char ssid[34U];
    
#line 942 
    memset((void *)(& ssid),0,34UL);
    
#line 943 
    len = (*((local->func)->get_rid))(dev,(unsigned short)64833,(void *)(& ssid),34,0);
    
#line 945 
    val = *((__le16 *)(& ssid));
    
#line 946 
    if ((unsigned int)len > 34U || (unsigned int)val > 32U) {
      
#line 947 
      __retres = -95;
      
#line 947 
      goto return_label;
    }
    else ;
    
#line 949 
    data->length = val;
    
#line 950 
    memcpy((void *)essid,(void const *)(& ssid) + 2U,32UL);
  }
  
#line 953 
  __retres = 0;
  return_label: 
#line 953 
                return __retres;
}


#line 957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwrange(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u8 rates[10U];
  u16 val;
  int i;
  int len;
  int over2;
  int tmp_0;
  
#line 963 
  struct iw_range *range = (struct iw_range *)extra;
  
#line 968 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 969 
  local = iface->local;
  
#line 971 
  data->length = (unsigned short)568U;
  
#line 972 
  memset((void *)range,0,568UL);
  
#line 977 
  range->txpower_capa = (unsigned short)0U;
  
#line 979 
  if ((unsigned int)local->iw_mode + 4294967295U <= 1U) {
    
#line 981 
    range->min_pmp = 1024;
    
#line 982 
    range->max_pmp = 67107840;
    
#line 983 
    range->min_pmt = 1024;
    
#line 984 
    range->max_pmt = 1024000;
    
#line 985 
    range->pmp_flags = (unsigned short)4096U;
    
#line 986 
    range->pmt_flags = (unsigned short)8192U;
    
#line 987 
    range->pm_capa = (unsigned short)13056U;
  }
  else ;
  
#line 991 
  range->we_version_compiled = (unsigned char)22U;
  
#line 992 
  range->we_version_source = (unsigned char)18U;
  
#line 994 
  range->retry_capa = (unsigned short)4096U;
  
#line 995 
  range->retry_flags = (unsigned short)4096U;
  
#line 996 
  range->min_retry = 0;
  
#line 997 
  range->max_retry = 255;
  
#line 999 
  range->num_channels = (unsigned short)14U;
  
#line 1001 
  val = (unsigned short)0U;
  
#line 1002 
  i = 0;
  
#line 1002 
  goto ldv_47241;
  ldv_47240: 
#line 1003 
  ;
  
#line 1003 
  if ((((int)local->channel_mask >> i) & 1) != 0) {
    
#line 1004 
    range->freq[(int)val].i = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
    
#line 1005 
    range->freq[(int)val].m = (int)(freq_list_1[i] * (long)100000U);
    
#line 1006 
    range->freq[(int)val].e = (short)1;
    
#line 1007 
    val = (u16)((int)val + 1);
  }
  else ;
  
#line 1009 
  if ((unsigned int)val == 32U) 
#line 1010 
                                goto ldv_47239; else ;
  
#line 1002 
  i += 1;
  ldv_47241: 
#line 1003 
  ;
  
#line 1002 
  if ((unsigned int)i <= 13U) 
#line 1004 
                              goto ldv_47240; else 
#line 1007 
                                                   goto ldv_47239;
  ldv_47239: 
#line 1008 
  ;
  
#line 1012 
  range->num_frequency = (unsigned char)val;
  
#line 1014 
  if (local->sta_fw_ver > 66304U) {
    
#line 1015 
    range->max_qual.qual = (unsigned char)70U;
    
#line 1018 
    range->max_qual.level = (unsigned char)0U;
    
#line 1019 
    range->max_qual.noise = (unsigned char)0U;
    
#line 1022 
    range->avg_qual.qual = (unsigned char)20U;
    
#line 1023 
    range->avg_qual.level = (unsigned char)196U;
    
#line 1024 
    range->avg_qual.noise = (unsigned char)161U;
  }
  else {
    
#line 1026 
    range->max_qual.qual = (unsigned char)92U;
    
#line 1027 
    range->max_qual.level = (unsigned char)154U;
    
#line 1028 
    range->max_qual.noise = (unsigned char)154U;
  }
  
#line 1030 
  range->sensitivity = 3;
  
#line 1032 
  range->max_encoding_tokens = (unsigned char)4U;
  
#line 1033 
  range->num_encoding_sizes = (unsigned char)2U;
  
#line 1034 
  range->encoding_size[0] = (unsigned short)5U;
  
#line 1035 
  range->encoding_size[1] = (unsigned short)13U;
  
#line 1037 
  over2 = 0;
  
#line 1038 
  len = prism2_get_datarates(dev,(u8 *)(& rates));
  
#line 1039 
  range->num_bitrates = (unsigned char)0U;
  
#line 1040 
  i = 0;
  
#line 1040 
  goto ldv_47243;
  ldv_47242: 
#line 1041 
  ;
  
#line 1041 
  if ((unsigned int)range->num_bitrates <= 31U) {
    
#line 1042 
    range->bitrate[(int)range->num_bitrates] = (int)rates[i] * 500000;
    
#line 1044 
    range->num_bitrates = (__u8)((int)range->num_bitrates + 1);
  }
  else ;
  
#line 1046 
  if ((unsigned int)rates[i] == 11U || (unsigned int)rates[i] == 22U) 
    
#line 1047 
    over2 = 1; else ;
  
#line 1040 
  i += 1;
  ldv_47243: 
#line 1041 
  ;
  
#line 1040 
  if (i < len) 
#line 1042 
               goto ldv_47242; else 
#line 1045 
                                    goto ldv_47244;
  ldv_47244: 
#line 1046 
  ;
  
#line 1050 
  if (over2 != 0) 
#line 1050 
                  tmp_0 = 5500000; else 
#line 1050 
                                        tmp_0 = 1500000;
  
#line 1050 
  range->throughput = (unsigned int)tmp_0;
  
#line 1052 
  range->min_rts = 0;
  
#line 1053 
  range->max_rts = 2347;
  
#line 1054 
  range->min_frag = 256;
  
#line 1055 
  range->max_frag = 2346;
  
#line 1058 
  range->event_capa[0] = 103284816U;
  
#line 1062 
  range->event_capa[1] = 1024U;
  
#line 1063 
  range->event_capa[4] = 29U;
  
#line 1068 
  range->enc_capa = 15U;
  
#line 1071 
  if (local->sta_fw_ver > 66304U) 
#line 1072 
                                  range->scan_capa = (unsigned char)1U; else ;
  
#line 1074 
  __retres = 0;
  
#line 1074 
  return __retres;
}


#line 1078  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int hostap_monitor_mode_enable(local_info_t *local)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 1080 
  struct net_device *dev = local->dev;
  
#line 1082 
  printk("\001");
  
#line 1083 
  hostap_monitor_set_type(local);
  
#line 1085 
  tmp = hostap_set_word(dev,64512,(unsigned short)3);
  
#line 1085 
  if (tmp != 0) {
    
#line 1087 
    printk("\001");
    
#line 1089 
    __retres = -95;
    
#line 1089 
    goto return_label;
  }
  else ;
  
#line 1095 
  tmp_0 = hostap_set_word(dev,64552,(unsigned short)144);
  
#line 1095 
  if (tmp_0 != 0) {
    
#line 1098 
    printk("\001");
    
#line 1099 
    __retres = -95;
    
#line 1099 
    goto return_label;
  }
  else ;
  
#line 1102 
  tmp_1 = (*((local->func)->reset_port))(dev);
  
#line 1102 
  if (tmp_1 != 0) 
#line 1102 
                  goto _LOR;
  else {
    int tmp_2;
    
#line 1102 
    tmp_2 = (*((local->func)->cmd))(dev,(unsigned short)2872,(unsigned short)0,(u16 *)0U,(u16 *)0U);
    
#line 1102 
    if (tmp_2 != 0) {
      _LOR: {
              
#line 1106 
              printk("\001");
              
#line 1107 
              __retres = -95;
              
#line 1107 
              goto return_label;
            }
    }
    else ;
  }
  
#line 1110 
  __retres = 0;
  return_label: 
#line 1110 
                return __retres;
}


#line 1114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int hostap_monitor_mode_disable(local_info_t *local)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 1116 
  struct net_device *dev = local->ddev;
  
#line 1118 
  if (dev == (struct net_device *)0) {
    
#line 1119 
    __retres = -1;
    
#line 1119 
    goto return_label;
  }
  else ;
  
#line 1121 
  printk("\001",(char *)(& dev->name));
  
#line 1122 
  dev->type = (unsigned short)1U;
  
#line 1124 
  tmp = (*((local->func)->cmd))(dev,(unsigned short)3896,(unsigned short)0,(u16 *)0U,(u16 *)0U);
  
#line 1124 
  if (tmp != 0) {
    
#line 1127 
    __retres = -1;
    
#line 1127 
    goto return_label;
  }
  else ;
  
#line 1128 
  tmp_0 = hostap_set_encryption(local);
  
#line 1128 
  __retres = tmp_0;
  return_label: 
#line 1128 
                return __retres;
}


#line 1132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwmode(struct net_device *dev, struct iw_request_info *info, __u32 *mode, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_1;
  u16 tmp_0;
  int tmp_2;
  
#line 1138 
  int double_reset = 0;
  
#line 1140 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1141 
  local = iface->local;
  
#line 1143 
  if (*mode + 4294967295U > 3U && *mode != 6U) {
    
#line 1146 
    __retres = -95;
    
#line 1146 
    goto return_label;
  }
  else ;
  
#line 1153 
  if (*mode == (unsigned int)local->iw_mode) {
    
#line 1154 
    __retres = 0;
    
#line 1154 
    goto return_label;
  }
  else ;
  
#line 1156 
  if (*mode == 3U && (int)local->essid[0] == 0) {
    
#line 1157 
    printk("\001",(char *)(& dev->name));
    
#line 1159 
    __retres = -22;
    
#line 1159 
    goto return_label;
  }
  else ;
  
#line 1162 
  if (local->iw_mode == 6) 
#line 1163 
                           hostap_monitor_mode_disable(local); else ;
  
#line 1165 
  if ((local->iw_mode == 1 || local->iw_mode == 6) && *mode == 3U) 
#line 1171 
                                                                   double_reset = 1; else ;
  
#line 1174 
  printk("\001",(char *)(& dev->name),local->iw_mode,*mode);
  
#line 1176 
  local->iw_mode = (int)*mode;
  
#line 1178 
  if (local->iw_mode == 6) 
#line 1179 
                           hostap_monitor_mode_enable(local);
  else 
    
#line 1180 
    if ((local->iw_mode == 3 && local->host_encrypt == 0) && local->fw_encrypt_ok == 0) {
      
#line 1182 
      printk("\001",(char *)(& dev->name));
      
#line 1185 
      local->host_encrypt = 1;
    }
    else ;
  
#line 1189 
  tmp_0 = hostap_get_porttype(local);
  
#line 1188 
  ;
  
#line 1188 
  tmp_1 = hostap_set_word(dev,64512,(unsigned short)((int)tmp_0));
  
#line 1188 
  if (tmp_1 != 0) {
    
#line 1190 
    __retres = -95;
    
#line 1190 
    goto return_label;
  }
  else ;
  
#line 1192 
  tmp_2 = (*((local->func)->reset_port))(dev);
  
#line 1192 
  if (tmp_2 != 0) {
    
#line 1193 
    __retres = -22;
    
#line 1193 
    goto return_label;
  }
  else ;
  
#line 1194 
  if (double_reset != 0) {
    int tmp_3;
    
#line 1194 
    tmp_3 = (*((local->func)->reset_port))(dev);
    
#line 1194 
    if (tmp_3 != 0) {
      
#line 1195 
      __retres = -22;
      
#line 1195 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1197 
  if ((unsigned int)local->iw_mode + 4294967295U > 1U) {
    
#line 1201 
    netif_carrier_on(local->dev);
    
#line 1202 
    netif_carrier_on(local->ddev);
  }
  else ;
  
#line 1204 
  __retres = 0;
  return_label: 
#line 1204 
                return __retres;
}


#line 1208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwmode(struct net_device *dev, struct iw_request_info *info, __u32 *mode, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 1215 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1216 
  local = iface->local;
  
#line 1218 
  switch ((unsigned int)iface->type) {
    case (unsigned int)3: 
#line 1219 
    ;
    
#line 1220 
    *mode = 2U;
    
#line 1221 
    goto ldv_47271;
    case (unsigned int)4: 
#line 1222 
    ;
    
#line 1223 
    *mode = 4U;
    
#line 1224 
    goto ldv_47271;
    default: 
#line 1225 
    ;
    
#line 1226 
    *mode = (unsigned int)local->iw_mode;
    
#line 1227 
    goto ldv_47271;
  }
  ldv_47271: 
#line 1229 
  ;
  
#line 1229 
  __retres = 0;
  
#line 1229 
  return __retres;
}


#line 1233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwpower(struct net_device *dev, struct iw_request_info *info, struct iw_param *wrq, char *extra)
{
  int __retres;
  
#line 1240 
  int ret = 0;
  
#line 1242 
  if ((unsigned int)wrq->disabled != 0U) {
    int tmp;
    
#line 1243 
    tmp = hostap_set_word(dev,64521,(unsigned short)0);
    
#line 1243 
    __retres = tmp;
    
#line 1243 
    goto return_label;
  }
  else ;
  
#line 1245 
  switch ((int)wrq->flags & 3840) {
    case 256: 
#line 1246 
    ;
    
#line 1247 
    ret = hostap_set_word(dev,64523,(unsigned short)0);
    
#line 1248 
    if (ret != 0) {
      
#line 1249 
      __retres = ret;
      
#line 1249 
      goto return_label;
    }
    else ;
    
#line 1250 
    ret = hostap_set_word(dev,64521,(unsigned short)1);
    
#line 1251 
    if (ret != 0) {
      
#line 1252 
      __retres = ret;
      
#line 1252 
      goto return_label;
    }
    else ;
    
#line 1253 
    goto ldv_47282;
    case 768: 
#line 1254 
    ;
    
#line 1255 
    ret = hostap_set_word(dev,64523,(unsigned short)1);
    
#line 1256 
    if (ret != 0) {
      
#line 1257 
      __retres = ret;
      
#line 1257 
      goto return_label;
    }
    else ;
    
#line 1258 
    ret = hostap_set_word(dev,64521,(unsigned short)1);
    
#line 1259 
    if (ret != 0) {
      
#line 1260 
      __retres = ret;
      
#line 1260 
      goto return_label;
    }
    else ;
    
#line 1261 
    goto ldv_47282;
    case 0: 
#line 1262 
    ;
    
#line 1263 
    goto ldv_47282;
    default: 
#line 1264 
    ;
    
#line 1265 
    __retres = -22;
    
#line 1265 
    goto return_label;
  }
  ldv_47282: 
#line 1268 
  ;
  
#line 1268 
  if (((int)wrq->flags & 8192) != 0) {
    
#line 1269 
    ret = hostap_set_word(dev,64521,(unsigned short)1);
    
#line 1270 
    if (ret != 0) {
      
#line 1271 
      __retres = ret;
      
#line 1271 
      goto return_label;
    }
    else ;
    
#line 1272 
    ret = hostap_set_word(dev,64525,(unsigned short)((int)((unsigned short)(wrq->value / 1024))));
    
#line 1274 
    if (ret != 0) {
      
#line 1275 
      __retres = ret;
      
#line 1275 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1277 
  if (((int)wrq->flags & 4096) != 0) {
    
#line 1278 
    ret = hostap_set_word(dev,64521,(unsigned short)1);
    
#line 1279 
    if (ret != 0) {
      
#line 1280 
      __retres = ret;
      
#line 1280 
      goto return_label;
    }
    else ;
    
#line 1281 
    ret = hostap_set_word(dev,64524,(unsigned short)((int)((unsigned short)(wrq->value / 1024))));
    
#line 1283 
    if (ret != 0) {
      
#line 1284 
      __retres = ret;
      
#line 1284 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1287 
  __retres = ret;
  return_label: 
#line 1287 
                return __retres;
}


#line 1292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwpower(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 enable;
  __le16 mcast;
  int tmp_0;
  int tmp_3;
  
#line 1303 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1304 
  local = iface->local;
  
#line 1306 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64521,(void *)(& enable),2,1);
  
#line 1306 
  if (tmp_0 < 0) {
    
#line 1308 
    __retres = -22;
    
#line 1308 
    goto return_label;
  }
  else ;
  
#line 1310 
  if ((unsigned int)enable == 0U) {
    
#line 1311 
    rrq->disabled = (unsigned char)1U;
    
#line 1312 
    __retres = 0;
    
#line 1312 
    goto return_label;
  }
  else ;
  
#line 1315 
  rrq->disabled = (unsigned char)0U;
  
#line 1317 
  if (((int)rrq->flags & 61440) == 8192) {
    __le16 timeout;
    int tmp_1;
    
#line 1319 
    tmp_1 = (*((local->func)->get_rid))(dev,(unsigned short)64525,(void *)(& timeout),2,1);
    
#line 1319 
    if (tmp_1 < 0) {
      
#line 1322 
      __retres = -22;
      
#line 1322 
      goto return_label;
    }
    else ;
    
#line 1324 
    rrq->flags = (unsigned short)8192U;
    
#line 1325 
    rrq->value = (int)timeout * 1024;
  }
  else {
    __le16 period;
    int tmp_2;
    
#line 1328 
    tmp_2 = (*((local->func)->get_rid))(dev,(unsigned short)64524,(void *)(& period),2,1);
    
#line 1328 
    if (tmp_2 < 0) {
      
#line 1330 
      __retres = -22;
      
#line 1330 
      goto return_label;
    }
    else ;
    
#line 1332 
    rrq->flags = (unsigned short)4096U;
    
#line 1333 
    rrq->value = (int)period * 1024;
  }
  
#line 1336 
  tmp_3 = (*((local->func)->get_rid))(dev,(unsigned short)64523,(void *)(& mcast),2,1);
  
#line 1336 
  if (tmp_3 < 0) {
    
#line 1338 
    __retres = -22;
    
#line 1338 
    goto return_label;
  }
  else ;
  
#line 1340 
  if ((unsigned int)mcast != 0U) 
#line 1341 
                                 rrq->flags = (unsigned short)((unsigned int)rrq->flags | 768U); else 
                                                                    
#line 1343 
                                                                    rrq->flags = (unsigned short)((unsigned int)rrq->flags | 256U);
  
#line 1345 
  __retres = 0;
  return_label: 
#line 1345 
                return __retres;
}


#line 1350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwretry(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 1357 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1358 
  local = iface->local;
  
#line 1360 
  if ((unsigned int)rrq->disabled != 0U) {
    
#line 1361 
    __retres = -22;
    
#line 1361 
    goto return_label;
  }
  else ;
  
#line 1365 
  if ((unsigned int)rrq->flags == 4096U) {
    
#line 1366 
    if (rrq->value < 0) {
      
#line 1369 
      local->manual_retry_count = -1;
      
#line 1370 
      local->tx_control = (unsigned short)((unsigned int)local->tx_control & 65503U);
    }
    else {
      int tmp_0;
      
#line 1372 
      tmp_0 = hostap_set_word(dev,64562,(unsigned short)((int)((unsigned short)rrq->value)));
      
#line 1372 
      if (tmp_0 != 0) {
        
#line 1374 
        printk("\001",(char *)(& dev->name),rrq->value);
        
#line 1377 
        __retres = -95;
        
#line 1377 
        goto return_label;
      }
      else ;
      
#line 1380 
      local->manual_retry_count = rrq->value;
      
#line 1381 
      local->tx_control = (unsigned short)((unsigned int)local->tx_control | 32U);
    }
    
#line 1383 
    __retres = 0;
    
#line 1383 
    goto return_label;
  }
  else ;
  
#line 1386 
  __retres = -95;
  return_label: 
#line 1386 
                return __retres;
}


#line 1411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwretry(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  __le16 shortretry;
  __le16 longretry;
  __le16 lifetime;
  __le16 altretry;
  int tmp_0;
  
#line 1419 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1420 
  local = iface->local;
  
#line 1422 
  tmp_0 = (*((local->func)->get_rid))(dev,(unsigned short)64840,(void *)(& shortretry),2,1);
  
#line 1422 
  if (tmp_0 < 0) {
    
#line 1428 
    __retres = -22;
    
#line 1428 
    goto return_label;
  }
  else {
    int tmp_1;
    
#line 1423 
    tmp_1 = (*((local->func)->get_rid))(dev,(unsigned short)64841,(void *)(& longretry),2,1);
    
#line 1423 
    if (tmp_1 < 0) {
      
#line 1428 
      __retres = -22;
      
#line 1428 
      goto return_label;
    }
    else {
      int tmp_2;
      
#line 1425 
      tmp_2 = (*((local->func)->get_rid))(dev,(unsigned short)64842,(void *)(& lifetime),2,1);
      
#line 1425 
      if (tmp_2 < 0) {
        
#line 1428 
        __retres = -22;
        
#line 1428 
        goto return_label;
      }
      else ;
    }
  }
  
#line 1430 
  rrq->disabled = (unsigned char)0U;
  
#line 1432 
  if (((int)rrq->flags & 61440) == 8192) {
    
#line 1433 
    rrq->flags = (unsigned short)8192U;
    
#line 1434 
    rrq->value = (int)lifetime * 1024;
  }
  else 
    
#line 1436 
    if (local->manual_retry_count >= 0) {
      int tmp_3;
      
#line 1437 
      rrq->flags = (unsigned short)4096U;
      
#line 1438 
      tmp_3 = (*((local->func)->get_rid))(dev,(unsigned short)64562,(void *)(& altretry),2,1);
      
#line 1438 
      if (tmp_3 >= 0) 
#line 1441 
                      rrq->value = (int)altretry; else 
#line 1443 
                                                       rrq->value = local->manual_retry_count;
    }
    else 
      
#line 1444 
      if (((int)rrq->flags & 32) != 0) {
        
#line 1445 
        rrq->flags = (unsigned short)4128U;
        
#line 1446 
        rrq->value = (int)longretry;
      }
      else {
        
#line 1448 
        rrq->flags = (unsigned short)4096U;
        
#line 1449 
        rrq->value = (int)shortretry;
        
#line 1450 
        if ((int)shortretry != (int)longretry) 
#line 1451 
                                               rrq->flags = (unsigned short)((unsigned int)rrq->flags | 16U); else ;
      }
  
#line 1454 
  __retres = 0;
  return_label: 
#line 1454 
                return __retres;
}


#line 1505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwtxpow(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u16 val;
  
#line 1515 
  int ret = 0;
  
#line 1517 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1518 
  local = iface->local;
  
#line 1520 
  if ((unsigned int)rrq->disabled != 0U) {
    int tmp_1;
    
#line 1521 
    if (local->txpower_type != (unsigned int)PRISM2_TXPOWER_OFF) {
      char *tmp_0;
      
#line 1522 
      val = (unsigned short)255U;
      
#line 1523 
      ret = (*((local->func)->cmd))(dev,(unsigned short)49,(unsigned short)26,& val,(u16 *)0U);
      
#line 1527 
      if (ret != 0) 
#line 1527 
                    tmp_0 = (char *)"failed"; else 
#line 1527 
                                                   tmp_0 = (char *)"OK";
      
#line 1526 
      ;
      
#line 1526 
      printk("\001",(char *)(& dev->name),tmp_0);
      
#line 1528 
      local->txpower_type = PRISM2_TXPOWER_OFF;
    }
    else ;
    
#line 1530 
    if (ret != 0) 
#line 1530 
                  tmp_1 = -95; else 
#line 1530 
                                    tmp_1 = 0;
    
#line 1530 
    __retres = tmp_1;
    
#line 1530 
    goto return_label;
  }
  else ;
  
#line 1533 
  if (local->txpower_type == (unsigned int)PRISM2_TXPOWER_OFF) {
    char *tmp_2;
    
#line 1534 
    val = (unsigned short)0U;
    
#line 1535 
    ret = (*((local->func)->cmd))(dev,(unsigned short)49,(unsigned short)26,& val,(u16 *)0U);
    
#line 1538 
    if (ret != 0) 
#line 1538 
                  tmp_2 = (char *)"failed"; else 
#line 1538 
                                                 tmp_2 = (char *)"OK";
    
#line 1537 
    ;
    
#line 1537 
    printk("\001",(char *)(& dev->name),tmp_2);
    
#line 1539 
    local->txpower_type = PRISM2_TXPOWER_UNKNOWN;
  }
  else ;
  
#line 1579 
  if ((unsigned int)rrq->fixed != 0U) 
#line 1580 
                                      ret = -95; else ;
  
#line 1583 
  __retres = ret;
  return_label: 
#line 1583 
                return __retres;
}


#line 1586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwtxpow(struct net_device *dev, struct iw_request_info *info, struct iw_param *rrq, char *extra)
{
  int __retres;
  
#line 1623 
  __retres = -95;
  
#line 1623 
  return __retres;
}


#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_request_hostscan(struct net_device *dev, u8 *ssid, u8 ssid_len)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  struct hfa384x_hostscan_request scan_req;
  int tmp_0;
  
#line 1640 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1641 
  local = iface->local;
  
#line 1643 
  memset((void *)(& scan_req),0,38UL);
  
#line 1644 
  scan_req.channel_list = (unsigned short)((int)local->channel_mask & (int)local->scan_channel_mask);
  
#line 1646 
  scan_req.txrate = (unsigned short)1U;
  
#line 1647 
  if (ssid != (u8 *)0U) {
    
#line 1648 
    if ((unsigned int)ssid_len > 32U) {
      
#line 1649 
      __retres = -22;
      
#line 1649 
      goto return_label;
    }
    else ;
    
#line 1650 
    scan_req.target_ssid_len = (unsigned short)ssid_len;
    
#line 1651 
    memcpy((void *)(& scan_req.target_ssid),(void const *)ssid,(unsigned long)ssid_len);
  }
  else ;
  
#line 1654 
  tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64741,(void *)(& scan_req),38);
  
#line 1654 
  if (tmp_0 != 0) {
    
#line 1656 
    printk("\001",(char *)(& dev->name));
    
#line 1657 
    __retres = -22;
    
#line 1657 
    goto return_label;
  }
  else ;
  
#line 1659 
  __retres = 0;
  return_label: 
#line 1659 
                return __retres;
}


#line 1663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_request_scan(struct net_device *dev)
{
  struct hostap_interface *iface;
  local_info_t *local;
  struct hfa384x_scan_request scan_req;
  int tmp_0;
  
#line 1668 
  int ret = 0;
  
#line 1670 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1671 
  local = iface->local;
  
#line 1673 
  memset((void *)(& scan_req),0,4UL);
  
#line 1674 
  scan_req.channel_list = (unsigned short)((int)local->channel_mask & (int)local->scan_channel_mask);
  
#line 1676 
  scan_req.txrate = (unsigned short)1U;
  
#line 1687 
  if (local->host_roaming == 0) 
#line 1688 
                                hostap_set_word(dev,64557,(unsigned short)2); else ;
  
#line 1691 
  tmp_0 = (*((local->func)->set_rid))(dev,(unsigned short)64737,(void *)(& scan_req),4);
  
#line 1691 
  if (tmp_0 != 0) {
    
#line 1693 
    printk("\001");
    
#line 1694 
    ret = -22;
  }
  else ;
  
#line 1697 
  if (local->host_roaming == 0) 
#line 1698 
                                hostap_set_word(dev,64557,(unsigned short)1); else ;
  
#line 1701 
  return ret;
}


#line 1721  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwscan(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int ret;
  
#line 1728 
  u8 *ssid = (u8 *)0U;
  
#line 1728 
  u8 ssid_len = (unsigned char)0U;
  
#line 1729 
  struct iw_scan_req *req = (struct iw_scan_req *)extra;
  
#line 1731 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 1732 
  local = iface->local;
  
#line 1734 
  if ((unsigned int)data->length <= 315U) 
#line 1735 
                                          req = (struct iw_scan_req *)0; else ;
  
#line 1737 
  if (local->iw_mode == 3) {
    
#line 1741 
    data->length = (unsigned short)0U;
    
#line 1742 
    __retres = 0;
    
#line 1742 
    goto return_label;
  }
  else ;
  
#line 1745 
  if (local->dev_enabled == 0) {
    
#line 1746 
    __retres = -100;
    
#line 1746 
    goto return_label;
  }
  else ;
  
#line 1748 
  if (req != (struct iw_scan_req *)0 && ((int)data->flags & 2) != 0) {
    
#line 1749 
    ssid = (u8 *)(& req->essid);
    
#line 1750 
    ssid_len = req->essid_len;
    
#line 1752 
    if ((unsigned int)ssid_len != 0U && ((unsigned int)local->iw_mode + 4294967295U > 1U || local->sta_fw_ver <= 66304U)) {
      
#line 1756 
      __retres = -95;
      
#line 1756 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1759 
  if (local->sta_fw_ver > 66304U) 
#line 1760 
                                  ret = prism2_request_hostscan(dev,ssid,(unsigned char)((int)ssid_len)); else 
                                                                    
#line 1762 
                                                                    ret = prism2_request_scan(dev);
  
#line 1764 
  if (ret == 0) 
#line 1765 
                local->scan_timestamp = jiffies; else ;
  
#line 1769 
  __retres = ret;
  return_label: 
#line 1769 
                return __retres;
}


#line 1774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static char *__prism2_translate_scan(local_info_t *local, struct iw_request_info *info, struct hfa384x_hostscan_result *scan, struct hostap_bss_info *bss, char *current_ev, char *end_buf)
{
  int i;
  int chan;
  struct iw_event iwe;
  char *current_val;
  u16 capabilities;
  u8 *pos;
  u8 *ssid;
  u8 *bssid;
  size_t ssid_len;
  char *buf;
  
#line 1789 
  if (bss != (struct hostap_bss_info *)0) {
    
#line 1790 
    ssid = (u8 *)(& bss->ssid);
    
#line 1791 
    ssid_len = bss->ssid_len;
    
#line 1792 
    bssid = (u8 *)(& bss->bssid);
  }
  else {
    
#line 1794 
    ssid = (u8 *)(& scan->ssid);
    
#line 1795 
    ssid_len = (unsigned long)scan->ssid_len;
    
#line 1796 
    bssid = (u8 *)(& scan->bssid);
  }
  
#line 1798 
  if (ssid_len > 32UL) 
#line 1799 
                       ssid_len = 32UL; else ;
  
#line 1802 
  memset((void *)(& iwe),0,24UL);
  
#line 1803 
  iwe.cmd = (unsigned short)35605U;
  
#line 1804 
  iwe.u.ap_addr.sa_family = (unsigned short)1U;
  
#line 1805 
  memcpy((void *)(& iwe.u.ap_addr.sa_data),(void const *)bssid,6UL);
  
#line 1806 
  current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,24);
  
#line 1811 
  memset((void *)(& iwe),0,24UL);
  
#line 1812 
  iwe.cmd = (unsigned short)35611U;
  
#line 1813 
  iwe.u.data.length = (unsigned short)ssid_len;
  
#line 1814 
  iwe.u.data.flags = (unsigned short)1U;
  
#line 1815 
  current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)ssid);
  
#line 1818 
  memset((void *)(& iwe),0,24UL);
  
#line 1819 
  iwe.cmd = (unsigned short)35591U;
  
#line 1820 
  if (bss != (struct hostap_bss_info *)0) 
#line 1821 
                                          capabilities = bss->capab_info; else 
                                                                    
#line 1823 
                                                                    capabilities = scan->capability;
  
#line 1825 
  if (((int)capabilities & 3) != 0) {
    
#line 1827 
    if (((int)capabilities & 1) != 0) 
#line 1828 
                                      iwe.u.mode = 3U; else 
#line 1830 
                                                            iwe.u.mode = 1U;
    
#line 1831 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
  }
  else ;
  
#line 1835 
  memset((void *)(& iwe),0,24UL);
  
#line 1836 
  iwe.cmd = (unsigned short)35589U;
  
#line 1837 
  if (scan != (struct hfa384x_hostscan_result *)0) 
#line 1838 
                                                   chan = (int)scan->chid;
  else 
    
#line 1839 
    if (bss != (struct hostap_bss_info *)0) 
#line 1840 
                                            chan = bss->chan; else 
#line 1842 
                                                                   chan = 0;
  
#line 1845 
  if (chan > 0) {
    
#line 1846 
    iwe.u.freq.m = (int)(freq_list_1[chan + -1] * (long)100000U);
    
#line 1847 
    iwe.u.freq.e = (short)1;
    
#line 1848 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,16);
  }
  else ;
  
#line 1852 
  if (scan != (struct hfa384x_hostscan_result *)0) {
    
#line 1853 
    memset((void *)(& iwe),0,24UL);
    
#line 1854 
    iwe.cmd = (unsigned short)35841U;
    
#line 1855 
    if (local->last_scan_type == (unsigned int)PRISM2_HOSTSCAN) {
      
#line 1856 
      iwe.u.qual.level = (unsigned char)scan->sl;
      
#line 1857 
      iwe.u.qual.noise = (unsigned char)scan->anl;
    }
    else {
      
#line 1859 
      iwe.u.qual.level = (unsigned char)((unsigned int)((unsigned char)(((int)scan->sl * 100) / 255)) + 156U);
      
#line 1861 
      iwe.u.qual.noise = (unsigned char)((unsigned int)((unsigned char)(((int)scan->anl * 100) / 255)) + 156U);
    }
    
#line 1864 
    iwe.u.qual.updated = (unsigned char)30U;
    
#line 1868 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
  }
  else ;
  
#line 1872 
  memset((void *)(& iwe),0,24UL);
  
#line 1873 
  iwe.cmd = (unsigned short)35627U;
  
#line 1874 
  if (((int)capabilities & 16) != 0) 
#line 1875 
                                     iwe.u.data.flags = (unsigned short)2048U; else 
                                                                    
#line 1877 
                                                                    iwe.u.data.flags = (unsigned short)32768U;
  
#line 1878 
  iwe.u.data.length = (unsigned short)0U;
  
#line 1879 
  current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)"");
  
#line 1882 
  if (scan != (struct hfa384x_hostscan_result *)0) {
    int tmp;
    int tmp_0;
    
#line 1883 
    memset((void *)(& iwe),0,24UL);
    
#line 1884 
    iwe.cmd = (unsigned short)35617U;
    
#line 1885 
    tmp = iwe_stream_lcp_len(info);
    
#line 1885 
    current_val = current_ev + tmp;
    
#line 1886 
    pos = (u8 *)(& scan->sup_rates);
    
#line 1887 
    i = 0;
    
#line 1887 
    goto ldv_47381;
    ldv_47380: 
#line 1888 
    ;
    
#line 1888 
    if ((unsigned int)*(pos + i) == 0U) 
#line 1889 
                                        goto ldv_47379; else ;
    
#line 1891 
    iwe.u.bitrate.value = ((int)*(pos + i) & 127) * 500000;
    
#line 1892 
    current_val = iwe_stream_add_value(info,current_ev,current_val,end_buf,& iwe,16);
    
#line 1887 
    i += 1;
    ldv_47381: 
#line 1888 
    ;
    
#line 1887 
    if ((unsigned int)i <= 9U) 
#line 1889 
                               goto ldv_47380; else 
#line 1892 
                                                    goto ldv_47379;
    ldv_47379: 
#line 1893 
    ;
    
#line 1897 
    tmp_0 = iwe_stream_lcp_len(info);
    
#line 1897 
    ;
    
#line 1897 
    if ((long)current_val - (long)current_ev > (long)tmp_0) 
#line 1898 
                                                            current_ev = current_val; else ;
  }
  else ;
  
#line 1902 
  buf = (char *)kmalloc_3(158UL,32U);
  
#line 1903 
  if (buf != (char *)0 && scan != (struct hfa384x_hostscan_result *)0) {
    size_t tmp_2;
    size_t tmp_3;
    
#line 1904 
    memset((void *)(& iwe),0,24UL);
    
#line 1905 
    iwe.cmd = (unsigned short)35842U;
    
#line 1906 
    sprintf(buf,"bcn_int=%d",(int)scan->beacon_interval);
    
#line 1907 
    tmp_2 = strlen((char const *)buf);
    
#line 1907 
    iwe.u.data.length = (unsigned short)tmp_2;
    
#line 1908 
    current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,buf);
    
#line 1911 
    memset((void *)(& iwe),0,24UL);
    
#line 1912 
    iwe.cmd = (unsigned short)35842U;
    
#line 1913 
    sprintf(buf,"resp_rate=%d",(int)scan->rate);
    
#line 1914 
    tmp_3 = strlen((char const *)buf);
    
#line 1914 
    iwe.u.data.length = (unsigned short)tmp_3;
    
#line 1915 
    current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,buf);
    
#line 1918 
    if (local->last_scan_type == (unsigned int)PRISM2_HOSTSCAN && ((int)capabilities & 2) != 0) {
      size_t tmp_4;
      
#line 1920 
      memset((void *)(& iwe),0,24UL);
      
#line 1921 
      iwe.cmd = (unsigned short)35842U;
      
#line 1922 
      sprintf(buf,"atim=%d",(int)scan->atim);
      
#line 1923 
      tmp_4 = strlen((char const *)buf);
      
#line 1923 
      iwe.u.data.length = (unsigned short)tmp_4;
      
#line 1924 
      current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,buf);
    }
    else ;
  }
  else ;
  
#line 1928 
  kfree((void const *)buf);
  
#line 1930 
  if ((bss != (struct hostap_bss_info *)0 && bss->wpa_ie_len != 0UL) && bss->wpa_ie_len <= 64UL) {
    
#line 1931 
    memset((void *)(& iwe),0,24UL);
    
#line 1932 
    iwe.cmd = (unsigned short)35845U;
    
#line 1933 
    iwe.u.data.length = (unsigned short)bss->wpa_ie_len;
    
#line 1934 
    current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& bss->wpa_ie));
  }
  else ;
  
#line 1938 
  if ((bss != (struct hostap_bss_info *)0 && bss->rsn_ie_len != 0UL) && bss->rsn_ie_len <= 64UL) {
    
#line 1939 
    memset((void *)(& iwe),0,24UL);
    
#line 1940 
    iwe.cmd = (unsigned short)35845U;
    
#line 1941 
    iwe.u.data.length = (unsigned short)bss->rsn_ie_len;
    
#line 1942 
    current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& bss->rsn_ie));
  }
  else ;
  
#line 1946 
  return current_ev;
}


#line 1952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
__inline static int prism2_translate_scan(local_info_t *local, struct iw_request_info *info, char *buffer, int buflen)
{
  int __retres;
  struct hfa384x_hostscan_result *scan;
  int entry;
  int hostscan;
  struct list_head *ptr;
  
#line 1958 
  char *current_ev = buffer;
  
#line 1959 
  char *end_buf = buffer + buflen;
  
#line 1962 
  ldv_spin_lock_bh_74(& local->lock);
  
#line 1964 
  ptr = local->bss_list.next;
  
#line 1964 
  goto ldv_47398;
  ldv_47397: 
#line 1965 
  ;
  {
    struct hostap_bss_info *bss;
    struct hostap_bss_info *tmp;
    {
      
#line 1966 
      struct list_head const *__mptr = (struct list_head const *)ptr;
      
#line 1966 
      tmp = (struct hostap_bss_info *)__mptr;
    }
    
#line 1966 
    bss = tmp;
    
#line 1967 
    bss->included = 0;
  }
  
#line 1964 
  ptr = ptr->next;
  ldv_47398: 
#line 1965 
  ;
  
#line 1964 
  if (& local->bss_list != ptr) 
#line 1966 
                                goto ldv_47397; else 
#line 1969 
                                                     goto ldv_47399;
  ldv_47399: 
#line 1970 
  ;
  
#line 1970 
  hostscan = local->last_scan_type == (unsigned int)PRISM2_HOSTSCAN;
  
#line 1971 
  entry = 0;
  
#line 1971 
  goto ldv_47408;
  ldv_47407: 
#line 1972 
  ;
  {
    
#line 1972 
    int found = 0;
    
#line 1973 
    scan = local->last_scan_results + entry;
    
#line 1978 
    ptr = local->bss_list.next;
    
#line 1978 
    goto ldv_47405;
    ldv_47404: 
#line 1979 
    ;
    {
      struct hostap_bss_info *bss_0;
      struct hostap_bss_info *tmp_0;
      bool tmp_1;
      {
        
#line 1980 
        struct list_head const *__mptr_0 = (struct list_head const *)ptr;
        
#line 1980 
        tmp_0 = (struct hostap_bss_info *)__mptr_0;
      }
      
#line 1980 
      bss_0 = tmp_0;
      
#line 1981 
      tmp_1 = ether_addr_equal((u8 const *)(& bss_0->bssid),(u8 const *)(& scan->bssid));
      
#line 1981 
      if ((int)tmp_1 != 0) {
        
#line 1982 
        bss_0->included = 1;
        
#line 1983 
        current_ev = __prism2_translate_scan(local,info,scan,bss_0,current_ev,end_buf);
        
#line 1986 
        found += 1;
      }
      else ;
    }
    
#line 1978 
    ptr = ptr->next;
    ldv_47405: 
#line 1979 
    ;
    
#line 1978 
    if (& local->bss_list != ptr) 
#line 1980 
                                  goto ldv_47404; else 
#line 1983 
                                                       goto ldv_47406;
    ldv_47406: 
#line 1984 
    ;
    
#line 1989 
    if (found == 0) 
#line 1990 
                    current_ev = __prism2_translate_scan(local,info,scan,(struct hostap_bss_info *)0,current_ev,end_buf); else ;
    
#line 1994 
    if ((unsigned long)((long)end_buf - (long)current_ev) <= 24UL) {
      
#line 1996 
      ldv_spin_unlock_bh_75(& local->lock);
      
#line 1997 
      __retres = -7;
      
#line 1997 
      goto return_label;
    }
    else ;
  }
  
#line 1971 
  entry += 1;
  ldv_47408: 
#line 1972 
  ;
  
#line 1971 
  if (local->last_scan_results_count > entry) 
#line 1973 
                                              goto ldv_47407; else 
#line 1976 
                                                                   goto ldv_47409;
  ldv_47409: 
#line 1977 
  ;
  
#line 2004 
  ptr = local->bss_list.next;
  
#line 2004 
  goto ldv_47415;
  ldv_47414: 
#line 2005 
  ;
  {
    struct hostap_bss_info *bss_1;
    struct hostap_bss_info *tmp_2;
    {
      
#line 2006 
      struct list_head const *__mptr_1 = (struct list_head const *)ptr;
      
#line 2006 
      tmp_2 = (struct hostap_bss_info *)__mptr_1;
    }
    
#line 2006 
    bss_1 = tmp_2;
    
#line 2007 
    if (bss_1->included != 0) 
#line 2008 
                              goto ldv_47413; else ;
    
#line 2009 
    current_ev = __prism2_translate_scan(local,info,(struct hfa384x_hostscan_result *)0,bss_1,current_ev,end_buf);
    
#line 2012 
    if ((unsigned long)((long)end_buf - (long)current_ev) <= 24UL) {
      
#line 2014 
      ldv_spin_unlock_bh_76_0(& local->lock);
      
#line 2015 
      __retres = -7;
      
#line 2015 
      goto return_label;
    }
    else ;
  }
  ldv_47413: 
#line 2018 
  ;
  
#line 2004 
  ptr = ptr->next;
  ldv_47415: 
#line 2005 
  ;
  
#line 2004 
  if (& local->bss_list != ptr) 
#line 2006 
                                goto ldv_47414; else 
#line 2009 
                                                     goto ldv_47416;
  ldv_47416: 
#line 2010 
  ;
  
#line 2019 
  ldv_spin_unlock_bh_77_0(& local->lock);
  
#line 2021 
  __retres = (int)((long)current_ev - (long)buffer);
  return_label: 
#line 2021 
                return __retres;
}


#line 2026  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
__inline static int prism2_ioctl_giwscan_sta(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int res;
  
#line 2037 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2038 
  local = iface->local;
  
#line 2042 
  if (local->scan_timestamp != 0UL) {
    int tmp_0;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 2043 
      tmp_0 = 1;
    }
    
#line 2042 
    if (tmp_0 != 0) {
      int tmp_1;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 2043 
        tmp_1 = 1;
      }
      
#line 2043 
      if (tmp_1 != 0) {
        
#line 2043 
        if ((long)((jiffies - local->scan_timestamp) + 18446744073709550866UL) < 0L) {
          
#line 2052 
          __retres = -11;
          
#line 2052 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2054 
  local->scan_timestamp = 0UL;
  
#line 2056 
  res = prism2_translate_scan(local,info,extra,(int)data->length);
  
#line 2058 
  if (res >= 0) {
    
#line 2059 
    data->length = (unsigned short)res;
    
#line 2060 
    __retres = 0;
    
#line 2060 
    goto return_label;
  }
  else {
    
#line 2062 
    data->length = (unsigned short)0U;
    
#line 2063 
    __retres = res;
    
#line 2063 
    goto return_label;
  }
  return_label: 
#line 2058 
                return __retres;
}


#line 2069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwscan(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int res;
  
#line 2077 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2078 
  local = iface->local;
  
#line 2080 
  if (local->iw_mode == 3) {
    
#line 2089 
    res = prism2_ap_translate_scan(dev,info,extra);
    
#line 2090 
    if (res >= 0) {
      
#line 2091 
      printk("\001",res);
      
#line 2093 
      data->length = (unsigned short)res;
      
#line 2094 
      __retres = 0;
      
#line 2094 
      goto return_label;
    }
    else {
      
#line 2096 
      printk("\001",res);
      
#line 2099 
      data->length = (unsigned short)0U;
      
#line 2100 
      __retres = res;
      
#line 2100 
      goto return_label;
    }
  }
  else {
    int tmp_0;
    
#line 2104 
    tmp_0 = prism2_ioctl_giwscan_sta(dev,info,data,extra);
    
#line 2104 
    __retres = tmp_0;
    
#line 2104 
    goto return_label;
  }
  return_label: 
#line 2080 
                return __retres;
}


#line 2109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static struct iw_priv_args const prism2_priv[86U] = {{.cmd = 35812U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'o', (char)'n', (char)'i', (char)'t', (char)'o', (char)'r', (char)'\000'}}, {.cmd = 35811U, .set_args = (unsigned short)6145U, .get_args = (unsigned short)6145U, .name = {(char)'r', (char)'e', (char)'a', (char)'d', (char)'m', (char)'i', (char)'f', (char)'\000'}}, {.cmd = 35810U, .set_args = (unsigned short)6146U, .get_args = (unsigned short)0U, .name = {(char)'w', (char)'r', (char)'i', (char)'t', (char)'e', (char)'m', (char)'i', (char)'f', (char)'\000'}}, {.cmd = 35814U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'\000'}}, {.cmd = 35816U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'i', (char)'n', (char)'q', (char)'u', (char)'i', (char)'r', (char)'e', (char)'\000'}}, {.cmd = 35822U, .set_args = (unsigned short)18434U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'r', (char)'i', (char)'d', (char)'_', (char)'w', (char)'o', (char)'r', (char)'d', (char)'\000'}}, {.cmd = 35824U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'a', (char)'c', (char)'c', (char)'m', (char)'d', (char)'\000'}}, {.cmd = 35818U, .set_args = (unsigned short)26625U, .get_args = (unsigned short)0U, .name = {(char)'w', (char)'d', (char)'s', (char)'_', (char)'a', (char)'d', (char)'d', (char)'\000'}}, {.cmd = 35820U, .set_args = (unsigned short)26625U, .get_args = (unsigned short)0U, .name = {(char)'w', (char)'d', (char)'s', (char)'_', (char)'d', (char)'e', (char)'l', (char)'\000'}}, {.cmd = 35826U, .set_args = (unsigned short)26625U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'d', (char)'d', (char)'m', (char)'a', (char)'c', (char)'\000'}}, {.cmd = 35828U, .set_args = (unsigned short)26625U, .get_args = (unsigned short)0U, .name = {(char)'d', (char)'e', (char)'l', (char)'m', (char)'a', (char)'c', (char)'\000'}}, {.cmd = 35830U, .set_args = (unsigned short)26625U, .get_args = (unsigned short)0U, .name = {(char)'k', (char)'i', (char)'c', (char)'k', (char)'m', (char)'a', (char)'c', (char)'\000'}}, {.cmd = 35808U, .set_args = (unsigned short)18434U, .get_args = (unsigned short)0U, .name = {(char)'p', (char)'r', (char)'i', (char)'s', (char)'m', (char)'2', (char)'_', (char)'p', (char)'a', (char)'r', (char)'a', (char)'m', (char)'\000'}}, {.cmd = 35809U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'p', (char)'r', (char)'i', (char)'s', (char)'m', (char)'2', (char)'_', (char)'p', (char)'a', (char)'r', (char)'a', (char)'m', (char)'\000'}}, {.cmd = 35808U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'\000'}}, {.cmd = 35809U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'\000'}}, {.cmd = 2U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'t', (char)'x', (char)'r', (char)'a', (char)'t', (char)'e', (char)'c', (char)'t', (char)'r', (char)'l', (char)'\000'}}, {.cmd = 2U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'t', (char)'x', (char)'r', (char)'a', (char)'t', (char)'e', (char)'c', (char)'t', (char)'r', (char)'l', (char)'\000'}}, {.cmd = 3U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'b', (char)'e', (char)'a', (char)'c', (char)'o', (char)'n', (char)'_', (char)'i', (char)'n', (char)'t', (char)'\000'}}, {.cmd = 3U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'b', (char)'e', (char)'a', (char)'c', (char)'o', (char)'n', (char)'_', (char)'i', (char)'n', (char)'t', (char)'\000'}}, {.cmd = 4U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'p', (char)'s', (char)'e', (char)'u', (char)'d', (char)'o', (char)'_', (char)'i', (char)'b', (char)'s', (char)'s', (char)'\000'}}, {.cmd = 4U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'p', (char)'s', (char)'e', (char)'u', (char)'d', (char)'o', (char)'_', (char)'i', (char)'b', (char)'s', (char)'s', (char)'\000'}}, {.cmd = 5U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'l', (char)'c', (char)'\000'}}, {.cmd = 5U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'l', (char)'c', (char)'\000'}}, {.cmd = 7U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'d', (char)'u', (char)'m', (char)'p', (char)'\000'}}, {.cmd = 7U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'d', (char)'u', (char)'m', (char)'p', (char)'\000'}}, {.cmd = 8U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'o', (char)'t', (char)'h', (char)'e', (char)'r', (char)'_', (char)'a', (char)'p', (char)'_', (char)'p', (char)'o', (char)'l', (char)'i', (char)'c', (char)'y', (char)'\000'}}, {.cmd = 8U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'o', (char)'t', (char)'h', (char)'e', (char)'r', (char)'_', (char)'a', (char)'p', (char)'_', (char)'p', (char)'o', (char)'l', (char)'\000'}}, {.cmd = 9U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'a', (char)'x', (char)'_', (char)'i', (char)'n', (char)'a', (char)'c', (char)'t', (char)'i', (char)'v', (char)'i', (char)'t', (char)'y', (char)'\000'}}, {.cmd = 9U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'m', (char)'a', (char)'x', (char)'_', (char)'i', (char)'n', (char)'a', (char)'c', (char)'t', (char)'i', (char)'v', (char)'i', (char)'\000'}}, {.cmd = 10U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'b', (char)'r', (char)'i', (char)'d', (char)'g', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.cmd = 10U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'b', (char)'r', (char)'i', (char)'d', (char)'g', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'\000'}}, {.cmd = 11U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'d', (char)'t', (char)'i', (char)'m', (char)'_', (char)'p', (char)'e', (char)'r', (char)'i', (char)'o', (char)'d', (char)'\000'}}, {.cmd = 11U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'d', (char)'t', (char)'i', (char)'m', (char)'_', (char)'p', (char)'e', (char)'r', (char)'i', (char)'o', (char)'d', (char)'\000'}}, {.cmd = 12U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'n', (char)'u', (char)'l', (char)'l', (char)'f', (char)'u', (char)'n', (char)'c', (char)'_', (char)'a', (char)'c', (char)'k', (char)'\000'}}, {.cmd = 12U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'n', (char)'u', (char)'l', (char)'l', (char)'f', (char)'u', (char)'n', (char)'c', (char)'_', (char)'a', (char)'c', (char)'k', (char)'\000'}}, {.cmd = 13U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'a', (char)'x', (char)'_', (char)'w', (char)'d', (char)'s', (char)'\000'}}, {.cmd = 13U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'m', (char)'a', (char)'x', (char)'_', (char)'w', (char)'d', (char)'s', (char)'\000'}}, {.cmd = 14U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'u', (char)'t', (char)'o', (char)'m', (char)'_', (char)'a', (char)'p', (char)'_', (char)'w', (char)'d', (char)'s', (char)'\000'}}, {.cmd = 14U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'u', (char)'t', (char)'o', (char)'m', (char)'_', (char)'a', (char)'p', (char)'_', (char)'w', (char)'d', (char)'s', (char)'\000'}}, {.cmd = 15U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'p', (char)'_', (char)'a', (char)'u', (char)'t', (char)'h', (char)'_', (char)'a', (char)'l', (char)'g', (char)'s', (char)'\000'}}, {.cmd = 15U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'p', (char)'_', (char)'a', (char)'u', (char)'t', (char)'h', (char)'_', (char)'a', (char)'l', (char)'g', (char)'s', (char)'\000'}}, {.cmd = 16U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'f', (char)'c', (char)'s', (char)'e', (char)'r', (char)'r', (char)'\000'}}, {.cmd = 16U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'f', (char)'c', (char)'s', (char)'e', (char)'r', (char)'r', (char)'\000'}}, {.cmd = 17U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'e', (char)'n', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'\000'}}, {.cmd = 17U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'e', (char)'n', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'\000'}}, {.cmd = 18U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'d', (char)'e', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'\000'}}, {.cmd = 18U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'d', (char)'e', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'\000'}}, {.cmd = 21U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'r', (char)'o', (char)'a', (char)'m', (char)'i', (char)'n', (char)'g', (char)'\000'}}, {.cmd = 21U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'_', (char)'r', (char)'o', (char)'a', (char)'m', (char)'i', (char)'n', (char)'g', (char)'\000'}}, {.cmd = 22U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'b', (char)'c', (char)'r', (char)'x', (char)'_', (char)'s', (char)'t', (char)'a', (char)'_', (char)'k', (char)'e', (char)'y', (char)'\000'}}, {.cmd = 22U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'b', (char)'c', (char)'r', (char)'x', (char)'_', (char)'s', (char)'t', (char)'a', (char)'_', (char)'k', (char)'e', (char)'y', (char)'\000'}}, {.cmd = 23U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'i', (char)'e', (char)'e', (char)'e', (char)'_', (char)'8', (char)'0', (char)'2', (char)'_', (char)'1', (char)'x', (char)'\000'}}, {.cmd = 23U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'i', (char)'e', (char)'e', (char)'e', (char)'_', (char)'8', (char)'0', (char)'2', (char)'_', (char)'1', (char)'x', (char)'\000'}}, {.cmd = 24U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'n', (char)'t', (char)'s', (char)'e', (char)'l', (char)'_', (char)'t', (char)'x', (char)'\000'}}, {.cmd = 24U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'n', (char)'t', (char)'s', (char)'e', (char)'l', (char)'_', (char)'t', (char)'x', (char)'\000'}}, {.cmd = 25U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'n', (char)'t', (char)'s', (char)'e', (char)'l', (char)'_', (char)'r', (char)'x', (char)'\000'}}, {.cmd = 25U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'n', (char)'t', (char)'s', (char)'e', (char)'l', (char)'_', (char)'r', (char)'x', (char)'\000'}}, {.cmd = 26U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'o', (char)'n', (char)'i', (char)'t', (char)'o', (char)'r', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}}, {.cmd = 26U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'m', (char)'o', (char)'n', (char)'i', (char)'t', (char)'o', (char)'r', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}}, {.cmd = 27U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'w', (char)'d', (char)'s', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}}, {.cmd = 27U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'w', (char)'d', (char)'s', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}}, {.cmd = 28U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'s', (char)'c', (char)'a', (char)'n', (char)'\000'}}, {.cmd = 28U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'s', (char)'c', (char)'a', (char)'n', (char)'\000'}}, {.cmd = 29U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'a', (char)'p', (char)'_', (char)'s', (char)'c', (char)'a', (char)'n', (char)'\000'}}, {.cmd = 29U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'a', (char)'p', (char)'_', (char)'s', (char)'c', (char)'a', (char)'n', (char)'\000'}}, {.cmd = 30U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'e', (char)'n', (char)'h', (char)'_', (char)'s', (char)'e', (char)'c', (char)'\000'}}, {.cmd = 30U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'e', (char)'n', (char)'h', (char)'_', (char)'s', (char)'e', (char)'c', (char)'\000'}}, {.cmd = 32U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'b', (char)'a', (char)'s', (char)'i', (char)'c', (char)'_', (char)'r', (char)'a', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.cmd = 32U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'b', (char)'a', (char)'s', (char)'i', (char)'c', (char)'_', (char)'r', (char)'a', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.cmd = 33U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'o', (char)'p', (char)'e', (char)'r', (char)'_', (char)'r', (char)'a', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.cmd = 33U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'o', (char)'p', (char)'e', (char)'r', (char)'_', (char)'r', (char)'a', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.cmd = 34U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'\000'}}, {.cmd = 34U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'\000'}}, {.cmd = 35U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'_', (char)'s', (char)'t', (char)'a', (char)'\000'}}, {.cmd = 35U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'h', (char)'o', (char)'s', (char)'t', (char)'a', (char)'p', (char)'d', (char)'_', (char)'s', (char)'t', (char)'a', (char)'\000'}}, {.cmd = 36U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'w', (char)'p', (char)'a', (char)'\000'}}, {.cmd = 36U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'w', (char)'p', (char)'a', (char)'\000'}}, {.cmd = 37U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'p', (char)'r', (char)'i', (char)'v', (char)'a', (char)'c', (char)'y', (char)'_', (char)'i', (char)'n', (char)'v', (char)'o', (char)'k', (char)'e', (char)'d', (char)'\000'}}, {.cmd = 37U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'p', (char)'r', (char)'i', (char)'v', (char)'a', (char)'c', (char)'y', (char)'_', (char)'i', (char)'n', (char)'v', (char)'o', (char)'\000'}}, {.cmd = 38U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'t', (char)'k', (char)'i', (char)'p', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'e', (char)'r', (char)'m', (char)'e', (char)'a', (char)'\000'}}, {.cmd = 38U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'t', (char)'k', (char)'i', (char)'p', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'e', (char)'r', (char)'\000'}}, {.cmd = 39U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'u', (char)'n', (char)'e', (char)'n', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'e', (char)'\000'}}, {.cmd = 39U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'u', (char)'n', (char)'e', (char)'n', (char)'c', (char)'r', (char)'y', (char)'\000'}}, {.cmd = 40U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'c', (char)'a', (char)'n', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'n', (char)'e', (char)'l', (char)'s', (char)'\000'}}, {.cmd = 40U, .set_args = (unsigned short)0U, .get_args = (unsigned short)18433U, .name = {(char)'g', (char)'e', (char)'t', (char)'s', (char)'c', (char)'a', (char)'n', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'n', (char)'e', (char)'l', (char)'\000'}}};

#line 2300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_inquire(struct net_device *dev, int *i)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  int tmp_0;
  
#line 2305 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2306 
  local = iface->local;
  
#line 2308 
  tmp_0 = (*((local->func)->cmd))(dev,(unsigned short)17,(unsigned short)((int)((unsigned short)*i)),(u16 *)0U,(u16 *)0U);
  
#line 2308 
  if (tmp_0 != 0) {
    
#line 2309 
    __retres = -95;
    
#line 2309 
    goto return_label;
  }
  else ;
  
#line 2311 
  __retres = 0;
  return_label: 
#line 2311 
                return __retres;
}


#line 2315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_prism2_param(struct net_device *dev, struct iw_request_info *info, void *wrqu, char *extra)
{
  struct hostap_interface *iface;
  local_info_t *local;
  u16 val;
  
#line 2321 
  int *i = (int *)extra;
  
#line 2322 
  int param = *i;
  
#line 2323 
  int value = *(i + 1U);
  
#line 2324 
  int ret = 0;
  
#line 2327 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2328 
  local = iface->local;
  
#line 2330 
  switch (param) {
    int tmp_0;
    int tmp_3;
    u16 tmp_2;
    int tmp_4;
    char *tmp_5;
    int tmp_6;
    int tmp_8;
    int tmp_9;
    int tmp_11;
    int tmp_13;
    int tmp_25;
    int tmp_26;
    int tmp_28;
    int tmp_30;
    int tmp_32;
    case 2: 
#line 2331 
    ;
    
#line 2332 
    local->fw_tx_rate_control = value;
    
#line 2333 
    goto ldv_47462;
    case 3: 
#line 2335 
    ;
    
#line 2336 
    tmp_0 = hostap_set_word(dev,64563,(unsigned short)((int)((unsigned short)value)));
    
#line 2336 
    if (tmp_0 != 0) 
#line 2336 
                    goto _LOR;
    else {
      int tmp_1;
      
#line 2336 
      tmp_1 = (*((local->func)->reset_port))(dev);
      
#line 2336 
      if (tmp_1 != 0) _LOR: 
#line 2338 
                            ret = -22; else 
#line 2340 
                                            local->beacon_int = value;
    }
    
#line 2341 
    goto ldv_47462;
    case 4: 
#line 2344 
    ;
    
#line 2345 
    if (local->pseudo_adhoc == value) 
#line 2346 
                                      goto ldv_47462; else ;
    
#line 2348 
    if ((unsigned int)value > 1U) {
      
#line 2349 
      ret = -22;
      
#line 2350 
      goto ldv_47462;
    }
    else ;
    
#line 2353 
    printk("\001",(char *)(& dev->name),local->pseudo_adhoc,value);
    
#line 2355 
    local->pseudo_adhoc = value;
    
#line 2356 
    if (local->iw_mode != 1) 
#line 2357 
                             goto ldv_47462; else ;
    
#line 2360 
    tmp_2 = hostap_get_porttype(local);
    
#line 2359 
    ;
    
#line 2359 
    tmp_3 = hostap_set_word(dev,64512,(unsigned short)((int)tmp_2));
    
#line 2359 
    if (tmp_3 != 0) {
      
#line 2361 
      ret = -95;
      
#line 2362 
      goto ldv_47462;
    }
    else ;
    
#line 2365 
    tmp_4 = (*((local->func)->reset_port))(dev);
    
#line 2365 
    if (tmp_4 != 0) 
#line 2366 
                    ret = -22; else ;
    
#line 2367 
    goto ldv_47462;
    case 5: 
#line 2370 
    ;
    
#line 2371 
    if (value == 0) 
#line 2371 
                    tmp_5 = (char *)"Disabling"; else 
#line 2371 
                                                      tmp_5 = (char *)"Enabling";
    
#line 2371 
    ;
    
#line 2371 
    printk("\001",(char *)(& dev->name),tmp_5);
    
#line 2373 
    val = (unsigned short)8U;
    
#line 2374 
    (*((local->func)->cmd))(dev,(unsigned short)5432,(unsigned short)(value != 0),& val,(u16 *)0U);
    
#line 2377 
    goto ldv_47462;
    case 7: 
#line 2379 
    ;
    
#line 2380 
    local->frame_dump = value;
    
#line 2381 
    goto ldv_47462;
    case 8: 
#line 2383 
    ;
    
#line 2384 
    if ((unsigned int)value > 3U) {
      
#line 2385 
      ret = -22;
      
#line 2386 
      goto ldv_47462;
    }
    else ;
    
#line 2388 
    if (local->ap != (struct ap_data *)0) 
#line 2389 
                                          (local->ap)->ap_policy = (enum ldv_32322)value; else ;
    
#line 2390 
    goto ldv_47462;
    case 9: 
#line 2392 
    ;
    
#line 2393 
    if ((unsigned int)value > 604800U) {
      
#line 2394 
      ret = -22;
      
#line 2395 
      goto ldv_47462;
    }
    else ;
    
#line 2397 
    if (local->ap != (struct ap_data *)0) 
#line 2398 
                                          (local->ap)->max_inactivity = (unsigned int)(value * 250); else ;
    
#line 2399 
    goto ldv_47462;
    case 10: 
#line 2401 
    ;
    
#line 2402 
    if (local->ap != (struct ap_data *)0) 
#line 2403 
                                          (local->ap)->bridge_packets = value; else ;
    
#line 2404 
    goto ldv_47462;
    case 11: 
#line 2406 
    ;
    
#line 2407 
    if ((unsigned int)value > 65535U) {
      
#line 2408 
      ret = -22;
      
#line 2409 
      goto ldv_47462;
    }
    else ;
    
#line 2411 
    tmp_6 = hostap_set_word(dev,64528,(unsigned short)((int)((unsigned short)value)));
    
#line 2411 
    if (tmp_6 != 0) 
#line 2411 
                    goto _LOR_0;
    else {
      int tmp_7;
      
#line 2412 
      tmp_7 = (*((local->func)->reset_port))(dev);
      
#line 2412 
      if (tmp_7 != 0) _LOR_0: 
#line 2413 
                              ret = -22; else 
#line 2415 
                                              local->dtim_period = value;
    }
    
#line 2416 
    goto ldv_47462;
    case 12: 
#line 2418 
    ;
    
#line 2419 
    if (local->ap != (struct ap_data *)0) 
#line 2420 
                                          (local->ap)->nullfunc_ack = value; else ;
    
#line 2421 
    goto ldv_47462;
    case 13: 
#line 2423 
    ;
    
#line 2424 
    local->wds_max_connections = value;
    
#line 2425 
    goto ldv_47462;
    case 14: 
#line 2427 
    ;
    
#line 2428 
    if (local->ap != (struct ap_data *)0) {
      
#line 2429 
      if ((local->ap)->autom_ap_wds == 0 && value != 0) 
#line 2431 
                                                        hostap_add_wds_links(local); else ;
      
#line 2433 
      (local->ap)->autom_ap_wds = value;
    }
    else ;
    
#line 2435 
    goto ldv_47462;
    case 15: 
#line 2437 
    ;
    
#line 2438 
    local->auth_algs = value;
    
#line 2439 
    tmp_8 = hostap_set_auth_algs(local);
    
#line 2439 
    if (tmp_8 != 0) 
#line 2440 
                    ret = -22; else ;
    
#line 2441 
    goto ldv_47462;
    case 16: 
#line 2443 
    ;
    
#line 2444 
    local->monitor_allow_fcserr = value;
    
#line 2445 
    goto ldv_47462;
    case 17: 
#line 2447 
    ;
    
#line 2448 
    local->host_encrypt = value;
    
#line 2449 
    tmp_9 = hostap_set_encryption(local);
    
#line 2449 
    if (tmp_9 != 0) 
#line 2451 
                    ret = -22;
    else {
      int tmp_10;
      
#line 2449 
      tmp_10 = (*((local->func)->reset_port))(dev);
      
#line 2449 
      if (tmp_10 != 0) 
#line 2451 
                       ret = -22; else ;
    }
    
#line 2452 
    goto ldv_47462;
    case 18: 
#line 2454 
    ;
    
#line 2455 
    local->host_decrypt = value;
    
#line 2456 
    tmp_11 = hostap_set_encryption(local);
    
#line 2456 
    if (tmp_11 != 0) 
#line 2458 
                     ret = -22;
    else {
      int tmp_12;
      
#line 2456 
      tmp_12 = (*((local->func)->reset_port))(dev);
      
#line 2456 
      if (tmp_12 != 0) 
#line 2458 
                       ret = -22; else ;
    }
    
#line 2459 
    goto ldv_47462;
    case 21: 
#line 2462 
    ;
    
#line 2463 
    if ((unsigned int)value > 2U) {
      
#line 2464 
      ret = -22;
      
#line 2465 
      goto ldv_47462;
    }
    else ;
    
#line 2467 
    local->host_roaming = value;
    
#line 2468 
    tmp_13 = hostap_set_roaming(local);
    
#line 2468 
    if (tmp_13 != 0) 
#line 2469 
                     ret = -22;
    else {
      int tmp_14;
      
#line 2468 
      tmp_14 = (*((local->func)->reset_port))(dev);
      
#line 2468 
      if (tmp_14 != 0) 
#line 2469 
                       ret = -22; else ;
    }
    
#line 2470 
    goto ldv_47462;
    case 22: 
#line 2473 
    ;
    
#line 2474 
    local->bcrx_sta_key = value;
    
#line 2475 
    goto ldv_47462;
    case 23: 
#line 2477 
    ;
    
#line 2478 
    local->ieee_802_1x = value;
    
#line 2479 
    goto ldv_47462;
    case 24: 
#line 2481 
    ;
    
#line 2482 
    if ((unsigned int)value > 3U) {
      
#line 2483 
      ret = -22;
      
#line 2484 
      goto ldv_47462;
    }
    else ;
    
#line 2486 
    local->antsel_tx = value;
    
#line 2487 
    hostap_set_antsel(local);
    
#line 2488 
    goto ldv_47462;
    case 25: 
#line 2490 
    ;
    
#line 2491 
    if ((unsigned int)value > 3U) {
      
#line 2492 
      ret = -22;
      
#line 2493 
      goto ldv_47462;
    }
    else ;
    
#line 2495 
    local->antsel_rx = value;
    
#line 2496 
    hostap_set_antsel(local);
    
#line 2497 
    goto ldv_47462;
    case 26: 
#line 2499 
    ;
    
#line 2500 
    if ((value != 0 && value != 2) && (value != 1 && value != 3)) {
      
#line 2504 
      ret = -22;
      
#line 2505 
      goto ldv_47462;
    }
    else ;
    
#line 2507 
    local->monitor_type = (enum ldv_32234)value;
    
#line 2508 
    if (local->iw_mode == 6) 
#line 2509 
                             hostap_monitor_set_type(local); else ;
    
#line 2510 
    goto ldv_47462;
    case 27: 
#line 2512 
    ;
    
#line 2513 
    local->wds_type = (unsigned int)value;
    
#line 2514 
    goto ldv_47462;
    case 28: 
#line 2516 
    ;
    {
      struct hfa384x_hostscan_request scan_req;
      u16 rate;
      int tmp_17;
      
#line 2521 
      memset((void *)(& scan_req),0,38UL);
      
#line 2522 
      scan_req.channel_list = (unsigned short)16383U;
      
#line 2523 
      switch (value) {
        case 1: 
#line 2524 
        ;
        
#line 2524 
        rate = (unsigned short)1U;
        
#line 2524 
        goto ldv_47489;
        case 2: 
#line 2525 
        ;
        
#line 2525 
        rate = (unsigned short)2U;
        
#line 2525 
        goto ldv_47489;
        case 3: 
#line 2526 
        ;
        
#line 2526 
        rate = (unsigned short)4U;
        
#line 2526 
        goto ldv_47489;
        case 4: 
#line 2527 
        ;
        
#line 2527 
        rate = (unsigned short)8U;
        
#line 2527 
        goto ldv_47489;
        default: 
#line 2528 
        ;
        
#line 2528 
        rate = (unsigned short)1U;
        
#line 2528 
        goto ldv_47489;
      }
      ldv_47489: 
#line 2530 
      ;
      
#line 2530 
      scan_req.txrate = rate;
      
#line 2533 
      if (local->iw_mode == 3) {
        int tmp_15;
        
#line 2534 
        tmp_15 = hostap_set_word(dev,64512,(unsigned short)1);
        
#line 2534 
        if (tmp_15 != 0) 
#line 2537 
                         printk("\001");
        else {
          int tmp_16;
          
#line 2535 
          tmp_16 = (*((local->func)->reset_port))(dev);
          
#line 2535 
          if (tmp_16 != 0) 
#line 2537 
                           printk("\001"); else ;
        }
      }
      else ;
      
#line 2541 
      tmp_17 = (*((local->func)->set_rid))(dev,(unsigned short)64741,(void *)(& scan_req),38);
      
#line 2541 
      if (tmp_17 != 0) {
        
#line 2543 
        printk("\001");
        
#line 2544 
        ret = -22;
      }
      else ;
      
#line 2546 
      if (local->iw_mode == 3) {
        wait_queue_t __wait;
        struct task_struct *tmp_18;
        struct task_struct *tmp_19;
        int tmp_21;
        struct task_struct *tmp_20_0;
        struct task_struct *tmp_22;
        int tmp_23_0;
        
#line 2548 
        tmp_18 = get_current();
        
#line 2548 
        init_waitqueue_entry(& __wait,tmp_18);
        
#line 2549 
        add_wait_queue(& local->hostscan_wq,& __wait);
        
#line 2550 
        tmp_19 = get_current();
        __here_0: 
#line 2550 
        ;
        
#line 2550 
        tmp_19->task_state_change = (unsigned long)((void *)0);
        {
          
#line 2550 
          long volatile __ret = 1L;
          
#line 2550 
          switch (8UL) {
            case (unsigned long)1: 
#line 2550 
            ;
            
#line 2551 
            ldv_inline_asm();
            
#line 2550 
            goto ldv_47499;
            case (unsigned long)2: 
#line 2550 
            ;
            
#line 2551 
            ldv_inline_asm();
            
#line 2550 
            goto ldv_47499;
            case (unsigned long)4: 
#line 2550 
            ;
            
#line 2551 
            ldv_inline_asm();
            
#line 2550 
            goto ldv_47499;
            case (unsigned long)8: 
#line 2550 
            ;
            
#line 2551 
            ldv_inline_asm();
            
#line 2550 
            goto ldv_47499;
            default: 
#line 2550 
            ;
            
#line 2550 
            __xchg_wrong_size();
          }
          ldv_47499: 
#line 2550 
          ;
          
#line 2550 
          long tmp_20 = __ret;
        }
        
#line 2551 
        schedule_timeout(250L);
        
#line 2552 
        tmp_20_0 = get_current();
        
#line 2552 
        tmp_21 = signal_pending(tmp_20_0);
        
#line 2552 
        if (tmp_21 != 0) 
#line 2553 
                         ret = -4; else ;
        
#line 2554 
        tmp_22 = get_current();
        __here_1: 
#line 2554 
        ;
        
#line 2554 
        tmp_22->task_state_change = (unsigned long)((void *)1);
        {
          
#line 2554 
          long volatile __ret_0 = 0L;
          
#line 2554 
          switch (8UL) {
            case (unsigned long)1: 
#line 2554 
            ;
            
#line 2555 
            ldv_inline_asm();
            
#line 2554 
            goto ldv_47509;
            case (unsigned long)2: 
#line 2554 
            ;
            
#line 2555 
            ldv_inline_asm();
            
#line 2554 
            goto ldv_47509;
            case (unsigned long)4: 
#line 2554 
            ;
            
#line 2555 
            ldv_inline_asm();
            
#line 2554 
            goto ldv_47509;
            case (unsigned long)8: 
#line 2554 
            ;
            
#line 2555 
            ldv_inline_asm();
            
#line 2554 
            goto ldv_47509;
            default: 
#line 2554 
            ;
            
#line 2554 
            __xchg_wrong_size();
          }
          ldv_47509: 
#line 2554 
          ;
          
#line 2554 
          long tmp_23 = __ret_0;
        }
        
#line 2555 
        remove_wait_queue(& local->hostscan_wq,& __wait);
        
#line 2557 
        tmp_23_0 = hostap_set_word(dev,64512,(unsigned short)6);
        
#line 2557 
        if (tmp_23_0 != 0) 
#line 2560 
                           printk("\001");
        else {
          int tmp_24;
          
#line 2558 
          tmp_24 = (*((local->func)->reset_port))(dev);
          
#line 2558 
          if (tmp_24 != 0) 
#line 2560 
                           printk("\001"); else ;
        }
      }
      else ;
      
#line 2563 
      goto ldv_47462;
    }
    case 29: 
#line 2566 
    ;
    
#line 2567 
    local->passive_scan_interval = value;
    
#line 2568 
    tmp_25 = timer_pending((struct timer_list const *)(& local->passive_scan_timer));
    
#line 2568 
    if (tmp_25 != 0) 
#line 2569 
                     ldv_del_timer_78(& local->passive_scan_timer); else ;
    
#line 2570 
    if ((unsigned int)value + 4294967295U <= 8589932U) {
      
#line 2571 
      local->passive_scan_timer.expires = (unsigned long)(local->passive_scan_interval * 250) + jiffies;
      
#line 2573 
      add_timer(& local->passive_scan_timer);
    }
    else ;
    
#line 2575 
    goto ldv_47462;
    case 30: 
#line 2577 
    ;
    
#line 2578 
    if ((unsigned int)value > 3U) {
      
#line 2579 
      ret = -22;
      
#line 2580 
      goto ldv_47462;
    }
    else ;
    
#line 2582 
    local->enh_sec = value;
    
#line 2583 
    tmp_26 = hostap_set_word(dev,64579,(unsigned short)((int)((unsigned short)local->enh_sec)));
    
#line 2583 
    if (tmp_26 != 0) 
#line 2583 
                     goto _LOR_1;
    else {
      int tmp_27;
      
#line 2584 
      tmp_27 = (*((local->func)->reset_port))(dev);
      
#line 2584 
      if (tmp_27 != 0) {
        _LOR_1: {
                  
#line 2586 
                  printk("\001",(char *)(& dev->name));
                  
#line 2588 
                  ret = -95;
                }
      }
      else ;
    }
    
#line 2590 
    goto ldv_47462;
    case 32: 
#line 2598 
    ;
    
#line 2599 
    if (((int)local->tx_rate_control & value) != value || value == 0) {
      
#line 2600 
      printk("\001",(char *)(& dev->name));
      
#line 2603 
      ret = -22;
      
#line 2604 
      goto ldv_47462;
    }
    else ;
    
#line 2606 
    local->basic_rates = (unsigned short)value;
    
#line 2607 
    tmp_28 = hostap_set_word(dev,64691,(unsigned short)((int)local->basic_rates));
    
#line 2607 
    if (tmp_28 != 0) 
#line 2610 
                     ret = -22;
    else {
      int tmp_29;
      
#line 2608 
      tmp_29 = (*((local->func)->reset_port))(dev);
      
#line 2608 
      if (tmp_29 != 0) 
#line 2610 
                       ret = -22; else ;
    }
    
#line 2611 
    goto ldv_47462;
    case 33: 
#line 2613 
    ;
    
#line 2614 
    local->tx_rate_control = (unsigned short)value;
    
#line 2615 
    tmp_30 = hostap_set_rate(dev);
    
#line 2615 
    if (tmp_30 != 0) 
#line 2616 
                     ret = -22; else ;
    
#line 2617 
    goto ldv_47462;
    case 34: 
#line 2619 
    ;
    
#line 2620 
    ret = hostap_set_hostapd(local,value,1);
    
#line 2621 
    goto ldv_47462;
    case 35: 
#line 2623 
    ;
    
#line 2624 
    ret = hostap_set_hostapd_sta(local,value,1);
    
#line 2625 
    goto ldv_47462;
    case 36: 
#line 2627 
    ;
    
#line 2628 
    local->wpa = value;
    
#line 2629 
    if (local->sta_fw_ver <= 67327U) 
#line 2630 
                                     ret = -95;
    else {
      int tmp_31;
      
#line 2631 
      tmp_31 = hostap_set_word(dev,64699,(unsigned short)(value != 0));
      
#line 2631 
      if (tmp_31 != 0) 
#line 2633 
                       ret = -22; else ;
    }
    
#line 2634 
    goto ldv_47462;
    case 37: 
#line 2636 
    ;
    
#line 2637 
    local->privacy_invoked = value;
    
#line 2638 
    tmp_32 = hostap_set_encryption(local);
    
#line 2638 
    if (tmp_32 != 0) 
#line 2640 
                     ret = -22;
    else {
      int tmp_33;
      
#line 2638 
      tmp_33 = (*((local->func)->reset_port))(dev);
      
#line 2638 
      if (tmp_33 != 0) 
#line 2640 
                       ret = -22; else ;
    }
    
#line 2641 
    goto ldv_47462;
    case 38: 
#line 2643 
    ;
    
#line 2644 
    local->tkip_countermeasures = value;
    
#line 2645 
    goto ldv_47462;
    case 39: 
#line 2647 
    ;
    
#line 2648 
    local->drop_unencrypted = value;
    
#line 2649 
    goto ldv_47462;
    case 40: 
#line 2651 
    ;
    
#line 2652 
    local->scan_channel_mask = (unsigned short)value;
    
#line 2653 
    goto ldv_47462;
    default: 
#line 2655 
    ;
    
#line 2656 
    printk("\001",(char *)(& dev->name),param);
    
#line 2658 
    ret = -95;
    
#line 2659 
    goto ldv_47462;
  }
  ldv_47462: 
#line 2662 
  ;
  
#line 2662 
  return ret;
}


#line 2666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_get_prism2_param(struct net_device *dev, struct iw_request_info *info, void *wrqu, char *extra)
{
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 2672 
  int *param = (int *)extra;
  
#line 2673 
  int ret = 0;
  
#line 2675 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2676 
  local = iface->local;
  
#line 2678 
  switch (*param) {
    case 2: 
#line 2679 
    ;
    
#line 2680 
    *param = local->fw_tx_rate_control;
    
#line 2681 
    goto ldv_47538;
    case 3: 
#line 2683 
    ;
    
#line 2684 
    *param = local->beacon_int;
    
#line 2685 
    goto ldv_47538;
    case 4: 
#line 2687 
    ;
    
#line 2688 
    *param = local->pseudo_adhoc;
    
#line 2689 
    goto ldv_47538;
    case 5: 
#line 2691 
    ;
    
#line 2692 
    ret = -95;
    
#line 2693 
    goto ldv_47538;
    case 7: 
#line 2695 
    ;
    
#line 2696 
    *param = local->frame_dump;
    
#line 2697 
    goto ldv_47538;
    case 8: 
#line 2699 
    ;
    
#line 2700 
    if (local->ap != (struct ap_data *)0) 
#line 2701 
                                          *param = (int)(local->ap)->ap_policy; else 
                                                                    
#line 2703 
                                                                    ret = -95;
    
#line 2704 
    goto ldv_47538;
    case 9: 
#line 2706 
    ;
    
#line 2707 
    if (local->ap != (struct ap_data *)0) 
#line 2708 
                                          *param = (int)((local->ap)->max_inactivity / 250U); else 
                                                                    
#line 2710 
                                                                    ret = -95;
    
#line 2711 
    goto ldv_47538;
    case 10: 
#line 2713 
    ;
    
#line 2714 
    if (local->ap != (struct ap_data *)0) 
#line 2715 
                                          *param = (local->ap)->bridge_packets; else 
                                                                    
#line 2717 
                                                                    ret = -95;
    
#line 2718 
    goto ldv_47538;
    case 11: 
#line 2720 
    ;
    
#line 2721 
    *param = local->dtim_period;
    
#line 2722 
    goto ldv_47538;
    case 12: 
#line 2724 
    ;
    
#line 2725 
    if (local->ap != (struct ap_data *)0) 
#line 2726 
                                          *param = (local->ap)->nullfunc_ack; else 
                                                                    
#line 2728 
                                                                    ret = -95;
    
#line 2729 
    goto ldv_47538;
    case 13: 
#line 2731 
    ;
    
#line 2732 
    *param = local->wds_max_connections;
    
#line 2733 
    goto ldv_47538;
    case 14: 
#line 2735 
    ;
    
#line 2736 
    if (local->ap != (struct ap_data *)0) 
#line 2737 
                                          *param = (local->ap)->autom_ap_wds; else 
                                                                    
#line 2739 
                                                                    ret = -95;
    
#line 2740 
    goto ldv_47538;
    case 15: 
#line 2742 
    ;
    
#line 2743 
    *param = local->auth_algs;
    
#line 2744 
    goto ldv_47538;
    case 16: 
#line 2746 
    ;
    
#line 2747 
    *param = local->monitor_allow_fcserr;
    
#line 2748 
    goto ldv_47538;
    case 17: 
#line 2750 
    ;
    
#line 2751 
    *param = local->host_encrypt;
    
#line 2752 
    goto ldv_47538;
    case 18: 
#line 2754 
    ;
    
#line 2755 
    *param = local->host_decrypt;
    
#line 2756 
    goto ldv_47538;
    case 21: 
#line 2758 
    ;
    
#line 2759 
    *param = local->host_roaming;
    
#line 2760 
    goto ldv_47538;
    case 22: 
#line 2762 
    ;
    
#line 2763 
    *param = local->bcrx_sta_key;
    
#line 2764 
    goto ldv_47538;
    case 23: 
#line 2766 
    ;
    
#line 2767 
    *param = local->ieee_802_1x;
    
#line 2768 
    goto ldv_47538;
    case 24: 
#line 2770 
    ;
    
#line 2771 
    *param = local->antsel_tx;
    
#line 2772 
    goto ldv_47538;
    case 25: 
#line 2774 
    ;
    
#line 2775 
    *param = local->antsel_rx;
    
#line 2776 
    goto ldv_47538;
    case 26: 
#line 2778 
    ;
    
#line 2779 
    *param = (int)local->monitor_type;
    
#line 2780 
    goto ldv_47538;
    case 27: 
#line 2782 
    ;
    
#line 2783 
    *param = (int)local->wds_type;
    
#line 2784 
    goto ldv_47538;
    case 28: 
#line 2786 
    ;
    
#line 2787 
    ret = -95;
    
#line 2788 
    goto ldv_47538;
    case 29: 
#line 2790 
    ;
    
#line 2791 
    *param = local->passive_scan_interval;
    
#line 2792 
    goto ldv_47538;
    case 30: 
#line 2794 
    ;
    
#line 2795 
    *param = local->enh_sec;
    
#line 2796 
    goto ldv_47538;
    case 32: 
#line 2804 
    ;
    
#line 2805 
    *param = (int)local->basic_rates;
    
#line 2806 
    goto ldv_47538;
    case 33: 
#line 2808 
    ;
    
#line 2809 
    *param = (int)local->tx_rate_control;
    
#line 2810 
    goto ldv_47538;
    case 34: 
#line 2812 
    ;
    
#line 2813 
    *param = local->hostapd;
    
#line 2814 
    goto ldv_47538;
    case 35: 
#line 2816 
    ;
    
#line 2817 
    *param = local->hostapd_sta;
    
#line 2818 
    goto ldv_47538;
    case 36: 
#line 2820 
    ;
    
#line 2821 
    if (local->sta_fw_ver <= 67327U) 
#line 2822 
                                     ret = -95; else ;
    
#line 2823 
    *param = local->wpa;
    
#line 2824 
    goto ldv_47538;
    case 37: 
#line 2826 
    ;
    
#line 2827 
    *param = local->privacy_invoked;
    
#line 2828 
    goto ldv_47538;
    case 38: 
#line 2830 
    ;
    
#line 2831 
    *param = local->tkip_countermeasures;
    
#line 2832 
    goto ldv_47538;
    case 39: 
#line 2834 
    ;
    
#line 2835 
    *param = local->drop_unencrypted;
    
#line 2836 
    goto ldv_47538;
    case 40: 
#line 2838 
    ;
    
#line 2839 
    *param = (int)local->scan_channel_mask;
    
#line 2840 
    goto ldv_47538;
    default: 
#line 2842 
    ;
    
#line 2843 
    printk("\001",(char *)(& dev->name),*param);
    
#line 2845 
    ret = -95;
    
#line 2846 
    goto ldv_47538;
  }
  ldv_47538: 
#line 2849 
  ;
  
#line 2849 
  return ret;
}


#line 2853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_readmif(struct net_device *dev, struct iw_request_info *info, void *wrqu, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u16 resp0;
  int tmp_0;
  
#line 2861 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2862 
  local = iface->local;
  
#line 2864 
  tmp_0 = (*((local->func)->cmd))(dev,(unsigned short)48,(unsigned short)((int)((unsigned short)*extra)),(u16 *)0U,& resp0);
  
#line 2864 
  if (tmp_0 != 0) {
    
#line 2866 
    __retres = -95;
    
#line 2866 
    goto return_label;
  }
  else 
#line 2868 
       *extra = (char)resp0;
  
#line 2870 
  __retres = 0;
  return_label: 
#line 2870 
                return __retres;
}


#line 2874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_writemif(struct net_device *dev, struct iw_request_info *info, void *wrqu, char *extra)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  u16 cr;
  u16 val;
  int tmp_0;
  
#line 2882 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2883 
  local = iface->local;
  
#line 2885 
  cr = (unsigned short)*extra;
  
#line 2886 
  val = (unsigned short)*(extra + 1U);
  
#line 2887 
  tmp_0 = (*((local->func)->cmd))(dev,(unsigned short)49,(unsigned short)((int)cr),& val,(u16 *)0U);
  
#line 2887 
  if (tmp_0 != 0) {
    
#line 2888 
    __retres = -95;
    
#line 2888 
    goto return_label;
  }
  else ;
  
#line 2890 
  __retres = 0;
  return_label: 
#line 2890 
                return __retres;
}


#line 2894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_monitor(struct net_device *dev, int *i)
{
  struct hostap_interface *iface;
  local_info_t *local;
  u32 mode;
  struct task_struct *tmp_0;
  pid_t tmp_2;
  struct task_struct *tmp_1;
  
#line 2898 
  int ret = 0;
  
#line 2901 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2902 
  local = iface->local;
  
#line 2906 
  tmp_0 = get_current();
  
#line 2906 
  tmp_1 = get_current();
  
#line 2906 
  tmp_2 = task_pid_nr(tmp_1);
  
#line 2904 
  ;
  
#line 2904 
  printk("\001",(char *)(& dev->name),tmp_2,(char *)(& tmp_0->comm));
  
#line 2910 
  if (*i == 0) {
    
#line 2913 
    mode = 3U;
    
#line 2914 
    ret = prism2_ioctl_siwmode(dev,(struct iw_request_info *)0,& mode,(char *)0);
  }
  else 
    
#line 2915 
    if (*i == 1) 
#line 2920 
                 ret = -95;
    else 
      
#line 2921 
      if ((unsigned int)*i + 4294967294U <= 1U) {
        
#line 2922 
        switch (*i) {
          case 2: 
#line 2923 
          ;
          
#line 2924 
          local->monitor_type = PRISM2_MONITOR_80211;
          
#line 2925 
          goto ldv_47602;
          case 3: 
#line 2926 
          ;
          
#line 2927 
          local->monitor_type = PRISM2_MONITOR_PRISM;
          
#line 2928 
          goto ldv_47602;
        }
        ldv_47602: 
#line 2930 
        ;
        
#line 2930 
        mode = 6U;
        
#line 2931 
        ret = prism2_ioctl_siwmode(dev,(struct iw_request_info *)0,& mode,(char *)0);
        
#line 2932 
        hostap_monitor_mode_enable(local);
      }
      else 
#line 2934 
           ret = -22;
  
#line 2936 
  return ret;
}


#line 2940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_reset(struct net_device *dev, int *i)
{
  int __retres;
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 2945 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 2946 
  local = iface->local;
  
#line 2948 
  printk("\001",(char *)(& dev->name),*i);
  
#line 2949 
  switch (*i) {
    int tmp_0;
    int tmp_1;
    case 0: 
#line 2950 
    ;
    
#line 2952 
    (*((local->func)->hw_shutdown))(dev,1);
    
#line 2953 
    (*((local->func)->hw_config))(dev,0);
    
#line 2954 
    goto ldv_47611;
    case 1: 
#line 2956 
    ;
    
#line 2958 
    (*((local->func)->hw_reset))(dev);
    
#line 2959 
    goto ldv_47611;
    case 2: 
#line 2961 
    ;
    
#line 2963 
    (*((local->func)->reset_port))(dev);
    
#line 2964 
    goto ldv_47611;
    case 3: 
#line 2966 
    ;
    
#line 2967 
    prism2_sta_deauth(local,(unsigned short)3);
    
#line 2968 
    tmp_0 = (*((local->func)->cmd))(dev,(unsigned short)2,(unsigned short)0,(u16 *)0U,(u16 *)0U);
    
#line 2968 
    if (tmp_0 != 0) {
      
#line 2970 
      __retres = -22;
      
#line 2970 
      goto return_label;
    }
    else ;
    
#line 2971 
    goto ldv_47611;
    case 4: 
#line 2973 
    ;
    
#line 2974 
    tmp_1 = (*((local->func)->cmd))(dev,(unsigned short)1,(unsigned short)0,(u16 *)0U,(u16 *)0U);
    
#line 2974 
    if (tmp_1 != 0) {
      
#line 2976 
      __retres = -22;
      
#line 2976 
      goto return_label;
    }
    else ;
    
#line 2977 
    goto ldv_47611;
    default: 
#line 2979 
    ;
    
#line 2980 
    printk("\001",*i);
    
#line 2981 
    __retres = -95;
    
#line 2981 
    goto return_label;
  }
  ldv_47611: 
#line 2984 
  ;
  
#line 2984 
  __retres = 0;
  return_label: 
#line 2984 
                return __retres;
}


#line 2988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_set_rid_word(struct net_device *dev, int *i)
{
  int __retres;
  int tmp;
  
#line 2990 
  int rid = *i;
  
#line 2991 
  int value = *(i + 1U);
  
#line 2993 
  printk("\001",(char *)(& dev->name),rid,value);
  
#line 2995 
  tmp = hostap_set_word(dev,rid,(unsigned short)((int)((unsigned short)value)));
  
#line 2995 
  if (tmp != 0) {
    
#line 2996 
    __retres = -22;
    
#line 2996 
    goto return_label;
  }
  else ;
  
#line 2998 
  __retres = 0;
  return_label: 
#line 2998 
                return __retres;
}


#line 3003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int ap_mac_cmd_ioctl(local_info_t *local, int *cmd)
{
  
#line 3005 
  int ret = 0;
  
#line 3007 
  switch (*cmd) {
    case 0: 
#line 3008 
    ;
    
#line 3009 
    (local->ap)->mac_restrictions.policy = MAC_POLICY_OPEN;
    
#line 3010 
    goto ldv_47629;
    case 1: 
#line 3011 
    ;
    
#line 3012 
    (local->ap)->mac_restrictions.policy = MAC_POLICY_ALLOW;
    
#line 3013 
    goto ldv_47629;
    case 2: 
#line 3014 
    ;
    
#line 3015 
    (local->ap)->mac_restrictions.policy = MAC_POLICY_DENY;
    
#line 3016 
    goto ldv_47629;
    case 3: 
#line 3017 
    ;
    
#line 3018 
    ap_control_flush_macs(& (local->ap)->mac_restrictions);
    
#line 3019 
    goto ldv_47629;
    case 4: 
#line 3020 
    ;
    
#line 3021 
    ap_control_kickall(local->ap);
    
#line 3022 
    hostap_deauth_all_stas(local->dev,local->ap,0);
    
#line 3023 
    goto ldv_47629;
    default: 
#line 3024 
    ;
    
#line 3025 
    ret = -95;
    
#line 3026 
    goto ldv_47629;
  }
  ldv_47629: 
#line 3029 
  ;
  
#line 3029 
  return ret;
}


#line 3035  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_download(local_info_t *local, struct iw_point *p)
{
  int __retres;
  struct prism2_download_param *param;
  unsigned long tmp_0;
  
#line 3038 
  int ret = 0;
  
#line 3040 
  if ((unsigned int)p->length + 65520U > 1008U || p->pointer == (void *)0) {
    
#line 3042 
    __retres = -22;
    
#line 3042 
    goto return_label;
  }
  else ;
  
#line 3044 
  param = (struct prism2_download_param *)kmalloc_3((unsigned long)p->length,208U);
  
#line 3045 
  if (param == (struct prism2_download_param *)0) {
    
#line 3046 
    __retres = -12;
    
#line 3046 
    goto return_label;
  }
  else ;
  
#line 3048 
  tmp_0 = copy_from_user((void *)param,(void const *)p->pointer,(unsigned long)p->length);
  
#line 3048 
  if (tmp_0 != 0UL) {
    
#line 3049 
    ret = -14;
    
#line 3050 
    goto out;
  }
  else ;
  
#line 3053 
  if ((unsigned long)p->length < ((unsigned long)param->num_areas + 1UL) * 16UL) {
    
#line 3055 
    ret = -22;
    
#line 3056 
    goto out;
  }
  else ;
  
#line 3059 
  ret = (*((local->func)->download))(local,param);
  out: 
#line 3061 
  ;
  
#line 3062 
  kfree((void const *)param);
  
#line 3063 
  __retres = ret;
  return_label: 
#line 3063 
                return __retres;
}


#line 3068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_set_genericelement(struct net_device *dev, u8 *elem, size_t len)
{
  int __retres;
  u8 *buf;
  int tmp_1;
  
#line 3071 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3072 
  local_info_t *local = iface->local;
  
#line 3079 
  buf = (u8 *)kmalloc_3(len + 2UL,208U);
  
#line 3080 
  if (buf == (u8 *)0U) {
    
#line 3081 
    __retres = -12;
    
#line 3081 
    goto return_label;
  }
  else ;
  
#line 3083 
  *((__le16 *)buf) = (unsigned short)len;
  
#line 3084 
  memcpy((void *)(buf + 2U),(void const *)elem,len);
  
#line 3086 
  kfree((void const *)local->generic_elem);
  
#line 3087 
  local->generic_elem = buf;
  
#line 3088 
  local->generic_elem_len = len + 2UL;
  
#line 3090 
  tmp_1 = (*((local->func)->set_rid))(local->dev,(unsigned short)64584,(void *)buf,(int)(len + (size_t)2U));
  
#line 3090 
  __retres = tmp_1;
  return_label: 
#line 3090 
                return __retres;
}


#line 3095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwauth(struct net_device *dev, struct iw_request_info *info, struct iw_param *data, char *extra)
{
  int __retres;
  
#line 3099 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3100 
  local_info_t *local = iface->local;
  
#line 3102 
  switch ((int)data->flags & 4095) {
    int tmp_4;
    case 0: 
#line 3103 
    ;
    case 1: 
#line 3104 
    ;
    case 2: 
#line 3105 
    ;
    case 3: 
#line 3106 
    ;
    
#line 3111 
    goto ldv_47662;
    case 4: 
#line 3112 
    ;
    
#line 3113 
    local->tkip_countermeasures = data->value;
    
#line 3114 
    goto ldv_47662;
    case 5: 
#line 3115 
    ;
    
#line 3116 
    local->drop_unencrypted = data->value;
    
#line 3117 
    goto ldv_47662;
    case 6: 
#line 3118 
    ;
    
#line 3119 
    local->auth_algs = data->value;
    
#line 3120 
    goto ldv_47662;
    case 7: 
#line 3121 
    ;
    
#line 3122 
    if (data->value == 0) {
      int tmp_0;
      
#line 3123 
      local->wpa = 0;
      
#line 3124 
      if (local->sta_fw_ver <= 67327U) 
#line 3125 
                                       goto ldv_47662; else ;
      
#line 3126 
      prism2_set_genericelement(dev,(u8 *)"",0UL);
      
#line 3127 
      local->host_roaming = 0;
      
#line 3128 
      local->privacy_invoked = 0;
      
#line 3129 
      tmp_0 = hostap_set_word(dev,64699,(unsigned short)0);
      
#line 3129 
      if (tmp_0 != 0) {
        
#line 3134 
        __retres = -22;
        
#line 3134 
        goto return_label;
      }
      else {
        int tmp_1;
        
#line 3130 
        tmp_1 = hostap_set_roaming(local);
        
#line 3130 
        if (tmp_1 != 0) {
          
#line 3134 
          __retres = -22;
          
#line 3134 
          goto return_label;
        }
        else {
          int tmp_2;
          
#line 3131 
          tmp_2 = hostap_set_encryption(local);
          
#line 3131 
          if (tmp_2 != 0) {
            
#line 3134 
            __retres = -22;
            
#line 3134 
            goto return_label;
          }
          else {
            int tmp_3;
            
#line 3132 
            tmp_3 = (*((local->func)->reset_port))(dev);
            
#line 3132 
            if (tmp_3 != 0) {
              
#line 3134 
              __retres = -22;
              
#line 3134 
              goto return_label;
            }
            else ;
          }
        }
      }
      
#line 3135 
      goto ldv_47662;
    }
    else ;
    
#line 3137 
    if (local->sta_fw_ver <= 67327U) {
      
#line 3138 
      __retres = -95;
      
#line 3138 
      goto return_label;
    }
    else ;
    
#line 3139 
    local->host_roaming = 2;
    
#line 3140 
    local->privacy_invoked = 1;
    
#line 3141 
    local->wpa = 1;
    
#line 3142 
    tmp_4 = hostap_set_word(dev,64699,(unsigned short)1);
    
#line 3142 
    if (tmp_4 != 0) {
      
#line 3146 
      __retres = -22;
      
#line 3146 
      goto return_label;
    }
    else {
      int tmp_5;
      
#line 3142 
      tmp_5 = hostap_set_roaming(local);
      
#line 3142 
      if (tmp_5 != 0) {
        
#line 3146 
        __retres = -22;
        
#line 3146 
        goto return_label;
      }
      else {
        int tmp_6;
        
#line 3143 
        tmp_6 = hostap_set_encryption(local);
        
#line 3143 
        if (tmp_6 != 0) {
          
#line 3146 
          __retres = -22;
          
#line 3146 
          goto return_label;
        }
        else {
          int tmp_7;
          
#line 3144 
          tmp_7 = (*((local->func)->reset_port))(dev);
          
#line 3144 
          if (tmp_7 != 0) {
            
#line 3146 
            __retres = -22;
            
#line 3146 
            goto return_label;
          }
          else ;
        }
      }
    }
    
#line 3147 
    goto ldv_47662;
    case 8: 
#line 3148 
    ;
    
#line 3149 
    local->ieee_802_1x = data->value;
    
#line 3150 
    goto ldv_47662;
    case 10: 
#line 3151 
    ;
    
#line 3152 
    local->privacy_invoked = data->value;
    
#line 3153 
    goto ldv_47662;
    default: 
#line 3154 
    ;
    
#line 3155 
    __retres = -95;
    
#line 3155 
    goto return_label;
  }
  ldv_47662: 
#line 3157 
  ;
  
#line 3157 
  __retres = 0;
  return_label: 
#line 3157 
                return __retres;
}


#line 3161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwauth(struct net_device *dev, struct iw_request_info *info, struct iw_param *data, char *extra)
{
  int __retres;
  
#line 3165 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3166 
  local_info_t *local = iface->local;
  
#line 3168 
  switch ((int)data->flags & 4095) {
    case 0: 
#line 3169 
    ;
    case 1: 
#line 3170 
    ;
    case 2: 
#line 3171 
    ;
    case 3: 
#line 3172 
    ;
    
#line 3177 
    __retres = -95;
    
#line 3177 
    goto return_label;
    case 4: 
#line 3178 
    ;
    
#line 3179 
    data->value = local->tkip_countermeasures;
    
#line 3180 
    goto ldv_47683;
    case 5: 
#line 3181 
    ;
    
#line 3182 
    data->value = local->drop_unencrypted;
    
#line 3183 
    goto ldv_47683;
    case 6: 
#line 3184 
    ;
    
#line 3185 
    data->value = local->auth_algs;
    
#line 3186 
    goto ldv_47683;
    case 7: 
#line 3187 
    ;
    
#line 3188 
    data->value = local->wpa;
    
#line 3189 
    goto ldv_47683;
    case 8: 
#line 3190 
    ;
    
#line 3191 
    data->value = local->ieee_802_1x;
    
#line 3192 
    goto ldv_47683;
    default: 
#line 3193 
    ;
    
#line 3194 
    __retres = -95;
    
#line 3194 
    goto return_label;
  }
  ldv_47683: 
#line 3196 
  ;
  
#line 3196 
  __retres = 0;
  return_label: 
#line 3196 
                return __retres;
}


#line 3200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwencodeext(struct net_device *dev, struct iw_request_info *info, struct iw_point *erq, char *extra)
{
  int __retres;
  int i;
  struct lib80211_crypto_ops *ops;
  struct lib80211_crypt_data **crypt;
  void *sta_ptr;
  u8 *addr;
  char const *alg;
  char const *module;
  bool tmp_0;
  
#line 3204 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3205 
  local_info_t *local = iface->local;
  
#line 3206 
  struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
  
#line 3207 
  int ret = 0;
  
#line 3214 
  i = (int)erq->flags & 255;
  
#line 3215 
  if (i > 4) {
    
#line 3216 
    __retres = -22;
    
#line 3216 
    goto return_label;
  }
  else ;
  
#line 3217 
  if ((unsigned int)i + 4294967295U > 3U) 
#line 3218 
                                          i = local->crypt_info.tx_keyidx; else 
                                                                    
#line 3220 
                                                                    i -= 1;
  
#line 3221 
  if ((unsigned int)i > 3U) {
    
#line 3222 
    __retres = -22;
    
#line 3222 
    goto return_label;
  }
  else ;
  
#line 3224 
  addr = (u8 *)(& ext->addr.sa_data);
  
#line 3225 
  tmp_0 = is_broadcast_ether_addr((u8 const *)addr);
  
#line 3225 
  if ((int)tmp_0 != 0) {
    
#line 3226 
    sta_ptr = (void *)0;
    
#line 3227 
    crypt = & local->crypt_info.crypt[i];
  }
  else {
    
#line 3229 
    if (i != 0) {
      
#line 3230 
      __retres = -22;
      
#line 3230 
      goto return_label;
    }
    else ;
    
#line 3231 
    sta_ptr = ap_crypt_get_ptrs(local->ap,addr,0,& crypt);
    
#line 3232 
    if (sta_ptr == (void *)0) 
      
#line 3233 
      if (local->iw_mode == 2) {
        
#line 3239 
        i = 0;
        
#line 3240 
        crypt = & local->crypt_info.crypt[i];
      }
      else {
        
#line 3242 
        __retres = -22;
        
#line 3242 
        goto return_label;
      }
    else ;
  }
  
#line 3246 
  if ((int)erq->flags < 0 || (unsigned int)ext->alg == 0U) {
    
#line 3248 
    if (*crypt != (struct lib80211_crypt_data *)0) 
#line 3249 
                                                   lib80211_crypt_delayed_deinit(& local->crypt_info,crypt); else ;
    
#line 3250 
    goto done;
  }
  else ;
  
#line 3253 
  switch ((int)ext->alg) {
    case 1: 
#line 3254 
    ;
    
#line 3255 
    alg = "WEP";
    
#line 3256 
    module = "lib80211_crypt_wep";
    
#line 3257 
    goto ldv_47708;
    case 2: 
#line 3258 
    ;
    
#line 3259 
    alg = "TKIP";
    
#line 3260 
    module = "lib80211_crypt_tkip";
    
#line 3261 
    goto ldv_47708;
    case 3: 
#line 3262 
    ;
    
#line 3263 
    alg = "CCMP";
    
#line 3264 
    module = "lib80211_crypt_ccmp";
    
#line 3265 
    goto ldv_47708;
    default: 
#line 3266 
    ;
    
#line 3267 
    printk("\001",(char *)(& (local->dev)->name),(int)ext->alg);
    
#line 3269 
    ret = -95;
    
#line 3270 
    goto done;
  }
  ldv_47708: 
#line 3273 
  ;
  
#line 3273 
  ops = lib80211_get_crypto_ops(alg);
  
#line 3274 
  if (ops == (struct lib80211_crypto_ops *)0) {
    
#line 3275 
    __request_module((_Bool)1,module);
    
#line 3276 
    ops = lib80211_get_crypto_ops(alg);
  }
  else ;
  
#line 3278 
  if (ops == (struct lib80211_crypto_ops *)0) {
    
#line 3279 
    printk("\001",(char *)(& (local->dev)->name),alg);
    
#line 3281 
    ret = -95;
    
#line 3282 
    goto done;
  }
  else ;
  
#line 3285 
  if (sta_ptr != (void *)0 || (unsigned int)ext->alg != 1U) {
    int tmp_1;
    
#line 3291 
    tmp_1 = 1;
    
#line 3291 
    local->host_encrypt = tmp_1;
    
#line 3291 
    local->host_decrypt = tmp_1;
  }
  else ;
  
#line 3294 
  if (*crypt == (struct lib80211_crypt_data *)0 || (*crypt)->ops != ops) {
    struct lib80211_crypt_data *new_crypt;
    
#line 3297 
    lib80211_crypt_delayed_deinit(& local->crypt_info,crypt);
    
#line 3299 
    new_crypt = (struct lib80211_crypt_data *)kzalloc_0(40UL,208U);
    
#line 3301 
    if (new_crypt == (struct lib80211_crypt_data *)0) {
      
#line 3302 
      ret = -12;
      
#line 3303 
      goto done;
    }
    else ;
    
#line 3305 
    new_crypt->ops = ops;
    
#line 3306 
    if (new_crypt->ops != (struct lib80211_crypto_ops *)0) {
      bool tmp_3;
      
#line 3306 
      tmp_3 = try_module_get((new_crypt->ops)->owner);
      
#line 3306 
      if ((int)tmp_3 != 0) 
#line 3307 
                           new_crypt->priv = (*((new_crypt->ops)->init))(i); else ;
    }
    else ;
    
#line 3308 
    if (new_crypt->priv == (void *)0) {
      
#line 3309 
      kfree((void const *)new_crypt);
      
#line 3310 
      ret = -22;
      
#line 3311 
      goto done;
    }
    else ;
    
#line 3314 
    *crypt = new_crypt;
  }
  else ;
  
#line 3323 
  if (((ext->ext_flags & 8U) == 0U || (unsigned int)ext->key_len != 0U) && ((*crypt)->ops)->set_key != (int (*)(void *, int , u8 *, void *))0) {
    int tmp_4;
    
#line 3324 
    tmp_4 = (*(((*crypt)->ops)->set_key))((void *)(& ext->key),(int)ext->key_len,(u8 *)(& ext->rx_seq),(*crypt)->priv);
    
#line 3324 
    if (tmp_4 < 0) {
      
#line 3327 
      printk("\001",(char *)(& (local->dev)->name));
      
#line 3329 
      ret = -22;
      
#line 3330 
      goto done;
    }
    else ;
  }
  else ;
  
#line 3333 
  if ((ext->ext_flags & 8U) != 0U) {
    
#line 3334 
    if (sta_ptr == (void *)0) 
#line 3335 
                              local->crypt_info.tx_keyidx = i; else ;
  }
  else ;
  
#line 3339 
  if (sta_ptr == (void *)0 && (unsigned int)ext->key_len != 0U) {
    int j;
    
#line 3340 
    int first = 1;
    
#line 3341 
    j = 0;
    
#line 3341 
    goto ldv_47717;
    ldv_47716: 
#line 3342 
    ;
    
#line 3342 
    if (j != i && local->crypt_info.crypt[j] != (struct lib80211_crypt_data *)0) {
      
#line 3343 
      first = 0;
      
#line 3344 
      goto ldv_47715;
    }
    else ;
    
#line 3341 
    j += 1;
    ldv_47717: 
#line 3342 
    ;
    
#line 3341 
    if (j <= 3) 
#line 3343 
                goto ldv_47716; else 
#line 3346 
                                     goto ldv_47715;
    ldv_47715: 
#line 3347 
    ;
    
#line 3347 
    if (first != 0) 
#line 3348 
                    local->crypt_info.tx_keyidx = i; else ;
  }
  else ;
  done: 
#line 3351 
  ;
  
#line 3352 
  if (sta_ptr != (void *)0) 
#line 3353 
                            hostap_handle_sta_release(sta_ptr); else ;
  
#line 3355 
  local->open_wep = (int)erq->flags & 8192;
  
#line 3364 
  if (ret == 0) {
    int tmp_5;
    
#line 3364 
    tmp_5 = hostap_set_encryption(local);
    
#line 3364 
    if (tmp_5 != 0) 
#line 3368 
                    ret = -22;
    else 
      
#line 3365 
      if (local->iw_mode != 2) {
        int tmp_6;
        
#line 3366 
        tmp_6 = (*((local->func)->reset_port))(local->dev);
        
#line 3366 
        if (tmp_6 != 0) 
#line 3368 
                        ret = -22; else ;
      }
      else ;
  }
  else ;
  
#line 3370 
  __retres = ret;
  return_label: 
#line 3370 
                return __retres;
}


#line 3374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwencodeext(struct net_device *dev, struct iw_request_info *info, struct iw_point *erq, char *extra)
{
  int __retres;
  struct lib80211_crypt_data **crypt;
  void *sta_ptr;
  int max_key_len;
  int i;
  u8 *addr;
  bool tmp_0;
  
#line 3378 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3379 
  local_info_t *local = iface->local;
  
#line 3383 
  struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
  
#line 3386 
  max_key_len = (int)((unsigned int)erq->length + 4294967256U);
  
#line 3387 
  if (max_key_len < 0) {
    
#line 3388 
    __retres = -22;
    
#line 3388 
    goto return_label;
  }
  else ;
  
#line 3390 
  i = (int)erq->flags & 255;
  
#line 3391 
  if ((unsigned int)i + 4294967295U > 3U) 
#line 3392 
                                          i = local->crypt_info.tx_keyidx; else 
                                                                    
#line 3394 
                                                                    i -= 1;
  
#line 3396 
  addr = (u8 *)(& ext->addr.sa_data);
  
#line 3397 
  tmp_0 = is_broadcast_ether_addr((u8 const *)addr);
  
#line 3397 
  if ((int)tmp_0 != 0) {
    
#line 3398 
    sta_ptr = (void *)0;
    
#line 3399 
    crypt = & local->crypt_info.crypt[i];
  }
  else {
    
#line 3401 
    i = 0;
    
#line 3402 
    sta_ptr = ap_crypt_get_ptrs(local->ap,addr,0,& crypt);
    
#line 3403 
    if (sta_ptr == (void *)0) {
      
#line 3404 
      __retres = -22;
      
#line 3404 
      goto return_label;
    }
    else ;
  }
  
#line 3406 
  erq->flags = (unsigned short)((unsigned int)((unsigned short)i) + 1U);
  
#line 3407 
  memset((void *)ext,0,40UL);
  
#line 3409 
  if (*crypt == (struct lib80211_crypt_data *)0 || (*crypt)->ops == (struct lib80211_crypto_ops *)0) {
    
#line 3410 
    ext->alg = (unsigned short)0U;
    
#line 3411 
    ext->key_len = (unsigned short)0U;
    
#line 3412 
    erq->flags = (unsigned short)((unsigned int)erq->flags | 32768U);
  }
  else {
    int tmp_3;
    
#line 3414 
    tmp_3 = strcmp(((*crypt)->ops)->name,"WEP");
    
#line 3414 
    if (tmp_3 == 0) 
#line 3415 
                    ext->alg = (unsigned short)1U;
    else {
      int tmp_2;
      
#line 3416 
      tmp_2 = strcmp(((*crypt)->ops)->name,"TKIP");
      
#line 3416 
      if (tmp_2 == 0) 
#line 3417 
                      ext->alg = (unsigned short)2U;
      else {
        int tmp_1;
        
#line 3418 
        tmp_1 = strcmp(((*crypt)->ops)->name,"CCMP");
        
#line 3418 
        if (tmp_1 == 0) 
#line 3419 
                        ext->alg = (unsigned short)3U;
        else {
          
#line 3421 
          __retres = -22;
          
#line 3421 
          goto return_label;
        }
      }
    }
    
#line 3423 
    if (((*crypt)->ops)->get_key != (int (*)(void *, int , u8 *, void *))0) {
      int tmp_4;
      
#line 3424 
      tmp_4 = (*(((*crypt)->ops)->get_key))((void *)(& ext->key),max_key_len,(u8 *)(& ext->tx_seq),(*crypt)->priv);
      
#line 3424 
      ext->key_len = (unsigned short)tmp_4;
      
#line 3429 
      if ((unsigned int)ext->key_len != 0U && (unsigned int)ext->alg + 65534U <= 1U) 
        
#line 3432 
        ext->ext_flags |= 1U; else ;
    }
    else ;
  }
  
#line 3436 
  if (sta_ptr != (void *)0) 
#line 3437 
                            hostap_handle_sta_release(sta_ptr); else ;
  
#line 3439 
  __retres = 0;
  return_label: 
#line 3439 
                return __retres;
}


#line 3443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_set_encryption(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  struct lib80211_crypto_ops *ops;
  struct lib80211_crypt_data **crypt;
  void *sta_ptr;
  bool tmp;
  int tmp_0;
  int tmp_4;
  
#line 3447 
  int ret = 0;
  
#line 3452 
  param->u.crypt.err = 0U;
  
#line 3453 
  param->u.crypt.alg[15] = (unsigned char)0U;
  
#line 3457 
  if ((int)param->u.crypt.key_len + 48 != param_len) {
    
#line 3458 
    __retres = -22;
    
#line 3458 
    goto return_label;
  }
  else ;
  
#line 3460 
  tmp = is_broadcast_ether_addr((u8 const *)(& param->sta_addr));
  
#line 3460 
  if ((int)tmp != 0) {
    
#line 3461 
    if ((unsigned int)param->u.crypt.idx > 3U) {
      
#line 3462 
      __retres = -22;
      
#line 3462 
      goto return_label;
    }
    else ;
    
#line 3463 
    sta_ptr = (void *)0;
    
#line 3464 
    crypt = & local->crypt_info.crypt[(int)param->u.crypt.idx];
  }
  else {
    
#line 3466 
    if ((unsigned int)param->u.crypt.idx != 0U) {
      
#line 3467 
      __retres = -22;
      
#line 3467 
      goto return_label;
    }
    else ;
    
#line 3468 
    sta_ptr = ap_crypt_get_ptrs(local->ap,(u8 *)(& param->sta_addr),(int)param->u.crypt.flags & 2,& crypt);
    
#line 3473 
    if (sta_ptr == (void *)0) {
      
#line 3474 
      param->u.crypt.err = 3U;
      
#line 3475 
      __retres = -22;
      
#line 3475 
      goto return_label;
    }
    else ;
  }
  
#line 3479 
  tmp_0 = strcmp((char const *)(& param->u.crypt.alg),"none");
  
#line 3479 
  if (tmp_0 == 0) {
    
#line 3480 
    if (crypt != (struct lib80211_crypt_data **)0) 
#line 3481 
                                                   lib80211_crypt_delayed_deinit(& local->crypt_info,crypt); else ;
    
#line 3482 
    goto done;
  }
  else ;
  
#line 3485 
  ops = lib80211_get_crypto_ops((char const *)(& param->u.crypt.alg));
  
#line 3486 
  if (ops == (struct lib80211_crypto_ops *)0) {
    int tmp_3;
    
#line 3486 
    tmp_3 = strcmp((char const *)(& param->u.crypt.alg),"WEP");
    
#line 3486 
    if (tmp_3 == 0) {
      
#line 3487 
      __request_module((_Bool)1,"lib80211_crypt_wep");
      
#line 3488 
      ops = lib80211_get_crypto_ops((char const *)(& param->u.crypt.alg));
    }
    else 
#line 3486 
         goto _LAND_0;
  }
  else {
    _LAND_0: 
#line 3489 
    ;
    
#line 3489 
    if (ops == (struct lib80211_crypto_ops *)0) {
      int tmp_2;
      
#line 3489 
      tmp_2 = strcmp((char const *)(& param->u.crypt.alg),"TKIP");
      
#line 3489 
      if (tmp_2 == 0) {
        
#line 3490 
        __request_module((_Bool)1,"lib80211_crypt_tkip");
        
#line 3491 
        ops = lib80211_get_crypto_ops((char const *)(& param->u.crypt.alg));
      }
      else 
#line 3489 
           goto _LAND;
    }
    else {
      _LAND: 
#line 3492 
      ;
      
#line 3492 
      if (ops == (struct lib80211_crypto_ops *)0) {
        int tmp_1;
        
#line 3492 
        tmp_1 = strcmp((char const *)(& param->u.crypt.alg),"CCMP");
        
#line 3492 
        if (tmp_1 == 0) {
          
#line 3493 
          __request_module((_Bool)1,"lib80211_crypt_ccmp");
          
#line 3494 
          ops = lib80211_get_crypto_ops((char const *)(& param->u.crypt.alg));
        }
        else ;
      }
      else ;
    }
  }
  
#line 3496 
  if (ops == (struct lib80211_crypto_ops *)0) {
    
#line 3497 
    printk("\001",(char *)(& (local->dev)->name),(u8 *)(& param->u.crypt.alg));
    
#line 3499 
    param->u.crypt.err = 2U;
    
#line 3500 
    ret = -22;
    
#line 3501 
    goto done;
  }
  else ;
  
#line 3506 
  tmp_4 = 1;
  
#line 3506 
  local->host_encrypt = tmp_4;
  
#line 3506 
  local->host_decrypt = tmp_4;
  
#line 3508 
  if (*crypt == (struct lib80211_crypt_data *)0 || (*crypt)->ops != ops) {
    struct lib80211_crypt_data *new_crypt;
    
#line 3511 
    lib80211_crypt_delayed_deinit(& local->crypt_info,crypt);
    
#line 3513 
    new_crypt = (struct lib80211_crypt_data *)kzalloc_0(40UL,208U);
    
#line 3515 
    if (new_crypt == (struct lib80211_crypt_data *)0) {
      
#line 3516 
      ret = -12;
      
#line 3517 
      goto done;
    }
    else ;
    
#line 3519 
    new_crypt->ops = ops;
    
#line 3520 
    new_crypt->priv = (*((new_crypt->ops)->init))((int)param->u.crypt.idx);
    
#line 3521 
    if (new_crypt->priv == (void *)0) {
      
#line 3522 
      kfree((void const *)new_crypt);
      
#line 3523 
      param->u.crypt.err = 4U;
      
#line 3525 
      ret = -22;
      
#line 3526 
      goto done;
    }
    else ;
    
#line 3529 
    *crypt = new_crypt;
  }
  else ;
  
#line 3532 
  if ((((unsigned long)param->u.crypt.flags & 1UL) == 0UL || (unsigned int)param->u.crypt.key_len != 0U) && ((*crypt)->ops)->set_key != (int (*)(void *, int , u8 *, void *))0) {
    int tmp_6;
    
#line 3533 
    tmp_6 = (*(((*crypt)->ops)->set_key))((void *)(& param->u.crypt.key),(int)param->u.crypt.key_len,(u8 *)(& param->u.crypt.seq),(*crypt)->priv);
    
#line 3533 
    if (tmp_6 < 0) {
      
#line 3537 
      printk("\001",(char *)(& (local->dev)->name));
      
#line 3539 
      param->u.crypt.err = 5U;
      
#line 3540 
      ret = -22;
      
#line 3541 
      goto done;
    }
    else ;
  }
  else ;
  
#line 3544 
  if (((unsigned long)param->u.crypt.flags & 1UL) != 0UL) {
    
#line 3545 
    if (sta_ptr == (void *)0) 
#line 3546 
                              local->crypt_info.tx_keyidx = (int)param->u.crypt.idx;
    else 
      
#line 3547 
      if ((unsigned int)param->u.crypt.idx != 0U) {
        
#line 3548 
        printk("\001",(char *)(& (local->dev)->name));
        
#line 3550 
        param->u.crypt.err = 6U;
        
#line 3552 
        ret = -22;
        
#line 3553 
        goto done;
      }
      else ;
  }
  else ;
  done: 
#line 3557 
  ;
  
#line 3558 
  if (sta_ptr != (void *)0) 
#line 3559 
                            hostap_handle_sta_release(sta_ptr); else ;
  
#line 3566 
  if (ret == 0) {
    int tmp_7;
    
#line 3566 
    tmp_7 = hostap_set_encryption(local);
    
#line 3566 
    if (tmp_7 != 0) 
#line 3566 
                    goto _LOR;
    else 
      
#line 3567 
      if (local->iw_mode != 2) {
        int tmp_8;
        
#line 3568 
        tmp_8 = (*((local->func)->reset_port))(local->dev);
        
#line 3568 
        if (tmp_8 != 0) {
          _LOR: {
                  
#line 3570 
                  param->u.crypt.err = 7U;
                  
#line 3571 
                  __retres = -22;
                  
#line 3571 
                  goto return_label;
                }
        }
        else ;
      }
      else ;
  }
  else ;
  
#line 3574 
  __retres = ret;
  return_label: 
#line 3574 
                return __retres;
}


#line 3578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_get_encryption(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  struct lib80211_crypt_data **crypt;
  void *sta_ptr;
  int max_key_len;
  bool tmp;
  
#line 3586 
  param->u.crypt.err = 0U;
  
#line 3588 
  max_key_len = param_len + -48;
  
#line 3590 
  if (max_key_len < 0) {
    
#line 3591 
    __retres = -22;
    
#line 3591 
    goto return_label;
  }
  else ;
  
#line 3593 
  tmp = is_broadcast_ether_addr((u8 const *)(& param->sta_addr));
  
#line 3593 
  if ((int)tmp != 0) {
    
#line 3594 
    sta_ptr = (void *)0;
    
#line 3595 
    if ((unsigned int)param->u.crypt.idx > 3U) 
#line 3596 
                                               param->u.crypt.idx = (unsigned char)local->crypt_info.tx_keyidx; else ;
    
#line 3597 
    crypt = & local->crypt_info.crypt[(int)param->u.crypt.idx];
  }
  else {
    
#line 3599 
    param->u.crypt.idx = (unsigned char)0U;
    
#line 3600 
    sta_ptr = ap_crypt_get_ptrs(local->ap,(u8 *)(& param->sta_addr),0,& crypt);
    
#line 3603 
    if (sta_ptr == (void *)0) {
      
#line 3604 
      param->u.crypt.err = 3U;
      
#line 3605 
      __retres = -22;
      
#line 3605 
      goto return_label;
    }
    else ;
  }
  
#line 3609 
  if (*crypt == (struct lib80211_crypt_data *)0 || (*crypt)->ops == (struct lib80211_crypto_ops *)0) {
    
#line 3610 
    memcpy((void *)(& param->u.crypt.alg),(void const *)"none",5UL);
    
#line 3611 
    param->u.crypt.key_len = (unsigned short)0U;
    
#line 3612 
    param->u.crypt.idx = (unsigned char)255U;
  }
  else {
    
#line 3614 
    strncpy((char *)(& param->u.crypt.alg),((*crypt)->ops)->name,16UL);
    
#line 3616 
    param->u.crypt.key_len = (unsigned short)0U;
    
#line 3618 
    memset((void *)(& param->u.crypt.seq),0,8UL);
    
#line 3619 
    if (((*crypt)->ops)->get_key != (int (*)(void *, int , u8 *, void *))0) {
      int tmp_0;
      
#line 3620 
      tmp_0 = (*(((*crypt)->ops)->get_key))((void *)(& param->u.crypt.key),max_key_len,(u8 *)(& param->u.crypt.seq),(*crypt)->priv);
      
#line 3620 
      param->u.crypt.key_len = (unsigned short)tmp_0;
    }
    else ;
  }
  
#line 3628 
  if (sta_ptr != (void *)0) 
#line 3629 
                            hostap_handle_sta_release(sta_ptr); else ;
  
#line 3631 
  __retres = 0;
  return_label: 
#line 3631 
                return __retres;
}


#line 3635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_get_rid(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  int max_len;
  int res;
  
#line 3641 
  max_len = (int)((unsigned int)param_len + 4294967280U);
  
#line 3642 
  if (max_len < 0) {
    
#line 3643 
    __retres = -22;
    
#line 3643 
    goto return_label;
  }
  else ;
  
#line 3645 
  res = (*((local->func)->get_rid))(local->dev,(unsigned short)((int)param->u.rid.rid),(void *)(& param->u.rid.data),(int)param->u.rid.len,0);
  
#line 3647 
  if (res >= 0) {
    
#line 3648 
    param->u.rid.len = (unsigned short)res;
    
#line 3649 
    __retres = 0;
    
#line 3649 
    goto return_label;
  }
  else ;
  
#line 3652 
  __retres = res;
  return_label: 
#line 3652 
                return __retres;
}


#line 3656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_set_rid(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  int max_len;
  int tmp;
  
#line 3662 
  max_len = (int)((unsigned int)param_len + 4294967280U);
  
#line 3663 
  if (max_len < 0 || (int)param->u.rid.len > max_len) {
    
#line 3664 
    __retres = -22;
    
#line 3664 
    goto return_label;
  }
  else ;
  
#line 3666 
  tmp = (*((local->func)->set_rid))(local->dev,(unsigned short)((int)param->u.rid.rid),(void *)(& param->u.rid.data),(int)param->u.rid.len);
  
#line 3666 
  __retres = tmp;
  return_label: 
#line 3666 
                return __retres;
}


#line 3671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_set_assoc_ap_addr(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  
#line 3675 
  printk("\001",(char *)(& (local->dev)->name),(u8 *)(& param->sta_addr));
  
#line 3677 
  memcpy((void *)(& local->assoc_ap_addr),(void const *)(& param->sta_addr),6UL);
  
#line 3678 
  __retres = 0;
  
#line 3678 
  return __retres;
}


#line 3682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwgenie(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int tmp;
  
#line 3686 
  tmp = prism2_set_genericelement(dev,(u8 *)extra,(unsigned long)data->length);
  
#line 3686 
  return tmp;
}


#line 3690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_giwgenie(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  
#line 3694 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3695 
  local_info_t *local = iface->local;
  
#line 3696 
  int len = (int)(local->generic_elem_len + (size_t)4294967294U);
  
#line 3698 
  if (len <= 0 || local->generic_elem == (u8 *)0U) {
    
#line 3699 
    data->length = (unsigned short)0U;
    
#line 3700 
    __retres = 0;
    
#line 3700 
    goto return_label;
  }
  else ;
  
#line 3703 
  if ((int)data->length < len) {
    
#line 3704 
    __retres = -7;
    
#line 3704 
    goto return_label;
  }
  else ;
  
#line 3706 
  data->length = (unsigned short)len;
  
#line 3707 
  memcpy((void *)extra,(void const *)(local->generic_elem + 2U),(unsigned long)len);
  
#line 3709 
  __retres = 0;
  return_label: 
#line 3709 
                return __retres;
}


#line 3713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_set_generic_element(local_info_t *local, struct prism2_hostapd_param *param, int param_len)
{
  int __retres;
  int max_len;
  int len;
  int tmp;
  
#line 3719 
  len = (int)param->u.generic_elem.len;
  
#line 3720 
  max_len = (int)((unsigned int)param_len + 4294967283U);
  
#line 3721 
  if (max_len < 0 || max_len < len) {
    
#line 3722 
    __retres = -22;
    
#line 3722 
    goto return_label;
  }
  else ;
  
#line 3724 
  tmp = prism2_set_genericelement(local->dev,(u8 *)(& param->u.generic_elem.data),(unsigned long)len);
  
#line 3724 
  __retres = tmp;
  return_label: 
#line 3724 
                return __retres;
}


#line 3729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_siwmlme(struct net_device *dev, struct iw_request_info *info, struct iw_point *data, char *extra)
{
  int __retres;
  __le16 reason;
  
#line 3733 
  struct hostap_interface *iface = netdev_priv((struct net_device const *)dev);
  
#line 3734 
  local_info_t *local = iface->local;
  
#line 3735 
  struct iw_mlme *mlme = (struct iw_mlme *)extra;
  
#line 3738 
  reason = mlme->reason_code;
  
#line 3740 
  switch ((int)mlme->cmd) {
    int tmp_0;
    int tmp_1;
    case 0: 
#line 3741 
    ;
    
#line 3742 
    tmp_0 = prism2_sta_send_mgmt(local,(u8 *)(& mlme->addr.sa_data),(unsigned short)192,(u8 *)(& reason),2UL);
    
#line 3742 
    __retres = tmp_0;
    
#line 3742 
    goto return_label;
    case 1: 
#line 3745 
    ;
    
#line 3746 
    tmp_1 = prism2_sta_send_mgmt(local,(u8 *)(& mlme->addr.sa_data),(unsigned short)160,(u8 *)(& reason),2UL);
    
#line 3746 
    __retres = tmp_1;
    
#line 3746 
    goto return_label;
    default: 
#line 3749 
    ;
    
#line 3750 
    __retres = -95;
    
#line 3750 
    goto return_label;
  }
  return_label: 
#line 3740 
                return __retres;
}


#line 3755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_mlme(local_info_t *local, struct prism2_hostapd_param *param)
{
  int __retres;
  __le16 reason;
  
#line 3760 
  reason = param->u.mlme.reason_code;
  
#line 3761 
  switch ((int)param->u.mlme.cmd) {
    int tmp;
    int tmp_0;
    case 0: 
#line 3762 
    ;
    
#line 3763 
    tmp = prism2_sta_send_mgmt(local,(u8 *)(& param->sta_addr),(unsigned short)192,(u8 *)(& reason),2UL);
    
#line 3763 
    __retres = tmp;
    
#line 3763 
    goto return_label;
    case 1: 
#line 3766 
    ;
    
#line 3767 
    tmp_0 = prism2_sta_send_mgmt(local,(u8 *)(& param->sta_addr),(unsigned short)160,(u8 *)(& reason),2UL);
    
#line 3767 
    __retres = tmp_0;
    
#line 3767 
    goto return_label;
    default: 
#line 3770 
    ;
    
#line 3771 
    __retres = -95;
    
#line 3771 
    goto return_label;
  }
  return_label: 
#line 3761 
                return __retres;
}


#line 3776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_scan_req(local_info_t *local, struct prism2_hostapd_param *param)
{
  int __retres;
  int tmp;
  
#line 3780 
  if ((unsigned int)local->iw_mode + 4294967295U > 1U || local->sta_fw_ver <= 66304U) {
    
#line 3783 
    __retres = -95;
    
#line 3783 
    goto return_label;
  }
  else ;
  
#line 3785 
  if (local->dev_enabled == 0) {
    
#line 3786 
    __retres = -100;
    
#line 3786 
    goto return_label;
  }
  else ;
  
#line 3788 
  tmp = prism2_request_hostscan(local->dev,(u8 *)(& param->u.scan_req.ssid),(unsigned char)((int)param->u.scan_req.ssid_len));
  
#line 3788 
  __retres = tmp;
  return_label: 
#line 3788 
                return __retres;
}


#line 3796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static int prism2_ioctl_priv_hostapd(local_info_t *local, struct iw_point *p)
{
  int __retres;
  struct prism2_hostapd_param *param;
  unsigned long tmp_0;
  
#line 3799 
  int ret = 0;
  
#line 3800 
  int ap_ioctl = 0;
  
#line 3802 
  if ((unsigned int)p->length + 65488U > 976U || p->pointer == (void *)0) {
    
#line 3804 
    __retres = -22;
    
#line 3804 
    goto return_label;
  }
  else ;
  
#line 3806 
  param = (struct prism2_hostapd_param *)kmalloc_3((unsigned long)p->length,208U);
  
#line 3807 
  if (param == (struct prism2_hostapd_param *)0) {
    
#line 3808 
    __retres = -12;
    
#line 3808 
    goto return_label;
  }
  else ;
  
#line 3810 
  tmp_0 = copy_from_user((void *)param,(void const *)p->pointer,(unsigned long)p->length);
  
#line 3810 
  if (tmp_0 != 0UL) {
    
#line 3811 
    ret = -14;
    
#line 3812 
    goto out;
  }
  else ;
  
#line 3815 
  switch (param->cmd) {
    case (u32)6: 
#line 3816 
    ;
    
#line 3817 
    ret = prism2_ioctl_set_encryption(local,param,(int)p->length);
    
#line 3818 
    goto ldv_47825;
    case (u32)7: 
#line 3819 
    ;
    
#line 3820 
    ret = prism2_ioctl_get_encryption(local,param,(int)p->length);
    
#line 3821 
    goto ldv_47825;
    case (u32)9: 
#line 3822 
    ;
    
#line 3823 
    ret = prism2_ioctl_get_rid(local,param,(int)p->length);
    
#line 3824 
    goto ldv_47825;
    case (u32)10: 
#line 3825 
    ;
    
#line 3826 
    ret = prism2_ioctl_set_rid(local,param,(int)p->length);
    
#line 3827 
    goto ldv_47825;
    case (u32)11: 
#line 3828 
    ;
    
#line 3829 
    ret = prism2_ioctl_set_assoc_ap_addr(local,param,(int)p->length);
    
#line 3830 
    goto ldv_47825;
    case (u32)12: 
#line 3831 
    ;
    
#line 3832 
    ret = prism2_ioctl_set_generic_element(local,param,(int)p->length);
    
#line 3834 
    goto ldv_47825;
    case (u32)13: 
#line 3835 
    ;
    
#line 3836 
    ret = prism2_ioctl_mlme(local,param);
    
#line 3837 
    goto ldv_47825;
    case (u32)14: 
#line 3838 
    ;
    
#line 3839 
    ret = prism2_ioctl_scan_req(local,param);
    
#line 3840 
    goto ldv_47825;
    default: 
#line 3841 
    ;
    
#line 3842 
    ret = prism2_hostapd(local->ap,param);
    
#line 3843 
    ap_ioctl = 1;
    
#line 3844 
    goto ldv_47825;
  }
  ldv_47825: 
#line 3847 
  ;
  
#line 3847 
  if (ret == 1 || ap_ioctl == 0) {
    unsigned long tmp_1;
    
#line 3848 
    tmp_1 = copy_to_user(p->pointer,(void const *)param,(unsigned long)p->length);
    
#line 3848 
    if (tmp_1 != 0UL) {
      
#line 3849 
      ret = -14;
      
#line 3850 
      goto out;
    }
    else 
      
#line 3851 
      if (ap_ioctl != 0) 
#line 3852 
                         ret = 0; else ;
  }
  else ;
  out: 
#line 3855 
  ;
  
#line 3856 
  kfree((void const *)param);
  
#line 3857 
  __retres = ret;
  return_label: 
#line 3857 
                return __retres;
}


#line 3861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static void prism2_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 3867 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 3868 
  local = iface->local;
  
#line 3870 
  strlcpy((char *)(& info->driver),"hostap",32UL);
  
#line 3871 
  snprintf((char *)(& info->fw_version),32UL,"%d.%d.%d",(local->sta_fw_ver >> 16) & 255U,(local->sta_fw_ver >> 8) & 255U,local->sta_fw_ver & 255U);
  
#line 3875 
  return;
}


#line 3877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
struct ethtool_ops const prism2_ethtool_ops = {.get_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & prism2_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = (u32 (*)(struct net_device *))0, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 3884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static iw_handler prism2_handler[56U] = {(int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_get_name), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwfreq), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwfreq), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwmode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwmode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwsens), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwsens), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwrange), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, & iw_handler_set_spy, & iw_handler_get_spy, & iw_handler_set_thrspy, & iw_handler_get_thrspy, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwap), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwap), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwmlme), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwaplist), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwscan), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwscan), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwessid), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwessid), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwnickn), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwnickn), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwrate), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwrate), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwrts), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwrts), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwfrag), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwfrag), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwtxpow), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwtxpow), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwretry), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwretry), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwencode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwencode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwpower), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwpower), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwgenie), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwgenie), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwauth), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwauth), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_siwencodeext), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_giwencodeext), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0};

#line 3944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
static iw_handler prism2_private_handler[4U] = {(int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_priv_prism2_param), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_priv_get_prism2_param), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_priv_writemif), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_ioctl_priv_readmif)};

#line 3952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
struct iw_handler_def const hostap_iw_handler_def = {.standard = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_handler), .num_standard = (unsigned short)56U, .num_private = (unsigned short)4U, .num_private_args = (unsigned short)86U, .private = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& prism2_private_handler), .private_args = (struct iw_priv_args const *)(& prism2_priv), .get_wireless_stats = & hostap_get_wireless_stats};

#line 3964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/hostap/hostap_ioctl.c"
int hostap_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  struct hostap_interface *iface;
  local_info_t *local;
  
#line 3966 
  struct iwreq *wrq = (struct iwreq *)ifr;
  
#line 3969 
  int ret = 0;
  
#line 3971 
  iface = (struct hostap_interface *)netdev_priv((struct net_device const *)dev);
  
#line 3972 
  local = iface->local;
  
#line 3974 
  switch (cmd) {
    int tmp_1;
    bool tmp_0;
    int tmp_3;
    bool tmp_2;
    int tmp_5;
    bool tmp_4;
    int tmp_7;
    bool tmp_6;
    int tmp_9;
    bool tmp_8;
    int tmp_11;
    bool tmp_10;
    int tmp_13;
    bool tmp_12;
    int tmp_15;
    bool tmp_14;
    int tmp_17;
    bool tmp_16;
    int tmp_19;
    bool tmp_18;
    int tmp_21;
    bool tmp_20;
    int tmp_23;
    bool tmp_22;
    case 35816: 
#line 3978 
    ;
    
#line 3979 
    tmp_0 = capable(12);
    
#line 3979 
    if (tmp_0) 
#line 3979 
               tmp_1 = 0; else 
#line 3979 
                               tmp_1 = 1;
    
#line 3979 
    if (tmp_1) 
#line 3979 
               ret = -1; else 
#line 3980 
                              ret = prism2_ioctl_priv_inquire(dev,(int *)(& wrq->u.name));
    
#line 3981 
    goto ldv_47863;
    case 35812: 
#line 3983 
    ;
    
#line 3984 
    tmp_2 = capable(12);
    
#line 3984 
    if (tmp_2) 
#line 3984 
               tmp_3 = 0; else 
#line 3984 
                               tmp_3 = 1;
    
#line 3984 
    if (tmp_3) 
#line 3984 
               ret = -1; else 
#line 3985 
                              ret = prism2_ioctl_priv_monitor(dev,(int *)(& wrq->u.name));
    
#line 3986 
    goto ldv_47863;
    case 35814: 
#line 3988 
    ;
    
#line 3989 
    tmp_4 = capable(12);
    
#line 3989 
    if (tmp_4) 
#line 3989 
               tmp_5 = 0; else 
#line 3989 
                               tmp_5 = 1;
    
#line 3989 
    if (tmp_5) 
#line 3989 
               ret = -1; else 
#line 3990 
                              ret = prism2_ioctl_priv_reset(dev,(int *)(& wrq->u.name));
    
#line 3991 
    goto ldv_47863;
    case 35818: 
#line 3993 
    ;
    
#line 3994 
    tmp_6 = capable(12);
    
#line 3994 
    if (tmp_6) 
#line 3994 
               tmp_7 = 0; else 
#line 3994 
                               tmp_7 = 1;
    
#line 3994 
    if (tmp_7) 
#line 3994 
               ret = -1; else 
#line 3995 
                              ret = prism2_wds_add(local,(u8 *)(& wrq->u.ap_addr.sa_data),1);
    
#line 3996 
    goto ldv_47863;
    case 35820: 
#line 3998 
    ;
    
#line 3999 
    tmp_8 = capable(12);
    
#line 3999 
    if (tmp_8) 
#line 3999 
               tmp_9 = 0; else 
#line 3999 
                               tmp_9 = 1;
    
#line 3999 
    if (tmp_9) 
#line 3999 
               ret = -1; else 
#line 4000 
                              ret = prism2_wds_del(local,(u8 *)(& wrq->u.ap_addr.sa_data),1,0);
    
#line 4001 
    goto ldv_47863;
    case 35822: 
#line 4003 
    ;
    
#line 4004 
    tmp_10 = capable(12);
    
#line 4004 
    if (tmp_10) 
#line 4004 
                tmp_11 = 0; else 
#line 4004 
                                 tmp_11 = 1;
    
#line 4004 
    if (tmp_11) 
#line 4004 
                ret = -1; else 
#line 4005 
                               ret = prism2_ioctl_priv_set_rid_word(dev,(int *)(& wrq->u.name));
    
#line 4007 
    goto ldv_47863;
    case 35824: 
#line 4010 
    ;
    
#line 4011 
    tmp_12 = capable(12);
    
#line 4011 
    if (tmp_12) 
#line 4011 
                tmp_13 = 0; else 
#line 4011 
                                 tmp_13 = 1;
    
#line 4011 
    if (tmp_13) 
#line 4011 
                ret = -1; else 
#line 4012 
                               ret = ap_mac_cmd_ioctl(local,(int *)(& wrq->u.name));
    
#line 4013 
    goto ldv_47863;
    case 35826: 
#line 4015 
    ;
    
#line 4016 
    tmp_14 = capable(12);
    
#line 4016 
    if (tmp_14) 
#line 4016 
                tmp_15 = 0; else 
#line 4016 
                                 tmp_15 = 1;
    
#line 4016 
    if (tmp_15) 
#line 4016 
                ret = -1; else 
#line 4017 
                               ret = ap_control_add_mac(& (local->ap)->mac_restrictions,(u8 *)(& wrq->u.ap_addr.sa_data));
    
#line 4019 
    goto ldv_47863;
    case 35828: 
#line 4020 
    ;
    
#line 4021 
    tmp_16 = capable(12);
    
#line 4021 
    if (tmp_16) 
#line 4021 
                tmp_17 = 0; else 
#line 4021 
                                 tmp_17 = 1;
    
#line 4021 
    if (tmp_17) 
#line 4021 
                ret = -1; else 
#line 4022 
                               ret = ap_control_del_mac(& (local->ap)->mac_restrictions,(u8 *)(& wrq->u.ap_addr.sa_data));
    
#line 4024 
    goto ldv_47863;
    case 35830: 
#line 4025 
    ;
    
#line 4026 
    tmp_18 = capable(12);
    
#line 4026 
    if (tmp_18) 
#line 4026 
                tmp_19 = 0; else 
#line 4026 
                                 tmp_19 = 1;
    
#line 4026 
    if (tmp_19) 
#line 4026 
                ret = -1; else 
#line 4027 
                               ret = ap_control_kick_mac(local->ap,local->dev,(u8 *)(& wrq->u.ap_addr.sa_data));
    
#line 4029 
    goto ldv_47863;
    case 35325: 
#line 4037 
    ;
    
#line 4038 
    tmp_20 = capable(12);
    
#line 4038 
    if (tmp_20) 
#line 4038 
                tmp_21 = 0; else 
#line 4038 
                                 tmp_21 = 1;
    
#line 4038 
    if (tmp_21) 
#line 4038 
                ret = -1; else 
#line 4039 
                               ret = prism2_ioctl_priv_download(local,& wrq->u.data);
    
#line 4040 
    goto ldv_47863;
    case 35326: 
#line 4043 
    ;
    
#line 4044 
    tmp_22 = capable(12);
    
#line 4044 
    if (tmp_22) 
#line 4044 
                tmp_23 = 0; else 
#line 4044 
                                 tmp_23 = 1;
    
#line 4044 
    if (tmp_23) 
#line 4044 
                ret = -1; else 
#line 4045 
                               ret = prism2_ioctl_priv_hostapd(local,& wrq->u.data);
    
#line 4046 
    goto ldv_47863;
    default: 
#line 4048 
    ;
    
#line 4049 
    ret = -95;
    
#line 4050 
    goto ldv_47863;
  }
  ldv_47863: 
#line 4053 
  ;
  
#line 4053 
  return ret;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
int ldv_emg_del_timer(struct timer_list *arg0);


#line 398  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void *kmalloc_3(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 401 
  tmp = ldv_kmalloc(size,flags);
  
#line 401 
  return tmp;
}


#line 419  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 422 
  tmp = ldv_kzalloc(size,flags);
  
#line 422 
  return tmp;
}


#line 736  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 740 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 742 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 743 
  return;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 750 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 752 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 753 
  return;
}


#line 756  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 760 
  ldv_spin_model_lock((char *)"lock_of_local_info");
  
#line 762 
  spin_lock_bh_1(lock);
  
#line 763 
  return;
}


#line 766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv_spin_unlock_bh_75(spinlock_t *lock)
{
  
#line 770 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 772 
  spin_unlock_bh_1(lock);
  
#line 773 
  return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv_spin_unlock_bh_76_0(spinlock_t *lock)
{
  
#line 780 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 782 
  spin_unlock_bh_1(lock);
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock)
{
  
#line 790 
  ldv_spin_model_unlock((char *)"lock_of_local_info");
  
#line 792 
  spin_unlock_bh_1(lock);
  
#line 793 
  return;
}


#line 796  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/weaver/.tmp_hostap_ioctl.c.aux"
static int ldv_del_timer_78(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 800 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 800 
  return tmp;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 62 
void *ldv_traverse_kernel_items_scenario_15(void *arg0);


#line 63 
void *ldv_timer_scenario_10(void *arg0);


#line 64 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 65 
void *ldv_traverse_kernel_items_scenario_14(void *arg0);


#line 67 
void ldv_dispatch_register_6_1(struct seq_file *arg0, struct seq_operations *arg1);


#line 69 
void *ldv_traverse_kernel_items_scenario_13(void *arg0);


#line 70 
void *ldv_traverse_kernel_items_scenario_11(void *arg0);


#line 72 
void ldv_dispatch_instance_deregister_3_1(struct timer_list *arg0);


#line 74 
void *ldv_initialization_1(void *arg0);


#line 75 
void *ldv_traverse_kernel_items_scenario_12(void *arg0);


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 93 
  ldv_8_timer_list = arg0;
  
#line 97 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 98 
  ;
  
#line 98 
  __retres = 0;
  
#line 98 
  return __retres;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  
#line 112 
  ldv_3_timer_list = arg0;
  
#line 116 
  ldv_dispatch_instance_deregister_3_1(ldv_3_timer_list);
  
#line 117 
  ;
  
#line 117 
  __retres = 0;
  
#line 117 
  return __retres;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1)
{
  int __retres;
  struct seq_file *ldv_6_seq_file;
  struct seq_operations *ldv_6_ops;
  struct file *ldv_6_file;
  
#line 133 
  ldv_6_seq_file = (struct seq_file *)ldv_xmalloc_unknown_size(0UL);
  
#line 134 
  ldv_6_ops = arg1;
  
#line 135 
  ldv_6_file->private_data = (void *)ldv_6_seq_file;
  
#line 139 
  ldv_dispatch_register_6_1(ldv_6_seq_file,ldv_6_ops);
  
#line 140 
  ;
  
#line 140 
  __retres = 0;
  
#line 140 
  return __retres;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 155 
  tmp = ldv_undef_int();
  
#line 155 
  if (tmp != 0) {
    
#line 157 
    ldv_7_work_struct = arg0;
    
#line 161 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 163 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 168 
    __retres = (_Bool)1;
    
#line 168 
    goto return_label;
  }
  else {
    
#line 175 
    __retres = (_Bool)0;
    
#line 175 
    goto return_label;
  }
  return_label: 
#line 155 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_1(struct seq_file *arg0, struct seq_operations *arg1)
{
  int ret;
  struct ldv_struct_traverse_kernel_items_scenario_11 *cf_arg_11;
  struct ldv_struct_traverse_kernel_items_scenario_11 *cf_arg_12;
  struct ldv_struct_traverse_kernel_items_scenario_11 *cf_arg_13;
  struct ldv_struct_traverse_kernel_items_scenario_11 *cf_arg_14;
  struct ldv_struct_traverse_kernel_items_scenario_11 *cf_arg_15;
  int tmp;
  
#line 192 
  tmp = ldv_undef_int();
  
#line 192 
  switch (tmp) {
    case 0: 
#line 193 
    ;
    
#line 194 
    cf_arg_11 = (struct ldv_struct_traverse_kernel_items_scenario_11 *)ldv_xmalloc(24UL);
    
#line 195 
    cf_arg_11->arg0 = arg0;
    
#line 196 
    cf_arg_11->arg1 = arg1;
    
#line 197 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_11,(void *)cf_arg_11);
    
#line 198 
    __VERIFIER_assume(ret == 0);
    
#line 199 
    goto ldv_43067;
    case 1: 
#line 201 
    ;
    
#line 202 
    cf_arg_12 = (struct ldv_struct_traverse_kernel_items_scenario_11 *)ldv_xmalloc(24UL);
    
#line 203 
    cf_arg_12->arg0 = arg0;
    
#line 204 
    cf_arg_12->arg1 = arg1;
    
#line 205 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_12,(void *)cf_arg_12);
    
#line 206 
    __VERIFIER_assume(ret == 0);
    
#line 207 
    goto ldv_43067;
    case 2: 
#line 209 
    ;
    
#line 210 
    cf_arg_13 = (struct ldv_struct_traverse_kernel_items_scenario_11 *)ldv_xmalloc(24UL);
    
#line 211 
    cf_arg_13->arg0 = arg0;
    
#line 212 
    cf_arg_13->arg1 = arg1;
    
#line 213 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_13,(void *)cf_arg_13);
    
#line 214 
    __VERIFIER_assume(ret == 0);
    
#line 215 
    goto ldv_43067;
    case 3: 
#line 217 
    ;
    
#line 218 
    cf_arg_14 = (struct ldv_struct_traverse_kernel_items_scenario_11 *)ldv_xmalloc(24UL);
    
#line 219 
    cf_arg_14->arg0 = arg0;
    
#line 220 
    cf_arg_14->arg1 = arg1;
    
#line 221 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_14,(void *)cf_arg_14);
    
#line 222 
    __VERIFIER_assume(ret == 0);
    
#line 223 
    goto ldv_43067;
    case 4: 
#line 225 
    ;
    
#line 226 
    cf_arg_15 = (struct ldv_struct_traverse_kernel_items_scenario_11 *)ldv_xmalloc(24UL);
    
#line 227 
    cf_arg_15->arg0 = arg0;
    
#line 228 
    cf_arg_15->arg1 = arg1;
    
#line 229 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_15,(void *)cf_arg_15);
    
#line 230 
    __VERIFIER_assume(ret == 0);
    
#line 231 
    goto ldv_43067;
    default: 
#line 233 
    ;
    
#line 233 
    __VERIFIER_assume(0);
  }
  ldv_43067: 
#line 234 
  ;
  
#line 235 
  return;
}


#line 239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 242 
  ldv_initialize();
  
#line 245 
  ldv_initialization_1((void *)0);
  
#line 247 
  __retres = 0;
  
#line 247 
  return __retres;
}


#line 252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_del_timer_3 *cf_arg_10;
  int tmp;
  
#line 255 
  tmp = ldv_undef_int();
  
#line 255 
  switch (tmp) {
    case 0: 
#line 256 
    ;
    
#line 257 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 258 
    __VERIFIER_assume(ret == 0);
    
#line 259 
    goto ldv_43082;
    default: 
#line 261 
    ;
    
#line 261 
    __VERIFIER_assume(0);
  }
  ldv_43082: 
#line 262 
  ;
  
#line 263 
  return;
}


#line 267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_10(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_10_container;
  
#line 277 
  if (ldv_10_container->function != (void (*)(unsigned long ))0) {
    
#line 279 
    ldv_switch_to_interrupt_context();
    
#line 281 
    (*(ldv_10_container->function))(ldv_10_container->data);
    
#line 283 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 292 
  __retres = (void *)0;
  
#line 292 
  goto return_label;
  
#line 294 
  __retres = (void *)0;
  return_label: 
#line 294 
                return __retres;
}


#line 299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_15(void *arg0)
{
  void *__retres;
  void *ldv_15_ldv_param_1_2;
  long long *ldv_15_index;
  struct seq_file *ldv_15_seq_file;
  void *ldv_15_ldv_param_1_3;
  void *ldv_15_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 305 
  struct seq_operations *ldv_15_ops = ldv_emg_alias_prism2_scan_results_proc_seqops_6;
  
#line 306 
  int ldv_15_show_ret = ldv_undef_int();
  
#line 309 
  void *ldv_15_ret = ldv_undef_ptr();
  
#line 311 
  struct ldv_struct_traverse_kernel_items_scenario_11 *data = (struct ldv_struct_traverse_kernel_items_scenario_11 *)arg0;
  
#line 315 
  ldv_15_show_ret = ldv_undef_int();
  
#line 318 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_11 *)0) {
    
#line 319 
    ldv_15_seq_file = data->arg0;
    
#line 320 
    ldv_15_ops = data->arg1;
    
#line 321 
    ldv_free((void *)data);
  }
  else ;
  
#line 326 
  ldv_15_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 333 
  goto ldv_outer_loop_15;
  
#line 335 
  __retres = (void *)0;
  
#line 335 
  goto return_label;
  ldv_outer_loop_15: 
#line 338 
  ;
  
#line 341 
  tmp_2 = ldv_undef_int();
  
#line 341 
  if (tmp_2 != 0) {
    
#line 344 
    *ldv_15_index = 0LL;
    
#line 346 
    ldv_15_ret = ldv_emg_wrapper_prism2_scan_results_proc_start_2(ldv_15_seq_file,ldv_15_index);
    
#line 353 
    goto ldv_inner_loop_15;
  }
  else {
    
#line 357 
    ldv_free((void *)ldv_15_index);
    
#line 365 
    __retres = (void *)0;
    
#line 365 
    goto return_label;
  }
  
#line 368 
  __retres = (void *)0;
  
#line 368 
  goto return_label;
  ldv_inner_loop_15: 
#line 371 
  ;
  
#line 374 
  tmp_6 = ldv_undef_int();
  
#line 374 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 376 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_15_ret);
    
#line 376 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 380 
    ldv_15_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 385 
    ldv_15_show_ret = ldv_emg_wrapper_prism2_scan_results_proc_show_4(ldv_15_seq_file,ldv_15_ldv_param_1_3);
    
#line 389 
    ldv_free(ldv_15_ldv_param_1_3);
    
#line 392 
    tmp_4 = ldv_undef_int();
    
#line 392 
    if (tmp_4 != 0) {
      
#line 394 
      __VERIFIER_assume(ldv_15_show_ret >= 0);
      
#line 398 
      ldv_15_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 403 
      ldv_15_ret = ldv_emg_wrapper_prism2_scan_results_proc_next_3(ldv_15_seq_file,ldv_15_ldv_param_1_2,ldv_15_index);
      
#line 407 
      ldv_free(ldv_15_ldv_param_1_2);
      
#line 414 
      goto ldv_inner_loop_15;
    }
    else {
      
#line 418 
      ldv_15_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 423 
      ldv_15_seq_file->index = *ldv_15_index;
      
#line 425 
      ldv_emg_wrapper_prism2_scan_results_proc_stop_5(ldv_15_seq_file,ldv_15_ldv_param_1_4);
      
#line 427 
      ldv_15_seq_file->index = *ldv_15_index;
      
#line 431 
      ldv_free(ldv_15_ldv_param_1_4);
      
#line 438 
      goto ldv_outer_loop_15;
    }
  }
  else {
    long tmp_5;
    
#line 443 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_15_ret);
    
#line 443 
    __VERIFIER_assume((int)tmp_5);
    
#line 447 
    ldv_15_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 452 
    ldv_15_seq_file->index = *ldv_15_index;
    
#line 454 
    ldv_emg_wrapper_prism2_scan_results_proc_stop_5(ldv_15_seq_file,ldv_15_ldv_param_1_4);
    
#line 456 
    ldv_15_seq_file->index = *ldv_15_index;
    
#line 460 
    ldv_free(ldv_15_ldv_param_1_4);
    
#line 467 
    goto ldv_outer_loop_15;
  }
  
#line 470 
  __retres = (void *)0;
  return_label: 
#line 470 
                return __retres;
}


#line 475  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_13(void *arg0)
{
  void *__retres;
  void *ldv_13_ldv_param_1_2;
  long long *ldv_13_index;
  struct seq_file *ldv_13_seq_file;
  void *ldv_13_ldv_param_1_3;
  void *ldv_13_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 481 
  struct seq_operations *ldv_13_ops = ldv_emg_alias_prism2_ap_proc_seqops_6;
  
#line 482 
  int ldv_13_show_ret = ldv_undef_int();
  
#line 485 
  void *ldv_13_ret = ldv_undef_ptr();
  
#line 487 
  struct ldv_struct_traverse_kernel_items_scenario_11 *data = (struct ldv_struct_traverse_kernel_items_scenario_11 *)arg0;
  
#line 491 
  ldv_13_show_ret = ldv_undef_int();
  
#line 494 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_11 *)0) {
    
#line 495 
    ldv_13_seq_file = data->arg0;
    
#line 496 
    ldv_13_ops = data->arg1;
    
#line 497 
    ldv_free((void *)data);
  }
  else ;
  
#line 502 
  ldv_13_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 509 
  goto ldv_outer_loop_13;
  
#line 511 
  __retres = (void *)0;
  
#line 511 
  goto return_label;
  ldv_outer_loop_13: 
#line 514 
  ;
  
#line 517 
  tmp_2 = ldv_undef_int();
  
#line 517 
  if (tmp_2 != 0) {
    
#line 520 
    *ldv_13_index = 0LL;
    
#line 522 
    ldv_13_ret = ldv_emg_wrapper_prism2_ap_proc_start_2(ldv_13_seq_file,ldv_13_index);
    
#line 529 
    goto ldv_inner_loop_13;
  }
  else {
    
#line 533 
    ldv_free((void *)ldv_13_index);
    
#line 541 
    __retres = (void *)0;
    
#line 541 
    goto return_label;
  }
  
#line 544 
  __retres = (void *)0;
  
#line 544 
  goto return_label;
  ldv_inner_loop_13: 
#line 547 
  ;
  
#line 550 
  tmp_6 = ldv_undef_int();
  
#line 550 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 552 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_13_ret);
    
#line 552 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 556 
    ldv_13_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 561 
    ldv_13_show_ret = ldv_emg_wrapper_prism2_ap_proc_show_4(ldv_13_seq_file,ldv_13_ldv_param_1_3);
    
#line 565 
    ldv_free(ldv_13_ldv_param_1_3);
    
#line 568 
    tmp_4 = ldv_undef_int();
    
#line 568 
    if (tmp_4 != 0) {
      
#line 570 
      __VERIFIER_assume(ldv_13_show_ret >= 0);
      
#line 574 
      ldv_13_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 579 
      ldv_13_ret = ldv_emg_wrapper_prism2_ap_proc_next_3(ldv_13_seq_file,ldv_13_ldv_param_1_2,ldv_13_index);
      
#line 583 
      ldv_free(ldv_13_ldv_param_1_2);
      
#line 590 
      goto ldv_inner_loop_13;
    }
    else {
      
#line 594 
      ldv_13_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 599 
      ldv_13_seq_file->index = *ldv_13_index;
      
#line 601 
      ldv_emg_wrapper_prism2_ap_proc_stop_5(ldv_13_seq_file,ldv_13_ldv_param_1_4);
      
#line 603 
      ldv_13_seq_file->index = *ldv_13_index;
      
#line 607 
      ldv_free(ldv_13_ldv_param_1_4);
      
#line 614 
      goto ldv_outer_loop_13;
    }
  }
  else {
    long tmp_5;
    
#line 619 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_13_ret);
    
#line 619 
    __VERIFIER_assume((int)tmp_5);
    
#line 623 
    ldv_13_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 628 
    ldv_13_seq_file->index = *ldv_13_index;
    
#line 630 
    ldv_emg_wrapper_prism2_ap_proc_stop_5(ldv_13_seq_file,ldv_13_ldv_param_1_4);
    
#line 632 
    ldv_13_seq_file->index = *ldv_13_index;
    
#line 636 
    ldv_free(ldv_13_ldv_param_1_4);
    
#line 643 
    goto ldv_outer_loop_13;
  }
  
#line 646 
  __retres = (void *)0;
  return_label: 
#line 646 
                return __retres;
}


#line 651  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 658 
  tmp_0 = ldv_undef_int();
  
#line 658 
  if (tmp_0 != 0) {
    
#line 660 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 664 
    __retres = ldv_4_netdev;
    
#line 664 
    goto return_label;
  }
  else {
    
#line 671 
    __retres = (struct net_device *)0;
    
#line 671 
    goto return_label;
  }
  return_label: 
#line 658 
                return __retres;
}


#line 681  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_14(void *arg0)
{
  void *__retres;
  void *ldv_14_ldv_param_1_2;
  long long *ldv_14_index;
  struct seq_file *ldv_14_seq_file;
  void *ldv_14_ldv_param_1_3;
  void *ldv_14_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 687 
  struct seq_operations *ldv_14_ops = ldv_emg_alias_prism2_wds_proc_seqops_6;
  
#line 688 
  int ldv_14_show_ret = ldv_undef_int();
  
#line 691 
  void *ldv_14_ret = ldv_undef_ptr();
  
#line 693 
  struct ldv_struct_traverse_kernel_items_scenario_11 *data = (struct ldv_struct_traverse_kernel_items_scenario_11 *)arg0;
  
#line 697 
  ldv_14_show_ret = ldv_undef_int();
  
#line 700 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_11 *)0) {
    
#line 701 
    ldv_14_seq_file = data->arg0;
    
#line 702 
    ldv_14_ops = data->arg1;
    
#line 703 
    ldv_free((void *)data);
  }
  else ;
  
#line 708 
  ldv_14_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 715 
  goto ldv_outer_loop_14;
  
#line 717 
  __retres = (void *)0;
  
#line 717 
  goto return_label;
  ldv_outer_loop_14: 
#line 720 
  ;
  
#line 723 
  tmp_2 = ldv_undef_int();
  
#line 723 
  if (tmp_2 != 0) {
    
#line 726 
    *ldv_14_index = 0LL;
    
#line 728 
    ldv_14_ret = ldv_emg_wrapper_prism2_wds_proc_start_2(ldv_14_seq_file,ldv_14_index);
    
#line 735 
    goto ldv_inner_loop_14;
  }
  else {
    
#line 739 
    ldv_free((void *)ldv_14_index);
    
#line 747 
    __retres = (void *)0;
    
#line 747 
    goto return_label;
  }
  
#line 750 
  __retres = (void *)0;
  
#line 750 
  goto return_label;
  ldv_inner_loop_14: 
#line 753 
  ;
  
#line 756 
  tmp_6 = ldv_undef_int();
  
#line 756 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 758 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_14_ret);
    
#line 758 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 762 
    ldv_14_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 767 
    ldv_14_show_ret = ldv_emg_wrapper_prism2_wds_proc_show_4(ldv_14_seq_file,ldv_14_ldv_param_1_3);
    
#line 771 
    ldv_free(ldv_14_ldv_param_1_3);
    
#line 774 
    tmp_4 = ldv_undef_int();
    
#line 774 
    if (tmp_4 != 0) {
      
#line 776 
      __VERIFIER_assume(ldv_14_show_ret >= 0);
      
#line 780 
      ldv_14_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 785 
      ldv_14_ret = ldv_emg_wrapper_prism2_wds_proc_next_3(ldv_14_seq_file,ldv_14_ldv_param_1_2,ldv_14_index);
      
#line 789 
      ldv_free(ldv_14_ldv_param_1_2);
      
#line 796 
      goto ldv_inner_loop_14;
    }
    else {
      
#line 800 
      ldv_14_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 805 
      ldv_14_seq_file->index = *ldv_14_index;
      
#line 807 
      ldv_emg_wrapper_prism2_wds_proc_stop_5(ldv_14_seq_file,ldv_14_ldv_param_1_4);
      
#line 809 
      ldv_14_seq_file->index = *ldv_14_index;
      
#line 813 
      ldv_free(ldv_14_ldv_param_1_4);
      
#line 820 
      goto ldv_outer_loop_14;
    }
  }
  else {
    long tmp_5;
    
#line 825 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_14_ret);
    
#line 825 
    __VERIFIER_assume((int)tmp_5);
    
#line 829 
    ldv_14_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 834 
    ldv_14_seq_file->index = *ldv_14_index;
    
#line 836 
    ldv_emg_wrapper_prism2_wds_proc_stop_5(ldv_14_seq_file,ldv_14_ldv_param_1_4);
    
#line 838 
    ldv_14_seq_file->index = *ldv_14_index;
    
#line 842 
    ldv_free(ldv_14_ldv_param_1_4);
    
#line 849 
    goto ldv_outer_loop_14;
  }
  
#line 852 
  __retres = (void *)0;
  return_label: 
#line 852 
                return __retres;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 863 
  ldv_5_netdev = arg0;
  
#line 868 
  ldv_emg_wrapper_prism2_close_2(ldv_5_netdev);
  
#line 876 
  goto return_label;
  return_label: 
#line 878 
                return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_11(void *arg0)
{
  void *__retres;
  void *ldv_11_ldv_param_1_2;
  long long *ldv_11_index;
  struct seq_file *ldv_11_seq_file;
  void *ldv_11_ldv_param_1_3;
  void *ldv_11_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 889 
  struct seq_operations *ldv_11_ops = ldv_emg_alias_ap_control_proc_seqops_6;
  
#line 890 
  int ldv_11_show_ret = ldv_undef_int();
  
#line 893 
  void *ldv_11_ret = ldv_undef_ptr();
  
#line 895 
  struct ldv_struct_traverse_kernel_items_scenario_11 *data = (struct ldv_struct_traverse_kernel_items_scenario_11 *)arg0;
  
#line 899 
  ldv_11_show_ret = ldv_undef_int();
  
#line 902 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_11 *)0) {
    
#line 903 
    ldv_11_seq_file = data->arg0;
    
#line 904 
    ldv_11_ops = data->arg1;
    
#line 905 
    ldv_free((void *)data);
  }
  else ;
  
#line 910 
  ldv_11_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 917 
  goto ldv_outer_loop_11;
  
#line 919 
  __retres = (void *)0;
  
#line 919 
  goto return_label;
  ldv_outer_loop_11: 
#line 922 
  ;
  
#line 925 
  tmp_2 = ldv_undef_int();
  
#line 925 
  if (tmp_2 != 0) {
    
#line 928 
    *ldv_11_index = 0LL;
    
#line 930 
    ldv_11_ret = ldv_emg_wrapper_ap_control_proc_start_2(ldv_11_seq_file,ldv_11_index);
    
#line 937 
    goto ldv_inner_loop_11;
  }
  else {
    
#line 941 
    ldv_free((void *)ldv_11_index);
    
#line 949 
    __retres = (void *)0;
    
#line 949 
    goto return_label;
  }
  
#line 952 
  __retres = (void *)0;
  
#line 952 
  goto return_label;
  ldv_inner_loop_11: 
#line 955 
  ;
  
#line 958 
  tmp_6 = ldv_undef_int();
  
#line 958 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 960 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_11_ret);
    
#line 960 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 964 
    ldv_11_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 969 
    ldv_11_show_ret = ldv_emg_wrapper_ap_control_proc_show_4(ldv_11_seq_file,ldv_11_ldv_param_1_3);
    
#line 973 
    ldv_free(ldv_11_ldv_param_1_3);
    
#line 976 
    tmp_4 = ldv_undef_int();
    
#line 976 
    if (tmp_4 != 0) {
      
#line 978 
      __VERIFIER_assume(ldv_11_show_ret >= 0);
      
#line 982 
      ldv_11_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 987 
      ldv_11_ret = ldv_emg_wrapper_ap_control_proc_next_3(ldv_11_seq_file,ldv_11_ldv_param_1_2,ldv_11_index);
      
#line 991 
      ldv_free(ldv_11_ldv_param_1_2);
      
#line 998 
      goto ldv_inner_loop_11;
    }
    else {
      
#line 1002 
      ldv_11_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 1007 
      ldv_11_seq_file->index = *ldv_11_index;
      
#line 1009 
      ldv_emg_wrapper_ap_control_proc_stop_5(ldv_11_seq_file,ldv_11_ldv_param_1_4);
      
#line 1011 
      ldv_11_seq_file->index = *ldv_11_index;
      
#line 1015 
      ldv_free(ldv_11_ldv_param_1_4);
      
#line 1022 
      goto ldv_outer_loop_11;
    }
  }
  else {
    long tmp_5;
    
#line 1027 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_11_ret);
    
#line 1027 
    __VERIFIER_assume((int)tmp_5);
    
#line 1031 
    ldv_11_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 1036 
    ldv_11_seq_file->index = *ldv_11_index;
    
#line 1038 
    ldv_emg_wrapper_ap_control_proc_stop_5(ldv_11_seq_file,ldv_11_ldv_param_1_4);
    
#line 1040 
    ldv_11_seq_file->index = *ldv_11_index;
    
#line 1044 
    ldv_free(ldv_11_ldv_param_1_4);
    
#line 1051 
    goto ldv_outer_loop_11;
  }
  
#line 1054 
  __retres = (void *)0;
  return_label: 
#line 1054 
                return __retres;
}


#line 1059  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_flush_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_9_work_struct;
  int tmp;
  
#line 1066 
  tmp = ldv_undef_int();
  
#line 1066 
  if (tmp != 0) {
    
#line 1068 
    ldv_9_work_struct = arg0;
    
#line 1072 
    if (ldv_9_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1074 
      (*(ldv_9_work_struct->func))(ldv_9_work_struct); else ;
    
#line 1079 
    __retres = (_Bool)1;
    
#line 1079 
    goto return_label;
  }
  else {
    
#line 1086 
    __retres = (_Bool)0;
    
#line 1086 
    goto return_label;
  }
  return_label: 
#line 1066 
                return __retres;
}


#line 1096  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_3_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_del_timer_3 *cf_arg_10;
  int tmp;
  
#line 1099 
  tmp = ldv_undef_int();
  
#line 1099 
  switch (tmp) {
    case 0: 
#line 1100 
    ;
    
#line 1101 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 1102 
    __VERIFIER_assume(ret == 0);
    
#line 1103 
    goto ldv_43164;
    default: 
#line 1105 
    ;
    
#line 1105 
    __VERIFIER_assume(0);
  }
  ldv_43164: 
#line 1106 
  ;
  
#line 1107 
  return;
}


#line 1111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1117 
  ldv_2_netdev = arg0;
  
#line 1118 
  ldv_free((void *)ldv_2_netdev);
  
#line 1122 
  goto return_label;
  return_label: 
#line 1124 
                return;
}


#line 1129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1136 
  ldv_1_ret = ldv_emg_hostap_init();
  
#line 1137 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1140 
  tmp = ldv_undef_int();
  
#line 1140 
  if (tmp != 0) {
    
#line 1142 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1146 
    __retres = (void *)0;
    
#line 1146 
    goto return_label;
  }
  else {
    
#line 1150 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1155 
    ldv_emg_hostap_exit();
    
#line 1159 
    __retres = (void *)0;
    
#line 1159 
    goto return_label;
  }
  
#line 1162 
  __retres = (void *)0;
  return_label: 
#line 1162 
                return __retres;
}


#line 1167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/hostap/hostap.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_12(void *arg0)
{
  void *__retres;
  void *ldv_12_ldv_param_1_2;
  long long *ldv_12_index;
  struct seq_file *ldv_12_seq_file;
  void *ldv_12_ldv_param_1_3;
  void *ldv_12_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 1173 
  struct seq_operations *ldv_12_ops = ldv_emg_alias_prism2_bss_list_proc_seqops_6;
  
#line 1174 
  int ldv_12_show_ret = ldv_undef_int();
  
#line 1177 
  void *ldv_12_ret = ldv_undef_ptr();
  
#line 1179 
  struct ldv_struct_traverse_kernel_items_scenario_11 *data = (struct ldv_struct_traverse_kernel_items_scenario_11 *)arg0;
  
#line 1183 
  ldv_12_show_ret = ldv_undef_int();
  
#line 1186 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_11 *)0) {
    
#line 1187 
    ldv_12_seq_file = data->arg0;
    
#line 1188 
    ldv_12_ops = data->arg1;
    
#line 1189 
    ldv_free((void *)data);
  }
  else ;
  
#line 1194 
  ldv_12_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 1201 
  goto ldv_outer_loop_12;
  
#line 1203 
  __retres = (void *)0;
  
#line 1203 
  goto return_label;
  ldv_outer_loop_12: 
#line 1206 
  ;
  
#line 1209 
  tmp_2 = ldv_undef_int();
  
#line 1209 
  if (tmp_2 != 0) {
    
#line 1212 
    *ldv_12_index = 0LL;
    
#line 1214 
    ldv_12_ret = ldv_emg_wrapper_prism2_bss_list_proc_start_2(ldv_12_seq_file,ldv_12_index);
    
#line 1221 
    goto ldv_inner_loop_12;
  }
  else {
    
#line 1225 
    ldv_free((void *)ldv_12_index);
    
#line 1233 
    __retres = (void *)0;
    
#line 1233 
    goto return_label;
  }
  
#line 1236 
  __retres = (void *)0;
  
#line 1236 
  goto return_label;
  ldv_inner_loop_12: 
#line 1239 
  ;
  
#line 1242 
  tmp_6 = ldv_undef_int();
  
#line 1242 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 1244 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_12_ret);
    
#line 1244 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 1248 
    ldv_12_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 1253 
    ldv_12_show_ret = ldv_emg_wrapper_prism2_bss_list_proc_show_4(ldv_12_seq_file,ldv_12_ldv_param_1_3);
    
#line 1257 
    ldv_free(ldv_12_ldv_param_1_3);
    
#line 1260 
    tmp_4 = ldv_undef_int();
    
#line 1260 
    if (tmp_4 != 0) {
      
#line 1262 
      __VERIFIER_assume(ldv_12_show_ret >= 0);
      
#line 1266 
      ldv_12_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 1271 
      ldv_12_ret = ldv_emg_wrapper_prism2_bss_list_proc_next_3(ldv_12_seq_file,ldv_12_ldv_param_1_2,ldv_12_index);
      
#line 1275 
      ldv_free(ldv_12_ldv_param_1_2);
      
#line 1282 
      goto ldv_inner_loop_12;
    }
    else {
      
#line 1286 
      ldv_12_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 1291 
      ldv_12_seq_file->index = *ldv_12_index;
      
#line 1293 
      ldv_emg_wrapper_prism2_bss_list_proc_stop_5(ldv_12_seq_file,ldv_12_ldv_param_1_4);
      
#line 1295 
      ldv_12_seq_file->index = *ldv_12_index;
      
#line 1299 
      ldv_free(ldv_12_ldv_param_1_4);
      
#line 1306 
      goto ldv_outer_loop_12;
    }
  }
  else {
    long tmp_5;
    
#line 1311 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_12_ret);
    
#line 1311 
    __VERIFIER_assume((int)tmp_5);
    
#line 1315 
    ldv_12_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 1320 
    ldv_12_seq_file->index = *ldv_12_index;
    
#line 1322 
    ldv_emg_wrapper_prism2_bss_list_proc_stop_5(ldv_12_seq_file,ldv_12_ldv_param_1_4);
    
#line 1324 
    ldv_12_seq_file->index = *ldv_12_index;
    
#line 1328 
    ldv_free(ldv_12_ldv_param_1_4);
    
#line 1335 
    goto ldv_outer_loop_12;
  }
  
#line 1338 
  __retres = (void *)0;
  return_label: 
#line 1338 
                return __retres;
}


