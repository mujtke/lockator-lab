/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_190 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_190 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_191 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_192 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_191 _sigpoll ;
   struct __anonstruct__sigsys_192 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_200 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_202 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   struct keyring_index_key index_key ;
   struct __anonstruct_202 __anonCompField___anonunion_201_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_203 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_205 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   union __anonunion_payload_205 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_199 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_200 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_201 __anonCompField_key_53 ;
   union __anonunion_type_data_203 type_data ;
   union __anonunion_204 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_221 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_221 __anonCompField_iov_iter_59 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_223 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_223 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_224 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_224 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_225 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_225 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_226 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_226 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_227 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_227 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_228 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_228 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_229 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_229 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_230 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_230 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_231 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_232 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_231 ifr_ifrn ;
   union __anonunion_ifr_ifru_232 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_237 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_60 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_236 __anonCompField_lockref_61 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_239 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_62 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_238 __anonCompField_qstr_63 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_240 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_240 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_244 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_64 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_243 __anonCompField_radix_tree_node_65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_248 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_248 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_249 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_249 __anonCompField_kqid_67 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_252 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_253 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_254 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_252 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_253 __anonCompField_inode_69 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_254 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_255 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_255 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_257 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_256 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_257 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_256 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_25571 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_25571 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_272 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_272 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26417 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26417 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_277 __anonCompField_nf_bridge_info_74 ;
   union __anonunion_278 __anonCompField_nf_bridge_info_75 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_279 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_279 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_281 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   u64 v64 ;
   struct __anonstruct_281 __anonCompField___anonunion_280_76 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_280 __anonCompField_skb_mstamp_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_284 __anonCompField___anonstruct_283_78 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   struct __anonstruct_283 __anonCompField___anonunion_282_79 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_286 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __wsum csum ;
   struct __anonstruct_286 __anonCompField___anonunion_285_81 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_282 __anonCompField_sk_buff_80 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_285 __anonCompField_sk_buff_82 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_287 __anonCompField_sk_buff_83 ;
   __u32 secmark ;
   union __anonunion_288 __anonCompField_sk_buff_84 ;
   union __anonunion_289 __anonCompField_sk_buff_85 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/mii.h"
struct mii_if_info {
   int phy_id ;
   int advertising ;
   int phy_id_mask ;
   int reg_num_mask ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_media : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) supports_gmii : 1 ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int ) ;
   void (*mdio_write)(struct net_device *, int , int , int ) ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29223 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29223 phy_interface_t;

#line 126 
enum ldv_29276 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29276 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30986 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30987 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30986 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30987 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_334 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_334 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_345 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_345 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_346 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_346 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_348 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_347 {
   __addrpair skc_addrpair ;
   struct __anonstruct_348 __anonCompField___anonunion_347_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_351 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_350 {
   __portpair skc_portpair ;
   struct __anonstruct_351 __anonCompField___anonunion_350_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_353 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_347 __anonCompField_sock_common_103 ;
   union __anonunion_349 __anonCompField_sock_common_104 ;
   union __anonunion_350 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_352 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_353 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_354 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_354 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_357 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_357 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
struct udphdr {
   __be16 source ;
   __be16 dest ;
   __be16 len ;
   __sum16 check ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_377 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_377 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_378 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_380 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_379 {
   struct __anonstruct_380 __anonCompField___anonunion_379_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_378 __anonCompField_inet_peer_111 ;
   union __anonunion_379 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct dynpcc_info {
   unsigned long last_bytes ;
   unsigned long last_pkts ;
   unsigned long intr_cnt ;
   unsigned char cur ;
   unsigned char attempt ;
   unsigned char cnt ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct __anonstruct_desc1_383 {
   __le16 vlan ;
   __u8 rsv1 ;
   __u8 flags ;
   __le16 datalen ;
   __le16 mss ;
   __le16 pktsize ;
   __le16 rsv2 ;
   __le32 bufaddr ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct __anonstruct_desc2_384 {
   __le16 rsv1 ;
   __u8 rsv2 ;
   __u8 flags ;
   __le16 datalen ;
   __le16 rsv3 ;
   __le32 bufaddrh ;
   __le32 bufaddrl ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct __anonstruct_descwb_385 {
   __u8 ehdrsz ;
   __u8 rsv1 ;
   __u8 rsv2 ;
   __u8 flags ;
   __le16 trycnt ;
   __le16 segcnt ;
   __le16 pktsz ;
   __le16 rsv3 ;
   __le32 bufaddrl ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
union __anonunion_382 {
   __u8 all[16U] ;
   __le32 dw[4U] ;
   struct __anonstruct_desc1_383 desc1 ;
   struct __anonstruct_desc2_384 desc2 ;
   struct __anonstruct_descwb_385 descwb ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct txdesc {
   union __anonunion_382 __anonCompField_txdesc_115 ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct __anonstruct_desc1_387 {
   __le16 rsv2 ;
   __u8 rsv1 ;
   __u8 flags ;
   __le16 datalen ;
   __le16 wbcpl ;
   __le32 bufaddrh ;
   __le32 bufaddrl ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct __anonstruct_descwb_388 {
   __le16 vlan ;
   __le16 flags ;
   __le16 framesize ;
   __u8 errstat ;
   __u8 desccnt ;
   __le32 rsshash ;
   __u8 hashfun ;
   __u8 hashtype ;
   __le16 resrv ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
union __anonunion_386 {
   __u8 all[16U] ;
   __le32 dw[4U] ;
   struct __anonstruct_desc1_387 desc1 ;
   struct __anonstruct_descwb_388 descwb ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct rxdesc {
   union __anonunion_386 __anonCompField_rxdesc_116 ;
};

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct jme_buffer_info {
   struct sk_buff *skb ;
   dma_addr_t mapping ;
   int len ;
   int nr_desc ;
   unsigned long start_xmit ;
};

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct jme_ring {
   void *alloc ;
   void *desc ;
   dma_addr_t dmaalloc ;
   dma_addr_t dma ;
   struct jme_buffer_info *bufinf ;
   int next_to_use ;
   atomic_t next_to_clean ;
   atomic_t nr_free ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
struct jme_adapter {
   struct pci_dev *pdev ;
   struct net_device *dev ;
   void *regs ;
   struct mii_if_info mii_if ;
   struct jme_ring rxring[4U] ;
   struct jme_ring txring[8U] ;
   spinlock_t phy_lock ;
   spinlock_t macaddr_lock ;
   spinlock_t rxmcs_lock ;
   struct tasklet_struct rxempty_task ;
   struct tasklet_struct rxclean_task ;
   struct tasklet_struct txclean_task ;
   struct tasklet_struct linkch_task ;
   struct tasklet_struct pcc_task ;
   unsigned long flags ;
   u32 reg_txcs ;
   u32 reg_txpfc ;
   u32 reg_rxcs ;
   u32 reg_rxmcs ;
   u32 reg_ghc ;
   u32 reg_pmcs ;
   u32 reg_gpreg1 ;
   u32 phylink ;
   u32 tx_ring_size ;
   u32 tx_ring_mask ;
   u32 tx_wake_threshold ;
   u32 rx_ring_size ;
   u32 rx_ring_mask ;
   u8 mrrs ;
   unsigned int fpgaver ;
   u8 chiprev ;
   u8 chip_main_rev ;
   u8 chip_sub_rev ;
   u8 pcirev ;
   u32 msg_enable ;
   struct ethtool_cmd old_ecmd ;
   unsigned int old_mtu ;
   struct dynpcc_info dpi ;
   atomic_t intr_sem ;
   atomic_t link_changing ;
   atomic_t tx_cleaning ;
   atomic_t rx_cleaning ;
   atomic_t rx_empty ;
   int (*jme_rx)(struct sk_buff *) ;
   struct napi_struct napi ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 17  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_16 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_15 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/fvtp/.tmp_jme.c"
void ldv_inline_asm(void);


#line 4  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_atomic_add(int i, atomic_t *v);


#line 5 
void ldv_atomic_sub(int i, atomic_t *v);


#line 7 
void ldv_atomic_inc(atomic_t *v);


#line 8 
void ldv_atomic_dec(atomic_t *v);


#line 9 
int ldv_atomic_dec_and_test(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 66 
char *strcat(char *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  unsigned long tmp;
  {
    unsigned long __ret;
    
#line 831 
    unsigned long __edi = __edi;
    
#line 831 
    unsigned long __esi = __esi;
    
#line 831 
    unsigned long __edx = __edx;
    
#line 831 
    unsigned long __ecx = __ecx;
    
#line 831 
    unsigned long __eax = __eax;
    
#line 831 
    if ((long)(pv_irq_ops.save_fl.func == (void *)0) != 0L) {
      
#line 833 
      ldv_inline_asm();
      
#line 831 
      ;
    }
    else ;
    
#line 835 
    ldv_inline_asm();
    
#line 831 
    __ret = __eax;
    
#line 831 
    tmp = __ret;
  }
  
#line 831 
  return tmp;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  
#line 836 
  unsigned long __edi = __edi;
  
#line 836 
  unsigned long __esi = __esi;
  
#line 836 
  unsigned long __edx = __edx;
  
#line 836 
  unsigned long __ecx = __ecx;
  
#line 836 
  unsigned long __eax = __eax;
  
#line 836 
  if ((long)(pv_irq_ops.restore_fl.func == (void *)0) != 0L) {
    
#line 838 
    ldv_inline_asm();
    
#line 836 
    ;
  }
  else ;
  
#line 839 
  ldv_inline_asm();
  
#line 841 
  return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  
#line 841 
  unsigned long __edi = __edi;
  
#line 841 
  unsigned long __esi = __esi;
  
#line 841 
  unsigned long __edx = __edx;
  
#line 841 
  unsigned long __ecx = __ecx;
  
#line 841 
  unsigned long __eax = __eax;
  
#line 841 
  if ((long)(pv_irq_ops.irq_disable.func == (void *)0) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 844 
  ldv_inline_asm();
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void)
{
  unsigned long f;
  
#line 853 
  f = arch_local_save_flags();
  
#line 854 
  arch_local_irq_disable();
  
#line 855 
  return f;
}


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  int __retres;
  
#line 153 
  __retres = (flags & 512UL) == 0UL;
  
#line 153 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqflags.h"
void trace_hardirqs_on(void);


#line 21 
void trace_hardirqs_off(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 49 
static void atomic_add(int i, atomic_t *v);


#line 67 
static void atomic_sub(int i, atomic_t *v);


#line 98 
static void atomic_inc(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_89(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_91(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_93(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_95(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_97(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_99(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_101(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_103(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_105(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 436 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_90(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_92(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_94(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_96(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_98(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_100(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_102(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_104(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_106(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
int device_set_wakeup_enable(struct device *, bool);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1043 
void pci_pme_active(struct pci_dev *, bool);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_113(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_114(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msi(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_page(struct pci_dev *hwdev, struct page *page, unsigned long offset, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  if (hwdev != (struct pci_dev *)0) 
#line 54 
                                    tmp = & hwdev->dev; else 
#line 54 
                                                             tmp = (struct device *)0;
  
#line 54 
  tmp_0 = dma_map_page(tmp,page,offset,size,(enum dma_data_direction)direction);
  
#line 54 
  return tmp_0;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci-aspm.h"
void pci_disable_link_state(struct pci_dev *, int);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_transport_header(struct sk_buff *skb)
{
  
#line 1887 
  skb->transport_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1888 
  return;
}


#line 1890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_transport_header(struct sk_buff *skb, int const offset)
{
  
#line 1893 
  skb_reset_transport_header(skb);
  
#line 1894 
  skb->transport_header = (unsigned short)((int)skb->transport_header + (int)((unsigned short)offset));
  
#line 1895 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_network_header(struct sk_buff *skb)
{
  
#line 1904 
  skb->network_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1905 
  return;
}


#line 1907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_network_header(struct sk_buff *skb, int const offset)
{
  
#line 1909 
  skb_reset_network_header(skb);
  
#line 1910 
  skb->network_header = (unsigned short)((int)skb->network_header + (int)((unsigned short)offset));
  
#line 1911 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_84(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_unlock_wait(struct tasklet_struct *t)
{
  int tmp;
  
#line 521 
  goto ldv_39472;
  ldv_39471: 
#line 522 
  ;
  
#line 523 
  ldv_inline_asm();
  ldv_39472: 
#line 524 
  ;
  
#line 521 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& t->state));
  
#line 521 
  if (tmp != 0) 
#line 523 
                goto ldv_39471; else 
#line 526 
                                     goto ldv_39473;
  ldv_39473: 
#line 527 
  ;
  
#line 528 
  return;
}


#line 540 
static void ldv_tasklet_schedule_75(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_76(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_77(struct tasklet_struct *t);


#line 552 
static void ldv_tasklet_schedule_78(struct tasklet_struct *t);


#line 564 
static void ldv_tasklet_hi_schedule_79(struct tasklet_struct *t);


#line 568 
static void ldv_tasklet_hi_schedule_80(struct tasklet_struct *t);


#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_disable_nosync(struct tasklet_struct *t)
{
  
#line 586 
  atomic_inc(& t->count);
  
#line 587 
  ldv_inline_asm();
  
#line 588 
  return;
}


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_disable(struct tasklet_struct *t)
{
  
#line 592 
  tasklet_disable_nosync(t);
  
#line 593 
  tasklet_unlock_wait(t);
  
#line 594 
  ldv_inline_asm();
  
#line 595 
  return;
}


#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_enable(struct tasklet_struct *t)
{
  
#line 599 
  ldv_inline_asm();
  
#line 600 
  atomic_dec(& t->count);
  
#line 601 
  return;
}


#line 603 
void tasklet_kill(struct tasklet_struct *);


#line 609 
static void ldv_tasklet_init_85(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 613 
static void ldv_tasklet_init_86(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 617 
static void ldv_tasklet_init_87(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 621 
static void ldv_tasklet_init_88(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 625 
static void ldv_tasklet_init_108(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
int mii_ethtool_gset(struct mii_if_info *, struct ethtool_cmd *);


#line 34 
int mii_ethtool_sset(struct mii_if_info *, struct ethtool_cmd *);


#line 40 
int generic_mii_ioctl(struct mii_if_info *, struct mii_ioctl_data *, int, unsigned int *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_109(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_111(struct net_device *ldv_func_arg1);


#line 3683 
void netdev_update_features(struct net_device *);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_107(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/udp.h"
__inline static struct udphdr *udp_hdr(struct sk_buff const *skb)
{
  struct udphdr *tmp;
  
#line 27 
  tmp = (struct udphdr *)skb_transport_header(skb);
  
#line 27 
  return tmp;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static struct jme_adapter *jme_napi_priv(struct napi_struct *napi)
{
  struct jme_adapter *jme;
  struct jme_adapter *tmp;
  {
    
#line 478 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 478 
    tmp = (struct jme_adapter *)__mptr + 18446744073709550264U;
  }
  
#line 478 
  jme = tmp;
  
#line 479 
  return jme;
}


#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static u32 smi_reg_addr(int x)
{
  u32 __retres;
  
#line 821 
  __retres = (unsigned int)(x << 11) & 65535U;
  
#line 821 
  return __retres;
}


#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static u32 smi_phy_addr(int x)
{
  u32 __retres;
  
#line 826 
  __retres = (unsigned int)(x << 6) & 1984U;
  
#line 826 
  return __retres;
}


#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
static u32 const INTR_ENABLE = 3794866176U;

#line 1208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static void reg_dbg(struct jme_adapter const *jme, char const *msg, u32 val, u32 reg)
{
  
#line 1210 
  return;
}


#line 1215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static u32 jread32(struct jme_adapter *jme, u32 reg)
{
  u32 tmp;
  
#line 1217 
  tmp = readl((void const volatile *)(jme->regs + reg));
  
#line 1217 
  return tmp;
}


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static void jwrite32(struct jme_adapter *jme, u32 reg, u32 val)
{
  unsigned int tmp;
  
#line 1222 
  reg_dbg((struct jme_adapter const *)jme,"REG WRITE",val,reg);
  
#line 1223 
  writel(val,(void volatile *)(jme->regs + reg));
  
#line 1224 
  ;
  
#line 1224 
  tmp = readl((void const volatile *)(jme->regs + reg));
  
#line 1224 
  ;
  
#line 1224 
  reg_dbg((struct jme_adapter const *)jme,"VAL AFTER WRITE",tmp,reg);
  
#line 1225 
  return;
}


#line 1227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static void jwrite32f(struct jme_adapter *jme, u32 reg, u32 val)
{
  unsigned int tmp;
  
#line 1232 
  reg_dbg((struct jme_adapter const *)jme,"REG WRITE FLUSH",val,reg);
  
#line 1233 
  writel(val,(void volatile *)(jme->regs + reg));
  
#line 1234 
  readl((void const volatile *)(jme->regs + reg));
  
#line 1235 
  ;
  
#line 1235 
  tmp = readl((void const volatile *)(jme->regs + reg));
  
#line 1235 
  ;
  
#line 1235 
  reg_dbg((struct jme_adapter const *)jme,"VAL AFTER WRITE",tmp,reg);
  
#line 1236 
  return;
}


#line 1260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static int is_buggy250(unsigned short device, u8 chiprev)
{
  int __retres;
  
#line 1262 
  __retres = ((unsigned int)device == 592U && (unsigned int)chiprev == 17U) != 0;
  
#line 1262 
  return __retres;
}


#line 1265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.h"
__inline static int new_phy_power_ctrl(u8 chip_main_rev)
{
  int __retres;
  
#line 1267 
  __retres = (unsigned int)chip_main_rev > 4U;
  
#line 1267 
  return __retres;
}


#line 1273 
static int jme_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd);


#line 1275 
static void jme_set_unicastaddr(struct net_device *netdev);


#line 1276 
static void jme_set_multi(struct net_device *netdev);


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int force_pseudohp = -1;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int no_pseudohp = -1;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int no_extplug = -1;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_mdio_read(struct net_device *netdev, int phy, int reg)
{
  int __retres;
  int i;
  int val;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  int tmp_3;
  
#line 63 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 64 
  int again = reg == 1;
  read_again: 
#line 66 
  ;
  
#line 67 
  tmp_0 = smi_phy_addr(phy);
  
#line 68 
  tmp_1 = smi_reg_addr(reg);
  
#line 67 
  ;
  
#line 67 
  jwrite32(jme,80U,(tmp_0 | tmp_1) | 16U);
  
#line 69 
  ldv_inline_asm();
  
#line 72 
  i = 5000;
  
#line 72 
  goto ldv_54262;
  ldv_54261: 
#line 73 
  ;
  
#line 73 
  __const_udelay(85900UL);
  
#line 74 
  tmp_2 = jread32(jme,80U);
  
#line 74 
  val = (int)tmp_2;
  
#line 75 
  if ((val & 16) == 0) 
#line 76 
                       goto ldv_54260; else ;
  
#line 72 
  i -= 1;
  ldv_54262: 
#line 73 
  ;
  
#line 72 
  if (i > 0) 
#line 74 
             goto ldv_54261; else 
#line 77 
                                  goto ldv_54260;
  ldv_54260: 
#line 78 
  ;
  
#line 79 
  if (i == 0) {
    
#line 80 
    printk("\001",phy,reg);
    
#line 81 
    __retres = 0;
    
#line 81 
    goto return_label;
  }
  else ;
  
#line 84 
  tmp_3 = again;
  
#line 84 
  again -= 1;
  
#line 84 
  ;
  
#line 84 
  if (tmp_3 != 0) 
#line 85 
                  goto read_again; else ;
  
#line 87 
  __retres = (int)((unsigned int)val >> 16);
  return_label: 
#line 87 
                return __retres;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_mdio_write(struct net_device *netdev, int phy, int reg, int val)
{
  int i;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  
#line 94 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 98 
  tmp_0 = smi_phy_addr(phy);
  
#line 99 
  tmp_1 = smi_reg_addr(reg);
  
#line 97 
  ;
  
#line 97 
  ;
  
#line 97 
  jwrite32(jme,80U,(((unsigned int)(val << 16) | tmp_0) | tmp_1) | 48U);
  
#line 100 
  ldv_inline_asm();
  
#line 102 
  i = 5000;
  
#line 102 
  goto ldv_54273;
  ldv_54272: 
#line 103 
  ;
  
#line 103 
  __const_udelay(85900UL);
  
#line 104 
  tmp_2 = jread32(jme,80U);
  
#line 104 
  if ((tmp_2 & 16U) == 0U) 
#line 105 
                           goto ldv_54271; else ;
  
#line 102 
  i -= 1;
  ldv_54273: 
#line 103 
  ;
  
#line 102 
  if (i > 0) 
#line 104 
             goto ldv_54272; else 
#line 107 
                                  goto ldv_54271;
  ldv_54271: 
#line 108 
  ;
  
#line 108 
  if (i == 0) 
#line 109 
              printk("\001",phy,reg); else ;
  
#line 110 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_reset_phy_processor(struct jme_adapter *jme)
{
  u32 val;
  int tmp;
  
#line 117 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,4,3552);
  
#line 122 
  if ((unsigned int)(jme->pdev)->device == 592U) 
#line 123 
                                                 jme_mdio_write(jme->dev,jme->mii_if.phy_id,9,768); else ;
  
#line 128 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
  
#line 128 
  val = (unsigned int)tmp;
  
#line 132 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,0,(int)(val | 32768U));
  
#line 135 
  return;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_setup_wakeup_frame(struct jme_adapter *jme, u32 const *mask, u32 crc, int fnr)
{
  int i;
  
#line 146 
  jwrite32(jme,76U,(unsigned int)((fnr & 7) | 8));
  
#line 147 
  ldv_inline_asm();
  
#line 148 
  jwrite32(jme,72U,crc);
  
#line 149 
  ldv_inline_asm();
  
#line 154 
  i = 0;
  
#line 154 
  goto ldv_54286;
  ldv_54285: 
#line 155 
  ;
  
#line 155 
  jwrite32(jme,76U,(unsigned int)(((i << 4) & 112) | (fnr & 7)));
  
#line 158 
  ldv_inline_asm();
  
#line 159 
  jwrite32(jme,72U,*(mask + i));
  
#line 160 
  ldv_inline_asm();
  
#line 154 
  i += 1;
  ldv_54286: 
#line 155 
  ;
  
#line 154 
  if (i <= 3) 
#line 156 
              goto ldv_54285; else 
#line 159 
                                   goto ldv_54287;
  ldv_54287: 
#line 160 
  ;
  
#line 161 
  return;
}


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_mac_rxclk_off(struct jme_adapter *jme)
{
  
#line 167 
  jme->reg_gpreg1 |= 67108864U;
  
#line 168 
  jwrite32f(jme,2060U,jme->reg_gpreg1);
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_mac_rxclk_on(struct jme_adapter *jme)
{
  
#line 174 
  jme->reg_gpreg1 &= 4227858431U;
  
#line 175 
  jwrite32f(jme,2060U,jme->reg_gpreg1);
  
#line 176 
  return;
}


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_mac_txclk_off(struct jme_adapter *jme)
{
  
#line 181 
  jme->reg_ghc &= 4279238655U;
  
#line 182 
  jwrite32f(jme,84U,jme->reg_ghc);
  
#line 183 
  return;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_mac_txclk_on(struct jme_adapter *jme)
{
  
#line 188 
  u32 speed = jme->reg_ghc & 48U;
  
#line 189 
  if (speed == 48U) 
#line 190 
                    jme->reg_ghc |= 5242880U; else 
#line 192 
                                                   jme->reg_ghc |= 10485760U;
  
#line 193 
  jwrite32f(jme,84U,jme->reg_ghc);
  
#line 194 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_reset_ghc_speed(struct jme_adapter *jme)
{
  
#line 199 
  jme->reg_ghc &= 4294967183U;
  
#line 200 
  jwrite32f(jme,84U,jme->reg_ghc);
  
#line 201 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_reset_250A2_workaround(struct jme_adapter *jme)
{
  
#line 206 
  jme->reg_gpreg1 &= 4294967199U;
  
#line 208 
  jwrite32(jme,2060U,jme->reg_gpreg1);
  
#line 209 
  return;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_assert_ghc_reset(struct jme_adapter *jme)
{
  
#line 214 
  jme->reg_ghc |= 1073741824U;
  
#line 215 
  jwrite32f(jme,84U,jme->reg_ghc);
  
#line 216 
  return;
}


#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_clear_ghc_reset(struct jme_adapter *jme)
{
  
#line 221 
  jme->reg_ghc &= 3221225471U;
  
#line 222 
  jwrite32f(jme,84U,jme->reg_ghc);
  
#line 223 
  return;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_reset_mac_processor(struct jme_adapter *jme)
{
  u32 gpreg0;
  int i;
  
#line 228 
  u32 const mask[4U] = {0U, 0U, 0U, 0U};
  
#line 229 
  u32 crc = 3452816845U;
  
#line 233 
  jme_reset_ghc_speed(jme);
  
#line 234 
  jme_reset_250A2_workaround(jme);
  
#line 236 
  jme_mac_rxclk_on(jme);
  
#line 237 
  jme_mac_txclk_on(jme);
  
#line 238 
  __const_udelay(4295UL);
  
#line 239 
  jme_assert_ghc_reset(jme);
  
#line 240 
  __const_udelay(4295UL);
  
#line 241 
  jme_mac_rxclk_off(jme);
  
#line 242 
  jme_mac_txclk_off(jme);
  
#line 243 
  __const_udelay(4295UL);
  
#line 244 
  jme_clear_ghc_reset(jme);
  
#line 245 
  __const_udelay(4295UL);
  
#line 246 
  jme_mac_rxclk_on(jme);
  
#line 247 
  jme_mac_txclk_on(jme);
  
#line 248 
  __const_udelay(4295UL);
  
#line 249 
  jme_mac_rxclk_off(jme);
  
#line 250 
  jme_mac_txclk_off(jme);
  
#line 252 
  jwrite32(jme,36U,0U);
  
#line 253 
  jwrite32(jme,40U,0U);
  
#line 254 
  jwrite32(jme,44U,0U);
  
#line 255 
  jwrite32(jme,48U,0U);
  
#line 256 
  jwrite32(jme,4U,0U);
  
#line 257 
  jwrite32(jme,8U,0U);
  
#line 258 
  jwrite32(jme,12U,0U);
  
#line 259 
  jwrite32(jme,16U,0U);
  
#line 261 
  jwrite32(jme,64U,0U);
  
#line 262 
  jwrite32(jme,68U,0U);
  
#line 263 
  i = 0;
  
#line 263 
  goto ldv_54321;
  ldv_54320: 
#line 264 
  ;
  
#line 264 
  jme_setup_wakeup_frame(jme,(u32 const *)(& mask),crc,i);
  
#line 263 
  i += 1;
  ldv_54321: 
#line 264 
  ;
  
#line 263 
  if (i <= 7) 
#line 265 
              goto ldv_54320; else 
#line 268 
                                   goto ldv_54322;
  ldv_54322: 
#line 269 
  ;
  
#line 265 
  if (jme->fpgaver != 0U) 
#line 266 
                          gpreg0 = 3150337U; else 
#line 268 
                                                  gpreg0 = 3146241U;
  
#line 269 
  jwrite32(jme,2056U,gpreg0);
  
#line 270 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_clear_pm(struct jme_adapter *jme)
{
  
#line 275 
  jwrite32(jme,96U,jme->reg_pmcs | 4294901760U);
  
#line 276 
  return;
}


#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_reload_eeprom(struct jme_adapter *jme)
{
  int __retres;
  u32 val;
  int i;
  
#line 284 
  val = jread32(jme,1088U);
  
#line 286 
  if ((val & 32U) != 0U) {
    u32 tmp_1;
    
#line 287 
    val |= 131072U;
    
#line 288 
    jwrite32(jme,1088U,val);
    
#line 289 
    val |= 65536U;
    
#line 290 
    jwrite32(jme,1088U,val);
    {
      
#line 291 
      unsigned long __ms = 12UL;
      {
        unsigned long tmp;
        
#line 291 
        goto ldv_54333;
        ldv_54332: 
#line 292 
        ;
        
#line 291 
        __const_udelay(4295000UL);
        ldv_54333: 
#line 293 
        ;
        
#line 291 
        tmp = __ms;
        
#line 291 
        __ms -= 1UL;
        
#line 291 
        ;
        
#line 291 
        if (tmp != 0UL) 
#line 293 
                        goto ldv_54332; else 
#line 296 
                                             goto ldv_54334;
        ldv_54334: 
#line 297 
        ;
      }
    }
    
#line 293 
    i = 2000;
    
#line 293 
    goto ldv_54341;
    ldv_54340: 
#line 294 
    ;
    
#line 294 
    if (1) 
#line 294 
           __const_udelay(4295000UL);
    else {
      
#line 294 
      unsigned long __ms_0 = 1UL;
      {
        unsigned long tmp_0;
        
#line 294 
        goto ldv_54337;
        ldv_54336: 
#line 295 
        ;
        
#line 294 
        __const_udelay(4295000UL);
        ldv_54337: 
#line 296 
        ;
        
#line 294 
        tmp_0 = __ms_0;
        
#line 294 
        __ms_0 -= 1UL;
        
#line 294 
        ;
        
#line 294 
        if (tmp_0 != 0UL) 
#line 296 
                          goto ldv_54336; else 
#line 299 
                                               goto ldv_54338;
        ldv_54338: 
#line 300 
        ;
      }
    }
    
#line 295 
    tmp_1 = jread32(jme,1088U);
    
#line 295 
    if ((tmp_1 & 65536U) == 0U) 
#line 296 
                                goto ldv_54339; else ;
    
#line 293 
    i -= 1;
    ldv_54341: 
#line 294 
    ;
    
#line 293 
    if (i > 0) 
#line 295 
               goto ldv_54340; else 
#line 298 
                                    goto ldv_54339;
    ldv_54339: 
#line 299 
    ;
    
#line 299 
    if (i == 0) {
      
#line 300 
      printk("\001");
      
#line 301 
      __retres = -5;
      
#line 301 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 305 
  __retres = 0;
  return_label: 
#line 305 
                return __retres;
}


#line 309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_load_macaddr(struct net_device *netdev)
{
  unsigned char macaddr[6U];
  u32 val;
  
#line 311 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 315 
  ldv_spin_lock_bh_73(& jme->macaddr_lock);
  
#line 316 
  val = jread32(jme,56U);
  
#line 317 
  macaddr[0] = (unsigned char)val;
  
#line 318 
  macaddr[1] = (unsigned char)(val >> 8);
  
#line 319 
  macaddr[2] = (unsigned char)(val >> 16);
  
#line 320 
  macaddr[3] = (unsigned char)(val >> 24);
  
#line 321 
  val = jread32(jme,60U);
  
#line 322 
  macaddr[4] = (unsigned char)val;
  
#line 323 
  macaddr[5] = (unsigned char)(val >> 8);
  
#line 324 
  memcpy((void *)netdev->dev_addr,(void const *)(& macaddr),6UL);
  
#line 325 
  ldv_spin_unlock_bh_74(& jme->macaddr_lock);
  
#line 326 
  return;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_set_rx_pcc(struct jme_adapter *jme, int p)
{
  int tmp;
  
#line 331 
  switch (p) {
    case 0: 
#line 332 
    ;
    
#line 333 
    jwrite32(jme,2096U,0U);
    
#line 336 
    goto ldv_54353;
    case 1: 
#line 337 
    ;
    
#line 338 
    jwrite32(jme,2096U,65792U);
    
#line 341 
    goto ldv_54353;
    case 2: 
#line 342 
    ;
    
#line 343 
    jwrite32(jme,2096U,4198400U);
    
#line 346 
    goto ldv_54353;
    case 3: 
#line 347 
    ;
    
#line 348 
    jwrite32(jme,2096U,8396800U);
    
#line 351 
    goto ldv_54353;
    default: 
#line 352 
    ;
    
#line 353 
    goto ldv_54353;
  }
  ldv_54353: 
#line 355 
  ;
  
#line 356 
  ldv_inline_asm();
  
#line 357 
  tmp = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
  
#line 357 
  if (tmp == 0) {
    
#line 358 
    if ((jme->msg_enable & 2048U) != 0U) 
#line 358 
                                         netdev_info((struct net_device const *)jme->dev,"Switched to PCC_P%d\n",p); else ;
  }
  else ;
  
#line 359 
  return;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_start_irq(struct jme_adapter *jme)
{
  
#line 364 
  register struct dynpcc_info *dpi = & jme->dpi;
  
#line 366 
  jme_set_rx_pcc(jme,1);
  
#line 367 
  dpi->cur = (unsigned char)1U;
  
#line 368 
  dpi->attempt = (unsigned char)1U;
  
#line 369 
  dpi->cnt = (unsigned char)0U;
  
#line 371 
  jwrite32(jme,2112U,65538049U);
  
#line 380 
  jwrite32(jme,2088U,INTR_ENABLE);
  
#line 381 
  return;
}


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_stop_irq(struct jme_adapter *jme)
{
  
#line 389 
  jwrite32f(jme,2092U,INTR_ENABLE);
  
#line 390 
  return;
}


#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static u32 jme_linkstat_from_phy(struct jme_adapter *jme)
{
  u32 phylink;
  u32 bmsr;
  int tmp;
  int tmp_0;
  
#line 397 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,17);
  
#line 397 
  phylink = (unsigned int)tmp;
  
#line 398 
  tmp_0 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,1);
  
#line 398 
  bmsr = (unsigned int)tmp_0;
  
#line 399 
  if ((bmsr & 32U) != 0U) 
#line 400 
                          phylink |= 512U; else ;
  
#line 402 
  return phylink;
}


#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_set_phyfifo_5level(struct jme_adapter *jme)
{
  
#line 408 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,27,4);
  
#line 409 
  return;
}


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_set_phyfifo_8level(struct jme_adapter *jme)
{
  
#line 414 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,27,0);
  
#line 415 
  return;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_check_link(struct net_device *netdev, int testonly)
{
  u32 phylink;
  u32 bmcr;
  char linkmsg[64U];
  
#line 420 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 421 
  u32 cnt = 500U;
  
#line 423 
  int rc = 0;
  
#line 425 
  linkmsg[0] = (char)0;
  
#line 427 
  if (jme->fpgaver != 0U) 
#line 428 
                          phylink = jme_linkstat_from_phy(jme); else 
                                                                  
#line 430 
                                                                  phylink = jread32(jme,1072U);
  
#line 432 
  if ((phylink & 1024U) != 0U) {
    int tmp_2;
    char *tmp_3;
    char *tmp_4;
    
#line 433 
    if ((phylink & 512U) == 0U) {
      int tmp_0;
      int tmp_1;
      
#line 438 
      phylink = 1024U;
      
#line 440 
      tmp_0 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
      
#line 440 
      bmcr = (unsigned int)tmp_0;
      
#line 446 
      if ((bmcr & 64U) == 0U || (bmcr & 8192U) != 0U) 
#line 446 
                                                      tmp_1 = ((int)bmcr << 1) & 16384; else 
                                                                    
#line 446 
                                                                    tmp_1 = 32768;
      
#line 444 
      phylink = (unsigned int)tmp_1 | phylink;
      
#line 451 
      phylink = ((unsigned int)((int)bmcr << 5) & 8192U) | phylink;
      
#line 454 
      strcat((char *)(& linkmsg),"Forced: ");
    }
    else {
      
#line 459 
      goto ldv_54387;
      ldv_54386: 
#line 460 
      ;
      
#line 462 
      __const_udelay(4295UL);
      
#line 464 
      if (jme->fpgaver != 0U) 
#line 465 
                              phylink = jme_linkstat_from_phy(jme); else 
                                                                    
#line 467 
                                                                    phylink = jread32(jme,1072U);
      ldv_54387: 
#line 468 
      ;
      
#line 459 
      if ((phylink & 2048U) == 0U) {
        
#line 460 
        cnt -= 1U;
        
#line 460 
        if (cnt != 0U) 
#line 461 
                       goto ldv_54386; else 
#line 464 
                                            goto ldv_54388;
      }
      else 
#line 464 
           goto ldv_54388;
      ldv_54388: 
#line 465 
      ;
      
#line 469 
      if (cnt == 0U) 
#line 470 
                     printk("\001"); else ;
      
#line 472 
      strcat((char *)(& linkmsg),"ANed: ");
    }
    
#line 475 
    if (jme->phylink == phylink) {
      
#line 476 
      rc = 1;
      
#line 477 
      goto out;
    }
    else ;
    
#line 479 
    if (testonly != 0) 
#line 480 
                       goto out; else ;
    
#line 482 
    jme->phylink = phylink;
    
#line 488 
    switch (phylink & 49152U) {
      case (unsigned int)0: 
#line 489 
      ;
      
#line 490 
      jme->reg_ghc |= 16U;
      
#line 491 
      strcat((char *)(& linkmsg),"10 Mbps, ");
      
#line 492 
      goto ldv_54391;
      case (unsigned int)16384: 
#line 493 
      ;
      
#line 494 
      jme->reg_ghc |= 32U;
      
#line 495 
      strcat((char *)(& linkmsg),"100 Mbps, ");
      
#line 496 
      goto ldv_54391;
      case (unsigned int)32768: 
#line 497 
      ;
      
#line 498 
      jme->reg_ghc |= 48U;
      
#line 499 
      strcat((char *)(& linkmsg),"1000 Mbps, ");
      
#line 500 
      goto ldv_54391;
      default: 
#line 501 
      ;
      
#line 502 
      goto ldv_54391;
    }
    ldv_54391: 
#line 505 
    ;
    
#line 505 
    if ((phylink & 8192U) != 0U) {
      
#line 506 
      jwrite32(jme,20U,1610613539U);
      
#line 507 
      jwrite32(jme,28U,0U);
      
#line 508 
      jme->reg_ghc |= 64U;
    }
    else {
      
#line 510 
      jwrite32(jme,20U,1610613567U);
      
#line 514 
      jwrite32(jme,28U,2149580936U);
    }
    
#line 517 
    jwrite32(jme,84U,jme->reg_ghc);
    
#line 519 
    tmp_2 = is_buggy250((unsigned short)((int)(jme->pdev)->device),(unsigned char)((int)jme->chiprev));
    
#line 519 
    if (tmp_2 != 0) {
      
#line 520 
      jme->reg_gpreg1 &= 4294967199U;
      
#line 522 
      if ((phylink & 8192U) == 0U) 
#line 523 
                                   jme->reg_gpreg1 |= 64U; else ;
      
#line 524 
      switch (phylink & 49152U) {
        case (unsigned int)0: 
#line 525 
        ;
        
#line 526 
        jme_set_phyfifo_8level(jme);
        
#line 527 
        jme->reg_gpreg1 |= 32U;
        
#line 528 
        goto ldv_54396;
        case (unsigned int)16384: 
#line 529 
        ;
        
#line 530 
        jme_set_phyfifo_5level(jme);
        
#line 531 
        jme->reg_gpreg1 |= 32U;
        
#line 532 
        goto ldv_54396;
        case (unsigned int)32768: 
#line 533 
        ;
        
#line 534 
        jme_set_phyfifo_8level(jme);
        
#line 535 
        goto ldv_54396;
        default: 
#line 536 
        ;
        
#line 537 
        goto ldv_54396;
      }
      ldv_54396: 
#line 539 
      ;
    }
    else ;
    
#line 540 
    jwrite32(jme,2060U,jme->reg_gpreg1);
    
#line 543 
    if ((phylink & 8192U) != 0U) 
#line 543 
                                 tmp_3 = (char *)"Full-Duplex, "; else 
                                                                    
#line 543 
                                                                    tmp_3 = (char *)"Half-Duplex, ";
    
#line 542 
    strcat((char *)(& linkmsg),(char const *)tmp_3);
    
#line 546 
    if ((phylink & 64U) != 0U) 
#line 546 
                               tmp_4 = (char *)"MDI-X"; else 
#line 546 
                                                             tmp_4 = (char *)"MDI";
    
#line 545 
    strcat((char *)(& linkmsg),(char const *)tmp_4);
    
#line 548 
    if ((jme->msg_enable & 4U) != 0U) 
#line 548 
                                      netdev_info((struct net_device const *)jme->dev,"Link is up at %s\n",(char *)(& linkmsg)); else ;
    
#line 549 
    netif_carrier_on(netdev);
  }
  else {
    
#line 551 
    if (testonly != 0) 
#line 552 
                       goto out; else ;
    
#line 554 
    if ((jme->msg_enable & 4U) != 0U) 
#line 554 
                                      netdev_info((struct net_device const *)jme->dev,"Link is down\n"); else ;
    
#line 555 
    jme->phylink = 0U;
    
#line 556 
    netif_carrier_off(netdev);
  }
  out: 
#line 559 
  ;
  
#line 560 
  return rc;
}


#line 564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_setup_tx_resources(struct jme_adapter *jme)
{
  int __retres;
  
#line 566 
  struct jme_ring *txring = & jme->txring[0];
  
#line 568 
  txring->alloc = dma_alloc_attrs(& (jme->pdev)->dev,(unsigned long)((jme->tx_ring_size + 1U) * 16U),& txring->dmaalloc,32U,(struct dma_attrs *)0);
  
#line 573 
  if (txring->alloc == (void *)0) 
#line 574 
                                  goto err_set_null; else ;
  
#line 579 
  txring->desc = (void *)(((unsigned long)txring->alloc + 15UL) & 18446744073709551600UL);
  
#line 581 
  txring->dma = (txring->dmaalloc + 15ULL) & 18446744073709551600ULL;
  
#line 582 
  txring->next_to_use = 0;
  
#line 583 
  atomic_set(& txring->next_to_clean,0);
  
#line 584 
  atomic_set(& txring->nr_free,(int)jme->tx_ring_size);
  
#line 586 
  txring->bufinf = (struct jme_buffer_info *)kmalloc((unsigned long)jme->tx_ring_size * 32UL,32U);
  
#line 588 
  if ((long)(txring->bufinf == (struct jme_buffer_info *)0) != 0L) 
#line 589 
                                                                   goto err_free_txring; else ;
  
#line 594 
  memset(txring->alloc,0,(unsigned long)((jme->tx_ring_size + 1U) * 16U));
  
#line 595 
  memset((void *)txring->bufinf,0,(unsigned long)jme->tx_ring_size * 32UL);
  
#line 598 
  __retres = 0;
  
#line 598 
  goto return_label;
  err_free_txring: 
#line 600 
  ;
  
#line 601 
  dma_free_attrs(& (jme->pdev)->dev,(unsigned long)((jme->tx_ring_size + 1U) * 16U),txring->alloc,txring->dmaalloc,(struct dma_attrs *)0);
  err_set_null: 
#line 606 
  ;
  
#line 607 
  txring->desc = (void *)0;
  
#line 608 
  txring->dmaalloc = 0ULL;
  
#line 609 
  txring->dma = 0ULL;
  
#line 610 
  txring->bufinf = (struct jme_buffer_info *)0;
  
#line 612 
  __retres = -12;
  return_label: 
#line 612 
                return __retres;
}


#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_free_tx_resources(struct jme_adapter *jme)
{
  int i;
  struct jme_buffer_info *txbi;
  
#line 619 
  struct jme_ring *txring = & jme->txring[0];
  
#line 622 
  if (txring->alloc != (void *)0) {
    
#line 623 
    if (txring->bufinf != (struct jme_buffer_info *)0) {
      
#line 624 
      i = 0;
      
#line 624 
      goto ldv_54413;
      ldv_54412: 
#line 625 
      ;
      
#line 625 
      txbi = txring->bufinf + i;
      
#line 626 
      if (txbi->skb != (struct sk_buff *)0) {
        
#line 627 
        consume_skb(txbi->skb);
        
#line 628 
        txbi->skb = (struct sk_buff *)0;
      }
      else ;
      
#line 630 
      txbi->mapping = 0ULL;
      
#line 631 
      txbi->len = 0;
      
#line 632 
      txbi->nr_desc = 0;
      
#line 633 
      txbi->start_xmit = 0UL;
      
#line 624 
      i += 1;
      ldv_54413: 
#line 625 
      ;
      
#line 624 
      if (jme->tx_ring_size > (unsigned int)i) 
#line 626 
                                               goto ldv_54412; else 
#line 629 
                                                                    goto ldv_54414;
      ldv_54414: 
#line 630 
      ;
      
#line 635 
      kfree((void const *)txring->bufinf);
    }
    else ;
    
#line 638 
    dma_free_attrs(& (jme->pdev)->dev,(unsigned long)((jme->tx_ring_size + 1U) * 16U),txring->alloc,txring->dmaalloc,(struct dma_attrs *)0);
    
#line 643 
    txring->alloc = (void *)0;
    
#line 644 
    txring->desc = (void *)0;
    
#line 645 
    txring->dmaalloc = 0ULL;
    
#line 646 
    txring->dma = 0ULL;
    
#line 647 
    txring->bufinf = (struct jme_buffer_info *)0;
  }
  else ;
  
#line 649 
  txring->next_to_use = 0;
  
#line 650 
  atomic_set(& txring->next_to_clean,0);
  
#line 651 
  atomic_set(& txring->nr_free,0);
  
#line 652 
  return;
}


#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_enable_tx_engine(struct jme_adapter *jme)
{
  
#line 660 
  jwrite32(jme,0U,4U);
  
#line 661 
  ldv_inline_asm();
  
#line 666 
  jwrite32(jme,4U,(unsigned int)jme->txring[0].dma);
  
#line 667 
  jwrite32(jme,8U,(unsigned int)(jme->txring[0].dma >> 32));
  
#line 668 
  jwrite32(jme,16U,(unsigned int)jme->txring[0].dma);
  
#line 673 
  jwrite32(jme,12U,jme->tx_ring_size);
  
#line 674 
  ldv_inline_asm();
  
#line 679 
  jwrite32f(jme,0U,jme->reg_txcs | 1U);
  
#line 686 
  jme_mac_txclk_on(jme);
  
#line 687 
  return;
}


#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_disable_tx_engine(struct jme_adapter *jme)
{
  int i;
  u32 val;
  
#line 709 
  jwrite32(jme,0U,jme->reg_txcs);
  
#line 710 
  ldv_inline_asm();
  
#line 712 
  val = jread32(jme,0U);
  
#line 713 
  i = 10;
  
#line 713 
  goto ldv_54431;
  ldv_54430: 
#line 714 
  ;
  
#line 714 
  if (1) 
#line 714 
         __const_udelay(4295000UL);
  else {
    
#line 714 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp;
      
#line 714 
      goto ldv_54428;
      ldv_54427: 
#line 715 
      ;
      
#line 714 
      __const_udelay(4295000UL);
      ldv_54428: 
#line 716 
      ;
      
#line 714 
      tmp = __ms;
      
#line 714 
      __ms -= 1UL;
      
#line 714 
      ;
      
#line 714 
      if (tmp != 0UL) 
#line 716 
                      goto ldv_54427; else 
#line 719 
                                           goto ldv_54429;
      ldv_54429: 
#line 720 
      ;
    }
  }
  
#line 715 
  val = jread32(jme,0U);
  
#line 716 
  ldv_inline_asm();
  
#line 713 
  i -= 1;
  ldv_54431: 
#line 714 
  ;
  
#line 713 
  if ((val & 1U) != 0U && i > 0) 
#line 715 
                                 goto ldv_54430; else 
#line 718 
                                                      goto ldv_54432;
  ldv_54432: 
#line 719 
  ;
  
#line 719 
  if (i == 0) 
#line 720 
              printk("\001"); else ;
  
#line 725 
  jme_mac_txclk_off(jme);
  
#line 726 
  return;
}


#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_set_clean_rxdesc(struct jme_adapter *jme, int i)
{
  
#line 731 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 732 
  register struct rxdesc *rxdesc = (struct rxdesc *)rxring->desc;
  
#line 733 
  struct jme_buffer_info *rxbi = rxring->bufinf;
  
#line 734 
  rxdesc += i;
  
#line 735 
  rxbi += i;
  
#line 737 
  rxdesc->__anonCompField_rxdesc_116.dw[0] = 0U;
  
#line 738 
  rxdesc->__anonCompField_rxdesc_116.dw[1] = 0U;
  
#line 739 
  rxdesc->__anonCompField_rxdesc_116.desc1.bufaddrh = (unsigned int)(rxbi->mapping >> 32);
  
#line 740 
  rxdesc->__anonCompField_rxdesc_116.desc1.bufaddrl = (unsigned int)rxbi->mapping;
  
#line 742 
  rxdesc->__anonCompField_rxdesc_116.desc1.datalen = (unsigned short)rxbi->len;
  
#line 743 
  if (((jme->dev)->features & 32ULL) != 0ULL) 
#line 744 
                                              rxdesc->__anonCompField_rxdesc_116.desc1.flags = (unsigned char)32U; else ;
  
#line 745 
  ldv_inline_asm();
  
#line 746 
  rxdesc->__anonCompField_rxdesc_116.desc1.flags = (unsigned char)((unsigned int)rxdesc->__anonCompField_rxdesc_116.desc1.flags | 192U);
  
#line 747 
  return;
}


#line 750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_make_new_rx_buf(struct jme_adapter *jme, int i)
{
  int __retres;
  struct sk_buff *skb;
  dma_addr_t mapping;
  int tmp;
  unsigned long tmp_0;
  int tmp_1;
  
#line 752 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 753 
  struct jme_buffer_info *rxbi = rxring->bufinf + i;
  
#line 757 
  skb = netdev_alloc_skb(jme->dev,(jme->dev)->mtu + 36U);
  
#line 759 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 760 
    __retres = -12;
    
#line 760 
    goto return_label;
  }
  else ;
  
#line 763 
  tmp = skb_tailroom((struct sk_buff const *)skb);
  
#line 762 
  ;
  
#line 762 
  tmp_0 = __phys_addr((unsigned long)skb->data);
  
#line 762 
  ;
  
#line 762 
  mapping = pci_map_page(jme->pdev,(struct page *)(-24189255811072) + (tmp_0 >> 12),(unsigned long)skb->data & 4095UL,(unsigned long)tmp,2);
  
#line 765 
  tmp_1 = pci_dma_mapping_error(jme->pdev,mapping);
  
#line 765 
  if ((long)(tmp_1 != 0) != 0L) {
    
#line 766 
    consume_skb(skb);
    
#line 767 
    __retres = -12;
    
#line 767 
    goto return_label;
  }
  else ;
  
#line 770 
  if ((long)(rxbi->mapping != 0ULL) != 0L) 
#line 771 
                                           pci_unmap_page(jme->pdev,rxbi->mapping,(unsigned long)rxbi->len,2); else ;
  
#line 774 
  rxbi->skb = skb;
  
#line 775 
  rxbi->len = skb_tailroom((struct sk_buff const *)skb);
  
#line 776 
  rxbi->mapping = mapping;
  
#line 777 
  __retres = 0;
  return_label: 
#line 777 
                return __retres;
}


#line 781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_free_rx_buf(struct jme_adapter *jme, int i)
{
  
#line 783 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 784 
  struct jme_buffer_info *rxbi = rxring->bufinf;
  
#line 785 
  rxbi += i;
  
#line 787 
  if (rxbi->skb != (struct sk_buff *)0) {
    
#line 788 
    pci_unmap_page(jme->pdev,rxbi->mapping,(unsigned long)rxbi->len,2);
    
#line 792 
    consume_skb(rxbi->skb);
    
#line 793 
    rxbi->skb = (struct sk_buff *)0;
    
#line 794 
    rxbi->mapping = 0ULL;
    
#line 795 
    rxbi->len = 0;
  }
  else ;
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_free_rx_resources(struct jme_adapter *jme)
{
  int i;
  
#line 803 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 805 
  if (rxring->alloc != (void *)0) {
    
#line 806 
    if (rxring->bufinf != (struct jme_buffer_info *)0) {
      
#line 807 
      i = 0;
      
#line 807 
      goto ldv_54460;
      ldv_54459: 
#line 808 
      ;
      
#line 808 
      jme_free_rx_buf(jme,i);
      
#line 807 
      i += 1;
      ldv_54460: 
#line 808 
      ;
      
#line 807 
      if (jme->rx_ring_size > (unsigned int)i) 
#line 809 
                                               goto ldv_54459; else 
#line 812 
                                                                    goto ldv_54461;
      ldv_54461: 
#line 813 
      ;
      
#line 809 
      kfree((void const *)rxring->bufinf);
    }
    else ;
    
#line 812 
    dma_free_attrs(& (jme->pdev)->dev,(unsigned long)((jme->rx_ring_size + 1U) * 16U),rxring->alloc,rxring->dmaalloc,(struct dma_attrs *)0);
    
#line 816 
    rxring->alloc = (void *)0;
    
#line 817 
    rxring->desc = (void *)0;
    
#line 818 
    rxring->dmaalloc = 0ULL;
    
#line 819 
    rxring->dma = 0ULL;
    
#line 820 
    rxring->bufinf = (struct jme_buffer_info *)0;
  }
  else ;
  
#line 822 
  rxring->next_to_use = 0;
  
#line 823 
  atomic_set(& rxring->next_to_clean,0);
  
#line 824 
  return;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_setup_rx_resources(struct jme_adapter *jme)
{
  int __retres;
  int i;
  int tmp_0;
  
#line 830 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 832 
  rxring->alloc = dma_alloc_attrs(& (jme->pdev)->dev,(unsigned long)((jme->rx_ring_size + 1U) * 16U),& rxring->dmaalloc,32U,(struct dma_attrs *)0);
  
#line 836 
  if (rxring->alloc == (void *)0) 
#line 837 
                                  goto err_set_null; else ;
  
#line 842 
  rxring->desc = (void *)(((unsigned long)rxring->alloc + 15UL) & 18446744073709551600UL);
  
#line 844 
  rxring->dma = (rxring->dmaalloc + 15ULL) & 18446744073709551600ULL;
  
#line 845 
  rxring->next_to_use = 0;
  
#line 846 
  atomic_set(& rxring->next_to_clean,0);
  
#line 848 
  rxring->bufinf = (struct jme_buffer_info *)kmalloc((unsigned long)jme->rx_ring_size * 32UL,32U);
  
#line 850 
  if ((long)(rxring->bufinf == (struct jme_buffer_info *)0) != 0L) 
#line 851 
                                                                   goto err_free_rxring; else ;
  
#line 856 
  memset((void *)rxring->bufinf,0,(unsigned long)jme->rx_ring_size * 32UL);
  
#line 858 
  i = 0;
  
#line 858 
  goto ldv_54470;
  ldv_54469: 
#line 859 
  ;
  
#line 859 
  tmp_0 = jme_make_new_rx_buf(jme,i);
  
#line 859 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 860 
    jme_free_rx_resources(jme);
    
#line 861 
    __retres = -12;
    
#line 861 
    goto return_label;
  }
  else ;
  
#line 864 
  jme_set_clean_rxdesc(jme,i);
  
#line 858 
  i += 1;
  ldv_54470: 
#line 859 
  ;
  
#line 858 
  if (jme->rx_ring_size > (unsigned int)i) 
#line 860 
                                           goto ldv_54469; else 
#line 863 
                                                                goto ldv_54471;
  ldv_54471: 
#line 864 
  ;
  
#line 867 
  __retres = 0;
  
#line 867 
  goto return_label;
  err_free_rxring: 
#line 869 
  ;
  
#line 870 
  dma_free_attrs(& (jme->pdev)->dev,(unsigned long)((jme->rx_ring_size + 1U) * 16U),rxring->alloc,rxring->dmaalloc,(struct dma_attrs *)0);
  err_set_null: 
#line 874 
  ;
  
#line 875 
  rxring->desc = (void *)0;
  
#line 876 
  rxring->dmaalloc = 0ULL;
  
#line 877 
  rxring->dma = 0ULL;
  
#line 878 
  rxring->bufinf = (struct jme_buffer_info *)0;
  
#line 880 
  __retres = -12;
  return_label: 
#line 880 
                return __retres;
}


#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_enable_rx_engine(struct jme_adapter *jme)
{
  
#line 889 
  jwrite32(jme,32U,jme->reg_rxcs);
  
#line 890 
  ldv_inline_asm();
  
#line 896 
  jwrite32(jme,36U,(unsigned int)jme->rxring[0].dma);
  
#line 897 
  jwrite32(jme,40U,(unsigned int)(jme->rxring[0].dma >> 32));
  
#line 898 
  jwrite32(jme,48U,(unsigned int)jme->rxring[0].dma);
  
#line 903 
  jwrite32(jme,44U,jme->rx_ring_size);
  
#line 908 
  jme_set_unicastaddr(jme->dev);
  
#line 909 
  jme_set_multi(jme->dev);
  
#line 910 
  ldv_inline_asm();
  
#line 915 
  jwrite32f(jme,32U,jme->reg_rxcs | 5U);
  
#line 923 
  jme_mac_rxclk_on(jme);
  
#line 924 
  return;
}


#line 927  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_restart_rx_engine(struct jme_adapter *jme)
{
  
#line 932 
  jwrite32(jme,32U,jme->reg_rxcs | 5U);
  
#line 935 
  return;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_disable_rx_engine(struct jme_adapter *jme)
{
  int i;
  u32 val;
  
#line 947 
  jwrite32(jme,32U,jme->reg_rxcs);
  
#line 948 
  ldv_inline_asm();
  
#line 950 
  val = jread32(jme,32U);
  
#line 951 
  i = 10;
  
#line 951 
  goto ldv_54488;
  ldv_54487: 
#line 952 
  ;
  
#line 952 
  if (1) 
#line 952 
         __const_udelay(4295000UL);
  else {
    
#line 952 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp;
      
#line 952 
      goto ldv_54485;
      ldv_54484: 
#line 953 
      ;
      
#line 952 
      __const_udelay(4295000UL);
      ldv_54485: 
#line 954 
      ;
      
#line 952 
      tmp = __ms;
      
#line 952 
      __ms -= 1UL;
      
#line 952 
      ;
      
#line 952 
      if (tmp != 0UL) 
#line 954 
                      goto ldv_54484; else 
#line 957 
                                           goto ldv_54486;
      ldv_54486: 
#line 958 
      ;
    }
  }
  
#line 953 
  val = jread32(jme,32U);
  
#line 954 
  ldv_inline_asm();
  
#line 951 
  i -= 1;
  ldv_54488: 
#line 952 
  ;
  
#line 951 
  if ((val & 1U) != 0U && i > 0) 
#line 953 
                                 goto ldv_54487; else 
#line 956 
                                                      goto ldv_54489;
  ldv_54489: 
#line 957 
  ;
  
#line 957 
  if (i == 0) 
#line 958 
              printk("\001"); else ;
  
#line 963 
  jme_mac_rxclk_off(jme);
  
#line 964 
  return;
}


#line 967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static u16 jme_udpsum(struct sk_buff *skb)
{
  u16 __retres;
  struct iphdr *tmp;
  struct iphdr *tmp_1;
  struct udphdr *tmp_2;
  
#line 969 
  u16 csum = (unsigned short)65535U;
  
#line 971 
  if (skb->len <= 33U) {
    
#line 972 
    __retres = csum;
    
#line 972 
    goto return_label;
  }
  else ;
  
#line 973 
  if ((unsigned int)skb->protocol != 8U) {
    
#line 974 
    __retres = csum;
    
#line 974 
    goto return_label;
  }
  else ;
  
#line 975 
  skb_set_network_header(skb,14);
  
#line 976 
  tmp = ip_hdr((struct sk_buff const *)skb);
  
#line 976 
  ;
  
#line 976 
  if ((unsigned int)tmp->protocol != 17U) 
#line 976 
                                          goto _LOR;
  else {
    struct iphdr *tmp_0;
    
#line 978 
    tmp_0 = ip_hdr((struct sk_buff const *)skb);
    
#line 977 
    ;
    
#line 977 
    if ((unsigned long)skb->len < (unsigned long)(((int)tmp_0->ihl << 2) + 14) + 8UL) {
      _LOR: {
              
#line 980 
              skb_reset_network_header(skb);
              
#line 981 
              __retres = csum;
              
#line 981 
              goto return_label;
            }
    }
    else ;
  }
  
#line 984 
  tmp_1 = ip_hdr((struct sk_buff const *)skb);
  
#line 983 
  ;
  
#line 983 
  ;
  
#line 983 
  skb_set_transport_header(skb,((int)tmp_1->ihl << 2) + 14);
  
#line 985 
  tmp_2 = udp_hdr((struct sk_buff const *)skb);
  
#line 985 
  csum = tmp_2->check;
  
#line 986 
  skb_reset_transport_header(skb);
  
#line 987 
  skb_reset_network_header(skb);
  
#line 989 
  __retres = csum;
  return_label: 
#line 989 
                return __retres;
}


#line 993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_rxsum_ok(struct jme_adapter *jme, u16 flags, struct sk_buff *skb)
{
  int __retres;
  
#line 995 
  if (((int)flags & 6208) == 0) {
    
#line 996 
    __retres = 0;
    
#line 996 
    goto return_label;
  }
  else ;
  
#line 998 
  if ((long)(((int)flags & 12800) == 4096) != 0L) {
    
#line 1000 
    if (((int)flags & 64) != 0) {
      
#line 1001 
      if ((jme->msg_enable & 64U) != 0U) 
#line 1001 
                                         netdev_err((struct net_device const *)jme->dev,"TCP Checksum error\n"); else ;
    }
    else ;
    
#line 1002 
    __retres = 0;
    
#line 1002 
    goto return_label;
  }
  else ;
  
#line 1005 
  if ((long)(((int)flags & 10496) == 2048) != 0L) {
    u16 tmp;
    
#line 1006 
    tmp = jme_udpsum(skb);
    
#line 1006 
    if ((unsigned int)tmp != 0U) {
      
#line 1007 
      if (((int)flags & 64) != 0) {
        
#line 1008 
        if ((jme->msg_enable & 64U) != 0U) 
#line 1008 
                                           netdev_err((struct net_device const *)jme->dev,"UDP Checksum error\n"); else ;
      }
      else ;
      
#line 1009 
      __retres = 0;
      
#line 1009 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1012 
  if ((long)(((int)flags & 1088) == 64) != 0L) {
    
#line 1014 
    if ((jme->msg_enable & 64U) != 0U) 
#line 1014 
                                       netdev_err((struct net_device const *)jme->dev,"IPv4 Checksum error\n"); else ;
    
#line 1015 
    __retres = 0;
    
#line 1015 
    goto return_label;
  }
  else ;
  
#line 1018 
  __retres = 1;
  return_label: 
#line 1018 
                return __retres;
}


#line 1022  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_alloc_and_feed_skb(struct jme_adapter *jme, int idx)
{
  struct sk_buff *skb;
  int framesize;
  int tmp_0;
  
#line 1024 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 1025 
  struct rxdesc *rxdesc = (struct rxdesc *)rxring->desc;
  
#line 1026 
  struct jme_buffer_info *rxbi = rxring->bufinf;
  
#line 1030 
  rxdesc += idx;
  
#line 1031 
  rxbi += idx;
  
#line 1033 
  skb = rxbi->skb;
  
#line 1034 
  pci_dma_sync_single_for_cpu(jme->pdev,rxbi->mapping,(unsigned long)rxbi->len,2);
  
#line 1039 
  tmp_0 = jme_make_new_rx_buf(jme,idx);
  
#line 1039 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 1040 
    pci_dma_sync_single_for_device(jme->pdev,rxbi->mapping,(unsigned long)rxbi->len,2);
    
#line 1045 
    (jme->dev)->stats.rx_dropped += 1UL;
  }
  else {
    int tmp;
    
#line 1047 
    framesize = (int)rxdesc->__anonCompField_rxdesc_116.descwb.framesize + -10;
    
#line 1050 
    skb_reserve(skb,10);
    
#line 1051 
    skb_put(skb,(unsigned int)framesize);
    
#line 1052 
    skb->protocol = eth_type_trans(skb,jme->dev);
    
#line 1054 
    tmp = jme_rxsum_ok(jme,(unsigned short)((int)rxdesc->__anonCompField_rxdesc_116.descwb.flags),skb);
    
#line 1054 
    if (tmp != 0) 
#line 1055 
                  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else 
                                                                    
#line 1057 
                                                                    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 1059 
    if (((int)rxdesc->__anonCompField_rxdesc_116.descwb.flags & 128) != 0) {
      
#line 1060 
      u16 vid = rxdesc->__anonCompField_rxdesc_116.descwb.vlan;
      
#line 1062 
      __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vid));
      
#line 1063 
      (jme->dev)->stats.rx_bytes += 4UL;
    }
    else ;
    
#line 1065 
    (*(jme->jme_rx))(skb);
    
#line 1067 
    if (((int)rxdesc->__anonCompField_rxdesc_116.descwb.flags & 3) == 2) 
      
#line 1069 
      (jme->dev)->stats.multicast += 1UL; else ;
    
#line 1071 
    (jme->dev)->stats.rx_bytes += (unsigned long)framesize;
    
#line 1072 
    (jme->dev)->stats.rx_packets += 1UL;
  }
  
#line 1075 
  jme_set_clean_rxdesc(jme,idx);
  
#line 1076 
  return;
}


#line 1080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_process_receive(struct jme_adapter *jme, int limit)
{
  int i;
  int j;
  int ccnt;
  int desccnt;
  int tmp;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  int tmp_4;
  
#line 1082 
  struct jme_ring *rxring = & jme->rxring[0];
  
#line 1083 
  struct rxdesc *rxdesc = (struct rxdesc *)rxring->desc;
  
#line 1084 
  int mask = (int)jme->rx_ring_mask;
  
#line 1086 
  tmp = atomic_dec_and_test(& jme->rx_cleaning);
  
#line 1086 
  if ((long)(tmp == 0) != 0L) 
#line 1087 
                              goto out_inc; else ;
  
#line 1089 
  tmp_0 = atomic_read((atomic_t const *)(& jme->link_changing));
  
#line 1089 
  if ((long)(tmp_0 != 1) != 0L) 
#line 1090 
                                goto out_inc; else ;
  
#line 1092 
  tmp_1 = netif_carrier_ok((struct net_device const *)jme->dev);
  
#line 1092 
  if (tmp_1) 
#line 1092 
             tmp_2 = 0; else 
#line 1092 
                             tmp_2 = 1;
  
#line 1092 
  if ((long)tmp_2 != 0L) 
#line 1093 
                         goto out_inc; else ;
  
#line 1095 
  i = atomic_read((atomic_t const *)(& rxring->next_to_clean));
  
#line 1096 
  goto ldv_54526;
  ldv_54525: 
#line 1097 
  ;
  
#line 1097 
  rxdesc = (struct rxdesc *)rxring->desc;
  
#line 1098 
  rxdesc += i;
  
#line 1100 
  if ((int)rxdesc->__anonCompField_rxdesc_116.descwb.flags < 0 || (int)rxdesc->__anonCompField_rxdesc_116.descwb.desccnt >= 0) 
    
#line 1102 
    goto out; else ;
  
#line 1103 
  limit -= 1;
  
#line 1104 
  ldv_inline_asm();
  
#line 1106 
  desccnt = (int)rxdesc->__anonCompField_rxdesc_116.descwb.desccnt & 127;
  
#line 1108 
  if ((long)(desccnt > 1) != 0L || (long)((unsigned int)rxdesc->__anonCompField_rxdesc_116.descwb.errstat != 0U) != 0L) {
    int tmp_3;
    
#line 1111 
    if (((int)rxdesc->__anonCompField_rxdesc_116.descwb.errstat & 1) != 0) 
      
#line 1112 
      (jme->dev)->stats.rx_crc_errors += 1UL;
    else 
      
#line 1113 
      if (((int)rxdesc->__anonCompField_rxdesc_116.descwb.errstat & 2) != 0) 
        
#line 1114 
        (jme->dev)->stats.rx_fifo_errors += 1UL; else 
#line 1116 
                                                      (jme->dev)->stats.rx_errors += 1UL;
    
#line 1118 
    if (desccnt > 1) 
#line 1119 
                     limit -= desccnt + -1; else ;
    
#line 1121 
    j = i;
    
#line 1121 
    ccnt = desccnt;
    
#line 1121 
    goto ldv_54523;
    ldv_54522: 
#line 1122 
    ;
    
#line 1122 
    jme_set_clean_rxdesc(jme,j);
    
#line 1123 
    j = (j + 1) & mask;
    ldv_54523: 
#line 1124 
    ;
    
#line 1121 
    tmp_3 = ccnt;
    
#line 1121 
    ccnt -= 1;
    
#line 1121 
    ;
    
#line 1121 
    if (tmp_3 != 0) 
#line 1123 
                    goto ldv_54522; else 
#line 1126 
                                         goto ldv_54524;
    ldv_54524: 
#line 1127 
    ;
  }
  else 
#line 1127 
       jme_alloc_and_feed_skb(jme,i);
  
#line 1130 
  i = (i + desccnt) & mask;
  ldv_54526: 
#line 1131 
  ;
  
#line 1096 
  if (limit > 0) 
#line 1098 
                 goto ldv_54525; else 
#line 1101 
                                      goto ldv_54527;
  ldv_54527: 
#line 1102 
  ;
  out: 
#line 1133 
  ;
  
#line 1134 
  atomic_set(& rxring->next_to_clean,i);
  out_inc: 
#line 1136 
  ;
  
#line 1137 
  atomic_inc(& jme->rx_cleaning);
  
#line 1139 
  if (0 > limit) 
#line 1139 
                 tmp_4 = 0; else 
#line 1139 
                                 tmp_4 = limit;
  
#line 1139 
  return tmp_4;
}


#line 1144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_attempt_pcc(struct dynpcc_info *dpi, int atmp)
{
  
#line 1146 
  if ((long)((int)dpi->cur == atmp) != 0L) {
    
#line 1147 
    dpi->cnt = (unsigned char)0U;
    
#line 1148 
    goto return_label;
  }
  else ;
  
#line 1151 
  if ((int)dpi->attempt == atmp) 
#line 1152 
                                 dpi->cnt = (unsigned char)((int)dpi->cnt + 1);
  else {
    
#line 1154 
    dpi->attempt = (unsigned char)atmp;
    
#line 1155 
    dpi->cnt = (unsigned char)0U;
  }
  return_label: 
#line 1157 
                return;
}


#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_dynamic_pcc(struct jme_adapter *jme)
{
  
#line 1163 
  register struct dynpcc_info *dpi = & jme->dpi;
  
#line 1165 
  if ((jme->dev)->stats.rx_bytes - dpi->last_bytes > 2097152UL) 
#line 1166 
                                                                jme_attempt_pcc(dpi,3);
  else 
    
#line 1167 
    if ((jme->dev)->stats.rx_packets - dpi->last_pkts > 800UL || dpi->intr_cnt > 800UL) 
      
#line 1169 
      jme_attempt_pcc(dpi,2); else 
#line 1171 
                                   jme_attempt_pcc(dpi,1);
  
#line 1173 
  if ((long)((int)dpi->attempt != (int)dpi->cur) != 0L && (long)((unsigned int)dpi->cnt > 5U) != 0L) {
    
#line 1174 
    if ((int)dpi->attempt < (int)dpi->cur) 
#line 1175 
                                           ldv_tasklet_schedule_75(& jme->rxclean_task); else ;
    
#line 1176 
    jme_set_rx_pcc(jme,(int)dpi->attempt);
    
#line 1177 
    dpi->cur = dpi->attempt;
    
#line 1178 
    dpi->cnt = (unsigned char)0U;
  }
  else ;
  
#line 1180 
  return;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_start_pcc_timer(struct jme_adapter *jme)
{
  
#line 1185 
  struct dynpcc_info *dpi = & jme->dpi;
  
#line 1186 
  dpi->last_bytes = (jme->dev)->stats.rx_bytes;
  
#line 1187 
  dpi->last_pkts = (jme->dev)->stats.rx_packets;
  
#line 1188 
  dpi->intr_cnt = 0UL;
  
#line 1189 
  jwrite32(jme,2048U,33454431U);
  
#line 1190 
  return;
}


#line 1194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_stop_pcc_timer(struct jme_adapter *jme)
{
  
#line 1196 
  jwrite32(jme,2048U,0U);
  
#line 1197 
  return;
}


#line 1200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_shutdown_nic(struct jme_adapter *jme)
{
  u32 phylink;
  
#line 1204 
  phylink = jme_linkstat_from_phy(jme);
  
#line 1206 
  if ((phylink & 1024U) == 0U) {
    
#line 1210 
    jme_stop_irq(jme);
    
#line 1211 
    jwrite32(jme,2164U,33554430U);
  }
  else ;
  
#line 1213 
  return;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_pcc_tasklet(unsigned long arg)
{
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  
#line 1218 
  struct jme_adapter *jme = (struct jme_adapter *)arg;
  
#line 1219 
  struct net_device *netdev = jme->dev;
  
#line 1221 
  tmp = constant_test_bit(6L,(unsigned long const volatile *)(& jme->flags));
  
#line 1221 
  if ((long)(tmp != 0) != 0L) {
    
#line 1222 
    jme_shutdown_nic(jme);
    
#line 1223 
    goto return_label;
  }
  else ;
  
#line 1226 
  tmp_0 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 1226 
  if (tmp_0) 
#line 1226 
             tmp_1 = 0; else 
#line 1226 
                             tmp_1 = 1;
  
#line 1226 
  if ((long)tmp_1 != 0L) 
#line 1226 
                         goto _LOR;
  else {
    int tmp_2;
    
#line 1226 
    tmp_2 = atomic_read((atomic_t const *)(& jme->link_changing));
    
#line 1226 
    if ((long)(tmp_2 != 1) != 0L) {
      _LOR: {
              
#line 1229 
              jme_stop_pcc_timer(jme);
              
#line 1230 
              goto return_label;
            }
    }
    else ;
  }
  
#line 1233 
  tmp_3 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
  
#line 1233 
  if (tmp_3 == 0) 
#line 1234 
                  jme_dynamic_pcc(jme); else ;
  
#line 1236 
  jme_start_pcc_timer(jme);
  return_label: 
#line 1237 
                return;
}


#line 1240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_polling_mode(struct jme_adapter *jme)
{
  
#line 1242 
  jme_set_rx_pcc(jme,0);
  
#line 1243 
  return;
}


#line 1246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_interrupt_mode(struct jme_adapter *jme)
{
  
#line 1248 
  jme_set_rx_pcc(jme,1);
  
#line 1249 
  return;
}


#line 1252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static int jme_pseudo_hotplug_enabled(struct jme_adapter *jme)
{
  int __retres;
  u32 apmc;
  
#line 1255 
  apmc = jread32(jme,2172U);
  
#line 1256 
  __retres = (int)apmc & 536870912;
  
#line 1256 
  return __retres;
}


#line 1260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_start_shutdown_timer(struct jme_adapter *jme)
{
  u32 apmc;
  u32 tmp;
  
#line 1264 
  tmp = jread32(jme,2172U);
  
#line 1264 
  apmc = tmp | 1073741824U;
  
#line 1265 
  apmc &= 4244635647U;
  
#line 1266 
  if (no_extplug == 0) {
    
#line 1267 
    jwrite32f(jme,2172U,apmc | 33554432U);
    
#line 1268 
    ldv_inline_asm();
  }
  else ;
  
#line 1270 
  jwrite32f(jme,2172U,apmc);
  
#line 1272 
  jwrite32f(jme,2164U,0U);
  
#line 1273 
  set_bit(6L,(unsigned long volatile *)(& jme->flags));
  
#line 1274 
  jwrite32(jme,2048U,23554431U);
  
#line 1275 
  return;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_stop_shutdown_timer(struct jme_adapter *jme)
{
  u32 apmc;
  
#line 1283 
  jwrite32f(jme,2048U,0U);
  
#line 1284 
  jwrite32f(jme,2164U,0U);
  
#line 1285 
  set_bit(6L,(unsigned long volatile *)(& jme->flags));
  
#line 1287 
  apmc = jread32(jme,2172U);
  
#line 1288 
  apmc &= 3170893823U;
  
#line 1289 
  jwrite32f(jme,2172U,apmc | 16777216U);
  
#line 1290 
  ldv_inline_asm();
  
#line 1291 
  jwrite32f(jme,2172U,apmc);
  
#line 1292 
  return;
}


#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_link_change_tasklet(unsigned long arg)
{
  int rc;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  bool tmp_4;
  bool tmp_7;
  
#line 1297 
  struct jme_adapter *jme = (struct jme_adapter *)arg;
  
#line 1298 
  struct net_device *netdev = jme->dev;
  
#line 1301 
  goto ldv_54580;
  ldv_54579: 
#line 1302 
  ;
  
#line 1302 
  atomic_inc(& jme->link_changing);
  
#line 1303 
  if ((jme->msg_enable & 512U) != 0U) 
#line 1303 
                                      netdev_info((struct net_device const *)jme->dev,"Get link change lock failed\n"); else ;
  
#line 1304 
  goto ldv_54577;
  ldv_54576: 
#line 1305 
  ;
  
#line 1305 
  if ((jme->msg_enable & 512U) != 0U) 
#line 1305 
                                      netdev_info((struct net_device const *)jme->dev,"Waiting link change lock\n"); else ;
  ldv_54577: 
#line 1306 
  ;
  
#line 1304 
  tmp = atomic_read((atomic_t const *)(& jme->link_changing));
  
#line 1304 
  if (tmp != 1) 
#line 1306 
                goto ldv_54576; else 
#line 1309 
                                     goto ldv_54578;
  ldv_54578: 
#line 1310 
  ;
  ldv_54580: 
#line 1311 
  ;
  
#line 1301 
  tmp_0 = atomic_dec_and_test(& jme->link_changing);
  
#line 1301 
  if (tmp_0 == 0) 
#line 1303 
                  goto ldv_54579; else 
#line 1306 
                                       goto ldv_54581;
  ldv_54581: 
#line 1307 
  ;
  
#line 1308 
  tmp_1 = jme_check_link(netdev,1);
  
#line 1308 
  if (tmp_1 != 0) {
    
#line 1308 
    if (jme->old_mtu == netdev->mtu) 
#line 1309 
                                     goto out; else ;
  }
  else ;
  
#line 1311 
  jme->old_mtu = netdev->mtu;
  
#line 1312 
  netif_start_queue(netdev);
  
#line 1313 
  tmp_2 = jme_pseudo_hotplug_enabled(jme);
  
#line 1313 
  if (tmp_2 != 0) 
#line 1314 
                  jme_stop_shutdown_timer(jme); else ;
  
#line 1316 
  jme_stop_pcc_timer(jme);
  
#line 1317 
  tasklet_disable(& jme->txclean_task);
  
#line 1318 
  tasklet_disable(& jme->rxclean_task);
  
#line 1319 
  tasklet_disable(& jme->rxempty_task);
  
#line 1321 
  tmp_4 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 1321 
  if ((int)tmp_4 != 0) {
    int tmp_3;
    
#line 1322 
    jme_disable_rx_engine(jme);
    
#line 1323 
    jme_disable_tx_engine(jme);
    
#line 1324 
    jme_reset_mac_processor(jme);
    
#line 1325 
    jme_free_rx_resources(jme);
    
#line 1326 
    jme_free_tx_resources(jme);
    
#line 1328 
    tmp_3 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
    
#line 1328 
    if (tmp_3 != 0) 
#line 1329 
                    jme_polling_mode(jme); else ;
    
#line 1331 
    netif_carrier_off(netdev);
  }
  else ;
  
#line 1334 
  jme_check_link(netdev,0);
  
#line 1335 
  tmp_7 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 1335 
  if ((int)tmp_7 != 0) {
    int tmp_5;
    
#line 1336 
    rc = jme_setup_rx_resources(jme);
    
#line 1337 
    if (rc != 0) {
      
#line 1338 
      printk("\001");
      
#line 1339 
      goto out_enable_tasklet;
    }
    else ;
    
#line 1342 
    rc = jme_setup_tx_resources(jme);
    
#line 1343 
    if (rc != 0) {
      
#line 1344 
      printk("\001");
      
#line 1345 
      goto err_out_free_rx_resources;
    }
    else ;
    
#line 1348 
    jme_enable_rx_engine(jme);
    
#line 1349 
    jme_enable_tx_engine(jme);
    
#line 1351 
    netif_start_queue(netdev);
    
#line 1353 
    tmp_5 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
    
#line 1353 
    if (tmp_5 != 0) 
#line 1354 
                    jme_interrupt_mode(jme); else ;
    
#line 1356 
    jme_start_pcc_timer(jme);
  }
  else {
    int tmp_6;
    
#line 1357 
    tmp_6 = jme_pseudo_hotplug_enabled(jme);
    
#line 1357 
    if (tmp_6 != 0) 
#line 1358 
                    jme_start_shutdown_timer(jme); else ;
  }
  
#line 1361 
  goto out_enable_tasklet;
  err_out_free_rx_resources: 
#line 1363 
  ;
  
#line 1364 
  jme_free_rx_resources(jme);
  out_enable_tasklet: 
#line 1365 
  ;
  
#line 1366 
  tasklet_enable(& jme->txclean_task);
  
#line 1367 
  tasklet_enable(& jme->rxclean_task);
  
#line 1368 
  tasklet_enable(& jme->rxempty_task);
  out: 
#line 1369 
  ;
  
#line 1370 
  atomic_inc(& jme->link_changing);
  
#line 1371 
  return;
}


#line 1374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_rx_clean_tasklet(unsigned long arg)
{
  
#line 1376 
  struct jme_adapter *jme = (struct jme_adapter *)arg;
  
#line 1377 
  struct dynpcc_info *dpi = & jme->dpi;
  
#line 1379 
  jme_process_receive(jme,(int)jme->rx_ring_size);
  
#line 1380 
  dpi->intr_cnt += 1UL;
  
#line 1381 
  return;
}


#line 1385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_poll(struct napi_struct *holder, int budget)
{
  int __retres;
  int rest;
  int tmp_0;
  
#line 1387 
  struct jme_adapter *jme = jme_napi_priv(holder);
  
#line 1390 
  rest = jme_process_receive(jme,budget);
  
#line 1392 
  goto ldv_54597;
  ldv_54596: 
#line 1393 
  ;
  
#line 1393 
  atomic_dec(& jme->rx_empty);
  
#line 1394 
  (jme->dev)->stats.rx_dropped += 1UL;
  
#line 1395 
  jme_restart_rx_engine(jme);
  ldv_54597: 
#line 1396 
  ;
  
#line 1392 
  tmp_0 = atomic_read((atomic_t const *)(& jme->rx_empty));
  
#line 1392 
  if (tmp_0 > 0) 
#line 1394 
                 goto ldv_54596; else 
#line 1397 
                                      goto ldv_54598;
  ldv_54598: 
#line 1398 
  ;
  
#line 1397 
  atomic_inc(& jme->rx_empty);
  
#line 1399 
  if (rest != 0) {
    
#line 1400 
    napi_complete(holder);
    
#line 1401 
    jme_interrupt_mode(jme);
  }
  else ;
  
#line 1405 
  __retres = budget - rest;
  
#line 1405 
  return __retres;
}


#line 1409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_rx_empty_tasklet(unsigned long arg)
{
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 1411 
  struct jme_adapter *jme = (struct jme_adapter *)arg;
  
#line 1413 
  tmp = atomic_read((atomic_t const *)(& jme->link_changing));
  
#line 1413 
  if ((long)(tmp != 1) != 0L) 
#line 1414 
                              goto return_label; else ;
  
#line 1416 
  tmp_0 = netif_carrier_ok((struct net_device const *)jme->dev);
  
#line 1416 
  if (tmp_0) 
#line 1416 
             tmp_1 = 0; else 
#line 1416 
                             tmp_1 = 1;
  
#line 1416 
  if ((long)tmp_1 != 0L) 
#line 1417 
                         goto return_label; else ;
  
#line 1419 
  if ((jme->msg_enable & 2048U) != 0U) 
#line 1419 
                                       netdev_info((struct net_device const *)jme->dev,"RX Queue Full!\n"); else ;
  
#line 1421 
  jme_rx_clean_tasklet(arg);
  
#line 1423 
  goto ldv_54604;
  ldv_54603: 
#line 1424 
  ;
  
#line 1424 
  atomic_dec(& jme->rx_empty);
  
#line 1425 
  (jme->dev)->stats.rx_dropped += 1UL;
  
#line 1426 
  jme_restart_rx_engine(jme);
  ldv_54604: 
#line 1427 
  ;
  
#line 1423 
  tmp_2 = atomic_read((atomic_t const *)(& jme->rx_empty));
  
#line 1423 
  if (tmp_2 > 0) 
#line 1425 
                 goto ldv_54603; else 
#line 1428 
                                      goto ldv_54605;
  ldv_54605: 
#line 1429 
  ;
  
#line 1428 
  atomic_inc(& jme->rx_empty);
  return_label: 
#line 1429 
                return;
}


#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_wake_queue_if_stopped(struct jme_adapter *jme)
{
  bool tmp;
  
#line 1434 
  struct jme_ring *txring = & jme->txring[0];
  
#line 1435 
  ldv_inline_asm();
  
#line 1437 
  tmp = netif_queue_stopped((struct net_device const *)jme->dev);
  
#line 1437 
  if ((long)((int)tmp != 0) != 0L) {
    int tmp_0;
    
#line 1437 
    tmp_0 = atomic_read((atomic_t const *)(& txring->nr_free));
    
#line 1437 
    ;
    
#line 1437 
    if ((long)((unsigned int)tmp_0 >= jme->tx_wake_threshold) != 0L) {
      
#line 1439 
      if ((jme->msg_enable & 1024U) != 0U) 
#line 1439 
                                           netdev_info((struct net_device const *)jme->dev,"TX Queue Waked\n"); else ;
      
#line 1440 
      netif_wake_queue(jme->dev);
    }
    else ;
  }
  else ;
  
#line 1442 
  return;
}


#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_tx_clean_tasklet(unsigned long arg)
{
  struct jme_buffer_info *ctxbi;
  struct jme_buffer_info *ttxbi;
  int i;
  int j;
  int max;
  int err;
  int mask;
  int tmp;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  int tmp_3;
  
#line 1448 
  struct jme_adapter *jme = (struct jme_adapter *)arg;
  
#line 1449 
  struct jme_ring *txring = & jme->txring[0];
  
#line 1450 
  struct txdesc *txdesc = (struct txdesc *)txring->desc;
  
#line 1451 
  struct jme_buffer_info *txbi = txring->bufinf;
  
#line 1452 
  int cnt = 0;
  
#line 1456 
  tmp = atomic_dec_and_test(& jme->tx_cleaning);
  
#line 1456 
  if ((long)(tmp == 0) != 0L) 
#line 1457 
                              goto out; else ;
  
#line 1459 
  tmp_0 = atomic_read((atomic_t const *)(& jme->link_changing));
  
#line 1459 
  if ((long)(tmp_0 != 1) != 0L) 
#line 1460 
                                goto out; else ;
  
#line 1462 
  tmp_1 = netif_carrier_ok((struct net_device const *)jme->dev);
  
#line 1462 
  if (tmp_1) 
#line 1462 
             tmp_2 = 0; else 
#line 1462 
                             tmp_2 = 1;
  
#line 1462 
  if ((long)tmp_2 != 0L) 
#line 1463 
                         goto out; else ;
  
#line 1465 
  tmp_3 = atomic_read((atomic_t const *)(& txring->nr_free));
  
#line 1465 
  max = (int)(jme->tx_ring_size - (unsigned int)tmp_3);
  
#line 1466 
  mask = (int)jme->tx_ring_mask;
  
#line 1468 
  i = atomic_read((atomic_t const *)(& txring->next_to_clean));
  
#line 1468 
  goto ldv_54631;
  ldv_54630: 
#line 1469 
  ;
  
#line 1470 
  ctxbi = txbi + i;
  
#line 1472 
  if ((long)(ctxbi->skb != (struct sk_buff *)0) != 0L && (long)((int)(txdesc + i)->__anonCompField_txdesc_115.descwb.flags >= 0) != 0L) {
    
#line 1478 
    err = (int)(txdesc + i)->__anonCompField_txdesc_115.descwb.flags & 56;
    
#line 1480 
    j = 1;
    
#line 1480 
    goto ldv_54627;
    ldv_54626: 
#line 1481 
    ;
    
#line 1481 
    ttxbi = txbi + ((i + j) & mask);
    
#line 1482 
    (txdesc + ((i + j) & mask))->__anonCompField_txdesc_115.dw[0] = 0U;
    
#line 1484 
    pci_unmap_page(jme->pdev,ttxbi->mapping,(unsigned long)ttxbi->len,1);
    
#line 1489 
    ttxbi->mapping = 0ULL;
    
#line 1490 
    ttxbi->len = 0;
    
#line 1480 
    j += 1;
    ldv_54627: 
#line 1481 
    ;
    
#line 1480 
    if (ctxbi->nr_desc > j) 
#line 1482 
                            goto ldv_54626; else 
#line 1485 
                                                 goto ldv_54628;
    ldv_54628: 
#line 1486 
    ;
    
#line 1493 
    consume_skb(ctxbi->skb);
    
#line 1495 
    cnt = ctxbi->nr_desc + cnt;
    
#line 1497 
    if ((long)(err != 0) != 0L) 
#line 1498 
                                (jme->dev)->stats.tx_carrier_errors += 1UL;
    else {
      
#line 1500 
      (jme->dev)->stats.tx_packets += 1UL;
      
#line 1501 
      (jme->dev)->stats.tx_bytes += (unsigned long)ctxbi->len;
    }
    
#line 1504 
    ctxbi->skb = (struct sk_buff *)0;
    
#line 1505 
    ctxbi->len = 0;
    
#line 1506 
    ctxbi->start_xmit = 0UL;
  }
  else 
#line 1509 
       goto ldv_54629;
  
#line 1512 
  i = (ctxbi->nr_desc + i) & mask;
  
#line 1514 
  ctxbi->nr_desc = 0;
  ldv_54631: 
#line 1515 
  ;
  
#line 1468 
  if (cnt < max) 
#line 1470 
                 goto ldv_54630; else 
#line 1473 
                                      goto ldv_54629;
  ldv_54629: 
#line 1474 
  ;
  
#line 1518 
  atomic_set(& txring->next_to_clean,i);
  
#line 1519 
  atomic_add(cnt,& txring->nr_free);
  
#line 1521 
  jme_wake_queue_if_stopped(jme);
  out: 
#line 1523 
  ;
  
#line 1524 
  atomic_inc(& jme->tx_cleaning);
  
#line 1525 
  return;
}


#line 1528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_intr_msi(struct jme_adapter *jme, u32 intrstat)
{
  int tmp_0;
  
#line 1533 
  jwrite32f(jme,2092U,INTR_ENABLE);
  
#line 1535 
  if ((intrstat & 2684354560U) != 0U) {
    
#line 1540 
    jwrite32(jme,2080U,intrstat);
    
#line 1541 
    ldv_tasklet_schedule_76(& jme->linkch_task);
    
#line 1542 
    goto out_reenable;
  }
  else ;
  
#line 1545 
  if ((intrstat & 1073741824U) != 0U) {
    
#line 1546 
    jwrite32(jme,2080U,1073741824U);
    
#line 1547 
    ldv_tasklet_schedule_77(& jme->pcc_task);
  }
  else ;
  
#line 1550 
  if ((intrstat & 2162688U) != 0U) {
    
#line 1551 
    jwrite32(jme,2080U,2162689U);
    
#line 1552 
    ldv_tasklet_schedule_78(& jme->txclean_task);
  }
  else ;
  
#line 1555 
  if ((intrstat & 34607104U) != 0U) 
#line 1556 
                                    jwrite32(jme,2080U,(intrstat & 34607104U) | 256U); else ;
  
#line 1562 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
  
#line 1562 
  if (tmp_0 != 0) {
    
#line 1563 
    if ((intrstat & 4096U) != 0U) 
#line 1564 
                                  atomic_inc(& jme->rx_empty); else ;
    
#line 1566 
    if ((intrstat & 34607104U) != 0U) {
      bool tmp;
      
#line 1567 
      tmp = napi_schedule_prep(& jme->napi);
      
#line 1567 
      if ((long)((int)tmp != 0) != 0L) {
        
#line 1568 
        jme_polling_mode(jme);
        
#line 1569 
        __napi_schedule(& jme->napi);
      }
      else ;
    }
    else ;
  }
  else 
    
#line 1573 
    if ((intrstat & 4096U) != 0U) {
      
#line 1574 
      atomic_inc(& jme->rx_empty);
      
#line 1575 
      ldv_tasklet_hi_schedule_79(& jme->rxempty_task);
    }
    else 
      
#line 1576 
      if ((intrstat & 34603008U) != 0U) 
#line 1577 
                                        ldv_tasklet_hi_schedule_80(& jme->rxclean_task); else ;
  out_reenable: 
#line 1581 
  ;
  
#line 1585 
  jwrite32f(jme,2088U,INTR_ENABLE);
  
#line 1586 
  return;
}


#line 1589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static irqreturn_t jme_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 intrstat;
  
#line 1591 
  struct net_device *netdev = (struct net_device *)dev_id;
  
#line 1592 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 1595 
  intrstat = jread32(jme,2080U);
  
#line 1600 
  if ((long)((intrstat & 3794866176U) == 0U) != 0L) {
    
#line 1601 
    __retres = IRQ_NONE;
    
#line 1601 
    goto return_label;
  }
  else ;
  
#line 1606 
  if ((long)(intrstat == 4294967295U) != 0L) {
    
#line 1607 
    __retres = IRQ_NONE;
    
#line 1607 
    goto return_label;
  }
  else ;
  
#line 1609 
  jme_intr_msi(jme,intrstat);
  
#line 1611 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1611 
                return __retres;
}


#line 1615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static irqreturn_t jme_msi(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 intrstat;
  
#line 1617 
  struct net_device *netdev = (struct net_device *)dev_id;
  
#line 1618 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 1621 
  intrstat = jread32(jme,2080U);
  
#line 1623 
  jme_intr_msi(jme,intrstat);
  
#line 1625 
  __retres = IRQ_HANDLED;
  
#line 1625 
  return __retres;
}


#line 1629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_reset_link(struct jme_adapter *jme)
{
  
#line 1631 
  jwrite32(jme,2048U,2147483648U);
  
#line 1632 
  return;
}


#line 1635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_restart_an(struct jme_adapter *jme)
{
  u32 bmcr;
  int tmp;
  
#line 1639 
  ldv_spin_lock_bh_81(& jme->phy_lock);
  
#line 1640 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
  
#line 1640 
  bmcr = (unsigned int)tmp;
  
#line 1641 
  bmcr |= 4608U;
  
#line 1642 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,0,(int)bmcr);
  
#line 1643 
  ldv_spin_unlock_bh_82(& jme->phy_lock);
  
#line 1644 
  return;
}


#line 1647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_request_irq(struct jme_adapter *jme)
{
  int rc;
  int tmp;
  
#line 1650 
  struct net_device *netdev = jme->dev;
  
#line 1651 
  irqreturn_t (*handler)(int , void *) = & jme_intr;
  
#line 1652 
  int irq_flags = 128;
  
#line 1654 
  tmp = pci_enable_msi_exact(jme->pdev,1);
  
#line 1654 
  if (tmp == 0) {
    
#line 1655 
    set_bit(1L,(unsigned long volatile *)(& jme->flags));
    
#line 1656 
    handler = & jme_msi;
    
#line 1657 
    irq_flags = 0;
  }
  else ;
  
#line 1660 
  rc = ldv_request_irq_83((jme->pdev)->irq,handler,(unsigned long)irq_flags,(char const *)(& netdev->name),(void *)netdev);
  
#line 1662 
  if (rc != 0) {
    char *tmp_1;
    int tmp_0;
    int tmp_2;
    
#line 1663 
    ;
    
#line 1664 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& jme->flags));
    
#line 1664 
    if (tmp_0 != 0) 
#line 1664 
                    tmp_1 = (char *)"MSI"; else 
#line 1664 
                                                tmp_1 = (char *)"INTx";
    
#line 1663 
    ;
    
#line 1663 
    netdev_err((struct net_device const *)netdev,"Unable to request %s interrupt (return: %d)\n",tmp_1,rc);
    
#line 1668 
    tmp_2 = constant_test_bit(1L,(unsigned long const volatile *)(& jme->flags));
    
#line 1668 
    if (tmp_2 != 0) {
      
#line 1669 
      pci_disable_msi(jme->pdev);
      
#line 1670 
      set_bit(1L,(unsigned long volatile *)(& jme->flags));
    }
    else ;
  }
  else 
#line 1673 
       netdev->irq = (int)(jme->pdev)->irq;
  
#line 1676 
  return rc;
}


#line 1680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_free_irq(struct jme_adapter *jme)
{
  int tmp;
  
#line 1682 
  ldv_free_irq_84((jme->pdev)->irq,(void *)jme->dev);
  
#line 1683 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& jme->flags));
  
#line 1683 
  if (tmp != 0) {
    
#line 1684 
    pci_disable_msi(jme->pdev);
    
#line 1685 
    set_bit(1L,(unsigned long volatile *)(& jme->flags));
    
#line 1686 
    (jme->dev)->irq = (int)(jme->pdev)->irq;
  }
  else ;
  
#line 1688 
  return;
}


#line 1691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_new_phy_on(struct jme_adapter *jme)
{
  u32 reg;
  
#line 1695 
  reg = jread32(jme,1060U);
  
#line 1696 
  reg &= 4043309055U;
  
#line 1698 
  jwrite32(jme,1060U,reg);
  
#line 1700 
  pci_read_config_dword((struct pci_dev const *)jme->pdev,228,& reg);
  
#line 1701 
  reg &= 4294918143U;
  
#line 1702 
  reg = reg;
  
#line 1703 
  pci_write_config_dword((struct pci_dev const *)jme->pdev,228,reg);
  
#line 1704 
  return;
}


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_new_phy_off(struct jme_adapter *jme)
{
  u32 reg;
  
#line 1711 
  reg = jread32(jme,1060U);
  
#line 1712 
  reg |= 251658240U;
  
#line 1714 
  jwrite32(jme,1060U,reg);
  
#line 1716 
  pci_read_config_dword((struct pci_dev const *)jme->pdev,228,& reg);
  
#line 1717 
  reg &= 4294918143U;
  
#line 1718 
  reg |= 16384U;
  
#line 1719 
  pci_write_config_dword((struct pci_dev const *)jme->pdev,228,reg);
  
#line 1720 
  return;
}


#line 1723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_phy_on(struct jme_adapter *jme)
{
  u32 bmcr;
  int tmp;
  int tmp_0;
  
#line 1727 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
  
#line 1727 
  bmcr = (unsigned int)tmp;
  
#line 1728 
  bmcr &= 4294965247U;
  
#line 1729 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,0,(int)bmcr);
  
#line 1731 
  tmp_0 = new_phy_power_ctrl((unsigned char)((int)jme->chip_main_rev));
  
#line 1731 
  if (tmp_0 != 0) 
#line 1732 
                  jme_new_phy_on(jme); else ;
  
#line 1733 
  return;
}


#line 1736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_phy_off(struct jme_adapter *jme)
{
  u32 bmcr;
  int tmp;
  int tmp_0;
  
#line 1740 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
  
#line 1740 
  bmcr = (unsigned int)tmp;
  
#line 1741 
  bmcr |= 2048U;
  
#line 1742 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,0,(int)bmcr);
  
#line 1744 
  tmp_0 = new_phy_power_ctrl((unsigned char)((int)jme->chip_main_rev));
  
#line 1744 
  if (tmp_0 != 0) 
#line 1745 
                  jme_new_phy_off(jme); else ;
  
#line 1746 
  return;
}


#line 1749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_phy_specreg_read(struct jme_adapter *jme, u32 specreg)
{
  u32 phy_addr;
  int tmp;
  
#line 1753 
  phy_addr = specreg | 16384U;
  
#line 1754 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,30,(int)phy_addr);
  
#line 1756 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,31);
  
#line 1756 
  return tmp;
}


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_phy_specreg_write(struct jme_adapter *jme, u32 ext_reg, u32 phy_data)
{
  u32 phy_addr;
  
#line 1765 
  phy_addr = ext_reg | 32768U;
  
#line 1766 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,31,(int)phy_data);
  
#line 1768 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,30,(int)phy_addr);
  
#line 1769 
  return;
}


#line 1773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_phy_calibration(struct jme_adapter *jme)
{
  int __retres;
  u32 ctrl1000;
  u32 phy_data;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 1777 
  jme_phy_off(jme);
  
#line 1778 
  jme_phy_on(jme);
  
#line 1780 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,9);
  
#line 1780 
  ctrl1000 = (unsigned int)tmp;
  
#line 1781 
  ctrl1000 &= 4294909951U;
  
#line 1782 
  ctrl1000 |= 8192U;
  
#line 1783 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,9,(int)ctrl1000);
  
#line 1785 
  tmp_0 = jme_phy_specreg_read(jme,50U);
  
#line 1785 
  phy_data = (unsigned int)tmp_0;
  
#line 1786 
  phy_data &= 4294967293U;
  
#line 1787 
  phy_data |= 17U;
  
#line 1789 
  jme_phy_specreg_write(jme,50U,phy_data);
  
#line 1790 
  msleep(20U);
  
#line 1791 
  tmp_1 = jme_phy_specreg_read(jme,50U);
  
#line 1791 
  phy_data = (unsigned int)tmp_1;
  
#line 1792 
  phy_data &= 4294967276U;
  
#line 1795 
  jme_phy_specreg_write(jme,50U,phy_data);
  
#line 1798 
  tmp_2 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,9);
  
#line 1798 
  ctrl1000 = (unsigned int)tmp_2;
  
#line 1799 
  ctrl1000 &= 4294909951U;
  
#line 1800 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,9,(int)ctrl1000);
  
#line 1801 
  __retres = 0;
  
#line 1801 
  return __retres;
}


#line 1805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_phy_setEA(struct jme_adapter *jme)
{
  int __retres;
  u8 nic_ctrl;
  
#line 1807 
  u32 phy_comm0 = 0U;
  
#line 1807 
  u32 phy_comm1 = 0U;
  
#line 1810 
  pci_read_config_byte((struct pci_dev const *)jme->pdev,245,& nic_ctrl);
  
#line 1811 
  if (((int)nic_ctrl & 3) == 2) {
    
#line 1812 
    __retres = 0;
    
#line 1812 
    goto return_label;
  }
  else ;
  
#line 1814 
  switch ((int)(jme->pdev)->device) {
    case 592: 
#line 1815 
    ;
    
#line 1816 
    if (((unsigned int)jme->chip_main_rev == 5U && ((unsigned int)jme->chip_sub_rev <= 1U || (unsigned int)jme->chip_sub_rev == 3U)) || (unsigned int)jme->chip_main_rev > 5U) {
      
#line 1820 
      phy_comm0 = 138U;
      
#line 1821 
      phy_comm1 = 16649U;
    }
    else ;
    
#line 1823 
    if ((unsigned int)jme->chip_main_rev == 3U && (unsigned int)jme->chip_sub_rev + 255U <= 1U) 
      
#line 1825 
      phy_comm0 = 57480U; else ;
    
#line 1826 
    goto ldv_54707;
    case 608: 
#line 1827 
    ;
    
#line 1828 
    if (((unsigned int)jme->chip_main_rev == 5U && ((unsigned int)jme->chip_sub_rev <= 1U || (unsigned int)jme->chip_sub_rev == 3U)) || (unsigned int)jme->chip_main_rev > 5U) {
      
#line 1832 
      phy_comm0 = 138U;
      
#line 1833 
      phy_comm1 = 16649U;
    }
    else ;
    
#line 1835 
    if ((unsigned int)jme->chip_main_rev == 3U && (unsigned int)jme->chip_sub_rev + 255U <= 1U) 
      
#line 1837 
      phy_comm0 = 57480U; else ;
    
#line 1838 
    if ((unsigned int)jme->chip_main_rev == 2U && (unsigned int)jme->chip_sub_rev == 0U) 
      
#line 1839 
      phy_comm0 = 24714U; else ;
    
#line 1840 
    if ((unsigned int)jme->chip_main_rev == 2U && (unsigned int)jme->chip_sub_rev == 2U) 
      
#line 1841 
      phy_comm0 = 16522U; else ;
    
#line 1842 
    goto ldv_54707;
    default: 
#line 1843 
    ;
    
#line 1844 
    __retres = -19;
    
#line 1844 
    goto return_label;
  }
  ldv_54707: 
#line 1846 
  ;
  
#line 1846 
  if (phy_comm0 != 0U) 
#line 1847 
                       jme_phy_specreg_write(jme,48U,phy_comm0); else ;
  
#line 1848 
  if (phy_comm1 != 0U) 
#line 1849 
                       jme_phy_specreg_write(jme,49U,phy_comm1); else ;
  
#line 1851 
  __retres = 0;
  return_label: 
#line 1851 
                return __retres;
}


#line 1855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_open(struct net_device *netdev)
{
  int __retres;
  int rc;
  int tmp_0;
  
#line 1857 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 1860 
  jme_clear_pm(jme);
  
#line 1861 
  napi_enable(& jme->napi);
  
#line 1863 
  ldv_tasklet_init_85(& jme->linkch_task,& jme_link_change_tasklet,(unsigned long)jme);
  
#line 1865 
  ldv_tasklet_init_86(& jme->txclean_task,& jme_tx_clean_tasklet,(unsigned long)jme);
  
#line 1867 
  ldv_tasklet_init_87(& jme->rxclean_task,& jme_rx_clean_tasklet,(unsigned long)jme);
  
#line 1869 
  ldv_tasklet_init_88(& jme->rxempty_task,& jme_rx_empty_tasklet,(unsigned long)jme);
  
#line 1872 
  rc = jme_request_irq(jme);
  
#line 1873 
  if (rc != 0) 
#line 1874 
               goto err_out; else ;
  
#line 1876 
  jme_start_irq(jme);
  
#line 1878 
  jme_phy_on(jme);
  
#line 1879 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& jme->flags));
  
#line 1879 
  if (tmp_0 != 0) 
#line 1880 
                  jme_set_settings(netdev,& jme->old_ecmd); else 
#line 1882 
                                                                 jme_reset_phy_processor(jme);
  
#line 1883 
  jme_phy_calibration(jme);
  
#line 1884 
  jme_phy_setEA(jme);
  
#line 1885 
  jme_reset_link(jme);
  
#line 1887 
  __retres = 0;
  
#line 1887 
  goto return_label;
  err_out: 
#line 1889 
  ;
  
#line 1890 
  netif_start_queue(netdev);
  
#line 1891 
  netif_carrier_off(netdev);
  
#line 1892 
  __retres = rc;
  return_label: 
#line 1892 
                return __retres;
}


#line 1896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_set_100m_half(struct jme_adapter *jme)
{
  u32 bmcr;
  u32 tmp;
  int tmp_0;
  
#line 1900 
  jme_phy_on(jme);
  
#line 1901 
  tmp_0 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,0);
  
#line 1901 
  bmcr = (unsigned int)tmp_0;
  
#line 1902 
  tmp = bmcr & 4294954687U;
  
#line 1904 
  tmp |= 8192U;
  
#line 1906 
  if (bmcr != tmp) 
#line 1907 
                   jme_mdio_write(jme->dev,jme->mii_if.phy_id,0,(int)tmp); else ;
  
#line 1909 
  if (jme->fpgaver != 0U) 
#line 1910 
                          jwrite32(jme,84U,33U); else 
#line 1912 
                                                      jwrite32(jme,84U,32U);
  
#line 1913 
  return;
}


#line 1917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_wait_link(struct jme_adapter *jme)
{
  u32 phylink;
  
#line 1919 
  u32 to = 2000U;
  {
    
#line 1921 
    unsigned long __ms = 1000UL;
    {
      unsigned long tmp;
      
#line 1921 
      goto ldv_54728;
      ldv_54727: 
#line 1922 
      ;
      
#line 1921 
      __const_udelay(4295000UL);
      ldv_54728: 
#line 1923 
      ;
      
#line 1921 
      tmp = __ms;
      
#line 1921 
      __ms -= 1UL;
      
#line 1921 
      ;
      
#line 1921 
      if (tmp != 0UL) 
#line 1923 
                      goto ldv_54727; else 
#line 1926 
                                           goto ldv_54729;
      ldv_54729: 
#line 1927 
      ;
    }
  }
  
#line 1922 
  phylink = jme_linkstat_from_phy(jme);
  
#line 1923 
  goto ldv_54735;
  ldv_54734: 
#line 1924 
  ;
  {
    
#line 1924 
    unsigned long __ms_0 = 10UL;
    {
      unsigned long tmp_0;
      
#line 1924 
      goto ldv_54732;
      ldv_54731: 
#line 1925 
      ;
      
#line 1924 
      __const_udelay(4295000UL);
      ldv_54732: 
#line 1926 
      ;
      
#line 1924 
      tmp_0 = __ms_0;
      
#line 1924 
      __ms_0 -= 1UL;
      
#line 1924 
      ;
      
#line 1924 
      if (tmp_0 != 0UL) 
#line 1926 
                        goto ldv_54731; else 
#line 1929 
                                             goto ldv_54733;
      ldv_54733: 
#line 1930 
      ;
    }
  }
  
#line 1925 
  phylink = jme_linkstat_from_phy(jme);
  ldv_54735: 
#line 1926 
  ;
  
#line 1923 
  if ((phylink & 1024U) == 0U) {
    
#line 1923 
    to += 4294967286U;
    
#line 1923 
    if (to != 0U) 
#line 1925 
                  goto ldv_54734; else 
#line 1928 
                                       goto ldv_54736;
  }
  else 
#line 1928 
       goto ldv_54736;
  ldv_54736: 
#line 1929 
  ;
  
#line 1930 
  return;
}


#line 1930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_powersave_phy(struct jme_adapter *jme)
{
  
#line 1932 
  if (jme->reg_pmcs != 0U) {
    
#line 1933 
    jme_set_100m_half(jme);
    
#line 1934 
    if ((jme->reg_pmcs & 6U) != 0U) 
#line 1935 
                                    jme_wait_link(jme); else ;
    
#line 1936 
    jme_clear_pm(jme);
  }
  else 
#line 1938 
       jme_phy_off(jme);
  
#line 1939 
  return;
}


#line 1943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_close(struct net_device *netdev)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1945 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 1947 
  netif_start_queue(netdev);
  
#line 1948 
  netif_carrier_off(netdev);
  
#line 1950 
  jme_stop_irq(jme);
  
#line 1951 
  jme_free_irq(jme);
  
#line 1953 
  tmp_0 = napi_disable_pending(& jme->napi);
  
#line 1953 
  if (tmp_0) 
#line 1953 
             tmp_1 = 0; else 
#line 1953 
                             tmp_1 = 1;
  
#line 1953 
  if (tmp_1) 
#line 1953 
             napi_disable(& jme->napi); else ;
  
#line 1955 
  tasklet_kill(& jme->linkch_task);
  
#line 1956 
  tasklet_kill(& jme->txclean_task);
  
#line 1957 
  tasklet_kill(& jme->rxclean_task);
  
#line 1958 
  tasklet_kill(& jme->rxempty_task);
  
#line 1960 
  jme_disable_rx_engine(jme);
  
#line 1961 
  jme_disable_tx_engine(jme);
  
#line 1962 
  jme_reset_mac_processor(jme);
  
#line 1963 
  jme_free_rx_resources(jme);
  
#line 1964 
  jme_free_tx_resources(jme);
  
#line 1965 
  jme->phylink = 0U;
  
#line 1966 
  jme_phy_off(jme);
  
#line 1968 
  __retres = 0;
  
#line 1968 
  return __retres;
}


#line 1972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_alloc_txdesc(struct jme_adapter *jme, struct sk_buff *skb)
{
  int __retres;
  int idx;
  int nr_alloc;
  unsigned char *tmp;
  int tmp_0;
  
#line 1975 
  struct jme_ring *txring = & jme->txring[0];
  
#line 1976 
  int mask = (int)jme->tx_ring_mask;
  
#line 1978 
  idx = txring->next_to_use;
  
#line 1979 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1979 
  nr_alloc = (int)((struct skb_shared_info *)tmp)->nr_frags + 2;
  
#line 1981 
  tmp_0 = atomic_read((atomic_t const *)(& txring->nr_free));
  
#line 1981 
  ;
  
#line 1981 
  if ((long)(tmp_0 < nr_alloc) != 0L) {
    
#line 1982 
    __retres = -1;
    
#line 1982 
    goto return_label;
  }
  else ;
  
#line 1984 
  atomic_sub(nr_alloc,& txring->nr_free);
  
#line 1986 
  txring->next_to_use = (txring->next_to_use + nr_alloc) & mask;
  
#line 1988 
  __retres = idx;
  return_label: 
#line 1988 
                return __retres;
}


#line 1992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_fill_tx_map(struct pci_dev *pdev, struct txdesc *txdesc, struct jme_buffer_info *txbi, struct page *page, u32 page_offset, u32 len, bool hidma)
{
  int __retres;
  dma_addr_t dmaaddr;
  int tmp;
  int tmp_0;
  
#line 2002 
  dmaaddr = pci_map_page(pdev,page,(unsigned long)page_offset,(unsigned long)len,1);
  
#line 2008 
  tmp = pci_dma_mapping_error(pdev,dmaaddr);
  
#line 2008 
  if ((long)(tmp != 0) != 0L) {
    
#line 2009 
    __retres = -22;
    
#line 2009 
    goto return_label;
  }
  else ;
  
#line 2011 
  pci_dma_sync_single_for_device(pdev,dmaaddr,(unsigned long)len,1);
  
#line 2016 
  txdesc->__anonCompField_txdesc_115.dw[0] = 0U;
  
#line 2017 
  txdesc->__anonCompField_txdesc_115.dw[1] = 0U;
  
#line 2018 
  txdesc->__anonCompField_txdesc_115.desc2.flags = (unsigned char)128U;
  
#line 2019 
  if ((int)hidma != 0) 
#line 2019 
                       tmp_0 = 32; else 
#line 2019 
                                        tmp_0 = 0;
  
#line 2019 
  txdesc->__anonCompField_txdesc_115.desc2.flags = (unsigned char)((int)txdesc->__anonCompField_txdesc_115.desc2.flags | tmp_0);
  
#line 2020 
  txdesc->__anonCompField_txdesc_115.desc2.datalen = (unsigned short)len;
  
#line 2021 
  txdesc->__anonCompField_txdesc_115.desc2.bufaddrh = (unsigned int)(dmaaddr >> 32);
  
#line 2022 
  txdesc->__anonCompField_txdesc_115.desc2.bufaddrl = (unsigned int)dmaaddr;
  
#line 2025 
  txbi->mapping = dmaaddr;
  
#line 2026 
  txbi->len = (int)len;
  
#line 2027 
  __retres = 0;
  return_label: 
#line 2027 
                return __retres;
}


#line 2030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_drop_tx_map(struct jme_adapter *jme, int startidx, int count)
{
  struct jme_buffer_info *ctxbi;
  int j;
  
#line 2032 
  struct jme_ring *txring = & jme->txring[0];
  
#line 2033 
  struct jme_buffer_info *txbi = txring->bufinf;
  
#line 2034 
  int mask = (int)jme->tx_ring_mask;
  
#line 2037 
  j = 0;
  
#line 2037 
  goto ldv_54773;
  ldv_54772: 
#line 2038 
  ;
  
#line 2038 
  ctxbi = txbi + (((startidx + j) + 2) & mask);
  
#line 2039 
  pci_unmap_page(jme->pdev,ctxbi->mapping,(unsigned long)ctxbi->len,1);
  
#line 2044 
  ctxbi->mapping = 0ULL;
  
#line 2045 
  ctxbi->len = 0;
  
#line 2037 
  j += 1;
  ldv_54773: 
#line 2038 
  ;
  
#line 2037 
  if (j < count) 
#line 2039 
                 goto ldv_54772; else 
#line 2042 
                                      goto ldv_54774;
  ldv_54774: 
#line 2043 
  ;
  
#line 2044 
  return;
}


#line 2051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_map_tx_skb(struct jme_adapter *jme, struct sk_buff *skb, int idx)
{
  struct txdesc *ctxdesc;
  struct jme_buffer_info *ctxbi;
  int i;
  unsigned char *tmp;
  struct skb_frag_struct const *frag;
  u32 len;
  unsigned char *tmp_0;
  unsigned int tmp_1;
  struct page *tmp_2;
  bool tmp_3;
  unsigned long tmp_5;
  
#line 2053 
  struct jme_ring *txring = & jme->txring[0];
  
#line 2054 
  struct txdesc *txdesc = (struct txdesc *)txring->desc;
  
#line 2055 
  struct jme_buffer_info *txbi = txring->bufinf;
  
#line 2056 
  bool hidma = (_Bool)(((jme->dev)->features & 32ULL) != 0ULL);
  
#line 2057 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2057 
  int nr_frags = (int)((struct skb_shared_info *)tmp)->nr_frags;
  
#line 2058 
  int mask = (int)jme->tx_ring_mask;
  
#line 2061 
  int ret = 0;
  
#line 2063 
  i = 0;
  
#line 2063 
  goto ldv_54794;
  ldv_54793: 
#line 2064 
  ;
  
#line 2064 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2064 
  frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_0)->frags[i]);
  
#line 2065 
  ctxdesc = txdesc + (((idx + i) + 2) & mask);
  
#line 2066 
  ctxbi = txbi + (((idx + i) + 2) & mask);
  
#line 2068 
  ;
  
#line 2070 
  tmp_1 = skb_frag_size(frag);
  
#line 2068 
  ;
  
#line 2068 
  tmp_2 = skb_frag_page(frag);
  
#line 2068 
  ;
  
#line 2068 
  ;
  
#line 2068 
  ;
  
#line 2068 
  ret = jme_fill_tx_map(jme->pdev,ctxdesc,ctxbi,tmp_2,frag->page_offset,tmp_1,(_Bool)((bool)((int)hidma) != 0));
  
#line 2071 
  if (ret != 0) {
    
#line 2072 
    jme_drop_tx_map(jme,idx,i);
    
#line 2073 
    goto out;
  }
  else ;
  
#line 2063 
  i += 1;
  ldv_54794: 
#line 2064 
  ;
  
#line 2063 
  if (i < nr_frags) 
#line 2065 
                    goto ldv_54793; else 
#line 2068 
                                         goto ldv_54795;
  ldv_54795: 
#line 2069 
  ;
  
#line 2078 
  tmp_3 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 2078 
  if ((int)tmp_3 != 0) 
#line 2078 
                       len = skb_headlen((struct sk_buff const *)skb); else 
                                                                    
#line 2078 
                                                                    len = skb->len;
  
#line 2079 
  ctxdesc = txdesc + ((idx + 1) & mask);
  
#line 2080 
  ctxbi = txbi + ((idx + 1) & mask);
  
#line 2081 
  ;
  
#line 2081 
  ;
  
#line 2081 
  ;
  
#line 2081 
  tmp_5 = __phys_addr((unsigned long)skb->data);
  
#line 2081 
  ;
  
#line 2081 
  ;
  
#line 2081 
  ;
  
#line 2081 
  ret = jme_fill_tx_map(jme->pdev,ctxdesc,ctxbi,(struct page *)(-24189255811072) + (tmp_5 >> 12),(unsigned int)((long)skb->data) & 4095U,len,(_Bool)((bool)((int)hidma) != 0));
  
#line 2083 
  if (ret != 0) 
#line 2084 
                jme_drop_tx_map(jme,idx,i); else ;
  out: 
#line 2086 
  ;
  
#line 2087 
  return ret;
}


#line 2093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_tx_tso(struct sk_buff *skb, __le16 *mss, u8 *flags)
{
  int __retres;
  unsigned char *tmp;
  
#line 2095 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2095 
  *mss = (unsigned short)((int)((struct skb_shared_info *)tmp)->gso_size << 2U);
  
#line 2096 
  if ((unsigned int)*mss != 0U) {
    
#line 2097 
    *flags = (unsigned char)((unsigned int)*flags | 2U);
    
#line 2099 
    if ((unsigned int)skb->protocol == 8U) {
      struct tcphdr *tmp_1;
      __sum16 tmp_2;
      
#line 2100 
      struct iphdr *iph = ip_hdr((struct sk_buff const *)skb);
      
#line 2102 
      iph->check = (unsigned short)0U;
      
#line 2103 
      tmp_1 = tcp_hdr((struct sk_buff const *)skb);
      
#line 2103 
      tmp_2 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
      
#line 2103 
      tmp_1->check = (unsigned short)(~ ((int)tmp_2));
    }
    else {
      struct tcphdr *tmp_4;
      __sum16 tmp_5;
      
#line 2108 
      struct ipv6hdr *ip6h = ipv6_hdr((struct sk_buff const *)skb);
      
#line 2110 
      tmp_4 = tcp_hdr((struct sk_buff const *)skb);
      
#line 2110 
      tmp_5 = csum_ipv6_magic((struct in6_addr const *)(& ip6h->saddr),(struct in6_addr const *)(& ip6h->daddr),0U,(unsigned short)6,0U);
      
#line 2110 
      tmp_4->check = (unsigned short)(~ ((int)tmp_5));
    }
    
#line 2116 
    __retres = 0;
    
#line 2116 
    goto return_label;
  }
  else ;
  
#line 2119 
  __retres = 1;
  return_label: 
#line 2119 
                return __retres;
}


#line 2123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_tx_csum(struct jme_adapter *jme, struct sk_buff *skb, u8 *flags)
{
  
#line 2125 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
    u8 ip_proto;
    
#line 2128 
    switch ((int)skb->protocol) {
      struct iphdr *tmp;
      struct ipv6hdr *tmp_0;
      case 8: 
#line 2129 
      ;
      
#line 2130 
      tmp = ip_hdr((struct sk_buff const *)skb);
      
#line 2130 
      ip_proto = tmp->protocol;
      
#line 2131 
      goto ldv_54810;
      case 56710: 
#line 2132 
      ;
      
#line 2133 
      tmp_0 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 2133 
      ip_proto = tmp_0->nexthdr;
      
#line 2134 
      goto ldv_54810;
      default: 
#line 2135 
      ;
      
#line 2136 
      ip_proto = (unsigned char)0U;
      
#line 2137 
      goto ldv_54810;
    }
    ldv_54810: 
#line 2140 
    ;
    
#line 2140 
    switch ((int)ip_proto) {
      case 6: 
#line 2141 
      ;
      
#line 2142 
      *flags = (unsigned char)((unsigned int)*flags | 16U);
      
#line 2143 
      goto ldv_54814;
      case 17: 
#line 2144 
      ;
      
#line 2145 
      *flags = (unsigned char)((unsigned int)*flags | 8U);
      
#line 2146 
      goto ldv_54814;
      default: 
#line 2147 
      ;
      
#line 2148 
      if ((jme->msg_enable & 128U) != 0U) 
#line 2148 
                                          netdev_err((struct net_device const *)jme->dev,"Error upper layer protocol\n"); else ;
      
#line 2149 
      goto ldv_54814;
    }
    ldv_54814: 
#line 2151 
    ;
  }
  else ;
  
#line 2153 
  return;
}


#line 2155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_tx_vlan(struct sk_buff *skb, __le16 *vlan, u8 *flags)
{
  
#line 2157 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 2158 
    *flags = (unsigned char)((unsigned int)*flags | 1U);
    
#line 2159 
    *vlan = (unsigned short)((unsigned int)skb->vlan_tci & 61439U);
  }
  else ;
  
#line 2161 
  return;
}


#line 2164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_fill_tx_desc(struct jme_adapter *jme, struct sk_buff *skb, int idx)
{
  int __retres;
  struct txdesc *txdesc;
  struct jme_buffer_info *txbi;
  u8 flags;
  int tmp;
  unsigned char *tmp_0;
  
#line 2166 
  struct jme_ring *txring = & jme->txring[0];
  
#line 2170 
  int ret = 0;
  
#line 2172 
  txdesc = (struct txdesc *)txring->desc + idx;
  
#line 2173 
  txbi = txring->bufinf + idx;
  
#line 2175 
  txdesc->__anonCompField_txdesc_115.dw[0] = 0U;
  
#line 2176 
  txdesc->__anonCompField_txdesc_115.dw[1] = 0U;
  
#line 2177 
  txdesc->__anonCompField_txdesc_115.dw[2] = 0U;
  
#line 2178 
  txdesc->__anonCompField_txdesc_115.dw[3] = 0U;
  
#line 2179 
  txdesc->__anonCompField_txdesc_115.desc1.pktsize = (unsigned short)skb->len;
  
#line 2180 
  ldv_inline_asm();
  
#line 2188 
  flags = (unsigned char)192U;
  
#line 2192 
  tmp = jme_tx_tso(skb,& txdesc->__anonCompField_txdesc_115.desc1.mss,& flags);
  
#line 2192 
  if (tmp != 0) 
#line 2193 
                jme_tx_csum(jme,skb,& flags); else ;
  
#line 2194 
  jme_tx_vlan(skb,& txdesc->__anonCompField_txdesc_115.desc1.vlan,& flags);
  
#line 2195 
  ret = jme_map_tx_skb(jme,skb,idx);
  
#line 2196 
  if (ret != 0) {
    
#line 2197 
    __retres = ret;
    
#line 2197 
    goto return_label;
  }
  else ;
  
#line 2199 
  txdesc->__anonCompField_txdesc_115.desc1.flags = flags;
  
#line 2200 
  ldv_inline_asm();
  
#line 2205 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2205 
  txbi->nr_desc = (int)((struct skb_shared_info *)tmp_0)->nr_frags + 2;
  
#line 2206 
  txbi->skb = skb;
  
#line 2207 
  txbi->len = (int)skb->len;
  
#line 2208 
  txbi->start_xmit = jiffies;
  
#line 2209 
  if (txbi->start_xmit == 0UL) 
#line 2210 
                               txbi->start_xmit = 18446744073709551615UL; else ;
  
#line 2212 
  __retres = 0;
  return_label: 
#line 2212 
                return __retres;
}


#line 2216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_stop_queue_if_full(struct jme_adapter *jme)
{
  int tmp_1;
  
#line 2218 
  struct jme_ring *txring = & jme->txring[0];
  
#line 2219 
  struct jme_buffer_info *txbi = txring->bufinf;
  
#line 2220 
  int idx = atomic_read((atomic_t const *)(& txring->next_to_clean));
  
#line 2222 
  txbi += idx;
  
#line 2223 
  ldv_inline_asm();
  
#line 2225 
  tmp_1 = atomic_read((atomic_t const *)(& txring->nr_free));
  
#line 2225 
  if ((long)((unsigned int)tmp_1 <= 18U) != 0L) {
    int tmp_0;
    
#line 2226 
    netif_start_queue(jme->dev);
    
#line 2227 
    if ((jme->msg_enable & 256U) != 0U) 
#line 2227 
                                        netdev_info((struct net_device const *)jme->dev,"TX Queue Paused\n"); else ;
    
#line 2228 
    ldv_inline_asm();
    
#line 2229 
    tmp_0 = atomic_read((atomic_t const *)(& txring->nr_free));
    
#line 2229 
    ;
    
#line 2229 
    if ((unsigned int)tmp_0 >= jme->tx_wake_threshold) {
      
#line 2231 
      netif_wake_queue(jme->dev);
      
#line 2232 
      if ((jme->msg_enable & 256U) != 0U) 
#line 2232 
                                          netdev_info((struct net_device const *)jme->dev,"TX Queue Fast Waked\n"); else ;
    }
    else ;
  }
  else ;
  
#line 2236 
  if ((((long)(txbi->start_xmit != 0UL) != 0L && (long)(jiffies - txbi->start_xmit > 1249UL) != 0L) != 0) != 0 && (long)(txbi->skb != (struct sk_buff *)0) != 0L) {
    
#line 2239 
    netif_start_queue(jme->dev);
    
#line 2240 
    if ((jme->msg_enable & 256U) != 0U) 
#line 2240 
                                        netdev_info((struct net_device const *)jme->dev,"TX Queue Stopped %d@%lu\n",idx,jiffies); else ;
  }
  else ;
  
#line 2242 
  return;
}


#line 2250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static netdev_tx_t jme_start_xmit(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  int idx;
  bool tmp_0;
  int tmp_2;
  
#line 2252 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2255 
  tmp_0 = skb_is_gso((struct sk_buff const *)skb);
  
#line 2255 
  if ((long)((int)tmp_0 != 0) != 0L) {
    int tmp_1;
    
#line 2255 
    tmp_1 = skb_cow_head(skb,0U);
    
#line 2255 
    if ((long)(tmp_1 != 0) != 0L) {
      
#line 2256 
      dev_kfree_skb_any(skb);
      
#line 2257 
      (jme->dev)->stats.tx_dropped += 1UL;
      
#line 2258 
      __retres = NETDEV_TX_OK;
      
#line 2258 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2261 
  idx = jme_alloc_txdesc(jme,skb);
  
#line 2263 
  if ((long)(idx < 0) != 0L) {
    
#line 2264 
    netif_start_queue(netdev);
    
#line 2265 
    if ((jme->msg_enable & 128U) != 0U) 
#line 2265 
                                        netdev_err((struct net_device const *)jme->dev,"BUG! Tx ring full when queue awake!\n"); else ;
    
#line 2268 
    __retres = NETDEV_TX_BUSY;
    
#line 2268 
    goto return_label;
  }
  else ;
  
#line 2271 
  tmp_2 = jme_fill_tx_desc(jme,skb,idx);
  
#line 2271 
  if (tmp_2 != 0) {
    
#line 2272 
    __retres = NETDEV_TX_OK;
    
#line 2272 
    goto return_label;
  }
  else ;
  
#line 2274 
  jwrite32(jme,0U,jme->reg_txcs | 257U);
  
#line 2281 
  jme_stop_queue_if_full(jme);
  
#line 2283 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2283 
                return __retres;
}


#line 2287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_set_unicastaddr(struct net_device *netdev)
{
  u32 val;
  
#line 2289 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2292 
  val = (unsigned int)(((((int)*(netdev->dev_addr + 3U) << 24) | ((int)*(netdev->dev_addr + 2U) << 16)) | ((int)*(netdev->dev_addr + 1U) << 8)) | (int)*(netdev->dev_addr));
  
#line 2296 
  jwrite32(jme,56U,val);
  
#line 2297 
  val = (unsigned int)(((int)*(netdev->dev_addr + 5U) << 8) | (int)*(netdev->dev_addr + 4U));
  
#line 2299 
  jwrite32(jme,60U,val);
  
#line 2300 
  return;
}


#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_macaddr(struct net_device *netdev, void *p)
{
  int __retres;
  bool tmp_0;
  
#line 2305 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2306 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 2308 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 2308 
  if ((int)tmp_0 != 0) {
    
#line 2309 
    __retres = -16;
    
#line 2309 
    goto return_label;
  }
  else ;
  
#line 2311 
  ldv_spin_lock_bh_89(& jme->macaddr_lock);
  
#line 2312 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 2313 
  jme_set_unicastaddr(netdev);
  
#line 2314 
  ldv_spin_unlock_bh_90(& jme->macaddr_lock);
  
#line 2316 
  __retres = 0;
  return_label: 
#line 2316 
                return __retres;
}


#line 2320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_set_multi(struct net_device *netdev)
{
  
#line 2322 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2323 
  u32 mc_hash[2U] = {};
  
#line 2325 
  ldv_spin_lock_bh_91(& jme->rxmcs_lock);
  
#line 2327 
  jme->reg_rxmcs |= 1280U;
  
#line 2329 
  if ((netdev->flags & 256U) != 0U) 
#line 2330 
                                    jme->reg_rxmcs |= 2048U;
  else 
    
#line 2331 
    if ((netdev->flags & 512U) != 0U) 
#line 2332 
                                      jme->reg_rxmcs |= 128U;
    else 
      
#line 2333 
      if ((netdev->flags & 4096U) != 0U) {
        struct netdev_hw_addr *ha;
        int bit_nr;
        struct netdev_hw_addr *tmp_0;
        u32 tmp_5;
        struct netdev_hw_addr *tmp_6;
        
#line 2337 
        jme->reg_rxmcs |= 576U;
        {
          
#line 2338 
          struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
          
#line 2338 
          tmp_0 = (struct netdev_hw_addr *)__mptr;
        }
        
#line 2338 
        ha = tmp_0;
        
#line 2338 
        goto ldv_54871;
        ldv_54870: 
#line 2339 
        ;
        {
          u32 tmp_4;
          
#line 2339 
          u32 __x = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
          
#line 2339 
          if (0 != 0) {
            u32 tmp_2;
            {
              
#line 2339 
              u32 __x_0 = __x_0;
              
#line 2339 
              __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
              
#line 2339 
              __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
              
#line 2339 
              __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
              
#line 2339 
              __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
              
#line 2339 
              __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
              
#line 2339 
              tmp_2 = __x_0;
            }
            
#line 2339 
            tmp_4 = tmp_2;
          }
          else 
#line 2339 
               tmp_4 = __bitrev32(__x);
          
#line 2339 
          tmp_5 = tmp_4;
        }
        
#line 2339 
        bit_nr = (int)tmp_5 & 63;
        
#line 2340 
        mc_hash[bit_nr >> 5] |= (unsigned int)(1 << (bit_nr & 31));
        {
          
#line 2338 
          struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
          
#line 2338 
          tmp_6 = (struct netdev_hw_addr *)__mptr_0;
        }
        
#line 2338 
        ha = tmp_6;
        ldv_54871: 
#line 2340 
        ;
        
#line 2338 
        if (& ha->list != & netdev->mc.list) 
#line 2340 
                                             goto ldv_54870; else 
#line 2343 
                                                                  goto ldv_54872;
        ldv_54872: 
#line 2344 
        ;
        
#line 2343 
        jwrite32(jme,64U,mc_hash[0]);
        
#line 2344 
        jwrite32(jme,68U,mc_hash[1]);
      }
      else ;
  
#line 2346 
  ldv_inline_asm();
  
#line 2348 
  jwrite32(jme,52U,jme->reg_rxmcs);
  
#line 2350 
  ldv_spin_unlock_bh_92(& jme->rxmcs_lock);
  
#line 2351 
  return;
}


#line 2354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  
#line 2356 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2358 
  if (jme->old_mtu == (unsigned int)new_mtu) {
    
#line 2359 
    __retres = 0;
    
#line 2359 
    goto return_label;
  }
  else ;
  
#line 2361 
  if (new_mtu + 14 > 9216 || new_mtu <= 1279) {
    
#line 2363 
    __retres = -22;
    
#line 2363 
    goto return_label;
  }
  else ;
  
#line 2366 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 2367 
  netdev_update_features(netdev);
  
#line 2369 
  jme_restart_rx_engine(jme);
  
#line 2370 
  jme_reset_link(jme);
  
#line 2372 
  __retres = 0;
  return_label: 
#line 2372 
                return __retres;
}


#line 2376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_tx_timeout(struct net_device *netdev)
{
  int tmp_0;
  
#line 2378 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2380 
  jme->phylink = 0U;
  
#line 2381 
  jme_reset_phy_processor(jme);
  
#line 2382 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& jme->flags));
  
#line 2382 
  if (tmp_0 != 0) 
#line 2383 
                  jme_set_settings(netdev,& jme->old_ecmd); else ;
  
#line 2388 
  jme_reset_link(jme);
  
#line 2389 
  return;
}


#line 2423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 2426 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2428 
  strlcpy((char *)(& info->driver),"jme",32UL);
  
#line 2429 
  strlcpy((char *)(& info->version),"1.0.8",32UL);
  
#line 2430 
  tmp_0 = pci_name((struct pci_dev const *)jme->pdev);
  
#line 2430 
  ;
  
#line 2430 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 2431 
  return;
}


#line 2434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 2436 
  __retres = 1280;
  
#line 2436 
  return __retres;
}


#line 2440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void mmapio_memcpy(struct jme_adapter *jme, u32 *p, u32 reg, int len)
{
  int i;
  
#line 2444 
  i = 0;
  
#line 2444 
  goto ldv_54905;
  ldv_54904: 
#line 2445 
  ;
  
#line 2445 
  *(p + (i >> 2)) = jread32(jme,reg + (unsigned int)i);
  
#line 2444 
  i += 4;
  ldv_54905: 
#line 2445 
  ;
  
#line 2444 
  if (i < len) 
#line 2446 
               goto ldv_54904; else 
#line 2449 
                                    goto ldv_54906;
  ldv_54906: 
#line 2450 
  ;
  
#line 2451 
  return;
}


#line 2449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void mdio_memcpy(struct jme_adapter *jme, u32 *p, int reg_nr)
{
  int i;
  int tmp;
  
#line 2452 
  u16 *p16 = (u16 *)p;
  
#line 2454 
  i = 0;
  
#line 2454 
  goto ldv_54915;
  ldv_54914: 
#line 2455 
  ;
  
#line 2455 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,i);
  
#line 2455 
  *(p16 + i) = (unsigned short)tmp;
  
#line 2454 
  i += 1;
  ldv_54915: 
#line 2455 
  ;
  
#line 2454 
  if (i < reg_nr) 
#line 2456 
                  goto ldv_54914; else 
#line 2459 
                                       goto ldv_54916;
  ldv_54916: 
#line 2460 
  ;
  
#line 2461 
  return;
}


#line 2459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  
#line 2461 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2462 
  u32 *p32 = (u32 *)p;
  
#line 2464 
  memset(p,255,1280UL);
  
#line 2466 
  regs->version = 1U;
  
#line 2467 
  mmapio_memcpy(jme,p32,0U,128);
  
#line 2469 
  p32 += 64U;
  
#line 2470 
  mmapio_memcpy(jme,p32,1024U,88);
  
#line 2472 
  p32 += 64U;
  
#line 2473 
  mmapio_memcpy(jme,p32,2048U,152);
  
#line 2475 
  p32 += 64U;
  
#line 2476 
  mmapio_memcpy(jme,p32,3072U,255);
  
#line 2478 
  p32 += 64U;
  
#line 2479 
  mdio_memcpy(jme,p32,32);
  
#line 2480 
  return;
}


#line 2483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  int tmp_0;
  
#line 2485 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2487 
  ecmd->tx_coalesce_usecs = 1000U;
  
#line 2488 
  ecmd->tx_max_coalesced_frames = 8U;
  
#line 2490 
  tmp_0 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
  
#line 2490 
  if (tmp_0 != 0) {
    
#line 2491 
    ecmd->use_adaptive_rx_coalesce = 0U;
    
#line 2492 
    ecmd->rx_coalesce_usecs = 0U;
    
#line 2493 
    ecmd->rx_max_coalesced_frames = 0U;
    
#line 2494 
    __retres = 0;
    
#line 2494 
    goto return_label;
  }
  else ;
  
#line 2497 
  ecmd->use_adaptive_rx_coalesce = 1U;
  
#line 2499 
  switch ((int)jme->dpi.cur) {
    case 1: 
#line 2500 
    ;
    
#line 2501 
    ecmd->rx_coalesce_usecs = 1U;
    
#line 2502 
    ecmd->rx_max_coalesced_frames = 1U;
    
#line 2503 
    goto ldv_54930;
    case 2: 
#line 2504 
    ;
    
#line 2505 
    ecmd->rx_coalesce_usecs = 64U;
    
#line 2506 
    ecmd->rx_max_coalesced_frames = 16U;
    
#line 2507 
    goto ldv_54930;
    case 3: 
#line 2508 
    ;
    
#line 2509 
    ecmd->rx_coalesce_usecs = 128U;
    
#line 2510 
    ecmd->rx_max_coalesced_frames = 32U;
    
#line 2511 
    goto ldv_54930;
    default: 
#line 2512 
    ;
    
#line 2513 
    goto ldv_54930;
  }
  ldv_54930: 
#line 2516 
  ;
  
#line 2516 
  __retres = 0;
  return_label: 
#line 2516 
                return __retres;
}


#line 2520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  bool tmp_0;
  
#line 2522 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2523 
  struct dynpcc_info *dpi = & jme->dpi;
  
#line 2525 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 2525 
  if ((int)tmp_0 != 0) {
    
#line 2526 
    __retres = -16;
    
#line 2526 
    goto return_label;
  }
  else ;
  
#line 2528 
  if (ecmd->use_adaptive_rx_coalesce != 0U) {
    int tmp_2;
    
#line 2528 
    tmp_2 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
    
#line 2528 
    if (tmp_2 != 0) {
      
#line 2530 
      set_bit(5L,(unsigned long volatile *)(& jme->flags));
      
#line 2531 
      jme->jme_rx = & netif_rx;
      
#line 2532 
      dpi->cur = (unsigned char)1U;
      
#line 2533 
      dpi->attempt = (unsigned char)1U;
      
#line 2534 
      dpi->cnt = (unsigned char)0U;
      
#line 2535 
      jme_set_rx_pcc(jme,1);
      
#line 2536 
      jme_interrupt_mode(jme);
    }
    else 
#line 2528 
         goto _LAND;
  }
  else {
    _LAND: 
#line 2537 
    ;
    
#line 2537 
    if (ecmd->use_adaptive_rx_coalesce == 0U) {
      int tmp_1;
      
#line 2537 
      tmp_1 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
      
#line 2537 
      if (tmp_1 == 0) {
        
#line 2539 
        set_bit(5L,(unsigned long volatile *)(& jme->flags));
        
#line 2540 
        jme->jme_rx = & netif_receive_skb;
        
#line 2541 
        jme_interrupt_mode(jme);
      }
      else ;
    }
    else ;
  }
  
#line 2544 
  __retres = 0;
  return_label: 
#line 2544 
                return __retres;
}


#line 2548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *ecmd)
{
  u32 val;
  int tmp_0;
  
#line 2551 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2554 
  ecmd->tx_pause = (unsigned int)((jme->reg_txpfc & 1U) != 0U);
  
#line 2555 
  ecmd->rx_pause = (unsigned int)((jme->reg_rxmcs & 8U) != 0U);
  
#line 2557 
  ldv_spin_lock_bh_93(& jme->phy_lock);
  
#line 2558 
  tmp_0 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,4);
  
#line 2558 
  val = (unsigned int)tmp_0;
  
#line 2559 
  ldv_spin_unlock_bh_94(& jme->phy_lock);
  
#line 2561 
  ecmd->autoneg = (unsigned int)((val & 3072U) != 0U);
  
#line 2563 
  return;
}


#line 2566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *ecmd)
{
  int __retres;
  u32 val;
  int tmp_0;
  
#line 2569 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2572 
  if (((jme->reg_txpfc & 1U) != 0U) ^ (ecmd->tx_pause != 0U)) {
    
#line 2575 
    if (ecmd->tx_pause != 0U) 
#line 2576 
                              jme->reg_txpfc |= 1U; else 
#line 2578 
                                                         jme->reg_txpfc &= 4294967294U;
    
#line 2580 
    jwrite32(jme,24U,jme->reg_txpfc);
  }
  else ;
  
#line 2583 
  ldv_spin_lock_bh_95(& jme->rxmcs_lock);
  
#line 2584 
  if (((jme->reg_rxmcs & 8U) != 0U) ^ (ecmd->rx_pause != 0U)) {
    
#line 2587 
    if (ecmd->rx_pause != 0U) 
#line 2588 
                              jme->reg_rxmcs |= 8U; else 
#line 2590 
                                                         jme->reg_rxmcs &= 4294967287U;
    
#line 2592 
    jwrite32(jme,52U,jme->reg_rxmcs);
  }
  else ;
  
#line 2594 
  ldv_spin_unlock_bh_96(& jme->rxmcs_lock);
  
#line 2596 
  ldv_spin_lock_bh_97(& jme->phy_lock);
  
#line 2597 
  tmp_0 = jme_mdio_read(jme->dev,jme->mii_if.phy_id,4);
  
#line 2597 
  val = (unsigned int)tmp_0;
  
#line 2598 
  if (((val & 3072U) != 0U) ^ (ecmd->autoneg != 0U)) {
    
#line 2601 
    if (ecmd->autoneg != 0U) 
#line 2602 
                             val |= 3072U; else 
#line 2604 
                                                val &= 4294964223U;
    
#line 2606 
    jme_mdio_write(jme->dev,jme->mii_if.phy_id,4,(int)val);
  }
  else ;
  
#line 2609 
  ldv_spin_unlock_bh_98(& jme->phy_lock);
  
#line 2611 
  __retres = 0;
  
#line 2611 
  return __retres;
}


#line 2615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  
#line 2618 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2620 
  wol->supported = 33U;
  
#line 2622 
  wol->wolopts = 0U;
  
#line 2624 
  if ((jme->reg_pmcs & 6U) != 0U) 
#line 2625 
                                  wol->wolopts |= 1U; else ;
  
#line 2627 
  if ((jme->reg_pmcs & 1U) != 0U) 
#line 2628 
                                  wol->wolopts |= 32U; else ;
  
#line 2629 
  return;
}


#line 2633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 2636 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2638 
  if ((wol->wolopts & 94U) != 0U) {
    
#line 2643 
    __retres = -95;
    
#line 2643 
    goto return_label;
  }
  else ;
  
#line 2645 
  jme->reg_pmcs = 0U;
  
#line 2647 
  if ((wol->wolopts & 1U) != 0U) 
#line 2648 
                                 jme->reg_pmcs |= 6U; else ;
  
#line 2650 
  if ((wol->wolopts & 32U) != 0U) 
#line 2651 
                                  jme->reg_pmcs |= 1U; else ;
  
#line 2653 
  jwrite32(jme,96U,jme->reg_pmcs);
  
#line 2654 
  device_set_wakeup_enable(& (jme->pdev)->dev,(_Bool)(jme->reg_pmcs != 0U));
  
#line 2656 
  __retres = 0;
  return_label: 
#line 2656 
                return __retres;
}


#line 2660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int rc;
  
#line 2663 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2666 
  ldv_spin_lock_bh_99(& jme->phy_lock);
  
#line 2667 
  rc = mii_ethtool_gset(& jme->mii_if,ecmd);
  
#line 2668 
  ldv_spin_unlock_bh_100(& jme->phy_lock);
  
#line 2669 
  return rc;
}


#line 2673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  int rc;
  __u32 tmp_0;
  
#line 2676 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2677 
  int fdc = 0;
  
#line 2679 
  tmp_0 = ethtool_cmd_speed((struct ethtool_cmd const *)ecmd);
  
#line 2679 
  if (tmp_0 == 1000U) {
    
#line 2680 
    if ((unsigned int)ecmd->autoneg != 1U) {
      
#line 2681 
      __retres = -22;
      
#line 2681 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2687 
  if (((unsigned int)*((unsigned char *)(& jme->mii_if) + 16UL) != 0U && (unsigned int)ecmd->autoneg != 1U) && (int)jme->mii_if.full_duplex != (int)ecmd->duplex) 
    
#line 2690 
    fdc = 1; else ;
  
#line 2692 
  ldv_spin_lock_bh_101(& jme->phy_lock);
  
#line 2693 
  rc = mii_ethtool_sset(& jme->mii_if,ecmd);
  
#line 2694 
  ldv_spin_unlock_bh_102(& jme->phy_lock);
  
#line 2696 
  if (rc == 0) {
    
#line 2697 
    if (fdc != 0) 
#line 2698 
                  jme_reset_link(jme); else ;
    
#line 2699 
    jme->old_ecmd = *ecmd;
    
#line 2700 
    set_bit(2L,(unsigned long volatile *)(& jme->flags));
  }
  else ;
  
#line 2703 
  __retres = rc;
  return_label: 
#line 2703 
                return __retres;
}


#line 2707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_ioctl(struct net_device *netdev, struct ifreq *rq, int cmd)
{
  int __retres;
  int rc;
  unsigned int duplex_chg;
  
#line 2710 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2711 
  struct mii_ioctl_data *mii_data = if_mii(rq);
  
#line 2714 
  if (cmd == 35145) {
    
#line 2715 
    u16 val = mii_data->val_in;
    
#line 2716 
    if (((int)val & 36864) == 0 && ((int)val & 64) != 0) {
      
#line 2718 
      __retres = -22;
      
#line 2718 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2721 
  ldv_spin_lock_bh_103(& jme->phy_lock);
  
#line 2722 
  rc = generic_mii_ioctl(& jme->mii_if,mii_data,cmd,& duplex_chg);
  
#line 2723 
  ldv_spin_unlock_bh_104(& jme->phy_lock);
  
#line 2725 
  if (rc == 0 && cmd == 35145) {
    
#line 2726 
    if (duplex_chg != 0U) 
#line 2727 
                          jme_reset_link(jme); else ;
    
#line 2728 
    jme_get_settings(netdev,& jme->old_ecmd);
    
#line 2729 
    set_bit(2L,(unsigned long volatile *)(& jme->flags));
  }
  else ;
  
#line 2732 
  __retres = rc;
  return_label: 
#line 2732 
                return __retres;
}


#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static u32 jme_get_link(struct net_device *netdev)
{
  u32 __retres;
  u32 tmp_0;
  
#line 2738 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2739 
  tmp_0 = jread32(jme,1072U);
  
#line 2739 
  __retres = tmp_0 & 1024U;
  
#line 2739 
  return __retres;
}


#line 2743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static u32 jme_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 2745 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2746 
  __retres = jme->msg_enable;
  
#line 2746 
  return __retres;
}


#line 2750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_set_msglevel(struct net_device *netdev, u32 value)
{
  
#line 2752 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2753 
  jme->msg_enable = value;
  
#line 2754 
  return;
}


#line 2757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static netdev_features_t jme_fix_features(struct net_device *netdev, netdev_features_t features)
{
  
#line 2759 
  if (netdev->mtu > 1900U) 
#line 2760 
                           features &= 18446744073707913189ULL; else ;
  
#line 2761 
  return features;
}


#line 2765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2767 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2769 
  ldv_spin_lock_bh_105(& jme->rxmcs_lock);
  
#line 2770 
  if ((features & 17179869184ULL) != 0ULL) 
#line 2771 
                                           jme->reg_rxmcs |= 1U; else 
                                                                   
#line 2773 
                                                                   jme->reg_rxmcs &= 4294967294U;
  
#line 2774 
  jwrite32(jme,52U,jme->reg_rxmcs);
  
#line 2775 
  ldv_spin_unlock_bh_106(& jme->rxmcs_lock);
  
#line 2777 
  __retres = 0;
  
#line 2777 
  return __retres;
}


#line 2781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_netpoll(struct net_device *dev)
{
  unsigned long flags;
  int tmp_0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 2785 
  flags = arch_local_irq_save();
  
#line 2785 
  trace_hardirqs_off();
  
#line 2786 
  jme_intr(dev->irq,(void *)dev);
  {
    unsigned long __dummy_2;
    unsigned long __dummy2_2;
    
  }
  
#line 2787 
  tmp_0 = arch_irqs_disabled_flags(flags);
  
#line 2787 
  if (tmp_0 != 0) {
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 2787 
    arch_local_irq_restore(flags);
    
#line 2787 
    trace_hardirqs_off();
  }
  else {
    
#line 2787 
    trace_hardirqs_on();
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 2787 
    arch_local_irq_restore(flags);
  }
  
#line 2789 
  return;
}


#line 2792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_nway_reset(struct net_device *netdev)
{
  int __retres;
  
#line 2794 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2795 
  jme_restart_an(jme);
  
#line 2796 
  __retres = 0;
  
#line 2796 
  return __retres;
}


#line 2800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static u8 jme_smb_read(struct jme_adapter *jme, unsigned int addr)
{
  u8 __retres;
  u32 val;
  int to;
  
#line 2805 
  val = jread32(jme,1088U);
  
#line 2806 
  to = 20;
  
#line 2807 
  goto ldv_55035;
  ldv_55034: 
#line 2808 
  ;
  
#line 2808 
  msleep(1U);
  
#line 2809 
  val = jread32(jme,1088U);
  ldv_55035: 
#line 2810 
  ;
  
#line 2807 
  if ((val & 15U) != 0U) {
    
#line 2807 
    to -= 1;
    
#line 2807 
    if (to != 0) 
#line 2809 
                 goto ldv_55034; else 
#line 2812 
                                      goto ldv_55036;
  }
  else 
#line 2812 
       goto ldv_55036;
  ldv_55036: 
#line 2813 
  ;
  
#line 2811 
  if (to == 0) {
    
#line 2812 
    if ((jme->msg_enable & 8192U) != 0U) 
#line 2812 
                                         netdev_err((struct net_device const *)jme->dev,"SMB Bus Busy\n"); else ;
    
#line 2813 
    __retres = (unsigned char)255U;
    
#line 2813 
    goto return_label;
  }
  else ;
  
#line 2816 
  jwrite32(jme,1092U,((addr << 8) & 65535U) | 48U);
  
#line 2821 
  val = jread32(jme,1092U);
  
#line 2822 
  to = 20;
  
#line 2823 
  goto ldv_55038;
  ldv_55037: 
#line 2824 
  ;
  
#line 2824 
  msleep(1U);
  
#line 2825 
  val = jread32(jme,1092U);
  ldv_55038: 
#line 2826 
  ;
  
#line 2823 
  if ((val & 16U) != 0U) {
    
#line 2823 
    to -= 1;
    
#line 2823 
    if (to != 0) 
#line 2825 
                 goto ldv_55037; else 
#line 2828 
                                      goto ldv_55039;
  }
  else 
#line 2828 
       goto ldv_55039;
  ldv_55039: 
#line 2829 
  ;
  
#line 2827 
  if (to == 0) {
    
#line 2828 
    if ((jme->msg_enable & 8192U) != 0U) 
#line 2828 
                                         netdev_err((struct net_device const *)jme->dev,"SMB Bus Busy\n"); else ;
    
#line 2829 
    __retres = (unsigned char)255U;
    
#line 2829 
    goto return_label;
  }
  else ;
  
#line 2832 
  __retres = (unsigned char)(val >> 24);
  return_label: 
#line 2832 
                return __retres;
}


#line 2836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_smb_write(struct jme_adapter *jme, unsigned int addr, u8 data)
{
  u32 val;
  int to;
  
#line 2841 
  val = jread32(jme,1088U);
  
#line 2842 
  to = 20;
  
#line 2843 
  goto ldv_55048;
  ldv_55047: 
#line 2844 
  ;
  
#line 2844 
  msleep(1U);
  
#line 2845 
  val = jread32(jme,1088U);
  ldv_55048: 
#line 2846 
  ;
  
#line 2843 
  if ((val & 15U) != 0U) {
    
#line 2843 
    to -= 1;
    
#line 2843 
    if (to != 0) 
#line 2845 
                 goto ldv_55047; else 
#line 2848 
                                      goto ldv_55049;
  }
  else 
#line 2848 
       goto ldv_55049;
  ldv_55049: 
#line 2849 
  ;
  
#line 2847 
  if (to == 0) {
    
#line 2848 
    if ((jme->msg_enable & 8192U) != 0U) 
#line 2848 
                                         netdev_err((struct net_device const *)jme->dev,"SMB Bus Busy\n"); else ;
    
#line 2849 
    goto return_label;
  }
  else ;
  
#line 2852 
  jwrite32(jme,1092U,(((unsigned int)((int)data << 16) & 16711680U) | ((addr << 8) & 65535U)) | 16U);
  
#line 2858 
  val = jread32(jme,1092U);
  
#line 2859 
  to = 20;
  
#line 2860 
  goto ldv_55051;
  ldv_55050: 
#line 2861 
  ;
  
#line 2861 
  msleep(1U);
  
#line 2862 
  val = jread32(jme,1092U);
  ldv_55051: 
#line 2863 
  ;
  
#line 2860 
  if ((val & 16U) != 0U) {
    
#line 2860 
    to -= 1;
    
#line 2860 
    if (to != 0) 
#line 2862 
                 goto ldv_55050; else 
#line 2865 
                                      goto ldv_55052;
  }
  else 
#line 2865 
       goto ldv_55052;
  ldv_55052: 
#line 2866 
  ;
  
#line 2864 
  if (to == 0) {
    
#line 2865 
    if ((jme->msg_enable & 8192U) != 0U) 
#line 2865 
                                         netdev_err((struct net_device const *)jme->dev,"SMB Bus Busy\n"); else ;
    
#line 2866 
    goto return_label;
  }
  else ;
  
#line 2869 
  if (1) 
#line 2869 
         __const_udelay(8590000UL);
  else {
    
#line 2869 
    unsigned long __ms = 2UL;
    {
      unsigned long tmp;
      
#line 2869 
      goto ldv_55055;
      ldv_55054: 
#line 2870 
      ;
      
#line 2869 
      __const_udelay(4295000UL);
      ldv_55055: 
#line 2871 
      ;
      
#line 2869 
      tmp = __ms;
      
#line 2869 
      __ms -= 1UL;
      
#line 2869 
      ;
      
#line 2869 
      if (tmp != 0UL) 
#line 2871 
                      goto ldv_55054; else 
#line 2874 
                                           goto ldv_55056;
      ldv_55056: 
#line 2875 
      ;
    }
  }
  return_label: 
#line 2878 
                return;
}


#line 2873  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_get_eeprom_len(struct net_device *netdev)
{
  int __retres;
  u32 val;
  
#line 2875 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2877 
  val = jread32(jme,1088U);
  
#line 2878 
  __retres = ((int)val << 3) & 256;
  
#line 2878 
  return __retres;
}


#line 2882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_get_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  int i;
  
#line 2885 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2886 
  int offset = (int)eeprom->offset;
  
#line 2886 
  int len = (int)eeprom->len;
  
#line 2891 
  eeprom->magic = 592U;
  
#line 2892 
  i = 0;
  
#line 2892 
  goto ldv_55072;
  ldv_55071: 
#line 2893 
  ;
  
#line 2893 
  *(data + i) = jme_smb_read(jme,(unsigned int)(i + offset));
  
#line 2892 
  i += 1;
  ldv_55072: 
#line 2893 
  ;
  
#line 2892 
  if (i < len) 
#line 2894 
               goto ldv_55071; else 
#line 2897 
                                    goto ldv_55073;
  ldv_55073: 
#line 2898 
  ;
  
#line 2895 
  __retres = 0;
  
#line 2895 
  return __retres;
}


#line 2899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_set_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  int i;
  
#line 2902 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 2903 
  int offset = (int)eeprom->offset;
  
#line 2903 
  int len = (int)eeprom->len;
  
#line 2905 
  if (eeprom->magic != 592U) {
    
#line 2906 
    __retres = -22;
    
#line 2906 
    goto return_label;
  }
  else ;
  
#line 2911 
  i = 0;
  
#line 2911 
  goto ldv_55084;
  ldv_55083: 
#line 2912 
  ;
  
#line 2912 
  jme_smb_write(jme,(unsigned int)(i + offset),(unsigned char)((int)*(data + i)));
  
#line 2911 
  i += 1;
  ldv_55084: 
#line 2912 
  ;
  
#line 2911 
  if (i < len) 
#line 2913 
               goto ldv_55083; else 
#line 2916 
                                    goto ldv_55085;
  ldv_55085: 
#line 2917 
  ;
  
#line 2914 
  __retres = 0;
  return_label: 
#line 2914 
                return __retres;
}


#line 2917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static struct ethtool_ops const jme_ethtool_ops = {.get_settings = & jme_get_settings, .set_settings = & jme_set_settings, .get_drvinfo = & jme_get_drvinfo, .get_regs_len = & jme_get_regs_len, .get_regs = & jme_get_regs, .get_wol = & jme_get_wol, .set_wol = & jme_set_wol, .get_msglevel = & jme_get_msglevel, .set_msglevel = & jme_set_msglevel, .nway_reset = & jme_nway_reset, .get_link = & jme_get_link, .get_eeprom_len = & jme_get_eeprom_len, .get_eeprom = & jme_get_eeprom, .set_eeprom = & jme_set_eeprom, .get_coalesce = & jme_get_coalesce, .set_coalesce = & jme_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & jme_get_pauseparam, .set_pauseparam = & jme_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_pci_dma64(struct pci_dev *pdev)
{
  int __retres;
  int tmp_4;
  
#line 2941 
  if ((unsigned int)pdev->device == 592U) {
    int tmp_0;
    
#line 2941 
    tmp_0 = pci_set_dma_mask(pdev,18446744073709551615ULL);
    
#line 2941 
    if (tmp_0 == 0) {
      int tmp;
      
#line 2943 
      tmp = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
      
#line 2943 
      if (tmp == 0) {
        
#line 2944 
        __retres = 1;
        
#line 2944 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2946 
  if ((unsigned int)pdev->device == 592U) {
    int tmp_2;
    
#line 2946 
    tmp_2 = pci_set_dma_mask(pdev,1099511627775ULL);
    
#line 2946 
    if (tmp_2 == 0) {
      int tmp_1;
      
#line 2948 
      tmp_1 = pci_set_consistent_dma_mask(pdev,1099511627775ULL);
      
#line 2948 
      if (tmp_1 == 0) {
        
#line 2949 
        __retres = 1;
        
#line 2949 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2951 
  tmp_4 = pci_set_dma_mask(pdev,4294967295ULL);
  
#line 2951 
  if (tmp_4 == 0) {
    int tmp_3;
    
#line 2952 
    tmp_3 = pci_set_consistent_dma_mask(pdev,4294967295ULL);
    
#line 2952 
    if (tmp_3 == 0) {
      
#line 2953 
      __retres = 0;
      
#line 2953 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2955 
  __retres = -1;
  return_label: 
#line 2955 
                return __retres;
}


#line 2959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_phy_init(struct jme_adapter *jme)
{
  u16 reg26;
  int tmp;
  
#line 2963 
  tmp = jme_mdio_read(jme->dev,jme->mii_if.phy_id,26);
  
#line 2963 
  reg26 = (unsigned short)tmp;
  
#line 2964 
  jme_mdio_write(jme->dev,jme->mii_if.phy_id,26,(int)((unsigned int)reg26 | 4096U));
  
#line 2965 
  return;
}


#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
__inline static void jme_check_hw_ver(struct jme_adapter *jme)
{
  u32 chipmode;
  
#line 2972 
  chipmode = jread32(jme,2116U);
  
#line 2974 
  jme->fpgaver = chipmode >> 16;
  
#line 2975 
  jme->chiprev = (unsigned char)(chipmode >> 8);
  
#line 2976 
  jme->chip_main_rev = (unsigned char)((unsigned int)jme->chiprev & 15U);
  
#line 2977 
  jme->chip_sub_rev = (unsigned char)((int)jme->chiprev >> 4);
  
#line 2978 
  return;
}


#line 2980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static struct net_device_ops const jme_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & jme_open, .ndo_stop = & jme_close, .ndo_start_xmit = & jme_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & jme_set_multi, .ndo_set_mac_address = & jme_set_macaddr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & jme_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & jme_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & jme_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & jme_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & jme_fix_features, .ndo_set_features = & jme_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_init_one(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  int using_dac;
  int i;
  struct net_device *netdev;
  struct jme_adapter *jme;
  u16 bmcr;
  u16 bmsr;
  u32 apmc;
  unsigned int tmp_0;
  resource_size_t tmp_1;
  
#line 3001 
  int rc = 0;
  
#line 3010 
  pci_disable_link_state(pdev,7);
  
#line 3013 
  rc = pci_enable_device(pdev);
  
#line 3014 
  if (rc != 0) {
    
#line 3015 
    printk("\001");
    
#line 3016 
    goto err_out;
  }
  else ;
  
#line 3019 
  using_dac = jme_pci_dma64(pdev);
  
#line 3020 
  if (using_dac < 0) {
    
#line 3021 
    printk("\001");
    
#line 3022 
    rc = -5;
    
#line 3023 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 3026 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 3027 
    printk("\001");
    
#line 3028 
    rc = -12;
    
#line 3029 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 3032 
  rc = pci_request_regions(pdev,"jme");
  
#line 3033 
  if (rc != 0) {
    
#line 3034 
    printk("\001");
    
#line 3035 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 3038 
  pci_set_master(pdev);
  
#line 3043 
  netdev = ldv_alloc_etherdev_mqs_107(1632,1U,1U);
  
#line 3044 
  if (netdev == (struct net_device *)0) {
    
#line 3045 
    rc = -12;
    
#line 3046 
    goto err_out_release_regions;
  }
  else ;
  
#line 3048 
  netdev->netdev_ops = & jme_netdev_ops;
  
#line 3049 
  netdev->ethtool_ops = & jme_ethtool_ops;
  
#line 3050 
  netdev->watchdog_timeo = 1250;
  
#line 3051 
  netdev->hw_features = 17180983315ULL;
  
#line 3057 
  netdev->features = 1114515ULL;
  
#line 3064 
  if (using_dac != 0) 
#line 3065 
                      netdev->features |= 32ULL; else ;
  
#line 3067 
  netdev->dev.parent = & pdev->dev;
  
#line 3068 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 3073 
  jme = (struct jme_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 3074 
  jme->pdev = pdev;
  
#line 3075 
  jme->dev = netdev;
  
#line 3076 
  jme->jme_rx = & netif_rx;
  
#line 3077 
  tmp_0 = 1500U;
  
#line 3077 
  netdev->mtu = tmp_0;
  
#line 3077 
  jme->old_mtu = tmp_0;
  
#line 3078 
  jme->phylink = 0U;
  
#line 3079 
  jme->tx_ring_size = 1024U;
  
#line 3080 
  jme->tx_ring_mask = jme->tx_ring_size + 4294967295U;
  
#line 3081 
  jme->tx_wake_threshold = 512U;
  
#line 3082 
  jme->rx_ring_size = 512U;
  
#line 3083 
  jme->rx_ring_mask = jme->rx_ring_size + 4294967295U;
  
#line 3084 
  jme->msg_enable = 8390U;
  
#line 3086 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 3086 
    tmp_1 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 3086 
                                                                    tmp_1 = 0ULL;
  
#line 3085 
  ;
  
#line 3085 
  jme->regs = ioremap(pdev->resource[0].start,(unsigned long)tmp_1);
  
#line 3087 
  if (jme->regs == (void *)0) {
    
#line 3088 
    printk("\001");
    
#line 3089 
    rc = -12;
    
#line 3090 
    goto err_out_free_netdev;
  }
  else ;
  
#line 3093 
  if (no_pseudohp != 0) {
    u32 tmp_2;
    
#line 3094 
    tmp_2 = jread32(jme,2172U);
    
#line 3094 
    apmc = tmp_2 & 3758096383U;
    
#line 3095 
    jwrite32(jme,2172U,apmc);
  }
  else 
    
#line 3096 
    if (force_pseudohp != 0) {
      u32 tmp_3;
      
#line 3097 
      tmp_3 = jread32(jme,2172U);
      
#line 3097 
      apmc = tmp_3 | 536870912U;
      
#line 3098 
      jwrite32(jme,2172U,apmc);
    }
    else ;
  
#line 3101 
  netif_napi_add(netdev,& jme->napi,& jme_poll,64);
  
#line 3103 
  spinlock_check(& jme->phy_lock);
  {
    struct lock_class_key __key;
    
#line 3103 
    __raw_spin_lock_init(& jme->phy_lock.__anonCompField_spinlock_18.rlock,"&(&jme->phy_lock)->rlock",& __key);
  }
  
#line 3104 
  spinlock_check(& jme->macaddr_lock);
  {
    struct lock_class_key __key_0;
    
#line 3104 
    __raw_spin_lock_init(& jme->macaddr_lock.__anonCompField_spinlock_18.rlock,"&(&jme->macaddr_lock)->rlock",& __key_0);
  }
  
#line 3105 
  spinlock_check(& jme->rxmcs_lock);
  {
    struct lock_class_key __key_1;
    
#line 3105 
    __raw_spin_lock_init(& jme->rxmcs_lock.__anonCompField_spinlock_18.rlock,"&(&jme->rxmcs_lock)->rlock",& __key_1);
  }
  
#line 3107 
  atomic_set(& jme->link_changing,1);
  
#line 3108 
  atomic_set(& jme->rx_cleaning,1);
  
#line 3109 
  atomic_set(& jme->tx_cleaning,1);
  
#line 3110 
  atomic_set(& jme->rx_empty,1);
  
#line 3112 
  ldv_tasklet_init_108(& jme->pcc_task,& jme_pcc_tasklet,(unsigned long)jme);
  
#line 3115 
  jme->dpi.cur = (unsigned char)1U;
  
#line 3117 
  jme->reg_ghc = 0U;
  
#line 3118 
  jme->reg_rxcs = 855640064U;
  
#line 3119 
  jme->reg_rxmcs = 15U;
  
#line 3120 
  jme->reg_txpfc = 0U;
  
#line 3121 
  jme->reg_pmcs = 1U;
  
#line 3122 
  jme->reg_gpreg1 = 131072U;
  
#line 3124 
  if ((jme->reg_rxmcs & 1U) != 0U) 
#line 3125 
                                   netdev->features |= 17179869184ULL; else ;
  
#line 3130 
  pci_read_config_byte((struct pci_dev const *)pdev,89,& jme->mrrs);
  
#line 3131 
  jme->mrrs = (unsigned char)((unsigned int)jme->mrrs & 112U);
  
#line 3132 
  switch ((int)jme->mrrs) {
    case 0: 
#line 3133 
    ;
    
#line 3134 
    jme->reg_txcs = 20U;
    
#line 3135 
    goto ldv_55119;
    case 16: 
#line 3136 
    ;
    
#line 3137 
    jme->reg_txcs = 36U;
    
#line 3138 
    goto ldv_55119;
    default: 
#line 3139 
    ;
    
#line 3140 
    jme->reg_txcs = 52U;
    
#line 3141 
    goto ldv_55119;
  }
  ldv_55119: 
#line 3147 
  ;
  
#line 3147 
  jme_check_hw_ver(jme);
  
#line 3148 
  jme->mii_if.dev = netdev;
  
#line 3149 
  if (jme->fpgaver != 0U) {
    int tmp_4;
    int tmp_5;
    
#line 3150 
    jme->mii_if.phy_id = 0;
    
#line 3151 
    i = 1;
    
#line 3151 
    goto ldv_55124;
    ldv_55123: 
#line 3152 
    ;
    
#line 3152 
    tmp_4 = jme_mdio_read(netdev,i,0);
    
#line 3152 
    bmcr = (unsigned short)tmp_4;
    
#line 3153 
    tmp_5 = jme_mdio_read(netdev,i,1);
    
#line 3153 
    bmsr = (unsigned short)tmp_5;
    
#line 3154 
    if ((unsigned int)bmcr != 65535U && ((unsigned int)bmcr != 0U || (unsigned int)bmsr != 0U)) {
      
#line 3155 
      jme->mii_if.phy_id = i;
      
#line 3156 
      goto ldv_55122;
    }
    else ;
    
#line 3151 
    i += 1;
    ldv_55124: 
#line 3152 
    ;
    
#line 3151 
    if (i <= 31) 
#line 3153 
                 goto ldv_55123; else 
#line 3156 
                                      goto ldv_55122;
    ldv_55122: 
#line 3157 
    ;
    
#line 3160 
    if (jme->mii_if.phy_id == 0) {
      
#line 3161 
      rc = -5;
      
#line 3162 
      printk("\001");
      
#line 3163 
      goto err_out_unmap;
    }
    else ;
    
#line 3166 
    jme->reg_ghc |= 1U;
  }
  else 
#line 3168 
       jme->mii_if.phy_id = 1;
  
#line 3170 
  if ((unsigned int)pdev->device == 592U) 
#line 3171 
                                          jme->mii_if.supports_gmii = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else 
                                                                    
#line 3173 
                                                                    jme->mii_if.supports_gmii = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 3174 
  jme->mii_if.phy_id_mask = 31;
  
#line 3175 
  jme->mii_if.reg_num_mask = 31;
  
#line 3176 
  jme->mii_if.mdio_read = & jme_mdio_read;
  
#line 3177 
  jme->mii_if.mdio_write = & jme_mdio_write;
  
#line 3179 
  jme_clear_pm(jme);
  
#line 3180 
  device_set_wakeup_enable(& pdev->dev,(_Bool)1);
  
#line 3182 
  jme_set_phyfifo_5level(jme);
  
#line 3183 
  jme->pcirev = pdev->revision;
  
#line 3184 
  if (jme->fpgaver == 0U) 
#line 3185 
                          jme_phy_init(jme); else ;
  
#line 3186 
  jme_phy_off(jme);
  
#line 3191 
  jme_reset_mac_processor(jme);
  
#line 3192 
  rc = jme_reload_eeprom(jme);
  
#line 3193 
  if (rc != 0) {
    
#line 3194 
    printk("\001");
    
#line 3195 
    goto err_out_unmap;
  }
  else ;
  
#line 3197 
  jme_load_macaddr(netdev);
  
#line 3202 
  netif_carrier_off(netdev);
  
#line 3204 
  rc = ldv_register_netdev_109(netdev);
  
#line 3205 
  if (rc != 0) {
    
#line 3206 
    printk("\001");
    
#line 3207 
    goto err_out_unmap;
  }
  else ;
  
#line 3210 
  if ((jme->msg_enable & 2U) != 0U) {
    unsigned int tmp_6;
    char *tmp_7;
    char *tmp_9;
    
#line 3210 
    ;
    
#line 3210 
    ;
    
#line 3210 
    if (jme->fpgaver != 0U) 
#line 3210 
                            tmp_6 = jme->fpgaver; else 
#line 3210 
                                                       tmp_6 = (unsigned int)jme->chiprev;
    
#line 3210 
    if (jme->fpgaver != 0U) 
#line 3210 
                            tmp_7 = (char *)" (FPGA)"; else 
#line 3210 
                                                            tmp_7 = (char *)"";
    
#line 3210 
    if ((unsigned int)(jme->pdev)->device != 592U) {
      char *tmp_8;
      
#line 3210 
      if ((unsigned int)(jme->pdev)->device == 608U) 
#line 3210 
                                                     tmp_8 = (char *)"JMC260 Fast Ethernet"; else 
                                                                    
#line 3210 
                                                                    tmp_8 = (char *)"Unknown";
      
#line 3210 
      tmp_9 = tmp_8;
    }
    else 
#line 3210 
         tmp_9 = (char *)"JMC250 Gigabit Ethernet";
    
#line 3210 
    ;
    
#line 3210 
    netdev_info((struct net_device const *)jme->dev,"%s%s chiprev:%x pcirev:%x macaddr:%pM\n",tmp_9,tmp_7,tmp_6,(int)jme->pcirev,netdev->dev_addr);
  }
  else ;
  
#line 3219 
  __retres = 0;
  
#line 3219 
  goto return_label;
  err_out_unmap: 
#line 3221 
  ;
  
#line 3222 
  iounmap((void volatile *)jme->regs);
  err_out_free_netdev: 
#line 3223 
  ;
  
#line 3224 
  ldv_free_netdev_110(netdev);
  err_out_release_regions: 
#line 3225 
  ;
  
#line 3226 
  pci_release_regions(pdev);
  err_out_disable_pdev: 
#line 3227 
  ;
  
#line 3228 
  pci_disable_device(pdev);
  err_out: 
#line 3229 
  ;
  
#line 3230 
  __retres = rc;
  return_label: 
#line 3230 
                return __retres;
}


#line 3234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_remove_one(struct pci_dev *pdev)
{
  
#line 3236 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3237 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 3239 
  ldv_unregister_netdev_111(netdev);
  
#line 3240 
  iounmap((void volatile *)jme->regs);
  
#line 3241 
  ldv_free_netdev_112(netdev);
  
#line 3242 
  pci_release_regions(pdev);
  
#line 3243 
  pci_disable_device(pdev);
  
#line 3244 
  return;
}


#line 3248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_shutdown(struct pci_dev *pdev)
{
  
#line 3250 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3251 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 3253 
  jme_powersave_phy(jme);
  
#line 3254 
  pci_pme_active(pdev,(_Bool)1);
  
#line 3255 
  return;
}


#line 3259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_suspend(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  int tmp_3;
  bool tmp_2;
  bool tmp_5;
  {
    
#line 3261 
    struct device const *__mptr = (struct device const *)dev;
    
#line 3261 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3261 
  struct pci_dev *pdev = tmp;
  
#line 3262 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3263 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 3265 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 3265 
  if (tmp_2) 
#line 3265 
             tmp_3 = 0; else 
#line 3265 
                             tmp_3 = 1;
  
#line 3265 
  if (tmp_3) {
    
#line 3266 
    __retres = 0;
    
#line 3266 
    goto return_label;
  }
  else ;
  
#line 3268 
  atomic_dec(& jme->link_changing);
  
#line 3270 
  netif_device_detach(netdev);
  
#line 3271 
  netif_start_queue(netdev);
  
#line 3272 
  jme_stop_irq(jme);
  
#line 3274 
  tasklet_disable(& jme->txclean_task);
  
#line 3275 
  tasklet_disable(& jme->rxclean_task);
  
#line 3276 
  tasklet_disable(& jme->rxempty_task);
  
#line 3278 
  tmp_5 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 3278 
  if ((int)tmp_5 != 0) {
    int tmp_4;
    
#line 3279 
    tmp_4 = constant_test_bit(5L,(unsigned long const volatile *)(& jme->flags));
    
#line 3279 
    if (tmp_4 != 0) 
#line 3280 
                    jme_polling_mode(jme); else ;
    
#line 3282 
    jme_stop_pcc_timer(jme);
    
#line 3283 
    jme_disable_rx_engine(jme);
    
#line 3284 
    jme_disable_tx_engine(jme);
    
#line 3285 
    jme_reset_mac_processor(jme);
    
#line 3286 
    jme_free_rx_resources(jme);
    
#line 3287 
    jme_free_tx_resources(jme);
    
#line 3288 
    netif_carrier_off(netdev);
    
#line 3289 
    jme->phylink = 0U;
  }
  else ;
  
#line 3292 
  tasklet_enable(& jme->txclean_task);
  
#line 3293 
  tasklet_enable(& jme->rxclean_task);
  
#line 3294 
  tasklet_enable(& jme->rxempty_task);
  
#line 3296 
  jme_powersave_phy(jme);
  
#line 3298 
  __retres = 0;
  return_label: 
#line 3298 
                return __retres;
}


#line 3302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_resume(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  int tmp_3;
  bool tmp_2;
  int tmp_4;
  {
    
#line 3304 
    struct device const *__mptr = (struct device const *)dev;
    
#line 3304 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3304 
  struct pci_dev *pdev = tmp;
  
#line 3305 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3306 
  struct jme_adapter *jme = netdev_priv((struct net_device const *)netdev);
  
#line 3308 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 3308 
  if (tmp_2) 
#line 3308 
             tmp_3 = 0; else 
#line 3308 
                             tmp_3 = 1;
  
#line 3308 
  if (tmp_3) {
    
#line 3309 
    __retres = 0;
    
#line 3309 
    goto return_label;
  }
  else ;
  
#line 3311 
  jme_clear_pm(jme);
  
#line 3312 
  jme_phy_on(jme);
  
#line 3313 
  tmp_4 = constant_test_bit(2L,(unsigned long const volatile *)(& jme->flags));
  
#line 3313 
  if (tmp_4 != 0) 
#line 3314 
                  jme_set_settings(netdev,& jme->old_ecmd); else 
#line 3316 
                                                                 jme_reset_phy_processor(jme);
  
#line 3317 
  jme_phy_calibration(jme);
  
#line 3318 
  jme_phy_setEA(jme);
  
#line 3319 
  jme_start_irq(jme);
  
#line 3320 
  netif_device_attach(netdev);
  
#line 3322 
  atomic_inc(& jme->link_changing);
  
#line 3324 
  jme_reset_link(jme);
  
#line 3326 
  __retres = 0;
  return_label: 
#line 3326 
                return __retres;
}


#line 3329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static struct dev_pm_ops const jme_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & jme_suspend, .resume = & jme_resume, .freeze = & jme_suspend, .thaw = & jme_resume, .poweroff = & jme_suspend, .restore = & jme_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 3337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static struct pci_device_id const jme_pci_tbl[3U] = {{.vendor = 6523U, .device = 592U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 6523U, .device = 608U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 3343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static struct pci_driver jme_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "jme", .id_table = (struct pci_device_id const *)(& jme_pci_tbl), .probe = & jme_init_one, .remove = & jme_remove_one, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = & jme_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & jme_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static int jme_init_module(void)
{
  int tmp;
  
#line 3355 
  printk("\001",(char *)"1.0.8");
  
#line 3356 
  tmp = ldv___pci_register_driver_113(& jme_driver,& __this_module,"jme");
  
#line 3356 
  return tmp;
}


#line 3360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
static void jme_cleanup_module(void)
{
  
#line 3362 
  ldv_pci_unregister_driver_114(& jme_driver);
  
#line 3363 
  return;
}


#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/jme.c"
struct pci_device_id const __mod_pci__jme_pci_tbl_device_table[3U];

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int (*ldv_emg_alias_eth_validate_addr_6)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
struct pci_driver *ldv_emg_alias_jme_driver_2 = & jme_driver;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = & jme_pcc_tasklet;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
struct dev_pm_ops *ldv_emg_alias_jme_pm_ops_3 = (struct dev_pm_ops *)(& jme_pm_ops);

#line 62 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 63 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0);


#line 67 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 68 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 69 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 70 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 71 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_get_regs_20(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 77 
  jme_get_regs(arg0,arg1,arg2);
  
#line 78 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_get_drvinfo_9(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 82 
  jme_get_drvinfo(arg0,arg1);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_macaddr_14(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 87 
  tmp = jme_set_macaddr(arg0,arg1);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 92 
  tmp = jme_set_settings(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 97 
  tmp = jme_close(arg0);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_nway_reset_22(struct net_device *arg0)
{
  int tmp;
  
#line 102 
  tmp = jme_nway_reset(arg0);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_resume_4(struct device *arg0)
{
  int tmp;
  
#line 107 
  tmp = jme_resume(arg0);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 112 
  jme_get_pauseparam(arg0,arg1);
  
#line 113 
  return;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_set_msglevel_23(struct net_device *arg0, unsigned int arg1)
{
  
#line 117 
  jme_set_msglevel(arg0,arg1);
  
#line 118 
  return;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
unsigned int ldv_emg_wrapper_jme_get_msglevel_12(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 122 
  tmp = jme_get_msglevel(arg0);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_get_settings_15(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 127 
  tmp = jme_get_settings(arg0,arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_features_8(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 132 
  tmp = jme_set_features(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 137 
  tmp = jme_get_eeprom(arg0,arg1,arg2);
  
#line 137 
  return tmp;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_coalesce_26(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 142 
  tmp = jme_set_coalesce(arg0,arg1);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_change_mtu_5(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 147 
  tmp = jme_change_mtu(arg0,arg1);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_ioctl_18(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 152 
  tmp = jme_ioctl(arg0,arg1,arg2);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_eeprom_11(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 157 
  tmp = jme_set_eeprom(arg0,arg1,arg2);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_get_regs_len_25(struct net_device *arg0)
{
  int tmp;
  
#line 162 
  tmp = jme_get_regs_len(arg0);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
enum netdev_tx ldv_emg_wrapper_jme_start_xmit_13(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 167 
  tmp = jme_start_xmit(arg0,arg1);
  
#line 167 
  return tmp;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_init_one_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 172 
  tmp = jme_init_one(arg0,(struct pci_device_id const *)arg1);
  
#line 172 
  return tmp;
}


#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
unsigned int ldv_emg_wrapper_jme_get_link_7(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 177 
  tmp = jme_get_link(arg0);
  
#line 177 
  return tmp;
}


#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_jme_init_module(void)
{
  int tmp;
  
#line 182 
  tmp = jme_init_module();
  
#line 182 
  return tmp;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
unsigned long long ldv_emg_wrapper_jme_fix_features_10(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 186 
  tmp = jme_fix_features(arg0,arg1);
  
#line 186 
  return tmp;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_wol_19(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 191 
  tmp = jme_set_wol(arg0,arg1);
  
#line 191 
  return tmp;
}


#line 195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_tx_timeout_21(struct net_device *arg0)
{
  
#line 196 
  jme_tx_timeout(arg0);
  
#line 197 
  return;
}


#line 200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_netpoll_28(struct net_device *arg0)
{
  
#line 201 
  jme_netpoll(arg0);
  
#line 202 
  return;
}


#line 205  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_get_coalesce_24(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 206 
  tmp = jme_get_coalesce(arg0,arg1);
  
#line 206 
  return tmp;
}


#line 210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_set_multi_27(struct net_device *arg0)
{
  
#line 211 
  jme_set_multi(arg0);
  
#line 212 
  return;
}


#line 215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_remove_one_4(struct pci_dev *arg0)
{
  
#line 216 
  jme_remove_one(arg0);
  
#line 217 
  return;
}


#line 220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_get_eeprom_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 221 
  tmp = jme_get_eeprom_len(arg0);
  
#line 221 
  return tmp;
}


#line 225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 226 
  tmp = jme_suspend(arg0);
  
#line 226 
  return tmp;
}


#line 230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_jme_cleanup_module(void)
{
  
#line 231 
  jme_cleanup_module();
  
#line 232 
  return;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_set_pauseparam_16(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 235 
  tmp = jme_set_pauseparam(arg0,arg1);
  
#line 235 
  return tmp;
}


#line 239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
int ldv_emg_wrapper_jme_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 240 
  tmp = jme_open(arg0);
  
#line 240 
  return tmp;
}


#line 244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_shutdown_2(struct pci_dev *arg0)
{
  
#line 245 
  jme_shutdown(arg0);
  
#line 246 
  return;
}


#line 249  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
void ldv_emg_wrapper_jme_get_wol_17(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 250 
  jme_get_wol(arg0,arg1);
  
#line 251 
  return;
}


#line 287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void atomic_add(int i, atomic_t *v)
{
  
#line 290 
  ldv_atomic_add(i,v);
  
#line 291 
  return;
}


#line 294  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void atomic_sub(int i, atomic_t *v)
{
  
#line 297 
  ldv_atomic_sub(i,v);
  
#line 298 
  return;
}


#line 308  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 311 
  ldv_atomic_inc(v);
  
#line 312 
  return;
}


#line 315  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 318 
  ldv_atomic_dec(v);
  
#line 319 
  return;
}


#line 322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 325 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 325 
  return tmp;
}


#line 658  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 661 
  tmp = ldv_kmalloc(size,flags);
  
#line 661 
  return tmp;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 939 
  ldv_spin_model_lock((char *)"macaddr_lock_of_jme_adapter");
  
#line 941 
  spin_lock_bh(lock);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 949 
  ldv_spin_model_unlock((char *)"macaddr_lock_of_jme_adapter");
  
#line 951 
  spin_unlock_bh(lock);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_schedule_75(struct tasklet_struct *t)
{
  
#line 959 
  ldv_emg_tasklet_schedule(t);
  
#line 960 
  return;
}


#line 963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_schedule_76(struct tasklet_struct *t)
{
  
#line 967 
  ldv_emg_tasklet_schedule(t);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_schedule_77(struct tasklet_struct *t)
{
  
#line 975 
  ldv_emg_tasklet_schedule(t);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_schedule_78(struct tasklet_struct *t)
{
  
#line 983 
  ldv_emg_tasklet_schedule(t);
  
#line 984 
  return;
}


#line 987  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_hi_schedule_79(struct tasklet_struct *t)
{
  
#line 991 
  ldv_emg_tasklet_hi_schedule(t);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_hi_schedule_80(struct tasklet_struct *t)
{
  
#line 999 
  ldv_emg_tasklet_hi_schedule(t);
  
#line 1000 
  return;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 1007 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1009 
  spin_lock_bh(lock);
  
#line 1010 
  return;
}


#line 1013  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 1017 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1019 
  spin_unlock_bh(lock);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1027 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1027 
  return tmp;
}


#line 1031  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_free_irq_84(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1035 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1036 
  return;
}


#line 1039  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_init_85(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1043 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1044 
  return;
}


#line 1047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_init_86(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1051 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1052 
  return;
}


#line 1055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_init_87(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1059 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1060 
  return;
}


#line 1063  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_init_88(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1067 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1068 
  return;
}


#line 1071  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_89(spinlock_t *lock)
{
  
#line 1075 
  ldv_spin_model_lock((char *)"macaddr_lock_of_jme_adapter");
  
#line 1077 
  spin_lock_bh(lock);
  
#line 1078 
  return;
}


#line 1081  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_90(spinlock_t *lock)
{
  
#line 1085 
  ldv_spin_model_unlock((char *)"macaddr_lock_of_jme_adapter");
  
#line 1087 
  spin_unlock_bh(lock);
  
#line 1088 
  return;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_91(spinlock_t *lock)
{
  
#line 1095 
  ldv_spin_model_lock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1097 
  spin_lock_bh(lock);
  
#line 1098 
  return;
}


#line 1101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_92(spinlock_t *lock)
{
  
#line 1105 
  ldv_spin_model_unlock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1107 
  spin_unlock_bh(lock);
  
#line 1108 
  return;
}


#line 1111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_93(spinlock_t *lock)
{
  
#line 1115 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1117 
  spin_lock_bh(lock);
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_94(spinlock_t *lock)
{
  
#line 1125 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1127 
  spin_unlock_bh(lock);
  
#line 1128 
  return;
}


#line 1131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_95(spinlock_t *lock)
{
  
#line 1135 
  ldv_spin_model_lock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1137 
  spin_lock_bh(lock);
  
#line 1138 
  return;
}


#line 1141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_96(spinlock_t *lock)
{
  
#line 1145 
  ldv_spin_model_unlock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1147 
  spin_unlock_bh(lock);
  
#line 1148 
  return;
}


#line 1151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_97(spinlock_t *lock)
{
  
#line 1155 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1157 
  spin_lock_bh(lock);
  
#line 1158 
  return;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_98(spinlock_t *lock)
{
  
#line 1165 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1167 
  spin_unlock_bh(lock);
  
#line 1168 
  return;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_99(spinlock_t *lock)
{
  
#line 1175 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1177 
  spin_lock_bh(lock);
  
#line 1178 
  return;
}


#line 1181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_100(spinlock_t *lock)
{
  
#line 1185 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1187 
  spin_unlock_bh(lock);
  
#line 1188 
  return;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_101(spinlock_t *lock)
{
  
#line 1195 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1197 
  spin_lock_bh(lock);
  
#line 1198 
  return;
}


#line 1201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_102(spinlock_t *lock)
{
  
#line 1205 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1207 
  spin_unlock_bh(lock);
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_103(spinlock_t *lock)
{
  
#line 1215 
  ldv_spin_model_lock((char *)"phy_lock_of_jme_adapter");
  
#line 1217 
  spin_lock_bh(lock);
  
#line 1218 
  return;
}


#line 1221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_104(spinlock_t *lock)
{
  
#line 1225 
  ldv_spin_model_unlock((char *)"phy_lock_of_jme_adapter");
  
#line 1227 
  spin_unlock_bh(lock);
  
#line 1228 
  return;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_lock_bh_105(spinlock_t *lock)
{
  
#line 1235 
  ldv_spin_model_lock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1237 
  spin_lock_bh(lock);
  
#line 1238 
  return;
}


#line 1241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_spin_unlock_bh_106(spinlock_t *lock)
{
  
#line 1245 
  ldv_spin_model_unlock((char *)"rxmcs_lock_of_jme_adapter");
  
#line 1247 
  spin_unlock_bh(lock);
  
#line 1248 
  return;
}


#line 1251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_107(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1255 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1255 
  return tmp;
}


#line 1259  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_tasklet_init_108(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1263 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1264 
  return;
}


#line 1267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static int ldv_register_netdev_109(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1271 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1271 
  return tmp;
}


#line 1275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1)
{
  
#line 1279 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1280 
  return;
}


#line 1283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_unregister_netdev_111(struct net_device *ldv_func_arg1)
{
  
#line 1287 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1288 
  return;
}


#line 1291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1)
{
  
#line 1295 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1296 
  return;
}


#line 1299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static int ldv___pci_register_driver_113(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1303 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1303 
  return tmp;
}


#line 1307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/weaver/.tmp_jme.c.aux"
static void ldv_pci_unregister_driver_114(struct pci_driver *ldv_func_arg1)
{
  
#line 1311 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1312 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 81 
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 85 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 86 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 88 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 90 
void *ldv_interrupt_scenario_16(void *arg0);


#line 91 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 92 
void *ldv_pm_ops_scenario_14(void *arg0);


#line 93 
int main(void);


#line 94 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 95 
void *ldv_pci_scenario_15(void *arg0);


#line 97 
void *ldv_initialization_1(void *arg0);


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 115 
  tmp = ldv_undef_int();
  
#line 115 
  switch (tmp) {
    case 0: 
#line 116 
    ;
    
#line 117 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 118 
    __VERIFIER_assume(ret == 0);
    
#line 119 
    goto ldv_44730;
    default: 
#line 121 
    ;
    
#line 121 
    __VERIFIER_assume(0);
  }
  ldv_44730: 
#line 122 
  ;
  
#line 123 
  return;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 130 
  tmp = ldv_undef_int();
  
#line 130 
  switch (tmp) {
    case 0: 
#line 131 
    ;
    
#line 132 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 133 
    cf_arg_13->arg0 = arg0;
    
#line 134 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 135 
    __VERIFIER_assume(ret == 0);
    
#line 136 
    goto ldv_44738;
    default: 
#line 138 
    ;
    
#line 138 
    __VERIFIER_assume(0);
  }
  ldv_44738: 
#line 139 
  ;
  
#line 140 
  return;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 147 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_jme_driver_2;
  
#line 151 
  tmp_0 = ldv_undef_int();
  
#line 151 
  if (tmp_0 != 0) {
    
#line 153 
    ldv_7_pci_driver = arg0;
    
#line 157 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 161 
    __retres = 0;
    
#line 161 
    goto return_label;
  }
  else {
    int tmp;
    
#line 168 
    tmp = ldv_undef_int_negative();
    
#line 168 
    __retres = tmp;
    
#line 168 
    goto return_label;
  }
  return_label: 
#line 151 
                return __retres;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 183 
  arg0->func = arg1;
  
#line 184 
  arg0->data = arg2;
  
#line 185 
  arg0->count.counter = 0;
  
#line 189 
  goto return_label;
  return_label: 
#line 191 
                return;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_6_ldv_param_0_2;
  struct tasklet_struct *ldv_6_tasklet_struct;
  
#line 203 
  ldv_6_tasklet_struct = arg0;
  
#line 210 
  if (ldv_6_tasklet_struct->count.counter == 0) 
#line 212 
                                                (*ldv_emg_alias_None_2)(ldv_6_ldv_param_0_2); else ;
  
#line 220 
  goto return_label;
  return_label: 
#line 222 
                return;
}


#line 227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_16 *cf_arg_16;
  int tmp;
  
#line 230 
  tmp = ldv_undef_int();
  
#line 230 
  switch (tmp) {
    case 0: 
#line 231 
    ;
    
#line 232 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_16 *)ldv_xmalloc(32UL);
    
#line 233 
    cf_arg_16->arg0 = arg0;
    
#line 234 
    cf_arg_16->arg1 = arg1;
    
#line 235 
    cf_arg_16->arg2 = arg2;
    
#line 236 
    cf_arg_16->arg3 = arg3;
    
#line 237 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 238 
    __VERIFIER_assume(ret == 0);
    
#line 239 
    goto ldv_44770;
    default: 
#line 241 
    ;
    
#line 241 
    __VERIFIER_assume(0);
  }
  ldv_44770: 
#line 242 
  ;
  
#line 243 
  return;
}


#line 247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  int tmp;
  
#line 250 
  tmp = ldv_undef_int();
  
#line 250 
  switch (tmp) {
    case 0: 
#line 251 
    ;
    
#line 252 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 253 
    __VERIFIER_assume(ret == 0);
    
#line 254 
    goto ldv_44778;
    default: 
#line 256 
    ;
    
#line 256 
    __VERIFIER_assume(0);
  }
  ldv_44778: 
#line 257 
  ;
  
#line 258 
  return;
}


#line 262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 269 
  tmp_0 = ldv_undef_int();
  
#line 269 
  if (tmp_0 != 0) {
    
#line 271 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 275 
    __retres = ldv_4_netdev;
    
#line 275 
    goto return_label;
  }
  else {
    
#line 282 
    __retres = (struct net_device *)0;
    
#line 282 
    goto return_label;
  }
  return_label: 
#line 269 
                return __retres;
}


#line 292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 295 
  tmp = ldv_undef_int();
  
#line 295 
  switch (tmp) {
    case 0: 
#line 296 
    ;
    
#line 297 
    cf_arg_15 = (struct ldv_struct_pci_scenario_15 *)ldv_xmalloc(16UL);
    
#line 298 
    cf_arg_15->arg0 = arg0;
    
#line 299 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_pci_scenario_15,(void *)cf_arg_15);
    
#line 300 
    __VERIFIER_assume(ret == 0);
    
#line 301 
    goto ldv_44792;
    default: 
#line 303 
    ;
    
#line 303 
    __VERIFIER_assume(0);
  }
  ldv_44792: 
#line 304 
  ;
  
#line 305 
  return;
}


#line 309  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_8_ldv_param_0_2;
  struct tasklet_struct *ldv_8_tasklet_struct;
  
#line 316 
  ldv_8_tasklet_struct = arg0;
  
#line 323 
  if (ldv_8_tasklet_struct->count.counter == 0) 
#line 325 
                                                (*ldv_emg_alias_None_2)(ldv_8_ldv_param_0_2); else ;
  
#line 333 
  goto return_label;
  return_label: 
#line 335 
                return;
}


#line 340  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_callback)(int , void *);
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp_0;
  
#line 349 
  struct ldv_struct_interrupt_scenario_16 *data = (struct ldv_struct_interrupt_scenario_16 *)arg0;
  
#line 354 
  if (data != (struct ldv_struct_interrupt_scenario_16 *)0) {
    
#line 355 
    ldv_16_line = data->arg0;
    
#line 356 
    ldv_16_callback = data->arg1;
    
#line 357 
    ldv_16_thread = data->arg2;
    
#line 358 
    ldv_16_data = data->arg3;
    
#line 359 
    ldv_free((void *)data);
  }
  else ;
  
#line 364 
  if (ldv_16_callback != (enum irqreturn (*)(int , void *))0) {
    
#line 366 
    ldv_switch_to_interrupt_context();
    
#line 368 
    ldv_16_ret_val = (*ldv_16_callback)(ldv_16_line,ldv_16_data);
    
#line 370 
    ldv_switch_to_process_context();
  }
  else {
    int tmp;
    
#line 372 
    tmp = ldv_undef_int();
    
#line 372 
    ldv_16_ret_val = (enum irqreturn)tmp;
  }
  
#line 376 
  tmp_0 = ldv_undef_int();
  
#line 376 
  if (tmp_0 != 0) {
    
#line 378 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 382 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 384 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 391 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 400 
  __retres = (void *)0;
  
#line 400 
  goto return_label;
  
#line 402 
  __retres = (void *)0;
  return_label: 
#line 402 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_13_ldv_param_1_3;
  struct ethtool_eeprom *ldv_13_ldv_param_1_13;
  unsigned char *ldv_13_ldv_param_2_10;
  int ldv_13_ldv_param_2_17;
  unsigned long long ldv_13_ldv_param_1_8;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_2;
  struct ethtool_regs *ldv_13_ldv_param_1_19;
  int ldv_13_ldv_param_1_5;
  struct sk_buff *ldv_13_ldv_param_0_11;
  struct net_device *ldv_13_container;
  void *ldv_13_ldv_param_2_20;
  void *ldv_13_ldv_param_1_12;
  struct ifreq *ldv_13_ldv_param_1_16;
  struct ethtool_wolinfo *ldv_13_ldv_param_1_18;
  unsigned int ldv_13_ldv_param_1_21;
  struct ethtool_wolinfo *ldv_13_ldv_param_1_15;
  unsigned long long ldv_13_ldv_param_1_6;
  struct ethtool_eeprom *ldv_13_ldv_param_1_9;
  struct ethtool_coalesce *ldv_13_ldv_param_1_23;
  struct ethtool_cmd *ldv_13_ldv_param_1_4;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_24;
  unsigned char *ldv_13_ldv_param_2_14;
  struct ethtool_coalesce *ldv_13_ldv_param_1_22;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_7;
  int tmp_16;
  
#line 435 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 440 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 441 
    ldv_13_container = data->arg0;
    
#line 442 
    ldv_free((void *)data);
  }
  else ;
  
#line 450 
  goto ldv_call_13;
  
#line 452 
  __retres = (void *)0;
  
#line 452 
  goto return_label;
  ldv_call_13: 
#line 455 
  ;
  
#line 458 
  tmp_16 = ldv_undef_int();
  
#line 458 
  if (tmp_16 != 0) {
    int tmp_0;
    
#line 460 
    ldv_13_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 463 
    tmp_0 = ldv_undef_int();
    
#line 463 
    switch (tmp_0) {
      case 1: 
#line 464 
      ;
      
#line 467 
      ldv_emg_wrapper_jme_get_pauseparam_2(ldv_13_container,ldv_13_ldv_param_1_2);
      
#line 470 
      goto ldv_44842;
      case 2: 
#line 472 
      ;
      
#line 474 
      ldv_13_ldv_param_1_24 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 479 
      ldv_emg_wrapper_jme_set_pauseparam_16(ldv_13_container,ldv_13_ldv_param_1_24);
      
#line 483 
      ldv_free((void *)ldv_13_ldv_param_1_24);
      
#line 486 
      goto ldv_44842;
      case 3: 
#line 488 
      ;
      
#line 491 
      ldv_emg_wrapper_jme_nway_reset_22(ldv_13_container);
      
#line 494 
      goto ldv_44842;
      case 4: 
#line 496 
      ;
      
#line 499 
      ldv_emg_wrapper_jme_set_multi_27(ldv_13_container);
      
#line 502 
      goto ldv_44842;
      case 5: 
#line 504 
      ;
      
#line 506 
      ldv_13_ldv_param_1_23 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 511 
      ldv_emg_wrapper_jme_set_coalesce_26(ldv_13_container,ldv_13_ldv_param_1_23);
      
#line 515 
      ldv_free((void *)ldv_13_ldv_param_1_23);
      
#line 518 
      goto ldv_44842;
      case 6: 
#line 520 
      ;
      
#line 523 
      ldv_emg_wrapper_jme_get_regs_len_25(ldv_13_container);
      
#line 526 
      goto ldv_44842;
      case 7: 
#line 528 
      ;
      
#line 530 
      ldv_13_ldv_param_1_22 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 535 
      ldv_emg_wrapper_jme_get_coalesce_24(ldv_13_container,ldv_13_ldv_param_1_22);
      
#line 539 
      ldv_free((void *)ldv_13_ldv_param_1_22);
      
#line 542 
      goto ldv_44842;
      case 8: 
#line 544 
      ;
      
#line 550 
      ldv_emg_wrapper_jme_set_msglevel_23(ldv_13_container,ldv_13_ldv_param_1_21);
      
#line 556 
      goto ldv_44842;
      case 9: 
#line 558 
      ;
      
#line 561 
      ldv_emg_wrapper_jme_netpoll_28(ldv_13_container);
      
#line 564 
      goto ldv_44842;
      case 10: 
#line 566 
      ;
      
#line 569 
      ldv_emg_wrapper_jme_tx_timeout_21(ldv_13_container);
      
#line 572 
      goto ldv_44842;
      case 11: 
#line 574 
      ;
      
#line 576 
      ldv_13_ldv_param_1_19 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 577 
      ldv_13_ldv_param_2_20 = ldv_xmalloc_unknown_size(0UL);
      
#line 582 
      ldv_emg_wrapper_jme_get_regs_20(ldv_13_container,ldv_13_ldv_param_1_19,ldv_13_ldv_param_2_20);
      
#line 586 
      ldv_free((void *)ldv_13_ldv_param_1_19);
      
#line 587 
      ldv_free(ldv_13_ldv_param_2_20);
      
#line 590 
      goto ldv_44842;
      case 12: 
#line 592 
      ;
      
#line 594 
      ldv_13_ldv_param_1_18 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 599 
      ldv_emg_wrapper_jme_set_wol_19(ldv_13_container,ldv_13_ldv_param_1_18);
      
#line 603 
      ldv_free((void *)ldv_13_ldv_param_1_18);
      
#line 606 
      goto ldv_44842;
      case 13: 
#line 608 
      ;
      
#line 610 
      ldv_13_ldv_param_1_16 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 615 
      ldv_emg_wrapper_jme_ioctl_18(ldv_13_container,ldv_13_ldv_param_1_16,ldv_13_ldv_param_2_17);
      
#line 619 
      ldv_free((void *)ldv_13_ldv_param_1_16);
      
#line 622 
      goto ldv_44842;
      case 14: 
#line 624 
      ;
      
#line 626 
      ldv_13_ldv_param_1_15 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 631 
      ldv_emg_wrapper_jme_get_wol_17(ldv_13_container,ldv_13_ldv_param_1_15);
      
#line 635 
      ldv_free((void *)ldv_13_ldv_param_1_15);
      
#line 638 
      goto ldv_44842;
      case 15: 
#line 640 
      ;
      
#line 642 
      ldv_13_ldv_param_1_13 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 643 
      ldv_13_ldv_param_2_14 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 648 
      ldv_emg_wrapper_jme_get_eeprom_3(ldv_13_container,ldv_13_ldv_param_1_13,ldv_13_ldv_param_2_14);
      
#line 652 
      ldv_free((void *)ldv_13_ldv_param_1_13);
      
#line 653 
      ldv_free((void *)ldv_13_ldv_param_2_14);
      
#line 656 
      goto ldv_44842;
      case 16: 
#line 658 
      ;
      
#line 660 
      ldv_13_ldv_param_1_12 = ldv_xmalloc_unknown_size(0UL);
      
#line 665 
      ldv_emg_wrapper_jme_set_macaddr_14(ldv_13_container,ldv_13_ldv_param_1_12);
      
#line 669 
      ldv_free(ldv_13_ldv_param_1_12);
      
#line 672 
      goto ldv_44842;
      case 17: 
#line 674 
      ;
      
#line 676 
      ldv_13_ldv_param_0_11 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 681 
      ldv_emg_wrapper_jme_start_xmit_13(ldv_13_ldv_param_0_11,ldv_13_container);
      
#line 685 
      ldv_free((void *)ldv_13_ldv_param_0_11);
      
#line 688 
      goto ldv_44842;
      case 18: 
#line 690 
      ;
      
#line 693 
      ldv_emg_wrapper_jme_get_msglevel_12(ldv_13_container);
      
#line 696 
      goto ldv_44842;
      case 19: 
#line 698 
      ;
      
#line 700 
      ldv_13_ldv_param_2_10 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 701 
      ldv_13_ldv_param_1_9 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 706 
      ldv_emg_wrapper_jme_set_eeprom_11(ldv_13_container,ldv_13_ldv_param_1_9,ldv_13_ldv_param_2_10);
      
#line 710 
      ldv_free((void *)ldv_13_ldv_param_2_10);
      
#line 711 
      ldv_free((void *)ldv_13_ldv_param_1_9);
      
#line 714 
      goto ldv_44842;
      case 20: 
#line 716 
      ;
      
#line 719 
      ldv_emg_wrapper_jme_get_eeprom_len_29(ldv_13_container);
      
#line 722 
      goto ldv_44842;
      case 21: 
#line 724 
      ;
      
#line 730 
      ldv_emg_wrapper_jme_fix_features_10(ldv_13_container,ldv_13_ldv_param_1_8);
      
#line 736 
      goto ldv_44842;
      case 22: 
#line 738 
      ;
      
#line 740 
      ldv_13_ldv_param_1_7 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 745 
      ldv_emg_wrapper_jme_get_drvinfo_9(ldv_13_container,ldv_13_ldv_param_1_7);
      
#line 749 
      ldv_free((void *)ldv_13_ldv_param_1_7);
      
#line 752 
      goto ldv_44842;
      case 23: 
#line 754 
      ;
      
#line 760 
      ldv_emg_wrapper_jme_set_features_8(ldv_13_container,ldv_13_ldv_param_1_6);
      
#line 766 
      goto ldv_44842;
      case 24: 
#line 768 
      ;
      
#line 771 
      ldv_emg_wrapper_jme_get_link_7(ldv_13_container);
      
#line 774 
      goto ldv_44842;
      case 25: 
#line 776 
      ;
      
#line 782 
      ldv_emg_wrapper_jme_change_mtu_5(ldv_13_container,ldv_13_ldv_param_1_5);
      
#line 788 
      goto ldv_44842;
      case 26: 
#line 790 
      ;
      
#line 793 
      (*ldv_emg_alias_eth_validate_addr_6)(ldv_13_container);
      
#line 796 
      goto ldv_44842;
      case 27: 
#line 798 
      ;
      
#line 800 
      ldv_13_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 805 
      ldv_emg_wrapper_jme_set_settings_4(ldv_13_container,ldv_13_ldv_param_1_4);
      
#line 809 
      ldv_free((void *)ldv_13_ldv_param_1_4);
      
#line 812 
      goto ldv_44842;
      case 28: 
#line 814 
      ;
      
#line 816 
      ldv_13_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 821 
      ldv_emg_wrapper_jme_get_settings_15(ldv_13_container,ldv_13_ldv_param_1_3);
      
#line 825 
      ldv_free((void *)ldv_13_ldv_param_1_3);
      
#line 828 
      goto ldv_44842;
      default: 
#line 830 
      ;
      
#line 830 
      __VERIFIER_assume(0);
    }
    ldv_44842: 
#line 833 
    ;
    
#line 833 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 840 
    goto ldv_call_13;
  }
  else {
    
#line 848 
    __retres = (void *)0;
    
#line 848 
    goto return_label;
  }
  
#line 851 
  __retres = (void *)0;
  return_label: 
#line 851 
                return __retres;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_14(void *arg0)
{
  void *__retres;
  struct device *ldv_14_device;
  int tmp;
  
#line 859 
  struct dev_pm_ops *ldv_14_pm_ops = ldv_emg_alias_jme_pm_ops_3;
  
#line 870 
  goto ldv_do_14;
  
#line 872 
  __retres = (void *)0;
  
#line 872 
  goto return_label;
  ldv_do_14: 
#line 875 
  ;
  
#line 878 
  tmp = ldv_undef_int();
  
#line 878 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 879 
    ;
    
#line 881 
    if (ldv_14_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 883 
                                                                    (*(ldv_14_pm_ops->runtime_idle))(ldv_14_device); else ;
    
#line 891 
    goto ldv_do_14;
    case 2: 
#line 894 
    ;
    
#line 896 
    if (ldv_14_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 898 
      (*(ldv_14_pm_ops->runtime_suspend))(ldv_14_device); else ;
    
#line 903 
    if (ldv_14_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 905 
      (*(ldv_14_pm_ops->runtime_resume))(ldv_14_device); else ;
    
#line 913 
    goto ldv_do_14;
    case 3: 
#line 916 
    ;
    
#line 918 
    if (ldv_14_pm_ops->prepare != (int (*)(struct device *))0) 
#line 920 
                                                               (*(ldv_14_pm_ops->prepare))(ldv_14_device); else ;
    
#line 924 
    tmp_0 = ldv_undef_int();
    
#line 924 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 925 
      ;
      
#line 928 
      ldv_emg_wrapper_jme_suspend_2(ldv_14_device);
      
#line 931 
      tmp_1 = ldv_undef_int();
      
#line 931 
      if (tmp_1 != 0) {
        
#line 933 
        if (ldv_14_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 935 
          (*(ldv_14_pm_ops->suspend_noirq))(ldv_14_device); else ;
        
#line 940 
        if (ldv_14_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 942 
          (*(ldv_14_pm_ops->resume_noirq))(ldv_14_device); else ;
      }
      else {
        
#line 949 
        if (ldv_14_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 951 
          (*(ldv_14_pm_ops->suspend_late))(ldv_14_device); else ;
        
#line 956 
        if (ldv_14_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 958 
          (*(ldv_14_pm_ops->resume_early))(ldv_14_device); else ;
      }
      
#line 965 
      ldv_emg_wrapper_jme_resume_4(ldv_14_device);
      
#line 968 
      goto ldv_44881;
      case 2: 
#line 970 
      ;
      
#line 973 
      ldv_emg_wrapper_jme_suspend_2(ldv_14_device);
      
#line 976 
      tmp_2 = ldv_undef_int();
      
#line 976 
      if (tmp_2 != 0) {
        
#line 978 
        if (ldv_14_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 980 
          (*(ldv_14_pm_ops->freeze_late))(ldv_14_device); else ;
        
#line 985 
        if (ldv_14_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 987 
          (*(ldv_14_pm_ops->thaw_early))(ldv_14_device); else ;
      }
      else {
        
#line 994 
        if (ldv_14_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 996 
          (*(ldv_14_pm_ops->freeze_noirq))(ldv_14_device); else ;
        
#line 1001 
        if (ldv_14_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1003 
          (*(ldv_14_pm_ops->thaw_noirq))(ldv_14_device); else ;
      }
      
#line 1010 
      ldv_emg_wrapper_jme_resume_4(ldv_14_device);
      
#line 1013 
      goto ldv_44881;
      case 3: 
#line 1015 
      ;
      
#line 1018 
      ldv_emg_wrapper_jme_suspend_2(ldv_14_device);
      
#line 1021 
      tmp_3 = ldv_undef_int();
      
#line 1021 
      if (tmp_3 != 0) {
        
#line 1023 
        if (ldv_14_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1025 
          (*(ldv_14_pm_ops->poweroff_late))(ldv_14_device); else ;
        
#line 1030 
        if (ldv_14_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1032 
          (*(ldv_14_pm_ops->restore_early))(ldv_14_device); else ;
      }
      else {
        
#line 1039 
        if (ldv_14_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1041 
          (*(ldv_14_pm_ops->poweroff_noirq))(ldv_14_device); else ;
        
#line 1046 
        if (ldv_14_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1048 
          (*(ldv_14_pm_ops->restore_noirq))(ldv_14_device); else ;
      }
      
#line 1055 
      ldv_emg_wrapper_jme_resume_4(ldv_14_device);
      
#line 1058 
      goto ldv_44881;
      default: 
#line 1060 
      ;
      
#line 1060 
      __VERIFIER_assume(0);
    }
    ldv_44881: 
#line 1063 
    ;
    
#line 1063 
    if (ldv_14_pm_ops->complete != (void (*)(struct device *))0) 
#line 1065 
                                                                 (*(ldv_14_pm_ops->complete))(ldv_14_device); else ;
    
#line 1073 
    goto ldv_do_14;
    case 4: 
#line 1076 
    ;
    
#line 1082 
    __retres = (void *)0;
    
#line 1082 
    goto return_label;
    default: 
#line 1085 
    ;
    
#line 1085 
    __VERIFIER_assume(0);
  }
  
#line 1088 
  __retres = (void *)0;
  return_label: 
#line 1088 
                return __retres;
}


#line 1093  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 1096 
  ldv_initialize();
  
#line 1099 
  ldv_initialization_1((void *)0);
  
#line 1101 
  __retres = 0;
  
#line 1101 
  return __retres;
}


#line 1106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1109 
  tmp = ldv_undef_int();
  
#line 1109 
  switch (tmp) {
    case 0: 
#line 1110 
    ;
    
#line 1111 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1112 
    __VERIFIER_assume(ret == 0);
    
#line 1113 
    goto ldv_44896;
    default: 
#line 1115 
    ;
    
#line 1115 
    __VERIFIER_assume(0);
  }
  ldv_44896: 
#line 1116 
  ;
  
#line 1117 
  return;
}


#line 1121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_15(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_15_resource_1;
  struct pci_device_id *ldv_15_ldv_param_1_2;
  struct pm_message ldv_15_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1126 
  struct pci_driver *ldv_15_container = ldv_emg_alias_jme_driver_2;
  
#line 1127 
  int ldv_15_ret = ldv_undef_int();
  
#line 1130 
  struct ldv_struct_pci_scenario_15 *data = (struct ldv_struct_pci_scenario_15 *)arg0;
  
#line 1134 
  ldv_15_ret = ldv_undef_int();
  
#line 1137 
  if (data != (struct ldv_struct_pci_scenario_15 *)0) {
    
#line 1138 
    ldv_15_container = data->arg0;
    
#line 1139 
    ldv_free((void *)data);
  }
  else ;
  
#line 1150 
  goto ldv_main_15;
  
#line 1152 
  __retres = (void *)0;
  
#line 1152 
  goto return_label;
  ldv_main_15: 
#line 1155 
  ;
  
#line 1158 
  tmp_2 = ldv_undef_int();
  
#line 1158 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1160 
    ldv_15_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1165 
    ldv_pre_probe();
    
#line 1167 
    ldv_15_ret = ldv_emg_wrapper_jme_init_one_3(ldv_15_resource_1,ldv_15_ldv_param_1_2);
    
#line 1169 
    ldv_15_ret = ldv_post_probe(ldv_15_ret);
    
#line 1173 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1176 
    tmp_1 = ldv_undef_int();
    
#line 1176 
    if (tmp_1 != 0) {
      
#line 1178 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 1185 
      goto ldv_call_15;
    }
    else {
      
#line 1189 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 1196 
      goto ldv_main_15;
    }
  }
  else {
    
#line 1208 
    __retres = (void *)0;
    
#line 1208 
    goto return_label;
  }
  
#line 1211 
  __retres = (void *)0;
  
#line 1211 
  goto return_label;
  ldv_call_15: 
#line 1214 
  ;
  
#line 1217 
  tmp_3 = ldv_undef_int();
  
#line 1217 
  switch (tmp_3) {
    case 1: 
#line 1218 
    ;
    
#line 1227 
    goto ldv_call_15;
    case 2: 
#line 1230 
    ;
    
#line 1232 
    if (ldv_15_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1234 
      ldv_15_ret = (*(ldv_15_container->suspend))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1236 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1238 
         ldv_15_ret = ldv_undef_int();
    
#line 1243 
    if (ldv_15_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1245 
      ldv_15_ret = (*(ldv_15_container->suspend_late))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1247 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1249 
         ldv_15_ret = ldv_undef_int();
    
#line 1254 
    if (ldv_15_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1256 
      (*(ldv_15_container->resume_early))(ldv_15_resource_1); else ;
    
#line 1261 
    if (ldv_15_container->resume != (int (*)(struct pci_dev *))0) 
#line 1263 
                                                                  (*(ldv_15_container->resume))(ldv_15_resource_1); else ;
    
#line 1271 
    goto ldv_call_15;
    case 3: 
#line 1274 
    ;
    
#line 1277 
    ldv_emg_wrapper_jme_shutdown_2(ldv_15_resource_1);
    
#line 1282 
    ldv_emg_wrapper_jme_remove_one_4(ldv_15_resource_1);
    
#line 1289 
    goto ldv_main_15;
    default: 
#line 1292 
    ;
    
#line 1292 
    __VERIFIER_assume(0);
  }
  
#line 1295 
  __retres = (void *)0;
  return_label: 
#line 1295 
                return __retres;
}


#line 1300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1303 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_jme_driver_2;
  
#line 1306 
  ldv_10_pci_driver = arg0;
  
#line 1310 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 1314 
  goto return_label;
  return_label: 
#line 1316 
                return;
}


#line 1321  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1328 
  ldv_1_ret = ldv_emg_jme_init_module();
  
#line 1329 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1332 
  tmp = ldv_undef_int();
  
#line 1332 
  if (tmp != 0) {
    
#line 1334 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1338 
    __retres = (void *)0;
    
#line 1338 
    goto return_label;
  }
  else {
    
#line 1342 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1347 
    ldv_emg_jme_cleanup_module();
    
#line 1351 
    __retres = (void *)0;
    
#line 1351 
    goto return_label;
  }
  
#line 1354 
  __retres = (void *)0;
  return_label: 
#line 1354 
                return __retres;
}


#line 1359  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 1365 
  ldv_5_netdev = arg0;
  
#line 1370 
  ldv_emg_wrapper_jme_close_2(ldv_5_netdev);
  
#line 1374 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 1378 
  goto return_label;
  return_label: 
#line 1380 
                return;
}


#line 1385  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1391 
  ldv_3_line = (int)arg0;
  
#line 1395 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1399 
  goto return_label;
  return_label: 
#line 1401 
                return;
}


#line 1406  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1412 
  ldv_2_netdev = arg0;
  
#line 1413 
  ldv_free((void *)ldv_2_netdev);
  
#line 1417 
  goto return_label;
  return_label: 
#line 1419 
                return;
}


#line 1424  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1428 
  int ldv_11_ret = ldv_undef_int();
  
#line 1431 
  ldv_11_ret = ldv_undef_int();
  
#line 1434 
  tmp_3 = ldv_undef_int();
  
#line 1434 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1436 
    ldv_11_netdev = arg0;
    
#line 1441 
    ldv_11_ret = ldv_emg_wrapper_jme_open_2(ldv_11_netdev);
    
#line 1444 
    tmp_1 = ldv_undef_int();
    
#line 1444 
    if (tmp_1 != 0) {
      
#line 1446 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1450 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1454 
      __retres = 0;
      
#line 1454 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1461 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1462 
      ldv_failed_register_netdev();
      
#line 1463 
      tmp_0 = ldv_undef_int_negative();
      
#line 1463 
      __retres = tmp_0;
      
#line 1463 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1471 
    ldv_failed_register_netdev();
    
#line 1472 
    tmp_2 = ldv_undef_int_negative();
    
#line 1472 
    __retres = tmp_2;
    
#line 1472 
    goto return_label;
  }
  return_label: 
#line 1434 
                return __retres;
}


#line 1482  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/jme.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_callback)(int , void *);
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 1492 
  tmp_0 = ldv_undef_int();
  
#line 1492 
  if (tmp_0 != 0) {
    
#line 1494 
    ldv_12_line = (int)arg0;
    
#line 1495 
    ldv_12_callback = arg1;
    
#line 1496 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 1497 
    ldv_12_data = arg4;
    
#line 1501 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 1505 
    __retres = 0;
    
#line 1505 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1512 
    tmp = ldv_undef_int_negative();
    
#line 1512 
    __retres = tmp;
    
#line 1512 
    goto return_label;
  }
  return_label: 
#line 1492 
                return __retres;
}


