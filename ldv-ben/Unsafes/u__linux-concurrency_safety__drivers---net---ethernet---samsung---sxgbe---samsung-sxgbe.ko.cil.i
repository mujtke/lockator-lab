/* Generated by Frama-C */

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 3836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct sxgbe_dma_ops;

#line 3847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct sxgbe_extra_stats {
   unsigned long tx_underflow_irq ;
   unsigned long tx_process_stopped_irq ;
   unsigned long tx_ctxt_desc_err ;
   unsigned long tx_threshold ;
   unsigned long rx_threshold ;
   unsigned long tx_pkt_n ;
   unsigned long rx_pkt_n ;
   unsigned long normal_irq_n ;
   unsigned long tx_normal_irq_n ;
   unsigned long rx_normal_irq_n ;
   unsigned long napi_poll ;
   unsigned long tx_clean ;
   unsigned long tx_reset_ic_bit ;
   unsigned long rx_process_stopped_irq ;
   unsigned long rx_underflow_irq ;
   unsigned long fatal_bus_error_irq ;
   unsigned long tx_read_transfer_err ;
   unsigned long tx_write_transfer_err ;
   unsigned long tx_desc_access_err ;
   unsigned long tx_buffer_access_err ;
   unsigned long tx_data_transfer_err ;
   unsigned long rx_read_transfer_err ;
   unsigned long rx_write_transfer_err ;
   unsigned long rx_desc_access_err ;
   unsigned long rx_buffer_access_err ;
   unsigned long rx_data_transfer_err ;
   unsigned long tx_lpi_entry_n ;
   unsigned long tx_lpi_exit_n ;
   unsigned long rx_lpi_entry_n ;
   unsigned long rx_lpi_exit_n ;
   unsigned long eee_wakeup_error_n ;
   unsigned long rx_code_gmii_err ;
   unsigned long rx_watchdog_err ;
   unsigned long rx_crc_err ;
   unsigned long rx_gaint_pkt_err ;
   unsigned long ip_hdr_err ;
   unsigned long ip_payload_err ;
   unsigned long overflow_error ;
   unsigned long len_pkt ;
   unsigned long mac_ctl_pkt ;
   unsigned long dcb_ctl_pkt ;
   unsigned long arp_pkt ;
   unsigned long oam_pkt ;
   unsigned long untag_okt ;
   unsigned long other_pkt ;
   unsigned long svlan_tag_pkt ;
   unsigned long cvlan_tag_pkt ;
   unsigned long dvlan_ocvlan_icvlan_pkt ;
   unsigned long dvlan_osvlan_isvlan_pkt ;
   unsigned long dvlan_osvlan_icvlan_pkt ;
   unsigned long dvan_ocvlan_icvlan_pkt ;
   unsigned long not_ip_pkt ;
   unsigned long ip4_tcp_pkt ;
   unsigned long ip4_udp_pkt ;
   unsigned long ip4_icmp_pkt ;
   unsigned long ip4_unknown_pkt ;
   unsigned long ip6_tcp_pkt ;
   unsigned long ip6_udp_pkt ;
   unsigned long ip6_icmp_pkt ;
   unsigned long ip6_unknown_pkt ;
   unsigned long vlan_filter_match ;
   unsigned long sa_filter_fail ;
   unsigned long da_filter_fail ;
   unsigned long hash_filter_pass ;
   unsigned long l3_filter_match ;
   unsigned long l4_filter_match ;
   unsigned long timestamp_dropped ;
   unsigned long rx_msg_type_no_ptp ;
   unsigned long rx_ptp_type_sync ;
   unsigned long rx_ptp_type_follow_up ;
   unsigned long rx_ptp_type_delay_req ;
   unsigned long rx_ptp_type_delay_resp ;
   unsigned long rx_ptp_type_pdelay_req ;
   unsigned long rx_ptp_type_pdelay_resp ;
   unsigned long rx_ptp_type_pdelay_follow_up ;
   unsigned long rx_ptp_announce ;
   unsigned long rx_ptp_mgmt ;
   unsigned long rx_ptp_signal ;
   unsigned long rx_ptp_resv_msg_type ;
};

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_dma_ops {
   int (*init)(void *, int , int ) ;
   void (*cha_init)(void *, int , int , int , dma_addr_t , dma_addr_t , int , int ) ;
   void (*enable_dma_transmission)(void *, int ) ;
   void (*enable_dma_irq)(void *, int ) ;
   void (*disable_dma_irq)(void *, int ) ;
   void (*start_tx)(void *, int ) ;
   void (*start_tx_queue)(void *, int ) ;
   void (*stop_tx)(void *, int ) ;
   void (*stop_tx_queue)(void *, int ) ;
   void (*start_rx)(void *, int ) ;
   void (*stop_rx)(void *, int ) ;
   int (*tx_dma_int_status)(void *, int , struct sxgbe_extra_stats *) ;
   int (*rx_dma_int_status)(void *, int , struct sxgbe_extra_stats *) ;
   void (*rx_watchdog)(void *, u32 ) ;
   void (*enable_tso)(void *, u8 ) ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct sxgbe_desc_ops;

#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_tx_norm_desc;

#line 397 
struct sxgbe_rx_norm_desc;

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct __anonstruct_pkt_len_634 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) total_pkt_len : 15 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved1 : 1 ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
union __anonunion_tx_pkt_len_633 {
   u16 tcp_payload_len ;
   struct __anonstruct_pkt_len_634 pkt_len ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct __anonstruct_tx_rd_des23_632 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) buf1_size : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) vlan_tag_ctl : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) buf2_size : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timestmp_enable : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) int_on_com : 1 ;
   union __anonunion_tx_pkt_len_633 tx_pkt_len ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) cksum_ctl : 2 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tse_bit : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) tcp_hdr_len : 4 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) sa_insert_ctl : 3 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) crc_pad_ctl : 2 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_desc : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_desc : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ctxt_bit : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct __anonstruct_tx_wb_des23_635 {
   u32 reserved1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(31))) reserved2 : 31 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
union __anonunion_tdes23_631 {
   struct __anonstruct_tx_rd_des23_632 tx_rd_des23 ;
   struct __anonstruct_tx_wb_des23_635 tx_wb_des23 ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct sxgbe_tx_norm_desc {
   u64 tdes01 ;
   union __anonunion_tdes23_631 tdes23 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
union __anonunion_rx_wb_des01_637 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) out_vlan_tag : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) in_vlan_tag : 16 ;
   u32 rss_hash ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
union __anonunion_rdes01_636 {
   u64 rdes01 ;
   union __anonunion_rx_wb_des01_637 rx_wb_des01 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct __anonstruct_rx_rd_des23_639 {
   u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(62))) buf2_addr : 62 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) int_on_com : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct __anonstruct_rx_wb_des23_640 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) hdr_len : 10 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) rdes2_reserved : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) elrd_val : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) iovt_sel : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) res_pkt : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_filter_match : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sa_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) da_filter_fail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hash_filter_pass : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) macaddr_filter_match : 8 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l3_filter_match : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_filter_match : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) l34_filter_num : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) pkt_len : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rdes3_reserved : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err_summary : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) err_l2_type : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) layer34_pkt_type : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_coagulation_pkt : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_seq_pkt : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rss_valid : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) context_des_avail : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) recv_context_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
union __anonunion_rdes23_638 {
   struct __anonstruct_rx_rd_des23_639 rx_rd_des23 ;
   struct __anonstruct_rx_wb_des23_640 rx_wb_des23 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct sxgbe_rx_norm_desc {
   union __anonunion_rdes01_636 rdes01 ;
   union __anonunion_rdes23_638 rdes23 ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct sxgbe_tx_ctxt_desc {
   u32 tstamp_lo ;
   u32 tstamp_hi ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) maxseg_size : 15 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved1 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) ivlan_tag : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) vlan_tag : 16 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vltag_valid : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ivlan_tag_valid : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ivlan_tag_ctl : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) reserved2 : 3 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ctxt_desc_err : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) reserved3 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ostc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tcmssv : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) reserved4 : 2 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ctxt_bit : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct sxgbe_rx_ctxt_desc {
   u32 tstamp_lo ;
   u32 tstamp_hi ;
   u32 reserved1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ptp_msgtype : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tstamp_available : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ptp_rsp_err : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tstamp_dropped : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(23))) reserved2 : 23 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_ctxt_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) own_bit : 1 ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct sxgbe_desc_ops {
   void (*init_tx_desc)(struct sxgbe_tx_norm_desc *) ;
   void (*tx_desc_enable_tse)(struct sxgbe_tx_norm_desc *, u8 , u32 , u32 , u32 ) ;
   void (*prepare_tx_desc)(struct sxgbe_tx_norm_desc *, u8 , int , int , int ) ;
   void (*tx_vlanctl_desc)(struct sxgbe_tx_norm_desc *, int ) ;
   void (*set_tx_owner)(struct sxgbe_tx_norm_desc *) ;
   int (*get_tx_owner)(struct sxgbe_tx_norm_desc *) ;
   void (*close_tx_desc)(struct sxgbe_tx_norm_desc *) ;
   void (*release_tx_desc)(struct sxgbe_tx_norm_desc *) ;
   void (*clear_tx_ic)(struct sxgbe_tx_norm_desc *) ;
   int (*get_tx_ls)(struct sxgbe_tx_norm_desc *) ;
   int (*get_tx_len)(struct sxgbe_tx_norm_desc *) ;
   void (*tx_enable_tstamp)(struct sxgbe_tx_norm_desc *) ;
   int (*get_tx_timestamp_status)(struct sxgbe_tx_norm_desc *) ;
   void (*tx_ctxt_desc_set_ctxt)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_set_owner)(struct sxgbe_tx_ctxt_desc *) ;
   int (*get_tx_ctxt_owner)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_set_mss)(struct sxgbe_tx_ctxt_desc *, u16 ) ;
   int (*tx_ctxt_desc_get_mss)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_set_tcmssv)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_reset_ostc)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_set_ivlantag)(struct sxgbe_tx_ctxt_desc *, int , int , int ) ;
   int (*tx_ctxt_desc_get_ivlantag)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_desc_set_vlantag)(struct sxgbe_tx_ctxt_desc *, int , int ) ;
   int (*tx_ctxt_desc_get_vlantag)(struct sxgbe_tx_ctxt_desc *) ;
   void (*tx_ctxt_set_tstamp)(struct sxgbe_tx_ctxt_desc *, u8 , u64 ) ;
   void (*close_tx_ctxt_desc)(struct sxgbe_tx_ctxt_desc *) ;
   int (*get_tx_ctxt_cde)(struct sxgbe_tx_ctxt_desc *) ;
   void (*init_rx_desc)(struct sxgbe_rx_norm_desc *, int , int , int ) ;
   int (*get_rx_owner)(struct sxgbe_rx_norm_desc *) ;
   void (*set_rx_owner)(struct sxgbe_rx_norm_desc *) ;
   void (*set_rx_int_on_com)(struct sxgbe_rx_norm_desc *) ;
   int (*get_rx_frame_len)(struct sxgbe_rx_norm_desc *) ;
   int (*get_rx_fd_status)(struct sxgbe_rx_norm_desc *) ;
   int (*get_rx_ld_status)(struct sxgbe_rx_norm_desc *) ;
   int (*rx_wbstatus)(struct sxgbe_rx_norm_desc *, struct sxgbe_extra_stats *, int *) ;
   int (*get_rx_ctxt_owner)(struct sxgbe_rx_ctxt_desc *) ;
   void (*set_rx_ctxt_owner)(struct sxgbe_rx_ctxt_desc *) ;
   void (*rx_ctxt_wbstatus)(struct sxgbe_rx_ctxt_desc *, struct sxgbe_extra_stats *) ;
   int (*get_rx_ctxt_tstamp_status)(struct sxgbe_rx_ctxt_desc *) ;
   u64 (*get_timestamp)(struct sxgbe_rx_ctxt_desc *) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_646 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_646 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_647 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_647 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_649 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_650 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_648 {
   struct __anonstruct_649 __anonCompField___anonunion_648_4 ;
   struct __anonstruct_650 __anonCompField___anonunion_648_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_648 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_651 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_651 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_652 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_652 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_656 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_657 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_658 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_655 {
   struct __anonstruct_futex_656 futex ;
   struct __anonstruct_nanosleep_657 nanosleep ;
   struct __anonstruct_poll_658 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_655 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_659 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_659 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_669 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_670 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_668 {
   struct __anonstruct_669 __anonCompField___anonunion_668_12 ;
   struct __anonstruct_670 __anonCompField___anonunion_668_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_671 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_668 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_671 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_675 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_674 {
   struct raw_spinlock rlock ;
   struct __anonstruct_675 __anonCompField___anonunion_674_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_674 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_676 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_676 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/io.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_699 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_699 __anonCompField_iov_iter_29 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_700 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_700 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_701 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_701 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_702 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_702 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_703 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_703 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_704 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_704 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_705 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_705 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_706 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_706 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_707 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_707 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_708 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_709 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_708 ifr_ifrn ;
   union __anonunion_ifr_ifru_709 ifr_ifru ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_719 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_719 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_720 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_720 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_721 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_721 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_node;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_729 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_728 {
   struct __anonstruct_729 __anonCompField___anonunion_728_30 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_728 __anonCompField_lockref_31 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct path;

#line 51 
struct vfsmount;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_731 {
   u32 hash ;
   u32 len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_730 {
   struct __anonstruct_731 __anonCompField___anonunion_730_32 ;
   u64 hash_len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_730 __anonCompField_qstr_33 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct inode;

#line 90 
struct dentry_operations;

#line 90 
struct super_block;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_732 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_732 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_735 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_735 nodemask_t;

#line 520 
struct mem_cgroup;

#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 189 
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_737 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_736 {
   struct __anonstruct_737 __anonCompField___anonunion_736_34 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_736 __anonCompField_radix_tree_node_35 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 104 
struct pid_namespace;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 44 
struct vm_area_struct;

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_806 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_805 {
   struct __anonstruct_806 __anonCompField___anonunion_805_36 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_805 __anonCompField_ctl_table_header_37 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_807 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_807 mm_context_t;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct bdi_writeback;

#line 62 
struct export_operations;

#line 64 
struct kobject;

#line 65 
struct pipe_inode_info;

#line 67 
struct kstatfs;

#line 68 
struct swap_info_struct;

#line 69 
struct vm_fault;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_813 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_813 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_814 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_814 __anonCompField_kqid_39 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526 
struct address_space;

#line 527 
struct writeback_control;

#line 528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_817 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_818 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_819 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_817 __anonCompField_inode_40 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_818 __anonCompField_inode_41 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_819 __anonCompField_inode_42 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_820 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_820 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_822 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_821 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_822 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_821 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct file_system_type;

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 2251 
struct kmem_cache;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_828 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_829 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_827 {
   struct __anonstruct_828 __anonCompField___anonunion_827_45 ;
   struct __anonstruct_829 __anonCompField___anonunion_827_46 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_827 __anonCompField_uprobe_task_47 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_830 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_832 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_836 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_835 {
   atomic_t _mapcount ;
   struct __anonstruct_836 __anonCompField___anonunion_835_50 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_834 {
   union __anonunion_835 __anonCompField___anonstruct_834_51 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_833 {
   unsigned long counters ;
   struct __anonstruct_834 __anonCompField___anonunion_833_52 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_831 {
   union __anonunion_832 __anonCompField___anonstruct_831_49 ;
   union __anonunion_833 __anonCompField___anonstruct_831_53 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_838 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_839 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_837 {
   struct list_head lru ;
   struct __anonstruct_838 __anonCompField___anonunion_837_55 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_839 __anonCompField___anonunion_837_56 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_840 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_830 __anonCompField_page_48 ;
   struct __anonstruct_831 __anonCompField_page_54 ;
   union __anonunion_837 __anonCompField_page_57 ;
   union __anonunion_840 __anonCompField_page_58 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_841 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_841 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_843 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_843 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_845 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_846 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_847 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_848 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_850 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_849 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_850 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_851 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_852 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_844 {
   int _pad[28U] ;
   struct __anonstruct__kill_845 _kill ;
   struct __anonstruct__timer_846 _timer ;
   struct __anonstruct__rt_847 _rt ;
   struct __anonstruct__sigchld_848 _sigchld ;
   struct __anonstruct__sigfault_849 _sigfault ;
   struct __anonstruct__sigpoll_851 _sigpoll ;
   struct __anonstruct__sigsys_852 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_844 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_855 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_856 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_858 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_857 {
   struct keyring_index_key index_key ;
   struct __anonstruct_858 __anonCompField___anonunion_857_61 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_859 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_861 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_860 {
   union __anonunion_payload_861 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_855 __anonCompField_key_59 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_856 __anonCompField_key_60 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_857 __anonCompField_key_62 ;
   union __anonunion_type_data_859 type_data ;
   union __anonunion_860 __anonCompField_key_63 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_862 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_862 __anonCompField_idr_layer_64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 331 
struct kernfs_node;

#line 332 
struct kernfs_ops;

#line 333 
struct kernfs_open_file;

#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct kernfs_open_node;

#line 177 
struct kernfs_iattrs;

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_895 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_895 __anonCompField_kernfs_node_68 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_896 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_896 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24739 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_901 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_902 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24739 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_901 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_902 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_905 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_904 {
   u64 v64 ;
   struct __anonstruct_905 __anonCompField___anonunion_904_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_904 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_908 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_907 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_908 __anonCompField___anonstruct_907_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_906 {
   struct __anonstruct_907 __anonCompField___anonunion_906_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_910 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_909 {
   __wsum csum ;
   struct __anonstruct_910 __anonCompField___anonunion_909_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_911 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_912 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_913 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_906 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_909 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_911 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_912 __anonCompField_sk_buff_82 ;
   union __anonunion_913 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_931 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_931 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084 
enum ldv_27928 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27928 phy_interface_t;

#line 126 
enum ldv_27981 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_27981 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29693 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29694 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_944 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_945 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_946 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_944 adj_list ;
   struct __anonstruct_all_adj_list_945 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29693 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29694 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_946 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct sxgbe_mdio_bus_data {
   unsigned int phy_mask ;
   int *irqs ;
   int probed_phy_irq ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sxgbe_platform.h"
struct sxgbe_dma_cfg {
   int pbl ;
   int fixed_burst ;
   int burst_map ;
   int adv_addr_mode ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sxgbe_platform.h"
struct sxgbe_plat_data {
   char *phy_bus_name ;
   int bus_id ;
   int phy_addr ;
   int interface ;
   struct sxgbe_mdio_bus_data *mdio_bus_data ;
   struct sxgbe_dma_cfg *dma_cfg ;
   int clk_csr ;
   int pmt ;
   int force_sf_dma_mode ;
   int force_thresh_dma_mode ;
   int riwt_off ;
};

#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct mac_link {
   int port ;
   int duplex ;
   int speed ;
};

#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct mii_regs {
   unsigned int addr ;
   unsigned int data ;
};

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_core_ops {
   void (*core_init)(void *) ;
   void (*dump_regs)(void *) ;
   int (*host_irq_status)(void *, struct sxgbe_extra_stats *) ;
   void (*pmt)(void *, unsigned long ) ;
   void (*set_umac_addr)(void *, unsigned char *, unsigned int ) ;
   void (*get_umac_addr)(void *, unsigned char *, unsigned int ) ;
   void (*enable_rx)(void *, bool ) ;
   void (*enable_tx)(void *, bool ) ;
   int (*get_controller_version)(void *) ;
   unsigned int (*get_hw_feature)(void *, unsigned char ) ;
   void (*set_speed)(void *, unsigned char ) ;
   void (*set_eee_mode)(void *) ;
   void (*reset_eee_mode)(void *) ;
   void (*set_eee_timer)(void *, int const , int const ) ;
   void (*set_eee_pls)(void *, int const ) ;
   void (*enable_rx_csum)(void *) ;
   void (*disable_rx_csum)(void *) ;
   void (*enable_rxqueue)(void *, int ) ;
   void (*disable_rxqueue)(void *, int ) ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_ops {
   struct sxgbe_core_ops const *mac ;
   struct sxgbe_desc_ops const *desc ;
   struct sxgbe_dma_ops const *dma ;
   struct sxgbe_mtl_ops const *mtl ;
   struct mii_regs mii ;
   struct mac_link link ;
   unsigned int ctrl_uid ;
   unsigned int ctrl_id ;
};

#line 377 
struct sxgbe_priv_data;

#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_tx_queue {
   unsigned int irq_no ;
   struct sxgbe_priv_data *priv_ptr ;
   struct sxgbe_tx_norm_desc *dma_tx ;
   dma_addr_t dma_tx_phy ;
   dma_addr_t *tx_skbuff_dma ;
   struct sk_buff **tx_skbuff ;
   struct timer_list txtimer ;
   spinlock_t tx_lock ;
   unsigned int cur_tx ;
   unsigned int dirty_tx ;
   u32 tx_count_frames ;
   u32 tx_coal_frames ;
   u32 tx_coal_timer ;
   int hwts_tx_en ;
   u16 prev_mss ;
   u8 queue_no ;
};

#line 397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_rx_queue {
   struct sxgbe_priv_data *priv_ptr ;
   struct sxgbe_rx_norm_desc *dma_rx ;
   struct sk_buff **rx_skbuff ;
   unsigned int cur_rx ;
   unsigned int dirty_rx ;
   unsigned int irq_no ;
   u32 rx_riwt ;
   dma_addr_t *rx_skbuff_dma ;
   dma_addr_t dma_rx_phy ;
   u8 queue_no ;
};

#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_hw_features {
   unsigned int pmt_remote_wake_up ;
   unsigned int pmt_magic_frame ;
   unsigned int atime_stamp ;
   unsigned int eee ;
   unsigned int tx_csum_offload ;
   unsigned int rx_csum_offload ;
   unsigned int multi_macaddr ;
   unsigned int tstamp_srcselect ;
   unsigned int sa_vlan_insert ;
   unsigned int rxfifo_size ;
   unsigned int txfifo_size ;
   unsigned int atstmap_hword ;
   unsigned int dcb_enable ;
   unsigned int splithead_enable ;
   unsigned int tcpseg_offload ;
   unsigned int debug_mem ;
   unsigned int rss_enable ;
   unsigned int hash_tsize ;
   unsigned int l3l4_filer_size ;
   unsigned int rx_mtl_qsize ;
   unsigned int tx_mtl_qsize ;
   unsigned int rx_mtl_queues ;
   unsigned int tx_mtl_queues ;
   unsigned int rx_dma_channels ;
   unsigned int tx_dma_channels ;
   unsigned int pps_output_count ;
   unsigned int aux_input_count ;
};

#line 455 
struct clk;

#line 455 
struct ptp_clock;

#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_priv_data {
   struct sxgbe_tx_queue *txq[8U] ;
   struct sxgbe_rx_queue *rxq[16U] ;
   u8 cur_rx_qnum ;
   unsigned int dma_tx_size ;
   unsigned int dma_rx_size ;
   unsigned int dma_buf_sz ;
   u32 rx_riwt ;
   struct napi_struct napi ;
   void *ioaddr ;
   struct net_device *dev ;
   struct device *device ;
   struct sxgbe_ops *hw ;
   int no_csum_insertion ;
   int irq ;
   int rxcsum_insertion ;
   spinlock_t stats_lock ;
   struct phy_device *phydev ;
   int oldlink ;
   int speed ;
   int oldduplex ;
   struct mii_bus *mii ;
   int mii_irq[32U] ;
   u8 rx_pause ;
   u8 tx_pause ;
   struct sxgbe_extra_stats xstats ;
   struct sxgbe_plat_data *plat ;
   struct sxgbe_hw_features hw_cap ;
   u32 msg_enable ;
   struct clk *sxgbe_clk ;
   int clk_csr ;
   unsigned int mode ;
   unsigned int default_addend ;
   u32 adv_ts ;
   int use_riwt ;
   struct ptp_clock *ptp_clock ;
   int tx_tc ;
   int rx_tc ;
   struct timer_list eee_ctrl_timer ;
   bool tx_path_in_lpi_mode ;
   int lpi_irq ;
   int eee_enabled ;
   int eee_active ;
   int tx_lpi_timer ;
};

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_1269 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_1269 __anonCompField_kernel_param_94 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
struct mfd_cell;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id const *id_table ;
   bool prevent_deferred_probe ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/pps.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations const *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct sxgbe_stats {
   char stat_string[32U] ;
   int sizeof_stat ;
   int stat_offset ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_18917 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_18917 socket_state;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_1804 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_1804 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 767 
struct rtable;

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_1926 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_1926 __anonCompField_bpf_prog_99 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_1934 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_1934 __anonCompField_dst_entry_100 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_1935 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_1935 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_1937 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1936 {
   __addrpair skc_addrpair ;
   struct __anonstruct_1937 __anonCompField___anonunion_1936_101 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1938 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_1940 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1939 {
   __portpair skc_portpair ;
   struct __anonstruct_1940 __anonCompField___anonunion_1939_104 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1941 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_1942 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_1936 __anonCompField_sock_common_102 ;
   union __anonunion_1938 __anonCompField_sock_common_103 ;
   union __anonunion_1939 __anonCompField_sock_common_105 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_1941 __anonCompField_sock_common_106 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_1942 __anonCompField_sock_common_107 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_1943 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_1943 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_1946 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_1946 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct sxgbe_mtl_ops {
   void (*mtl_init)(void *, unsigned int , unsigned int ) ;
   void (*mtl_set_txfifosize)(void *, int , int ) ;
   void (*mtl_set_rxfifosize)(void *, int , int ) ;
   void (*mtl_enable_txqueue)(void *, int ) ;
   void (*mtl_disable_txqueue)(void *, int ) ;
   void (*set_tx_mtl_mode)(void *, int , int ) ;
   void (*set_rx_mtl_mode)(void *, int , int ) ;
   void (*mtl_dynamic_dma_rxqueue)(void *) ;
   void (*mtl_fc_active)(void *, int , int ) ;
   void (*mtl_fc_deactive)(void *, int , int ) ;
   void (*mtl_fc_enable)(void *, int ) ;
   void (*mtl_fep_enable)(void *, int ) ;
   void (*mtl_fep_disable)(void *, int ) ;
   void (*mtl_fup_enable)(void *, int ) ;
   void (*mtl_fup_disable)(void *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct ldv_struct_platform_instance_11 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};

#line 17  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_12 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_10 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/fvtp/.tmp_sxgbe_dma.c"
void ldv_inline_asm(void);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.h"
struct sxgbe_dma_ops const *sxgbe_get_dma_ops(void);


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static int sxgbe_dma_init(void *ioaddr, int fix_burst, int burst_map)
{
  int __retres;
  u32 reg_val;
  
#line 28 
  reg_val = readl((void const volatile *)(ioaddr + 12292U));
  
#line 35 
  if (fix_burst == 0) 
#line 36 
                      reg_val |= 1U; else ;
  
#line 39 
  reg_val = (unsigned int)(burst_map << 1) | reg_val;
  
#line 41 
  writel(reg_val,(void volatile *)(ioaddr + 12292U));
  
#line 43 
  __retres = 0;
  
#line 43 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_channel_init(void *ioaddr, int cha_num, int fix_burst, int pbl, dma_addr_t dma_tx, dma_addr_t dma_rx, int t_rsize, int r_rsize)
{
  u32 reg_val;
  dma_addr_t dma_addr;
  
#line 53 
  reg_val = readl((void const volatile *)(ioaddr + (cha_num + 98) * 128));
  
#line 55 
  if (fix_burst != 0) {
    
#line 56 
    reg_val |= 65536U;
    
#line 57 
    writel(reg_val,(void volatile *)(ioaddr + (cha_num + 98) * 128));
    
#line 59 
    reg_val = readl((void const volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 4U)));
    
#line 60 
    reg_val = (unsigned int)(pbl << 16) | reg_val;
    
#line 61 
    writel(reg_val,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 4U)));
    
#line 63 
    reg_val = readl((void const volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 8U)));
    
#line 64 
    reg_val = (unsigned int)(pbl << 16) | reg_val;
    
#line 65 
    writel(reg_val,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 8U)));
  }
  else ;
  
#line 69 
  writel((unsigned int)(dma_tx >> 32),(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 16U)));
  
#line 71 
  writel((unsigned int)dma_tx,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 20U)));
  
#line 74 
  writel((unsigned int)(dma_rx >> 32),(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 24U)));
  
#line 76 
  writel((unsigned int)dma_rx,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 28U)));
  
#line 83 
  dma_addr = (unsigned long long)((t_rsize + -1) * 16) + dma_tx;
  
#line 84 
  writel((unsigned int)dma_addr,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 36U)));
  
#line 87 
  dma_addr = (unsigned long long)((r_rsize + -1) * 16) + dma_rx;
  
#line 88 
  writel((unsigned int)dma_addr,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 28U)));
  
#line 91 
  writel((unsigned int)(t_rsize + -1),(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 48U)));
  
#line 92 
  writel((unsigned int)(r_rsize + -1),(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 52U)));
  
#line 95 
  writel(111047U,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 56U)));
  
#line 97 
  return;
}


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_enable_dma_transmission(void *ioaddr, int cha_num)
{
  u32 tx_config;
  
#line 103 
  tx_config = readl((void const volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 4U)));
  
#line 104 
  tx_config |= 1U;
  
#line 105 
  writel(tx_config,(void volatile *)(ioaddr + ((unsigned int)((cha_num + 98) * 128) + 4U)));
  
#line 106 
  return;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_enable_dma_irq(void *ioaddr, int dma_cnum)
{
  
#line 111 
  writel(111047U,(void volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 56U)));
  
#line 113 
  return;
}


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_disable_dma_irq(void *ioaddr, int dma_cnum)
{
  
#line 118 
  writel(0U,(void volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 56U)));
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_start_tx(void *ioaddr, int tchannels)
{
  int cnum;
  u32 tx_ctl_reg;
  
#line 126 
  cnum = 0;
  
#line 126 
  goto ldv_43871;
  ldv_43870: 
#line 127 
  ;
  
#line 127 
  tx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 4U)));
  
#line 128 
  tx_ctl_reg |= 1U;
  
#line 129 
  writel(tx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 4U)));
  
#line 126 
  cnum += 1;
  ldv_43871: 
#line 127 
  ;
  
#line 126 
  if (cnum < tchannels) 
#line 128 
                        goto ldv_43870; else 
#line 131 
                                             goto ldv_43872;
  ldv_43872: 
#line 132 
  ;
  
#line 133 
  return;
}


#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_start_tx_queue(void *ioaddr, int dma_cnum)
{
  u32 tx_ctl_reg;
  
#line 138 
  tx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 4U)));
  
#line 139 
  tx_ctl_reg |= 1U;
  
#line 140 
  writel(tx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 4U)));
  
#line 141 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_stop_tx_queue(void *ioaddr, int dma_cnum)
{
  u32 tx_ctl_reg;
  
#line 147 
  tx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 4U)));
  
#line 148 
  tx_ctl_reg &= 4294967294U;
  
#line 149 
  writel(tx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((dma_cnum + 98) * 128) + 4U)));
  
#line 150 
  return;
}


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_stop_tx(void *ioaddr, int tchannels)
{
  int cnum;
  u32 tx_ctl_reg;
  
#line 157 
  cnum = 0;
  
#line 157 
  goto ldv_43890;
  ldv_43889: 
#line 158 
  ;
  
#line 158 
  tx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 4U)));
  
#line 159 
  tx_ctl_reg &= 4294967294U;
  
#line 160 
  writel(tx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 4U)));
  
#line 157 
  cnum += 1;
  ldv_43890: 
#line 158 
  ;
  
#line 157 
  if (cnum < tchannels) 
#line 159 
                        goto ldv_43889; else 
#line 162 
                                             goto ldv_43891;
  ldv_43891: 
#line 163 
  ;
  
#line 164 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_start_rx(void *ioaddr, int rchannels)
{
  int cnum;
  u32 rx_ctl_reg;
  
#line 169 
  cnum = 0;
  
#line 169 
  goto ldv_43899;
  ldv_43898: 
#line 170 
  ;
  
#line 170 
  rx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 8U)));
  
#line 171 
  rx_ctl_reg |= 1U;
  
#line 172 
  writel(rx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 8U)));
  
#line 169 
  cnum += 1;
  ldv_43899: 
#line 170 
  ;
  
#line 169 
  if (cnum < rchannels) 
#line 171 
                        goto ldv_43898; else 
#line 174 
                                             goto ldv_43900;
  ldv_43900: 
#line 175 
  ;
  
#line 176 
  return;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_stop_rx(void *ioaddr, int rchannels)
{
  int cnum;
  u32 rx_ctl_reg;
  
#line 182 
  cnum = 0;
  
#line 182 
  goto ldv_43908;
  ldv_43907: 
#line 183 
  ;
  
#line 183 
  rx_ctl_reg = readl((void const volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 8U)));
  
#line 184 
  rx_ctl_reg &= 4294967294U;
  
#line 185 
  writel(rx_ctl_reg,(void volatile *)(ioaddr + ((unsigned int)((cnum + 98) * 128) + 8U)));
  
#line 182 
  cnum += 1;
  ldv_43908: 
#line 183 
  ;
  
#line 182 
  if (cnum < rchannels) 
#line 184 
                        goto ldv_43907; else 
#line 187 
                                             goto ldv_43909;
  ldv_43909: 
#line 188 
  ;
  
#line 189 
  return;
}


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static int sxgbe_tx_dma_int_status(void *ioaddr, int channel_no, struct sxgbe_extra_stats *x)
{
  int __retres;
  
#line 192 
  u32 int_status = readl((void const volatile *)(ioaddr + ((unsigned int)((channel_no + 98) * 128) + 96U)));
  
#line 193 
  u32 clear_val = 0U;
  
#line 194 
  u32 ret_val = 0U;
  
#line 197 
  if ((long)(((unsigned long)int_status & 32768UL) != 0UL) != 0L) {
    
#line 198 
    x->normal_irq_n += 1UL;
    
#line 199 
    if (((unsigned long)int_status & 1UL) != 0UL) {
      
#line 200 
      ret_val |= 4U;
      
#line 201 
      x->tx_normal_irq_n += 1UL;
      
#line 202 
      clear_val |= 1U;
    }
    else ;
    
#line 205 
    if (((unsigned long)int_status & 4UL) != 0UL) {
      
#line 206 
      x->tx_underflow_irq += 1UL;
      
#line 207 
      ret_val |= 2U;
      
#line 208 
      clear_val |= 4U;
    }
    else ;
  }
  else 
    
#line 210 
    if ((long)(((unsigned long)int_status & 16384UL) != 0UL) != 0L) {
      
#line 212 
      if (((unsigned long)int_status & 2UL) != 0UL) {
        
#line 213 
        ret_val |= 1U;
        
#line 214 
        clear_val |= 2U;
        
#line 215 
        x->tx_process_stopped_irq += 1UL;
      }
      else ;
      
#line 218 
      if (((unsigned long)int_status & 4096UL) != 0UL) {
        
#line 219 
        ret_val |= 1U;
        
#line 220 
        x->fatal_bus_error_irq += 1UL;
        
#line 228 
        if (((unsigned long)int_status & 65536UL) != 0UL) {
          
#line 229 
          x->tx_read_transfer_err += 1UL;
          
#line 230 
          clear_val |= 65536U;
        }
        else 
#line 232 
             x->tx_write_transfer_err += 1UL;
        
#line 235 
        if (((unsigned long)int_status & 131072UL) != 0UL) {
          
#line 236 
          x->tx_desc_access_err += 1UL;
          
#line 237 
          clear_val |= 131072U;
        }
        else 
#line 239 
             x->tx_buffer_access_err += 1UL;
        
#line 242 
        if (((unsigned long)int_status & 262144UL) != 0UL) {
          
#line 243 
          x->tx_data_transfer_err += 1UL;
          
#line 244 
          clear_val |= 262144U;
        }
        else ;
      }
      else ;
      
#line 249 
      if (((unsigned long)int_status & 8192UL) != 0UL) {
        
#line 250 
        x->tx_ctxt_desc_err += 1UL;
        
#line 251 
        clear_val |= 8192U;
      }
      else ;
    }
    else ;
  
#line 256 
  writel(clear_val,(void volatile *)(ioaddr + ((unsigned int)((channel_no + 98) * 128) + 96U)));
  
#line 258 
  __retres = (int)ret_val;
  
#line 258 
  return __retres;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static int sxgbe_rx_dma_int_status(void *ioaddr, int channel_no, struct sxgbe_extra_stats *x)
{
  int __retres;
  
#line 264 
  u32 int_status = readl((void const volatile *)(ioaddr + ((unsigned int)((channel_no + 98) * 128) + 96U)));
  
#line 265 
  u32 clear_val = 0U;
  
#line 266 
  u32 ret_val = 0U;
  
#line 269 
  if ((long)(((unsigned long)int_status & 32768UL) != 0UL) != 0L) {
    
#line 270 
    x->normal_irq_n += 1UL;
    
#line 271 
    if (((unsigned long)int_status & 64UL) != 0UL) {
      
#line 272 
      ret_val |= 32U;
      
#line 273 
      x->rx_normal_irq_n += 1UL;
      
#line 274 
      clear_val |= 64U;
    }
    else ;
  }
  else 
    
#line 276 
    if ((long)(((unsigned long)int_status & 16384UL) != 0UL) != 0L) {
      
#line 278 
      if (((unsigned long)int_status & 128UL) != 0UL) {
        
#line 279 
        ret_val |= 16U;
        
#line 280 
        clear_val |= 128U;
        
#line 281 
        x->rx_underflow_irq += 1UL;
      }
      else ;
      
#line 284 
      if (((unsigned long)int_status & 256UL) != 0UL) {
        
#line 285 
        ret_val |= 8U;
        
#line 286 
        clear_val |= 256U;
        
#line 287 
        x->rx_process_stopped_irq += 1UL;
      }
      else ;
      
#line 290 
      if (((unsigned long)int_status & 4096UL) != 0UL) {
        
#line 291 
        ret_val |= 8U;
        
#line 292 
        x->fatal_bus_error_irq += 1UL;
        
#line 300 
        if (((unsigned long)int_status & 524288UL) != 0UL) {
          
#line 301 
          x->rx_read_transfer_err += 1UL;
          
#line 302 
          clear_val |= 524288U;
        }
        else 
#line 304 
             x->rx_write_transfer_err += 1UL;
        
#line 307 
        if (((unsigned long)int_status & 1048576UL) != 0UL) {
          
#line 308 
          x->rx_desc_access_err += 1UL;
          
#line 309 
          clear_val |= 1048576U;
        }
        else 
#line 311 
             x->rx_buffer_access_err += 1UL;
        
#line 314 
        if (((unsigned long)int_status & 2097152UL) != 0UL) {
          
#line 315 
          x->rx_data_transfer_err += 1UL;
          
#line 316 
          clear_val |= 2097152U;
        }
        else ;
      }
      else ;
    }
    else ;
  
#line 322 
  writel(clear_val,(void volatile *)(ioaddr + ((unsigned int)((channel_no + 98) * 128) + 96U)));
  
#line 324 
  __retres = (int)ret_val;
  
#line 324 
  return __retres;
}


#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_dma_rx_watchdog(void *ioaddr, u32 riwt)
{
  u32 que_num;
  
#line 332 
  que_num = 0U;
  
#line 332 
  goto ldv_43932;
  ldv_43931: 
#line 333 
  ;
  
#line 333 
  writel(riwt,(void volatile *)(ioaddr + ((que_num + 98U) * 128U + 60U)));
  
#line 332 
  que_num += 1U;
  ldv_43932: 
#line 333 
  ;
  
#line 332 
  if (que_num <= 15U) 
#line 334 
                      goto ldv_43931; else 
#line 337 
                                           goto ldv_43933;
  ldv_43933: 
#line 338 
  ;
  
#line 339 
  return;
}


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static void sxgbe_enable_tso(void *ioaddr, u8 chan_num)
{
  u32 ctrl;
  
#line 342 
  ctrl = readl((void const volatile *)(ioaddr + ((unsigned int)(((int)chan_num + 98) * 128) + 4U)));
  
#line 343 
  ctrl |= 4096U;
  
#line 344 
  writel(ctrl,(void volatile *)(ioaddr + ((unsigned int)(((int)chan_num + 98) * 128) + 4U)));
  
#line 345 
  return;
}


#line 347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
static struct sxgbe_dma_ops const sxgbe_dma_ops = {.init = & sxgbe_dma_init, .cha_init = & sxgbe_dma_channel_init, .enable_dma_transmission = & sxgbe_enable_dma_transmission, .enable_dma_irq = & sxgbe_enable_dma_irq, .disable_dma_irq = & sxgbe_disable_dma_irq, .start_tx = & sxgbe_dma_start_tx, .start_tx_queue = & sxgbe_dma_start_tx_queue, .stop_tx = & sxgbe_dma_stop_tx, .stop_tx_queue = & sxgbe_dma_stop_tx_queue, .start_rx = & sxgbe_dma_start_rx, .stop_rx = & sxgbe_dma_stop_rx, .tx_dma_int_status = & sxgbe_tx_dma_int_status, .rx_dma_int_status = & sxgbe_rx_dma_int_status, .rx_watchdog = & sxgbe_dma_rx_watchdog, .enable_tso = & sxgbe_enable_tso};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_dma.c"
struct sxgbe_dma_ops const *sxgbe_get_dma_ops(void)
{
  struct sxgbe_dma_ops const *__retres;
  
#line 367 
  __retres = & sxgbe_dma_ops;
  
#line 367 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.h"
struct sxgbe_desc_ops const *sxgbe_get_desc_ops(void);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_init_tx_desc(struct sxgbe_tx_norm_desc *p)
{
  
#line 28 
  p->tdes23.tx_rd_des23.own_bit = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 29 
  return;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_desc_enable_tse(struct sxgbe_tx_norm_desc *p, u8 is_tse, u32 total_hdr_len, u32 tcp_hdr_len, u32 tcp_payload_len)
{
  
#line 35 
  p->tdes23.tx_rd_des23.tse_bit = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_tse;
  
#line 36 
  p->tdes23.tx_rd_des23.buf1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))total_hdr_len;
  
#line 37 
  p->tdes23.tx_rd_des23.tcp_hdr_len = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))(tcp_hdr_len / 4U);
  
#line 38 
  p->tdes23.tx_rd_des23.tx_pkt_len.tcp_payload_len = (unsigned short)tcp_payload_len;
  
#line 39 
  return;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_prepare_tx_desc(struct sxgbe_tx_norm_desc *p, u8 is_fd, int buf1_len, int pkt_len, int cksum)
{
  
#line 45 
  p->tdes23.tx_rd_des23.first_desc = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_fd;
  
#line 46 
  p->tdes23.tx_rd_des23.buf1_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))))buf1_len;
  
#line 48 
  p->tdes23.tx_rd_des23.tx_pkt_len.pkt_len.total_pkt_len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))pkt_len;
  
#line 50 
  if (cksum != 0) 
#line 51 
                  p->tdes23.tx_rd_des23.cksum_ctl = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U; else ;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_vlanctl_desc(struct sxgbe_tx_norm_desc *p, int vlan_ctl)
{
  
#line 57 
  p->tdes23.tx_rd_des23.vlan_tag_ctl = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))vlan_ctl;
  
#line 58 
  return;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_set_tx_owner(struct sxgbe_tx_norm_desc *p)
{
  
#line 63 
  p->tdes23.tx_rd_des23.own_bit = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 64 
  return;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_tx_owner(struct sxgbe_tx_norm_desc *p)
{
  int __retres;
  
#line 69 
  __retres = (int)p->tdes23.tx_rd_des23.own_bit;
  
#line 69 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_close_tx_desc(struct sxgbe_tx_norm_desc *p)
{
  
#line 75 
  p->tdes23.tx_rd_des23.last_desc = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 76 
  p->tdes23.tx_rd_des23.int_on_com = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_release_tx_desc(struct sxgbe_tx_norm_desc *p)
{
  
#line 82 
  memset((void *)p,0,24UL);
  
#line 83 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_clear_tx_ic(struct sxgbe_tx_norm_desc *p)
{
  
#line 90 
  p->tdes23.tx_rd_des23.int_on_com = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 91 
  return;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_tx_ls(struct sxgbe_tx_norm_desc *p)
{
  int __retres;
  
#line 96 
  __retres = (int)p->tdes23.tx_rd_des23.last_desc;
  
#line 96 
  return __retres;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_tx_len(struct sxgbe_tx_norm_desc *p)
{
  int __retres;
  
#line 102 
  __retres = (int)p->tdes23.tx_rd_des23.buf1_size;
  
#line 102 
  return __retres;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_enable_tstamp(struct sxgbe_tx_norm_desc *p)
{
  
#line 108 
  p->tdes23.tx_rd_des23.timestmp_enable = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_tx_timestamp_status(struct sxgbe_tx_norm_desc *p)
{
  int __retres;
  
#line 114 
  __retres = (int)p->tdes23.tx_rd_des23.timestmp_enable;
  
#line 114 
  return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_ctxt(struct sxgbe_tx_ctxt_desc *p)
{
  
#line 120 
  p->ctxt_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 121 
  return;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_owner(struct sxgbe_tx_ctxt_desc *p)
{
  
#line 126 
  p->own_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 127 
  return;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_tx_ctxt_desc_get_owner(struct sxgbe_tx_ctxt_desc *p)
{
  int __retres;
  
#line 132 
  __retres = (int)p->own_bit;
  
#line 132 
  return __retres;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_mss(struct sxgbe_tx_ctxt_desc *p, u16 mss)
{
  
#line 138 
  p->maxseg_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))mss;
  
#line 139 
  return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_tx_ctxt_desc_get_mss(struct sxgbe_tx_ctxt_desc *p)
{
  int __retres;
  
#line 144 
  __retres = (int)p->maxseg_size;
  
#line 144 
  return __retres;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_tcmssv(struct sxgbe_tx_ctxt_desc *p)
{
  
#line 150 
  p->tcmssv = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 151 
  return;
}


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_reset_ostc(struct sxgbe_tx_ctxt_desc *p)
{
  
#line 156 
  p->ostc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_ivlantag(struct sxgbe_tx_ctxt_desc *p, int is_ivlanvalid, int ivlan_tag, int ivlan_ctl)
{
  
#line 164 
  if (is_ivlanvalid != 0) {
    
#line 165 
    p->ivlan_tag_valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_ivlanvalid;
    
#line 166 
    p->ivlan_tag = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))((unsigned short)ivlan_tag);
    
#line 167 
    p->ivlan_tag_ctl = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))ivlan_ctl;
  }
  else ;
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_tx_ctxt_desc_get_ivlantag(struct sxgbe_tx_ctxt_desc *p)
{
  int __retres;
  
#line 174 
  __retres = (int)p->ivlan_tag;
  
#line 174 
  return __retres;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_vlantag(struct sxgbe_tx_ctxt_desc *p, int is_vlanvalid, int vlan_tag)
{
  
#line 181 
  if (is_vlanvalid != 0) {
    
#line 182 
    p->vltag_valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))is_vlanvalid;
    
#line 183 
    p->vlan_tag = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))((unsigned short)vlan_tag);
  }
  else ;
  
#line 185 
  return;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_tx_ctxt_desc_get_vlantag(struct sxgbe_tx_ctxt_desc *p)
{
  int __retres;
  
#line 190 
  __retres = (int)p->vlan_tag;
  
#line 190 
  return __retres;
}


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_set_tstamp(struct sxgbe_tx_ctxt_desc *p, u8 ostc_enable, u64 tstamp)
{
  
#line 197 
  if ((unsigned int)ostc_enable != 0U) {
    
#line 198 
    p->ostc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))ostc_enable;
    
#line 199 
    p->tstamp_lo = (unsigned int)tstamp;
    
#line 200 
    p->tstamp_hi = (unsigned int)(tstamp >> 32);
  }
  else ;
  
#line 202 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_tx_ctxt_desc_close(struct sxgbe_tx_ctxt_desc *p)
{
  
#line 206 
  p->own_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 207 
  return;
}


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_tx_ctxt_desc_get_cde(struct sxgbe_tx_ctxt_desc *p)
{
  int __retres;
  
#line 212 
  __retres = (int)p->ctxt_desc_err;
  
#line 212 
  return __retres;
}


#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_init_rx_desc(struct sxgbe_rx_norm_desc *p, int disable_rx_ic, int mode, int end)
{
  
#line 219 
  p->rdes23.rx_rd_des23.own_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 220 
  if (disable_rx_ic != 0) 
#line 221 
                          p->rdes23.rx_rd_des23.int_on_com = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))disable_rx_ic; else ;
  
#line 222 
  return;
}


#line 225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_owner(struct sxgbe_rx_norm_desc *p)
{
  int __retres;
  
#line 227 
  __retres = (int)p->rdes23.rx_rd_des23.own_bit;
  
#line 227 
  return __retres;
}


#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_set_rx_owner(struct sxgbe_rx_norm_desc *p)
{
  
#line 233 
  p->rdes23.rx_rd_des23.own_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 234 
  return;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_set_rx_int_on_com(struct sxgbe_rx_norm_desc *p)
{
  
#line 239 
  p->rdes23.rx_rd_des23.int_on_com = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 240 
  return;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_frame_len(struct sxgbe_rx_norm_desc *p)
{
  int __retres;
  
#line 245 
  __retres = (int)p->rdes23.rx_wb_des23.pkt_len;
  
#line 245 
  return __retres;
}


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_fd_status(struct sxgbe_rx_norm_desc *p)
{
  int __retres;
  
#line 251 
  __retres = (int)p->rdes23.rx_wb_des23.first_desc;
  
#line 251 
  return __retres;
}


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_ld_status(struct sxgbe_rx_norm_desc *p)
{
  int __retres;
  
#line 257 
  __retres = (int)p->rdes23.rx_wb_des23.last_desc;
  
#line 257 
  return __retres;
}


#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_rx_wbstatus(struct sxgbe_rx_norm_desc *p, struct sxgbe_extra_stats *x, int *checksum)
{
  
#line 265 
  int status = 0;
  
#line 267 
  *checksum = 1;
  
#line 268 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 5UL) != 0U) {
    
#line 269 
    switch ((int)p->rdes23.rx_wb_des23.err_l2_type) {
      case 1: 
#line 270 
      ;
      
#line 271 
      status = -22;
      
#line 272 
      x->rx_code_gmii_err += 1UL;
      
#line 273 
      goto ldv_43957;
      case 2: 
#line 274 
      ;
      
#line 275 
      status = -22;
      
#line 276 
      x->rx_watchdog_err += 1UL;
      
#line 277 
      goto ldv_43957;
      case 3: 
#line 278 
      ;
      
#line 279 
      status = -22;
      
#line 280 
      x->rx_crc_err += 1UL;
      
#line 281 
      goto ldv_43957;
      case 4: 
#line 282 
      ;
      
#line 283 
      status = -22;
      
#line 284 
      x->rx_gaint_pkt_err += 1UL;
      
#line 285 
      goto ldv_43957;
      case 5: 
#line 286 
      ;
      
#line 287 
      *checksum = 0;
      
#line 288 
      x->ip_hdr_err += 1UL;
      
#line 289 
      goto ldv_43957;
      case 6: 
#line 290 
      ;
      
#line 291 
      *checksum = 0;
      
#line 292 
      x->ip_payload_err += 1UL;
      
#line 293 
      goto ldv_43957;
      case 7: 
#line 294 
      ;
      
#line 295 
      status = -22;
      
#line 296 
      x->overflow_error += 1UL;
      
#line 297 
      goto ldv_43957;
      default: 
#line 298 
      ;
      
#line 299 
      printk("\001");
      
#line 300 
      goto ldv_43957;
    }
    ldv_43957: 
#line 302 
    ;
  }
  else {
    
#line 303 
    switch ((int)p->rdes23.rx_wb_des23.err_l2_type) {
      case 0: 
#line 304 
      ;
      
#line 305 
      x->len_pkt += 1UL;
      
#line 306 
      goto ldv_43966;
      case 1: 
#line 307 
      ;
      
#line 308 
      x->mac_ctl_pkt += 1UL;
      
#line 309 
      goto ldv_43966;
      case 2: 
#line 310 
      ;
      
#line 311 
      x->dcb_ctl_pkt += 1UL;
      
#line 312 
      goto ldv_43966;
      case 3: 
#line 313 
      ;
      
#line 314 
      x->arp_pkt += 1UL;
      
#line 315 
      goto ldv_43966;
      case 4: 
#line 316 
      ;
      
#line 317 
      x->oam_pkt += 1UL;
      
#line 318 
      goto ldv_43966;
      case 5: 
#line 319 
      ;
      
#line 320 
      x->untag_okt += 1UL;
      
#line 321 
      goto ldv_43966;
      case 7: 
#line 322 
      ;
      
#line 323 
      x->other_pkt += 1UL;
      
#line 324 
      goto ldv_43966;
      case 8: 
#line 325 
      ;
      
#line 326 
      x->svlan_tag_pkt += 1UL;
      
#line 327 
      goto ldv_43966;
      case 9: 
#line 328 
      ;
      
#line 329 
      x->cvlan_tag_pkt += 1UL;
      
#line 330 
      goto ldv_43966;
      case 10: 
#line 331 
      ;
      
#line 332 
      x->dvlan_ocvlan_icvlan_pkt += 1UL;
      
#line 333 
      goto ldv_43966;
      case 11: 
#line 334 
      ;
      
#line 335 
      x->dvlan_osvlan_isvlan_pkt += 1UL;
      
#line 336 
      goto ldv_43966;
      case 12: 
#line 337 
      ;
      
#line 338 
      x->dvlan_osvlan_icvlan_pkt += 1UL;
      
#line 339 
      goto ldv_43966;
      case 13: 
#line 340 
      ;
      
#line 341 
      x->dvlan_ocvlan_icvlan_pkt += 1UL;
      
#line 342 
      goto ldv_43966;
      default: 
#line 343 
      ;
      
#line 344 
      printk("\001");
      
#line 345 
      goto ldv_43966;
    }
    ldv_43966: 
#line 347 
    ;
  }
  
#line 350 
  switch ((int)p->rdes23.rx_wb_des23.layer34_pkt_type) {
    case 0: 
#line 351 
    ;
    
#line 352 
    x->not_ip_pkt += 1UL;
    
#line 353 
    goto ldv_43981;
    case 1: 
#line 354 
    ;
    
#line 355 
    x->ip4_tcp_pkt += 1UL;
    
#line 356 
    goto ldv_43981;
    case 2: 
#line 357 
    ;
    
#line 358 
    x->ip4_udp_pkt += 1UL;
    
#line 359 
    goto ldv_43981;
    case 3: 
#line 360 
    ;
    
#line 361 
    x->ip4_icmp_pkt += 1UL;
    
#line 362 
    goto ldv_43981;
    case 7: 
#line 363 
    ;
    
#line 364 
    x->ip4_unknown_pkt += 1UL;
    
#line 365 
    goto ldv_43981;
    case 9: 
#line 366 
    ;
    
#line 367 
    x->ip6_tcp_pkt += 1UL;
    
#line 368 
    goto ldv_43981;
    case 10: 
#line 369 
    ;
    
#line 370 
    x->ip6_udp_pkt += 1UL;
    
#line 371 
    goto ldv_43981;
    case 11: 
#line 372 
    ;
    
#line 373 
    x->ip6_icmp_pkt += 1UL;
    
#line 374 
    goto ldv_43981;
    case 15: 
#line 375 
    ;
    
#line 376 
    x->ip6_unknown_pkt += 1UL;
    
#line 377 
    goto ldv_43981;
    default: 
#line 378 
    ;
    
#line 379 
    printk("\001");
    
#line 380 
    goto ldv_43981;
  }
  ldv_43981: 
#line 384 
  ;
  
#line 384 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 1UL) != 0U) 
    
#line 385 
    x->vlan_filter_match += 1UL; else ;
  
#line 387 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 2UL) != 0U) {
    
#line 388 
    status = -22;
    
#line 389 
    x->sa_filter_fail += 1UL;
  }
  else ;
  
#line 391 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 2UL) != 0U) {
    
#line 392 
    status = -22;
    
#line 393 
    x->da_filter_fail += 1UL;
  }
  else ;
  
#line 395 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 2UL) != 0U) 
    
#line 396 
    x->hash_filter_pass += 1UL; else ;
  
#line 398 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 3UL) != 0U) 
    
#line 399 
    x->l3_filter_match += 1UL; else ;
  
#line 401 
  if ((unsigned int)*((unsigned char *)(& p->rdes23.rx_wb_des23) + 3UL) != 0U) 
    
#line 402 
    x->l4_filter_match += 1UL; else ;
  
#line 404 
  return status;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_ctxt_owner(struct sxgbe_rx_ctxt_desc *p)
{
  int __retres;
  
#line 410 
  __retres = (int)p->own_bit;
  
#line 410 
  return __retres;
}


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_set_ctxt_rx_owner(struct sxgbe_rx_ctxt_desc *p)
{
  
#line 416 
  p->own_bit = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 417 
  return;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static void sxgbe_rx_ctxt_wbstatus(struct sxgbe_rx_ctxt_desc *p, struct sxgbe_extra_stats *x)
{
  
#line 424 
  if ((unsigned int)*((unsigned char *)p + 12UL) != 0U) 
#line 425 
                                                        x->timestamp_dropped += 1UL; else ;
  
#line 428 
  if ((unsigned int)*((unsigned char *)p + 12UL) == 0U) 
#line 429 
                                                        x->rx_msg_type_no_ptp += 1UL;
  else 
    
#line 430 
    if ((unsigned int)*((unsigned char *)p + 12UL) == 1U) 
#line 431 
                                                          x->rx_ptp_type_sync += 1UL;
    else 
      
#line 432 
      if ((unsigned int)*((unsigned char *)p + 12UL) == 2U) 
#line 433 
                                                            x->rx_ptp_type_follow_up += 1UL;
      else 
        
#line 434 
        if ((unsigned int)*((unsigned char *)p + 12UL) == 3U) 
#line 435 
                                                              x->rx_ptp_type_delay_req += 1UL;
        else 
          
#line 436 
          if ((unsigned int)*((unsigned char *)p + 12UL) == 4U) 
#line 437 
                                                                x->rx_ptp_type_delay_resp += 1UL;
          else 
            
#line 438 
            if ((unsigned int)*((unsigned char *)p + 12UL) == 5U) 
#line 439 
                                                                  x->rx_ptp_type_pdelay_req += 1UL;
            else 
              
#line 440 
              if ((unsigned int)*((unsigned char *)p + 12UL) == 6U) 
#line 441 
                                                                    x->rx_ptp_type_pdelay_resp += 1UL;
              else 
                
#line 442 
                if ((unsigned int)*((unsigned char *)p + 12UL) == 7U) 
                  
#line 443 
                  x->rx_ptp_type_pdelay_follow_up += 1UL;
                else 
                  
#line 444 
                  if ((unsigned int)*((unsigned char *)p + 12UL) == 8U) 
                    
#line 445 
                    x->rx_ptp_announce += 1UL;
                  else 
                    
#line 446 
                    if ((unsigned int)*((unsigned char *)p + 12UL) == 9U) 
                      
#line 447 
                      x->rx_ptp_mgmt += 1UL;
                    else 
                      
#line 448 
                      if ((unsigned int)*((unsigned char *)p + 12UL) == 10U) 
                        
#line 449 
                        x->rx_ptp_signal += 1UL;
                      else 
                        
#line 450 
                        if ((unsigned int)*((unsigned char *)p + 12UL) == 15U) 
                          
#line 451 
                          x->rx_ptp_resv_msg_type += 1UL; else ;
  
#line 452 
  return;
}


#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static int sxgbe_get_rx_ctxt_tstamp_status(struct sxgbe_rx_ctxt_desc *p)
{
  int __retres;
  
#line 457 
  if (p->tstamp_hi == 4294967295U && p->tstamp_lo == 4294967295U) {
    
#line 458 
    printk("\001");
    
#line 459 
    __retres = 0;
    
#line 459 
    goto return_label;
  }
  else ;
  
#line 462 
  __retres = (int)p->tstamp_available;
  return_label: 
#line 462 
                return __retres;
}


#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static u64 sxgbe_get_rx_timestamp(struct sxgbe_rx_ctxt_desc *p)
{
  u64 ns;
  
#line 470 
  ns = (unsigned long long)p->tstamp_lo;
  
#line 471 
  ns = ((unsigned long long)p->tstamp_hi << 32) | ns;
  
#line 473 
  return ns;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
static struct sxgbe_desc_ops const desc_ops = {.init_tx_desc = & sxgbe_init_tx_desc, .tx_desc_enable_tse = & sxgbe_tx_desc_enable_tse, .prepare_tx_desc = & sxgbe_prepare_tx_desc, .tx_vlanctl_desc = & sxgbe_tx_vlanctl_desc, .set_tx_owner = & sxgbe_set_tx_owner, .get_tx_owner = & sxgbe_get_tx_owner, .close_tx_desc = & sxgbe_close_tx_desc, .release_tx_desc = & sxgbe_release_tx_desc, .clear_tx_ic = & sxgbe_clear_tx_ic, .get_tx_ls = & sxgbe_get_tx_ls, .get_tx_len = & sxgbe_get_tx_len, .tx_enable_tstamp = & sxgbe_tx_enable_tstamp, .get_tx_timestamp_status = & sxgbe_get_tx_timestamp_status, .tx_ctxt_desc_set_ctxt = & sxgbe_tx_ctxt_desc_set_ctxt, .tx_ctxt_desc_set_owner = & sxgbe_tx_ctxt_desc_set_owner, .get_tx_ctxt_owner = & sxgbe_tx_ctxt_desc_get_owner, .tx_ctxt_desc_set_mss = & sxgbe_tx_ctxt_desc_set_mss, .tx_ctxt_desc_get_mss = & sxgbe_tx_ctxt_desc_get_mss, .tx_ctxt_desc_set_tcmssv = & sxgbe_tx_ctxt_desc_set_tcmssv, .tx_ctxt_desc_reset_ostc = & sxgbe_tx_ctxt_desc_reset_ostc, .tx_ctxt_desc_set_ivlantag = & sxgbe_tx_ctxt_desc_set_ivlantag, .tx_ctxt_desc_get_ivlantag = & sxgbe_tx_ctxt_desc_get_ivlantag, .tx_ctxt_desc_set_vlantag = & sxgbe_tx_ctxt_desc_set_vlantag, .tx_ctxt_desc_get_vlantag = & sxgbe_tx_ctxt_desc_get_vlantag, .tx_ctxt_set_tstamp = & sxgbe_tx_ctxt_desc_set_tstamp, .close_tx_ctxt_desc = & sxgbe_tx_ctxt_desc_close, .get_tx_ctxt_cde = & sxgbe_tx_ctxt_desc_get_cde, .init_rx_desc = & sxgbe_init_rx_desc, .get_rx_owner = & sxgbe_get_rx_owner, .set_rx_owner = & sxgbe_set_rx_owner, .set_rx_int_on_com = & sxgbe_set_rx_int_on_com, .get_rx_frame_len = & sxgbe_get_rx_frame_len, .get_rx_fd_status = & sxgbe_get_rx_fd_status, .get_rx_ld_status = & sxgbe_get_rx_ld_status, .rx_wbstatus = & sxgbe_rx_wbstatus, .get_rx_ctxt_owner = & sxgbe_get_rx_ctxt_owner, .set_rx_ctxt_owner = & sxgbe_set_ctxt_rx_owner, .rx_ctxt_wbstatus = & sxgbe_rx_ctxt_wbstatus, .get_rx_ctxt_tstamp_status = & sxgbe_get_rx_ctxt_tstamp_status, .get_timestamp = & sxgbe_get_rx_timestamp};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_desc.c"
struct sxgbe_desc_ops const *sxgbe_get_desc_ops(void)
{
  struct sxgbe_desc_ops const *__retres;
  
#line 521 
  __retres = & desc_ops;
  
#line 521 
  return __retres;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  
#line 567 
  ldv_inline_asm();
  
#line 568 
  return;
}


#line 570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  
#line 572 
  rep_nop();
  
#line 573 
  return;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus *mdiobus_alloc_size(size_t);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
__inline static struct mii_bus *mdiobus_alloc(void)
{
  struct mii_bus *tmp;
  
#line 198 
  tmp = mdiobus_alloc_size(0UL);
  
#line 198 
  return tmp;
}


#line 201 
int mdiobus_register(struct mii_bus *);


#line 202 
void mdiobus_unregister(struct mii_bus *);


#line 203 
void mdiobus_free(struct mii_bus *);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
int sxgbe_mdio_unregister(struct net_device *ndev);


#line 522 
int sxgbe_mdio_register(struct net_device *ndev);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static int sxgbe_mdio_busy_wait(void *ioaddr, unsigned int mii_data)
{
  int __retres;
  unsigned int tmp;
  int tmp_0;
  
#line 34 
  unsigned long fin_time = jiffies + 750UL;
  
#line 36 
  goto ldv_43754;
  ldv_43753: 
#line 37 
  ;
  
#line 37 
  tmp = readl((void const volatile *)(ioaddr + mii_data));
  
#line 37 
  if ((tmp & 4194304U) == 0U) {
    
#line 38 
    __retres = 0;
    
#line 38 
    goto return_label;
  }
  else ;
  
#line 39 
  cpu_relax();
  ldv_43754: 
#line 40 
  ;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 36 
    tmp_0 = 1;
  }
  
#line 36 
  if (tmp_0 == 0) 
#line 36 
                  goto _LOR;
  else {
    int tmp_1;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 36 
      tmp_1 = 1;
    }
    
#line 36 
    if (tmp_1 == 0) 
#line 36 
                    goto _LOR;
    else 
      
#line 36 
      if ((long)(fin_time - jiffies) >= 0L) _LOR: 
#line 38 
                                                  goto ldv_43753; else 
                                                                    
#line 41 
                                                                    goto ldv_43755;
  }
  ldv_43755: 
#line 42 
  ;
  
#line 42 
  __retres = -16;
  return_label: 
#line 42 
                return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static void sxgbe_mdio_ctrl_data(struct sxgbe_priv_data *sp, u32 cmd, u16 phydata)
{
  
#line 48 
  u32 reg = (unsigned int)phydata;
  
#line 50 
  reg = (((cmd << 16) | ((unsigned int)(sp->clk_csr << 19) & 3670016U)) | reg) | 4456448U;
  
#line 52 
  writel(reg,(void volatile *)(sp->ioaddr + (sp->hw)->mii.data));
  
#line 53 
  return;
}


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static void sxgbe_mdio_c45(struct sxgbe_priv_data *sp, u32 cmd, int phyaddr, int phyreg, u16 phydata)
{
  u32 reg;
  
#line 61 
  reg = (unsigned int)((phyreg >> 16) << 21) & 65011712U;
  
#line 62 
  reg = (unsigned int)((phyaddr << 16) | (phyreg & 65535)) | reg;
  
#line 63 
  writel(reg,(void volatile *)(sp->ioaddr + (sp->hw)->mii.addr));
  
#line 65 
  sxgbe_mdio_ctrl_data(sp,cmd,(unsigned short)((int)phydata));
  
#line 66 
  return;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static void sxgbe_mdio_c22(struct sxgbe_priv_data *sp, u32 cmd, int phyaddr, int phyreg, u16 phydata)
{
  u32 reg;
  
#line 73 
  writel((unsigned int)(1 << phyaddr),(void volatile *)(sp->ioaddr + 544U));
  
#line 76 
  reg = (unsigned int)((phyaddr << 16) | (phyreg & 31));
  
#line 77 
  writel(reg,(void volatile *)(sp->ioaddr + (sp->hw)->mii.addr));
  
#line 79 
  sxgbe_mdio_ctrl_data(sp,cmd,(unsigned short)((int)phydata));
  
#line 80 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static int sxgbe_mdio_access(struct sxgbe_priv_data *sp, u32 cmd, int phyaddr, int phyreg, u16 phydata)
{
  int __retres;
  int rc;
  int tmp;
  
#line 85 
  struct mii_regs const *mii = (struct mii_regs const *)(& (sp->hw)->mii);
  
#line 88 
  rc = sxgbe_mdio_busy_wait(sp->ioaddr,mii->data);
  
#line 89 
  if (rc < 0) {
    
#line 90 
    __retres = rc;
    
#line 90 
    goto return_label;
  }
  else ;
  
#line 92 
  if ((phyreg & 1073741824) != 0) 
#line 93 
                                  sxgbe_mdio_c45(sp,cmd,phyaddr,phyreg,(unsigned short)((int)phydata));
  else {
    
#line 96 
    if (phyaddr > 3) {
      
#line 97 
      __retres = -19;
      
#line 97 
      goto return_label;
    }
    else ;
    
#line 99 
    sxgbe_mdio_c22(sp,cmd,phyaddr,phyreg,(unsigned short)((int)phydata));
  }
  
#line 102 
  tmp = sxgbe_mdio_busy_wait(sp->ioaddr,mii->data);
  
#line 102 
  __retres = tmp;
  return_label: 
#line 102 
                return __retres;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static int sxgbe_mdio_read(struct mii_bus *bus, int phyaddr, int phyreg)
{
  int __retres;
  int rc;
  unsigned int tmp_0;
  
#line 114 
  struct net_device *ndev = (struct net_device *)bus->priv;
  
#line 115 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 118 
  rc = sxgbe_mdio_access(priv,3U,phyaddr,phyreg,(unsigned short)0);
  
#line 119 
  if (rc < 0) {
    
#line 120 
    __retres = rc;
    
#line 120 
    goto return_label;
  }
  else ;
  
#line 122 
  tmp_0 = readl((void const volatile *)(priv->ioaddr + (priv->hw)->mii.data));
  
#line 122 
  __retres = (int)tmp_0 & 65535;
  return_label: 
#line 122 
                return __retres;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
static int sxgbe_mdio_write(struct mii_bus *bus, int phyaddr, int phyreg, u16 phydata)
{
  int tmp_0;
  
#line 136 
  struct net_device *ndev = (struct net_device *)bus->priv;
  
#line 137 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 139 
  tmp_0 = sxgbe_mdio_access(priv,1U,phyaddr,phyreg,(unsigned short)((int)phydata));
  
#line 139 
  return tmp_0;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
int sxgbe_mdio_register(struct net_device *ndev)
{
  int __retres;
  struct mii_bus *mdio_bus;
  int err;
  int phy_addr;
  int *irqlist;
  bool act;
  
#line 146 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 147 
  struct sxgbe_mdio_bus_data *mdio_data = (priv->plat)->mdio_bus_data;
  
#line 150 
  bool phy_found = (_Bool)0;
  
#line 154 
  mdio_bus = mdiobus_alloc();
  
#line 155 
  if (mdio_bus == (struct mii_bus *)0) {
    
#line 156 
    netdev_err((struct net_device const *)ndev,"%s: mii bus allocation failed\n","sxgbe_mdio_register");
    
#line 157 
    __retres = -12;
    
#line 157 
    goto return_label;
  }
  else ;
  
#line 160 
  if (mdio_data->irqs != (int *)0) 
#line 161 
                                   irqlist = mdio_data->irqs; else 
#line 163 
                                                                   irqlist = (int *)(& priv->mii_irq);
  
#line 166 
  mdio_bus->name = "sxgbe";
  
#line 167 
  mdio_bus->read = & sxgbe_mdio_read;
  
#line 168 
  mdio_bus->write = & sxgbe_mdio_write;
  
#line 169 
  snprintf((char *)(& mdio_bus->id),17UL,"%s-%x",mdio_bus->name,(priv->plat)->bus_id);
  
#line 171 
  mdio_bus->priv = (void *)ndev;
  
#line 172 
  mdio_bus->phy_mask = mdio_data->phy_mask;
  
#line 173 
  mdio_bus->parent = priv->device;
  
#line 176 
  err = mdiobus_register(mdio_bus);
  
#line 177 
  if (err != 0) {
    
#line 178 
    netdev_err((struct net_device const *)ndev,"mdiobus register failed\n");
    
#line 179 
    goto mdiobus_err;
  }
  else ;
  
#line 182 
  phy_addr = 0;
  
#line 182 
  goto ldv_43824;
  ldv_43823: 
#line 183 
  ;
  {
    
#line 183 
    struct phy_device *phy = mdio_bus->phy_map[phy_addr];
    
#line 185 
    if (phy != (struct phy_device *)0) {
      char irq_num[4U];
      char *irq_str;
      char *tmp_0;
      char const *tmp_1;
      
#line 191 
      if (mdio_data->irqs == (int *)0 && mdio_data->probed_phy_irq > 0) {
        
#line 193 
        *(irqlist + phy_addr) = mdio_data->probed_phy_irq;
        
#line 194 
        phy->irq = mdio_data->probed_phy_irq;
      }
      else ;
      
#line 201 
      if ((priv->plat)->phy_addr == -1) 
#line 202 
                                        (priv->plat)->phy_addr = phy_addr; else ;
      
#line 204 
      act = (_Bool)((priv->plat)->phy_addr == phy_addr);
      
#line 205 
      switch (phy->irq) {
        case -1: 
#line 206 
        ;
        
#line 207 
        irq_str = (char *)"POLL";
        
#line 208 
        goto ldv_43820;
        case -2: 
#line 209 
        ;
        
#line 210 
        irq_str = (char *)"IGNORE";
        
#line 211 
        goto ldv_43820;
        default: 
#line 212 
        ;
        
#line 213 
        sprintf((char *)(& irq_num),"%d",phy->irq);
        
#line 214 
        irq_str = (char *)(& irq_num);
        
#line 215 
        goto ldv_43820;
      }
      ldv_43820: 
#line 217 
      ;
      
#line 219 
      if ((int)act != 0) 
#line 219 
                         tmp_0 = (char *)" active"; else 
#line 219 
                                                         tmp_0 = (char *)"";
      
#line 218 
      tmp_1 = dev_name((struct device const *)(& phy->dev));
      
#line 217 
      ;
      
#line 217 
      ;
      
#line 217 
      ;
      
#line 217 
      ;
      
#line 217 
      netdev_info((struct net_device const *)ndev,"PHY ID %08x at %d IRQ %s (%s)%s\n",phy->phy_id,phy_addr,irq_str,tmp_1,tmp_0);
      
#line 220 
      phy_found = (_Bool)1;
    }
    else ;
  }
  
#line 182 
  phy_addr += 1;
  ldv_43824: 
#line 183 
  ;
  
#line 182 
  if (phy_addr <= 31) 
#line 184 
                      goto ldv_43823; else 
#line 187 
                                           goto ldv_43825;
  ldv_43825: 
#line 188 
  ;
  
#line 224 
  if (! phy_found) {
    
#line 225 
    netdev_err((struct net_device const *)ndev,"PHY not found\n");
    
#line 226 
    goto phyfound_err;
  }
  else ;
  
#line 229 
  priv->mii = mdio_bus;
  
#line 231 
  __retres = 0;
  
#line 231 
  goto return_label;
  phyfound_err: 
#line 233 
  ;
  
#line 234 
  err = -19;
  
#line 235 
  mdiobus_unregister(mdio_bus);
  mdiobus_err: 
#line 236 
  ;
  
#line 237 
  mdiobus_free(mdio_bus);
  
#line 238 
  __retres = err;
  return_label: 
#line 238 
                return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mdio.c"
int sxgbe_mdio_unregister(struct net_device *ndev)
{
  int __retres;
  
#line 243 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 245 
  if (priv->mii == (struct mii_bus *)0) {
    
#line 246 
    __retres = 0;
    
#line 246 
    goto return_label;
  }
  else ;
  
#line 248 
  mdiobus_unregister(priv->mii);
  
#line 249 
  (priv->mii)->priv = (void *)0;
  
#line 250 
  mdiobus_free(priv->mii);
  
#line 251 
  priv->mii = (struct mii_bus *)0;
  
#line 253 
  __retres = 0;
  return_label: 
#line 253 
                return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_pr_debug(struct _ddebug *, char const * , ...);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void *devm_kmalloc(struct device *, size_t, gfp_t);


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kzalloc(struct device *dev, size_t size, gfp_t gfp)
{
  void *tmp;
  
#line 647 
  tmp = devm_kmalloc(dev,size,gfp | 32768U);
  
#line 647 
  return tmp;
}


#line 670 
void *devm_ioremap_resource(struct device *, struct resource *);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
int of_property_read_u32_array(struct device_node const *, char const *, u32 *, size_t);


#line 337 
int of_alias_get_id(struct device_node *, char const *);


#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
__inline static int of_property_read_u32(struct device_node const *np, char const *propname, u32 *out_value)
{
  int tmp;
  
#line 860 
  tmp = of_property_read_u32_array(np,propname,out_value,1UL);
  
#line 860 
  return tmp;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqdomain.h"
void irq_dispose_mapping(unsigned int);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_irq.h"
unsigned int irq_of_parse_and_map(struct device_node *, int);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
int of_get_phy_mode(struct device_node *);


#line 15 
void const *of_get_mac_address(struct device_node *);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);


#line 197 
static int ldv___platform_driver_register_72(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);


#line 202 
static void ldv_platform_driver_unregister_73(struct platform_driver *ldv_func_arg1);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device const *pdev)
{
  void *tmp;
  
#line 215 
  tmp = dev_get_drvdata(& pdev->dev);
  
#line 215 
  return tmp;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev, void *data)
{
  
#line 221 
  dev_set_drvdata(& pdev->dev,data);
  
#line 222 
  return;
}


#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_priv_data *sxgbe_drv_probe(struct device *device, struct sxgbe_plat_data *plat_dat, void *addr);


#line 519 
int sxgbe_drv_remove(struct net_device *ndev);


#line 523 
int sxgbe_register_platform(void);


#line 524 
void sxgbe_unregister_platform(void);


#line 527 
int sxgbe_suspend(struct net_device *ndev);


#line 528 
int sxgbe_resume(struct net_device *ndev);


#line 529 
int sxgbe_freeze(struct net_device *ndev);


#line 530 
int sxgbe_restore(struct net_device *ndev);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_probe_config_dt(struct platform_device *pdev, struct sxgbe_plat_data *plat, char const **mac)
{
  int __retres;
  struct sxgbe_dma_cfg *dma_cfg;
  int tmp_2;
  
#line 34 
  struct device_node *np = pdev->dev.of_node;
  
#line 37 
  if (np == (struct device_node *)0) {
    
#line 38 
    __retres = -19;
    
#line 38 
    goto return_label;
  }
  else ;
  
#line 40 
  *mac = (char const *)of_get_mac_address(np);
  
#line 41 
  plat->interface = of_get_phy_mode(np);
  
#line 43 
  plat->bus_id = of_alias_get_id(np,"ethernet");
  
#line 44 
  if (plat->bus_id < 0) 
#line 45 
                        plat->bus_id = 0; else ;
  
#line 47 
  plat->mdio_bus_data = (struct sxgbe_mdio_bus_data *)devm_kzalloc(& pdev->dev,24UL,208U);
  
#line 51 
  dma_cfg = (struct sxgbe_dma_cfg *)devm_kzalloc(& pdev->dev,16UL,208U);
  
#line 52 
  if (dma_cfg == (struct sxgbe_dma_cfg *)0) {
    
#line 53 
    __retres = -12;
    
#line 53 
    goto return_label;
  }
  else ;
  
#line 55 
  plat->dma_cfg = dma_cfg;
  
#line 56 
  of_property_read_u32((struct device_node const *)np,"samsung,pbl",(u32 *)(& dma_cfg->pbl));
  
#line 57 
  tmp_2 = of_property_read_u32((struct device_node const *)np,"samsung,burst-map",(u32 *)(& dma_cfg->burst_map));
  
#line 57 
  if (tmp_2 == 0) 
#line 58 
                  dma_cfg->fixed_burst = 1; else ;
  
#line 60 
  __retres = 0;
  return_label: 
#line 60 
                return __retres;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_probe(struct platform_device *pdev)
{
  int __retres;
  int ret;
  int i;
  int chan;
  struct resource *res;
  void *addr;
  bool tmp_1;
  unsigned int tmp_3;
  int tmp_4;
  int tmp_5;
  unsigned int tmp_6;
  
#line 83 
  struct device *dev = & pdev->dev;
  
#line 85 
  struct sxgbe_priv_data *priv = (struct sxgbe_priv_data *)0;
  
#line 86 
  struct sxgbe_plat_data *plat_dat = (struct sxgbe_plat_data *)0;
  
#line 87 
  char const *mac = (char const *)0;
  
#line 88 
  struct net_device *ndev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 89 
  struct device_node *node = dev->of_node;
  
#line 92 
  res = platform_get_resource(pdev,512U,0U);
  
#line 93 
  addr = devm_ioremap_resource(dev,res);
  
#line 94 
  tmp_1 = IS_ERR((void const *)addr);
  
#line 94 
  if ((int)tmp_1 != 0) {
    long tmp_0;
    
#line 95 
    tmp_0 = PTR_ERR((void const *)addr);
    
#line 95 
    __retres = (int)tmp_0;
    
#line 95 
    goto return_label;
  }
  else ;
  
#line 97 
  if (pdev->dev.of_node != (struct device_node *)0) {
    
#line 98 
    plat_dat = (struct sxgbe_plat_data *)devm_kzalloc(& pdev->dev,64UL,208U);
    
#line 101 
    if (plat_dat == (struct sxgbe_plat_data *)0) {
      
#line 102 
      __retres = -12;
      
#line 102 
      goto return_label;
    }
    else ;
    
#line 104 
    ret = sxgbe_probe_config_dt(pdev,plat_dat,& mac);
    
#line 105 
    if (ret != 0) {
      
#line 106 
      printk("\001","sxgbe_platform_probe");
      
#line 107 
      __retres = ret;
      
#line 107 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 111 
  priv = sxgbe_drv_probe(& pdev->dev,plat_dat,addr);
  
#line 112 
  if (priv == (struct sxgbe_priv_data *)0) {
    
#line 113 
    printk("\001","sxgbe_platform_probe");
    
#line 114 
    goto err_out;
  }
  else ;
  
#line 118 
  tmp_3 = irq_of_parse_and_map(node,0);
  
#line 118 
  priv->irq = (int)tmp_3;
  
#line 119 
  if (priv->irq <= 0) {
    
#line 120 
    dev_err((struct device const *)dev,"sxgbe common irq parsing failed\n");
    
#line 121 
    goto err_drv_remove;
  }
  else ;
  
#line 125 
  if (mac != (char const *)0) 
#line 126 
                              ether_addr_copy((priv->dev)->dev_addr,(u8 const *)mac); else ;
  
#line 129 
  i = 0;
  
#line 129 
  chan = 1;
  
#line 129 
  goto ldv_45150;
  ldv_45149: 
#line 130 
  ;
  
#line 130 
  tmp_4 = chan;
  
#line 130 
  chan += 1;
  
#line 130 
  ;
  
#line 130 
  ;
  
#line 130 
  (priv->txq[i])->irq_no = irq_of_parse_and_map(node,tmp_4);
  
#line 131 
  if ((priv->txq[i])->irq_no == 0U) {
    
#line 132 
    dev_err((struct device const *)dev,"sxgbe tx irq parsing failed\n");
    
#line 133 
    goto err_tx_irq_unmap;
  }
  else ;
  
#line 129 
  i += 1;
  ldv_45150: 
#line 130 
  ;
  
#line 129 
  if (i <= 7) 
#line 131 
              goto ldv_45149; else 
#line 134 
                                   goto ldv_45151;
  ldv_45151: 
#line 135 
  ;
  
#line 137 
  i = 0;
  
#line 137 
  goto ldv_45154;
  ldv_45153: 
#line 138 
  ;
  
#line 138 
  tmp_5 = chan;
  
#line 138 
  chan += 1;
  
#line 138 
  ;
  
#line 138 
  ;
  
#line 138 
  (priv->rxq[i])->irq_no = irq_of_parse_and_map(node,tmp_5);
  
#line 139 
  if ((priv->rxq[i])->irq_no == 0U) {
    
#line 140 
    dev_err((struct device const *)dev,"sxgbe rx irq parsing failed\n");
    
#line 141 
    goto err_rx_irq_unmap;
  }
  else ;
  
#line 137 
  i += 1;
  ldv_45154: 
#line 138 
  ;
  
#line 137 
  if (i <= 15) 
#line 139 
               goto ldv_45153; else 
#line 142 
                                    goto ldv_45155;
  ldv_45155: 
#line 143 
  ;
  
#line 145 
  tmp_6 = irq_of_parse_and_map(node,chan);
  
#line 145 
  priv->lpi_irq = (int)tmp_6;
  
#line 146 
  if (priv->lpi_irq <= 0) {
    
#line 147 
    dev_err((struct device const *)dev,"sxgbe lpi irq parsing failed\n");
    
#line 148 
    goto err_rx_irq_unmap;
  }
  else ;
  
#line 151 
  platform_set_drvdata(pdev,(void *)priv->dev);
  {
    
#line 153 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_platform_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c", .format = "platform driver registration completed\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))153U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 153 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 153 
                                                        __dynamic_pr_debug(& descriptor,"samsung_sxgbe"); else ;
  }
  
#line 155 
  __retres = 0;
  
#line 155 
  goto return_label;
  err_rx_irq_unmap: 
#line 157 
  ;
  
#line 158 
  goto ldv_45158;
  ldv_45157: 
#line 159 
  ;
  
#line 159 
  irq_dispose_mapping((priv->rxq[i])->irq_no);
  ldv_45158: 
#line 160 
  ;
  
#line 158 
  i -= 1;
  
#line 158 
  if (i != 0) 
#line 160 
              goto ldv_45157; else 
#line 163 
                                   goto ldv_45159;
  ldv_45159: 
#line 164 
  ;
  
#line 160 
  i = 8;
  err_tx_irq_unmap: 
#line 161 
  ;
  
#line 162 
  goto ldv_45161;
  ldv_45160: 
#line 163 
  ;
  
#line 163 
  irq_dispose_mapping((priv->txq[i])->irq_no);
  ldv_45161: 
#line 164 
  ;
  
#line 162 
  i -= 1;
  
#line 162 
  if (i != 0) 
#line 164 
              goto ldv_45160; else 
#line 167 
                                   goto ldv_45162;
  ldv_45162: 
#line 168 
  ;
  
#line 164 
  irq_dispose_mapping((unsigned int)priv->irq);
  err_drv_remove: 
#line 165 
  ;
  
#line 166 
  sxgbe_drv_remove(ndev);
  err_out: 
#line 167 
  ;
  
#line 168 
  __retres = -19;
  return_label: 
#line 168 
                return __retres;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_remove(struct platform_device *pdev)
{
  
#line 179 
  struct net_device *ndev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 180 
  int ret = sxgbe_drv_remove(ndev);
  
#line 182 
  return ret;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_suspend(struct device *dev)
{
  int tmp_0;
  
#line 188 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 190 
  tmp_0 = sxgbe_suspend(ndev);
  
#line 190 
  return tmp_0;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_resume(struct device *dev)
{
  int tmp_0;
  
#line 195 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 197 
  tmp_0 = sxgbe_resume(ndev);
  
#line 197 
  return tmp_0;
}


#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_freeze(struct device *dev)
{
  int tmp_0;
  
#line 202 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 204 
  tmp_0 = sxgbe_freeze(ndev);
  
#line 204 
  return tmp_0;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static int sxgbe_platform_restore(struct device *dev)
{
  int tmp_0;
  
#line 209 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 211 
  tmp_0 = sxgbe_restore(ndev);
  
#line 211 
  return tmp_0;
}


#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static struct dev_pm_ops const sxgbe_platform_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & sxgbe_platform_suspend, .resume = & sxgbe_platform_resume, .freeze = & sxgbe_platform_freeze, .thaw = & sxgbe_platform_restore, .poweroff = (int (*)(struct device *))0, .restore = & sxgbe_platform_restore, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static struct of_device_id const sxgbe_dt_ids[2U] = {{.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'s', (char)'a', (char)'m', (char)'s', (char)'u', (char)'n', (char)'g', (char)',', (char)'s', (char)'x', (char)'g', (char)'b', (char)'e', (char)'-', (char)'v', (char)'2', (char)'.', (char)'0', (char)'a', (char)'\000'}, .data = (void const *)0}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .data = (void const *)0}};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
struct of_device_id const __mod_of__sxgbe_dt_ids_device_table[2U];

#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
static struct platform_driver sxgbe_platform_driver = {.probe = & sxgbe_platform_probe, .remove = & sxgbe_platform_remove, .shutdown = (void (*)(struct platform_device *))0, .suspend = (int (*)(struct platform_device *, pm_message_t ))0, .resume = (int (*)(struct platform_device *))0, .driver = {.name = "sam_sxgbeeth", .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)(& sxgbe_dt_ids), .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & sxgbe_platform_pm_ops, .p = (struct driver_private *)0}, .id_table = (struct platform_device_id const *)0, .prevent_deferred_probe = (_Bool)0};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
int sxgbe_register_platform(void)
{
  int err;
  
#line 245 
  err = ldv___platform_driver_register_72(& sxgbe_platform_driver,& __this_module);
  
#line 246 
  if (err != 0) 
#line 247 
                printk("\001"); else ;
  
#line 249 
  return err;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_platform.c"
void sxgbe_unregister_platform(void)
{
  
#line 254 
  ldv_platform_driver_unregister_73(& sxgbe_platform_driver);
  
#line 255 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
struct platform_driver *ldv_emg_alias_sxgbe_platform_driver_2 = & sxgbe_platform_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
struct dev_pm_ops *ldv_emg_alias_sxgbe_platform_pm_ops_3 = (struct dev_pm_ops *)(& sxgbe_platform_pm_ops);

#line 64 
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0);


#line 65 
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_freeze_2(struct device *arg0)
{
  int tmp;
  
#line 72 
  tmp = sxgbe_platform_freeze(arg0);
  
#line 72 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_probe_2(struct platform_device *arg0)
{
  int tmp;
  
#line 77 
  tmp = sxgbe_platform_probe(arg0);
  
#line 77 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_remove_3(struct platform_device *arg0)
{
  int tmp;
  
#line 82 
  tmp = sxgbe_platform_remove(arg0);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_suspend_4(struct device *arg0)
{
  int tmp;
  
#line 87 
  tmp = sxgbe_platform_suspend(arg0);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_restore_5(struct device *arg0)
{
  int tmp;
  
#line 92 
  tmp = sxgbe_platform_restore(arg0);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
int ldv_emg_wrapper_sxgbe_platform_resume_6(struct device *arg0)
{
  int tmp;
  
#line 97 
  tmp = sxgbe_platform_resume(arg0);
  
#line 97 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 112 
  tmp = ldv_ptr_err(ptr);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 120 
  ret = ldv_is_err(ptr);
  
#line 121 
  __retres = (_Bool)(ret != 0L);
  
#line 121 
  return __retres;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
static int ldv___platform_driver_register_72(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  int tmp;
  
#line 776 
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
  
#line 776 
  return tmp;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_platform.c.aux"
static void ldv_platform_driver_unregister_73(struct platform_driver *ldv_func_arg1)
{
  
#line 784 
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  
#line 785 
  return;
}

void __builtin_unreachable(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
unsigned long clk_get_rate(struct clk *);


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);


#line 778 
int phy_ethtool_gset(struct phy_device *, struct ethtool_cmd *);


#line 792 
int phy_get_eee_err(struct phy_device *);


#line 793 
int phy_ethtool_set_eee(struct phy_device *, struct ethtool_eee *);


#line 794 
int phy_ethtool_get_eee(struct phy_device *, struct ethtool_eee *);


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
void sxgbe_set_ethtool_ops(struct net_device *netdev);


#line 535 
void sxgbe_disable_eee_mode(struct sxgbe_priv_data * const priv);


#line 536 
bool sxgbe_eee_init(struct sxgbe_priv_data * const priv);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static struct sxgbe_stats const sxgbe_gstrings_stats[78U] = {{.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 792}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'t', (char)'x', (char)'t', (char)'_', (char)'d', (char)'e', (char)'s', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 800}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'h', (char)'r', (char)'e', (char)'s', (char)'h', (char)'o', (char)'l', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 808}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'t', (char)'h', (char)'r', (char)'e', (char)'s', (char)'h', (char)'o', (char)'l', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 816}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 824}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 832}, {.stat_string = {(char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 840}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 848}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'r', (char)'m', (char)'a', (char)'l', (char)'_', (char)'i', (char)'r', (char)'q', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 856}, {.stat_string = {(char)'n', (char)'a', (char)'p', (char)'i', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 864}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'l', (char)'e', (char)'a', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 872}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'_', (char)'i', (char)'c', (char)'_', (char)'b', (char)'i', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 880}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'s', (char)'t', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 888}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 896}, {.stat_string = {(char)'f', (char)'a', (char)'t', (char)'a', (char)'l', (char)'_', (char)'b', (char)'u', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'i', (char)'r', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 904}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'a', (char)'d', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 912}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'w', (char)'r', (char)'i', (char)'t', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 920}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'s', (char)'c', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 928}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'e', (char)'r', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 936}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 944}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'r', (char)'e', (char)'a', (char)'d', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 952}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'w', (char)'r', (char)'i', (char)'t', (char)'e', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 960}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'e', (char)'s', (char)'c', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 968}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'e', (char)'r', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 976}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'f', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 984}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'e', (char)'n', (char)'t', (char)'r', (char)'y', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 992}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'e', (char)'x', (char)'i', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1000}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'e', (char)'n', (char)'t', (char)'r', (char)'y', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1008}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'p', (char)'i', (char)'_', (char)'e', (char)'x', (char)'i', (char)'t', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1016}, {.stat_string = {(char)'e', (char)'e', (char)'e', (char)'_', (char)'w', (char)'a', (char)'k', (char)'e', (char)'u', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'n', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1024}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'g', (char)'m', (char)'i', (char)'i', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1032}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1040}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1048}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'g', (char)'a', (char)'i', (char)'n', (char)'t', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1056}, {.stat_string = {(char)'i', (char)'p', (char)'_', (char)'h', (char)'d', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1064}, {.stat_string = {(char)'i', (char)'p', (char)'_', (char)'p', (char)'a', (char)'y', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1072}, {.stat_string = {(char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1080}, {.stat_string = {(char)'l', (char)'e', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1088}, {.stat_string = {(char)'m', (char)'a', (char)'c', (char)'_', (char)'c', (char)'t', (char)'l', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1096}, {.stat_string = {(char)'d', (char)'c', (char)'b', (char)'_', (char)'c', (char)'t', (char)'l', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1104}, {.stat_string = {(char)'a', (char)'r', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1112}, {.stat_string = {(char)'o', (char)'a', (char)'m', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1120}, {.stat_string = {(char)'u', (char)'n', (char)'t', (char)'a', (char)'g', (char)'_', (char)'o', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1128}, {.stat_string = {(char)'o', (char)'t', (char)'h', (char)'e', (char)'r', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1136}, {.stat_string = {(char)'s', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'t', (char)'a', (char)'g', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1144}, {.stat_string = {(char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'t', (char)'a', (char)'g', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1152}, {.stat_string = {(char)'d', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'o', (char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'i', (char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1160}, {.stat_string = {(char)'d', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'o', (char)'s', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'i', (char)'s', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1168}, {.stat_string = {(char)'d', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'o', (char)'s', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'i', (char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1176}, {.stat_string = {(char)'d', (char)'v', (char)'a', (char)'n', (char)'_', (char)'o', (char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'i', (char)'c', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1184}, {.stat_string = {(char)'n', (char)'o', (char)'t', (char)'_', (char)'i', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1192}, {.stat_string = {(char)'i', (char)'p', (char)'4', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1200}, {.stat_string = {(char)'i', (char)'p', (char)'4', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1208}, {.stat_string = {(char)'i', (char)'p', (char)'4', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1216}, {.stat_string = {(char)'i', (char)'p', (char)'4', (char)'_', (char)'u', (char)'n', (char)'k', (char)'n', (char)'o', (char)'w', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1224}, {.stat_string = {(char)'i', (char)'p', (char)'6', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1232}, {.stat_string = {(char)'i', (char)'p', (char)'6', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1240}, {.stat_string = {(char)'i', (char)'p', (char)'6', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1248}, {.stat_string = {(char)'i', (char)'p', (char)'6', (char)'_', (char)'u', (char)'n', (char)'k', (char)'n', (char)'o', (char)'w', (char)'n', (char)'_', (char)'p', (char)'k', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1256}, {.stat_string = {(char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1264}, {.stat_string = {(char)'s', (char)'a', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1272}, {.stat_string = {(char)'d', (char)'a', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1280}, {.stat_string = {(char)'h', (char)'a', (char)'s', (char)'h', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'p', (char)'a', (char)'s', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1288}, {.stat_string = {(char)'l', (char)'3', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1296}, {.stat_string = {(char)'l', (char)'4', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'_', (char)'m', (char)'a', (char)'t', (char)'c', (char)'h', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1304}, {.stat_string = {(char)'t', (char)'i', (char)'m', (char)'e', (char)'s', (char)'t', (char)'a', (char)'m', (char)'p', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1312}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'n', (char)'o', (char)'_', (char)'p', (char)'t', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1320}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'s', (char)'y', (char)'n', (char)'c', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1328}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'f', (char)'o', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'u', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1336}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1344}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'s', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1352}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'q', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1360}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'r', (char)'e', (char)'s', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1368}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'_', (char)'p', (char)'d', (char)'e', (char)'l', (char)'a', (char)'y', (char)'_', (char)'f', (char)'o', (char)'l', (char)'l', (char)'o', (char)'w', (char)'_', (char)'u', (char)'p', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1376}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'a', (char)'n', (char)'n', (char)'o', (char)'u', (char)'n', (char)'c', (char)'e', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1384}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'m', (char)'g', (char)'m', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1392}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'s', (char)'i', (char)'g', (char)'n', (char)'a', (char)'l', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1400}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'t', (char)'p', (char)'_', (char)'r', (char)'e', (char)'s', (char)'v', (char)'_', (char)'m', (char)'s', (char)'g', (char)'_', (char)'t', (char)'y', (char)'p', (char)'e', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1408}};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_eee(struct net_device *dev, struct ethtool_eee *edata)
{
  int __retres;
  int tmp_0;
  
#line 141 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 143 
  if (priv->hw_cap.eee == 0U) {
    
#line 144 
    __retres = -95;
    
#line 144 
    goto return_label;
  }
  else ;
  
#line 146 
  edata->eee_enabled = (unsigned int)priv->eee_enabled;
  
#line 147 
  edata->eee_active = (unsigned int)priv->eee_active;
  
#line 148 
  edata->tx_lpi_timer = (unsigned int)priv->tx_lpi_timer;
  
#line 150 
  tmp_0 = phy_ethtool_get_eee(priv->phydev,edata);
  
#line 150 
  __retres = tmp_0;
  return_label: 
#line 150 
                return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_set_eee(struct net_device *dev, struct ethtool_eee *edata)
{
  int __retres;
  int tmp_1;
  
#line 156 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 158 
  priv->eee_enabled = (int)edata->eee_enabled;
  
#line 160 
  if (priv->eee_enabled == 0) 
#line 161 
                              sxgbe_disable_eee_mode(priv);
  else {
    bool tmp_0;
    
#line 167 
    tmp_0 = sxgbe_eee_init(priv);
    
#line 167 
    priv->eee_enabled = (int)tmp_0;
    
#line 168 
    if (priv->eee_enabled == 0) {
      
#line 169 
      __retres = -95;
      
#line 169 
      goto return_label;
    }
    else ;
    
#line 172 
    priv->tx_lpi_timer = (int)edata->tx_lpi_timer;
  }
  
#line 175 
  tmp_1 = phy_ethtool_set_eee(priv->phydev,edata);
  
#line 175 
  __retres = tmp_1;
  return_label: 
#line 175 
                return __retres;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_getdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  
#line 181 
  strlcpy((char *)(& info->driver),"samsung_sxgbe",32UL);
  
#line 182 
  strlcpy((char *)(& info->version),"1.0.0",32UL);
  
#line 183 
  return;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_getsettings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  
#line 188 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 190 
  if (priv->phydev != (struct phy_device *)0) {
    int tmp_0;
    
#line 191 
    tmp_0 = phy_ethtool_gset(priv->phydev,cmd);
    
#line 191 
    __retres = tmp_0;
    
#line 191 
    goto return_label;
  }
  else ;
  
#line 193 
  __retres = -95;
  return_label: 
#line 193 
                return __retres;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_setsettings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  
#line 198 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 200 
  if (priv->phydev != (struct phy_device *)0) {
    int tmp_0;
    
#line 201 
    tmp_0 = phy_ethtool_sset(priv->phydev,cmd);
    
#line 201 
    __retres = tmp_0;
    
#line 201 
    goto return_label;
  }
  else ;
  
#line 203 
  __retres = -95;
  return_label: 
#line 203 
                return __retres;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static u32 sxgbe_getmsglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 208 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 209 
  __retres = priv->msg_enable;
  
#line 209 
  return __retres;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_setmsglevel(struct net_device *dev, u32 level)
{
  
#line 214 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 215 
  priv->msg_enable = level;
  
#line 216 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  int i;
  
#line 221 
  u8 *p = data;
  
#line 223 
  switch (stringset) {
    case (u32)1: 
#line 224 
    ;
    
#line 225 
    i = 0;
    
#line 225 
    goto ldv_43996;
    ldv_43995: 
#line 226 
    ;
    
#line 226 
    memcpy((void *)p,(void const *)(& sxgbe_gstrings_stats[i].stat_string),32UL);
    
#line 228 
    p += 32U;
    
#line 225 
    i += 1;
    ldv_43996: 
#line 226 
    ;
    
#line 225 
    if ((unsigned int)i <= 77U) 
#line 227 
                                goto ldv_43995; else 
#line 230 
                                                     goto ldv_43997;
    ldv_43997: 
#line 231 
    ;
    
#line 230 
    goto ldv_43998;
    default: 
#line 231 
    ;
    {
      
#line 232 
      int __ret_warn_on = 1;
      
#line 232 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 232 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c",232); else ;
      
#line 232 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 233 
    goto ldv_43998;
  }
  ldv_43998: 
#line 235 
  ;
  
#line 236 
  return;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  int len;
  
#line 241 
  switch (sset) {
    case 1: 
#line 242 
    ;
    
#line 243 
    len = 78;
    
#line 244 
    __retres = len;
    
#line 244 
    goto return_label;
    default: 
#line 245 
    ;
    
#line 246 
    __retres = -22;
    
#line 246 
    goto return_label;
  }
  return_label: 
#line 241 
                return __retres;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *dummy, u64 *data)
{
  int i;
  char *p;
  
#line 253 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 257 
  if (priv->eee_enabled != 0) {
    
#line 258 
    int val = phy_get_eee_err(priv->phydev);
    
#line 260 
    if (val != 0) 
#line 261 
                  priv->xstats.eee_wakeup_error_n = (unsigned long)val; else ;
  }
  else ;
  
#line 264 
  i = 0;
  
#line 264 
  goto ldv_44025;
  ldv_44024: 
#line 265 
  ;
  
#line 265 
  p = (char *)priv + sxgbe_gstrings_stats[i].stat_offset;
  
#line 266 
  if (sxgbe_gstrings_stats[i].sizeof_stat == 8) 
#line 266 
                                                *(data + i) = *((u64 *)p); else 
                                                                    
#line 266 
                                                                    *(data + i) = (unsigned long long)*((u32 *)p);
  
#line 264 
  i += 1;
  ldv_44025: 
#line 265 
  ;
  
#line 264 
  if ((unsigned int)i <= 77U) 
#line 266 
                              goto ldv_44024; else 
#line 269 
                                                   goto ldv_44026;
  ldv_44026: 
#line 270 
  ;
  
#line 271 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_get_channels(struct net_device *dev, struct ethtool_channels *channel)
{
  
#line 274 
  channel->max_rx = 16U;
  
#line 275 
  channel->max_tx = 16U;
  
#line 276 
  channel->rx_count = 16U;
  
#line 277 
  channel->tx_count = 8U;
  
#line 278 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static u32 sxgbe_riwt2usec(u32 riwt, struct sxgbe_priv_data *priv)
{
  u32 __retres;
  
#line 282 
  unsigned long clk = clk_get_rate(priv->sxgbe_clk);
  
#line 284 
  if (clk == 0UL) {
    
#line 285 
    __retres = 0U;
    
#line 285 
    goto return_label;
  }
  else ;
  
#line 287 
  __retres = (unsigned int)((unsigned long)(riwt * 256U) / (clk / 1000000UL));
  return_label: 
#line 287 
                return __retres;
}


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static u32 sxgbe_usec2riwt(u32 usec, struct sxgbe_priv_data *priv)
{
  u32 __retres;
  
#line 292 
  unsigned long clk = clk_get_rate(priv->sxgbe_clk);
  
#line 294 
  if (clk == 0UL) {
    
#line 295 
    __retres = 0U;
    
#line 295 
    goto return_label;
  }
  else ;
  
#line 297 
  __retres = (unsigned int)(((unsigned long)usec * (clk / 1000000UL)) / 256UL);
  return_label: 
#line 297 
                return __retres;
}


#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 303 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 305 
  if (priv->use_riwt != 0) 
#line 306 
                           ec->rx_coalesce_usecs = sxgbe_riwt2usec(priv->rx_riwt,priv); else ;
  
#line 308 
  __retres = 0;
  
#line 308 
  return __retres;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_set_coalesce(struct net_device *dev, struct ethtool_coalesce *ec)
{
  int __retres;
  unsigned int rx_riwt;
  
#line 314 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 317 
  if (ec->rx_coalesce_usecs == 0U) {
    
#line 318 
    __retres = -22;
    
#line 318 
    goto return_label;
  }
  else ;
  
#line 320 
  rx_riwt = sxgbe_usec2riwt(ec->rx_coalesce_usecs,priv);
  
#line 322 
  if (rx_riwt + 4294967295U > 111U) {
    
#line 323 
    __retres = -22;
    
#line 323 
    goto return_label;
  }
  else 
    
#line 324 
    if (priv->use_riwt == 0) {
      
#line 325 
      __retres = -95;
      
#line 325 
      goto return_label;
    }
    else ;
  
#line 327 
  priv->rx_riwt = rx_riwt;
  
#line 328 
  (*(((priv->hw)->dma)->rx_watchdog))(priv->ioaddr,priv->rx_riwt);
  
#line 330 
  __retres = 0;
  return_label: 
#line 330 
                return __retres;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_rss_hash_opts(struct sxgbe_priv_data *priv, struct ethtool_rxnfc *cmd)
{
  int __retres;
  
#line 336 
  cmd->data = 0ULL;
  
#line 339 
  switch (cmd->flow_type) {
    case (__u32)1: 
#line 340 
    ;
    case (__u32)2: 
#line 341 
    ;
    
#line 342 
    cmd->data |= 192ULL;
    case (__u32)3: 
#line 343 
    ;
    case (__u32)4: 
#line 344 
    ;
    case (__u32)9: 
#line 345 
    ;
    case (__u32)10: 
#line 346 
    ;
    case (__u32)16: 
#line 347 
    ;
    
#line 348 
    cmd->data |= 48ULL;
    
#line 349 
    goto ldv_44063;
    case (__u32)5: 
#line 350 
    ;
    case (__u32)6: 
#line 351 
    ;
    
#line 352 
    cmd->data |= 192ULL;
    case (__u32)7: 
#line 353 
    ;
    case (__u32)8: 
#line 354 
    ;
    case (__u32)11: 
#line 355 
    ;
    case (__u32)12: 
#line 356 
    ;
    case (__u32)17: 
#line 357 
    ;
    
#line 358 
    cmd->data |= 48ULL;
    
#line 359 
    goto ldv_44063;
    default: 
#line 360 
    ;
    
#line 361 
    __retres = -22;
    
#line 361 
    goto return_label;
  }
  ldv_44063: 
#line 364 
  ;
  
#line 364 
  __retres = 0;
  return_label: 
#line 364 
                return __retres;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  
#line 370 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 371 
  int ret = -95;
  
#line 373 
  switch (cmd->cmd) {
    case (__u32)41: 
#line 374 
    ;
    
#line 375 
    ret = sxgbe_get_rss_hash_opts(priv,cmd);
    
#line 376 
    goto ldv_44080;
    default: 
#line 377 
    ;
    
#line 378 
    goto ldv_44080;
  }
  ldv_44080: 
#line 381 
  ;
  
#line 381 
  return ret;
}


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_set_rss_hash_opt(struct sxgbe_priv_data *priv, struct ethtool_rxnfc *cmd)
{
  int __retres;
  unsigned int tmp;
  
#line 387 
  u32 reg_val = 0U;
  
#line 392 
  if ((cmd->data & 18446744073709551375ULL) != 0ULL) {
    
#line 394 
    __retres = -22;
    
#line 394 
    goto return_label;
  }
  else ;
  
#line 396 
  switch (cmd->flow_type) {
    case (__u32)1: 
#line 397 
    ;
    case (__u32)5: 
#line 398 
    ;
    
#line 399 
    if ((((cmd->data & 16ULL) == 0ULL || (cmd->data & 32ULL) == 0ULL) || (cmd->data & 64ULL) == 0ULL) || (cmd->data & 128ULL) == 0ULL) {
      
#line 403 
      __retres = -22;
      
#line 403 
      goto return_label;
    }
    else ;
    
#line 404 
    reg_val = 4U;
    
#line 405 
    goto ldv_44089;
    case (__u32)2: 
#line 406 
    ;
    case (__u32)6: 
#line 407 
    ;
    
#line 408 
    if ((((cmd->data & 16ULL) == 0ULL || (cmd->data & 32ULL) == 0ULL) || (cmd->data & 64ULL) == 0ULL) || (cmd->data & 128ULL) == 0ULL) {
      
#line 412 
      __retres = -22;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    reg_val = 8U;
    
#line 414 
    goto ldv_44089;
    case (__u32)3: 
#line 415 
    ;
    case (__u32)4: 
#line 416 
    ;
    case (__u32)9: 
#line 417 
    ;
    case (__u32)10: 
#line 418 
    ;
    case (__u32)8: 
#line 419 
    ;
    case (__u32)11: 
#line 420 
    ;
    case (__u32)12: 
#line 421 
    ;
    case (__u32)7: 
#line 422 
    ;
    case (__u32)16: 
#line 423 
    ;
    case (__u32)17: 
#line 424 
    ;
    
#line 425 
    if ((((cmd->data & 16ULL) == 0ULL || (cmd->data & 32ULL) == 0ULL) || (cmd->data & 64ULL) != 0ULL) || (cmd->data & 128ULL) != 0ULL) {
      
#line 429 
      __retres = -22;
      
#line 429 
      goto return_label;
    }
    else ;
    
#line 430 
    reg_val = 2U;
    
#line 431 
    goto ldv_44089;
    default: 
#line 432 
    ;
    
#line 433 
    __retres = -22;
    
#line 433 
    goto return_label;
  }
  ldv_44089: 
#line 437 
  ;
  
#line 437 
  tmp = readl((void const volatile *)(priv->ioaddr + 3200U));
  
#line 437 
  reg_val = tmp | reg_val;
  
#line 438 
  writel(reg_val,(void volatile *)(priv->ioaddr + 3200U));
  
#line 439 
  readl((void const volatile *)(priv->ioaddr + 3200U));
  
#line 441 
  __retres = 0;
  return_label: 
#line 441 
                return __retres;
}


#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd)
{
  
#line 446 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 447 
  int ret = -95;
  
#line 449 
  switch (cmd->cmd) {
    case (__u32)42: 
#line 450 
    ;
    
#line 451 
    ret = sxgbe_set_rss_hash_opt(priv,cmd);
    
#line 452 
    goto ldv_44110;
    default: 
#line 453 
    ;
    
#line 454 
    goto ldv_44110;
  }
  ldv_44110: 
#line 457 
  ;
  
#line 457 
  return ret;
}


#line 460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static void sxgbe_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *space)
{
  int reg_offset;
  
#line 463 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 464 
  u32 *reg_space = (u32 *)space;
  
#line 466 
  int reg_ix = 0;
  
#line 467 
  void *ioaddr = priv->ioaddr;
  
#line 469 
  memset((void *)reg_space,0,8192UL);
  
#line 472 
  reg_offset = 0;
  
#line 472 
  goto ldv_44123;
  ldv_44122: 
#line 473 
  ;
  
#line 474 
  *(reg_space + reg_ix) = readl((void const volatile *)(ioaddr + reg_offset));
  
#line 475 
  reg_ix += 1;
  
#line 473 
  reg_offset += 4;
  ldv_44123: 
#line 474 
  ;
  
#line 472 
  if (reg_offset <= 3580) 
#line 475 
                          goto ldv_44122; else 
#line 478 
                                               goto ldv_44124;
  ldv_44124: 
#line 479 
  ;
  
#line 479 
  reg_offset = 4096;
  
#line 479 
  goto ldv_44126;
  ldv_44125: 
#line 480 
  ;
  
#line 481 
  *(reg_space + reg_ix) = readl((void const volatile *)(ioaddr + reg_offset));
  
#line 482 
  reg_ix += 1;
  
#line 480 
  reg_offset += 4;
  ldv_44126: 
#line 481 
  ;
  
#line 479 
  if (reg_offset <= 6396) 
#line 482 
                          goto ldv_44125; else 
#line 485 
                                               goto ldv_44127;
  ldv_44127: 
#line 486 
  ;
  
#line 486 
  reg_offset = 12288;
  
#line 486 
  goto ldv_44129;
  ldv_44128: 
#line 487 
  ;
  
#line 488 
  *(reg_space + reg_ix) = readl((void const volatile *)(ioaddr + reg_offset));
  
#line 489 
  reg_ix += 1;
  
#line 487 
  reg_offset += 4;
  ldv_44129: 
#line 488 
  ;
  
#line 486 
  if (reg_offset <= 14588) 
#line 489 
                           goto ldv_44128; else 
#line 492 
                                                goto ldv_44130;
  ldv_44130: 
#line 493 
  ;
  
#line 492 
  if ((long)(reg_ix * 4 > 8192) != 0L) {
    
#line 494 
    ldv_inline_asm();
    
#line 492 
    ;
  }
  else ;
  
#line 494 
  return;
}


#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static int sxgbe_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 497 
  __retres = 8192;
  
#line 497 
  return __retres;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
static struct ethtool_ops const sxgbe_ethtool_ops = {.get_settings = & sxgbe_getsettings, .set_settings = & sxgbe_setsettings, .get_drvinfo = & sxgbe_getdrvinfo, .get_regs_len = & sxgbe_get_regs_len, .get_regs = & sxgbe_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & sxgbe_getmsglevel, .set_msglevel = & sxgbe_setmsglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & sxgbe_get_coalesce, .set_coalesce = & sxgbe_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & sxgbe_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & sxgbe_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & sxgbe_get_sset_count, .get_rxnfc = & sxgbe_get_rxnfc, .set_rxnfc = & sxgbe_set_rxnfc, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = & sxgbe_get_channels, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = & sxgbe_get_eee, .set_eee = & sxgbe_set_eee, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c"
void sxgbe_set_ethtool_ops(struct net_device *netdev)
{
  
#line 523 
  netdev->ethtool_ops = & sxgbe_ethtool_ops;
  
#line 524 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_8)(struct net_device *) = & ethtool_op_get_link;

#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_get_regs_20(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 68 
  sxgbe_get_regs(arg0,arg1,arg2);
  
#line 69 
  return;
}


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_getdrvinfo_11(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 73 
  sxgbe_getdrvinfo(arg0,arg1);
  
#line 74 
  return;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_get_channels_7(struct net_device *arg0, struct ethtool_channels *arg1)
{
  
#line 78 
  sxgbe_get_channels(arg0,arg1);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_get_strings_3(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 83 
  sxgbe_get_strings(arg0,arg1,arg2);
  
#line 84 
  return;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_setmsglevel_23(struct net_device *arg0, unsigned int arg1)
{
  
#line 88 
  sxgbe_setmsglevel(arg0,arg1);
  
#line 89 
  return;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
unsigned int ldv_emg_wrapper_sxgbe_getmsglevel_14(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 93 
  tmp = sxgbe_getmsglevel(arg0);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_get_rxnfc_22(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 98 
  tmp = sxgbe_get_rxnfc(arg0,arg1,arg2);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_set_eee_13(struct net_device *arg0, struct ethtool_eee *arg1)
{
  int tmp;
  
#line 103 
  tmp = sxgbe_set_eee(arg0,arg1);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
void ldv_emg_wrapper_sxgbe_get_ethtool_stats_6(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 108 
  sxgbe_get_ethtool_stats(arg0,arg1,arg2);
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_get_regs_len_25(struct net_device *arg0)
{
  int tmp;
  
#line 113 
  tmp = sxgbe_get_regs_len(arg0);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_get_coalesce_24(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 118 
  tmp = sxgbe_get_coalesce(arg0,arg1);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_set_rxnfc_9(struct net_device *arg0, struct ethtool_rxnfc *arg1)
{
  int tmp;
  
#line 123 
  tmp = sxgbe_set_rxnfc(arg0,arg1);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_setsettings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 128 
  tmp = sxgbe_setsettings(arg0,arg1);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_getsettings_17(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 133 
  tmp = sxgbe_getsettings(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_get_eee_12(struct net_device *arg0, struct ethtool_eee *arg1)
{
  int tmp;
  
#line 138 
  tmp = sxgbe_get_eee(arg0,arg1);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_get_sset_count_21(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 143 
  tmp = sxgbe_get_sset_count(arg0,arg1);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_ethtool.c.aux"
int ldv_emg_wrapper_sxgbe_set_coalesce_26(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 148 
  tmp = sxgbe_set_coalesce(arg0,arg1);
  
#line 148 
  return tmp;
}

void __builtin_prefetch(void const * , ...);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR_0(void const *ptr);


#line 41 
static bool IS_ERR_0(void const *ptr);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 350 
static void ldv_spin_lock_65(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_84(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 399 
static void ldv_spin_unlock_66(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_83(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_85(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned int jiffies_to_usecs(unsigned long const);


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 365 
unsigned long __usecs_to_jiffies(unsigned int const);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 369 
  __retres = (unsigned long)(((long)u + 3999L) / 4000L);
  
#line 369 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 410 
  if (0 != 0) {
    unsigned int tmp;
    unsigned long tmp_0;
    
#line 411 
    tmp = jiffies_to_usecs(4611686018427387902UL);
    
#line 411 
    ;
    
#line 411 
    if (tmp < u) {
      
#line 412 
      __retres = 4611686018427387902UL;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    tmp_0 = _usecs_to_jiffies(u);
    
#line 413 
    __retres = tmp_0;
    
#line 413 
    goto return_label;
  }
  else {
    unsigned long tmp_1;
    
#line 415 
    tmp_1 = __usecs_to_jiffies(u);
    
#line 415 
    __retres = tmp_1;
    
#line 415 
    goto return_label;
  }
  return_label: 
#line 410 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_78(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1);


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
int clk_prepare(struct clk *);


#line 193 
void clk_unprepare(struct clk *);


#line 217 
struct clk *clk_get(struct device *, char const *);


#line 249 
int clk_enable(struct clk *);


#line 265 
void clk_disable(struct clk *);


#line 284 
void clk_put(struct clk *);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static int clk_prepare_enable(struct clk *clk)
{
  int __retres;
  int ret;
  
#line 471 
  ret = clk_prepare(clk);
  
#line 472 
  if (ret != 0) {
    
#line 473 
    __retres = ret;
    
#line 473 
    goto return_label;
  }
  else ;
  
#line 474 
  ret = clk_enable(clk);
  
#line 475 
  if (ret != 0) 
#line 476 
                clk_unprepare(clk); else ;
  
#line 478 
  __retres = ret;
  return_label: 
#line 478 
                return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static void clk_disable_unprepare(struct clk *clk)
{
  
#line 484 
  clk_disable(clk);
  
#line 485 
  clk_unprepare(clk);
  
#line 486 
  return;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kmalloc_array(struct device *dev, size_t n, size_t size, gfp_t flags)
{
  void *__retres;
  void *tmp;
  
#line 652 
  if (size != 0UL && 18446744073709551615UL / size < n) {
    
#line 653 
    __retres = (void *)0;
    
#line 653 
    goto return_label;
  }
  else ;
  
#line 654 
  tmp = devm_kmalloc(dev,n * size,flags);
  
#line 654 
  __retres = tmp;
  return_label: 
#line 654 
                return __retres;
}


#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kcalloc(struct device *dev, size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 659 
  tmp = devm_kmalloc_array(dev,n,size,flags | 32768U);
  
#line 659 
  return tmp;
}


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 772 
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
int devm_request_threaded_irq(struct device *, unsigned int, irqreturn_t (*)(int , void *), irqreturn_t (*)(int , void *), unsigned long, char const *, void *);


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev, unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long irqflags, char const *devname, void *dev_id)
{
  int tmp;
  
#line 161 
  tmp = devm_request_threaded_irq(dev,irq,handler,(irqreturn_t (*)(int , void *))0,irqflags,devname,dev_id);
  
#line 161 
  return tmp;
}


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device *phy_connect(struct net_device *, char const *, void (*)(struct net_device *), phy_interface_t);


#line 745 
void phy_disconnect(struct phy_device *);


#line 747 
void phy_start(struct phy_device *);


#line 748 
void phy_stop(struct phy_device *);


#line 779 
int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);


#line 781 
void phy_print_status(struct phy_device *);


#line 791 
int phy_init_eee(struct phy_device *, bool);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_88(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_90(struct net_device *ldv_func_arg1);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_lock(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3219 
  ldv_spin_lock_65(& dev->tx_global_lock);
  {
    int pscr_ret__;
    {
      
#line 3220 
      void const *__vpp_verify = (void const *)0;
      
#line 3220 
      void const *tmp = __vpp_verify;
    }
    
#line 3220 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3220 
      ;
      {
        int pfo_ret__;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42884;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42884;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42884;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42884;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_42884: 
#line 3220 
        ;
        
#line 3220 
        tmp_0 = pfo_ret__;
      }
      
#line 3220 
      pscr_ret__ = tmp_0;
      
#line 3220 
      goto ldv_42890;
      case (unsigned long)2: 
#line 3220 
      ;
      {
        int pfo_ret___0;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42894;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42894;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42894;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42894;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_42894: 
#line 3220 
        ;
        
#line 3220 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3220 
      pscr_ret__ = tmp_0_0;
      
#line 3220 
      goto ldv_42890;
      case (unsigned long)4: 
#line 3220 
      ;
      {
        int pfo_ret___1;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42903;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42903;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42903;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42903;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_42903: 
#line 3220 
        ;
        
#line 3220 
        tmp_1 = pfo_ret___1;
      }
      
#line 3220 
      pscr_ret__ = tmp_1;
      
#line 3220 
      goto ldv_42890;
      case (unsigned long)8: 
#line 3220 
      ;
      {
        int pfo_ret___2;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42912;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42912;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42912;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_42912;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_42912: 
#line 3220 
        ;
        
#line 3220 
        tmp_2 = pfo_ret___2;
      }
      
#line 3220 
      pscr_ret__ = tmp_2;
      
#line 3220 
      goto ldv_42890;
      default: 
#line 3220 
      ;
      
#line 3220 
      __bad_size_call_parameter();
      
#line 3220 
      goto ldv_42890;
    }
    ldv_42890: 
#line 3220 
    ;
    
#line 3220 
    tmp_3 = pscr_ret__;
  }
  
#line 3220 
  cpu = tmp_3;
  
#line 3221 
  i = 0U;
  
#line 3221 
  goto ldv_42922;
  ldv_42921: 
#line 3222 
  ;
  {
    
#line 3222 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3230 
    __netif_tx_lock(txq,cpu);
    
#line 3231 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3232 
    __netif_tx_unlock(txq);
  }
  
#line 3221 
  i += 1U;
  ldv_42922: 
#line 3222 
  ;
  
#line 3221 
  if (dev->num_tx_queues > i) 
#line 3223 
                              goto ldv_42921; else 
#line 3226 
                                                   goto ldv_42923;
  ldv_42923: 
#line 3227 
  ;
  
#line 3228 
  return;
}


#line 3242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_unlock(struct net_device *dev)
{
  unsigned int i;
  
#line 3246 
  i = 0U;
  
#line 3246 
  goto ldv_42933;
  ldv_42932: 
#line 3247 
  ;
  {
    
#line 3247 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3253 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3254 
    netif_schedule_queue(txq);
  }
  
#line 3246 
  i += 1U;
  ldv_42933: 
#line 3247 
  ;
  
#line 3246 
  if (dev->num_tx_queues > i) 
#line 3248 
                              goto ldv_42932; else 
#line 3251 
                                                   goto ldv_42934;
  ldv_42934: 
#line 3252 
  ;
  
#line 3256 
  ldv_spin_unlock_66(& dev->tx_global_lock);
  
#line 3257 
  return;
}


#line 3355 
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_89(struct net_device *ldv_func_arg1);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_mac_addr(struct net_device *, void *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_common.h"
struct sxgbe_core_ops const *sxgbe_get_core_ops(void);


#line 533 
struct sxgbe_mtl_ops const *sxgbe_get_mtl_ops(void);


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int debug = -1;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int eee_timer = 1000;

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static u32 const default_msg_level = 63U;

#line 67 
static irqreturn_t sxgbe_common_interrupt(int irq, void *dev_id);


#line 68 
static irqreturn_t sxgbe_tx_interrupt(int irq, void *dev_id);


#line 69 
static irqreturn_t sxgbe_rx_interrupt(int irq, void *dev_id);


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_verify_args(void)
{
  
#line 82 
  if ((long)(eee_timer < 0) != 0L) 
#line 83 
                                   eee_timer = 1000; else ;
  
#line 84 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_enable_eee_mode(struct sxgbe_priv_data const *priv)
{
  
#line 89 
  if (! priv->tx_path_in_lpi_mode) 
#line 90 
                                   (*(((priv->hw)->mac)->set_eee_mode))(priv->ioaddr); else ;
  
#line 91 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
void sxgbe_disable_eee_mode(struct sxgbe_priv_data * const priv)
{
  
#line 96 
  (*(((priv->hw)->mac)->reset_eee_mode))(priv->ioaddr);
  
#line 97 
  ldv_del_timer_sync_73(& priv->eee_ctrl_timer);
  
#line 98 
  priv->tx_path_in_lpi_mode = (_Bool)0;
  
#line 99 
  return;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_eee_ctrl_timer(unsigned long arg)
{
  unsigned long tmp;
  
#line 110 
  struct sxgbe_priv_data *priv = (struct sxgbe_priv_data *)arg;
  
#line 112 
  sxgbe_enable_eee_mode((struct sxgbe_priv_data const *)priv);
  
#line 113 
  tmp = msecs_to_jiffies((unsigned int)eee_timer);
  
#line 113 
  ;
  
#line 113 
  ;
  
#line 113 
  ldv_mod_timer_74(& priv->eee_ctrl_timer,tmp + jiffies);
  
#line 114 
  return;
}


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
bool sxgbe_eee_init(struct sxgbe_priv_data * const priv)
{
  bool __retres;
  
#line 127 
  bool ret = (_Bool)0;
  
#line 130 
  if (priv->hw_cap.eee != 0U) {
    int tmp;
    unsigned long tmp_0;
    
#line 132 
    tmp = phy_init_eee(priv->phydev,(_Bool)1);
    
#line 132 
    if (tmp != 0) {
      
#line 133 
      __retres = (_Bool)0;
      
#line 133 
      goto return_label;
    }
    else ;
    
#line 135 
    priv->eee_active = 1;
    {
      struct lock_class_key __key;
      
#line 136 
      init_timer_key(& priv->eee_ctrl_timer,0U,"((&priv->eee_ctrl_timer))",& __key);
    }
    
#line 136 
    priv->eee_ctrl_timer.function = & sxgbe_eee_ctrl_timer;
    
#line 136 
    priv->eee_ctrl_timer.data = (unsigned long)priv;
    
#line 138 
    tmp_0 = msecs_to_jiffies((unsigned int)eee_timer);
    
#line 138 
    priv->eee_ctrl_timer.expires = tmp_0 + jiffies;
    
#line 139 
    add_timer(& priv->eee_ctrl_timer);
    
#line 141 
    (*(((priv->hw)->mac)->set_eee_timer))(priv->ioaddr,1000,priv->tx_lpi_timer);
    
#line 145 
    printk("\001");
    
#line 147 
    ret = (_Bool)1;
  }
  else ;
  
#line 150 
  __retres = ret;
  return_label: 
#line 150 
                return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_eee_adjust(struct sxgbe_priv_data const *priv)
{
  
#line 159 
  if (priv->eee_enabled != 0) 
#line 160 
                              (*(((priv->hw)->mac)->set_eee_pls))(priv->ioaddr,(priv->phydev)->link); else ;
  
#line 161 
  return;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_clk_csr_set(struct sxgbe_priv_data *priv)
{
  unsigned long tmp;
  
#line 171 
  tmp = clk_get_rate(priv->sxgbe_clk);
  
#line 171 
  u32 clk_rate = (unsigned int)tmp;
  
#line 176 
  if (clk_rate <= 149999999U) 
#line 177 
                              priv->clk_csr = 0;
  else 
    
#line 178 
    if (clk_rate <= 250000000U) 
#line 179 
                                priv->clk_csr = 1;
    else 
      
#line 180 
      if (clk_rate <= 300000000U) 
#line 181 
                                  priv->clk_csr = 2;
      else 
        
#line 182 
        if (clk_rate <= 350000000U) 
#line 183 
                                    priv->clk_csr = 3;
        else 
          
#line 184 
          if (clk_rate <= 400000000U) 
#line 185 
                                      priv->clk_csr = 4;
          else 
            
#line 186 
            if (clk_rate <= 500000000U) 
#line 187 
                                        priv->clk_csr = 5; else ;
  
#line 188 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
__inline static u32 sxgbe_tx_avail(struct sxgbe_tx_queue *queue, int tx_qsize)
{
  u32 __retres;
  
#line 195 
  __retres = ((queue->dirty_tx + (unsigned int)tx_qsize) - queue->cur_tx) + 4294967295U;
  
#line 195 
  return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_adjust_link(struct net_device *dev)
{
  
#line 205 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 206 
  struct phy_device *phydev = priv->phydev;
  
#line 207 
  u8 new_state = (unsigned char)0U;
  
#line 208 
  u8 speed = (unsigned char)255U;
  
#line 210 
  if (phydev == (struct phy_device *)0) 
#line 211 
                                        goto return_label; else ;
  
#line 217 
  if (phydev->link != 0) {
    
#line 218 
    if (phydev->speed != priv->speed) {
      
#line 219 
      new_state = (unsigned char)1U;
      
#line 220 
      switch (phydev->speed) {
        case 10000: 
#line 221 
        ;
        
#line 222 
        speed = (unsigned char)0U;
        
#line 223 
        goto ldv_50593;
        case 2500: 
#line 224 
        ;
        
#line 225 
        speed = (unsigned char)1U;
        
#line 226 
        goto ldv_50593;
        case 1000: 
#line 227 
        ;
        
#line 228 
        speed = (unsigned char)2U;
        
#line 229 
        goto ldv_50593;
        default: 
#line 230 
        ;
        
#line 231 
        if ((priv->msg_enable & 4U) != 0U) 
#line 231 
                                           netdev_err((struct net_device const *)dev,"Speed (%d) not supported\n",phydev->speed); else ;
      }
      ldv_50593: 
#line 236 
      ;
      
#line 236 
      priv->speed = phydev->speed;
      
#line 237 
      (*(((priv->hw)->mac)->set_speed))(priv->ioaddr,(unsigned char)((int)speed));
    }
    else ;
    
#line 240 
    if (priv->oldlink == 0) {
      
#line 241 
      new_state = (unsigned char)1U;
      
#line 242 
      priv->oldlink = 1;
    }
    else ;
  }
  else 
    
#line 244 
    if (priv->oldlink != 0) {
      
#line 245 
      new_state = (unsigned char)1U;
      
#line 246 
      priv->oldlink = 0;
      
#line 247 
      priv->speed = -1;
    }
    else ;
  
#line 250 
  if ((((unsigned int)new_state & priv->msg_enable) & 4U) != 0U) 
#line 251 
                                                                 phy_print_status(phydev); else ;
  
#line 254 
  sxgbe_eee_adjust((struct sxgbe_priv_data const *)priv);
  return_label: 
#line 255 
                return;
}


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_init_phy(struct net_device *ndev)
{
  int __retres;
  char phy_id_fmt[20U];
  char bus_id[17U];
  struct phy_device *phydev;
  bool tmp_1;
  
#line 270 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 271 
  int phy_iface = (priv->plat)->interface;
  
#line 274 
  priv->oldlink = 0;
  
#line 275 
  priv->speed = -1;
  
#line 276 
  priv->oldduplex = 255;
  
#line 278 
  if ((priv->plat)->phy_bus_name != (char *)0) 
#line 279 
                                               snprintf((char *)(& bus_id),17UL,"%s-%x",(priv->plat)->phy_bus_name,(priv->plat)->bus_id); else 
                                                                    
#line 282 
                                                                    snprintf((char *)(& bus_id),17UL,"sxgbe-%x",(priv->plat)->bus_id);
  
#line 285 
  snprintf((char *)(& phy_id_fmt),20UL,"%s:%02x",(char *)(& bus_id),(priv->plat)->phy_addr);
  {
    
#line 287 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_init_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: trying to attach to %s\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))287U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 287 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 287 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)ndev,"%s: trying to attach to %s\n","sxgbe_init_phy",(char *)(& phy_id_fmt)); else ;
  }
  
#line 289 
  phydev = phy_connect(ndev,(char const *)(& phy_id_fmt),& sxgbe_adjust_link,(enum ldv_27928)phy_iface);
  
#line 291 
  tmp_1 = IS_ERR_0((void const *)phydev);
  
#line 291 
  if ((int)tmp_1 != 0) {
    long tmp_0;
    
#line 292 
    netdev_err((struct net_device const *)ndev,"Could not attach to PHY\n");
    
#line 293 
    tmp_0 = PTR_ERR_0((void const *)phydev);
    
#line 293 
    __retres = (int)tmp_0;
    
#line 293 
    goto return_label;
  }
  else ;
  
#line 297 
  if (phy_iface == 1 || phy_iface == 6) 
#line 299 
                                        phydev->advertising &= 4294967247U; else ;
  
#line 301 
  if (phydev->phy_id == 0U) {
    
#line 302 
    phy_disconnect(phydev);
    
#line 303 
    __retres = -19;
    
#line 303 
    goto return_label;
  }
  else ;
  {
    
#line 306 
    struct _ddebug descriptor_0 = {.modname = "samsung_sxgbe", .function = "sxgbe_init_phy", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: attached to PHY (UID 0x%x) Link = %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))307U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 306 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 306 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)ndev,"%s: attached to PHY (UID 0x%x) Link = %d\n","sxgbe_init_phy",phydev->phy_id,phydev->link); else ;
  }
  
#line 310 
  priv->phydev = phydev;
  
#line 312 
  __retres = 0;
  return_label: 
#line 312 
                return __retres;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_clear_descriptors(struct sxgbe_priv_data *priv)
{
  int i;
  int j;
  
#line 324 
  unsigned int txsize = priv->dma_tx_size;
  
#line 325 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 328 
  j = 0;
  
#line 328 
  goto ldv_50619;
  ldv_50618: 
#line 329 
  ;
  
#line 329 
  i = 0;
  
#line 329 
  goto ldv_50616;
  ldv_50615: 
#line 330 
  ;
  
#line 330 
  (*(((priv->hw)->desc)->init_rx_desc))((priv->rxq[j])->dma_rx + i,priv->use_riwt,(int)priv->mode,rxsize + 4294967295U == (unsigned int)i);
  
#line 329 
  i += 1;
  ldv_50616: 
#line 330 
  ;
  
#line 329 
  if ((unsigned int)i < rxsize) 
#line 331 
                                goto ldv_50615; else 
#line 334 
                                                     goto ldv_50617;
  ldv_50617: 
#line 335 
  ;
  
#line 328 
  j += 1;
  ldv_50619: 
#line 329 
  ;
  
#line 328 
  if (j <= 15) 
#line 330 
               goto ldv_50618; else 
#line 333 
                                    goto ldv_50620;
  ldv_50620: 
#line 334 
  ;
  
#line 335 
  j = 0;
  
#line 335 
  goto ldv_50625;
  ldv_50624: 
#line 336 
  ;
  
#line 336 
  i = 0;
  
#line 336 
  goto ldv_50622;
  ldv_50621: 
#line 337 
  ;
  
#line 337 
  (*(((priv->hw)->desc)->init_tx_desc))((priv->txq[j])->dma_tx + i);
  
#line 336 
  i += 1;
  ldv_50622: 
#line 337 
  ;
  
#line 336 
  if ((unsigned int)i < txsize) 
#line 338 
                                goto ldv_50621; else 
#line 341 
                                                     goto ldv_50623;
  ldv_50623: 
#line 342 
  ;
  
#line 335 
  j += 1;
  ldv_50625: 
#line 336 
  ;
  
#line 335 
  if (j <= 7) 
#line 337 
              goto ldv_50624; else 
#line 340 
                                   goto ldv_50626;
  ldv_50626: 
#line 341 
  ;
  
#line 342 
  return;
}


#line 341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_init_rx_buffers(struct net_device *dev, struct sxgbe_rx_norm_desc *p, int i, unsigned int dma_buf_sz, struct sxgbe_rx_queue *rx_ring)
{
  int __retres;
  struct sk_buff *skb;
  int tmp_0;
  
#line 346 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 349 
  skb = __netdev_alloc_skb_ip_align(dev,dma_buf_sz,208U);
  
#line 350 
  if (skb == (struct sk_buff *)0) {
    
#line 351 
    __retres = -12;
    
#line 351 
    goto return_label;
  }
  else ;
  
#line 353 
  *(rx_ring->rx_skbuff + i) = skb;
  
#line 354 
  *(rx_ring->rx_skbuff_dma + i) = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 357 
  tmp_0 = dma_mapping_error(priv->device,*(rx_ring->rx_skbuff_dma + i));
  
#line 357 
  if (tmp_0 != 0) {
    
#line 358 
    netdev_err((struct net_device const *)dev,"%s: DMA mapping error\n","sxgbe_init_rx_buffers");
    
#line 359 
    dev_kfree_skb_any(skb);
    
#line 360 
    __retres = -22;
    
#line 360 
    goto return_label;
  }
  else ;
  
#line 363 
  p->rdes23.rx_rd_des23.buf2_addr = (unsigned long long __attribute__((__FRAMA_C_BITFIELD_SIZE__(62))))*(rx_ring->rx_skbuff_dma + i);
  
#line 365 
  __retres = 0;
  return_label: 
#line 365 
                return __retres;
}


#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_free_rx_buffers(struct net_device *dev, struct sxgbe_rx_norm_desc *p, int i, unsigned int dma_buf_sz, struct sxgbe_rx_queue *rx_ring)
{
  
#line 380 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 382 
  kfree_skb(*(rx_ring->rx_skbuff + i));
  
#line 383 
  dma_unmap_single_attrs(priv->device,*(rx_ring->rx_skbuff_dma + i),(unsigned long)dma_buf_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 384 
  return;
}


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int init_tx_ring(struct device *dev, u8 queue_no, struct sxgbe_tx_queue *tx_ring, int tx_rsize)
{
  int __retres;
  
#line 398 
  if (tx_ring == (struct sxgbe_tx_queue *)0) {
    
#line 399 
    dev_err((struct device const *)dev,"No memory for TX queue of SXGBE\n");
    
#line 400 
    __retres = -12;
    
#line 400 
    goto return_label;
  }
  else ;
  
#line 404 
  tx_ring->dma_tx = (struct sxgbe_tx_norm_desc *)dma_zalloc_coherent(dev,(unsigned long)tx_rsize * 24UL,& tx_ring->dma_tx_phy,208U);
  
#line 407 
  if (tx_ring->dma_tx == (struct sxgbe_tx_norm_desc *)0) {
    
#line 408 
    __retres = -12;
    
#line 408 
    goto return_label;
  }
  else ;
  
#line 411 
  tx_ring->tx_skbuff_dma = (dma_addr_t *)devm_kcalloc(dev,(unsigned long)tx_rsize,8UL,208U);
  
#line 413 
  if (tx_ring->tx_skbuff_dma == (dma_addr_t *)0ULL) 
#line 414 
                                                    goto dmamem_err; else ;
  
#line 416 
  tx_ring->tx_skbuff = (struct sk_buff **)devm_kcalloc(dev,(unsigned long)tx_rsize,8UL,208U);
  
#line 419 
  if (tx_ring->tx_skbuff == (struct sk_buff **)0) 
#line 420 
                                                  goto dmamem_err; else ;
  
#line 423 
  tx_ring->queue_no = queue_no;
  
#line 426 
  tx_ring->dirty_tx = 0U;
  
#line 427 
  tx_ring->cur_tx = 0U;
  
#line 430 
  spinlock_check(& tx_ring->tx_lock);
  {
    struct lock_class_key __key;
    
#line 430 
    __raw_spin_lock_init(& tx_ring->tx_lock.__anonCompField_spinlock_18.rlock,"&(&tx_ring->tx_lock)->rlock",& __key);
  }
  
#line 432 
  __retres = 0;
  
#line 432 
  goto return_label;
  dmamem_err: 
#line 434 
  ;
  
#line 435 
  dma_free_attrs(dev,(unsigned long)tx_rsize * 24UL,(void *)tx_ring->dma_tx,tx_ring->dma_tx_phy,(struct dma_attrs *)0);
  
#line 437 
  __retres = -12;
  return_label: 
#line 437 
                return __retres;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void free_rx_ring(struct device *dev, struct sxgbe_rx_queue *rx_ring, int rx_rsize)
{
  
#line 450 
  dma_free_attrs(dev,(unsigned long)rx_rsize * 16UL,(void *)rx_ring->dma_rx,rx_ring->dma_rx_phy,(struct dma_attrs *)0);
  
#line 452 
  kfree((void const *)rx_ring->rx_skbuff_dma);
  
#line 453 
  kfree((void const *)rx_ring->rx_skbuff);
  
#line 454 
  return;
}


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int init_rx_ring(struct net_device *dev, u8 queue_no, struct sxgbe_rx_queue *rx_ring, int rx_rsize)
{
  int __retres;
  int desc_index;
  
#line 466 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 468 
  unsigned int bfsize = 0U;
  
#line 469 
  unsigned int ret = 0U;
  
#line 472 
  bfsize = (dev->mtu + 25U) & 4294967288U;
  
#line 474 
  if ((priv->msg_enable & 2U) != 0U) {
    
#line 474 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "init_rx_ring", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: bfsize %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))474U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 474 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 474 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)dev,"%s: bfsize %d\n","init_rx_ring",bfsize); else ;
  }
  else ;
  
#line 477 
  if (rx_ring == (struct sxgbe_rx_queue *)0) {
    
#line 478 
    netdev_err((struct net_device const *)dev,"No memory for RX queue\n");
    
#line 479 
    __retres = -12;
    
#line 479 
    goto return_label;
  }
  else ;
  
#line 483 
  rx_ring->queue_no = queue_no;
  
#line 486 
  rx_ring->dma_rx = (struct sxgbe_rx_norm_desc *)dma_zalloc_coherent(priv->device,(unsigned long)rx_rsize * 16UL,& rx_ring->dma_rx_phy,208U);
  
#line 490 
  if (rx_ring->dma_rx == (struct sxgbe_rx_norm_desc *)0) {
    
#line 491 
    __retres = -12;
    
#line 491 
    goto return_label;
  }
  else ;
  
#line 494 
  rx_ring->rx_skbuff_dma = (dma_addr_t *)kmalloc_array((unsigned long)rx_rsize,8UL,208U);
  
#line 496 
  if (rx_ring->rx_skbuff_dma == (dma_addr_t *)0ULL) {
    
#line 497 
    ret = 4294967284U;
    
#line 498 
    goto err_free_dma_rx;
  }
  else ;
  
#line 501 
  rx_ring->rx_skbuff = (struct sk_buff **)kmalloc_array((unsigned long)rx_rsize,8UL,208U);
  
#line 503 
  if (rx_ring->rx_skbuff == (struct sk_buff **)0) {
    
#line 504 
    ret = 4294967284U;
    
#line 505 
    goto err_free_skbuff_dma;
  }
  else ;
  
#line 509 
  desc_index = 0;
  
#line 509 
  goto ldv_50675;
  ldv_50674: 
#line 510 
  ;
  {
    struct sxgbe_rx_norm_desc *p;
    int tmp_3;
    
#line 511 
    p = rx_ring->dma_rx + desc_index;
    
#line 512 
    tmp_3 = sxgbe_init_rx_buffers(dev,p,desc_index,bfsize,rx_ring);
    
#line 512 
    ret = (unsigned int)tmp_3;
    
#line 514 
    if (ret != 0U) 
#line 515 
                   goto err_free_rx_buffers; else ;
  }
  
#line 509 
  desc_index += 1;
  ldv_50675: 
#line 510 
  ;
  
#line 509 
  if (desc_index < rx_rsize) 
#line 511 
                             goto ldv_50674; else 
#line 514 
                                                  goto ldv_50676;
  ldv_50676: 
#line 515 
  ;
  
#line 519 
  rx_ring->cur_rx = 0U;
  
#line 520 
  rx_ring->dirty_rx = (unsigned int)(desc_index - rx_rsize);
  
#line 521 
  priv->dma_buf_sz = bfsize;
  
#line 523 
  __retres = 0;
  
#line 523 
  goto return_label;
  err_free_rx_buffers: 
#line 525 
  ;
  
#line 526 
  goto ldv_50679;
  ldv_50678: 
#line 527 
  ;
  {
    struct sxgbe_rx_norm_desc *p_0;
    
#line 529 
    p_0 = rx_ring->dma_rx + desc_index;
    
#line 530 
    sxgbe_free_rx_buffers(dev,p_0,desc_index,bfsize,rx_ring);
  }
  ldv_50679: 
#line 532 
  ;
  
#line 526 
  desc_index -= 1;
  
#line 526 
  if (desc_index >= 0) 
#line 528 
                       goto ldv_50678; else 
#line 531 
                                            goto ldv_50680;
  ldv_50680: 
#line 532 
  ;
  
#line 532 
  kfree((void const *)rx_ring->rx_skbuff);
  err_free_skbuff_dma: 
#line 533 
  ;
  
#line 534 
  kfree((void const *)rx_ring->rx_skbuff_dma);
  err_free_dma_rx: 
#line 535 
  ;
  
#line 536 
  dma_free_attrs(priv->device,(unsigned long)rx_rsize * 16UL,(void *)rx_ring->dma_rx,rx_ring->dma_rx_phy,(struct dma_attrs *)0);
  
#line 540 
  __retres = (int)ret;
  return_label: 
#line 540 
                return __retres;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void free_tx_ring(struct device *dev, struct sxgbe_tx_queue *tx_ring, int tx_rsize)
{
  
#line 552 
  dma_free_attrs(dev,(unsigned long)tx_rsize * 24UL,(void *)tx_ring->dma_tx,tx_ring->dma_tx_phy,(struct dma_attrs *)0);
  
#line 553 
  return;
}


#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int init_dma_desc_rings(struct net_device *netd)
{
  int __retres;
  int queue_num;
  int ret;
  int tmp_0;
  int tmp_1;
  
#line 566 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)netd);
  
#line 567 
  int tx_rsize = (int)priv->dma_tx_size;
  
#line 568 
  int rx_rsize = (int)priv->dma_rx_size;
  
#line 571 
  queue_num = 0;
  
#line 571 
  goto ldv_50696;
  ldv_50695: 
#line 572 
  ;
  
#line 572 
  ret = init_tx_ring(priv->device,(unsigned char)((int)((unsigned char)queue_num)),priv->txq[queue_num],tx_rsize);
  
#line 574 
  if (ret != 0) {
    
#line 575 
    dev_err((struct device const *)(& netd->dev),"TX DMA ring allocation failed!\n");
    
#line 576 
    goto txalloc_err;
  }
  else ;
  
#line 582 
  (priv->txq[queue_num])->priv_ptr = priv;
  
#line 571 
  queue_num += 1;
  ldv_50696: 
#line 572 
  ;
  
#line 571 
  if (queue_num <= 7) 
#line 573 
                      goto ldv_50695; else 
#line 576 
                                           goto ldv_50697;
  ldv_50697: 
#line 577 
  ;
  
#line 586 
  queue_num = 0;
  
#line 586 
  goto ldv_50700;
  ldv_50699: 
#line 587 
  ;
  
#line 587 
  ret = init_rx_ring(netd,(unsigned char)((int)((unsigned char)queue_num)),priv->rxq[queue_num],rx_rsize);
  
#line 589 
  if (ret != 0) {
    
#line 590 
    netdev_err((struct net_device const *)netd,"RX DMA ring allocation failed!!\n");
    
#line 591 
    goto rxalloc_err;
  }
  else ;
  
#line 597 
  (priv->rxq[queue_num])->priv_ptr = priv;
  
#line 586 
  queue_num += 1;
  ldv_50700: 
#line 587 
  ;
  
#line 586 
  if (queue_num <= 15) 
#line 588 
                       goto ldv_50699; else 
#line 591 
                                            goto ldv_50701;
  ldv_50701: 
#line 592 
  ;
  
#line 600 
  sxgbe_clear_descriptors(priv);
  
#line 602 
  __retres = 0;
  
#line 602 
  goto return_label;
  txalloc_err: 
#line 604 
  ;
  
#line 605 
  goto ldv_50703;
  ldv_50702: 
#line 606 
  ;
  
#line 606 
  free_tx_ring(priv->device,priv->txq[queue_num],tx_rsize);
  ldv_50703: 
#line 607 
  ;
  
#line 605 
  tmp_0 = queue_num;
  
#line 605 
  queue_num -= 1;
  
#line 605 
  ;
  
#line 605 
  if (tmp_0 != 0) 
#line 607 
                  goto ldv_50702; else 
#line 610 
                                       goto ldv_50704;
  ldv_50704: 
#line 611 
  ;
  
#line 607 
  __retres = ret;
  
#line 607 
  goto return_label;
  rxalloc_err: 
#line 609 
  ;
  
#line 610 
  goto ldv_50706;
  ldv_50705: 
#line 611 
  ;
  
#line 611 
  free_rx_ring(priv->device,priv->rxq[queue_num],rx_rsize);
  ldv_50706: 
#line 612 
  ;
  
#line 610 
  tmp_1 = queue_num;
  
#line 610 
  queue_num -= 1;
  
#line 610 
  ;
  
#line 610 
  if (tmp_1 != 0) 
#line 612 
                  goto ldv_50705; else 
#line 615 
                                       goto ldv_50707;
  ldv_50707: 
#line 616 
  ;
  
#line 612 
  __retres = ret;
  return_label: 
#line 612 
                return __retres;
}


#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void tx_free_ring_skbufs(struct sxgbe_tx_queue *txqueue)
{
  int dma_desc;
  
#line 618 
  struct sxgbe_priv_data *priv = txqueue->priv_ptr;
  
#line 619 
  int tx_rsize = (int)priv->dma_tx_size;
  
#line 621 
  dma_desc = 0;
  
#line 621 
  goto ldv_50716;
  ldv_50715: 
#line 622 
  ;
  {
    
#line 622 
    struct sxgbe_tx_norm_desc *tdesc = txqueue->dma_tx + dma_desc;
    
#line 624 
    if (*(txqueue->tx_skbuff_dma + dma_desc) != 0ULL) {
      int tmp;
      
#line 625 
      tmp = (*(((priv->hw)->desc)->get_tx_len))(tdesc);
      
#line 625 
      ;
      
#line 625 
      ;
      
#line 625 
      dma_unmap_single_attrs(priv->device,*(txqueue->tx_skbuff_dma + dma_desc),(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    }
    else ;
    
#line 630 
    dev_kfree_skb_any(*(txqueue->tx_skbuff + dma_desc));
    
#line 631 
    *(txqueue->tx_skbuff + dma_desc) = (struct sk_buff *)0;
    
#line 632 
    *(txqueue->tx_skbuff_dma + dma_desc) = 0ULL;
  }
  
#line 621 
  dma_desc += 1;
  ldv_50716: 
#line 622 
  ;
  
#line 621 
  if (dma_desc < tx_rsize) 
#line 623 
                           goto ldv_50715; else 
#line 626 
                                                goto ldv_50717;
  ldv_50717: 
#line 627 
  ;
  
#line 628 
  return;
}


#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void dma_free_tx_skbufs(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 641 
  queue_num = 0;
  
#line 641 
  goto ldv_50724;
  ldv_50723: 
#line 642 
  ;
  {
    
#line 642 
    struct sxgbe_tx_queue *tqueue = priv->txq[queue_num];
    
#line 643 
    tx_free_ring_skbufs(tqueue);
  }
  
#line 641 
  queue_num += 1;
  ldv_50724: 
#line 642 
  ;
  
#line 641 
  if (queue_num <= 7) 
#line 643 
                      goto ldv_50723; else 
#line 646 
                                           goto ldv_50725;
  ldv_50725: 
#line 647 
  ;
  
#line 648 
  return;
}


#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void free_dma_desc_resources(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 650 
  int tx_rsize = (int)priv->dma_tx_size;
  
#line 651 
  int rx_rsize = (int)priv->dma_rx_size;
  
#line 654 
  dma_free_tx_skbufs(priv);
  
#line 657 
  queue_num = 0;
  
#line 657 
  goto ldv_50733;
  ldv_50732: 
#line 658 
  ;
  
#line 658 
  free_tx_ring(priv->device,priv->txq[queue_num],tx_rsize);
  
#line 657 
  queue_num += 1;
  ldv_50733: 
#line 658 
  ;
  
#line 657 
  if (queue_num <= 7) 
#line 659 
                      goto ldv_50732; else 
#line 662 
                                           goto ldv_50734;
  ldv_50734: 
#line 663 
  ;
  
#line 662 
  queue_num = 0;
  
#line 662 
  goto ldv_50736;
  ldv_50735: 
#line 663 
  ;
  
#line 663 
  free_rx_ring(priv->device,priv->rxq[queue_num],rx_rsize);
  
#line 662 
  queue_num += 1;
  ldv_50736: 
#line 663 
  ;
  
#line 662 
  if (queue_num <= 15) 
#line 664 
                       goto ldv_50735; else 
#line 667 
                                            goto ldv_50737;
  ldv_50737: 
#line 668 
  ;
  
#line 669 
  return;
}


#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int txring_mem_alloc(struct sxgbe_priv_data *priv)
{
  int __retres;
  int queue_num;
  
#line 671 
  queue_num = 0;
  
#line 671 
  goto ldv_50743;
  ldv_50742: 
#line 672 
  ;
  
#line 672 
  priv->txq[queue_num] = (struct sxgbe_tx_queue *)devm_kmalloc(priv->device,280UL,208U);
  
#line 674 
  if (priv->txq[queue_num] == (struct sxgbe_tx_queue *)0) {
    
#line 675 
    __retres = -12;
    
#line 675 
    goto return_label;
  }
  else ;
  
#line 671 
  queue_num += 1;
  ldv_50743: 
#line 672 
  ;
  
#line 671 
  if (queue_num <= 7) 
#line 673 
                      goto ldv_50742; else 
#line 676 
                                           goto ldv_50744;
  ldv_50744: 
#line 677 
  ;
  
#line 678 
  __retres = 0;
  return_label: 
#line 678 
                return __retres;
}


#line 681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int rxring_mem_alloc(struct sxgbe_priv_data *priv)
{
  int __retres;
  int queue_num;
  
#line 685 
  queue_num = 0;
  
#line 685 
  goto ldv_50750;
  ldv_50749: 
#line 686 
  ;
  
#line 686 
  priv->rxq[queue_num] = (struct sxgbe_rx_queue *)devm_kmalloc(priv->device,64UL,208U);
  
#line 688 
  if (priv->rxq[queue_num] == (struct sxgbe_rx_queue *)0) {
    
#line 689 
    __retres = -12;
    
#line 689 
    goto return_label;
  }
  else ;
  
#line 685 
  queue_num += 1;
  ldv_50750: 
#line 686 
  ;
  
#line 685 
  if (queue_num <= 15) 
#line 687 
                       goto ldv_50749; else 
#line 690 
                                            goto ldv_50751;
  ldv_50751: 
#line 691 
  ;
  
#line 692 
  __retres = 0;
  return_label: 
#line 692 
                return __retres;
}


#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_mtl_operation_mode(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 706 
  if ((long)((priv->plat)->force_sf_dma_mode != 0) != 0L) {
    
#line 708 
    queue_num = 0;
    
#line 708 
    goto ldv_50757;
    ldv_50756: 
#line 709 
    ;
    
#line 709 
    (*(((priv->hw)->mtl)->set_tx_mtl_mode))(priv->ioaddr,queue_num,2);
    
#line 708 
    queue_num += 1;
    ldv_50757: 
#line 709 
    ;
    
#line 708 
    if (priv->hw_cap.tx_mtl_queues > (unsigned int)queue_num) 
#line 710 
                                                              goto ldv_50756; else 
                                                                    
#line 713 
                                                                    goto ldv_50758;
    ldv_50758: 
#line 714 
    ;
    
#line 711 
    priv->tx_tc = 2;
    
#line 714 
    queue_num = 0;
    
#line 714 
    goto ldv_50760;
    ldv_50759: 
#line 715 
    ;
    
#line 715 
    (*(((priv->hw)->mtl)->set_rx_mtl_mode))(priv->ioaddr,queue_num,2);
    
#line 714 
    queue_num += 1;
    ldv_50760: 
#line 715 
    ;
    
#line 714 
    if (priv->hw_cap.rx_mtl_queues > (unsigned int)queue_num) 
#line 716 
                                                              goto ldv_50759; else 
                                                                    
#line 719 
                                                                    goto ldv_50761;
    ldv_50761: 
#line 720 
    ;
    
#line 717 
    priv->rx_tc = 2;
  }
  else 
    
#line 718 
    if ((long)((priv->plat)->force_thresh_dma_mode != 0) != 0L) {
      
#line 720 
      queue_num = 0;
      
#line 720 
      goto ldv_50763;
      ldv_50762: 
#line 721 
      ;
      
#line 721 
      (*(((priv->hw)->mtl)->set_tx_mtl_mode))(priv->ioaddr,queue_num,priv->tx_tc);
      
#line 720 
      queue_num += 1;
      ldv_50763: 
#line 721 
      ;
      
#line 720 
      if (priv->hw_cap.tx_mtl_queues > (unsigned int)queue_num) 
#line 722 
                                                                goto ldv_50762; else 
                                                                    
#line 725 
                                                                    goto ldv_50764;
      ldv_50764: 
#line 726 
      ;
      
#line 724 
      queue_num = 0;
      
#line 724 
      goto ldv_50766;
      ldv_50765: 
#line 725 
      ;
      
#line 725 
      (*(((priv->hw)->mtl)->set_rx_mtl_mode))(priv->ioaddr,queue_num,priv->rx_tc);
      
#line 724 
      queue_num += 1;
      ldv_50766: 
#line 725 
      ;
      
#line 724 
      if (priv->hw_cap.rx_mtl_queues > (unsigned int)queue_num) 
#line 726 
                                                                goto ldv_50765; else 
                                                                    
#line 729 
                                                                    goto ldv_50767;
      ldv_50767: 
#line 730 
      ;
    }
    else 
#line 728 
         printk("\001","sxgbe_mtl_operation_mode");
  
#line 729 
  return;
}


#line 737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_queue_clean(struct sxgbe_tx_queue *tqueue)
{
  struct netdev_queue *dev_txq;
  bool tmp_3;
  
#line 739 
  struct sxgbe_priv_data *priv = tqueue->priv_ptr;
  
#line 740 
  unsigned int tx_rsize = priv->dma_tx_size;
  
#line 742 
  u8 queue_no = tqueue->queue_no;
  
#line 744 
  dev_txq = netdev_get_tx_queue((struct net_device const *)priv->dev,(unsigned int)queue_no);
  
#line 746 
  ldv_spin_lock_75(& tqueue->tx_lock);
  
#line 748 
  priv->xstats.tx_clean += 1UL;
  
#line 749 
  goto ldv_50783;
  ldv_50782: 
#line 750 
  ;
  {
    struct sxgbe_tx_norm_desc *p;
    int tmp;
    
#line 750 
    unsigned int entry = tqueue->dirty_tx % tx_rsize;
    
#line 751 
    struct sk_buff *skb = *(tqueue->tx_skbuff + entry);
    
#line 754 
    p = tqueue->dma_tx + entry;
    
#line 757 
    tmp = (*(((priv->hw)->desc)->get_tx_owner))(p);
    
#line 757 
    if (tmp != 0) 
#line 758 
                  goto ldv_50779; else ;
    
#line 760 
    if ((priv->msg_enable & 1024U) != 0U) {
      
#line 761 
      struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_tx_queue_clean", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: curr %d, dirty %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))762U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 761 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 761 
                                                          __dynamic_pr_debug(& descriptor,"samsung_sxgbe","sxgbe_tx_queue_clean",tqueue->cur_tx,tqueue->dirty_tx); else ;
    }
    else ;
    
#line 764 
    if ((long)(*(tqueue->tx_skbuff_dma + entry) != 0ULL) != 0L) {
      int tmp_0;
      
#line 765 
      tmp_0 = (*(((priv->hw)->desc)->get_tx_len))(p);
      
#line 765 
      ;
      
#line 765 
      ;
      
#line 765 
      dma_unmap_single_attrs(priv->device,*(tqueue->tx_skbuff_dma + entry),(unsigned long)tmp_0,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 769 
      *(tqueue->tx_skbuff_dma + entry) = 0ULL;
    }
    else ;
    
#line 772 
    if ((long)(skb != (struct sk_buff *)0) != 0L) {
      
#line 773 
      consume_skb(skb);
      
#line 774 
      *(tqueue->tx_skbuff + entry) = (struct sk_buff *)0;
    }
    else ;
    
#line 777 
    (*(((priv->hw)->desc)->release_tx_desc))(p);
    
#line 779 
    tqueue->dirty_tx += 1U;
  }
  ldv_50783: 
#line 781 
  ;
  
#line 749 
  if (tqueue->dirty_tx != tqueue->cur_tx) 
#line 751 
                                          goto ldv_50782; else 
#line 754 
                                                               goto ldv_50779;
  ldv_50779: 
#line 755 
  ;
  
#line 783 
  tmp_3 = netif_tx_queue_stopped((struct netdev_queue const *)dev_txq);
  
#line 783 
  if ((long)((int)tmp_3 != 0) != 0L) {
    u32 tmp_4;
    
#line 783 
    tmp_4 = sxgbe_tx_avail(tqueue,(int)tx_rsize);
    
#line 783 
    ;
    
#line 783 
    if ((long)(tmp_4 > priv->dma_tx_size / 4U) != 0L) {
      bool tmp_1;
      
#line 785 
      netif_tx_lock(priv->dev);
      
#line 786 
      tmp_1 = netif_tx_queue_stopped((struct netdev_queue const *)dev_txq);
      
#line 786 
      if ((int)tmp_1 != 0) {
        u32 tmp_2;
        
#line 786 
        tmp_2 = sxgbe_tx_avail(tqueue,(int)tx_rsize);
        
#line 786 
        ;
        
#line 786 
        if (tmp_2 > priv->dma_tx_size / 4U) {
          
#line 788 
          if ((priv->msg_enable & 1024U) != 0U) {
            
#line 789 
            struct _ddebug descriptor_0 = {.modname = "samsung_sxgbe", .function = "sxgbe_tx_queue_clean", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: restart transmit\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))789U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
            
#line 789 
            if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 789 
                                                                  __dynamic_pr_debug(& descriptor_0,"samsung_sxgbe","sxgbe_tx_queue_clean"); else ;
          }
          else ;
          
#line 790 
          netif_tx_wake_queue(dev_txq);
        }
        else ;
      }
      else ;
      
#line 792 
      netif_tx_unlock(priv->dev);
    }
    else ;
  }
  else ;
  
#line 795 
  ldv_spin_unlock_76(& tqueue->tx_lock);
  
#line 796 
  return;
}


#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_all_clean(struct sxgbe_priv_data * const priv)
{
  u8 queue_num;
  
#line 807 
  queue_num = (unsigned char)0U;
  
#line 807 
  goto ldv_50791;
  ldv_50790: 
#line 808 
  ;
  {
    
#line 808 
    struct sxgbe_tx_queue *tqueue = priv->txq[(int)queue_num];
    
#line 810 
    sxgbe_tx_queue_clean(tqueue);
  }
  
#line 807 
  queue_num = (u8)((int)queue_num + 1);
  ldv_50791: 
#line 808 
  ;
  
#line 807 
  if ((unsigned int)queue_num <= 7U) 
#line 809 
                                     goto ldv_50790; else 
#line 812 
                                                          goto ldv_50792;
  ldv_50792: 
#line 813 
  ;
  
#line 813 
  if (priv->eee_enabled != 0 && ! priv->tx_path_in_lpi_mode) {
    unsigned long tmp;
    
#line 814 
    sxgbe_enable_eee_mode((struct sxgbe_priv_data const *)priv);
    
#line 815 
    tmp = msecs_to_jiffies((unsigned int)eee_timer);
    
#line 815 
    ;
    
#line 815 
    ;
    
#line 815 
    ldv_mod_timer_77(& priv->eee_ctrl_timer,tmp + jiffies);
  }
  else ;
  
#line 817 
  return;
}


#line 825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_restart_tx_queue(struct sxgbe_priv_data *priv, int queue_num)
{
  
#line 827 
  struct sxgbe_tx_queue *tx_ring = priv->txq[queue_num];
  
#line 828 
  struct netdev_queue *dev_txq = netdev_get_tx_queue((struct net_device const *)priv->dev,(unsigned int)queue_num);
  
#line 832 
  netif_tx_start_queue(dev_txq);
  
#line 835 
  (*(((priv->hw)->dma)->stop_tx_queue))(priv->ioaddr,queue_num);
  
#line 838 
  tx_free_ring_skbufs(tx_ring);
  
#line 841 
  tx_ring->cur_tx = 0U;
  
#line 842 
  tx_ring->dirty_tx = 0U;
  
#line 845 
  (*(((priv->hw)->dma)->start_tx_queue))(priv->ioaddr,queue_num);
  
#line 847 
  (priv->dev)->stats.tx_errors += 1UL;
  
#line 850 
  netif_tx_wake_queue(dev_txq);
  
#line 851 
  return;
}


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_reset_all_tx_queues(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 866 
  queue_num = 0;
  
#line 866 
  goto ldv_50804;
  ldv_50803: 
#line 867 
  ;
  
#line 867 
  sxgbe_restart_tx_queue(priv,queue_num);
  
#line 866 
  queue_num += 1;
  ldv_50804: 
#line 867 
  ;
  
#line 866 
  if (queue_num <= 7) 
#line 868 
                      goto ldv_50803; else 
#line 871 
                                           goto ldv_50805;
  ldv_50805: 
#line 872 
  ;
  
#line 873 
  return;
}


#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_get_hw_features(struct sxgbe_priv_data * const priv)
{
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 881 
  int rval = 0;
  
#line 882 
  struct sxgbe_hw_features *features = & priv->hw_cap;
  
#line 885 
  tmp = (*(((priv->hw)->mac)->get_hw_feature))(priv->ioaddr,(unsigned char)0);
  
#line 885 
  rval = (int)tmp;
  
#line 886 
  if (rval != 0) {
    
#line 887 
    features->pmt_remote_wake_up = (unsigned int)(rval >> 6) & 1U;
    
#line 889 
    features->pmt_magic_frame = (unsigned int)(rval >> 7) & 1U;
    
#line 890 
    features->atime_stamp = (unsigned int)(rval >> 12) & 1U;
    
#line 891 
    features->tx_csum_offload = (unsigned int)(rval >> 14) & 1U;
    
#line 893 
    features->rx_csum_offload = (unsigned int)(rval >> 16) & 1U;
    
#line 895 
    features->multi_macaddr = (unsigned int)(rval >> 18) & 31U;
    
#line 896 
    features->tstamp_srcselect = (unsigned int)(rval >> 25) & 3U;
    
#line 897 
    features->sa_vlan_insert = (unsigned int)(rval >> 27) & 1U;
    
#line 898 
    features->eee = (unsigned int)(rval >> 13) & 1U;
  }
  else ;
  
#line 902 
  tmp_0 = (*(((priv->hw)->mac)->get_hw_feature))(priv->ioaddr,(unsigned char)1);
  
#line 902 
  rval = (int)tmp_0;
  
#line 903 
  if (rval != 0) {
    
#line 904 
    features->rxfifo_size = (unsigned int)rval & 31U;
    
#line 905 
    features->txfifo_size = (unsigned int)(rval >> 6) & 31U;
    
#line 906 
    features->atstmap_hword = (unsigned int)(rval >> 6) & 31U;
    
#line 907 
    features->dcb_enable = (unsigned int)(rval >> 16) & 1U;
    
#line 908 
    features->splithead_enable = (unsigned int)(rval >> 17) & 1U;
    
#line 909 
    features->tcpseg_offload = (unsigned int)(rval >> 18) & 1U;
    
#line 910 
    features->debug_mem = (unsigned int)(rval >> 19) & 1U;
    
#line 911 
    features->rss_enable = (unsigned int)(rval >> 20) & 1U;
    
#line 912 
    features->hash_tsize = (unsigned int)(rval >> 24) & 3U;
    
#line 913 
    features->l3l4_filer_size = (unsigned int)(rval >> 27) & 15U;
  }
  else ;
  
#line 917 
  tmp_1 = (*(((priv->hw)->mac)->get_hw_feature))(priv->ioaddr,(unsigned char)2);
  
#line 917 
  rval = (int)tmp_1;
  
#line 918 
  if (rval != 0) {
    
#line 919 
    features->rx_mtl_queues = (unsigned int)rval & 15U;
    
#line 920 
    features->tx_mtl_queues = (unsigned int)(rval >> 6) & 15U;
    
#line 921 
    features->rx_dma_channels = (unsigned int)(rval >> 12) & 15U;
    
#line 922 
    features->tx_dma_channels = (unsigned int)(rval >> 18) & 15U;
    
#line 923 
    features->pps_output_count = (unsigned int)(rval >> 24) & 7U;
    
#line 924 
    features->aux_input_count = (unsigned int)(rval >> 28) & 7U;
  }
  else ;
  
#line 927 
  return rval;
}


#line 937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_check_ether_addr(struct sxgbe_priv_data *priv)
{
  int tmp_2;
  bool tmp_1;
  
#line 939 
  tmp_1 = is_valid_ether_addr((u8 const *)(priv->dev)->dev_addr);
  
#line 939 
  if (tmp_1) 
#line 939 
             tmp_2 = 0; else 
#line 939 
                             tmp_2 = 1;
  
#line 939 
  if (tmp_2) {
    int tmp_0;
    bool tmp;
    
#line 940 
    (*(((priv->hw)->mac)->get_umac_addr))(priv->ioaddr,(priv->dev)->dev_addr,0U);
    
#line 943 
    tmp = is_valid_ether_addr((u8 const *)(priv->dev)->dev_addr);
    
#line 943 
    if (tmp) 
#line 943 
             tmp_0 = 0; else 
#line 943 
                             tmp_0 = 1;
    
#line 943 
    if (tmp_0) 
#line 944 
               eth_hw_addr_random(priv->dev); else ;
  }
  else ;
  
#line 946 
  _dev_info((struct device const *)priv->device,"device MAC address %pM\n",(priv->dev)->dev_addr);
  
#line 947 
  return;
}


#line 958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_init_dma_engine(struct sxgbe_priv_data *priv)
{
  int queue_num;
  int tmp;
  
#line 960 
  int pbl = 8;
  
#line 960 
  int fixed_burst = 0;
  
#line 960 
  int burst_map = 0;
  
#line 963 
  if ((priv->plat)->dma_cfg != (struct sxgbe_dma_cfg *)0) {
    
#line 964 
    pbl = ((priv->plat)->dma_cfg)->pbl;
    
#line 965 
    fixed_burst = ((priv->plat)->dma_cfg)->fixed_burst;
    
#line 966 
    burst_map = ((priv->plat)->dma_cfg)->burst_map;
  }
  else ;
  
#line 969 
  queue_num = 0;
  
#line 969 
  goto ldv_50822;
  ldv_50821: 
#line 970 
  ;
  
#line 970 
  (*(((priv->hw)->dma)->cha_init))(priv->ioaddr,queue_num,fixed_burst,pbl,(priv->txq[queue_num])->dma_tx_phy,(priv->rxq[queue_num])->dma_rx_phy,(int)priv->dma_tx_size,(int)priv->dma_rx_size);
  
#line 969 
  queue_num += 1;
  ldv_50822: 
#line 970 
  ;
  
#line 969 
  if (queue_num <= 7) 
#line 971 
                      goto ldv_50821; else 
#line 974 
                                           goto ldv_50823;
  ldv_50823: 
#line 975 
  ;
  
#line 976 
  tmp = (*(((priv->hw)->dma)->init))(priv->ioaddr,fixed_burst,burst_map);
  
#line 976 
  return tmp;
}


#line 985  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_init_mtl_engine(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 989 
  queue_num = 0;
  
#line 989 
  goto ldv_50829;
  ldv_50828: 
#line 990 
  ;
  
#line 990 
  (*(((priv->hw)->mtl)->mtl_set_txfifosize))(priv->ioaddr,queue_num,(int)priv->hw_cap.tx_mtl_qsize);
  
#line 992 
  (*(((priv->hw)->mtl)->mtl_enable_txqueue))(priv->ioaddr,queue_num);
  
#line 989 
  queue_num += 1;
  ldv_50829: 
#line 990 
  ;
  
#line 989 
  if (queue_num <= 7) 
#line 991 
                      goto ldv_50828; else 
#line 994 
                                           goto ldv_50830;
  ldv_50830: 
#line 995 
  ;
  
#line 996 
  return;
}


#line 1002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_disable_mtl_engine(struct sxgbe_priv_data *priv)
{
  int queue_num;
  
#line 1006 
  queue_num = 0;
  
#line 1006 
  goto ldv_50836;
  ldv_50835: 
#line 1007 
  ;
  
#line 1007 
  (*(((priv->hw)->mtl)->mtl_disable_txqueue))(priv->ioaddr,queue_num);
  
#line 1006 
  queue_num += 1;
  ldv_50836: 
#line 1007 
  ;
  
#line 1006 
  if (queue_num <= 7) 
#line 1008 
                      goto ldv_50835; else 
#line 1011 
                                           goto ldv_50837;
  ldv_50837: 
#line 1012 
  ;
  
#line 1013 
  return;
}


#line 1017  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_timer(unsigned long data)
{
  
#line 1019 
  struct sxgbe_tx_queue *p = (struct sxgbe_tx_queue *)data;
  
#line 1020 
  sxgbe_tx_queue_clean(p);
  
#line 1021 
  return;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_init_coalesce(struct sxgbe_priv_data *priv)
{
  u8 queue_num;
  
#line 1035 
  queue_num = (unsigned char)0U;
  
#line 1035 
  goto ldv_50849;
  ldv_50848: 
#line 1036 
  ;
  {
    unsigned long tmp;
    
#line 1036 
    struct sxgbe_tx_queue *p = priv->txq[(int)queue_num];
    
#line 1037 
    p->tx_coal_frames = 128U;
    
#line 1038 
    p->tx_coal_timer = 40000U;
    {
      struct lock_class_key __key;
      
#line 1039 
      init_timer_key(& p->txtimer,0U,"((&p->txtimer))",& __key);
    }
    
#line 1039 
    p->txtimer.function = & sxgbe_tx_timer;
    
#line 1039 
    p->txtimer.data = (unsigned long)(& priv->txq[(int)queue_num]);
    
#line 1041 
    tmp = usecs_to_jiffies(p->tx_coal_timer);
    
#line 1041 
    p->txtimer.expires = tmp + jiffies;
    
#line 1042 
    add_timer(& p->txtimer);
  }
  
#line 1035 
  queue_num = (u8)((int)queue_num + 1);
  ldv_50849: 
#line 1036 
  ;
  
#line 1035 
  if ((unsigned int)queue_num <= 7U) 
#line 1037 
                                     goto ldv_50848; else 
#line 1040 
                                                          goto ldv_50850;
  ldv_50850: 
#line 1041 
  ;
  
#line 1042 
  return;
}


#line 1046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_del_timer(struct sxgbe_priv_data *priv)
{
  u8 queue_num;
  
#line 1050 
  queue_num = (unsigned char)0U;
  
#line 1050 
  goto ldv_50857;
  ldv_50856: 
#line 1051 
  ;
  {
    
#line 1051 
    struct sxgbe_tx_queue *p = priv->txq[(int)queue_num];
    
#line 1052 
    ldv_del_timer_sync_78(& p->txtimer);
  }
  
#line 1050 
  queue_num = (u8)((int)queue_num + 1);
  ldv_50857: 
#line 1051 
  ;
  
#line 1050 
  if ((unsigned int)queue_num <= 7U) 
#line 1052 
                                     goto ldv_50856; else 
#line 1055 
                                                          goto ldv_50858;
  ldv_50858: 
#line 1056 
  ;
  
#line 1057 
  return;
}


#line 1065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_open(struct net_device *dev)
{
  int __retres;
  int ret;
  int queue_num;
  bool tmp_0;
  
#line 1067 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1070 
  clk_prepare_enable(priv->sxgbe_clk);
  
#line 1072 
  sxgbe_check_ether_addr(priv);
  
#line 1075 
  ret = sxgbe_init_phy(dev);
  
#line 1076 
  if (ret != 0) {
    
#line 1077 
    netdev_err((struct net_device const *)dev,"%s: Cannot attach to PHY (error: %d)\n","sxgbe_open",ret);
    
#line 1079 
    goto phy_error;
  }
  else ;
  
#line 1083 
  priv->dma_tx_size = 512U;
  
#line 1084 
  priv->dma_rx_size = 1024U;
  
#line 1085 
  priv->dma_buf_sz = 2048U;
  
#line 1086 
  priv->tx_tc = 64;
  
#line 1087 
  priv->rx_tc = 64;
  
#line 1088 
  init_dma_desc_rings(dev);
  
#line 1091 
  ret = sxgbe_init_dma_engine(priv);
  
#line 1092 
  if (ret < 0) {
    
#line 1093 
    netdev_err((struct net_device const *)dev,"%s: DMA initialization failed\n","sxgbe_open");
    
#line 1094 
    goto init_error;
  }
  else ;
  
#line 1098 
  sxgbe_init_mtl_engine(priv);
  
#line 1101 
  (*(((priv->hw)->mac)->set_umac_addr))(priv->ioaddr,dev->dev_addr,0U);
  
#line 1104 
  (*(((priv->hw)->mac)->core_init))(priv->ioaddr);
  
#line 1105 
  queue_num = 0;
  
#line 1105 
  goto ldv_50869;
  ldv_50868: 
#line 1106 
  ;
  
#line 1106 
  (*(((priv->hw)->mac)->enable_rxqueue))(priv->ioaddr,queue_num);
  
#line 1105 
  queue_num += 1;
  ldv_50869: 
#line 1106 
  ;
  
#line 1105 
  if (queue_num <= 15) 
#line 1107 
                       goto ldv_50868; else 
#line 1110 
                                            goto ldv_50870;
  ldv_50870: 
#line 1111 
  ;
  
#line 1110 
  ret = devm_request_irq(priv->device,(unsigned int)priv->irq,& sxgbe_common_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
  
#line 1112 
  if ((long)(ret < 0) != 0L) {
    
#line 1113 
    netdev_err((struct net_device const *)dev,"%s: ERROR: allocating the IRQ %d (error: %d)\n","sxgbe_open",priv->irq,ret);
    
#line 1115 
    goto init_error;
  }
  else ;
  
#line 1121 
  if (priv->lpi_irq != dev->irq) {
    
#line 1122 
    ret = devm_request_irq(priv->device,(unsigned int)priv->lpi_irq,& sxgbe_common_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
    
#line 1125 
    if ((long)(ret < 0) != 0L) {
      
#line 1126 
      netdev_err((struct net_device const *)dev,"%s: ERROR: allocating the LPI IRQ %d (%d)\n","sxgbe_open",priv->lpi_irq,ret);
      
#line 1128 
      goto init_error;
    }
    else ;
  }
  else ;
  
#line 1133 
  queue_num = 0;
  
#line 1133 
  goto ldv_50872;
  ldv_50871: 
#line 1134 
  ;
  
#line 1134 
  ret = devm_request_irq(priv->device,(priv->txq[queue_num])->irq_no,& sxgbe_tx_interrupt,0UL,(char const *)(& dev->name),(void *)priv->txq[queue_num]);
  
#line 1138 
  if ((long)(ret < 0) != 0L) {
    
#line 1139 
    netdev_err((struct net_device const *)dev,"%s: ERROR: allocating TX IRQ %d (error: %d)\n","sxgbe_open",priv->irq,ret);
    
#line 1141 
    goto init_error;
  }
  else ;
  
#line 1133 
  queue_num += 1;
  ldv_50872: 
#line 1134 
  ;
  
#line 1133 
  if (queue_num <= 7) 
#line 1135 
                      goto ldv_50871; else 
#line 1138 
                                           goto ldv_50873;
  ldv_50873: 
#line 1139 
  ;
  
#line 1146 
  queue_num = 0;
  
#line 1146 
  goto ldv_50875;
  ldv_50874: 
#line 1147 
  ;
  
#line 1147 
  ret = devm_request_irq(priv->device,(priv->rxq[queue_num])->irq_no,& sxgbe_rx_interrupt,0UL,(char const *)(& dev->name),(void *)priv->rxq[queue_num]);
  
#line 1151 
  if ((long)(ret < 0) != 0L) {
    
#line 1152 
    netdev_err((struct net_device const *)dev,"%s: ERROR: allocating TX IRQ %d (error: %d)\n","sxgbe_open",priv->irq,ret);
    
#line 1154 
    goto init_error;
  }
  else ;
  
#line 1146 
  queue_num += 1;
  ldv_50875: 
#line 1147 
  ;
  
#line 1146 
  if (queue_num <= 15) 
#line 1148 
                       goto ldv_50874; else 
#line 1151 
                                            goto ldv_50876;
  ldv_50876: 
#line 1152 
  ;
  
#line 1159 
  (*(((priv->hw)->mac)->enable_tx))(priv->ioaddr,(_Bool)1);
  
#line 1160 
  (*(((priv->hw)->mac)->enable_rx))(priv->ioaddr,(_Bool)1);
  
#line 1163 
  sxgbe_mtl_operation_mode(priv);
  
#line 1166 
  memset((void *)(& priv->xstats),0,632UL);
  
#line 1168 
  priv->xstats.tx_threshold = (unsigned long)priv->tx_tc;
  
#line 1169 
  priv->xstats.rx_threshold = (unsigned long)priv->rx_tc;
  {
    
#line 1172 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_open", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "DMA RX/TX processes started...\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1172U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1172 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1172 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)dev,"DMA RX/TX processes started...\n"); else ;
  }
  
#line 1173 
  (*(((priv->hw)->dma)->start_tx))(priv->ioaddr,8);
  
#line 1174 
  (*(((priv->hw)->dma)->start_rx))(priv->ioaddr,16);
  
#line 1176 
  if (priv->phydev != (struct phy_device *)0) 
#line 1177 
                                              phy_start(priv->phydev); else ;
  
#line 1180 
  sxgbe_tx_init_coalesce(priv);
  
#line 1182 
  if (priv->use_riwt != 0 && ((priv->hw)->dma)->rx_watchdog != (void (*)(void *, u32 ))0) {
    
#line 1183 
    priv->rx_riwt = 112U;
    
#line 1184 
    (*(((priv->hw)->dma)->rx_watchdog))(priv->ioaddr,112U);
  }
  else ;
  
#line 1187 
  priv->tx_lpi_timer = 1000;
  
#line 1188 
  tmp_0 = sxgbe_eee_init(priv);
  
#line 1188 
  priv->eee_enabled = (int)tmp_0;
  
#line 1190 
  napi_enable(& priv->napi);
  
#line 1191 
  netif_start_queue(dev);
  
#line 1193 
  __retres = 0;
  
#line 1193 
  goto return_label;
  init_error: 
#line 1195 
  ;
  
#line 1196 
  free_dma_desc_resources(priv);
  
#line 1197 
  if (priv->phydev != (struct phy_device *)0) 
#line 1198 
                                              phy_disconnect(priv->phydev); else ;
  phy_error: 
#line 1199 
  ;
  
#line 1200 
  clk_disable_unprepare(priv->sxgbe_clk);
  
#line 1202 
  __retres = ret;
  return_label: 
#line 1202 
                return __retres;
}


#line 1211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_release(struct net_device *dev)
{
  int __retres;
  
#line 1213 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1215 
  if (priv->eee_enabled != 0) 
#line 1216 
                              ldv_del_timer_sync_79(& priv->eee_ctrl_timer); else ;
  
#line 1219 
  if (priv->phydev != (struct phy_device *)0) {
    
#line 1220 
    phy_stop(priv->phydev);
    
#line 1221 
    phy_disconnect(priv->phydev);
    
#line 1222 
    priv->phydev = (struct phy_device *)0;
  }
  else ;
  
#line 1225 
  netif_tx_stop_all_queues(dev);
  
#line 1227 
  napi_disable(& priv->napi);
  
#line 1230 
  sxgbe_tx_del_timer(priv);
  
#line 1233 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr,8);
  
#line 1234 
  (*(((priv->hw)->dma)->stop_rx))(priv->ioaddr,16);
  
#line 1237 
  sxgbe_disable_mtl_engine(priv);
  
#line 1240 
  free_dma_desc_resources(priv);
  
#line 1243 
  (*(((priv->hw)->mac)->enable_tx))(priv->ioaddr,(_Bool)0);
  
#line 1244 
  (*(((priv->hw)->mac)->enable_rx))(priv->ioaddr,(_Bool)0);
  
#line 1246 
  clk_disable_unprepare(priv->sxgbe_clk);
  
#line 1248 
  __retres = 0;
  
#line 1248 
  return __retres;
}


#line 1251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tso_prepare(struct sxgbe_priv_data *priv, struct sxgbe_tx_norm_desc *first_desc, struct sk_buff *skb)
{
  unsigned int total_hdr_len;
  unsigned int tcp_hdr_len;
  int tmp;
  int tmp_0;
  
#line 1258 
  tcp_hdr_len = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 1259 
  tmp = skb_transport_offset((struct sk_buff const *)skb);
  
#line 1259 
  total_hdr_len = (unsigned int)tmp + tcp_hdr_len;
  
#line 1261 
  first_desc->tdes01 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)total_hdr_len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1263 
  tmp_0 = dma_mapping_error(priv->device,first_desc->tdes01);
  
#line 1263 
  if (tmp_0 != 0) 
#line 1264 
                  printk("\001","sxgbe_tso_prepare"); else ;
  
#line 1266 
  first_desc->tdes23.tx_rd_des23.first_desc = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1267 
  (*(((priv->hw)->desc)->tx_desc_enable_tse))(first_desc,(unsigned char)1,total_hdr_len,tcp_hdr_len,skb->len - total_hdr_len);
  
#line 1270 
  return;
}


#line 1280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static netdev_tx_t sxgbe_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  unsigned int entry;
  unsigned int frag_num;
  struct netdev_queue *dev_txq;
  u16 tmp;
  struct sxgbe_tx_norm_desc *tx_desc;
  struct sxgbe_tx_norm_desc *first_desc;
  unsigned char *tmp_1;
  unsigned int tmp_2;
  unsigned char *tmp_3;
  bool tmp_4;
  u32 tmp_9;
  u32 tmp_15;
  unsigned char *tmp_18;
  
#line 1283 
  int cksum_flag = 0;
  
#line 1285 
  tmp = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 1285 
  unsigned int txq_index = (unsigned int)tmp;
  
#line 1286 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1287 
  unsigned int tx_rsize = priv->dma_tx_size;
  
#line 1288 
  struct sxgbe_tx_queue *tqueue = priv->txq[txq_index];
  
#line 1290 
  struct sxgbe_tx_ctxt_desc *ctxt_desc = (struct sxgbe_tx_ctxt_desc *)0;
  
#line 1291 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1291 
  int nr_frags = (int)((struct skb_shared_info *)tmp_1)->nr_frags;
  
#line 1292 
  tmp_2 = skb_headlen((struct sk_buff const *)skb);
  
#line 1292 
  int no_pagedlen = (int)tmp_2;
  
#line 1293 
  int is_jumbo = 0;
  
#line 1294 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1294 
  u16 cur_mss = ((struct skb_shared_info *)tmp_3)->gso_size;
  
#line 1295 
  u32 ctxt_desc_req = 0U;
  
#line 1298 
  dev_txq = netdev_get_tx_queue((struct net_device const *)dev,txq_index);
  
#line 1300 
  tmp_4 = skb_is_gso((struct sk_buff const *)skb);
  
#line 1300 
  if ((long)((int)tmp_4 != 0) != 0L) {
    
#line 1300 
    if ((long)((int)tqueue->prev_mss != (int)cur_mss) != 0L) 
#line 1301 
                                                             ctxt_desc_req = 1U; else ;
  }
  else ;
  
#line 1303 
  if ((long)(((int)skb->vlan_tci & 4096) != 0) != 0L) 
#line 1306 
                                                      ctxt_desc_req = 1U;
  else {
    int tmp_6;
    unsigned char *tmp_5;
    
#line 1303 
    tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1303 
    ;
    
#line 1303 
    if ((long)(((int)((struct skb_shared_info *)tmp_5)->tx_flags & 1) != 0) != 0L) 
      
#line 1303 
      if ((long)(tqueue->hwts_tx_en != 0) != 0L) 
#line 1303 
                                                 tmp_6 = 1; else 
#line 1303 
                                                                 tmp_6 = 0;
    else 
#line 1303 
         tmp_6 = 0;
    
#line 1303 
    if (tmp_6 != 0) 
#line 1306 
                    ctxt_desc_req = 1U; else ;
  }
  
#line 1309 
  ldv_spin_lock_80(& tqueue->tx_lock);
  
#line 1311 
  if ((int)priv->tx_path_in_lpi_mode != 0) 
#line 1312 
                                           sxgbe_disable_eee_mode(priv); else ;
  
#line 1314 
  tmp_9 = sxgbe_tx_avail(tqueue,(int)tx_rsize);
  
#line 1314 
  ;
  
#line 1314 
  if ((long)(tmp_9 < (unsigned int)(nr_frags + 1)) != 0L) {
    int tmp_8;
    bool tmp_7;
    
#line 1315 
    tmp_7 = netif_tx_queue_stopped((struct netdev_queue const *)dev_txq);
    
#line 1315 
    if (tmp_7) 
#line 1315 
               tmp_8 = 0; else 
#line 1315 
                               tmp_8 = 1;
    
#line 1315 
    if (tmp_8) {
      
#line 1316 
      netif_tx_start_queue(dev_txq);
      
#line 1317 
      netdev_err((struct net_device const *)dev,"%s: Tx Ring is full when %d queue is awake\n","sxgbe_xmit",txq_index);
    }
    else ;
    
#line 1321 
    ldv_spin_unlock_81(& tqueue->tx_lock);
    
#line 1322 
    __retres = NETDEV_TX_BUSY;
    
#line 1322 
    goto return_label;
  }
  else ;
  
#line 1325 
  entry = tqueue->cur_tx % tx_rsize;
  
#line 1326 
  tx_desc = tqueue->dma_tx + entry;
  
#line 1328 
  first_desc = tx_desc;
  
#line 1329 
  if (ctxt_desc_req != 0U) 
#line 1330 
                           ctxt_desc = (struct sxgbe_tx_ctxt_desc *)first_desc; else ;
  
#line 1333 
  *(tqueue->tx_skbuff + entry) = skb;
  
#line 1335 
  if (is_jumbo == 0) {
    bool tmp_11;
    
#line 1336 
    tmp_11 = skb_is_gso((struct sk_buff const *)skb);
    
#line 1336 
    if ((long)((int)tmp_11 != 0) != 0L) {
      
#line 1338 
      if ((long)((int)tqueue->prev_mss != (int)cur_mss) != 0L) {
        
#line 1339 
        (*(((priv->hw)->desc)->tx_ctxt_desc_set_mss))(ctxt_desc,(unsigned short)((int)cur_mss));
        
#line 1341 
        (*(((priv->hw)->desc)->tx_ctxt_desc_set_tcmssv))(ctxt_desc);
        
#line 1343 
        (*(((priv->hw)->desc)->tx_ctxt_desc_reset_ostc))(ctxt_desc);
        
#line 1345 
        (*(((priv->hw)->desc)->tx_ctxt_desc_set_ctxt))(ctxt_desc);
        
#line 1347 
        (*(((priv->hw)->desc)->tx_ctxt_desc_set_owner))(ctxt_desc);
        
#line 1350 
        tqueue->cur_tx += 1U;
        
#line 1350 
        entry = tqueue->cur_tx % tx_rsize;
        
#line 1351 
        first_desc = tqueue->dma_tx + entry;
        
#line 1353 
        tqueue->prev_mss = cur_mss;
      }
      else ;
      
#line 1355 
      sxgbe_tso_prepare(priv,first_desc,skb);
    }
    else {
      int tmp_10;
      
#line 1357 
      tx_desc->tdes01 = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)no_pagedlen,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 1359 
      tmp_10 = dma_mapping_error(priv->device,tx_desc->tdes01);
      
#line 1359 
      if (tmp_10 != 0) 
#line 1360 
                       netdev_err((struct net_device const *)dev,"%s: TX dma mapping failed!!\n","sxgbe_xmit"); else ;
      
#line 1363 
      (*(((priv->hw)->desc)->prepare_tx_desc))(tx_desc,(unsigned char)1,no_pagedlen,no_pagedlen,cksum_flag);
    }
  }
  else ;
  
#line 1368 
  frag_num = 0U;
  
#line 1368 
  goto ldv_50914;
  ldv_50913: 
#line 1369 
  ;
  {
    unsigned char *tmp_12;
    unsigned int tmp_13;
    
#line 1369 
    tmp_12 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1369 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_12)->frags[frag_num]);
    
#line 1370 
    tmp_13 = skb_frag_size(frag);
    
#line 1370 
    int len = (int)tmp_13;
    
#line 1372 
    tqueue->cur_tx += 1U;
    
#line 1372 
    entry = tqueue->cur_tx % tx_rsize;
    
#line 1373 
    tx_desc = tqueue->dma_tx + entry;
    
#line 1374 
    tx_desc->tdes01 = skb_frag_dma_map(priv->device,frag,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 1377 
    *(tqueue->tx_skbuff_dma + entry) = tx_desc->tdes01;
    
#line 1378 
    *(tqueue->tx_skbuff + entry) = (struct sk_buff *)0;
    
#line 1381 
    (*(((priv->hw)->desc)->prepare_tx_desc))(tx_desc,(unsigned char)0,len,len,cksum_flag);
    
#line 1382 
    ldv_inline_asm();
    
#line 1387 
    (*(((priv->hw)->desc)->set_tx_owner))(tx_desc);
  }
  
#line 1368 
  frag_num += 1U;
  ldv_50914: 
#line 1369 
  ;
  
#line 1368 
  if (frag_num < (unsigned int)nr_frags) 
#line 1370 
                                         goto ldv_50913; else 
#line 1373 
                                                              goto ldv_50915;
  ldv_50915: 
#line 1374 
  ;
  
#line 1391 
  (*(((priv->hw)->desc)->close_tx_desc))(tx_desc);
  
#line 1392 
  ldv_inline_asm();
  
#line 1396 
  tqueue->tx_count_frames = (tqueue->tx_count_frames + (unsigned int)nr_frags) + 1U;
  
#line 1397 
  if (tqueue->tx_count_frames > tqueue->tx_coal_frames) {
    unsigned long tmp_14;
    
#line 1398 
    (*(((priv->hw)->desc)->clear_tx_ic))(tx_desc);
    
#line 1399 
    priv->xstats.tx_reset_ic_bit += 1UL;
    
#line 1400 
    tmp_14 = usecs_to_jiffies(tqueue->tx_coal_timer);
    
#line 1400 
    ;
    
#line 1400 
    ;
    
#line 1400 
    ldv_mod_timer_82(& tqueue->txtimer,tmp_14 + jiffies);
  }
  else 
#line 1403 
       tqueue->tx_count_frames = 0U;
  
#line 1407 
  (*(((priv->hw)->desc)->set_tx_owner))(first_desc);
  
#line 1408 
  ldv_inline_asm();
  
#line 1412 
  tqueue->cur_tx += 1U;
  
#line 1415 
  if ((priv->msg_enable & 4096U) != 0U) {
    
#line 1415 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: curr %d dirty=%d entry=%d, first=%p, nfrags=%d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1418U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1415 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1415 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)dev,"%s: curr %d dirty=%d entry=%d, first=%p, nfrags=%d\n","sxgbe_xmit",tqueue->cur_tx % tx_rsize,tqueue->dirty_tx % tx_rsize,entry,first_desc,nr_frags); else ;
  }
  else ;
  
#line 1420 
  tmp_15 = sxgbe_tx_avail(tqueue,(int)tx_rsize);
  
#line 1420 
  if ((long)(tmp_15 <= 18U) != 0L) {
    
#line 1421 
    if ((priv->msg_enable & 8192U) != 0U) {
      
#line 1421 
      struct _ddebug descriptor_0 = {.modname = "samsung_sxgbe", .function = "sxgbe_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: stop transmitted packets\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1422U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1421 
      if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1421 
                                                            __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)dev,"%s: stop transmitted packets\n","sxgbe_xmit"); else ;
    }
    else ;
    
#line 1423 
    netif_tx_start_queue(dev_txq);
  }
  else ;
  
#line 1426 
  dev->stats.tx_bytes += (unsigned long)skb->len;
  
#line 1428 
  tmp_18 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1428 
  ;
  
#line 1428 
  if ((long)(((int)((struct skb_shared_info *)tmp_18)->tx_flags & 1) != 0) != 0L) {
    
#line 1428 
    if ((long)(tqueue->hwts_tx_en != 0) != 0L) {
      unsigned char *tmp_16;
      unsigned char *tmp_17;
      
#line 1431 
      tmp_16 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1431 
      tmp_17 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1431 
      ((struct skb_shared_info *)tmp_16)->tx_flags = (unsigned char)((unsigned int)((struct skb_shared_info *)tmp_17)->tx_flags | 4U);
      
#line 1432 
      (*(((priv->hw)->desc)->tx_enable_tstamp))(first_desc);
    }
    else ;
  }
  else ;
  
#line 1435 
  if (tqueue->hwts_tx_en == 0) 
#line 1436 
                               skb_tx_timestamp(skb); else ;
  
#line 1438 
  (*(((priv->hw)->dma)->enable_dma_transmission))(priv->ioaddr,(int)txq_index);
  
#line 1440 
  ldv_spin_unlock_83(& tqueue->tx_lock);
  
#line 1442 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1442 
                return __retres;
}


#line 1451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_rx_refill(struct sxgbe_priv_data *priv)
{
  
#line 1453 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 1454 
  int bfsize = (int)priv->dma_buf_sz;
  
#line 1455 
  u8 qnum = priv->cur_rx_qnum;
  
#line 1457 
  goto ldv_50929;
  ldv_50928: 
#line 1458 
  ;
  {
    struct sxgbe_rx_norm_desc *p;
    
#line 1459 
    unsigned int entry = (priv->rxq[(int)qnum])->dirty_rx % rxsize;
    
#line 1462 
    p = (priv->rxq[(int)qnum])->dma_rx + entry;
    
#line 1464 
    if ((long)(*((priv->rxq[(int)qnum])->rx_skbuff + entry) == (struct sk_buff *)0) != 0L) {
      struct sk_buff *skb;
      
#line 1467 
      skb = netdev_alloc_skb_ip_align(priv->dev,(unsigned int)bfsize);
      
#line 1469 
      if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 1470 
                                                    goto ldv_50927; else ;
      
#line 1472 
      *((priv->rxq[(int)qnum])->rx_skbuff + entry) = skb;
      
#line 1473 
      *((priv->rxq[(int)qnum])->rx_skbuff_dma + entry) = dma_map_single_attrs(priv->device,(void *)skb->data,(unsigned long)bfsize,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 1477 
      p->rdes23.rx_rd_des23.buf2_addr = (unsigned long long __attribute__((__FRAMA_C_BITFIELD_SIZE__(62))))*((priv->rxq[(int)qnum])->rx_skbuff_dma + entry);
    }
    else ;
    
#line 1480 
    ldv_inline_asm();
    
#line 1483 
    (*(((priv->hw)->desc)->set_rx_owner))(p);
    
#line 1484 
    (*(((priv->hw)->desc)->set_rx_int_on_com))(p);
    
#line 1485 
    ldv_inline_asm();
  }
  
#line 1458 
  (priv->rxq[(int)qnum])->dirty_rx += 1U;
  ldv_50929: 
#line 1459 
  ;
  
#line 1457 
  if ((priv->rxq[(int)qnum])->cur_rx != (priv->rxq[(int)qnum])->dirty_rx) 
    
#line 1459 
    goto ldv_50928; else 
#line 1462 
                         goto ldv_50927;
  ldv_50927: 
#line 1463 
  ;
  
#line 1464 
  return;
}


#line 1497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_rx(struct sxgbe_priv_data *priv, int limit)
{
  int __retres;
  int checksum;
  int status;
  
#line 1499 
  u8 qnum = priv->cur_rx_qnum;
  
#line 1500 
  unsigned int rxsize = priv->dma_rx_size;
  
#line 1501 
  unsigned int entry = (priv->rxq[(int)qnum])->cur_rx;
  
#line 1502 
  unsigned int next_entry = 0U;
  
#line 1503 
  unsigned int count = 0U;
  
#line 1507 
  goto ldv_50945;
  ldv_50946: 
#line 1508 
  ;
  {
    struct sxgbe_rx_norm_desc *p;
    struct sk_buff *skb;
    int frame_len;
    int tmp;
    
#line 1512 
    p = (priv->rxq[(int)qnum])->dma_rx + entry;
    
#line 1514 
    tmp = (*(((priv->hw)->desc)->get_rx_owner))(p);
    
#line 1514 
    if (tmp != 0) 
#line 1515 
                  goto ldv_50944; else ;
    
#line 1517 
    count += 1U;
    
#line 1519 
    (priv->rxq[(int)qnum])->cur_rx += 1U;
    
#line 1519 
    next_entry = (priv->rxq[(int)qnum])->cur_rx % rxsize;
    
#line 1520 
    __builtin_prefetch((void const *)((priv->rxq[(int)qnum])->dma_rx + next_entry));
    
#line 1526 
    status = (*(((priv->hw)->desc)->rx_wbstatus))(p,& priv->xstats,& checksum);
    
#line 1528 
    if ((long)(status < 0) != 0L) {
      
#line 1529 
      entry = next_entry;
      
#line 1530 
      goto ldv_50945;
    }
    else ;
    
#line 1532 
    if ((long)(priv->rxcsum_insertion == 0) != 0L) 
#line 1533 
                                                   checksum = 0; else ;
    
#line 1535 
    skb = *((priv->rxq[(int)qnum])->rx_skbuff + entry);
    
#line 1537 
    if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 1538 
                                                  netdev_err((struct net_device const *)priv->dev,"rx descriptor is not consistent\n"); else ;
    
#line 1540 
    __builtin_prefetch((void const *)skb->data);
    
#line 1541 
    *((priv->rxq[(int)qnum])->rx_skbuff + entry) = (struct sk_buff *)0;
    
#line 1543 
    frame_len = (*(((priv->hw)->desc)->get_rx_frame_len))(p);
    
#line 1545 
    skb_put(skb,(unsigned int)frame_len);
    
#line 1547 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))checksum;
    
#line 1548 
    if (checksum == 0) 
#line 1549 
                       netif_receive_skb(skb); else 
#line 1551 
                                                    napi_gro_receive(& priv->napi,skb);
    
#line 1553 
    entry = next_entry;
  }
  ldv_50945: 
#line 1555 
  ;
  
#line 1507 
  if (count < (unsigned int)limit) 
#line 1509 
                                   goto ldv_50946; else 
#line 1512 
                                                        goto ldv_50944;
  ldv_50944: 
#line 1513 
  ;
  
#line 1556 
  sxgbe_rx_refill(priv);
  
#line 1558 
  __retres = (int)count;
  
#line 1558 
  return __retres;
}


#line 1569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_poll(struct napi_struct *napi, int budget)
{
  struct sxgbe_priv_data *tmp;
  {
    
#line 1571 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1571 
    tmp = (struct sxgbe_priv_data *)__mptr + 18446744073709551400U;
  }
  
#line 1571 
  struct sxgbe_priv_data *priv = tmp;
  
#line 1573 
  int work_done = 0;
  
#line 1574 
  u8 qnum = priv->cur_rx_qnum;
  
#line 1576 
  priv->xstats.napi_poll += 1UL;
  
#line 1578 
  sxgbe_tx_all_clean(priv);
  
#line 1580 
  work_done = sxgbe_rx(priv,budget);
  
#line 1581 
  if (work_done < budget) {
    
#line 1582 
    napi_complete(napi);
    
#line 1583 
    (*(((priv->hw)->dma)->enable_dma_irq))(priv->ioaddr,(int)qnum);
  }
  else ;
  
#line 1586 
  return work_done;
}


#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_tx_timeout(struct net_device *dev)
{
  
#line 1599 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1601 
  sxgbe_reset_all_tx_queues(priv);
  
#line 1602 
  return;
}


#line 1612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static irqreturn_t sxgbe_common_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int status;
  
#line 1614 
  struct net_device *netdev = (struct net_device *)dev_id;
  
#line 1615 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)netdev);
  
#line 1618 
  status = (*(((priv->hw)->mac)->host_irq_status))(priv->ioaddr,& priv->xstats);
  
#line 1620 
  if ((status & 16) != 0) {
    
#line 1621 
    priv->xstats.tx_lpi_entry_n += 1UL;
    
#line 1622 
    priv->tx_path_in_lpi_mode = (_Bool)1;
  }
  else ;
  
#line 1624 
  if ((status & 32) != 0) {
    
#line 1625 
    priv->xstats.tx_lpi_exit_n += 1UL;
    
#line 1626 
    priv->tx_path_in_lpi_mode = (_Bool)0;
  }
  else ;
  
#line 1628 
  if ((status & 64) != 0) 
#line 1629 
                          priv->xstats.rx_lpi_entry_n += 1UL; else ;
  
#line 1630 
  if ((status & 128) != 0) 
#line 1631 
                           priv->xstats.rx_lpi_exit_n += 1UL; else ;
  
#line 1633 
  __retres = IRQ_HANDLED;
  
#line 1633 
  return __retres;
}


#line 1642  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static irqreturn_t sxgbe_tx_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int status;
  
#line 1645 
  struct sxgbe_tx_queue *txq = (struct sxgbe_tx_queue *)dev_id;
  
#line 1646 
  struct sxgbe_priv_data *priv = txq->priv_ptr;
  
#line 1649 
  status = (*(((priv->hw)->dma)->tx_dma_int_status))(priv->ioaddr,(int)txq->queue_no,& priv->xstats);
  
#line 1652 
  if ((long)((status & 4) != 0) != 0L) 
#line 1653 
                                       napi_schedule(& priv->napi); else ;
  
#line 1656 
  if ((long)((status & 1) != 0) != 0L) 
#line 1657 
                                       sxgbe_restart_tx_queue(priv,(int)txq->queue_no); else ;
  
#line 1660 
  if ((((long)((status & 2) != 0) != 0L && (long)(priv->tx_tc != 2) != 0L) != 0) != 0 && (long)(priv->tx_tc <= 511) != 0L) {
    int tmp;
    
#line 1664 
    if (priv->tx_tc <= 127) 
#line 1664 
                            tmp = 32; else 
#line 1664 
                                           tmp = 64;
    
#line 1664 
    priv->tx_tc += tmp;
    
#line 1665 
    (*(((priv->hw)->mtl)->set_tx_mtl_mode))(priv->ioaddr,(int)txq->queue_no,priv->tx_tc);
    
#line 1667 
    priv->xstats.tx_threshold = (unsigned long)priv->tx_tc;
  }
  else ;
  
#line 1670 
  __retres = IRQ_HANDLED;
  
#line 1670 
  return __retres;
}


#line 1679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static irqreturn_t sxgbe_rx_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int status;
  
#line 1682 
  struct sxgbe_rx_queue *rxq = (struct sxgbe_rx_queue *)dev_id;
  
#line 1683 
  struct sxgbe_priv_data *priv = rxq->priv_ptr;
  
#line 1686 
  status = (*(((priv->hw)->dma)->rx_dma_int_status))(priv->ioaddr,(int)rxq->queue_no,& priv->xstats);
  
#line 1689 
  if ((long)((status & 32) != 0) != 0L) {
    bool tmp;
    
#line 1689 
    tmp = napi_schedule_prep(& priv->napi);
    
#line 1689 
    if ((long)((int)tmp != 0) != 0L) {
      
#line 1690 
      (*(((priv->hw)->dma)->disable_dma_irq))(priv->ioaddr,(int)rxq->queue_no);
      
#line 1691 
      __napi_schedule(& priv->napi);
    }
    else ;
  }
  else ;
  
#line 1695 
  if ((((long)((status & 16) != 0) != 0L && (long)(priv->rx_tc != 2) != 0L) != 0) != 0 && (long)(priv->rx_tc <= 127) != 0L) {
    
#line 1699 
    priv->rx_tc += 32;
    
#line 1700 
    (*(((priv->hw)->mtl)->set_rx_mtl_mode))(priv->ioaddr,(int)rxq->queue_no,priv->rx_tc);
    
#line 1702 
    priv->xstats.rx_threshold = (unsigned long)priv->rx_tc;
  }
  else ;
  
#line 1705 
  __retres = IRQ_HANDLED;
  
#line 1705 
  return __retres;
}


#line 1708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
__inline static u64 sxgbe_get_stat64(void *ioaddr, int reg_lo, int reg_hi)
{
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 1710 
  tmp = readl((void const volatile *)(ioaddr + reg_lo));
  
#line 1710 
  u64 val = (unsigned long long)tmp;
  
#line 1712 
  tmp_0 = readl((void const volatile *)(ioaddr + reg_hi));
  
#line 1712 
  val = ((unsigned long long)tmp_0 << 32) | val;
  
#line 1714 
  return val;
}


#line 1728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static struct rtnl_link_stats64 *sxgbe_get_stats64(struct net_device *dev, struct rtnl_link_stats64 *stats)
{
  u64 count;
  
#line 1731 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1732 
  void *ioaddr = priv->ioaddr;
  
#line 1735 
  ldv_spin_lock_84(& priv->stats_lock);
  
#line 1739 
  writel(8U,(void volatile *)(ioaddr + 2048U));
  
#line 1741 
  stats->rx_bytes = sxgbe_get_stat64(ioaddr,2320,2324);
  
#line 1745 
  stats->rx_packets = sxgbe_get_stat64(ioaddr,2304,2308);
  
#line 1749 
  stats->multicast = sxgbe_get_stat64(ioaddr,2336,2340);
  
#line 1753 
  stats->rx_crc_errors = sxgbe_get_stat64(ioaddr,2344,2348);
  
#line 1757 
  stats->rx_length_errors = sxgbe_get_stat64(ioaddr,2424,2428);
  
#line 1761 
  stats->rx_missed_errors = sxgbe_get_stat64(ioaddr,2448,2452);
  
#line 1765 
  stats->tx_bytes = sxgbe_get_stat64(ioaddr,2180,2184);
  
#line 1769 
  count = sxgbe_get_stat64(ioaddr,2076,2080);
  
#line 1772 
  stats->tx_errors = sxgbe_get_stat64(ioaddr,2188,2192);
  
#line 1774 
  stats->tx_errors = count - stats->tx_errors;
  
#line 1775 
  stats->tx_packets = count;
  
#line 1776 
  stats->tx_fifo_errors = sxgbe_get_stat64(ioaddr,2172,2176);
  
#line 1778 
  writel(0U,(void volatile *)(ioaddr + 2048U));
  
#line 1779 
  ldv_spin_unlock_85(& priv->stats_lock);
  
#line 1781 
  return stats;
}


#line 1793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 1796 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1797 
  netdev_features_t changed = dev->features ^ features;
  
#line 1799 
  if ((changed & 17179869184ULL) != 0ULL) 
    
#line 1800 
    if ((features & 17179869184ULL) != 0ULL) {
      
#line 1801 
      (*(((priv->hw)->mac)->enable_rx_csum))(priv->ioaddr);
      
#line 1802 
      priv->rxcsum_insertion = 1;
    }
    else {
      
#line 1804 
      (*(((priv->hw)->mac)->disable_rx_csum))(priv->ioaddr);
      
#line 1805 
      priv->rxcsum_insertion = 0;
    }
  else ;
  
#line 1809 
  __retres = 0;
  
#line 1809 
  return __retres;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int tmp_0;
  bool tmp;
  int tmp_1;
  
#line 1827 
  if ((unsigned int)new_mtu + 4294967228U > 8932U) {
    
#line 1828 
    netdev_err((struct net_device const *)dev,"invalid MTU, MTU should be in between %d and %d\n",68,9000);
    
#line 1830 
    __retres = -22;
    
#line 1830 
    goto return_label;
  }
  else ;
  
#line 1834 
  if (dev->mtu == (unsigned int)new_mtu) {
    
#line 1835 
    __retres = 0;
    
#line 1835 
    goto return_label;
  }
  else ;
  
#line 1837 
  dev->mtu = (unsigned int)new_mtu;
  
#line 1839 
  tmp = netif_running((struct net_device const *)dev);
  
#line 1839 
  if (tmp) 
#line 1839 
           tmp_0 = 0; else 
#line 1839 
                           tmp_0 = 1;
  
#line 1839 
  if (tmp_0) {
    
#line 1840 
    __retres = 0;
    
#line 1840 
    goto return_label;
  }
  else ;
  
#line 1846 
  sxgbe_release(dev);
  
#line 1847 
  tmp_1 = sxgbe_open(dev);
  
#line 1847 
  __retres = tmp_1;
  return_label: 
#line 1847 
                return __retres;
}


#line 1850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_set_umac_addr(void *ioaddr, unsigned char *addr, unsigned int reg_n)
{
  unsigned long data;
  int tmp;
  int tmp_0;
  
#line 1855 
  data = (unsigned long)(((int)*(addr + 5U) << 8) | (int)*(addr + 4U));
  
#line 1860 
  if (reg_n > 15U) 
#line 1860 
                   tmp = 2048; else 
#line 1860 
                                    tmp = 64;
  
#line 1860 
  ;
  
#line 1860 
  ;
  
#line 1860 
  writel((unsigned int)data | 2147483648U,(void volatile *)(ioaddr + ((unsigned int)tmp + reg_n * 8U)));
  
#line 1861 
  data = (unsigned long)(((((int)*(addr + 3U) << 24) | ((int)*(addr + 2U) << 16)) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 1862 
  if (reg_n > 15U) 
#line 1862 
                   tmp_0 = 2052; else 
#line 1862 
                                      tmp_0 = 68;
  
#line 1862 
  ;
  
#line 1862 
  ;
  
#line 1862 
  writel((unsigned int)data,(void volatile *)(ioaddr + ((unsigned int)tmp_0 + reg_n * 8U)));
  
#line 1863 
  return;
}


#line 1876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_set_rx_mode(struct net_device *dev)
{
  u32 mc_filter[2U];
  struct netdev_hw_addr *ha;
  
#line 1878 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1879 
  void *ioaddr = priv->ioaddr;
  
#line 1880 
  unsigned int value = 0U;
  
#line 1883 
  int reg = 1;
  {
    
#line 1885 
    struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_set_rx_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: # mcasts %d, # unicast %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1886U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1885 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1885 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)dev,"%s: # mcasts %d, # unicast %d\n","sxgbe_set_rx_mode",dev->mc.count,dev->uc.count); else ;
  }
  
#line 1888 
  if ((dev->flags & 256U) != 0U) 
#line 1889 
                                 value = 1U;
  else 
    
#line 1891 
    if (dev->mc.count > 64 || (dev->flags & 512U) != 0U) {
      
#line 1893 
      value = 16U;
      
#line 1894 
      writel(4294967295U,(void volatile *)(ioaddr + 8U));
      
#line 1895 
      writel(4294967295U,(void volatile *)(ioaddr + 12U));
    }
    else 
      
#line 1897 
      if (dev->mc.count != 0) {
        struct netdev_hw_addr *tmp_0;
        struct netdev_hw_addr *tmp_6;
        
#line 1899 
        value = 4U;
        
#line 1901 
        memset((void *)(& mc_filter),0,8UL);
        {
          
#line 1902 
          struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
          
#line 1902 
          tmp_0 = (struct netdev_hw_addr *)__mptr;
        }
        
#line 1902 
        ha = tmp_0;
        
#line 1902 
        goto ldv_51031;
        ldv_51030: 
#line 1903 
        ;
        {
          u32 tmp_5;
          {
            u32 tmp_1;
            u32 tmp_4;
            
#line 1906 
            tmp_1 = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
            
#line 1906 
            u32 __x = ~ tmp_1;
            
#line 1906 
            if (0 != 0) {
              u32 tmp_2;
              {
                
#line 1906 
                u32 __x_0 = __x_0;
                
#line 1906 
                __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
                
#line 1906 
                __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
                
#line 1906 
                __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
                
#line 1906 
                __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
                
#line 1906 
                __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
                
#line 1906 
                tmp_2 = __x_0;
              }
              
#line 1906 
              tmp_4 = tmp_2;
            }
            else 
#line 1906 
                 tmp_4 = __bitrev32(__x);
            
#line 1906 
            tmp_5 = tmp_4;
          }
          
#line 1906 
          int bit_nr = (int)(tmp_5 >> 26);
          
#line 1912 
          mc_filter[bit_nr >> 5] |= (unsigned int)(1 << (bit_nr & 31));
        }
        {
          
#line 1902 
          struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
          
#line 1902 
          tmp_6 = (struct netdev_hw_addr *)__mptr_0;
        }
        
#line 1902 
        ha = tmp_6;
        ldv_51031: 
#line 1904 
        ;
        
#line 1902 
        if (& ha->list != & dev->mc.list) 
#line 1904 
                                          goto ldv_51030; else 
#line 1907 
                                                               goto ldv_51032;
        ldv_51032: 
#line 1908 
        ;
        
#line 1914 
        writel(mc_filter[0],(void volatile *)(ioaddr + 12U));
        
#line 1915 
        writel(mc_filter[1],(void volatile *)(ioaddr + 8U));
      }
      else ;
  
#line 1919 
  if (dev->uc.count > 32) 
#line 1923 
                          value |= 1U;
  else {
    struct netdev_hw_addr *tmp_7;
    struct netdev_hw_addr *tmp_8;
    {
      
#line 1925 
      struct list_head const *__mptr_1 = (struct list_head const *)dev->uc.list.next;
      
#line 1925 
      tmp_7 = (struct netdev_hw_addr *)__mptr_1;
    }
    
#line 1925 
    ha = tmp_7;
    
#line 1925 
    goto ldv_51038;
    ldv_51037: 
#line 1926 
    ;
    
#line 1926 
    sxgbe_set_umac_addr(ioaddr,(unsigned char *)(& ha->addr),(unsigned int)reg);
    
#line 1927 
    reg += 1;
    {
      
#line 1925 
      struct list_head const *__mptr_2 = (struct list_head const *)ha->list.next;
      
#line 1925 
      tmp_8 = (struct netdev_hw_addr *)__mptr_2;
    }
    
#line 1925 
    ha = tmp_8;
    ldv_51038: 
#line 1927 
    ;
    
#line 1925 
    if (& ha->list != & dev->uc.list) 
#line 1927 
                                      goto ldv_51037; else 
#line 1930 
                                                           goto ldv_51039;
    ldv_51039: 
#line 1931 
    ;
  }
  
#line 1934 
  writel(value,(void volatile *)(ioaddr + 4U));
  {
    
#line 1936 
    struct _ddebug descriptor_0 = {.modname = "samsung_sxgbe", .function = "sxgbe_set_rx_mode", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "Filter: 0x%08x\n\tHash: HI 0x%08x, LO 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1939U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1936 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) {
      unsigned int tmp_9;
      unsigned int tmp_10;
      unsigned int tmp_11;
      
#line 1936 
      tmp_9 = readl((void const volatile *)(ioaddr + 12U));
      
#line 1936 
      tmp_10 = readl((void const volatile *)(ioaddr + 8U));
      
#line 1936 
      tmp_11 = readl((void const volatile *)(ioaddr + 4U));
      
#line 1936 
      ;
      
#line 1936 
      __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)dev,"Filter: 0x%08x\n\tHash: HI 0x%08x, LO 0x%08x\n",tmp_11,tmp_10,tmp_9);
    }
    else ;
  }
  
#line 1938 
  return;
}


#line 1952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_poll_controller(struct net_device *dev)
{
  
#line 1954 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1956 
  disable_irq((unsigned int)priv->irq);
  
#line 1957 
  sxgbe_rx_interrupt(priv->irq,(void *)dev);
  
#line 1958 
  enable_irq((unsigned int)priv->irq);
  
#line 1959 
  return;
}


#line 1970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1972 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)dev);
  
#line 1973 
  int ret = -95;
  
#line 1975 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 1975 
  if (tmp_0) 
#line 1975 
             tmp_1 = 0; else 
#line 1975 
                             tmp_1 = 1;
  
#line 1975 
  if (tmp_1) {
    
#line 1976 
    __retres = -22;
    
#line 1976 
    goto return_label;
  }
  else ;
  
#line 1978 
  switch (cmd) {
    case 35143: 
#line 1979 
    ;
    case 35144: 
#line 1980 
    ;
    case 35145: 
#line 1981 
    ;
    
#line 1982 
    if (priv->phydev == (struct phy_device *)0) {
      
#line 1983 
      __retres = -22;
      
#line 1983 
      goto return_label;
    }
    else ;
    
#line 1984 
    ret = phy_mii_ioctl(priv->phydev,rq,cmd);
    
#line 1985 
    goto ldv_51055;
    default: 
#line 1986 
    ;
    
#line 1987 
    goto ldv_51055;
  }
  ldv_51055: 
#line 1990 
  ;
  
#line 1990 
  __retres = ret;
  return_label: 
#line 1990 
                return __retres;
}


#line 1993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static struct net_device_ops const sxgbe_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & sxgbe_open, .ndo_stop = & sxgbe_release, .ndo_start_xmit = & sxgbe_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & sxgbe_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = & sxgbe_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & sxgbe_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & sxgbe_tx_timeout, .ndo_get_stats64 = & sxgbe_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & sxgbe_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & sxgbe_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_get_ops(struct sxgbe_ops * const ops_ptr)
{
  
#line 2012 
  ops_ptr->mac = sxgbe_get_core_ops();
  
#line 2013 
  ops_ptr->desc = sxgbe_get_desc_ops();
  
#line 2014 
  ops_ptr->dma = sxgbe_get_dma_ops();
  
#line 2015 
  ops_ptr->mtl = sxgbe_get_mtl_ops();
  
#line 2018 
  ops_ptr->mii.addr = 512U;
  
#line 2019 
  ops_ptr->mii.data = 516U;
  
#line 2025 
  ops_ptr->link.port = 0;
  
#line 2026 
  ops_ptr->link.duplex = 0;
  
#line 2027 
  ops_ptr->link.speed = 0;
  
#line 2028 
  return;
}


#line 2036  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_hw_init(struct sxgbe_priv_data * const priv)
{
  int __retres;
  u32 ctrl_ids;
  int tmp_0;
  int tmp_1;
  
#line 2040 
  priv->hw = (struct sxgbe_ops *)kmalloc(64UL,208U);
  
#line 2041 
  if (priv->hw == (struct sxgbe_ops *)0) {
    
#line 2042 
    __retres = -12;
    
#line 2042 
    goto return_label;
  }
  else ;
  
#line 2045 
  sxgbe_get_ops(priv->hw);
  
#line 2048 
  tmp_0 = (*(((priv->hw)->mac)->get_controller_version))(priv->ioaddr);
  
#line 2048 
  ctrl_ids = (unsigned int)tmp_0;
  
#line 2049 
  (priv->hw)->ctrl_uid = (ctrl_ids >> 16) & 255U;
  
#line 2050 
  (priv->hw)->ctrl_id = ctrl_ids & 255U;
  
#line 2051 
  printk("\001",(priv->hw)->ctrl_uid,(priv->hw)->ctrl_id);
  
#line 2055 
  tmp_1 = sxgbe_get_hw_features(priv);
  
#line 2055 
  if (tmp_1 == 0) 
#line 2056 
                  printk("\001"); else ;
  
#line 2058 
  if (priv->hw_cap.tx_csum_offload != 0U) 
#line 2059 
                                          printk("\001"); else ;
  
#line 2061 
  if (priv->hw_cap.rx_csum_offload != 0U) 
#line 2062 
                                          printk("\001"); else ;
  
#line 2064 
  __retres = 0;
  return_label: 
#line 2064 
                return __retres;
}


#line 2067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_sw_reset(void *addr)
{
  int __retres;
  unsigned int tmp;
  int tmp_1;
  
#line 2069 
  int retry_count = 10;
  
#line 2071 
  writel(1U,(void volatile *)(addr + 12288U));
  
#line 2072 
  goto ldv_51075;
  ldv_51074: 
#line 2073 
  ;
  
#line 2073 
  tmp = readl((void const volatile *)(addr + 12288U));
  
#line 2073 
  if (((unsigned long)tmp & 1UL) == 0UL) 
#line 2075 
                                         goto ldv_51069; else ;
  {
    
#line 2076 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 2076 
      goto ldv_51072;
      ldv_51071: 
#line 2077 
      ;
      
#line 2076 
      __const_udelay(4295000UL);
      ldv_51072: 
#line 2078 
      ;
      
#line 2076 
      tmp_0 = __ms;
      
#line 2076 
      __ms -= 1UL;
      
#line 2076 
      ;
      
#line 2076 
      if (tmp_0 != 0UL) 
#line 2078 
                        goto ldv_51071; else 
#line 2081 
                                             goto ldv_51073;
      ldv_51073: 
#line 2082 
      ;
    }
  }
  ldv_51075: 
#line 2085 
  ;
  
#line 2072 
  tmp_1 = retry_count;
  
#line 2072 
  retry_count -= 1;
  
#line 2072 
  ;
  
#line 2072 
  if (tmp_1 != 0) 
#line 2074 
                  goto ldv_51074; else 
#line 2077 
                                       goto ldv_51069;
  ldv_51069: 
#line 2078 
  ;
  
#line 2079 
  if (retry_count < 0) {
    
#line 2080 
    __retres = -16;
    
#line 2080 
    goto return_label;
  }
  else ;
  
#line 2082 
  __retres = 0;
  return_label: 
#line 2082 
                return __retres;
}


#line 2093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
struct sxgbe_priv_data *sxgbe_drv_probe(struct device *device, struct sxgbe_plat_data *plat_dat, void *addr)
{
  struct sxgbe_priv_data *__retres;
  struct sxgbe_priv_data *priv;
  struct net_device *ndev;
  int ret;
  u8 queue_num;
  unsigned long tmp_0;
  bool tmp_1;
  
#line 2102 
  ndev = ldv_alloc_etherdev_mqs_86(1736,8U,16U);
  
#line 2104 
  if (ndev == (struct net_device *)0) {
    
#line 2105 
    __retres = (struct sxgbe_priv_data *)0;
    
#line 2105 
    goto return_label;
  }
  else ;
  
#line 2107 
  ndev->dev.parent = device;
  
#line 2109 
  priv = (struct sxgbe_priv_data *)netdev_priv((struct net_device const *)ndev);
  
#line 2110 
  priv->device = device;
  
#line 2111 
  priv->dev = ndev;
  
#line 2113 
  sxgbe_set_ethtool_ops(ndev);
  
#line 2114 
  priv->plat = plat_dat;
  
#line 2115 
  priv->ioaddr = addr;
  
#line 2117 
  ret = sxgbe_sw_reset(priv->ioaddr);
  
#line 2118 
  if (ret != 0) 
#line 2119 
                goto error_free_netdev; else ;
  
#line 2122 
  sxgbe_verify_args();
  
#line 2125 
  ret = sxgbe_hw_init(priv);
  
#line 2126 
  if (ret != 0) 
#line 2127 
                goto error_free_netdev; else ;
  
#line 2130 
  ret = txring_mem_alloc(priv);
  
#line 2131 
  if (ret != 0) 
#line 2132 
                goto error_free_hw; else ;
  
#line 2134 
  ret = rxring_mem_alloc(priv);
  
#line 2135 
  if (ret != 0) 
#line 2136 
                goto error_free_hw; else ;
  
#line 2138 
  ndev->netdev_ops = & sxgbe_netdev_ops;
  
#line 2140 
  ndev->hw_features = 17180999699ULL;
  
#line 2143 
  ndev->features = (ndev->features | ndev->hw_features) | 32ULL;
  
#line 2144 
  tmp_0 = msecs_to_jiffies(5000U);
  
#line 2144 
  ndev->watchdog_timeo = (int)tmp_0;
  
#line 2147 
  ndev->priv_flags |= 131072U;
  
#line 2149 
  priv->msg_enable = netif_msg_init(debug,(int)default_msg_level);
  
#line 2152 
  if (priv->hw_cap.tcpseg_offload != 0U) {
    
#line 2153 
    queue_num = (unsigned char)0U;
    
#line 2153 
    goto ldv_51088;
    ldv_51087: 
#line 2154 
    ;
    
#line 2154 
    (*(((priv->hw)->dma)->enable_tso))(priv->ioaddr,(unsigned char)((int)queue_num));
    
#line 2153 
    queue_num = (u8)((int)queue_num + 1);
    ldv_51088: 
#line 2154 
    ;
    
#line 2153 
    if ((unsigned int)queue_num <= 7U) 
#line 2155 
                                       goto ldv_51087; else 
#line 2158 
                                                            goto ldv_51089;
    ldv_51089: 
#line 2159 
    ;
  }
  else ;
  
#line 2159 
  if (priv->hw_cap.rx_csum_offload != 0U) {
    
#line 2160 
    (*(((priv->hw)->mac)->enable_rx_csum))(priv->ioaddr);
    
#line 2161 
    priv->rxcsum_insertion = 1;
  }
  else ;
  
#line 2165 
  priv->rx_pause = (unsigned char)1U;
  
#line 2166 
  priv->tx_pause = (unsigned char)1U;
  
#line 2169 
  if ((priv->plat)->riwt_off == 0) {
    
#line 2170 
    priv->use_riwt = 1;
    
#line 2171 
    printk("\001");
  }
  else ;
  
#line 2174 
  netif_napi_add(ndev,& priv->napi,& sxgbe_poll,64);
  
#line 2176 
  spinlock_check(& priv->stats_lock);
  {
    struct lock_class_key __key;
    
#line 2176 
    __raw_spin_lock_init(& priv->stats_lock.__anonCompField_spinlock_18.rlock,"&(&priv->stats_lock)->rlock",& __key);
  }
  
#line 2178 
  priv->sxgbe_clk = clk_get(priv->device,"sam_sxgbeeth");
  
#line 2179 
  tmp_1 = IS_ERR_0((void const *)priv->sxgbe_clk);
  
#line 2179 
  if ((int)tmp_1 != 0) {
    
#line 2180 
    netdev_warn((struct net_device const *)ndev,"%s: warning: cannot get CSR clock\n","sxgbe_drv_probe");
    
#line 2182 
    goto error_napi_del;
  }
  else ;
  
#line 2191 
  if ((priv->plat)->clk_csr == 0) 
#line 2192 
                                  sxgbe_clk_csr_set(priv); else 
#line 2194 
                                                                priv->clk_csr = (priv->plat)->clk_csr;
  
#line 2197 
  ret = sxgbe_mdio_register(ndev);
  
#line 2198 
  if (ret < 0) {
    {
      
#line 2199 
      struct _ddebug descriptor = {.modname = "samsung_sxgbe", .function = "sxgbe_drv_probe", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c", .format = "%s: MDIO bus (id: %d) registration failed\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2200U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 2199 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2199 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)ndev,"%s: MDIO bus (id: %d) registration failed\n","sxgbe_drv_probe",(priv->plat)->bus_id); else ;
    }
    
#line 2201 
    goto error_clk_put;
  }
  else ;
  
#line 2204 
  ret = ldv_register_netdev_87(ndev);
  
#line 2205 
  if (ret != 0) {
    
#line 2206 
    printk("\001","sxgbe_drv_probe",ret);
    
#line 2207 
    goto error_mdio_unregister;
  }
  else ;
  
#line 2210 
  sxgbe_check_ether_addr(priv);
  
#line 2212 
  __retres = priv;
  
#line 2212 
  goto return_label;
  error_mdio_unregister: 
#line 2214 
  ;
  
#line 2215 
  sxgbe_mdio_unregister(ndev);
  error_clk_put: 
#line 2216 
  ;
  
#line 2217 
  clk_put(priv->sxgbe_clk);
  error_napi_del: 
#line 2218 
  ;
  
#line 2219 
  netif_napi_del(& priv->napi);
  error_free_hw: 
#line 2220 
  ;
  
#line 2221 
  kfree((void const *)priv->hw);
  error_free_netdev: 
#line 2222 
  ;
  
#line 2223 
  ldv_free_netdev_88(ndev);
  
#line 2225 
  __retres = (struct sxgbe_priv_data *)0;
  return_label: 
#line 2225 
                return __retres;
}


#line 2234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
int sxgbe_drv_remove(struct net_device *ndev)
{
  int __retres;
  u8 queue_num;
  
#line 2236 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 2239 
  netdev_info((struct net_device const *)ndev,"%s: removing driver\n","sxgbe_drv_remove");
  
#line 2241 
  queue_num = (unsigned char)0U;
  
#line 2241 
  goto ldv_51103;
  ldv_51102: 
#line 2242 
  ;
  
#line 2242 
  (*(((priv->hw)->mac)->disable_rxqueue))(priv->ioaddr,(int)queue_num);
  
#line 2241 
  queue_num = (u8)((int)queue_num + 1);
  ldv_51103: 
#line 2242 
  ;
  
#line 2241 
  if ((unsigned int)queue_num <= 15U) 
#line 2243 
                                      goto ldv_51102; else 
#line 2246 
                                                           goto ldv_51104;
  ldv_51104: 
#line 2247 
  ;
  
#line 2245 
  (*(((priv->hw)->dma)->stop_rx))(priv->ioaddr,16);
  
#line 2246 
  (*(((priv->hw)->dma)->stop_tx))(priv->ioaddr,8);
  
#line 2248 
  (*(((priv->hw)->mac)->enable_tx))(priv->ioaddr,(_Bool)0);
  
#line 2249 
  (*(((priv->hw)->mac)->enable_rx))(priv->ioaddr,(_Bool)0);
  
#line 2251 
  ldv_unregister_netdev_89(ndev);
  
#line 2253 
  sxgbe_mdio_unregister(ndev);
  
#line 2255 
  clk_put(priv->sxgbe_clk);
  
#line 2257 
  netif_napi_del(& priv->napi);
  
#line 2259 
  kfree((void const *)priv->hw);
  
#line 2261 
  ldv_free_netdev_90(ndev);
  
#line 2263 
  __retres = 0;
  
#line 2263 
  return __retres;
}


#line 2267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
int sxgbe_suspend(struct net_device *ndev)
{
  int __retres;
  
#line 2269 
  __retres = 0;
  
#line 2269 
  return __retres;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
int sxgbe_resume(struct net_device *ndev)
{
  int __retres;
  
#line 2274 
  __retres = 0;
  
#line 2274 
  return __retres;
}


#line 2277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
int sxgbe_freeze(struct net_device *ndev)
{
  int __retres;
  
#line 2279 
  __retres = -38;
  
#line 2279 
  return __retres;
}


#line 2282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
int sxgbe_restore(struct net_device *ndev)
{
  int __retres;
  
#line 2284 
  __retres = -38;
  
#line 2284 
  return __retres;
}


#line 2289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static int sxgbe_init(void)
{
  int __retres;
  int ret;
  
#line 2293 
  ret = sxgbe_register_platform();
  
#line 2294 
  if (ret != 0) 
#line 2295 
                goto err; else ;
  
#line 2296 
  __retres = 0;
  
#line 2296 
  goto return_label;
  err: 
#line 2297 
  ;
  
#line 2298 
  printk("\001");
  
#line 2299 
  __retres = ret;
  return_label: 
#line 2299 
                return __retres;
}


#line 2302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_main.c"
static void sxgbe_exit(void)
{
  
#line 2304 
  sxgbe_unregister_platform();
  
#line 2305 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int (*ldv_emg_alias_eth_mac_addr_16)(struct net_device *, void *) = & eth_mac_addr;

#line 59 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 60 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 61 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 62 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 65 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 66 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_wrapper_sxgbe_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 71 
  tmp = sxgbe_open(arg0);
  
#line 71 
  return tmp;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
void ldv_emg_sxgbe_exit(void)
{
  
#line 76 
  sxgbe_exit();
  
#line 77 
  return;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_wrapper_sxgbe_release_2(struct net_device *arg0)
{
  int tmp;
  
#line 80 
  tmp = sxgbe_release(arg0);
  
#line 80 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_sxgbe_get_stats64_4(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 85 
  tmp = sxgbe_get_stats64(arg0,arg1);
  
#line 85 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
void ldv_emg_wrapper_sxgbe_poll_controller_27(struct net_device *arg0)
{
  
#line 90 
  sxgbe_poll_controller(arg0);
  
#line 91 
  return;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_wrapper_sxgbe_ioctl_19(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 95 
  tmp = sxgbe_ioctl(arg0,arg1,arg2);
  
#line 95 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_wrapper_sxgbe_change_mtu_5(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 100 
  tmp = sxgbe_change_mtu(arg0,arg1);
  
#line 100 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
void ldv_emg_wrapper_sxgbe_set_rx_mode_28(struct net_device *arg0)
{
  
#line 105 
  sxgbe_set_rx_mode(arg0);
  
#line 106 
  return;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_sxgbe_init(void)
{
  int tmp;
  
#line 110 
  tmp = sxgbe_init();
  
#line 110 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
void ldv_emg_wrapper_sxgbe_tx_timeout_18(struct net_device *arg0)
{
  
#line 114 
  sxgbe_tx_timeout(arg0);
  
#line 115 
  return;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
enum netdev_tx ldv_emg_wrapper_sxgbe_xmit_15(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 119 
  tmp = sxgbe_xmit(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
int ldv_emg_wrapper_sxgbe_set_features_10(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 124 
  tmp = sxgbe_set_features(arg0,arg1);
  
#line 124 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static long PTR_ERR_0(void const *ptr)
{
  long tmp;
  
#line 139 
  tmp = ldv_ptr_err(ptr);
  
#line 139 
  return tmp;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static bool IS_ERR_0(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 147 
  ret = ldv_is_err(ptr);
  
#line 148 
  __retres = (_Bool)(ret != 0L);
  
#line 148 
  return __retres;
}


#line 542  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 545 
  tmp = ldv_kmalloc(size,flags);
  
#line 545 
  return tmp;
}


#line 549  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 552 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 552 
  return tmp;
}


#line 666  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 670 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 672 
  spin_lock(lock);
  
#line 673 
  return;
}


#line 709  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 713 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 715 
  spin_unlock(lock);
  
#line 716 
  return;
}


#line 729  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_lock_65(spinlock_t *lock)
{
  
#line 733 
  ldv_spin_model_lock((char *)"tx_global_lock_of_net_device");
  
#line 735 
  spin_lock(lock);
  
#line 736 
  return;
}


#line 739  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_66(spinlock_t *lock)
{
  
#line 743 
  ldv_spin_model_unlock((char *)"tx_global_lock_of_net_device");
  
#line 745 
  spin_unlock(lock);
  
#line 746 
  return;
}


#line 809  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 813 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 813 
  return tmp;
}


#line 817  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 821 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 821 
  return tmp;
}


#line 825  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 829 
  ldv_spin_model_lock((char *)"tx_lock_of_sxgbe_tx_queue");
  
#line 831 
  spin_lock(lock);
  
#line 832 
  return;
}


#line 835  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 839 
  ldv_spin_model_unlock((char *)"tx_lock_of_sxgbe_tx_queue");
  
#line 841 
  spin_unlock(lock);
  
#line 842 
  return;
}


#line 845  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 849 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 849 
  return tmp;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_del_timer_sync_78(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 857 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 857 
  return tmp;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 865 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 865 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 873 
  ldv_spin_model_lock((char *)"tx_lock_of_sxgbe_tx_queue");
  
#line 875 
  spin_lock(lock);
  
#line 876 
  return;
}


#line 879  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 883 
  ldv_spin_model_unlock((char *)"tx_lock_of_sxgbe_tx_queue");
  
#line 885 
  spin_unlock(lock);
  
#line 886 
  return;
}


#line 889  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 893 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 893 
  return tmp;
}


#line 897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_83(spinlock_t *lock)
{
  
#line 901 
  ldv_spin_model_unlock((char *)"tx_lock_of_sxgbe_tx_queue");
  
#line 903 
  spin_unlock(lock);
  
#line 904 
  return;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_lock_84(spinlock_t *lock)
{
  
#line 911 
  ldv_spin_model_lock((char *)"stats_lock_of_sxgbe_priv_data");
  
#line 913 
  spin_lock(lock);
  
#line 914 
  return;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_spin_unlock_85(spinlock_t *lock)
{
  
#line 921 
  ldv_spin_model_unlock((char *)"stats_lock_of_sxgbe_priv_data");
  
#line 923 
  spin_unlock(lock);
  
#line 924 
  return;
}


#line 927  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 931 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 931 
  return tmp;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 939 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 939 
  return tmp;
}


#line 943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_free_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 947 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 948 
  return;
}


#line 951  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_unregister_netdev_89(struct net_device *ldv_func_arg1)
{
  
#line 955 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/weaver/.tmp_sxgbe_main.c.aux"
static void ldv_free_netdev_90(struct net_device *ldv_func_arg1)
{
  
#line 963 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 964 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_init(void *ioaddr, unsigned int etsalg, unsigned int raa)
{
  u32 reg_val;
  
#line 28 
  reg_val = readl((void const volatile *)(ioaddr + 4096U));
  
#line 29 
  reg_val &= 4294967199U;
  
#line 32 
  switch (etsalg & 3U) {
    case (unsigned int)(-97): 
#line 33 
    ;
    
#line 34 
    reg_val &= 4294967199U;
    
#line 35 
    goto ldv_8495;
    case (unsigned int)32: 
#line 36 
    ;
    
#line 37 
    reg_val |= 32U;
    
#line 38 
    goto ldv_8495;
    case (unsigned int)64: 
#line 39 
    ;
    
#line 40 
    reg_val |= 64U;
    
#line 41 
    goto ldv_8495;
  }
  ldv_8495: 
#line 43 
  ;
  
#line 43 
  writel(reg_val,(void volatile *)(ioaddr + 4096U));
  
#line 45 
  switch (raa & 1U) {
    case (unsigned int)(-5): 
#line 46 
    ;
    
#line 47 
    reg_val &= 4294967291U;
    
#line 48 
    goto ldv_8499;
    case (unsigned int)4: 
#line 49 
    ;
    
#line 50 
    reg_val |= 4U;
    
#line 51 
    goto ldv_8499;
  }
  ldv_8499: 
#line 53 
  ;
  
#line 53 
  writel(reg_val,(void volatile *)(ioaddr + 4096U));
  
#line 54 
  return;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_dma_dm_rxqueue(void *ioaddr)
{
  
#line 59 
  writel(2155905152U,(void volatile *)(ioaddr + 4144U));
  
#line 60 
  writel(2155905152U,(void volatile *)(ioaddr + 4148U));
  
#line 61 
  writel(2155905152U,(void volatile *)(ioaddr + 4152U));
  
#line 62 
  return;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_set_txfifosize(void *ioaddr, int queue_num, int queue_fifo)
{
  u32 fifo_bits;
  u32 reg_val;
  
#line 70 
  fifo_bits = (unsigned int)(queue_fifo / 256 + -1);
  
#line 71 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 72 
  reg_val = (fifo_bits << 16) | reg_val;
  
#line 73 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 74 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_set_rxfifosize(void *ioaddr, int queue_num, int queue_fifo)
{
  u32 fifo_bits;
  u32 reg_val;
  
#line 82 
  fifo_bits = (unsigned int)(queue_fifo / 256 + -1);
  
#line 83 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 84 
  reg_val = (fifo_bits << 16) | reg_val;
  
#line 85 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 86 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_enable_txqueue(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 92 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 93 
  reg_val |= 8U;
  
#line 94 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 95 
  return;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_disable_txqueue(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 101 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 102 
  reg_val &= 4294967287U;
  
#line 103 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 104 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fc_active(void *ioaddr, int queue_num, int threshold)
{
  u32 reg_val;
  
#line 111 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 112 
  reg_val &= 4294965503U;
  
#line 113 
  reg_val = (unsigned int)(threshold << 8) | reg_val;
  
#line 115 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 116 
  return;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fc_enable(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 122 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 123 
  reg_val |= 128U;
  
#line 124 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 125 
  return;
}


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fc_deactive(void *ioaddr, int queue_num, int threshold)
{
  u32 reg_val;
  
#line 132 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 133 
  reg_val &= 4294909951U;
  
#line 134 
  reg_val = (unsigned int)(threshold << 13) | reg_val;
  
#line 136 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 137 
  return;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fep_enable(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 143 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 144 
  reg_val |= 16U;
  
#line 146 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 147 
  return;
}


#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fep_disable(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 153 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 154 
  reg_val &= 4294967279U;
  
#line 156 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 157 
  return;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fup_enable(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 163 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 164 
  reg_val |= 8U;
  
#line 166 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 167 
  return;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_mtl_fup_disable(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 173 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 174 
  reg_val &= 4294967287U;
  
#line 176 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 177 
  return;
}


#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_set_tx_mtl_mode(void *ioaddr, int queue_num, int tx_mode)
{
  u32 reg_val;
  
#line 185 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 187 
  if (tx_mode == 2) 
#line 188 
                    reg_val |= 2U;
  else 
    
#line 191 
    if (tx_mode <= 64) 
#line 192 
                       reg_val = reg_val;
    else 
      
#line 193 
      if (tx_mode <= 96) 
#line 194 
                         reg_val |= 32U;
      else 
        
#line 195 
        if (tx_mode <= 128) 
#line 196 
                            reg_val |= 48U;
        else 
          
#line 197 
          if (tx_mode <= 192) 
#line 198 
                              reg_val |= 64U;
          else 
            
#line 199 
            if (tx_mode <= 256) 
#line 200 
                                reg_val |= 80U;
            else 
              
#line 201 
              if (tx_mode <= 384) 
#line 202 
                                  reg_val |= 96U; else 
#line 204 
                                                       reg_val |= 112U;
  
#line 208 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num + 34) * 128));
  
#line 209 
  return;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static void sxgbe_set_rx_mtl_mode(void *ioaddr, int queue_num, int rx_mode)
{
  u32 reg_val;
  
#line 216 
  reg_val = readl((void const volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 218 
  if (rx_mode == 32) 
#line 219 
                     reg_val |= 32U;
  else 
    
#line 221 
    if (rx_mode <= 64) 
#line 222 
                       reg_val = reg_val;
    else 
      
#line 223 
      if (rx_mode <= 96) 
#line 224 
                         reg_val |= 2U;
      else 
        
#line 225 
        if (rx_mode <= 128) 
#line 226 
                            reg_val |= 3U; else ;
  
#line 230 
  writel(reg_val,(void volatile *)(ioaddr + (queue_num * 128 + 4416)));
  
#line 231 
  return;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
static struct sxgbe_mtl_ops const mtl_ops = {.mtl_init = & sxgbe_mtl_init, .mtl_set_txfifosize = & sxgbe_mtl_set_txfifosize, .mtl_set_rxfifosize = & sxgbe_mtl_set_rxfifosize, .mtl_enable_txqueue = & sxgbe_mtl_enable_txqueue, .mtl_disable_txqueue = & sxgbe_mtl_disable_txqueue, .set_tx_mtl_mode = & sxgbe_set_tx_mtl_mode, .set_rx_mtl_mode = & sxgbe_set_rx_mtl_mode, .mtl_dynamic_dma_rxqueue = & sxgbe_mtl_dma_dm_rxqueue, .mtl_fc_active = & sxgbe_mtl_fc_active, .mtl_fc_deactive = & sxgbe_mtl_fc_deactive, .mtl_fc_enable = & sxgbe_mtl_fc_enable, .mtl_fep_enable = & sxgbe_mtl_fep_enable, .mtl_fep_disable = & sxgbe_mtl_fep_disable, .mtl_fup_enable = & sxgbe_mtl_fup_enable, .mtl_fup_disable = & sxgbe_mtl_fup_disable};

#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_mtl.c"
struct sxgbe_mtl_ops const *sxgbe_get_mtl_ops(void)
{
  struct sxgbe_mtl_ops const *__retres;
  
#line 253 
  __retres = & mtl_ops;
  
#line 253 
  return __retres;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_xpcs.h"
int sxgbe_xpcs_init(struct net_device *ndev);


#line 36 
int sxgbe_xpcs_init_1G(struct net_device *ndev);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_xpcs.c"
static int sxgbe_xpcs_read(struct net_device *ndev, unsigned int reg)
{
  int __retres;
  u32 value;
  
#line 22 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 24 
  value = readl((void const volatile *)(priv->ioaddr + (reg + 436600832U)));
  
#line 26 
  __retres = (int)value;
  
#line 26 
  return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_xpcs.c"
static int sxgbe_xpcs_write(struct net_device *ndev, int reg, int data)
{
  int __retres;
  
#line 31 
  struct sxgbe_priv_data *priv = netdev_priv((struct net_device const *)ndev);
  
#line 33 
  writel((unsigned int)data,(void volatile *)(priv->ioaddr + ((unsigned int)reg + 436600832U)));
  
#line 35 
  __retres = 0;
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_xpcs.c"
int sxgbe_xpcs_init(struct net_device *ndev)
{
  int __retres;
  u32 value;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 42 
  tmp = sxgbe_xpcs_read(ndev,196608U);
  
#line 42 
  value = (unsigned int)tmp;
  
#line 44 
  sxgbe_xpcs_write(ndev,196615,1);
  
#line 45 
  sxgbe_xpcs_write(ndev,229380,0);
  
#line 46 
  sxgbe_xpcs_write(ndev,229380,(int)(value | 8192U));
  
#line 47 
  sxgbe_xpcs_write(ndev,196608,(int)(value | 2048U));
  ldv_43571: 
#line 48 
  ;
  
#line 50 
  tmp_0 = sxgbe_xpcs_read(ndev,229392U);
  
#line 50 
  value = (unsigned int)tmp_0;
  
#line 51 
  if ((value & 28U) == 16U) 
#line 53 
                            goto ldv_43571; else 
#line 56 
                                                 goto ldv_43572;
  ldv_43572: 
#line 57 
  ;
  
#line 53 
  tmp_1 = sxgbe_xpcs_read(ndev,196608U);
  
#line 53 
  value = (unsigned int)tmp_1;
  
#line 54 
  sxgbe_xpcs_write(ndev,196608,(int)value & -2049);
  ldv_43573: 
#line 55 
  ;
  
#line 57 
  tmp_2 = sxgbe_xpcs_read(ndev,229392U);
  
#line 57 
  value = (unsigned int)tmp_2;
  
#line 58 
  if ((value & 28U) != 16U) 
#line 60 
                            goto ldv_43573; else 
#line 63 
                                                 goto ldv_43574;
  ldv_43574: 
#line 64 
  ;
  
#line 60 
  __retres = 0;
  
#line 60 
  return __retres;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_xpcs.c"
int sxgbe_xpcs_init_1G(struct net_device *ndev)
{
  int __retres;
  int value;
  
#line 68 
  sxgbe_xpcs_write(ndev,196615,1);
  
#line 69 
  sxgbe_xpcs_write(ndev,229380,0);
  
#line 70 
  value = sxgbe_xpcs_read(ndev,196608U);
  
#line 71 
  sxgbe_xpcs_write(ndev,196608,value & -8193);
  
#line 73 
  value = sxgbe_xpcs_read(ndev,2031616U);
  
#line 74 
  sxgbe_xpcs_write(ndev,2031616,value | 64);
  
#line 75 
  sxgbe_xpcs_write(ndev,2031616,value & -8193);
  
#line 76 
  value = sxgbe_xpcs_read(ndev,196608U);
  
#line 77 
  sxgbe_xpcs_write(ndev,196608,value | 2048);
  ldv_43579: 
#line 78 
  ;
  
#line 80 
  value = sxgbe_xpcs_read(ndev,229392U);
  
#line 81 
  if ((value & 28) != 16) 
#line 83 
                          goto ldv_43579; else 
#line 86 
                                               goto ldv_43580;
  ldv_43580: 
#line 87 
  ;
  
#line 83 
  value = sxgbe_xpcs_read(ndev,196608U);
  
#line 84 
  sxgbe_xpcs_write(ndev,196608,value & -2049);
  
#line 87 
  value = sxgbe_xpcs_read(ndev,2031616U);
  
#line 88 
  sxgbe_xpcs_write(ndev,2031616,value | 4096);
  
#line 90 
  __retres = 0;
  
#line 90 
  return __retres;
}


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_init(void *ioaddr)
{
  u32 regval;
  
#line 29 
  regval = readl((void const volatile *)ioaddr);
  
#line 33 
  regval |= 65536U;
  
#line 34 
  writel(regval,(void volatile *)ioaddr);
  
#line 37 
  regval = readl((void const volatile *)(ioaddr + 4U));
  
#line 42 
  regval |= 258U;
  
#line 43 
  writel(regval,(void volatile *)(ioaddr + 4U));
  
#line 44 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_dump_regs(void *ioaddr)
{
  
#line 49 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static int sxgbe_get_lpi_status(void *ioaddr, u32 const irq_status)
{
  int lpi_status;
  unsigned int tmp;
  
#line 53 
  int status = 0;
  
#line 57 
  tmp = readl((void const volatile *)(ioaddr + 208U));
  
#line 57 
  lpi_status = (int)tmp;
  
#line 59 
  if (((unsigned long)lpi_status & 1UL) != 0UL) 
#line 60 
                                                status |= 16; else ;
  
#line 61 
  if (((unsigned long)lpi_status & 2UL) != 0UL) 
#line 62 
                                                status |= 32; else ;
  
#line 63 
  if (((unsigned long)lpi_status & 4UL) != 0UL) 
#line 64 
                                                status |= 64; else ;
  
#line 65 
  if (((unsigned long)lpi_status & 8UL) != 0UL) 
#line 66 
                                                status |= 128; else ;
  
#line 68 
  return status;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static int sxgbe_core_host_irq_status(void *ioaddr, struct sxgbe_extra_stats *x)
{
  int irq_status;
  unsigned int tmp;
  
#line 75 
  int status = 0;
  
#line 77 
  tmp = readl((void const volatile *)(ioaddr + 176U));
  
#line 77 
  irq_status = (int)tmp;
  
#line 79 
  if ((long)(((unsigned long)irq_status & 32UL) != 0UL) != 0L) {
    int tmp_0;
    
#line 80 
    tmp_0 = sxgbe_get_lpi_status(ioaddr,(unsigned int)irq_status);
    
#line 80 
    status = tmp_0 | status;
  }
  else ;
  
#line 82 
  return status;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_pmt(void *ioaddr, unsigned long mode)
{
  
#line 88 
  return;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_set_umac_addr(void *ioaddr, unsigned char *addr, unsigned int reg_n)
{
  u32 high_word;
  u32 low_word;
  
#line 96 
  high_word = (unsigned int)(((int)*(addr + 5U) << 8) | (int)*(addr + 4U));
  
#line 97 
  low_word = (unsigned int)(((((int)*(addr + 3U) << 24) | ((int)*(addr + 2U) << 16)) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 99 
  writel(high_word,(void volatile *)(ioaddr + (reg_n + 96U) * 8U));
  
#line 100 
  writel(low_word,(void volatile *)(ioaddr + ((reg_n + 96U) * 8U + 4U)));
  
#line 101 
  return;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_get_umac_addr(void *ioaddr, unsigned char *addr, unsigned int reg_n)
{
  u32 high_word;
  u32 low_word;
  
#line 108 
  high_word = readl((void const volatile *)(ioaddr + (reg_n + 96U) * 8U));
  
#line 109 
  low_word = readl((void const volatile *)(ioaddr + ((reg_n + 96U) * 8U + 4U)));
  
#line 112 
  *(addr + 5U) = (unsigned char)(high_word >> 8);
  
#line 113 
  *(addr + 4U) = (unsigned char)high_word;
  
#line 114 
  *(addr + 3U) = (unsigned char)(low_word >> 24);
  
#line 115 
  *(addr + 2U) = (unsigned char)(low_word >> 16);
  
#line 116 
  *(addr + 1U) = (unsigned char)(low_word >> 8);
  
#line 117 
  *addr = (unsigned char)low_word;
  
#line 118 
  return;
}


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_enable_tx(void *ioaddr, bool enable)
{
  u32 tx_config;
  
#line 124 
  tx_config = readl((void const volatile *)ioaddr);
  
#line 125 
  tx_config &= 4294967294U;
  
#line 127 
  if ((int)enable != 0) 
#line 128 
                        tx_config |= 1U; else ;
  
#line 129 
  writel(tx_config,(void volatile *)ioaddr);
  
#line 130 
  return;
}


#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_enable_rx(void *ioaddr, bool enable)
{
  u32 rx_config;
  
#line 136 
  rx_config = readl((void const volatile *)(ioaddr + 4U));
  
#line 137 
  rx_config &= 4294967294U;
  
#line 139 
  if ((int)enable != 0) 
#line 140 
                        rx_config |= 1U; else ;
  
#line 141 
  writel(rx_config,(void volatile *)(ioaddr + 4U));
  
#line 142 
  return;
}


#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static int sxgbe_get_controller_version(void *ioaddr)
{
  int __retres;
  unsigned int tmp;
  
#line 146 
  tmp = readl((void const volatile *)(ioaddr + 272U));
  
#line 146 
  __retres = (int)tmp;
  
#line 146 
  return __retres;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static unsigned int sxgbe_get_hw_feature(void *ioaddr, unsigned char feature_index)
{
  unsigned int tmp;
  
#line 153 
  tmp = readl((void const volatile *)(ioaddr + ((int)feature_index + 71) * 4));
  
#line 153 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_set_speed(void *ioaddr, unsigned char speed)
{
  
#line 158 
  u32 tx_cfg = readl((void const volatile *)ioaddr);
  
#line 161 
  tx_cfg &= 2684354559U;
  
#line 162 
  tx_cfg = (unsigned int)((int)speed << 29) | tx_cfg;
  
#line 165 
  writel(tx_cfg,(void volatile *)ioaddr);
  
#line 166 
  return;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_enable_rxqueue(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 172 
  reg_val = readl((void const volatile *)(ioaddr + 160U));
  
#line 173 
  reg_val = (unsigned int)(~ (3 << queue_num)) & reg_val;
  
#line 174 
  reg_val |= 2U;
  
#line 175 
  writel(reg_val,(void volatile *)(ioaddr + 160U));
  
#line 176 
  return;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_core_disable_rxqueue(void *ioaddr, int queue_num)
{
  u32 reg_val;
  
#line 182 
  reg_val = readl((void const volatile *)(ioaddr + 160U));
  
#line 183 
  reg_val = (unsigned int)(~ (3 << queue_num)) & reg_val;
  
#line 184 
  reg_val = reg_val;
  
#line 185 
  writel(reg_val,(void volatile *)(ioaddr + 160U));
  
#line 186 
  return;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_set_eee_mode(void *ioaddr)
{
  u32 ctrl;
  
#line 197 
  ctrl = readl((void const volatile *)(ioaddr + 208U));
  
#line 198 
  ctrl |= 589824U;
  
#line 199 
  writel(ctrl,(void volatile *)(ioaddr + 208U));
  
#line 200 
  return;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_reset_eee_mode(void *ioaddr)
{
  u32 ctrl;
  
#line 206 
  ctrl = readl((void const volatile *)(ioaddr + 208U));
  
#line 207 
  ctrl &= 4294377471U;
  
#line 208 
  writel(ctrl,(void volatile *)(ioaddr + 208U));
  
#line 209 
  return;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_set_eee_pls(void *ioaddr, int const link)
{
  u32 ctrl;
  
#line 215 
  ctrl = readl((void const volatile *)(ioaddr + 208U));
  
#line 218 
  if (link != 0) 
#line 219 
                 ctrl |= 131072U; else 
#line 221 
                                       ctrl &= 4294836223U;
  
#line 223 
  writel(ctrl,(void volatile *)(ioaddr + 208U));
  
#line 224 
  return;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_set_eee_timer(void *ioaddr, int const ls, int const tw)
{
  
#line 229 
  int value = (tw & 65535) | ((ls << 16) & 134152192);
  
#line 238 
  writel((unsigned int)value,(void volatile *)(ioaddr + 212U));
  
#line 239 
  return;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_enable_rx_csum(void *ioaddr)
{
  u32 ctrl;
  
#line 245 
  ctrl = readl((void const volatile *)(ioaddr + 4U));
  
#line 246 
  ctrl |= 512U;
  
#line 247 
  writel(ctrl,(void volatile *)(ioaddr + 4U));
  
#line 248 
  return;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static void sxgbe_disable_rx_csum(void *ioaddr)
{
  u32 ctrl;
  
#line 254 
  ctrl = readl((void const volatile *)(ioaddr + 4U));
  
#line 255 
  ctrl &= 4294966783U;
  
#line 256 
  writel(ctrl,(void volatile *)(ioaddr + 4U));
  
#line 257 
  return;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
static struct sxgbe_core_ops const core_ops = {.core_init = & sxgbe_core_init, .dump_regs = & sxgbe_core_dump_regs, .host_irq_status = & sxgbe_core_host_irq_status, .pmt = & sxgbe_core_pmt, .set_umac_addr = & sxgbe_core_set_umac_addr, .get_umac_addr = & sxgbe_core_get_umac_addr, .enable_rx = & sxgbe_enable_rx, .enable_tx = & sxgbe_enable_tx, .get_controller_version = & sxgbe_get_controller_version, .get_hw_feature = & sxgbe_get_hw_feature, .set_speed = & sxgbe_core_set_speed, .set_eee_mode = & sxgbe_set_eee_mode, .reset_eee_mode = & sxgbe_reset_eee_mode, .set_eee_timer = & sxgbe_set_eee_timer, .set_eee_pls = & sxgbe_set_eee_pls, .enable_rx_csum = & sxgbe_enable_rx_csum, .disable_rx_csum = & sxgbe_disable_rx_csum, .enable_rxqueue = & sxgbe_core_enable_rxqueue, .disable_rxqueue = & sxgbe_core_disable_rxqueue};

#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/samsung/sxgbe/sxgbe_core.c"
struct sxgbe_core_ops const *sxgbe_get_core_ops(void)
{
  struct sxgbe_core_ops const *__retres;
  
#line 283 
  __retres = & core_ops;
  
#line 283 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_12(void *arg0);


#line 73 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 74 
void *ldv_platform_instance_11(void *arg0);


#line 76 
int main(void);


#line 77 
void *ldv_timer_scenario_10(void *arg0);


#line 79 
void ldv_dispatch_register_7_3(struct platform_driver *arg0);


#line 80 
void *ldv_initialization_1(void *arg0);


#line 81 
void ldv_dispatch_pm_register_11_17(void);


#line 82 
void ldv_dispatch_pm_deregister_11_16(void);


#line 84 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 85 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 88 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 90 
void *ldv_pm_ops_scenario_13(void *arg0);


#line 91 
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0);


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_12(void *arg0)
{
  void *__retres;
  struct ethtool_eee *ldv_12_ldv_param_1_13;
  unsigned int ldv_12_ldv_param_1_3;
  unsigned long long ldv_12_ldv_param_1_10;
  void *ldv_12_ldv_param_1_15;
  struct sk_buff *ldv_12_ldv_param_0_14;
  unsigned int *ldv_12_ldv_param_2_23;
  int ldv_12_ldv_param_1_8;
  struct ethtool_cmd *ldv_12_ldv_param_1_2;
  struct rtnl_link_stats64 *ldv_12_ldv_param_1_4;
  unsigned char *ldv_12_ldv_param_2_25;
  struct ethtool_drvinfo *ldv_12_ldv_param_1_11;
  unsigned long long *ldv_12_ldv_param_2_7;
  struct ethtool_coalesce *ldv_12_ldv_param_1_26;
  struct net_device *ldv_12_container;
  void *ldv_12_ldv_param_2_21;
  struct ethtool_eee *ldv_12_ldv_param_1_12;
  struct ethtool_cmd *ldv_12_ldv_param_1_16;
  struct ifreq *ldv_12_ldv_param_1_18;
  struct ethtool_regs *ldv_12_ldv_param_1_20;
  int ldv_12_ldv_param_2_19;
  struct ethtool_stats *ldv_12_ldv_param_1_6;
  struct ethtool_rxnfc *ldv_12_ldv_param_1_9;
  int ldv_12_ldv_param_1_17;
  unsigned int ldv_12_ldv_param_1_24;
  struct ethtool_channels *ldv_12_ldv_param_1_5;
  struct ethtool_rxnfc *ldv_12_ldv_param_1_22;
  struct ethtool_coalesce *ldv_12_ldv_param_1_27;
  int tmp_18;
  
#line 133 
  struct ldv_struct_random_allocationless_scenario_12 *data = (struct ldv_struct_random_allocationless_scenario_12 *)arg0;
  
#line 138 
  if (data != (struct ldv_struct_random_allocationless_scenario_12 *)0) {
    
#line 139 
    ldv_12_container = data->arg0;
    
#line 140 
    ldv_free((void *)data);
  }
  else ;
  
#line 148 
  goto ldv_call_12;
  
#line 150 
  __retres = (void *)0;
  
#line 150 
  goto return_label;
  ldv_call_12: 
#line 153 
  ;
  
#line 156 
  tmp_18 = ldv_undef_int();
  
#line 156 
  if (tmp_18 != 0) {
    int tmp_0;
    
#line 158 
    ldv_12_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 161 
    tmp_0 = ldv_undef_int();
    
#line 161 
    switch (tmp_0) {
      case 1: 
#line 162 
      ;
      
#line 165 
      ldv_emg_wrapper_sxgbe_setsettings_2(ldv_12_container,ldv_12_ldv_param_1_2);
      
#line 168 
      goto ldv_43268;
      case 2: 
#line 170 
      ;
      
#line 173 
      ldv_emg_wrapper_sxgbe_set_rx_mode_28(ldv_12_container);
      
#line 176 
      goto ldv_43268;
      case 3: 
#line 178 
      ;
      
#line 181 
      ldv_emg_wrapper_sxgbe_poll_controller_27(ldv_12_container);
      
#line 184 
      goto ldv_43268;
      case 4: 
#line 186 
      ;
      
#line 188 
      ldv_12_ldv_param_1_27 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 193 
      ldv_emg_wrapper_sxgbe_set_coalesce_26(ldv_12_container,ldv_12_ldv_param_1_27);
      
#line 197 
      ldv_free((void *)ldv_12_ldv_param_1_27);
      
#line 200 
      goto ldv_43268;
      case 5: 
#line 202 
      ;
      
#line 205 
      ldv_emg_wrapper_sxgbe_get_regs_len_25(ldv_12_container);
      
#line 208 
      goto ldv_43268;
      case 6: 
#line 210 
      ;
      
#line 212 
      ldv_12_ldv_param_1_26 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 217 
      ldv_emg_wrapper_sxgbe_get_coalesce_24(ldv_12_container,ldv_12_ldv_param_1_26);
      
#line 221 
      ldv_free((void *)ldv_12_ldv_param_1_26);
      
#line 224 
      goto ldv_43268;
      case 7: 
#line 226 
      ;
      
#line 228 
      ldv_12_ldv_param_2_25 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 233 
      ldv_emg_wrapper_sxgbe_get_strings_3(ldv_12_container,ldv_12_ldv_param_1_24,ldv_12_ldv_param_2_25);
      
#line 237 
      ldv_free((void *)ldv_12_ldv_param_2_25);
      
#line 240 
      goto ldv_43268;
      case 8: 
#line 242 
      ;
      
#line 244 
      ldv_12_ldv_param_2_23 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 245 
      ldv_12_ldv_param_1_22 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 250 
      ldv_emg_wrapper_sxgbe_get_rxnfc_22(ldv_12_container,ldv_12_ldv_param_1_22,ldv_12_ldv_param_2_23);
      
#line 254 
      ldv_free((void *)ldv_12_ldv_param_2_23);
      
#line 255 
      ldv_free((void *)ldv_12_ldv_param_1_22);
      
#line 258 
      goto ldv_43268;
      case 9: 
#line 260 
      ;
      
#line 263 
      ldv_emg_wrapper_sxgbe_tx_timeout_18(ldv_12_container);
      
#line 266 
      goto ldv_43268;
      case 10: 
#line 268 
      ;
      
#line 270 
      ldv_12_ldv_param_2_21 = ldv_xmalloc_unknown_size(0UL);
      
#line 271 
      ldv_12_ldv_param_1_20 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 276 
      ldv_emg_wrapper_sxgbe_get_regs_20(ldv_12_container,ldv_12_ldv_param_1_20,ldv_12_ldv_param_2_21);
      
#line 280 
      ldv_free(ldv_12_ldv_param_2_21);
      
#line 281 
      ldv_free((void *)ldv_12_ldv_param_1_20);
      
#line 284 
      goto ldv_43268;
      case 11: 
#line 286 
      ;
      
#line 288 
      ldv_12_ldv_param_1_18 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 293 
      ldv_emg_wrapper_sxgbe_ioctl_19(ldv_12_container,ldv_12_ldv_param_1_18,ldv_12_ldv_param_2_19);
      
#line 297 
      ldv_free((void *)ldv_12_ldv_param_1_18);
      
#line 300 
      goto ldv_43268;
      case 12: 
#line 302 
      ;
      
#line 308 
      ldv_emg_wrapper_sxgbe_get_sset_count_21(ldv_12_container,ldv_12_ldv_param_1_17);
      
#line 314 
      goto ldv_43268;
      case 13: 
#line 316 
      ;
      
#line 318 
      ldv_12_ldv_param_1_16 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 323 
      ldv_emg_wrapper_sxgbe_getsettings_17(ldv_12_container,ldv_12_ldv_param_1_16);
      
#line 327 
      ldv_free((void *)ldv_12_ldv_param_1_16);
      
#line 330 
      goto ldv_43268;
      case 14: 
#line 332 
      ;
      
#line 334 
      ldv_12_ldv_param_1_15 = ldv_xmalloc_unknown_size(0UL);
      
#line 339 
      (*ldv_emg_alias_eth_mac_addr_16)(ldv_12_container,ldv_12_ldv_param_1_15);
      
#line 343 
      ldv_free(ldv_12_ldv_param_1_15);
      
#line 346 
      goto ldv_43268;
      case 15: 
#line 348 
      ;
      
#line 350 
      ldv_12_ldv_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 355 
      ldv_emg_wrapper_sxgbe_xmit_15(ldv_12_ldv_param_0_14,ldv_12_container);
      
#line 359 
      ldv_free((void *)ldv_12_ldv_param_0_14);
      
#line 362 
      goto ldv_43268;
      case 16: 
#line 364 
      ;
      
#line 367 
      ldv_emg_wrapper_sxgbe_getmsglevel_14(ldv_12_container);
      
#line 370 
      goto ldv_43268;
      case 17: 
#line 372 
      ;
      
#line 374 
      ldv_12_ldv_param_1_13 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
      
#line 379 
      ldv_emg_wrapper_sxgbe_set_eee_13(ldv_12_container,ldv_12_ldv_param_1_13);
      
#line 383 
      ldv_free((void *)ldv_12_ldv_param_1_13);
      
#line 386 
      goto ldv_43268;
      case 18: 
#line 388 
      ;
      
#line 390 
      ldv_12_ldv_param_1_12 = (struct ethtool_eee *)ldv_xmalloc_unknown_size(0UL);
      
#line 395 
      ldv_emg_wrapper_sxgbe_get_eee_12(ldv_12_container,ldv_12_ldv_param_1_12);
      
#line 399 
      ldv_free((void *)ldv_12_ldv_param_1_12);
      
#line 402 
      goto ldv_43268;
      case 19: 
#line 404 
      ;
      
#line 406 
      ldv_12_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 411 
      ldv_emg_wrapper_sxgbe_getdrvinfo_11(ldv_12_container,ldv_12_ldv_param_1_11);
      
#line 415 
      ldv_free((void *)ldv_12_ldv_param_1_11);
      
#line 418 
      goto ldv_43268;
      case 20: 
#line 420 
      ;
      
#line 426 
      ldv_emg_wrapper_sxgbe_set_features_10(ldv_12_container,ldv_12_ldv_param_1_10);
      
#line 432 
      goto ldv_43268;
      case 21: 
#line 434 
      ;
      
#line 436 
      ldv_12_ldv_param_1_9 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 441 
      ldv_emg_wrapper_sxgbe_set_rxnfc_9(ldv_12_container,ldv_12_ldv_param_1_9);
      
#line 445 
      ldv_free((void *)ldv_12_ldv_param_1_9);
      
#line 448 
      goto ldv_43268;
      case 22: 
#line 450 
      ;
      
#line 453 
      (*ldv_emg_alias_ethtool_op_get_link_8)(ldv_12_container);
      
#line 456 
      goto ldv_43268;
      case 23: 
#line 458 
      ;
      
#line 464 
      ldv_emg_wrapper_sxgbe_change_mtu_5(ldv_12_container,ldv_12_ldv_param_1_8);
      
#line 470 
      goto ldv_43268;
      case 24: 
#line 472 
      ;
      
#line 474 
      ldv_12_ldv_param_2_7 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 475 
      ldv_12_ldv_param_1_6 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 480 
      ldv_emg_wrapper_sxgbe_get_ethtool_stats_6(ldv_12_container,ldv_12_ldv_param_1_6,ldv_12_ldv_param_2_7);
      
#line 484 
      ldv_free((void *)ldv_12_ldv_param_2_7);
      
#line 485 
      ldv_free((void *)ldv_12_ldv_param_1_6);
      
#line 488 
      goto ldv_43268;
      case 25: 
#line 490 
      ;
      
#line 492 
      ldv_12_ldv_param_1_5 = (struct ethtool_channels *)ldv_xmalloc_unknown_size(0UL);
      
#line 497 
      ldv_emg_wrapper_sxgbe_get_channels_7(ldv_12_container,ldv_12_ldv_param_1_5);
      
#line 501 
      ldv_free((void *)ldv_12_ldv_param_1_5);
      
#line 504 
      goto ldv_43268;
      case 26: 
#line 506 
      ;
      
#line 508 
      ldv_12_ldv_param_1_4 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 513 
      ldv_emg_wrapper_sxgbe_get_stats64_4(ldv_12_container,ldv_12_ldv_param_1_4);
      
#line 517 
      ldv_free((void *)ldv_12_ldv_param_1_4);
      
#line 520 
      goto ldv_43268;
      case 27: 
#line 522 
      ;
      
#line 528 
      ldv_emg_wrapper_sxgbe_setmsglevel_23(ldv_12_container,ldv_12_ldv_param_1_3);
      
#line 534 
      goto ldv_43268;
      default: 
#line 536 
      ;
      
#line 536 
      __VERIFIER_assume(0);
    }
    ldv_43268: 
#line 539 
    ;
    
#line 539 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 546 
    goto ldv_call_12;
  }
  else {
    
#line 554 
    __retres = (void *)0;
    
#line 554 
    goto return_label;
  }
  
#line 557 
  __retres = (void *)0;
  return_label: 
#line 557 
                return __retres;
}


#line 562  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 568 
  ldv_8_timer_list = arg0;
  
#line 572 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 573 
  ;
  
#line 573 
  __retres = 0;
  
#line 573 
  return __retres;
}


#line 581  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_12 *cf_arg_12;
  int tmp;
  
#line 584 
  tmp = ldv_undef_int();
  
#line 584 
  switch (tmp) {
    case 0: 
#line 585 
    ;
    
#line 586 
    cf_arg_12 = (struct ldv_struct_random_allocationless_scenario_12 *)ldv_xmalloc(16UL);
    
#line 587 
    cf_arg_12->arg0 = arg0;
    
#line 588 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_12,(void *)cf_arg_12);
    
#line 589 
    __VERIFIER_assume(ret == 0);
    
#line 590 
    goto ldv_43306;
    default: 
#line 592 
    ;
    
#line 592 
    __VERIFIER_assume(0);
  }
  ldv_43306: 
#line 593 
  ;
  
#line 594 
  return;
}


#line 598  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_platform_instance_11(void *arg0)
{
  void *__retres;
  struct platform_device *ldv_11_ldv_param_0_2;
  struct platform_device *ldv_11_ldv_param_0_3;
  int tmp_1;
  int tmp_2;
  
#line 602 
  struct platform_driver *ldv_11_container = ldv_emg_alias_sxgbe_platform_driver_2;
  
#line 604 
  int ldv_11_probed = 1;
  
#line 606 
  struct ldv_struct_platform_instance_11 *data = (struct ldv_struct_platform_instance_11 *)arg0;
  
#line 610 
  ldv_11_probed = 1;
  
#line 613 
  if (data != (struct ldv_struct_platform_instance_11 *)0) {
    
#line 614 
    ldv_11_container = data->arg0;
    
#line 615 
    ldv_free((void *)data);
  }
  else ;
  
#line 626 
  goto ldv_main_11;
  
#line 628 
  __retres = (void *)0;
  
#line 628 
  goto return_label;
  ldv_main_11: 
#line 631 
  ;
  
#line 634 
  tmp_1 = ldv_undef_int();
  
#line 634 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 636 
    ldv_11_ldv_param_0_2 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 641 
    ldv_pre_probe();
    
#line 643 
    ldv_11_probed = ldv_emg_wrapper_sxgbe_platform_probe_2(ldv_11_ldv_param_0_2);
    
#line 645 
    ldv_11_probed = ldv_post_probe(ldv_11_probed);
    
#line 649 
    ldv_free((void *)ldv_11_ldv_param_0_2);
    
#line 652 
    tmp_0 = ldv_undef_int();
    
#line 652 
    if (tmp_0 != 0) {
      
#line 654 
      __VERIFIER_assume(ldv_11_probed == 0);
      
#line 661 
      goto ldv_call_11;
    }
    else {
      
#line 665 
      __VERIFIER_assume(ldv_11_probed != 0);
      
#line 672 
      goto ldv_main_11;
    }
  }
  else {
    
#line 684 
    __retres = (void *)0;
    
#line 684 
    goto return_label;
  }
  
#line 687 
  __retres = (void *)0;
  
#line 687 
  goto return_label;
  ldv_call_11: 
#line 690 
  ;
  
#line 693 
  tmp_2 = ldv_undef_int();
  
#line 693 
  switch (tmp_2) {
    case 1: 
#line 694 
    ;
    
#line 703 
    goto ldv_call_11;
    case 2: 
#line 706 
    ;
    
#line 708 
    ldv_dispatch_pm_register_11_17();
    
#line 712 
    ldv_dispatch_pm_deregister_11_16();
    
#line 719 
    goto ldv_call_11;
    case 3: 
#line 722 
    ;
    
#line 724 
    ldv_11_ldv_param_0_3 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 729 
    ldv_emg_wrapper_sxgbe_platform_remove_3(ldv_11_ldv_param_0_3);
    
#line 733 
    ldv_free((void *)ldv_11_ldv_param_0_3);
    
#line 737 
    ldv_11_probed = 1;
    
#line 744 
    goto ldv_main_11;
    default: 
#line 747 
    ;
    
#line 747 
    __VERIFIER_assume(0);
  }
  
#line 750 
  __retres = (void *)0;
  return_label: 
#line 750 
                return __retres;
}


#line 755  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0)
{
  
#line 758 
  struct platform_driver *ldv_4_platform_driver = ldv_emg_alias_sxgbe_platform_driver_2;
  
#line 761 
  ldv_4_platform_driver = arg0;
  
#line 765 
  ldv_dispatch_deregister_4_1(ldv_4_platform_driver);
  
#line 769 
  goto return_label;
  return_label: 
#line 771 
                return;
}


#line 776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 779 
  ldv_initialize();
  
#line 782 
  ldv_initialization_1((void *)0);
  
#line 784 
  __retres = 0;
  
#line 784 
  return __retres;
}


#line 789  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_10(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_10_container;
  
#line 794 
  struct ldv_struct_timer_scenario_10 *data = (struct ldv_struct_timer_scenario_10 *)arg0;
  
#line 799 
  if (data != (struct ldv_struct_timer_scenario_10 *)0) {
    
#line 800 
    ldv_10_container = data->arg0;
    
#line 801 
    ldv_free((void *)data);
  }
  else ;
  
#line 806 
  if (ldv_10_container->function != (void (*)(unsigned long ))0) {
    
#line 808 
    ldv_switch_to_interrupt_context();
    
#line 810 
    (*(ldv_10_container->function))(ldv_10_container->data);
    
#line 812 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 821 
  __retres = (void *)0;
  
#line 821 
  goto return_label;
  
#line 823 
  __retres = (void *)0;
  return_label: 
#line 823 
                return __retres;
}


#line 828  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 835 
  tmp_0 = ldv_undef_int();
  
#line 835 
  if (tmp_0 != 0) {
    
#line 837 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 841 
    __retres = ldv_5_netdev;
    
#line 841 
    goto return_label;
  }
  else {
    
#line 848 
    __retres = (struct net_device *)0;
    
#line 848 
    goto return_label;
  }
  return_label: 
#line 835 
                return __retres;
}


#line 858  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_11 *cf_arg_11;
  int tmp;
  
#line 861 
  tmp = ldv_undef_int();
  
#line 861 
  switch (tmp) {
    case 0: 
#line 862 
    ;
    
#line 863 
    cf_arg_11 = (struct ldv_struct_platform_instance_11 *)ldv_xmalloc(16UL);
    
#line 864 
    cf_arg_11->arg0 = arg0;
    
#line 865 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_platform_instance_11,(void *)cf_arg_11);
    
#line 866 
    __VERIFIER_assume(ret == 0);
    
#line 867 
    goto ldv_43346;
    default: 
#line 869 
    ;
    
#line 869 
    __VERIFIER_assume(0);
  }
  ldv_43346: 
#line 870 
  ;
  
#line 871 
  return;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 882 
  ldv_1_ret = ldv_emg_sxgbe_init();
  
#line 883 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 886 
  tmp = ldv_undef_int();
  
#line 886 
  if (tmp != 0) {
    
#line 888 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 892 
    __retres = (void *)0;
    
#line 892 
    goto return_label;
  }
  else {
    
#line 896 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 901 
    ldv_emg_sxgbe_exit();
    
#line 905 
    __retres = (void *)0;
    
#line 905 
    goto return_label;
  }
  
#line 908 
  __retres = (void *)0;
  return_label: 
#line 908 
                return __retres;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_register_11_17(void)
{
  int ret;
  struct ldv_struct_platform_instance_11 *cf_arg_13;
  int tmp;
  
#line 916 
  tmp = ldv_undef_int();
  
#line 916 
  switch (tmp) {
    case 0: 
#line 917 
    ;
    
#line 918 
    cf_arg_13 = (struct ldv_struct_platform_instance_11 *)ldv_xmalloc(16UL);
    
#line 919 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_pm_ops_scenario_13,(void *)cf_arg_13);
    
#line 920 
    __VERIFIER_assume(ret == 0);
    
#line 921 
    goto ldv_43358;
    default: 
#line 923 
    ;
    
#line 923 
    __VERIFIER_assume(0);
  }
  ldv_43358: 
#line 924 
  ;
  
#line 925 
  return;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_deregister_11_16(void)
{
  int ret;
  struct ldv_struct_platform_instance_11 *cf_arg_13;
  int tmp;
  
#line 932 
  tmp = ldv_undef_int();
  
#line 932 
  switch (tmp) {
    case 0: 
#line 933 
    ;
    
#line 934 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 935 
    __VERIFIER_assume(ret == 0);
    
#line 936 
    goto ldv_43366;
    default: 
#line 938 
    ;
    
#line 938 
    __VERIFIER_assume(0);
  }
  ldv_43366: 
#line 939 
  ;
  
#line 940 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  int __retres;
  int tmp_0;
  
#line 947 
  struct platform_driver *ldv_7_platform_driver = ldv_emg_alias_sxgbe_platform_driver_2;
  
#line 951 
  tmp_0 = ldv_undef_int();
  
#line 951 
  if (tmp_0 != 0) {
    
#line 953 
    ldv_7_platform_driver = arg0;
    
#line 957 
    ldv_dispatch_register_7_3(ldv_7_platform_driver);
    
#line 961 
    __retres = 0;
    
#line 961 
    goto return_label;
  }
  else {
    int tmp;
    
#line 968 
    tmp = ldv_undef_int_negative();
    
#line 968 
    __retres = tmp;
    
#line 968 
    goto return_label;
  }
  return_label: 
#line 951 
                return __retres;
}


#line 978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_10 *cf_arg_10;
  int tmp;
  
#line 981 
  tmp = ldv_undef_int();
  
#line 981 
  switch (tmp) {
    case 0: 
#line 982 
    ;
    
#line 983 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 984 
    __VERIFIER_assume(ret == 0);
    
#line 985 
    goto ldv_43379;
    default: 
#line 987 
    ;
    
#line 987 
    __VERIFIER_assume(0);
  }
  ldv_43379: 
#line 988 
  ;
  
#line 989 
  return;
}


#line 993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_10 *cf_arg_10;
  int tmp;
  
#line 996 
  tmp = ldv_undef_int();
  
#line 996 
  switch (tmp) {
    case 0: 
#line 997 
    ;
    
#line 998 
    cf_arg_10 = (struct ldv_struct_timer_scenario_10 *)ldv_xmalloc(16UL);
    
#line 999 
    cf_arg_10->arg0 = arg0;
    
#line 1000 
    ret = pthread_create(& ldv_thread_10,(pthread_attr_t const *)0,& ldv_timer_scenario_10,(void *)cf_arg_10);
    
#line 1001 
    __VERIFIER_assume(ret == 0);
    
#line 1002 
    goto ldv_43387;
    default: 
#line 1004 
    ;
    
#line 1004 
    __VERIFIER_assume(0);
  }
  ldv_43387: 
#line 1005 
  ;
  
#line 1006 
  return;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1016 
  ldv_6_netdev = arg0;
  
#line 1021 
  ldv_emg_wrapper_sxgbe_release_2(ldv_6_netdev);
  
#line 1025 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1029 
  goto return_label;
  return_label: 
#line 1031 
                return;
}


#line 1036  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 1043 
  tmp_0 = ldv_undef_int();
  
#line 1043 
  if (tmp_0 != 0) {
    
#line 1045 
    ldv_3_timer_list = arg0;
    
#line 1049 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 1053 
    __retres = 0;
    
#line 1053 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1060 
    tmp = ldv_undef_int_negative();
    
#line 1060 
    __retres = tmp;
    
#line 1060 
    goto return_label;
  }
  return_label: 
#line 1043 
                return __retres;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_12 *cf_arg_12;
  int tmp;
  
#line 1073 
  tmp = ldv_undef_int();
  
#line 1073 
  switch (tmp) {
    case 0: 
#line 1074 
    ;
    
#line 1075 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 1076 
    __VERIFIER_assume(ret == 0);
    
#line 1077 
    goto ldv_43404;
    default: 
#line 1079 
    ;
    
#line 1079 
    __VERIFIER_assume(0);
  }
  ldv_43404: 
#line 1080 
  ;
  
#line 1081 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1091 
  ldv_2_netdev = arg0;
  
#line 1092 
  ldv_free((void *)ldv_2_netdev);
  
#line 1096 
  goto return_label;
  return_label: 
#line 1098 
                return;
}


#line 1103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_13(void *arg0)
{
  void *__retres;
  struct device *ldv_13_device;
  int tmp;
  
#line 1106 
  struct dev_pm_ops *ldv_13_pm_ops = ldv_emg_alias_sxgbe_platform_pm_ops_3;
  
#line 1110 
  ldv_free(arg0);
  
#line 1117 
  goto ldv_do_13;
  
#line 1119 
  __retres = (void *)0;
  
#line 1119 
  goto return_label;
  ldv_do_13: 
#line 1122 
  ;
  
#line 1125 
  tmp = ldv_undef_int();
  
#line 1125 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1126 
    ;
    
#line 1128 
    if (ldv_13_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1130 
                                                                    (*(ldv_13_pm_ops->runtime_idle))(ldv_13_device); else ;
    
#line 1138 
    goto ldv_do_13;
    case 2: 
#line 1141 
    ;
    
#line 1143 
    if (ldv_13_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1145 
      (*(ldv_13_pm_ops->runtime_suspend))(ldv_13_device); else ;
    
#line 1150 
    if (ldv_13_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1152 
      (*(ldv_13_pm_ops->runtime_resume))(ldv_13_device); else ;
    
#line 1160 
    goto ldv_do_13;
    case 3: 
#line 1163 
    ;
    
#line 1165 
    if (ldv_13_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1167 
                                                               (*(ldv_13_pm_ops->prepare))(ldv_13_device); else ;
    
#line 1171 
    tmp_0 = ldv_undef_int();
    
#line 1171 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1172 
      ;
      
#line 1175 
      ldv_emg_wrapper_sxgbe_platform_suspend_4(ldv_13_device);
      
#line 1178 
      tmp_1 = ldv_undef_int();
      
#line 1178 
      if (tmp_1 != 0) {
        
#line 1180 
        if (ldv_13_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1182 
          (*(ldv_13_pm_ops->suspend_noirq))(ldv_13_device); else ;
        
#line 1187 
        if (ldv_13_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1189 
          (*(ldv_13_pm_ops->resume_noirq))(ldv_13_device); else ;
      }
      else {
        
#line 1196 
        if (ldv_13_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1198 
          (*(ldv_13_pm_ops->suspend_late))(ldv_13_device); else ;
        
#line 1203 
        if (ldv_13_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1205 
          (*(ldv_13_pm_ops->resume_early))(ldv_13_device); else ;
      }
      
#line 1212 
      ldv_emg_wrapper_sxgbe_platform_resume_6(ldv_13_device);
      
#line 1215 
      goto ldv_43420;
      case 2: 
#line 1217 
      ;
      
#line 1220 
      ldv_emg_wrapper_sxgbe_platform_freeze_2(ldv_13_device);
      
#line 1223 
      tmp_2 = ldv_undef_int();
      
#line 1223 
      if (tmp_2 != 0) {
        
#line 1225 
        if (ldv_13_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1227 
          (*(ldv_13_pm_ops->freeze_late))(ldv_13_device); else ;
        
#line 1232 
        if (ldv_13_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1234 
          (*(ldv_13_pm_ops->thaw_early))(ldv_13_device); else ;
      }
      else {
        
#line 1241 
        if (ldv_13_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1243 
          (*(ldv_13_pm_ops->freeze_noirq))(ldv_13_device); else ;
        
#line 1248 
        if (ldv_13_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1250 
          (*(ldv_13_pm_ops->thaw_noirq))(ldv_13_device); else ;
      }
      
#line 1257 
      ldv_emg_wrapper_sxgbe_platform_restore_5(ldv_13_device);
      
#line 1260 
      goto ldv_43420;
      case 3: 
#line 1262 
      ;
      
#line 1264 
      if (ldv_13_pm_ops->poweroff != (int (*)(struct device *))0) 
#line 1266 
                                                                  (*(ldv_13_pm_ops->poweroff))(ldv_13_device); else ;
      
#line 1270 
      tmp_3 = ldv_undef_int();
      
#line 1270 
      if (tmp_3 != 0) {
        
#line 1272 
        if (ldv_13_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1274 
          (*(ldv_13_pm_ops->poweroff_late))(ldv_13_device); else ;
        
#line 1279 
        if (ldv_13_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1281 
          (*(ldv_13_pm_ops->restore_early))(ldv_13_device); else ;
      }
      else {
        
#line 1288 
        if (ldv_13_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1290 
          (*(ldv_13_pm_ops->poweroff_noirq))(ldv_13_device); else ;
        
#line 1295 
        if (ldv_13_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1297 
          (*(ldv_13_pm_ops->restore_noirq))(ldv_13_device); else ;
      }
      
#line 1304 
      ldv_emg_wrapper_sxgbe_platform_restore_5(ldv_13_device);
      
#line 1307 
      goto ldv_43420;
      default: 
#line 1309 
      ;
      
#line 1309 
      __VERIFIER_assume(0);
    }
    ldv_43420: 
#line 1312 
    ;
    
#line 1312 
    if (ldv_13_pm_ops->complete != (void (*)(struct device *))0) 
#line 1314 
                                                                 (*(ldv_13_pm_ops->complete))(ldv_13_device); else ;
    
#line 1322 
    goto ldv_do_13;
    case 4: 
#line 1325 
    ;
    
#line 1331 
    __retres = (void *)0;
    
#line 1331 
    goto return_label;
    default: 
#line 1334 
    ;
    
#line 1334 
    __VERIFIER_assume(0);
  }
  
#line 1337 
  __retres = (void *)0;
  return_label: 
#line 1337 
                return __retres;
}


#line 1342  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_11 *cf_arg_11;
  int tmp;
  
#line 1345 
  tmp = ldv_undef_int();
  
#line 1345 
  switch (tmp) {
    case 0: 
#line 1346 
    ;
    
#line 1347 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1348 
    __VERIFIER_assume(ret == 0);
    
#line 1349 
    goto ldv_43432;
    default: 
#line 1351 
    ;
    
#line 1351 
    __VERIFIER_assume(0);
  }
  ldv_43432: 
#line 1352 
  ;
  
#line 1353 
  return;
}


#line 1357  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/samsung/sxgbe/samsung-sxgbe.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1361 
  int ldv_9_ret = ldv_undef_int();
  
#line 1364 
  ldv_9_ret = ldv_undef_int();
  
#line 1367 
  tmp_3 = ldv_undef_int();
  
#line 1367 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1369 
    ldv_9_netdev = arg0;
    
#line 1374 
    ldv_9_ret = ldv_emg_wrapper_sxgbe_open_2(ldv_9_netdev);
    
#line 1377 
    tmp_1 = ldv_undef_int();
    
#line 1377 
    if (tmp_1 != 0) {
      
#line 1379 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1383 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1387 
      __retres = 0;
      
#line 1387 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1394 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1395 
      ldv_failed_register_netdev();
      
#line 1396 
      tmp_0 = ldv_undef_int_negative();
      
#line 1396 
      __retres = tmp_0;
      
#line 1396 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1404 
    ldv_failed_register_netdev();
    
#line 1405 
    tmp_2 = ldv_undef_int_negative();
    
#line 1405 
    __retres = tmp_2;
    
#line 1405 
    goto return_label;
  }
  return_label: 
#line 1367 
                return __retres;
}


