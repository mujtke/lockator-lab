/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int uint;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace_irq.h"
struct vm_area_struct;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_109 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_109 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_111 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_110 {
   struct __anonstruct_111 __anonCompField___anonunion_110_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_110 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11876 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_112 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_112 nodemask_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct kref {
   atomic_t refcount ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_148 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_148 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_149 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_149 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_156 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_155 {
   struct __anonstruct_156 __anonCompField___anonunion_155_40 ;
   struct __anonstruct_157 __anonCompField___anonunion_155_41 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_155 __anonCompField_uprobe_task_42 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_163 {
   atomic_t _mapcount ;
   struct __anonstruct_164 __anonCompField___anonunion_163_45 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_162 {
   union __anonunion_163 __anonCompField___anonstruct_162_46 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long counters ;
   struct __anonstruct_162 __anonCompField___anonunion_161_47 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   union __anonunion_160 __anonCompField___anonstruct_159_44 ;
   union __anonunion_161 __anonCompField___anonstruct_159_48 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_166 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   struct list_head lru ;
   struct __anonstruct_166 __anonCompField___anonunion_165_50 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_167 __anonCompField___anonunion_165_51 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_168 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_158 __anonCompField_page_43 ;
   struct __anonstruct_159 __anonCompField_page_49 ;
   union __anonunion_165 __anonCompField_page_52 ;
   union __anonunion_168 __anonCompField_page_53 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_169 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_169 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_174 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_174 __anonCompField_idr_layer_54 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_179 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_179 __anonCompField_kernfs_node_55 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_180 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_180 __anonCompField_kernel_param_56 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_191 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_191 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_193 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_194 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_195 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_196 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_198 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_197 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_198 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_199 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_200 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_192 {
   int _pad[28U] ;
   struct __anonstruct__kill_193 _kill ;
   struct __anonstruct__timer_194 _timer ;
   struct __anonstruct__rt_195 _rt ;
   struct __anonstruct__sigchld_196 _sigchld ;
   struct __anonstruct__sigfault_197 _sigfault ;
   struct __anonstruct__sigpoll_199 _sigpoll ;
   struct __anonstruct__sigsys_200 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_192 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_207 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_208 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_210 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_209 {
   struct keyring_index_key index_key ;
   struct __anonstruct_210 __anonCompField___anonunion_209_59 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_211 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_213 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_212 {
   union __anonunion_payload_213 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_207 __anonCompField_key_57 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_208 __anonCompField_key_58 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_209 __anonCompField_key_60 ;
   union __anonunion_type_data_211 type_data ;
   union __anonunion_212 __anonCompField_key_61 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_232 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_231 {
   struct __anonstruct_232 __anonCompField___anonunion_231_66 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_231 __anonCompField_lockref_67 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_234 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_233 {
   struct __anonstruct_234 __anonCompField___anonunion_233_68 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_233 __anonCompField_qstr_69 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_235 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_235 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_239 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_70 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_238 __anonCompField_radix_tree_node_71 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct semaphore {
   raw_spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct iovec;

#line 63 
struct kiocb;

#line 64 
struct poll_table_struct;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 67 
struct iov_iter;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_243 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_243 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_244 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_244 __anonCompField_kqid_73 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_247 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_248 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_249 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_247 __anonCompField_inode_74 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_248 __anonCompField_inode_75 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_249 __anonCompField_inode_76 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_250 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_250 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_252 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_251 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_252 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_251 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_253 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_253 __anonCompField_iov_iter_77 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_254 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_254 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_255 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_255 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_256 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_256 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_257 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_257 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_258 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_258 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_259 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_259 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_260 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_260 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_261 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_261 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_262 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_263 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_262 ifr_ifrn ;
   union __anonunion_ifr_ifru_263 ifr_ifru ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_279 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_279 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27081 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27081 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_284 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_285 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_286 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_286 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_288 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   u64 v64 ;
   struct __anonstruct_288 __anonCompField___anonunion_287_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_287 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_291 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_290 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_291 __anonCompField___anonstruct_290_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   struct __anonstruct_290 __anonCompField___anonunion_289_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_293 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   __wsum csum ;
   struct __anonstruct_293 __anonCompField___anonunion_292_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_294 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_289 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_292 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_294 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_295 __anonCompField_sk_buff_91 ;
   union __anonunion_296 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/mii.h"
struct mii_if_info {
   int phy_id ;
   int advertising ;
   int phy_id_mask ;
   int reg_num_mask ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_media : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) supports_gmii : 1 ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int ) ;
   void (*mdio_write)(struct net_device *, int , int , int ) ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084 
enum ldv_29284 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29284 phy_interface_t;

#line 126 
enum ldv_29337 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29337 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31047 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31048 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31047 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31048 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
struct ksz_desc_rx_stat {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) frame_len : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) reserved1 : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frame_type : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err_crc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err_runt : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err_too_long : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) err_phy : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_port : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multicast : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) error : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_err_udp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_err_tcp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_err_ip : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_desc : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hw_owned : 1 ;
};

#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_desc_tx_stat {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(31))) reserved1 : 31 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hw_owned : 1 ;
};

#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_desc_rx_buf {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buf_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) reserved3 : 14 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_of_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) reserved4 : 6 ;
};

#line 898  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_desc_tx_buf {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) buf_size : 11 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(9))) reserved3 : 9 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dest_port : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reserved4 : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) end_of_ring : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_gen_udp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_gen_tcp : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_gen_ip : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) last_seg : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) first_seg : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) intr : 1 ;
};

#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
union desc_stat {
   struct ksz_desc_rx_stat rx ;
   struct ksz_desc_tx_stat tx ;
   u32 data ;
};

#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
union desc_buf {
   struct ksz_desc_rx_buf rx ;
   struct ksz_desc_tx_buf tx ;
   u32 data ;
};

#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_hw_desc {
   union desc_stat ctrl ;
   union desc_buf buf ;
   u32 addr ;
   u32 next ;
};

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_sw_desc {
   union desc_stat ctrl ;
   union desc_buf buf ;
   u32 buf_size ;
};

#line 965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_dma_buf {
   struct sk_buff *skb ;
   dma_addr_t dma ;
   int len ;
};

#line 977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_desc {
   struct ksz_hw_desc *phw ;
   struct ksz_sw_desc sw ;
   struct ksz_dma_buf dma_buf ;
};

#line 991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_desc_info {
   struct ksz_desc *ring ;
   struct ksz_desc *cur ;
   struct ksz_hw_desc *ring_virt ;
   u32 ring_phys ;
   int size ;
   int alloc ;
   int avail ;
   int last ;
   int next ;
   int mask ;
};

#line 1026  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_mac_table {
   u8 mac_addr[6U] ;
   u16 vid ;
   u8 fid ;
   u8 ports ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) override : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_fid : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
};

#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_vlan_table {
   u16 vid ;
   u8 fid ;
   u8 member ;
};

#line 1067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_port_mib {
   u8 cnt_ptr ;
   u8 link_down ;
   u8 state ;
   u8 mib_start ;
   u64 counter[34U] ;
   u32 dropped[2U] ;
};

#line 1148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_port_cfg {
   u16 vid ;
   u8 member ;
   u8 port_prio ;
   u32 rx_rate[4U] ;
   u32 tx_rate[4U] ;
   int stp_state ;
};

#line 1166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_switch {
   struct ksz_mac_table mac_table[8U] ;
   struct ksz_vlan_table vlan_table[16U] ;
   struct ksz_port_cfg port_cfg[3U] ;
   u8 diffserv[64U] ;
   u8 p_802_1p[8U] ;
   u8 br_addr[6U] ;
   u8 other_addr[6U] ;
   u8 broad_per ;
   u8 member ;
};

#line 1195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_port_info {
   uint state ;
   uint tx_rate ;
   u8 duplex ;
   u8 advertised ;
   u8 partner ;
   u8 port_id ;
   void *pdev ;
};

#line 1217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_hw {
   void *io ;
   struct ksz_switch *ksz_switch ;
   struct ksz_port_info port_info[2U] ;
   struct ksz_port_mib port_mib[3U] ;
   int dev_count ;
   int dst_ports ;
   int id ;
   int mib_cnt ;
   int mib_port_cnt ;
   u32 tx_cfg ;
   u32 rx_cfg ;
   u32 intr_mask ;
   u32 intr_set ;
   uint intr_blocked ;
   struct ksz_desc_info rx_desc_info ;
   struct ksz_desc_info tx_desc_info ;
   int tx_int_cnt ;
   int tx_int_mask ;
   int tx_size ;
   u8 perm_addr[6U] ;
   u8 override_addr[6U] ;
   u8 address[16U][6U] ;
   u8 addr_list_size ;
   u8 mac_override ;
   u8 promiscuous ;
   u8 all_multi ;
   u8 multi_list[32U][6U] ;
   u8 multi_bits[8U] ;
   u8 multi_list_size ;
   u8 enabled ;
   u8 rx_stop ;
   u8 reserved2[1U] ;
   uint features ;
   uint overrides ;
   void *parent ;
};

#line 1321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_port {
   u8 duplex ;
   u8 speed ;
   u8 force_link ;
   u8 flow_ctrl ;
   int first_port ;
   int mib_port_cnt ;
   int port_cnt ;
   u64 counter[4U] ;
   struct ksz_hw *hw ;
   struct ksz_port_info *linked ;
};

#line 1356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_timer_info {
   struct timer_list timer ;
   int cnt ;
   int max ;
   int period ;
};

#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_shared_mem {
   dma_addr_t dma_addr ;
   uint alloc_size ;
   uint phys ;
   u8 *alloc_virt ;
   u8 *virt ;
};

#line 1386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct ksz_counter_info {
   wait_queue_head_t counter ;
   unsigned long time ;
   int read ;
};

#line 1398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct dev_info {
   struct net_device *dev ;
   struct pci_dev *pdev ;
   struct ksz_hw hw ;
   struct ksz_shared_mem desc_pool ;
   spinlock_t hwlock ;
   struct mutex lock ;
   int (*dev_rcv)(struct dev_info *) ;
   struct sk_buff *last_skb ;
   int skb_index ;
   int skb_len ;
   struct work_struct mib_read ;
   struct ksz_timer_info mib_timer_info ;
   struct ksz_counter_info counter[3U] ;
   int mtu ;
   int opened ;
   struct tasklet_struct rx_tasklet ;
   struct tasklet_struct tx_tasklet ;
   int wol_enable ;
   int wol_support ;
   unsigned long pme_wait ;
};

#line 1453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct dev_priv {
   struct dev_info *adapter ;
   struct ksz_port port ;
   struct ksz_timer_info monitor_timer_info ;
   struct semaphore proc_sem ;
   int id ;
   struct mii_if_info mii_if ;
   u32 advertising ;
   u32 msg_enable ;
   int media_state ;
   int multicast ;
   int promiscuous ;
};

#line 6090  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct hw_regs {
   int start ;
   int end ;
};

#line 6423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct __anonstruct_ethtool_stats_keys_331 {
   char string[32U] ;
};

#line 6839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct platform_info {
   struct dev_info dev_info ;
   struct net_device *netdev[2U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_del_timer_sync_13 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_5 {
   int arg0 ;
   int signal_pending ;
};

#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_17 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_16 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/fvtp/.tmp_ksz884x.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 515 
int hex_to_bin(char);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 31 
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_82(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_73(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_75(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_irq_77(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_irq_80(spinlock_t *lock);


#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 381 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 382 
  return;
}


#line 423 
static void ldv_spin_unlock_83(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_86(spinlock_t *lock);


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 455 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 456 
  return;
}


#line 469 
static void ldv_spin_unlock_irq_74(spinlock_t *lock);


#line 473 
static void ldv_spin_unlock_irq_76(spinlock_t *lock);


#line 477 
static void ldv_spin_unlock_irq_78(spinlock_t *lock);


#line 481 
static void ldv_spin_unlock_irq_81(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_96(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_98(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_100(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_105(struct mutex *ldv_func_arg1);


#line 67 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 69 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 102 
void ldv_spin_model_lock(char *);


#line 103 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
extern struct resource iomem_resource;


#line 192 
struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, char const *, int);


#line 201 
void __release_region(struct resource *, resource_size_t, resource_size_t);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_72(struct timer_list *ldv_func_arg1);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 446 
static bool ldv_flush_work_87(struct work_struct *ldv_func_arg1);


#line 560 
static bool ldv_schedule_work_104(struct work_struct *work);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_99(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned short readw(void const volatile *addr)
{
  unsigned short ret;
  
#line 58 
  ldv_inline_asm();
  
#line 57 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeb(unsigned char val, void volatile *addr)
{
  
#line 66 
  ldv_inline_asm();
  
#line 67 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writew(unsigned short val, void volatile *addr)
{
  
#line 67 
  ldv_inline_asm();
  
#line 68 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_89(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_88(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 540 
static void ldv_tasklet_schedule_79(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_84(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_85(struct tasklet_struct *t);


#line 591 
void tasklet_kill(struct tasklet_struct *);


#line 597 
static void ldv_tasklet_init_90(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 601 
static void ldv_tasklet_init_91(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
bool capable(int);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev *pci_dev_get(struct pci_dev *);


#line 814 
void pci_dev_put(struct pci_dev *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1146 
static int ldv___pci_register_driver_111(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_112(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
__inline static void sema_init(struct semaphore *sem, int val)
{
  struct lock_class_key __key;
  
#line 35 
  struct semaphore __constr_expr_26 = {.lock = {.raw_lock = {.val = {.counter = 0}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "(*sem).lock", .cpu = 0, .ip = 0UL}}, .count = (unsigned int)val, .wait_list = {.next = & sem->wait_list, .prev = & sem->wait_list}};
  
#line 35 
  *sem = __constr_expr_26;
  
#line 36 
  lockdep_init_map(& sem->lock.dep_map,"semaphore->lock",& __key,0);
  
#line 37 
  return;
}


#line 40 
int down_interruptible(struct semaphore *);


#line 44 
void up(struct semaphore *);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 783 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_network_header(struct sk_buff *skb)
{
  
#line 1904 
  skb->network_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1905 
  return;
}


#line 1907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_network_header(struct sk_buff *skb, int const offset)
{
  
#line 1909 
  skb_reset_network_header(skb);
  
#line 1910 
  skb->network_header = (unsigned short)((int)skb->network_header + (int)((unsigned short)offset));
  
#line 1911 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_frag_address(skb_frag_t const *frag)
{
  void *__retres;
  void *tmp_0;
  struct page *tmp;
  
#line 2332 
  tmp = skb_frag_page(frag);
  
#line 2332 
  tmp_0 = lowmem_page_address((struct page const *)tmp);
  
#line 2332 
  ;
  
#line 2332 
  __retres = tmp_0 + frag->page_offset;
  
#line 2332 
  return __retres;
}


#line 2716 
void skb_copy_and_csum_dev(struct sk_buff const *, u8 *);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
int mii_link_ok(struct mii_if_info *);


#line 32 
int mii_nway_restart(struct mii_if_info *);


#line 33 
int mii_ethtool_gset(struct mii_if_info *, struct ethtool_cmd *);


#line 34 
int mii_ethtool_sset(struct mii_if_info *, struct ethtool_cmd *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_consume_skb_any(struct sk_buff *skb)
{
  
#line 2938 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_CONSUMED);
  
#line 2939 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3355 
static int ldv_register_netdev_110(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_107(struct net_device *ldv_func_arg1);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_109(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 1490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static char version[39U] = {(char)'M', (char)'i', (char)'c', (char)'r', (char)'e', (char)'l', (char)' ', (char)'\000'};

#line 1493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u8 DEFAULT_MAC_ADDRESS[6U] = {(unsigned char)0U, (unsigned char)16U, (unsigned char)161U, (unsigned char)136U, (unsigned char)66U, (unsigned char)1U};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_ack_intr(struct ksz_hw *hw, uint interrupt)
{
  
#line 1501 
  writel(interrupt,(void volatile *)(hw->io + 44U));
  
#line 1502 
  return;
}


#line 1504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_dis_intr(struct ksz_hw *hw)
{
  
#line 1506 
  hw->intr_blocked = hw->intr_mask;
  
#line 1507 
  writel(0U,(void volatile *)(hw->io + 40U));
  
#line 1508 
  hw->intr_set = readl((void const volatile *)(hw->io + 40U));
  
#line 1509 
  return;
}


#line 1511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_set_intr(struct ksz_hw *hw, uint interrupt)
{
  
#line 1513 
  hw->intr_set = interrupt;
  
#line 1514 
  writel(interrupt,(void volatile *)(hw->io + 40U));
  
#line 1515 
  return;
}


#line 1517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_ena_intr(struct ksz_hw *hw)
{
  
#line 1519 
  hw->intr_blocked = 0U;
  
#line 1520 
  hw_set_intr(hw,hw->intr_mask);
  
#line 1521 
  return;
}


#line 1523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_dis_intr_bit(struct ksz_hw *hw, uint bit)
{
  
#line 1525 
  hw->intr_mask &= ~ bit;
  
#line 1526 
  return;
}


#line 1528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_turn_off_intr(struct ksz_hw *hw, uint interrupt)
{
  u32 read_intr;
  
#line 1532 
  read_intr = readl((void const volatile *)(hw->io + 40U));
  
#line 1533 
  hw->intr_set = ~ interrupt & read_intr;
  
#line 1534 
  writel(hw->intr_set,(void volatile *)(hw->io + 40U));
  
#line 1535 
  hw_dis_intr_bit(hw,interrupt);
  
#line 1536 
  return;
}


#line 1546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_turn_on_intr(struct ksz_hw *hw, u32 bit)
{
  
#line 1548 
  hw->intr_mask |= bit;
  
#line 1550 
  if (hw->intr_blocked == 0U) 
#line 1551 
                              hw_set_intr(hw,hw->intr_mask); else ;
  
#line 1552 
  return;
}


#line 1563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_read_intr(struct ksz_hw *hw, uint *status)
{
  
#line 1565 
  *status = readl((void const volatile *)(hw->io + 44U));
  
#line 1566 
  *status &= hw->intr_set;
  
#line 1567 
  return;
}


#line 1569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_restore_intr(struct ksz_hw *hw, uint interrupt)
{
  
#line 1571 
  if (interrupt != 0U) 
#line 1572 
                       hw_ena_intr(hw); else ;
  
#line 1573 
  return;
}


#line 1583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static uint hw_block_intr(struct ksz_hw *hw)
{
  
#line 1585 
  uint interrupt = 0U;
  
#line 1587 
  if (hw->intr_blocked == 0U) {
    
#line 1588 
    hw_dis_intr(hw);
    
#line 1589 
    interrupt = hw->intr_blocked;
  }
  else ;
  
#line 1591 
  return interrupt;
}


#line 1598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void reset_desc(struct ksz_desc *desc, union desc_stat status)
{
  
#line 1600 
  status.rx.hw_owned = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 1601 
  (desc->phw)->ctrl.data = status.data;
  
#line 1602 
  return;
}


#line 1604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void release_desc(struct ksz_desc *desc)
{
  
#line 1606 
  desc->sw.ctrl.tx.hw_owned = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1607 
  if (desc->sw.buf_size != desc->sw.buf.data) {
    
#line 1608 
    desc->sw.buf_size = desc->sw.buf.data;
    
#line 1609 
    (desc->phw)->buf.data = desc->sw.buf.data;
  }
  else ;
  
#line 1611 
  (desc->phw)->ctrl.data = desc->sw.ctrl.data;
  
#line 1612 
  return;
}


#line 1614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void get_rx_pkt(struct ksz_desc_info *info, struct ksz_desc **desc)
{
  
#line 1616 
  *desc = info->ring + info->last;
  
#line 1617 
  info->last += 1;
  
#line 1618 
  info->last &= info->mask;
  
#line 1619 
  info->avail -= 1;
  
#line 1620 
  (*desc)->sw.buf.data &= 4294965248U;
  
#line 1621 
  return;
}


#line 1623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void set_rx_buf(struct ksz_desc *desc, u32 addr)
{
  
#line 1625 
  (desc->phw)->addr = addr;
  
#line 1626 
  return;
}


#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void set_rx_len(struct ksz_desc *desc, u32 len)
{
  
#line 1630 
  desc->sw.buf.rx.buf_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))len;
  
#line 1631 
  return;
}


#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void get_tx_pkt(struct ksz_desc_info *info, struct ksz_desc **desc)
{
  
#line 1636 
  *desc = info->ring + info->next;
  
#line 1637 
  info->next += 1;
  
#line 1638 
  info->next &= info->mask;
  
#line 1639 
  info->avail -= 1;
  
#line 1640 
  (*desc)->sw.buf.data &= 67106816U;
  
#line 1641 
  return;
}


#line 1648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void set_tx_len(struct ksz_desc *desc, u32 len)
{
  
#line 1650 
  desc->sw.buf.tx.buf_size = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))))len;
  
#line 1651 
  return;
}


#line 1674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_r_table(struct ksz_hw *hw, int table, u16 addr, u32 *data)
{
  u16 ctrl_addr;
  uint interrupt;
  
#line 1679 
  ctrl_addr = (unsigned short)((unsigned int)((int)((unsigned short)(table << 10)) | (int)addr) | 4096U);
  
#line 1681 
  interrupt = hw_block_intr(hw);
  
#line 1683 
  writew((unsigned short)((int)ctrl_addr),(void volatile *)(hw->io + 1184U));
  {
    u16 dummy;
    
#line 1684 
    dummy = readw((void const volatile *)(hw->io + 1184U));
  }
  
#line 1685 
  *data = readl((void const volatile *)(hw->io + 1192U));
  
#line 1687 
  hw_restore_intr(hw,interrupt);
  
#line 1688 
  return;
}


#line 1701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_w_table_64(struct ksz_hw *hw, int table, u16 addr, u32 data_hi, u32 data_lo)
{
  u16 ctrl_addr;
  uint interrupt;
  
#line 1707 
  ctrl_addr = (unsigned short)((table << 10) | (int)addr);
  
#line 1709 
  interrupt = hw_block_intr(hw);
  
#line 1711 
  writel(data_hi,(void volatile *)(hw->io + 1188U));
  
#line 1712 
  writel(data_lo,(void volatile *)(hw->io + 1192U));
  
#line 1714 
  writew((unsigned short)((int)ctrl_addr),(void volatile *)(hw->io + 1184U));
  {
    u16 dummy;
    
#line 1715 
    dummy = readw((void const volatile *)(hw->io + 1184U));
  }
  
#line 1717 
  hw_restore_intr(hw,interrupt);
  
#line 1718 
  return;
}


#line 1734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_w_sta_mac_table(struct ksz_hw *hw, u16 addr, u8 *mac_addr, u8 ports, int override, int valid, int use_fid, u8 fid)
{
  u32 data_hi;
  u32 data_lo;
  
#line 1740 
  data_lo = ((((unsigned int)*(mac_addr + 2U) << 24) | ((unsigned int)*(mac_addr + 3U) << 16)) | ((unsigned int)*(mac_addr + 4U) << 8)) | (unsigned int)*(mac_addr + 5U);
  
#line 1743 
  data_hi = ((unsigned int)*mac_addr << 8) | (unsigned int)*(mac_addr + 1U);
  
#line 1744 
  data_hi = ((unsigned int)ports << 16) | data_hi;
  
#line 1746 
  if (override != 0) 
#line 1747 
                     data_hi |= 1048576U; else ;
  
#line 1748 
  if (use_fid != 0) {
    
#line 1749 
    data_hi |= 2097152U;
    
#line 1750 
    data_hi = ((unsigned int)fid << 22) | data_hi;
  }
  else ;
  
#line 1752 
  if (valid != 0) 
#line 1753 
                  data_hi |= 524288U; else ;
  
#line 1755 
  sw_w_table_64(hw,0,(unsigned short)((int)addr),data_hi,data_lo);
  
#line 1756 
  return;
}


#line 1771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int sw_r_vlan_table(struct ksz_hw *hw, u16 addr, u16 *vid, u8 *fid, u8 *member)
{
  int __retres;
  u32 data;
  
#line 1776 
  sw_r_table(hw,1,(unsigned short)((int)addr),& data);
  
#line 1777 
  if ((data & 524288U) != 0U) {
    
#line 1778 
    *vid = (unsigned short)((unsigned int)((unsigned short)data) & 4095U);
    
#line 1779 
    *fid = (unsigned char)((unsigned int)((unsigned char)(data >> 12)) & 15U);
    
#line 1780 
    *member = (unsigned char)((unsigned int)((unsigned char)(data >> 16)) & 7U);
    
#line 1782 
    __retres = 0;
    
#line 1782 
    goto return_label;
  }
  else ;
  
#line 1784 
  __retres = -1;
  return_label: 
#line 1784 
                return __retres;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_r_mib_cnt(struct ksz_hw *hw, int port, u16 addr, u64 *cnt)
{
  u32 data;
  u16 ctrl_addr;
  uint interrupt;
  int timeout;
  
#line 1804 
  ctrl_addr = (unsigned short)((unsigned int)((unsigned short)port) * 32U + (unsigned int)addr);
  
#line 1806 
  interrupt = hw_block_intr(hw);
  
#line 1808 
  ctrl_addr = (unsigned short)((unsigned int)ctrl_addr | 7168U);
  
#line 1809 
  writew((unsigned short)((int)ctrl_addr),(void volatile *)(hw->io + 1184U));
  {
    u16 dummy;
    
#line 1810 
    dummy = readw((void const volatile *)(hw->io + 1184U));
  }
  
#line 1812 
  timeout = 100;
  
#line 1812 
  goto ldv_47493;
  ldv_47492: 
#line 1813 
  ;
  
#line 1813 
  data = readl((void const volatile *)(hw->io + 1192U));
  
#line 1815 
  if ((data & 1073741824U) != 0U) {
    
#line 1816 
    if (data < (u32)0) 
#line 1817 
                       *cnt += 1073741824ULL; else ;
    
#line 1818 
    *cnt += (unsigned long long)data & 1073741823ULL;
    
#line 1819 
    goto ldv_47491;
  }
  else ;
  
#line 1812 
  timeout -= 1;
  ldv_47493: 
#line 1813 
  ;
  
#line 1812 
  if (timeout > 0) 
#line 1814 
                   goto ldv_47492; else 
#line 1817 
                                        goto ldv_47491;
  ldv_47491: 
#line 1818 
  ;
  
#line 1823 
  hw_restore_intr(hw,interrupt);
  
#line 1824 
  return;
}


#line 1835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_r_mib_pkt(struct ksz_hw *hw, int port, u32 *last, u64 *cnt)
{
  u32 cur;
  u32 data;
  u16 ctrl_addr;
  uint interrupt;
  int index;
  
#line 1843 
  index = port + 259;
  ldv_47506: 
#line 1844 
  ;
  
#line 1845 
  interrupt = hw_block_intr(hw);
  
#line 1847 
  ctrl_addr = (unsigned short)index;
  
#line 1848 
  ctrl_addr = (unsigned short)((unsigned int)ctrl_addr | 7168U);
  
#line 1850 
  writew((unsigned short)((int)ctrl_addr),(void volatile *)(hw->io + 1184U));
  {
    u16 dummy;
    
#line 1851 
    dummy = readw((void const volatile *)(hw->io + 1184U));
  }
  
#line 1852 
  data = readl((void const volatile *)(hw->io + 1192U));
  
#line 1854 
  hw_restore_intr(hw,interrupt);
  
#line 1856 
  data &= 65535U;
  
#line 1857 
  cur = *last;
  
#line 1858 
  if (data != cur) {
    
#line 1859 
    *last = data;
    
#line 1860 
    if (data < cur) 
#line 1861 
                    data += 65536U; else ;
    
#line 1862 
    data -= cur;
    
#line 1863 
    *cnt += (unsigned long long)data;
  }
  else ;
  
#line 1865 
  last += 1;
  
#line 1866 
  cnt += 1;
  
#line 1867 
  index += -3;
  
#line 1869 
  if (port + 256 <= index) 
#line 1871 
                           goto ldv_47506; else 
#line 1874 
                                                goto ldv_47507;
  ldv_47507: 
#line 1875 
  ;
  
#line 1876 
  return;
}


#line 1883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int port_r_cnt(struct ksz_hw *hw, int port)
{
  int __retres;
  
#line 1885 
  struct ksz_port_mib *mib = & hw->port_mib[port];
  
#line 1887 
  if ((unsigned int)mib->mib_start <= 31U) {
    
#line 1888 
    goto ldv_47514;
    ldv_47513: 
#line 1889 
    ;
    
#line 1889 
    port_r_mib_cnt(hw,port,(unsigned short)((int)mib->cnt_ptr),& mib->counter[(int)mib->cnt_ptr]);
    
#line 1891 
    mib->cnt_ptr = (u8)((int)mib->cnt_ptr + 1);
    ldv_47514: 
#line 1892 
    ;
    
#line 1888 
    if ((unsigned int)mib->cnt_ptr <= 31U) 
#line 1890 
                                           goto ldv_47513; else 
#line 1893 
                                                                goto ldv_47515;
    ldv_47515: 
#line 1894 
    ;
  }
  else ;
  
#line 1893 
  if (hw->mib_cnt > 32) 
#line 1894 
                        port_r_mib_pkt(hw,port,(u32 *)(& mib->dropped),& mib->counter[32]); else ;
  
#line 1896 
  mib->cnt_ptr = (unsigned char)0U;
  
#line 1897 
  __retres = 0;
  
#line 1897 
  return __retres;
}


#line 1908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_init_cnt(struct ksz_hw *hw, int port)
{
  
#line 1910 
  struct ksz_port_mib *mib = & hw->port_mib[port];
  
#line 1912 
  mib->cnt_ptr = (unsigned char)0U;
  
#line 1913 
  if ((unsigned int)mib->mib_start <= 31U) {
    ldv_47521: 
#line 1915 
    ;
    
#line 1915 
    port_r_mib_cnt(hw,port,(unsigned short)((int)mib->cnt_ptr),& mib->counter[(int)mib->cnt_ptr]);
    
#line 1917 
    mib->cnt_ptr = (u8)((int)mib->cnt_ptr + 1);
    
#line 1918 
    if ((unsigned int)mib->cnt_ptr <= 31U) 
#line 1920 
                                           goto ldv_47521; else 
#line 1923 
                                                                goto ldv_47522;
    ldv_47522: 
#line 1924 
    ;
  }
  else ;
  
#line 1919 
  if (hw->mib_cnt > 32) 
#line 1920 
                        port_r_mib_pkt(hw,port,(u32 *)(& mib->dropped),& mib->counter[32]); else ;
  
#line 1922 
  memset((void *)(& mib->counter),0,272UL);
  
#line 1923 
  mib->cnt_ptr = (unsigned char)0U;
  
#line 1924 
  return;
}


#line 1963  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_cfg(struct ksz_hw *hw, int port, int offset, u16 bits, int set)
{
  u32 addr;
  u16 data;
  
#line 1969 
  addr = (unsigned int)((port + 40) * 32);
  
#line 1970 
  addr += (unsigned int)offset;
  
#line 1971 
  data = readw((void const volatile *)(hw->io + addr));
  
#line 1972 
  if (set != 0) 
#line 1973 
                data = (unsigned short)((int)data | (int)bits); else 
                                                                  
#line 1975 
                                                                  data = (unsigned short)(~ ((int)bits) & (int)data);
  
#line 1976 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + addr));
  
#line 1977 
  return;
}


#line 2035  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_r8(struct ksz_hw *hw, int port, int offset, u8 *data)
{
  u32 addr;
  
#line 2039 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2040 
  addr += (unsigned int)offset;
  
#line 2041 
  *data = readb((void const volatile *)(hw->io + addr));
  
#line 2042 
  return;
}


#line 2053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_r16(struct ksz_hw *hw, int port, int offset, u16 *data)
{
  u32 addr;
  
#line 2057 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2058 
  addr += (unsigned int)offset;
  
#line 2059 
  *data = readw((void const volatile *)(hw->io + addr));
  
#line 2060 
  return;
}


#line 2071  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_w16(struct ksz_hw *hw, int port, int offset, u16 data)
{
  u32 addr;
  
#line 2075 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2076 
  addr += (unsigned int)offset;
  
#line 2077 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + addr));
  
#line 2078 
  return;
}


#line 2091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int sw_chk(struct ksz_hw *hw, u32 addr, u16 bits)
{
  int __retres;
  u16 data;
  
#line 2095 
  data = readw((void const volatile *)(hw->io + addr));
  
#line 2096 
  __retres = ((int)data & (int)bits) == (int)bits;
  
#line 2096 
  return __retres;
}


#line 2108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg(struct ksz_hw *hw, u32 addr, u16 bits, int set)
{
  u16 data;
  
#line 2112 
  data = readw((void const volatile *)(hw->io + addr));
  
#line 2113 
  if (set != 0) 
#line 2114 
                data = (unsigned short)((int)data | (int)bits); else 
                                                                  
#line 2116 
                                                                  data = (unsigned short)(~ ((int)bits) & (int)data);
  
#line 2117 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + addr));
  
#line 2118 
  return;
}


#line 2122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_broad_storm(struct ksz_hw *hw, int p, int set)
{
  
#line 2124 
  port_cfg(hw,p,0,(unsigned short)128,set);
  
#line 2125 
  return;
}


#line 2147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg_broad_storm(struct ksz_hw *hw, u8 percent)
{
  u16 data;
  
#line 2150 
  u32 value = ((unsigned int)percent * 9969U) / 100U;
  
#line 2152 
  if (value > 2047U) 
#line 2153 
                     value = 2047U; else ;
  
#line 2155 
  data = readw((void const volatile *)(hw->io + 1030U));
  
#line 2156 
  data = (unsigned short)((unsigned int)data & 248U);
  
#line 2157 
  data = (unsigned short)(((unsigned int)((int)((unsigned short)value) << 8U) | ((unsigned int)((unsigned short)(value >> 8)) & 255U)) | (unsigned int)data);
  
#line 2158 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 1030U));
  
#line 2159 
  return;
}


#line 2168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_get_broad_storm(struct ksz_hw *hw, u8 *percent)
{
  int num;
  u16 data;
  
#line 2173 
  data = readw((void const volatile *)(hw->io + 1030U));
  
#line 2174 
  num = (int)data & 7;
  
#line 2175 
  num <<= 8;
  
#line 2176 
  num = ((int)data >> 8) | num;
  
#line 2177 
  num = (num * 100 + 4984) / 9969;
  
#line 2178 
  *percent = (unsigned char)num;
  
#line 2179 
  return;
}


#line 2188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_dis_broad_storm(struct ksz_hw *hw, int port)
{
  
#line 2190 
  port_cfg_broad_storm(hw,port,0);
  
#line 2191 
  return;
}


#line 2200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_ena_broad_storm(struct ksz_hw *hw, int port)
{
  
#line 2202 
  sw_cfg_broad_storm(hw,(unsigned char)((int)(hw->ksz_switch)->broad_per));
  
#line 2203 
  port_cfg_broad_storm(hw,port,1);
  
#line 2204 
  return;
}


#line 2212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_broad_storm(struct ksz_hw *hw)
{
  int port;
  
#line 2216 
  (hw->ksz_switch)->broad_per = (unsigned char)1U;
  
#line 2217 
  sw_cfg_broad_storm(hw,(unsigned char)((int)(hw->ksz_switch)->broad_per));
  
#line 2218 
  port = 0;
  
#line 2218 
  goto ldv_47625;
  ldv_47624: 
#line 2219 
  ;
  
#line 2219 
  sw_dis_broad_storm(hw,port);
  
#line 2218 
  port += 1;
  ldv_47625: 
#line 2219 
  ;
  
#line 2218 
  if (port <= 2) 
#line 2220 
                 goto ldv_47624; else 
#line 2223 
                                      goto ldv_47626;
  ldv_47626: 
#line 2224 
  ;
  
#line 2220 
  sw_cfg(hw,1028U,(unsigned short)64,1);
  
#line 2221 
  return;
}


#line 2231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_cfg_broad_storm(struct ksz_hw *hw, u8 percent)
{
  
#line 2233 
  if ((unsigned int)percent > 100U) 
#line 2234 
                                    percent = (unsigned char)100U; else ;
  
#line 2236 
  sw_cfg_broad_storm(hw,(unsigned char)((int)percent));
  
#line 2237 
  sw_get_broad_storm(hw,& percent);
  
#line 2238 
  (hw->ksz_switch)->broad_per = percent;
  
#line 2239 
  return;
}


#line 2248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_dis_prio_rate(struct ksz_hw *hw, int port)
{
  u32 addr;
  
#line 2252 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2253 
  addr += 8U;
  
#line 2254 
  writel(0U,(void volatile *)(hw->io + addr));
  
#line 2255 
  return;
}


#line 2263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_prio_rate(struct ksz_hw *hw)
{
  int port;
  int prio;
  u32 tmp;
  
#line 2267 
  struct ksz_switch *sw = hw->ksz_switch;
  
#line 2269 
  port = 0;
  
#line 2269 
  goto ldv_47646;
  ldv_47645: 
#line 2270 
  ;
  
#line 2270 
  prio = 0;
  
#line 2270 
  goto ldv_47643;
  ldv_47642: 
#line 2271 
  ;
  
#line 2271 
  tmp = 0U;
  
#line 2271 
  sw->port_cfg[port].tx_rate[prio] = tmp;
  
#line 2271 
  sw->port_cfg[port].rx_rate[prio] = tmp;
  
#line 2270 
  prio += 1;
  ldv_47643: 
#line 2271 
  ;
  
#line 2270 
  if (prio <= 3) 
#line 2272 
                 goto ldv_47642; else 
#line 2275 
                                      goto ldv_47644;
  ldv_47644: 
#line 2276 
  ;
  
#line 2274 
  sw_dis_prio_rate(hw,port);
  
#line 2269 
  port += 1;
  ldv_47646: 
#line 2270 
  ;
  
#line 2269 
  if (port <= 2) 
#line 2271 
                 goto ldv_47645; else 
#line 2274 
                                      goto ldv_47647;
  ldv_47647: 
#line 2275 
  ;
  
#line 2276 
  return;
}


#line 2280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_back_pressure(struct ksz_hw *hw, int p, int set)
{
  
#line 2282 
  port_cfg(hw,p,2,(unsigned short)2048,set);
  
#line 2283 
  return;
}


#line 2384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_mirror_sniffer(struct ksz_hw *hw, int p, int set)
{
  
#line 2386 
  port_cfg(hw,p,2,(unsigned short)128,set);
  
#line 2387 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_mirror_rx(struct ksz_hw *hw, int p, int set)
{
  
#line 2392 
  port_cfg(hw,p,2,(unsigned short)64,set);
  
#line 2393 
  return;
}


#line 2396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_mirror_tx(struct ksz_hw *hw, int p, int set)
{
  
#line 2398 
  port_cfg(hw,p,2,(unsigned short)32,set);
  
#line 2399 
  return;
}


#line 2402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void sw_cfg_mirror_rx_tx(struct ksz_hw *hw, int set)
{
  
#line 2404 
  sw_cfg(hw,1028U,(unsigned short)256,set);
  
#line 2405 
  return;
}


#line 2407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_mirror(struct ksz_hw *hw)
{
  int port;
  
#line 2411 
  port = 0;
  
#line 2411 
  goto ldv_47747;
  ldv_47746: 
#line 2412 
  ;
  
#line 2412 
  port_cfg_mirror_sniffer(hw,port,0);
  
#line 2413 
  port_cfg_mirror_rx(hw,port,0);
  
#line 2414 
  port_cfg_mirror_tx(hw,port,0);
  
#line 2411 
  port += 1;
  ldv_47747: 
#line 2412 
  ;
  
#line 2411 
  if (port <= 2) 
#line 2413 
                 goto ldv_47746; else 
#line 2416 
                                      goto ldv_47748;
  ldv_47748: 
#line 2417 
  ;
  
#line 2416 
  sw_cfg_mirror_rx_tx(hw,0);
  
#line 2417 
  return;
}


#line 2443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_diffserv(struct ksz_hw *hw, int p, int set)
{
  
#line 2445 
  port_cfg(hw,p,0,(unsigned short)64,set);
  
#line 2446 
  return;
}


#line 2449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_802_1p(struct ksz_hw *hw, int p, int set)
{
  
#line 2451 
  port_cfg(hw,p,0,(unsigned short)32,set);
  
#line 2452 
  return;
}


#line 2455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_replace_vid(struct ksz_hw *hw, int p, int set)
{
  
#line 2457 
  port_cfg(hw,p,2,(unsigned short)8,set);
  
#line 2458 
  return;
}


#line 2461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_prio(struct ksz_hw *hw, int p, int set)
{
  
#line 2463 
  port_cfg(hw,p,0,(unsigned short)1,set);
  
#line 2464 
  return;
}


#line 2498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_dis_diffserv(struct ksz_hw *hw, int port)
{
  
#line 2500 
  port_cfg_diffserv(hw,port,0);
  
#line 2501 
  return;
}


#line 2510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_dis_802_1p(struct ksz_hw *hw, int port)
{
  
#line 2512 
  port_cfg_802_1p(hw,port,0);
  
#line 2513 
  return;
}


#line 2521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg_replace_null_vid(struct ksz_hw *hw, int set)
{
  
#line 2523 
  sw_cfg(hw,1030U,(unsigned short)8,set);
  
#line 2524 
  return;
}


#line 2537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg_replace_vid(struct ksz_hw *hw, int port, int set)
{
  
#line 2539 
  port_cfg_replace_vid(hw,port,set);
  
#line 2540 
  return;
}


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg_port_based(struct ksz_hw *hw, int port, u8 prio)
{
  u16 data;
  
#line 2554 
  if ((unsigned int)prio > 3U) 
#line 2555 
                               prio = (unsigned char)3U; else ;
  
#line 2557 
  (hw->ksz_switch)->port_cfg[port].port_prio = prio;
  
#line 2559 
  port_r16(hw,port,0,& data);
  
#line 2560 
  data = (unsigned short)((unsigned int)data & 65511U);
  
#line 2561 
  data = (unsigned short)(((int)prio << 3) | (int)data);
  
#line 2562 
  port_w16(hw,port,0,(unsigned short)((int)data));
  
#line 2563 
  return;
}


#line 2573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_dis_multi_queue(struct ksz_hw *hw, int port)
{
  
#line 2575 
  port_cfg_prio(hw,port,0);
  
#line 2576 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_prio(struct ksz_hw *hw)
{
  int port;
  int tos;
  
#line 2588 
  struct ksz_switch *sw = hw->ksz_switch;
  
#line 2594 
  sw->p_802_1p[0] = (unsigned char)0U;
  
#line 2595 
  sw->p_802_1p[1] = (unsigned char)0U;
  
#line 2596 
  sw->p_802_1p[2] = (unsigned char)1U;
  
#line 2597 
  sw->p_802_1p[3] = (unsigned char)1U;
  
#line 2598 
  sw->p_802_1p[4] = (unsigned char)2U;
  
#line 2599 
  sw->p_802_1p[5] = (unsigned char)2U;
  
#line 2600 
  sw->p_802_1p[6] = (unsigned char)3U;
  
#line 2601 
  sw->p_802_1p[7] = (unsigned char)3U;
  
#line 2607 
  tos = 0;
  
#line 2607 
  goto ldv_47835;
  ldv_47834: 
#line 2608 
  ;
  
#line 2608 
  sw->diffserv[tos] = (unsigned char)0U;
  
#line 2607 
  tos += 1;
  ldv_47835: 
#line 2608 
  ;
  
#line 2607 
  if (tos <= 63) 
#line 2609 
                 goto ldv_47834; else 
#line 2612 
                                      goto ldv_47836;
  ldv_47836: 
#line 2613 
  ;
  
#line 2611 
  port = 0;
  
#line 2611 
  goto ldv_47838;
  ldv_47837: 
#line 2612 
  ;
  
#line 2612 
  sw_dis_multi_queue(hw,port);
  
#line 2613 
  sw_dis_diffserv(hw,port);
  
#line 2614 
  sw_dis_802_1p(hw,port);
  
#line 2615 
  sw_cfg_replace_vid(hw,port,0);
  
#line 2617 
  sw->port_cfg[port].port_prio = (unsigned char)0U;
  
#line 2618 
  sw_cfg_port_based(hw,port,(unsigned char)((int)sw->port_cfg[port].port_prio));
  
#line 2611 
  port += 1;
  ldv_47838: 
#line 2612 
  ;
  
#line 2611 
  if (port <= 2) 
#line 2613 
                 goto ldv_47837; else 
#line 2616 
                                      goto ldv_47839;
  ldv_47839: 
#line 2617 
  ;
  
#line 2620 
  sw_cfg_replace_null_vid(hw,0);
  
#line 2621 
  return;
}


#line 2631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_get_def_vid(struct ksz_hw *hw, int port, u16 *vid)
{
  u32 addr;
  
#line 2635 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2636 
  addr += 4U;
  
#line 2637 
  *vid = readw((void const volatile *)(hw->io + addr));
  
#line 2638 
  return;
}


#line 2646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_vlan(struct ksz_hw *hw)
{
  int port;
  int entry;
  
#line 2650 
  struct ksz_switch *sw = hw->ksz_switch;
  
#line 2653 
  entry = 0;
  
#line 2653 
  goto ldv_47853;
  ldv_47852: 
#line 2654 
  ;
  
#line 2654 
  sw_r_vlan_table(hw,(unsigned short)((int)((unsigned short)entry)),& sw->vlan_table[entry].vid,& sw->vlan_table[entry].fid,& sw->vlan_table[entry].member);
  
#line 2653 
  entry += 1;
  ldv_47853: 
#line 2654 
  ;
  
#line 2653 
  if (entry <= 15) 
#line 2655 
                   goto ldv_47852; else 
#line 2658 
                                        goto ldv_47854;
  ldv_47854: 
#line 2659 
  ;
  
#line 2660 
  port = 0;
  
#line 2660 
  goto ldv_47856;
  ldv_47855: 
#line 2661 
  ;
  
#line 2661 
  port_get_def_vid(hw,port,& sw->port_cfg[port].vid);
  
#line 2662 
  sw->port_cfg[port].member = (unsigned char)7U;
  
#line 2660 
  port += 1;
  ldv_47856: 
#line 2661 
  ;
  
#line 2660 
  if (port <= 2) 
#line 2662 
                 goto ldv_47855; else 
#line 2665 
                                      goto ldv_47857;
  ldv_47857: 
#line 2666 
  ;
  
#line 2667 
  return;
}


#line 2674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_cfg_port_base_vlan(struct ksz_hw *hw, int port, u8 member)
{
  u32 addr;
  u8 data;
  
#line 2679 
  addr = (unsigned int)((port + 40) * 32);
  
#line 2680 
  addr += 2U;
  
#line 2682 
  data = readb((void const volatile *)(hw->io + addr));
  
#line 2683 
  data = (unsigned char)((unsigned int)data & 248U);
  
#line 2684 
  data = (unsigned char)(((int)member & 7) | (int)data);
  
#line 2685 
  writeb((unsigned char)((int)data),(void volatile *)(hw->io + addr));
  
#line 2687 
  (hw->ksz_switch)->port_cfg[port].member = member;
  
#line 2688 
  return;
}


#line 2714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_set_addr(struct ksz_hw *hw, u8 *mac_addr)
{
  int i;
  
#line 2718 
  i = 0;
  
#line 2718 
  goto ldv_47879;
  ldv_47878: 
#line 2719 
  ;
  
#line 2719 
  writeb((unsigned char)((int)*(mac_addr + i)),(void volatile *)(hw->io + ((unsigned int)i + 1137U)));
  
#line 2720 
  writeb((unsigned char)((int)*(mac_addr + (i + 1))),(void volatile *)(hw->io + ((unsigned int)i + 1136U)));
  
#line 2718 
  i += 2;
  ldv_47879: 
#line 2719 
  ;
  
#line 2718 
  if (i <= 5) 
#line 2720 
              goto ldv_47878; else 
#line 2723 
                                   goto ldv_47880;
  ldv_47880: 
#line 2724 
  ;
  
#line 2725 
  return;
}


#line 2730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_set_global_ctrl(struct ksz_hw *hw)
{
  u16 data;
  
#line 2735 
  data = readw((void const volatile *)(hw->io + 1030U));
  
#line 2736 
  data = (unsigned short)((unsigned int)data | 32U);
  
#line 2737 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 1030U));
  
#line 2739 
  data = readw((void const volatile *)(hw->io + 1026U));
  
#line 2742 
  data = (unsigned short)((unsigned int)data | 256U);
  
#line 2745 
  data = (unsigned short)((unsigned int)data | 1024U);
  
#line 2746 
  data = (unsigned short)((unsigned int)data | 1U);
  
#line 2748 
  if ((hw->overrides & 2U) != 0U) 
#line 2749 
                                  data = (unsigned short)((unsigned int)data | 512U); else 
                                                                    
#line 2751 
                                                                    data = (unsigned short)((unsigned int)data & 65023U);
  
#line 2752 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 1026U));
  
#line 2754 
  data = readw((void const volatile *)(hw->io + 1028U));
  
#line 2757 
  data = (unsigned short)((unsigned int)data | 8U);
  
#line 2758 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 1028U));
  
#line 2759 
  return;
}


#line 2778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_set_stp_state(struct ksz_hw *hw, int port, int state)
{
  u16 data;
  
#line 2782 
  port_r16(hw,port,2,& data);
  
#line 2783 
  switch (state) {
    case 0: 
#line 2784 
    ;
    
#line 2785 
    data = (unsigned short)((unsigned int)data & 63999U);
    
#line 2786 
    data = (unsigned short)((unsigned int)data | 256U);
    
#line 2787 
    goto ldv_47899;
    case 1: 
#line 2788 
    ;
    
#line 2793 
    data = (unsigned short)((unsigned int)data & 64511U);
    
#line 2794 
    data = (unsigned short)((unsigned int)data | 512U);
    
#line 2795 
    data = (unsigned short)((unsigned int)data | 256U);
    
#line 2796 
    goto ldv_47899;
    case 2: 
#line 2797 
    ;
    
#line 2798 
    data = (unsigned short)((unsigned int)data & 64511U);
    
#line 2799 
    data = (unsigned short)((unsigned int)data | 512U);
    
#line 2800 
    data = (unsigned short)((unsigned int)data & 65279U);
    
#line 2801 
    goto ldv_47899;
    case 3: 
#line 2802 
    ;
    
#line 2803 
    data = (unsigned short)((unsigned int)data | 1536U);
    
#line 2804 
    data = (unsigned short)((unsigned int)data & 65279U);
    
#line 2805 
    goto ldv_47899;
    case 4: 
#line 2806 
    ;
    
#line 2811 
    data = (unsigned short)((unsigned int)data & 63999U);
    
#line 2812 
    data = (unsigned short)((unsigned int)data | 256U);
    
#line 2813 
    goto ldv_47899;
    case 5: 
#line 2814 
    ;
    
#line 2815 
    data = (unsigned short)((unsigned int)data | 1536U);
    
#line 2816 
    data = (unsigned short)((unsigned int)data | 256U);
    
#line 2817 
    goto ldv_47899;
  }
  ldv_47899: 
#line 2819 
  ;
  
#line 2819 
  port_w16(hw,port,2,(unsigned short)((int)data));
  
#line 2820 
  (hw->ksz_switch)->port_cfg[port].stp_state = state;
  
#line 2821 
  return;
}


#line 2834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_clr_sta_mac_table(struct ksz_hw *hw)
{
  struct ksz_mac_table *entry;
  int i;
  
#line 2839 
  i = 0;
  
#line 2839 
  goto ldv_47911;
  ldv_47910: 
#line 2840 
  ;
  
#line 2840 
  entry = & (hw->ksz_switch)->mac_table[i];
  
#line 2841 
  sw_w_sta_mac_table(hw,(unsigned short)((int)((unsigned short)i)),(u8 *)(& entry->mac_addr),(unsigned char)((int)entry->ports),(int)entry->override,0,(int)entry->use_fid,(unsigned char)((int)entry->fid));
  
#line 2839 
  i += 1;
  ldv_47911: 
#line 2840 
  ;
  
#line 2839 
  if (i <= 7) 
#line 2841 
              goto ldv_47910; else 
#line 2844 
                                   goto ldv_47912;
  ldv_47912: 
#line 2845 
  ;
  
#line 2846 
  return;
}


#line 2854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_init_stp(struct ksz_hw *hw)
{
  struct ksz_mac_table *entry;
  
#line 2858 
  entry = & (hw->ksz_switch)->mac_table[0];
  
#line 2859 
  entry->mac_addr[0] = (unsigned char)1U;
  
#line 2860 
  entry->mac_addr[1] = (unsigned char)128U;
  
#line 2861 
  entry->mac_addr[2] = (unsigned char)194U;
  
#line 2862 
  entry->mac_addr[3] = (unsigned char)0U;
  
#line 2863 
  entry->mac_addr[4] = (unsigned char)0U;
  
#line 2864 
  entry->mac_addr[5] = (unsigned char)0U;
  
#line 2865 
  entry->ports = (unsigned char)4U;
  
#line 2866 
  entry->override = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2867 
  entry->valid = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2868 
  sw_w_sta_mac_table(hw,(unsigned short)0,(u8 *)(& entry->mac_addr),(unsigned char)((int)entry->ports),(int)entry->override,(int)entry->valid,(int)entry->use_fid,(unsigned char)((int)entry->fid));
  
#line 2872 
  return;
}


#line 2880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_block_addr(struct ksz_hw *hw)
{
  struct ksz_mac_table *entry;
  int i;
  
#line 2885 
  i = 1;
  
#line 2885 
  goto ldv_47923;
  ldv_47922: 
#line 2886 
  ;
  
#line 2886 
  entry = & (hw->ksz_switch)->mac_table[i];
  
#line 2887 
  entry->valid = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 2888 
  sw_w_sta_mac_table(hw,(unsigned short)((int)((unsigned short)i)),(u8 *)(& entry->mac_addr),(unsigned char)((int)entry->ports),(int)entry->override,(int)entry->valid,(int)entry->use_fid,(unsigned char)((int)entry->fid));
  
#line 2885 
  i += 1;
  ldv_47923: 
#line 2886 
  ;
  
#line 2885 
  if (i <= 3) 
#line 2887 
              goto ldv_47922; else 
#line 2890 
                                   goto ldv_47924;
  ldv_47924: 
#line 2891 
  ;
  
#line 2892 
  return;
}


#line 2904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_r_phy_ctrl(struct ksz_hw *hw, int phy, u16 *data)
{
  
#line 2906 
  *data = readw((void const volatile *)(hw->io + phy));
  
#line 2907 
  return;
}


#line 2909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_w_phy_ctrl(struct ksz_hw *hw, int phy, u16 data)
{
  
#line 2911 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + phy));
  
#line 2912 
  return;
}


#line 2973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_r_phy(struct ksz_hw *hw, int port, u16 reg, u16 *val)
{
  int phy;
  
#line 2977 
  phy = (port + 77) * 16 + (int)reg;
  
#line 2978 
  *val = readw((void const volatile *)(hw->io + phy));
  
#line 2979 
  return;
}


#line 2990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_w_phy(struct ksz_hw *hw, int port, u16 reg, u16 val)
{
  int phy;
  
#line 2994 
  phy = (port + 77) * 16 + (int)reg;
  
#line 2995 
  writew((unsigned short)((int)val),(void volatile *)(hw->io + phy));
  
#line 2996 
  return;
}


#line 3014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void drop_gpio(struct ksz_hw *hw, u8 gpio)
{
  u16 data;
  
#line 3018 
  data = readw((void const volatile *)(hw->io + 530U));
  
#line 3019 
  data = (unsigned short)(~ ((int)gpio) & (int)data);
  
#line 3020 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 530U));
  
#line 3021 
  return;
}


#line 3023  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void raise_gpio(struct ksz_hw *hw, u8 gpio)
{
  u16 data;
  
#line 3027 
  data = readw((void const volatile *)(hw->io + 530U));
  
#line 3028 
  data = (unsigned short)((int)((unsigned short)gpio) | (int)data);
  
#line 3029 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 530U));
  
#line 3030 
  return;
}


#line 3032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static u8 state_gpio(struct ksz_hw *hw, u8 gpio)
{
  u8 __retres;
  u16 data;
  
#line 3036 
  data = readw((void const volatile *)(hw->io + 530U));
  
#line 3037 
  __retres = (unsigned char)((int)((unsigned char)data) & (int)gpio);
  
#line 3037 
  return __retres;
}


#line 3040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void eeprom_clk(struct ksz_hw *hw)
{
  
#line 3042 
  raise_gpio(hw,(unsigned char)2);
  
#line 3043 
  __const_udelay(17180UL);
  
#line 3044 
  drop_gpio(hw,(unsigned char)2);
  
#line 3045 
  __const_udelay(17180UL);
  
#line 3047 
  return;
}


#line 3048  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u16 spi_r(struct ksz_hw *hw)
{
  int i;
  int tmp_0;
  u8 tmp;
  
#line 3051 
  u16 temp = (unsigned short)0U;
  
#line 3053 
  i = 15;
  
#line 3053 
  goto ldv_48023;
  ldv_48022: 
#line 3054 
  ;
  
#line 3054 
  raise_gpio(hw,(unsigned char)2);
  
#line 3055 
  __const_udelay(17180UL);
  
#line 3057 
  tmp = state_gpio(hw,(unsigned char)8);
  
#line 3057 
  if ((unsigned int)tmp != 0U) 
#line 3057 
                               tmp_0 = 1 << i; else 
#line 3057 
                                                    tmp_0 = 0;
  
#line 3057 
  temp = (unsigned short)(tmp_0 | (int)temp);
  
#line 3059 
  drop_gpio(hw,(unsigned char)2);
  
#line 3060 
  __const_udelay(17180UL);
  
#line 3053 
  i -= 1;
  ldv_48023: 
#line 3054 
  ;
  
#line 3053 
  if (i >= 0) 
#line 3055 
              goto ldv_48022; else 
#line 3058 
                                   goto ldv_48024;
  ldv_48024: 
#line 3059 
  ;
  
#line 3062 
  return temp;
}


#line 3065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void spi_w(struct ksz_hw *hw, u16 data)
{
  int i;
  
#line 3069 
  i = 15;
  
#line 3069 
  goto ldv_48031;
  ldv_48030: 
#line 3070 
  ;
  
#line 3070 
  if ((((int)data >> i) & 1) != 0) 
#line 3070 
                                   raise_gpio(hw,(unsigned char)4); else 
                                                                    
#line 3071 
                                                                    drop_gpio(hw,(unsigned char)4);
  
#line 3072 
  eeprom_clk(hw);
  
#line 3069 
  i -= 1;
  ldv_48031: 
#line 3070 
  ;
  
#line 3069 
  if (i >= 0) 
#line 3071 
              goto ldv_48030; else 
#line 3074 
                                   goto ldv_48032;
  ldv_48032: 
#line 3075 
  ;
  
#line 3076 
  return;
}


#line 3076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void spi_reg(struct ksz_hw *hw, u8 data, u8 reg)
{
  int i;
  
#line 3081 
  raise_gpio(hw,(unsigned char)4);
  
#line 3082 
  eeprom_clk(hw);
  
#line 3085 
  i = 1;
  
#line 3085 
  goto ldv_48040;
  ldv_48039: 
#line 3086 
  ;
  
#line 3086 
  if ((((int)data >> i) & 1) != 0) 
#line 3086 
                                   raise_gpio(hw,(unsigned char)4); else 
                                                                    
#line 3087 
                                                                    drop_gpio(hw,(unsigned char)4);
  
#line 3088 
  eeprom_clk(hw);
  
#line 3085 
  i -= 1;
  ldv_48040: 
#line 3086 
  ;
  
#line 3085 
  if (i >= 0) 
#line 3087 
              goto ldv_48039; else 
#line 3090 
                                   goto ldv_48041;
  ldv_48041: 
#line 3091 
  ;
  
#line 3092 
  i = 5;
  
#line 3092 
  goto ldv_48043;
  ldv_48042: 
#line 3093 
  ;
  
#line 3093 
  if ((((int)reg >> i) & 1) != 0) 
#line 3093 
                                  raise_gpio(hw,(unsigned char)4); else 
                                                                    
#line 3094 
                                                                    drop_gpio(hw,(unsigned char)4);
  
#line 3095 
  eeprom_clk(hw);
  
#line 3092 
  i -= 1;
  ldv_48043: 
#line 3093 
  ;
  
#line 3092 
  if (i >= 0) 
#line 3094 
              goto ldv_48042; else 
#line 3097 
                                   goto ldv_48044;
  ldv_48044: 
#line 3098 
  ;
  
#line 3099 
  return;
}


#line 3119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u16 eeprom_read(struct ksz_hw *hw, u8 reg)
{
  u16 data;
  
#line 3123 
  raise_gpio(hw,(unsigned char)17);
  
#line 3125 
  spi_reg(hw,(unsigned char)2,(unsigned char)((int)reg));
  
#line 3126 
  data = spi_r(hw);
  
#line 3128 
  drop_gpio(hw,(unsigned char)17);
  
#line 3130 
  return data;
}


#line 3141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void eeprom_write(struct ksz_hw *hw, u8 reg, u16 data)
{
  int timeout;
  u8 tmp_1;
  u8 tmp_4;
  
#line 3145 
  raise_gpio(hw,(unsigned char)17);
  
#line 3148 
  spi_reg(hw,(unsigned char)0,(unsigned char)48);
  
#line 3149 
  drop_gpio(hw,(unsigned char)1);
  
#line 3150 
  __const_udelay(4295UL);
  
#line 3153 
  raise_gpio(hw,(unsigned char)1);
  
#line 3154 
  spi_reg(hw,(unsigned char)3,(unsigned char)((int)reg));
  
#line 3155 
  drop_gpio(hw,(unsigned char)1);
  
#line 3156 
  __const_udelay(4295UL);
  
#line 3159 
  raise_gpio(hw,(unsigned char)1);
  
#line 3160 
  timeout = 8;
  
#line 3161 
  if (1) 
#line 3161 
         __const_udelay(8590000UL);
  else {
    
#line 3161 
    unsigned long __ms = 2UL;
    {
      unsigned long tmp;
      
#line 3161 
      goto ldv_48058;
      ldv_48057: 
#line 3162 
      ;
      
#line 3161 
      __const_udelay(4295000UL);
      ldv_48058: 
#line 3163 
      ;
      
#line 3161 
      tmp = __ms;
      
#line 3161 
      __ms -= 1UL;
      
#line 3161 
      ;
      
#line 3161 
      if (tmp != 0UL) 
#line 3163 
                      goto ldv_48057; else 
#line 3166 
                                           goto ldv_48059;
      ldv_48059: 
#line 3167 
      ;
    }
  }
  ldv_48064: 
#line 3170 
  ;
  
#line 3163 
  if (1) 
#line 3163 
         __const_udelay(4295000UL);
  else {
    
#line 3163 
    unsigned long __ms_0 = 1UL;
    {
      unsigned long tmp_0;
      
#line 3163 
      goto ldv_48062;
      ldv_48061: 
#line 3164 
      ;
      
#line 3163 
      __const_udelay(4295000UL);
      ldv_48062: 
#line 3165 
      ;
      
#line 3163 
      tmp_0 = __ms_0;
      
#line 3163 
      __ms_0 -= 1UL;
      
#line 3163 
      ;
      
#line 3163 
      if (tmp_0 != 0UL) 
#line 3165 
                        goto ldv_48061; else 
#line 3168 
                                             goto ldv_48063;
      ldv_48063: 
#line 3169 
      ;
    }
  }
  
#line 3164 
  tmp_1 = state_gpio(hw,(unsigned char)8);
  
#line 3164 
  if ((unsigned int)tmp_1 == 0U) {
    
#line 3164 
    timeout -= 1;
    
#line 3164 
    if (timeout != 0) 
#line 3166 
                      goto ldv_48064; else 
#line 3169 
                                           goto ldv_48065;
  }
  else 
#line 3169 
       goto ldv_48065;
  ldv_48065: 
#line 3170 
  ;
  
#line 3165 
  drop_gpio(hw,(unsigned char)1);
  
#line 3166 
  __const_udelay(4295UL);
  
#line 3169 
  raise_gpio(hw,(unsigned char)1);
  
#line 3170 
  spi_reg(hw,(unsigned char)1,(unsigned char)((int)reg));
  
#line 3171 
  spi_w(hw,(unsigned short)((int)data));
  
#line 3172 
  drop_gpio(hw,(unsigned char)1);
  
#line 3173 
  __const_udelay(4295UL);
  
#line 3176 
  raise_gpio(hw,(unsigned char)1);
  
#line 3177 
  timeout = 8;
  
#line 3178 
  if (1) 
#line 3178 
         __const_udelay(8590000UL);
  else {
    
#line 3178 
    unsigned long __ms_1 = 2UL;
    {
      unsigned long tmp_2;
      
#line 3178 
      goto ldv_48068;
      ldv_48067: 
#line 3179 
      ;
      
#line 3178 
      __const_udelay(4295000UL);
      ldv_48068: 
#line 3180 
      ;
      
#line 3178 
      tmp_2 = __ms_1;
      
#line 3178 
      __ms_1 -= 1UL;
      
#line 3178 
      ;
      
#line 3178 
      if (tmp_2 != 0UL) 
#line 3180 
                        goto ldv_48067; else 
#line 3183 
                                             goto ldv_48069;
      ldv_48069: 
#line 3184 
      ;
    }
  }
  ldv_48074: 
#line 3187 
  ;
  
#line 3180 
  if (1) 
#line 3180 
         __const_udelay(4295000UL);
  else {
    
#line 3180 
    unsigned long __ms_2 = 1UL;
    {
      unsigned long tmp_3;
      
#line 3180 
      goto ldv_48072;
      ldv_48071: 
#line 3181 
      ;
      
#line 3180 
      __const_udelay(4295000UL);
      ldv_48072: 
#line 3182 
      ;
      
#line 3180 
      tmp_3 = __ms_2;
      
#line 3180 
      __ms_2 -= 1UL;
      
#line 3180 
      ;
      
#line 3180 
      if (tmp_3 != 0UL) 
#line 3182 
                        goto ldv_48071; else 
#line 3185 
                                             goto ldv_48073;
      ldv_48073: 
#line 3186 
      ;
    }
  }
  
#line 3181 
  tmp_4 = state_gpio(hw,(unsigned char)8);
  
#line 3181 
  if ((unsigned int)tmp_4 == 0U) {
    
#line 3181 
    timeout -= 1;
    
#line 3181 
    if (timeout != 0) 
#line 3183 
                      goto ldv_48074; else 
#line 3186 
                                           goto ldv_48075;
  }
  else 
#line 3186 
       goto ldv_48075;
  ldv_48075: 
#line 3187 
  ;
  
#line 3182 
  drop_gpio(hw,(unsigned char)1);
  
#line 3183 
  __const_udelay(4295UL);
  
#line 3186 
  raise_gpio(hw,(unsigned char)1);
  
#line 3187 
  spi_reg(hw,(unsigned char)0,(unsigned char)0);
  
#line 3189 
  drop_gpio(hw,(unsigned char)17);
  
#line 3190 
  return;
}


#line 3196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u16 advertised_flow_ctrl(struct ksz_port *port, u16 ctrl)
{
  
#line 3198 
  ctrl = (unsigned short)((unsigned int)ctrl & 65519U);
  
#line 3199 
  switch ((int)port->flow_ctrl) {
    case 1: 
#line 3200 
    ;
    
#line 3201 
    ctrl = (unsigned short)((unsigned int)ctrl | 16U);
    
#line 3202 
    goto ldv_48081;
    case 2: 
#line 3204 
    ;
    case 3: 
#line 3205 
    ;
    default: 
#line 3206 
    ;
    
#line 3207 
    goto ldv_48081;
  }
  ldv_48081: 
#line 3209 
  ;
  
#line 3209 
  return ctrl;
}


#line 3212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void set_flow_ctrl(struct ksz_hw *hw, int rx, int tx)
{
  u32 rx_cfg;
  u32 tx_cfg;
  
#line 3217 
  rx_cfg = hw->rx_cfg;
  
#line 3218 
  tx_cfg = hw->tx_cfg;
  
#line 3219 
  if (rx != 0) 
#line 3220 
               hw->rx_cfg |= 512U; else 
#line 3222 
                                        hw->rx_cfg &= 4294966783U;
  
#line 3223 
  if (tx != 0) 
#line 3224 
               hw->tx_cfg |= 512U; else 
#line 3226 
                                        hw->tx_cfg &= 4294966783U;
  
#line 3227 
  if ((unsigned int)hw->enabled != 0U) {
    
#line 3228 
    if (hw->rx_cfg != rx_cfg) 
#line 3229 
                              writel(hw->rx_cfg,(void volatile *)(hw->io + 4U)); else ;
    
#line 3230 
    if (hw->tx_cfg != tx_cfg) 
#line 3231 
                              writel(hw->tx_cfg,(void volatile *)hw->io); else ;
  }
  else ;
  
#line 3233 
  return;
}


#line 3235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void determine_flow_ctrl(struct ksz_hw *hw, struct ksz_port *port, u16 local, u16 remote)
{
  int rx;
  int tx;
  
#line 3241 
  if ((hw->overrides & 1U) != 0U) 
#line 3242 
                                  goto return_label; else ;
  
#line 3244 
  tx = 0;
  
#line 3244 
  rx = tx;
  
#line 3245 
  if ((unsigned int)port->force_link != 0U) {
    
#line 3246 
    tx = 1;
    
#line 3246 
    rx = tx;
  }
  else ;
  
#line 3247 
  if (((int)remote & 1024) != 0) {
    
#line 3248 
    if (((int)local & 1024) != 0) {
      
#line 3249 
      tx = 1;
      
#line 3249 
      rx = tx;
    }
    else 
      
#line 3250 
      if (((int)remote & 2048) != 0 && ((int)local & 3072) == 2048) 
#line 3253 
                                                                    tx = 1; else ;
  }
  else 
    
#line 3255 
    if (((int)remote & 2048) != 0) {
      
#line 3256 
      if (((int)local & 3072) == 3072) 
#line 3257 
                                       rx = 1; else ;
    }
    else ;
  
#line 3259 
  if (hw->ksz_switch == (struct ksz_switch *)0) 
#line 3260 
                                                set_flow_ctrl(hw,rx,tx); else ;
  return_label: 
#line 3261 
                return;
}


#line 3263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void port_cfg_change(struct ksz_hw *hw, struct ksz_port *port, struct ksz_port_info *info, u16 link_status)
{
  
#line 3266 
  if ((hw->features & 4U) != 0U && (hw->overrides & 1U) == 0U) {
    
#line 3268 
    u32 cfg = hw->tx_cfg;
    
#line 3271 
    if ((unsigned int)info->duplex == 1U) 
#line 3272 
                                          hw->tx_cfg &= 4294966783U; else ;
    
#line 3273 
    if ((unsigned int)hw->enabled != 0U && hw->tx_cfg != cfg) 
#line 3274 
                                                              writel(hw->tx_cfg,(void volatile *)hw->io); else ;
  }
  else ;
  
#line 3276 
  return;
}


#line 3285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_get_link_speed(struct ksz_port *port)
{
  uint interrupt;
  struct ksz_port_info *info;
  u16 data;
  u16 status;
  u8 local;
  u8 remote;
  int i;
  int p;
  
#line 3289 
  struct ksz_port_info *linked = (struct ksz_port_info *)0;
  
#line 3290 
  struct ksz_hw *hw = port->hw;
  
#line 3297 
  int change = 0;
  
#line 3299 
  interrupt = hw_block_intr(hw);
  
#line 3301 
  i = 0;
  
#line 3301 
  p = port->first_port;
  
#line 3301 
  goto ldv_48123;
  ldv_48122: 
#line 3302 
  ;
  
#line 3302 
  info = & hw->port_info[p];
  
#line 3303 
  port_r16(hw,p,18,& data);
  
#line 3304 
  port_r16(hw,p,20,& status);
  
#line 3310 
  remote = (unsigned char)((unsigned int)((unsigned char)status) & 96U);
  
#line 3312 
  local = (unsigned char)data;
  
#line 3315 
  if ((int)info->advertised == (int)local && (int)info->partner == (int)remote) 
    
#line 3316 
    goto ldv_48121; else ;
  
#line 3318 
  info->advertised = local;
  
#line 3319 
  info->partner = remote;
  
#line 3320 
  if (((int)status & 32) != 0) {
    
#line 3323 
    if (linked == (struct ksz_port_info *)0) 
#line 3324 
                                             linked = info; else ;
    
#line 3326 
    info->tx_rate = 100000U;
    
#line 3327 
    if (((int)status & 1024) != 0) 
#line 3328 
                                   info->tx_rate = 1000000U; else ;
    
#line 3330 
    info->duplex = (unsigned char)1U;
    
#line 3331 
    if (((int)status & 512) != 0) 
#line 3332 
                                  info->duplex = (unsigned char)2U; else ;
    
#line 3334 
    if (info->state != 0U) {
      
#line 3335 
      hw_r_phy(hw,p,(unsigned short)8,& data);
      
#line 3337 
      hw_r_phy(hw,p,(unsigned short)10,& status);
      
#line 3339 
      determine_flow_ctrl(hw,port,(unsigned short)((int)data),(unsigned short)((int)status));
      
#line 3340 
      if (hw->ksz_switch != (struct ksz_switch *)0) 
#line 3341 
                                                    port_cfg_back_pressure(hw,p,(unsigned int)info->duplex == 1U); else ;
      
#line 3344 
      change = (1 << i) | change;
      
#line 3345 
      port_cfg_change(hw,port,info,(unsigned short)((int)status));
    }
    else ;
    
#line 3347 
    info->state = 0U;
  }
  else {
    
#line 3349 
    if (info->state != 1U) {
      
#line 3350 
      change = (1 << i) | change;
      
#line 3353 
      hw->port_mib[p].link_down = (unsigned char)1U;
    }
    else ;
    
#line 3355 
    info->state = 1U;
  }
  
#line 3357 
  hw->port_mib[p].state = (unsigned char)info->state;
  ldv_48121: 
#line 3358 
  ;
  
#line 3301 
  i += 1;
  
#line 3301 
  p += 1;
  ldv_48123: 
#line 3302 
  ;
  
#line 3301 
  if (port->port_cnt > i) 
#line 3303 
                          goto ldv_48122; else 
#line 3306 
                                               goto ldv_48124;
  ldv_48124: 
#line 3307 
  ;
  
#line 3360 
  if (linked != (struct ksz_port_info *)0 && (port->linked)->state == 1U) 
    
#line 3361 
    port->linked = linked; else ;
  
#line 3363 
  hw_restore_intr(hw,interrupt);
  
#line 3364 
  return;
}


#line 3374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_set_link_speed(struct ksz_port *port)
{
  struct ksz_port_info *info;
  u16 data;
  u16 cfg;
  u8 status;
  int i;
  int p;
  
#line 3377 
  struct ksz_hw *hw = port->hw;
  
#line 3384 
  i = 0;
  
#line 3384 
  p = port->first_port;
  
#line 3384 
  goto ldv_48136;
  ldv_48135: 
#line 3385 
  ;
  
#line 3385 
  info = & hw->port_info[p];
  
#line 3387 
  port_r16(hw,p,18,& data);
  
#line 3388 
  port_r8(hw,p,20,& status);
  
#line 3390 
  cfg = (unsigned short)0U;
  
#line 3391 
  if (((int)status & 32) != 0) 
#line 3392 
                               cfg = data; else ;
  
#line 3394 
  data = (unsigned short)((unsigned int)data | 128U);
  
#line 3395 
  data = advertised_flow_ctrl(port,(unsigned short)((int)data));
  
#line 3397 
  data = (unsigned short)((unsigned int)data | 15U);
  
#line 3401 
  if ((unsigned int)port->speed != 0U || (unsigned int)port->duplex != 0U) {
    
#line 3402 
    if ((unsigned int)port->speed == 10U) 
#line 3403 
                                          data = (unsigned short)((unsigned int)data & 65523U);
    else 
      
#line 3405 
      if ((unsigned int)port->speed == 100U) 
#line 3406 
                                             data = (unsigned short)((unsigned int)data & 65532U); else ;
    
#line 3408 
    if ((unsigned int)port->duplex == 1U) 
#line 3409 
                                          data = (unsigned short)((unsigned int)data & 65525U);
    else 
      
#line 3411 
      if ((unsigned int)port->duplex == 2U) 
#line 3412 
                                            data = (unsigned short)((unsigned int)data & 65530U); else ;
  }
  else ;
  
#line 3415 
  if ((int)data != (int)cfg) {
    
#line 3416 
    data = (unsigned short)((unsigned int)data | 8192U);
    
#line 3417 
    port_w16(hw,p,18,(unsigned short)((int)data));
  }
  else ;
  
#line 3384 
  i += 1;
  
#line 3384 
  p += 1;
  ldv_48136: 
#line 3385 
  ;
  
#line 3384 
  if (port->port_cnt > i) 
#line 3386 
                          goto ldv_48135; else 
#line 3389 
                                               goto ldv_48137;
  ldv_48137: 
#line 3390 
  ;
  
#line 3391 
  return;
}


#line 3428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_force_link_speed(struct ksz_port *port)
{
  u16 data;
  int i;
  int phy;
  int p;
  
#line 3430 
  struct ksz_hw *hw = port->hw;
  
#line 3436 
  i = 0;
  
#line 3436 
  p = port->first_port;
  
#line 3436 
  goto ldv_48147;
  ldv_48146: 
#line 3437 
  ;
  
#line 3437 
  phy = (p + 77) * 16;
  
#line 3438 
  hw_r_phy_ctrl(hw,phy,& data);
  
#line 3440 
  data = (unsigned short)((unsigned int)data & 61439U);
  
#line 3442 
  if ((unsigned int)port->speed == 10U) 
#line 3443 
                                        data = (unsigned short)((unsigned int)data & 57343U);
  else 
    
#line 3444 
    if ((unsigned int)port->speed == 100U) 
#line 3445 
                                           data = (unsigned short)((unsigned int)data | 8192U); else ;
  
#line 3446 
  if ((unsigned int)port->duplex == 1U) 
#line 3447 
                                        data = (unsigned short)((unsigned int)data & 65279U);
  else 
    
#line 3448 
    if ((unsigned int)port->duplex == 2U) 
#line 3449 
                                          data = (unsigned short)((unsigned int)data | 256U); else ;
  
#line 3450 
  hw_w_phy_ctrl(hw,phy,(unsigned short)((int)data));
  
#line 3436 
  i += 1;
  
#line 3436 
  p += 1;
  ldv_48147: 
#line 3437 
  ;
  
#line 3436 
  if (port->port_cnt > i) 
#line 3438 
                          goto ldv_48146; else 
#line 3441 
                                               goto ldv_48148;
  ldv_48148: 
#line 3442 
  ;
  
#line 3443 
  return;
}


#line 3454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void port_set_power_saving(struct ksz_port *port, int enable)
{
  int i;
  int p;
  
#line 3456 
  struct ksz_hw *hw = port->hw;
  
#line 3460 
  i = 0;
  
#line 3460 
  p = port->first_port;
  
#line 3460 
  goto ldv_48157;
  ldv_48156: 
#line 3461 
  ;
  
#line 3461 
  port_cfg(hw,p,18,(unsigned short)2048,enable);
  
#line 3460 
  i += 1;
  
#line 3460 
  p += 1;
  ldv_48157: 
#line 3461 
  ;
  
#line 3460 
  if (port->port_cnt > i) 
#line 3462 
                          goto ldv_48156; else 
#line 3465 
                                               goto ldv_48158;
  ldv_48158: 
#line 3466 
  ;
  
#line 3467 
  return;
}


#line 3477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int hw_chk_wol_pme_status(struct ksz_hw *hw)
{
  int __retres;
  struct dev_info *tmp;
  u16 data;
  {
    
#line 3479 
    struct ksz_hw const *__mptr = (struct ksz_hw const *)hw;
    
#line 3479 
    tmp = (struct dev_info *)__mptr + 18446744073709551600U;
  }
  
#line 3479 
  struct dev_info *hw_priv = tmp;
  
#line 3480 
  struct pci_dev *pdev = hw_priv->pdev;
  
#line 3483 
  if ((unsigned int)pdev->pm_cap == 0U) {
    
#line 3484 
    __retres = 0;
    
#line 3484 
    goto return_label;
  }
  else ;
  
#line 3485 
  pci_read_config_word((struct pci_dev const *)pdev,(int)pdev->pm_cap + 4,& data);
  
#line 3486 
  __retres = (int)data < 0;
  return_label: 
#line 3486 
                return __retres;
}


#line 3495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_clr_wol_pme_status(struct ksz_hw *hw)
{
  struct dev_info *tmp;
  u16 data;
  {
    
#line 3497 
    struct ksz_hw const *__mptr = (struct ksz_hw const *)hw;
    
#line 3497 
    tmp = (struct dev_info *)__mptr + 18446744073709551600U;
  }
  
#line 3497 
  struct dev_info *hw_priv = tmp;
  
#line 3498 
  struct pci_dev *pdev = hw_priv->pdev;
  
#line 3501 
  if ((unsigned int)pdev->pm_cap == 0U) 
#line 3502 
                                        goto return_label; else ;
  
#line 3505 
  pci_read_config_word((struct pci_dev const *)pdev,(int)pdev->pm_cap + 4,& data);
  
#line 3506 
  data = (unsigned short)((unsigned int)data | 32768U);
  
#line 3507 
  pci_write_config_word((struct pci_dev const *)pdev,(int)pdev->pm_cap + 4,(unsigned short)((int)data));
  return_label: 
#line 3508 
                return;
}


#line 3517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_cfg_wol_pme(struct ksz_hw *hw, int set)
{
  struct dev_info *tmp;
  u16 data;
  {
    
#line 3519 
    struct ksz_hw const *__mptr = (struct ksz_hw const *)hw;
    
#line 3519 
    tmp = (struct dev_info *)__mptr + 18446744073709551600U;
  }
  
#line 3519 
  struct dev_info *hw_priv = tmp;
  
#line 3520 
  struct pci_dev *pdev = hw_priv->pdev;
  
#line 3523 
  if ((unsigned int)pdev->pm_cap == 0U) 
#line 3524 
                                        goto return_label; else ;
  
#line 3525 
  pci_read_config_word((struct pci_dev const *)pdev,(int)pdev->pm_cap + 4,& data);
  
#line 3526 
  data = (unsigned short)((unsigned int)data & 65532U);
  
#line 3527 
  if (set != 0) 
#line 3528 
                data = (unsigned short)((unsigned int)data | 259U); else 
                                                                    
#line 3530 
                                                                    data = (unsigned short)((unsigned int)data & 65279U);
  
#line 3531 
  pci_write_config_word((struct pci_dev const *)pdev,(int)pdev->pm_cap + 4,(unsigned short)((int)data));
  return_label: 
#line 3532 
                return;
}


#line 3542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_cfg_wol(struct ksz_hw *hw, u16 frame, int set)
{
  u16 data;
  
#line 3546 
  data = readw((void const volatile *)(hw->io + 538U));
  
#line 3547 
  if (set != 0) 
#line 3548 
                data = (unsigned short)((int)data | (int)frame); else 
                                                                   
#line 3550 
                                                                   data = (unsigned short)(~ ((int)frame) & (int)data);
  
#line 3551 
  writew((unsigned short)((int)data),(void volatile *)(hw->io + 538U));
  
#line 3552 
  return;
}


#line 3565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_wol_frame(struct ksz_hw *hw, int i, uint mask_size, u8 const *mask, uint frame_size, u8 const *pattern)
{
  int bits;
  int from;
  int len;
  int to;
  u32 crc;
  u8 data[64U];
  u32 tmp_4;
  
#line 3574 
  u8 val = (unsigned char)0U;
  
#line 3576 
  if (mask_size * 8U < frame_size) 
#line 3577 
                                   frame_size = mask_size * 8U; else ;
  
#line 3578 
  if (frame_size > 64U) 
#line 3579 
                        frame_size = 64U; else ;
  
#line 3581 
  i *= 16;
  
#line 3582 
  writel(0U,(void volatile *)(hw->io + ((unsigned int)i + 548U)));
  
#line 3583 
  writel(0U,(void volatile *)(hw->io + ((unsigned int)i + 552U)));
  
#line 3585 
  to = 0;
  
#line 3585 
  from = to;
  
#line 3585 
  len = from;
  
#line 3585 
  bits = len;
  ldv_48205: 
#line 3586 
  ;
  
#line 3587 
  if (bits != 0) {
    
#line 3588 
    if (((int)val & 1) != 0) {
      int tmp;
      
#line 3589 
      tmp = to;
      
#line 3589 
      to += 1;
      
#line 3589 
      data[tmp] = *(pattern + from);
    }
    else ;
    
#line 3590 
    val = (unsigned char)((int)val >> 1);
    
#line 3591 
    from += 1;
    
#line 3592 
    bits -= 1;
  }
  else {
    
#line 3594 
    val = *(mask + len);
    
#line 3595 
    writeb((unsigned char)((int)val),(void volatile *)(hw->io + ((unsigned int)(i + len) + 548U)));
    
#line 3597 
    len += 1;
    
#line 3598 
    if ((unsigned int)val != 0U) 
#line 3599 
                                 bits = 8; else 
#line 3601 
                                                from += 8;
  }
  
#line 3603 
  if (from < (int)frame_size) 
#line 3605 
                              goto ldv_48205; else 
#line 3608 
                                                   goto ldv_48206;
  ldv_48206: 
#line 3609 
  ;
  
#line 3604 
  if ((unsigned int)val != 0U) {
    
#line 3605 
    bits = (int)*(mask + ((unsigned long)len + 18446744073709551615U));
    
#line 3606 
    val = (unsigned char)((int)val << from % 8);
    
#line 3607 
    bits = ~ ((int)val) & bits;
    
#line 3608 
    writeb((unsigned char)((int)((unsigned char)bits)),(void volatile *)(hw->io + ((unsigned int)(i + len) + 547U)));
  }
  else ;
  {
    u32 tmp_3;
    
#line 3611 
    u32 __x = crc32_le(4294967295U,(unsigned char const *)(& data),(unsigned long)to);
    
#line 3611 
    if (0 != 0) {
      u32 tmp_1;
      {
        
#line 3611 
        u32 __x_0 = __x_0;
        
#line 3611 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 3611 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 3611 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 3611 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 3611 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 3611 
        tmp_1 = __x_0;
      }
      
#line 3611 
      tmp_3 = tmp_1;
    }
    else 
#line 3611 
         tmp_3 = __bitrev32(__x);
    
#line 3611 
    tmp_4 = tmp_3;
  }
  
#line 3611 
  crc = tmp_4;
  
#line 3612 
  writel(crc,(void volatile *)(hw->io + ((unsigned int)i + 544U)));
  
#line 3613 
  return;
}


#line 3622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_add_wol_arp(struct ksz_hw *hw, u8 const *ip_addr)
{
  
#line 3624 
  u8 const mask[6U] = {(unsigned char)63U, (unsigned char)240U, (unsigned char)63U, (unsigned char)0U, (unsigned char)192U, (unsigned char)3U};
  
#line 3625 
  u8 pattern[42U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)8U, (unsigned char)6U, (unsigned char)0U, (unsigned char)1U, (unsigned char)8U, (unsigned char)0U, (unsigned char)6U, (unsigned char)4U, (unsigned char)0U, (unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
  
#line 3635 
  memcpy((void *)(& pattern[38]),(void const *)ip_addr,4UL);
  
#line 3636 
  hw_set_wol_frame(hw,3,6U,(u8 const *)(& mask),42U,(u8 const *)(& pattern));
  
#line 3637 
  return;
}


#line 3645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_add_wol_bcast(struct ksz_hw *hw)
{
  
#line 3647 
  u8 const mask[1U] = {(unsigned char)63U};
  
#line 3648 
  u8 const pattern[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
  
#line 3650 
  hw_set_wol_frame(hw,2,1U,(u8 const *)(& mask),6U,(u8 const *)(& pattern));
  
#line 3651 
  return;
}


#line 3663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_add_wol_mcast(struct ksz_hw *hw)
{
  
#line 3665 
  u8 const mask[1U] = {(unsigned char)63U};
  
#line 3666 
  u8 pattern[6U] = {(unsigned char)51U, (unsigned char)51U, (unsigned char)255U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
  
#line 3668 
  memcpy((void *)(& pattern[3]),(void const *)(& hw->override_addr[3]),3UL);
  
#line 3669 
  hw_set_wol_frame(hw,1,1U,(u8 const *)(& mask),6U,(u8 const *)(& pattern));
  
#line 3670 
  return;
}


#line 3681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_add_wol_ucast(struct ksz_hw *hw)
{
  
#line 3683 
  u8 const mask[1U] = {(unsigned char)63U};
  
#line 3685 
  hw_set_wol_frame(hw,0,1U,(u8 const *)(& mask),6U,(u8 const *)(& hw->override_addr));
  
#line 3686 
  return;
}


#line 3696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_enable_wol(struct ksz_hw *hw, u32 wol_enable, u8 const *net_addr)
{
  
#line 3698 
  hw_cfg_wol(hw,(unsigned short)128,(int)wol_enable & 32);
  
#line 3699 
  hw_cfg_wol(hw,(unsigned short)1,(int)wol_enable & 2);
  
#line 3700 
  hw_add_wol_ucast(hw);
  
#line 3701 
  hw_cfg_wol(hw,(unsigned short)2,(int)wol_enable & 4);
  
#line 3702 
  hw_add_wol_mcast(hw);
  
#line 3703 
  hw_cfg_wol(hw,(unsigned short)4,(int)wol_enable & 8);
  
#line 3704 
  hw_cfg_wol(hw,(unsigned short)8,(int)wol_enable & 16);
  
#line 3705 
  hw_add_wol_arp(hw,net_addr);
  
#line 3706 
  return;
}


#line 3717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int hw_init(struct ksz_hw *hw)
{
  int __retres;
  u16 data;
  u16 revision;
  
#line 3719 
  int rc = 0;
  
#line 3724 
  writew((unsigned short)0,(void volatile *)(hw->io + 528U));
  
#line 3727 
  data = readw((void const volatile *)(hw->io + 1024U));
  
#line 3729 
  revision = (unsigned short)((unsigned int)((unsigned short)((int)data >> 1)) & 7U);
  
#line 3730 
  data = (unsigned short)((unsigned int)data & 65296U);
  
#line 3731 
  if ((unsigned int)data == 34832U) 
#line 3732 
                                    rc = 1;
  else 
    
#line 3733 
    if ((unsigned int)data == 34816U) 
#line 3734 
                                      rc = 2;
    else {
      
#line 3736 
      __retres = 0;
      
#line 3736 
      goto return_label;
    }
  
#line 3739 
  if ((unsigned int)revision <= 1U) {
    
#line 3740 
    hw->features |= 2U;
    
#line 3741 
    if (rc == 1) 
#line 3742 
                 hw->features |= 4U; else ;
  }
  else ;
  
#line 3744 
  __retres = rc;
  return_label: 
#line 3744 
                return __retres;
}


#line 3753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_reset(struct ksz_hw *hw)
{
  
#line 3755 
  writew((unsigned short)1,(void volatile *)(hw->io + 534U));
  {
    
#line 3758 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp;
      
#line 3758 
      goto ldv_48247;
      ldv_48246: 
#line 3759 
      ;
      
#line 3758 
      __const_udelay(4295000UL);
      ldv_48247: 
#line 3760 
      ;
      
#line 3758 
      tmp = __ms;
      
#line 3758 
      __ms -= 1UL;
      
#line 3758 
      ;
      
#line 3758 
      if (tmp != 0UL) 
#line 3760 
                      goto ldv_48246; else 
#line 3763 
                                           goto ldv_48248;
      ldv_48248: 
#line 3764 
      ;
    }
  }
  
#line 3761 
  writew((unsigned short)0,(void volatile *)(hw->io + 534U));
  
#line 3762 
  return;
}


#line 3770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_setup(struct ksz_hw *hw)
{
  
#line 3783 
  hw->tx_cfg = 134217735U;
  
#line 3787 
  hw->rx_cfg = 134217809U;
  
#line 3789 
  hw->rx_cfg |= 2U;
  
#line 3792 
  hw->rx_cfg |= 196608U;
  
#line 3794 
  if ((unsigned int)hw->all_multi != 0U) 
#line 3795 
                                         hw->rx_cfg |= 32U; else ;
  
#line 3796 
  if ((unsigned int)hw->promiscuous != 0U) 
#line 3797 
                                           hw->rx_cfg |= 4U; else ;
  
#line 3798 
  return;
}


#line 3806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_setup_intr(struct ksz_hw *hw)
{
  
#line 3808 
  hw->intr_mask = 3892314112U;
  
#line 3809 
  return;
}


#line 3811  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_check_desc_num(struct ksz_desc_info *info)
{
  int shift;
  
#line 3815 
  int alloc = info->alloc;
  
#line 3818 
  shift = 0;
  
#line 3819 
  goto ldv_48261;
  ldv_48260: 
#line 3820 
  ;
  
#line 3820 
  shift += 1;
  
#line 3821 
  alloc >>= 1;
  ldv_48261: 
#line 3822 
  ;
  
#line 3819 
  if ((alloc & 1) == 0) 
#line 3821 
                        goto ldv_48260; else 
#line 3824 
                                             goto ldv_48262;
  ldv_48262: 
#line 3825 
  ;
  
#line 3823 
  if (alloc != 1 || shift <= 1) {
    
#line 3824 
    printk("\001");
    
#line 3825 
    goto ldv_48264;
    ldv_48263: 
#line 3826 
    ;
    
#line 3826 
    shift += 1;
    
#line 3827 
    alloc >>= 1;
    ldv_48264: 
#line 3828 
    ;
    
#line 3825 
    if (alloc != 0) 
#line 3827 
                    goto ldv_48263; else 
#line 3830 
                                         goto ldv_48265;
    ldv_48265: 
#line 3831 
    ;
    
#line 3829 
    if (shift <= 1) 
#line 3830 
                    shift = 2; else ;
    
#line 3831 
    alloc = 1 << shift;
    
#line 3832 
    info->alloc = alloc;
  }
  else ;
  
#line 3834 
  info->mask = info->alloc + -1;
  
#line 3835 
  return;
}


#line 3837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_init_desc(struct ksz_desc_info *desc_info, int transmit)
{
  int i;
  struct ksz_hw_desc *tmp;
  struct ksz_desc *tmp_0;
  int tmp_1;
  
#line 3840 
  u32 phys = desc_info->ring_phys;
  
#line 3841 
  struct ksz_hw_desc *desc = desc_info->ring_virt;
  
#line 3842 
  struct ksz_desc *cur = desc_info->ring;
  
#line 3843 
  struct ksz_desc *previous = (struct ksz_desc *)0;
  
#line 3845 
  i = 0;
  
#line 3845 
  goto ldv_48276;
  ldv_48275: 
#line 3846 
  ;
  
#line 3846 
  tmp = desc;
  
#line 3846 
  desc += 1;
  
#line 3846 
  cur->phw = tmp;
  
#line 3847 
  phys = (unsigned int)desc_info->size + phys;
  
#line 3848 
  tmp_0 = cur;
  
#line 3848 
  cur += 1;
  
#line 3848 
  previous = tmp_0;
  
#line 3849 
  (previous->phw)->next = phys;
  
#line 3845 
  i += 1;
  ldv_48276: 
#line 3846 
  ;
  
#line 3845 
  if (desc_info->alloc > i) 
#line 3847 
                            goto ldv_48275; else 
#line 3850 
                                                 goto ldv_48277;
  ldv_48277: 
#line 3851 
  ;
  
#line 3851 
  (previous->phw)->next = desc_info->ring_phys;
  
#line 3852 
  previous->sw.buf.rx.end_of_ring = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 3853 
  (previous->phw)->buf.data = previous->sw.buf.data;
  
#line 3855 
  desc_info->avail = desc_info->alloc;
  
#line 3856 
  tmp_1 = 0;
  
#line 3856 
  desc_info->next = tmp_1;
  
#line 3856 
  desc_info->last = tmp_1;
  
#line 3858 
  desc_info->cur = desc_info->ring;
  
#line 3859 
  return;
}


#line 3869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_desc_base(struct ksz_hw *hw, u32 tx_addr, u32 rx_addr)
{
  
#line 3872 
  writel(tx_addr,(void volatile *)(hw->io + 16U));
  
#line 3873 
  writel(rx_addr,(void volatile *)(hw->io + 20U));
  
#line 3874 
  return;
}


#line 3876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_reset_pkts(struct ksz_desc_info *info)
{
  int tmp;
  
#line 3878 
  info->cur = info->ring;
  
#line 3879 
  info->avail = info->alloc;
  
#line 3880 
  tmp = 0;
  
#line 3880 
  info->next = tmp;
  
#line 3880 
  info->last = tmp;
  
#line 3881 
  return;
}


#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void hw_resume_rx(struct ksz_hw *hw)
{
  
#line 3885 
  writel(1U,(void volatile *)(hw->io + 12U));
  
#line 3886 
  return;
}


#line 3894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_start_rx(struct ksz_hw *hw)
{
  
#line 3896 
  writel(hw->rx_cfg,(void volatile *)(hw->io + 4U));
  
#line 3899 
  hw->intr_mask |= 33554432U;
  
#line 3901 
  writel(1U,(void volatile *)(hw->io + 12U));
  
#line 3902 
  hw_ack_intr(hw,33554432U);
  
#line 3903 
  hw->rx_stop = (u8)((int)hw->rx_stop + 1);
  
#line 3906 
  if ((unsigned int)hw->rx_stop == 0U) 
#line 3907 
                                       hw->rx_stop = (unsigned char)2U; else ;
  
#line 3908 
  return;
}


#line 3916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_stop_rx(struct ksz_hw *hw)
{
  
#line 3918 
  hw->rx_stop = (unsigned char)0U;
  
#line 3919 
  hw_turn_off_intr(hw,33554432U);
  
#line 3920 
  writel(hw->rx_cfg & 4294967294U,(void volatile *)(hw->io + 4U));
  
#line 3921 
  return;
}


#line 3929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_start_tx(struct ksz_hw *hw)
{
  
#line 3931 
  writel(hw->tx_cfg,(void volatile *)hw->io);
  
#line 3932 
  return;
}


#line 3940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_stop_tx(struct ksz_hw *hw)
{
  
#line 3942 
  writel(hw->tx_cfg & 4294967294U,(void volatile *)hw->io);
  
#line 3943 
  return;
}


#line 3951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_disable(struct ksz_hw *hw)
{
  
#line 3953 
  hw_stop_rx(hw);
  
#line 3954 
  hw_stop_tx(hw);
  
#line 3955 
  hw->enabled = (unsigned char)0U;
  
#line 3956 
  return;
}


#line 3964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_enable(struct ksz_hw *hw)
{
  
#line 3966 
  hw_start_tx(hw);
  
#line 3967 
  hw_start_rx(hw);
  
#line 3968 
  hw->enabled = (unsigned char)1U;
  
#line 3969 
  return;
}


#line 3981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int hw_alloc_pkt(struct ksz_hw *hw, int length, int physical)
{
  int __retres;
  
#line 3984 
  if (hw->tx_desc_info.avail <= 1) {
    
#line 3985 
    __retres = 0;
    
#line 3985 
    goto return_label;
  }
  else ;
  
#line 3988 
  get_tx_pkt(& hw->tx_desc_info,& hw->tx_desc_info.cur);
  
#line 3989 
  (hw->tx_desc_info.cur)->sw.buf.tx.first_seg = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 3992 
  hw->tx_int_cnt += 1;
  
#line 3993 
  hw->tx_size += length;
  
#line 3996 
  if (hw->tx_size > 51999) 
#line 3997 
                           hw->tx_int_cnt = hw->tx_int_mask + 1; else ;
  
#line 3999 
  if (hw->tx_desc_info.avail < physical) {
    
#line 4000 
    __retres = 1;
    
#line 4000 
    goto return_label;
  }
  else ;
  
#line 4002 
  __retres = hw->tx_desc_info.avail;
  return_label: 
#line 4002 
                return __retres;
}


#line 4011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_send_pkt(struct ksz_hw *hw)
{
  
#line 4013 
  struct ksz_desc *cur = hw->tx_desc_info.cur;
  
#line 4015 
  cur->sw.buf.tx.last_seg = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 4018 
  if (hw->tx_int_cnt > hw->tx_int_mask) {
    
#line 4019 
    cur->sw.buf.tx.intr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 4020 
    hw->tx_int_cnt = 0;
    
#line 4021 
    hw->tx_size = 0;
  }
  else ;
  
#line 4025 
  cur->sw.buf.tx.dest_port = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))hw->dst_ports;
  
#line 4027 
  release_desc(cur);
  
#line 4029 
  writel(0U,(void volatile *)(hw->io + 8U));
  
#line 4030 
  return;
}


#line 4032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int empty_addr(u8 *addr)
{
  int __retres;
  
#line 4034 
  u32 *addr1 = (u32 *)addr;
  
#line 4035 
  u16 *addr2 = (u16 *)(addr + 4U);
  
#line 4037 
  __retres = (*addr1 == 0U && (unsigned int)*addr2 == 0U) != 0;
  
#line 4037 
  return __retres;
}


#line 4047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_addr(struct ksz_hw *hw)
{
  int i;
  
#line 4051 
  i = 0;
  
#line 4051 
  goto ldv_48326;
  ldv_48325: 
#line 4052 
  ;
  
#line 4052 
  writeb((unsigned char)((int)hw->override_addr[5 - i]),(void volatile *)(hw->io + ((unsigned int)i + 512U)));
  
#line 4051 
  i += 1;
  ldv_48326: 
#line 4052 
  ;
  
#line 4051 
  if (i <= 5) 
#line 4053 
              goto ldv_48325; else 
#line 4056 
                                   goto ldv_48327;
  ldv_48327: 
#line 4057 
  ;
  
#line 4055 
  sw_set_addr(hw,(u8 *)(& hw->override_addr));
  
#line 4056 
  return;
}


#line 4064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_read_addr(struct ksz_hw *hw)
{
  int i;
  
#line 4068 
  i = 0;
  
#line 4068 
  goto ldv_48333;
  ldv_48332: 
#line 4069 
  ;
  
#line 4069 
  hw->perm_addr[5 - i] = readb((void const volatile *)(hw->io + ((unsigned int)i + 512U)));
  
#line 4068 
  i += 1;
  ldv_48333: 
#line 4069 
  ;
  
#line 4068 
  if (i <= 5) 
#line 4070 
              goto ldv_48332; else 
#line 4073 
                                   goto ldv_48334;
  ldv_48334: 
#line 4074 
  ;
  
#line 4072 
  if ((unsigned int)hw->mac_override == 0U) {
    int tmp;
    
#line 4073 
    memcpy((void *)(& hw->override_addr),(void const *)(& hw->perm_addr),6UL);
    
#line 4074 
    tmp = empty_addr((u8 *)(& hw->override_addr));
    
#line 4074 
    if (tmp != 0) {
      
#line 4075 
      memcpy((void *)(& hw->perm_addr),(void const *)(& DEFAULT_MAC_ADDRESS),6UL);
      
#line 4076 
      memcpy((void *)(& hw->override_addr),(void const *)(& DEFAULT_MAC_ADDRESS),6UL);
      
#line 4078 
      hw->override_addr[5] = (unsigned char)((int)hw->override_addr[5] + (int)((unsigned char)hw->id));
      
#line 4079 
      hw_set_addr(hw);
    }
    else ;
  }
  else ;
  
#line 4082 
  return;
}


#line 4084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_ena_add_addr(struct ksz_hw *hw, int index, u8 *mac_addr)
{
  int i;
  u32 mac_addr_lo;
  u32 mac_addr_hi;
  
#line 4090 
  mac_addr_hi = 0U;
  
#line 4091 
  i = 0;
  
#line 4091 
  goto ldv_48344;
  ldv_48343: 
#line 4092 
  ;
  
#line 4092 
  mac_addr_hi <<= 8;
  
#line 4093 
  mac_addr_hi = (unsigned int)*(mac_addr + i) | mac_addr_hi;
  
#line 4091 
  i += 1;
  ldv_48344: 
#line 4092 
  ;
  
#line 4091 
  if (i <= 1) 
#line 4093 
              goto ldv_48343; else 
#line 4096 
                                   goto ldv_48345;
  ldv_48345: 
#line 4097 
  ;
  
#line 4095 
  mac_addr_hi |= 2147483648U;
  
#line 4096 
  mac_addr_lo = 0U;
  
#line 4097 
  i = 2;
  
#line 4097 
  goto ldv_48347;
  ldv_48346: 
#line 4098 
  ;
  
#line 4098 
  mac_addr_lo <<= 8;
  
#line 4099 
  mac_addr_lo = (unsigned int)*(mac_addr + i) | mac_addr_lo;
  
#line 4097 
  i += 1;
  ldv_48347: 
#line 4098 
  ;
  
#line 4097 
  if (i <= 5) 
#line 4099 
              goto ldv_48346; else 
#line 4102 
                                   goto ldv_48348;
  ldv_48348: 
#line 4103 
  ;
  
#line 4101 
  index *= 8;
  
#line 4103 
  writel(mac_addr_lo,(void volatile *)(hw->io + ((unsigned int)index + 128U)));
  
#line 4104 
  writel(mac_addr_hi,(void volatile *)(hw->io + ((unsigned int)index + 132U)));
  
#line 4105 
  return;
}


#line 4107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_add_addr(struct ksz_hw *hw)
{
  int i;
  int tmp;
  
#line 4111 
  i = 0;
  
#line 4111 
  goto ldv_48354;
  ldv_48353: 
#line 4112 
  ;
  
#line 4112 
  tmp = empty_addr((u8 *)(& hw->address[i]));
  
#line 4112 
  if (tmp != 0) 
#line 4113 
                writel(0U,(void volatile *)(hw->io + ((unsigned int)(i * 8) + 132U))); else 
                                                                    
#line 4116 
                                                                    hw_ena_add_addr(hw,i,(u8 *)(& hw->address[i]));
  
#line 4111 
  i += 1;
  ldv_48354: 
#line 4112 
  ;
  
#line 4111 
  if (i <= 15) 
#line 4113 
               goto ldv_48353; else 
#line 4116 
                                    goto ldv_48355;
  ldv_48355: 
#line 4117 
  ;
  
#line 4118 
  return;
}


#line 4120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int hw_add_addr(struct ksz_hw *hw, u8 *mac_addr)
{
  int __retres;
  int i;
  bool tmp;
  bool tmp_0;
  
#line 4123 
  int j = 16;
  
#line 4125 
  tmp = ether_addr_equal((u8 const *)(& hw->override_addr),(u8 const *)mac_addr);
  
#line 4125 
  if ((int)tmp != 0) {
    
#line 4126 
    __retres = 0;
    
#line 4126 
    goto return_label;
  }
  else ;
  
#line 4127 
  i = 0;
  
#line 4127 
  goto ldv_48363;
  ldv_48362: 
#line 4128 
  ;
  
#line 4128 
  tmp_0 = ether_addr_equal((u8 const *)(& hw->address[i]),(u8 const *)mac_addr);
  
#line 4128 
  if ((int)tmp_0 != 0) {
    
#line 4129 
    __retres = 0;
    
#line 4129 
    goto return_label;
  }
  else ;
  
#line 4130 
  if (j == 16) {
    int tmp_1;
    
#line 4130 
    tmp_1 = empty_addr((u8 *)(& hw->address[i]));
    
#line 4130 
    if (tmp_1 != 0) 
#line 4131 
                    j = i; else ;
  }
  else ;
  
#line 4127 
  i += 1;
  ldv_48363: 
#line 4128 
  ;
  
#line 4127 
  if ((int)hw->addr_list_size > i) 
#line 4129 
                                   goto ldv_48362; else 
#line 4132 
                                                        goto ldv_48364;
  ldv_48364: 
#line 4133 
  ;
  
#line 4133 
  if (j <= 15) {
    
#line 4134 
    memcpy((void *)(& hw->address[j]),(void const *)mac_addr,6UL);
    
#line 4135 
    hw_ena_add_addr(hw,j,(u8 *)(& hw->address[j]));
    
#line 4136 
    __retres = 0;
    
#line 4136 
    goto return_label;
  }
  else ;
  
#line 4138 
  __retres = -1;
  return_label: 
#line 4138 
                return __retres;
}


#line 4141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int hw_del_addr(struct ksz_hw *hw, u8 *mac_addr)
{
  int __retres;
  int i;
  bool tmp;
  
#line 4145 
  i = 0;
  
#line 4145 
  goto ldv_48371;
  ldv_48370: 
#line 4146 
  ;
  
#line 4146 
  tmp = ether_addr_equal((u8 const *)(& hw->address[i]),(u8 const *)mac_addr);
  
#line 4146 
  if ((int)tmp != 0) {
    
#line 4147 
    eth_zero_addr((u8 *)(& hw->address[i]));
    
#line 4148 
    writel(0U,(void volatile *)(hw->io + ((unsigned int)(i * 8) + 132U)));
    
#line 4150 
    __retres = 0;
    
#line 4150 
    goto return_label;
  }
  else ;
  
#line 4145 
  i += 1;
  ldv_48371: 
#line 4146 
  ;
  
#line 4145 
  if ((int)hw->addr_list_size > i) 
#line 4147 
                                   goto ldv_48370; else 
#line 4150 
                                                        goto ldv_48372;
  ldv_48372: 
#line 4151 
  ;
  
#line 4153 
  __retres = -1;
  return_label: 
#line 4153 
                return __retres;
}


#line 4162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_clr_multicast(struct ksz_hw *hw)
{
  int i;
  
#line 4166 
  i = 0;
  
#line 4166 
  goto ldv_48378;
  ldv_48377: 
#line 4167 
  ;
  
#line 4167 
  hw->multi_bits[i] = (unsigned char)0U;
  
#line 4169 
  writeb((unsigned char)0,(void volatile *)(hw->io + ((unsigned int)i + 32U)));
  
#line 4166 
  i += 1;
  ldv_48378: 
#line 4167 
  ;
  
#line 4166 
  if (i <= 7) 
#line 4168 
              goto ldv_48377; else 
#line 4171 
                                   goto ldv_48379;
  ldv_48379: 
#line 4172 
  ;
  
#line 4173 
  return;
}


#line 4180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_grp_addr(struct ksz_hw *hw)
{
  int i;
  int index;
  int position;
  int value;
  u32 tmp_3;
  
#line 4187 
  memset((void *)(& hw->multi_bits),0,8UL);
  
#line 4189 
  i = 0;
  
#line 4189 
  goto ldv_48392;
  ldv_48391: 
#line 4190 
  ;
  {
    u32 tmp_2;
    
#line 4190 
    u32 __x = crc32_le(4294967295U,(unsigned char const *)(& hw->multi_list[i]),6UL);
    
#line 4190 
    if (0 != 0) {
      u32 tmp_0;
      {
        
#line 4190 
        u32 __x_0 = __x_0;
        
#line 4190 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 4190 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 4190 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 4190 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 4190 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 4190 
        tmp_0 = __x_0;
      }
      
#line 4190 
      tmp_2 = tmp_0;
    }
    else 
#line 4190 
         tmp_2 = __bitrev32(__x);
    
#line 4190 
    tmp_3 = tmp_2;
  }
  
#line 4190 
  position = (int)(tmp_3 >> 26) & 63;
  
#line 4191 
  index = position >> 3;
  
#line 4192 
  value = 1 << (position & 7);
  
#line 4193 
  hw->multi_bits[index] = (unsigned char)((int)hw->multi_bits[index] | (int)((unsigned char)value));
  
#line 4189 
  i += 1;
  ldv_48392: 
#line 4190 
  ;
  
#line 4189 
  if ((int)hw->multi_list_size > i) 
#line 4191 
                                    goto ldv_48391; else 
#line 4194 
                                                         goto ldv_48393;
  ldv_48393: 
#line 4195 
  ;
  
#line 4196 
  i = 0;
  
#line 4196 
  goto ldv_48395;
  ldv_48394: 
#line 4197 
  ;
  
#line 4197 
  writeb((unsigned char)((int)hw->multi_bits[i]),(void volatile *)(hw->io + ((unsigned int)i + 32U)));
  
#line 4196 
  i += 1;
  ldv_48395: 
#line 4197 
  ;
  
#line 4196 
  if (i <= 7) 
#line 4198 
              goto ldv_48394; else 
#line 4201 
                                   goto ldv_48396;
  ldv_48396: 
#line 4202 
  ;
  
#line 4203 
  return;
}


#line 4208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_multicast(struct ksz_hw *hw, u8 multicast)
{
  
#line 4211 
  hw_stop_rx(hw);
  
#line 4213 
  if ((unsigned int)multicast != 0U) 
#line 4214 
                                     hw->rx_cfg |= 32U; else 
#line 4216 
                                                             hw->rx_cfg &= 4294967263U;
  
#line 4218 
  if ((unsigned int)hw->enabled != 0U) 
#line 4219 
                                       hw_start_rx(hw); else ;
  
#line 4220 
  return;
}


#line 4229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_set_promiscuous(struct ksz_hw *hw, u8 prom)
{
  
#line 4232 
  hw_stop_rx(hw);
  
#line 4234 
  if ((unsigned int)prom != 0U) 
#line 4235 
                                hw->rx_cfg |= 4U; else 
#line 4237 
                                                       hw->rx_cfg &= 4294967291U;
  
#line 4239 
  if ((unsigned int)hw->enabled != 0U) 
#line 4240 
                                       hw_start_rx(hw); else ;
  
#line 4241 
  return;
}


#line 4250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_enable(struct ksz_hw *hw, int enable)
{
  int port;
  
#line 4254 
  port = 0;
  
#line 4254 
  goto ldv_48411;
  ldv_48410: 
#line 4255 
  ;
  
#line 4255 
  if (hw->dev_count > 1) {
    
#line 4257 
    sw_cfg_port_base_vlan(hw,port,(unsigned char)((int)((unsigned char)((1 << port) | 4))));
    
#line 4259 
    port_set_stp_state(hw,port,0);
  }
  else {
    
#line 4261 
    sw_cfg_port_base_vlan(hw,port,(unsigned char)7);
    
#line 4262 
    port_set_stp_state(hw,port,3);
  }
  
#line 4254 
  port += 1;
  ldv_48411: 
#line 4255 
  ;
  
#line 4254 
  if (port <= 1) 
#line 4256 
                 goto ldv_48410; else 
#line 4259 
                                      goto ldv_48412;
  ldv_48412: 
#line 4260 
  ;
  
#line 4265 
  if (hw->dev_count > 1) 
#line 4266 
                         port_set_stp_state(hw,2,5); else 
#line 4268 
                                                          port_set_stp_state(hw,2,3);
  
#line 4270 
  if (enable != 0) 
#line 4271 
                   enable = 1; else ;
  
#line 4272 
  writew((unsigned short)((int)((unsigned short)enable)),(void volatile *)(hw->io + 1024U));
  
#line 4273 
  return;
}


#line 4281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void sw_setup(struct ksz_hw *hw)
{
  int port;
  int tmp;
  
#line 4285 
  sw_set_global_ctrl(hw);
  
#line 4288 
  sw_init_broad_storm(hw);
  
#line 4289 
  hw_cfg_broad_storm(hw,(unsigned char)10);
  
#line 4290 
  port = 0;
  
#line 4290 
  goto ldv_48418;
  ldv_48417: 
#line 4291 
  ;
  
#line 4291 
  sw_ena_broad_storm(hw,port);
  
#line 4290 
  port += 1;
  ldv_48418: 
#line 4291 
  ;
  
#line 4290 
  if (port <= 1) 
#line 4292 
                 goto ldv_48417; else 
#line 4295 
                                      goto ldv_48419;
  ldv_48419: 
#line 4296 
  ;
  
#line 4293 
  sw_init_prio(hw);
  
#line 4295 
  sw_init_mirror(hw);
  
#line 4297 
  sw_init_prio_rate(hw);
  
#line 4299 
  sw_init_vlan(hw);
  
#line 4301 
  if ((hw->features & 256U) != 0U) 
#line 4302 
                                   sw_init_stp(hw); else ;
  
#line 4303 
  tmp = sw_chk(hw,1026U,(unsigned short)12288);
  
#line 4303 
  if (tmp == 0) 
#line 4305 
                hw->overrides |= 1U; else ;
  
#line 4306 
  sw_enable(hw,1);
  
#line 4307 
  return;
}


#line 4316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_start_timer(struct ksz_timer_info *info, int time)
{
  
#line 4318 
  info->cnt = 0;
  
#line 4319 
  info->timer.expires = (unsigned long)time + jiffies;
  
#line 4320 
  add_timer(& info->timer);
  
#line 4323 
  info->max = -1;
  
#line 4324 
  return;
}


#line 4332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_stop_timer(struct ksz_timer_info *info)
{
  
#line 4334 
  if (info->max != 0) {
    
#line 4335 
    info->max = 0;
    
#line 4336 
    ldv_del_timer_sync_72(& info->timer);
  }
  else ;
  
#line 4338 
  return;
}


#line 4340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_init_timer(struct ksz_timer_info *info, int period, void (*function)(unsigned long ), void *data)
{
  
#line 4343 
  info->max = 0;
  
#line 4344 
  info->period = period;
  {
    struct lock_class_key __key;
    
#line 4345 
    init_timer_key(& info->timer,0U,"((&info->timer))",& __key);
  }
  
#line 4345 
  info->timer.function = function;
  
#line 4345 
  info->timer.data = (unsigned long)data;
  
#line 4346 
  return;
}


#line 4348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_update_timer(struct ksz_timer_info *info)
{
  
#line 4350 
  info->cnt += 1;
  
#line 4351 
  if (info->max > 0) 
    
#line 4352 
    if (info->cnt < info->max) {
      
#line 4353 
      info->timer.expires = (unsigned long)info->period + jiffies;
      
#line 4354 
      add_timer(& info->timer);
    }
    else 
#line 4356 
         info->max = 0;
  else 
    
#line 4357 
    if (info->max < 0) {
      
#line 4358 
      info->timer.expires = (unsigned long)info->period + jiffies;
      
#line 4359 
      add_timer(& info->timer);
    }
    else ;
  
#line 4361 
  return;
}


#line 4373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int ksz_alloc_soft_desc(struct ksz_desc_info *desc_info, int transmit)
{
  int __retres;
  
#line 4375 
  desc_info->ring = (struct ksz_desc *)kzalloc((unsigned long)desc_info->alloc * 48UL,208U);
  
#line 4377 
  if (desc_info->ring == (struct ksz_desc *)0) {
    
#line 4378 
    __retres = 1;
    
#line 4378 
    goto return_label;
  }
  else ;
  
#line 4379 
  hw_init_desc(desc_info,transmit);
  
#line 4380 
  __retres = 0;
  return_label: 
#line 4380 
                return __retres;
}


#line 4392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int ksz_alloc_desc(struct dev_info *adapter)
{
  int __retres;
  int offset;
  int tmp_0;
  int tmp_1;
  
#line 4394 
  struct ksz_hw *hw = & adapter->hw;
  
#line 4398 
  adapter->desc_pool.alloc_size = (unsigned int)((hw->rx_desc_info.size * hw->rx_desc_info.alloc + hw->tx_desc_info.size * hw->tx_desc_info.alloc) + 16);
  
#line 4404 
  adapter->desc_pool.alloc_virt = (u8 *)pci_zalloc_consistent(adapter->pdev,(unsigned long)adapter->desc_pool.alloc_size,& adapter->desc_pool.dma_addr);
  
#line 4407 
  if (adapter->desc_pool.alloc_virt == (u8 *)0U) {
    
#line 4408 
    adapter->desc_pool.alloc_size = 0U;
    
#line 4409 
    __retres = 1;
    
#line 4409 
    goto return_label;
  }
  else ;
  
#line 4413 
  if (((unsigned long)adapter->desc_pool.alloc_virt & 15UL) != 0UL) 
#line 4413 
                                                                    offset = (int)((long)16U - ((long)adapter->desc_pool.alloc_virt & (long)15U)); else 
                                                                    
#line 4413 
                                                                    offset = 0;
  
#line 4416 
  adapter->desc_pool.virt = adapter->desc_pool.alloc_virt + offset;
  
#line 4417 
  adapter->desc_pool.phys = (unsigned int)adapter->desc_pool.dma_addr + (unsigned int)offset;
  
#line 4420 
  hw->rx_desc_info.ring_virt = (struct ksz_hw_desc *)adapter->desc_pool.virt;
  
#line 4422 
  hw->rx_desc_info.ring_phys = adapter->desc_pool.phys;
  
#line 4423 
  offset = hw->rx_desc_info.alloc * hw->rx_desc_info.size;
  
#line 4424 
  hw->tx_desc_info.ring_virt = (struct ksz_hw_desc *)(adapter->desc_pool.virt + offset);
  
#line 4426 
  hw->tx_desc_info.ring_phys = adapter->desc_pool.phys + (unsigned int)offset;
  
#line 4428 
  tmp_0 = ksz_alloc_soft_desc(& hw->rx_desc_info,0);
  
#line 4428 
  if (tmp_0 != 0) {
    
#line 4429 
    __retres = 1;
    
#line 4429 
    goto return_label;
  }
  else ;
  
#line 4430 
  tmp_1 = ksz_alloc_soft_desc(& hw->tx_desc_info,1);
  
#line 4430 
  if (tmp_1 != 0) {
    
#line 4431 
    __retres = 1;
    
#line 4431 
    goto return_label;
  }
  else ;
  
#line 4433 
  __retres = 0;
  return_label: 
#line 4433 
                return __retres;
}


#line 4442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void free_dma_buf(struct dev_info *adapter, struct ksz_dma_buf *dma_buf, int direction)
{
  
#line 4445 
  pci_unmap_single(adapter->pdev,dma_buf->dma,(unsigned long)dma_buf->len,direction);
  
#line 4446 
  consume_skb(dma_buf->skb);
  
#line 4447 
  dma_buf->skb = (struct sk_buff *)0;
  
#line 4448 
  dma_buf->dma = 0ULL;
  
#line 4449 
  return;
}


#line 4457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_init_rx_buffers(struct dev_info *adapter)
{
  int i;
  struct ksz_desc *desc;
  struct ksz_dma_buf *dma_buf;
  
#line 4462 
  struct ksz_hw *hw = & adapter->hw;
  
#line 4463 
  struct ksz_desc_info *info = & hw->rx_desc_info;
  
#line 4465 
  i = 0;
  
#line 4465 
  goto ldv_48461;
  ldv_48460: 
#line 4466 
  ;
  
#line 4466 
  get_rx_pkt(info,& desc);
  
#line 4468 
  dma_buf = & desc->dma_buf;
  
#line 4469 
  if (dma_buf->skb != (struct sk_buff *)0 && dma_buf->len != adapter->mtu) 
    
#line 4470 
    free_dma_buf(adapter,dma_buf,2); else ;
  
#line 4471 
  dma_buf->len = adapter->mtu;
  
#line 4472 
  if (dma_buf->skb == (struct sk_buff *)0) 
#line 4473 
                                           dma_buf->skb = alloc_skb((unsigned int)dma_buf->len,32U); else ;
  
#line 4474 
  if (dma_buf->skb != (struct sk_buff *)0 && dma_buf->dma == 0ULL) {
    unsigned char *tmp;
    
#line 4475 
    ;
    
#line 4477 
    tmp = skb_tail_pointer((struct sk_buff const *)dma_buf->skb);
    
#line 4475 
    ;
    
#line 4475 
    dma_buf->dma = pci_map_single(adapter->pdev,(void *)tmp,(unsigned long)dma_buf->len,2);
  }
  else ;
  
#line 4482 
  set_rx_buf(desc,(unsigned int)dma_buf->dma);
  
#line 4483 
  set_rx_len(desc,(unsigned int)dma_buf->len);
  
#line 4484 
  release_desc(desc);
  
#line 4465 
  i += 1;
  ldv_48461: 
#line 4466 
  ;
  
#line 4465 
  if (hw->rx_desc_info.alloc > i) 
#line 4467 
                                  goto ldv_48460; else 
#line 4470 
                                                       goto ldv_48462;
  ldv_48462: 
#line 4471 
  ;
  
#line 4472 
  return;
}


#line 4497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int ksz_alloc_mem(struct dev_info *adapter)
{
  int __retres;
  int tmp;
  
#line 4499 
  struct ksz_hw *hw = & adapter->hw;
  
#line 4502 
  hw->rx_desc_info.alloc = 64;
  
#line 4503 
  hw->tx_desc_info.alloc = 64;
  
#line 4506 
  hw->tx_int_cnt = 0;
  
#line 4507 
  hw->tx_int_mask = 16;
  
#line 4508 
  if (hw->tx_int_mask > 8) 
#line 4509 
                           hw->tx_int_mask = 8; else ;
  
#line 4510 
  goto ldv_48468;
  ldv_48467: 
#line 4511 
  ;
  
#line 4511 
  hw->tx_int_cnt += 1;
  
#line 4512 
  hw->tx_int_mask >>= 1;
  ldv_48468: 
#line 4513 
  ;
  
#line 4510 
  if (hw->tx_int_mask != 0) 
#line 4512 
                            goto ldv_48467; else 
#line 4515 
                                                 goto ldv_48469;
  ldv_48469: 
#line 4516 
  ;
  
#line 4514 
  if (hw->tx_int_cnt != 0) {
    
#line 4515 
    hw->tx_int_mask = (1 << (hw->tx_int_cnt + -1)) + -1;
    
#line 4516 
    hw->tx_int_cnt = 0;
  }
  else ;
  
#line 4520 
  hw->rx_desc_info.size = 16;
  
#line 4523 
  hw->tx_desc_info.size = 16;
  
#line 4526 
  if (hw->rx_desc_info.size != 16) 
#line 4527 
                                   printk("\001"); else ;
  
#line 4528 
  ksz_check_desc_num(& hw->rx_desc_info);
  
#line 4529 
  ksz_check_desc_num(& hw->tx_desc_info);
  
#line 4532 
  tmp = ksz_alloc_desc(adapter);
  
#line 4532 
  if (tmp != 0) {
    
#line 4533 
    __retres = 1;
    
#line 4533 
    goto return_label;
  }
  else ;
  
#line 4535 
  __retres = 0;
  return_label: 
#line 4535 
                return __retres;
}


#line 4545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_free_desc(struct dev_info *adapter)
{
  
#line 4547 
  struct ksz_hw *hw = & adapter->hw;
  
#line 4550 
  hw->rx_desc_info.ring_virt = (struct ksz_hw_desc *)0;
  
#line 4551 
  hw->tx_desc_info.ring_virt = (struct ksz_hw_desc *)0;
  
#line 4552 
  hw->rx_desc_info.ring_phys = 0U;
  
#line 4553 
  hw->tx_desc_info.ring_phys = 0U;
  
#line 4556 
  if (adapter->desc_pool.alloc_virt != (u8 *)0U) 
#line 4557 
                                                 pci_free_consistent(adapter->pdev,(unsigned long)adapter->desc_pool.alloc_size,(void *)adapter->desc_pool.alloc_virt,adapter->desc_pool.dma_addr); else ;
  
#line 4564 
  adapter->desc_pool.alloc_size = 0U;
  
#line 4565 
  adapter->desc_pool.alloc_virt = (u8 *)0U;
  
#line 4567 
  kfree((void const *)hw->rx_desc_info.ring);
  
#line 4568 
  hw->rx_desc_info.ring = (struct ksz_desc *)0;
  
#line 4569 
  kfree((void const *)hw->tx_desc_info.ring);
  
#line 4570 
  hw->tx_desc_info.ring = (struct ksz_desc *)0;
  
#line 4571 
  return;
}


#line 4580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_free_buffers(struct dev_info *adapter, struct ksz_desc_info *desc_info, int direction)
{
  int i;
  struct ksz_dma_buf *dma_buf;
  
#line 4585 
  struct ksz_desc *desc = desc_info->ring;
  
#line 4587 
  i = 0;
  
#line 4587 
  goto ldv_48483;
  ldv_48482: 
#line 4588 
  ;
  
#line 4588 
  dma_buf = & desc->dma_buf;
  
#line 4589 
  if (dma_buf->skb != (struct sk_buff *)0) 
#line 4590 
                                           free_dma_buf(adapter,dma_buf,direction); else ;
  
#line 4591 
  desc += 1;
  
#line 4587 
  i += 1;
  ldv_48483: 
#line 4588 
  ;
  
#line 4587 
  if (desc_info->alloc > i) 
#line 4589 
                            goto ldv_48482; else 
#line 4592 
                                                 goto ldv_48484;
  ldv_48484: 
#line 4593 
  ;
  
#line 4594 
  return;
}


#line 4601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void ksz_free_mem(struct dev_info *adapter)
{
  
#line 4604 
  ksz_free_buffers(adapter,& adapter->hw.tx_desc_info,1);
  
#line 4608 
  ksz_free_buffers(adapter,& adapter->hw.rx_desc_info,2);
  
#line 4612 
  ksz_free_desc(adapter);
  
#line 4613 
  return;
}


#line 4615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void get_mib_counters(struct ksz_hw *hw, int first, int cnt, u64 *counter)
{
  int i;
  int mib;
  int port;
  struct ksz_port_mib *port_mib;
  
#line 4623 
  memset((void *)counter,0,272UL);
  
#line 4624 
  i = 0;
  
#line 4624 
  port = first;
  
#line 4624 
  goto ldv_48502;
  ldv_48501: 
#line 4625 
  ;
  
#line 4625 
  port_mib = & hw->port_mib[port];
  
#line 4626 
  mib = (int)port_mib->mib_start;
  
#line 4626 
  goto ldv_48499;
  ldv_48498: 
#line 4627 
  ;
  
#line 4627 
  *(counter + mib) += port_mib->counter[mib];
  
#line 4626 
  mib += 1;
  ldv_48499: 
#line 4627 
  ;
  
#line 4626 
  if (hw->mib_cnt > mib) 
#line 4628 
                         goto ldv_48498; else 
#line 4631 
                                              goto ldv_48500;
  ldv_48500: 
#line 4632 
  ;
  
#line 4624 
  i += 1;
  
#line 4624 
  port += 1;
  ldv_48502: 
#line 4625 
  ;
  
#line 4624 
  if (i < cnt) 
#line 4626 
               goto ldv_48501; else 
#line 4629 
                                    goto ldv_48503;
  ldv_48503: 
#line 4630 
  ;
  
#line 4631 
  return;
}


#line 4638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void send_packet(struct sk_buff *skb, struct net_device *dev)
{
  struct ksz_desc *desc;
  struct ksz_desc *first;
  struct ksz_dma_buf *dma_buf;
  int len;
  unsigned char *tmp_0;
  
#line 4642 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 4643 
  struct dev_info *hw_priv = priv->adapter;
  
#line 4644 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 4645 
  struct ksz_desc_info *info = & hw->tx_desc_info;
  
#line 4648 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4648 
  int last_frag = (int)((struct skb_shared_info *)tmp_0)->nr_frags;
  
#line 4654 
  if (hw->dev_count > 1) 
#line 4655 
                         hw->dst_ports = 1 << priv->port.first_port; else ;
  
#line 4658 
  len = (int)skb->len;
  
#line 4661 
  first = info->cur;
  
#line 4662 
  desc = first;
  
#line 4664 
  dma_buf = & desc->dma_buf;
  
#line 4665 
  if (last_frag != 0) {
    int frag;
    skb_frag_t *this_frag;
    unsigned int tmp_1;
    unsigned char *tmp_2;
    unsigned int tmp_3;
    void *tmp_4;
    
#line 4669 
    tmp_1 = skb_headlen((struct sk_buff const *)skb);
    
#line 4669 
    dma_buf->len = (int)tmp_1;
    
#line 4671 
    dma_buf->dma = pci_map_single(hw_priv->pdev,(void *)skb->data,(unsigned long)dma_buf->len,1);
    
#line 4674 
    set_rx_buf(desc,(unsigned int)dma_buf->dma);
    
#line 4675 
    set_tx_len(desc,(unsigned int)dma_buf->len);
    
#line 4677 
    frag = 0;
    ldv_48520: 
#line 4678 
    ;
    
#line 4679 
    tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4679 
    this_frag = & ((struct skb_shared_info *)tmp_2)->frags[frag];
    
#line 4682 
    get_tx_pkt(info,& desc);
    
#line 4685 
    hw->tx_int_cnt += 1;
    
#line 4687 
    dma_buf = & desc->dma_buf;
    
#line 4688 
    tmp_3 = skb_frag_size((skb_frag_t const *)this_frag);
    
#line 4688 
    dma_buf->len = (int)tmp_3;
    
#line 4690 
    ;
    
#line 4691 
    tmp_4 = skb_frag_address((skb_frag_t const *)this_frag);
    
#line 4690 
    ;
    
#line 4690 
    dma_buf->dma = pci_map_single(hw_priv->pdev,tmp_4,(unsigned long)dma_buf->len,1);
    
#line 4695 
    set_rx_buf(desc,(unsigned int)dma_buf->dma);
    
#line 4696 
    set_tx_len(desc,(unsigned int)dma_buf->len);
    
#line 4698 
    frag += 1;
    
#line 4699 
    if (frag == last_frag) 
#line 4700 
                           goto ldv_48519; else ;
    
#line 4703 
    release_desc(desc);
    
#line 4679 
    goto ldv_48520;
    ldv_48519: 
#line 4680 
    ;
    
#line 4707 
    info->cur = desc;
    
#line 4710 
    release_desc(first);
  }
  else {
    
#line 4712 
    dma_buf->len = len;
    
#line 4714 
    dma_buf->dma = pci_map_single(hw_priv->pdev,(void *)skb->data,(unsigned long)dma_buf->len,1);
    
#line 4717 
    set_rx_buf(desc,(unsigned int)dma_buf->dma);
    
#line 4718 
    set_tx_len(desc,(unsigned int)dma_buf->len);
  }
  
#line 4721 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
    
#line 4722 
    desc->sw.buf.tx.csum_gen_tcp = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 4723 
    desc->sw.buf.tx.csum_gen_udp = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  }
  else ;
  
#line 4730 
  dma_buf->skb = skb;
  
#line 4732 
  hw_send_pkt(hw);
  
#line 4735 
  dev->stats.tx_packets += 1UL;
  
#line 4736 
  dev->stats.tx_bytes += (unsigned long)len;
  
#line 4737 
  return;
}


#line 4745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void transmit_cleanup(struct dev_info *hw_priv, int normal)
{
  int last;
  union desc_stat status;
  struct ksz_desc *desc;
  struct ksz_dma_buf *dma_buf;
  
#line 4749 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 4750 
  struct ksz_desc_info *info = & hw->tx_desc_info;
  
#line 4753 
  struct net_device *dev = (struct net_device *)0;
  
#line 4755 
  ldv_spin_lock_irq_73(& hw_priv->hwlock);
  
#line 4756 
  last = info->last;
  
#line 4758 
  goto ldv_48534;
  ldv_48533: 
#line 4759 
  ;
  
#line 4760 
  desc = info->ring + last;
  
#line 4761 
  status.data = (desc->phw)->ctrl.data;
  
#line 4762 
  if ((unsigned int)*((unsigned char *)(& status.tx) + 3UL) != 0U) {
    
#line 4763 
    if (normal != 0) 
#line 4764 
                     goto ldv_48532; else 
#line 4766 
                                          reset_desc(desc,status);
  }
  else ;
  
#line 4769 
  dma_buf = & desc->dma_buf;
  
#line 4770 
  pci_unmap_single(hw_priv->pdev,dma_buf->dma,(unsigned long)dma_buf->len,1);
  
#line 4775 
  if (dma_buf->skb != (struct sk_buff *)0) {
    
#line 4776 
    dev = (dma_buf->skb)->dev;
    
#line 4779 
    dev_kfree_skb_irq(dma_buf->skb);
    
#line 4780 
    dma_buf->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 4784 
  last += 1;
  
#line 4785 
  last = info->mask & last;
  
#line 4786 
  info->avail += 1;
  ldv_48534: 
#line 4787 
  ;
  
#line 4758 
  if (info->avail < info->alloc) 
#line 4760 
                                 goto ldv_48533; else 
#line 4763 
                                                      goto ldv_48532;
  ldv_48532: 
#line 4764 
  ;
  
#line 4788 
  info->last = last;
  
#line 4789 
  ldv_spin_unlock_irq_74(& hw_priv->hwlock);
  
#line 4792 
  if (dev != (struct net_device *)0) 
#line 4793 
                                     dev->trans_start = jiffies; else ;
  
#line 4794 
  return;
}


#line 4803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void tx_done(struct dev_info *hw_priv)
{
  int port;
  
#line 4805 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 4808 
  transmit_cleanup(hw_priv,1);
  
#line 4810 
  port = 0;
  
#line 4810 
  goto ldv_48542;
  ldv_48541: 
#line 4811 
  ;
  {
    bool tmp;
    
#line 4811 
    struct net_device *dev = (struct net_device *)hw->port_info[port].pdev;
    
#line 4813 
    tmp = netif_running((struct net_device const *)dev);
    
#line 4813 
    if ((int)tmp != 0) {
      bool tmp_0;
      
#line 4813 
      tmp_0 = netif_queue_stopped((struct net_device const *)dev);
      
#line 4813 
      if ((int)tmp_0 != 0) 
#line 4814 
                           netif_wake_queue(dev); else ;
    }
    else ;
  }
  
#line 4810 
  port += 1;
  ldv_48542: 
#line 4811 
  ;
  
#line 4810 
  if (hw->dev_count > port) 
#line 4812 
                            goto ldv_48541; else 
#line 4815 
                                                 goto ldv_48543;
  ldv_48543: 
#line 4816 
  ;
  
#line 4817 
  return;
}


#line 4818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void copy_old_skb(struct sk_buff *old, struct sk_buff *skb)
{
  
#line 4820 
  skb->dev = old->dev;
  
#line 4821 
  skb->protocol = old->protocol;
  
#line 4822 
  skb->ip_summed = old->ip_summed;
  
#line 4823 
  skb->__anonCompField_sk_buff_89.csum = old->__anonCompField_sk_buff_89.csum;
  
#line 4824 
  skb_set_network_header(skb,14);
  
#line 4826 
  dev_consume_skb_any(old);
  
#line 4827 
  return;
}


#line 4838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static netdev_tx_t netdev_tx(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  int left;
  unsigned char *tmp_1;
  
#line 4840 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 4841 
  struct dev_info *hw_priv = priv->adapter;
  
#line 4842 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 4844 
  int num = 1;
  
#line 4845 
  int rc = 0;
  
#line 4847 
  if ((hw->features & 2U) != 0U) {
    
#line 4848 
    struct sk_buff *org_skb = skb;
    
#line 4850 
    if (skb->len <= 48U) {
      unsigned char *tmp_0;
      
#line 4851 
      tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 4851 
      ;
      
#line 4851 
      if ((long)tmp_0 - (long)skb->data > 49L) {
        
#line 4852 
        memset((void *)(skb->data + skb->len),0,(unsigned long)(50U - skb->len));
        
#line 4853 
        skb->len = 50U;
      }
      else {
        
#line 4855 
        skb = netdev_alloc_skb(dev,50U);
        
#line 4856 
        if (skb == (struct sk_buff *)0) {
          
#line 4857 
          __retres = NETDEV_TX_BUSY;
          
#line 4857 
          goto return_label;
        }
        else ;
        
#line 4858 
        memcpy((void *)skb->data,(void const *)org_skb->data,(unsigned long)org_skb->len);
        
#line 4859 
        memset((void *)(skb->data + org_skb->len),0,(unsigned long)(50U - org_skb->len));
        
#line 4861 
        skb->len = 50U;
        
#line 4862 
        copy_old_skb(org_skb,skb);
      }
    }
    else ;
  }
  else ;
  
#line 4867 
  ldv_spin_lock_irq_75(& hw_priv->hwlock);
  
#line 4869 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4869 
  num = (int)((struct skb_shared_info *)tmp_1)->nr_frags + 1;
  
#line 4870 
  left = hw_alloc_pkt(hw,(int)skb->len,num);
  
#line 4871 
  if (left != 0) {
    
#line 4872 
    if (left < num || ((unsigned int)*((unsigned char *)skb + 145UL) == 6U && (unsigned int)skb->protocol == 56710U)) {
      
#line 4875 
      struct sk_buff *org_skb_0 = skb;
      
#line 4877 
      skb = netdev_alloc_skb(dev,org_skb_0->len);
      
#line 4878 
      if (skb == (struct sk_buff *)0) {
        
#line 4879 
        rc = 16;
        
#line 4880 
        goto unlock;
      }
      else ;
      
#line 4882 
      skb_copy_and_csum_dev((struct sk_buff const *)org_skb_0,skb->data);
      
#line 4883 
      org_skb_0->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
      
#line 4884 
      skb->len = org_skb_0->len;
      
#line 4885 
      copy_old_skb(org_skb_0,skb);
    }
    else ;
    
#line 4887 
    send_packet(skb,dev);
    
#line 4888 
    if (left <= num) 
#line 4889 
                     netif_start_queue(dev); else ;
  }
  else {
    
#line 4892 
    netif_start_queue(dev);
    
#line 4893 
    rc = 16;
  }
  unlock: 
#line 4895 
  ;
  
#line 4896 
  ldv_spin_unlock_irq_76(& hw_priv->hwlock);
  
#line 4898 
  __retres = (enum netdev_tx)rc;
  return_label: 
#line 4898 
                return __retres;
}


#line 4910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_tx_timeout(struct net_device *dev)
{
  unsigned long last_reset;
  int port;
  
#line 4914 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 4915 
  struct dev_info *hw_priv = priv->adapter;
  
#line 4916 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 4919 
  if (hw->dev_count > 1) {
    int tmp_0;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 4924 
      tmp_0 = 1;
    }
    
#line 4924 
    if (tmp_0 != 0) {
      int tmp_1;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 4924 
        tmp_1 = 1;
      }
      
#line 4924 
      if (tmp_1 != 0) {
        
#line 4924 
        if ((long)(((unsigned long)dev->watchdog_timeo + last_reset) - jiffies) >= 0L) 
          
#line 4925 
          hw_priv = (struct dev_info *)0; else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 4928 
  last_reset = jiffies;
  
#line 4929 
  if (hw_priv != (struct dev_info *)0) {
    
#line 4930 
    hw_dis_intr(hw);
    
#line 4931 
    hw_disable(hw);
    
#line 4933 
    transmit_cleanup(hw_priv,0);
    
#line 4934 
    hw_reset_pkts(& hw->rx_desc_info);
    
#line 4935 
    hw_reset_pkts(& hw->tx_desc_info);
    
#line 4936 
    ksz_init_rx_buffers(hw_priv);
    
#line 4938 
    hw_reset(hw);
    
#line 4940 
    hw_set_desc_base(hw,hw->tx_desc_info.ring_phys,hw->rx_desc_info.ring_phys);
    
#line 4943 
    hw_set_addr(hw);
    
#line 4944 
    if ((unsigned int)hw->all_multi != 0U) 
#line 4945 
                                           hw_set_multicast(hw,(unsigned char)((int)hw->all_multi));
    else 
      
#line 4946 
      if ((unsigned int)hw->multi_list_size != 0U) 
#line 4947 
                                                   hw_set_grp_addr(hw); else ;
    
#line 4949 
    if (hw->dev_count > 1) {
      
#line 4950 
      hw_set_add_addr(hw);
      
#line 4951 
      port = 0;
      
#line 4951 
      goto ldv_48577;
      ldv_48576: 
#line 4952 
      ;
      {
        struct net_device *port_dev;
        bool tmp_2;
        
#line 4954 
        port_set_stp_state(hw,port,0);
        
#line 4957 
        port_dev = (struct net_device *)hw->port_info[port].pdev;
        
#line 4958 
        tmp_2 = netif_running((struct net_device const *)port_dev);
        
#line 4958 
        if ((int)tmp_2 != 0) 
#line 4959 
                             port_set_stp_state(hw,port,5); else ;
      }
      
#line 4951 
      port += 1;
      ldv_48577: 
#line 4952 
      ;
      
#line 4951 
      if (port <= 1) 
#line 4953 
                     goto ldv_48576; else 
#line 4956 
                                          goto ldv_48578;
      ldv_48578: 
#line 4957 
      ;
    }
    else ;
    
#line 4964 
    hw_enable(hw);
    
#line 4965 
    hw_ena_intr(hw);
  }
  else ;
  
#line 4968 
  dev->trans_start = jiffies;
  
#line 4969 
  netif_wake_queue(dev);
  
#line 4970 
  return;
}


#line 4972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void csum_verified(struct sk_buff *skb)
{
  unsigned short protocol;
  struct iphdr *iph;
  
#line 4977 
  protocol = skb->protocol;
  
#line 4978 
  skb_reset_network_header(skb);
  
#line 4979 
  iph = (struct iphdr *)skb_network_header((struct sk_buff const *)skb);
  
#line 4980 
  if ((unsigned int)protocol == 129U) {
    
#line 4981 
    protocol = iph->tot_len;
    
#line 4982 
    skb_set_network_header(skb,4);
    
#line 4983 
    iph = (struct iphdr *)skb_network_header((struct sk_buff const *)skb);
  }
  else ;
  
#line 4985 
  if ((unsigned int)protocol == 8U) {
    
#line 4986 
    if ((unsigned int)iph->protocol == 6U) 
#line 4987 
                                           skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
  }
  else ;
  
#line 4988 
  return;
}


#line 4991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static int rx_proc(struct net_device *dev, struct ksz_hw *hw, struct ksz_desc *desc, union desc_stat status)
{
  int __retres;
  int packet_len;
  struct ksz_dma_buf *dma_buf;
  struct sk_buff *skb;
  int rx_status;
  unsigned char *tmp_0;
  
#line 4995 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 4996 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5002 
  packet_len = (int)status.rx.frame_len + -4;
  
#line 5004 
  dma_buf = & desc->dma_buf;
  
#line 5005 
  pci_dma_sync_single_for_cpu(hw_priv->pdev,dma_buf->dma,(unsigned long)(packet_len + 4),2);
  
#line 5011 
  skb = netdev_alloc_skb(dev,(unsigned int)(packet_len + 2));
  
#line 5012 
  if (skb == (struct sk_buff *)0) {
    
#line 5013 
    dev->stats.rx_dropped += 1UL;
    
#line 5014 
    __retres = -12;
    
#line 5014 
    goto return_label;
  }
  else ;
  
#line 5021 
  skb_reserve(skb,2);
  
#line 5023 
  ;
  
#line 5023 
  ;
  
#line 5023 
  tmp_0 = skb_put(skb,(unsigned int)packet_len);
  
#line 5023 
  memcpy((void *)tmp_0,(void const *)(dma_buf->skb)->data,(unsigned long)packet_len);
  
#line 5027 
  skb->protocol = eth_type_trans(skb,dev);
  
#line 5029 
  if ((hw->rx_cfg & 393216U) != 0U) 
#line 5030 
                                    csum_verified(skb); else ;
  
#line 5033 
  dev->stats.rx_packets += 1UL;
  
#line 5034 
  dev->stats.rx_bytes += (unsigned long)packet_len;
  
#line 5037 
  rx_status = netif_rx(skb);
  
#line 5039 
  __retres = 0;
  return_label: 
#line 5039 
                return __retres;
}


#line 5042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int dev_rcv_packets(struct dev_info *hw_priv)
{
  int next;
  union desc_stat status;
  struct ksz_desc *desc;
  int tmp_0;
  
#line 5046 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5047 
  struct net_device *dev = (struct net_device *)hw->port_info[0].pdev;
  
#line 5048 
  struct ksz_desc_info *info = & hw->rx_desc_info;
  
#line 5049 
  int left = info->alloc;
  
#line 5051 
  int received = 0;
  
#line 5053 
  next = info->next;
  
#line 5054 
  goto ldv_48610;
  ldv_48609: 
#line 5055 
  ;
  
#line 5056 
  desc = info->ring + next;
  
#line 5057 
  status.data = (desc->phw)->ctrl.data;
  
#line 5058 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) 
#line 5059 
                                                                   goto ldv_48607; else ;
  
#line 5062 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U && (unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) {
    int tmp;
    
#line 5063 
    tmp = rx_proc(dev,hw,desc,status);
    
#line 5063 
    if (tmp != 0) 
#line 5064 
                  goto release_packet; else ;
    
#line 5065 
    received += 1;
  }
  else ;
  release_packet: 
#line 5068 
  ;
  
#line 5069 
  release_desc(desc);
  
#line 5070 
  next += 1;
  
#line 5071 
  next = info->mask & next;
  ldv_48610: 
#line 5072 
  ;
  
#line 5054 
  tmp_0 = left;
  
#line 5054 
  left -= 1;
  
#line 5054 
  ;
  
#line 5054 
  if (tmp_0 != 0) 
#line 5056 
                  goto ldv_48609; else 
#line 5059 
                                       goto ldv_48607;
  ldv_48607: 
#line 5060 
  ;
  
#line 5073 
  info->next = next;
  
#line 5075 
  return received;
}


#line 5078  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int port_rcv_packets(struct dev_info *hw_priv)
{
  int next;
  union desc_stat status;
  struct ksz_desc *desc;
  int tmp_2;
  
#line 5082 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5083 
  struct net_device *dev = (struct net_device *)hw->port_info[0].pdev;
  
#line 5084 
  struct ksz_desc_info *info = & hw->rx_desc_info;
  
#line 5085 
  int left = info->alloc;
  
#line 5087 
  int received = 0;
  
#line 5089 
  next = info->next;
  
#line 5090 
  goto ldv_48626;
  ldv_48625: 
#line 5091 
  ;
  
#line 5092 
  desc = info->ring + next;
  
#line 5093 
  status.data = (desc->phw)->ctrl.data;
  
#line 5094 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) 
#line 5095 
                                                                   goto ldv_48622; else ;
  
#line 5097 
  if (hw->dev_count > 1) {
    int tmp_0;
    bool tmp;
    
#line 5099 
    int p = (int)status.rx.src_port + -1;
    
#line 5101 
    dev = (struct net_device *)hw->port_info[p].pdev;
    
#line 5102 
    tmp = netif_running((struct net_device const *)dev);
    
#line 5102 
    if (tmp) 
#line 5102 
             tmp_0 = 0; else 
#line 5102 
                             tmp_0 = 1;
    
#line 5102 
    if (tmp_0) 
#line 5103 
               goto release_packet; else ;
  }
  else ;
  
#line 5107 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U && (unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) {
    int tmp_1;
    
#line 5108 
    tmp_1 = rx_proc(dev,hw,desc,status);
    
#line 5108 
    if (tmp_1 != 0) 
#line 5109 
                    goto release_packet; else ;
    
#line 5110 
    received += 1;
  }
  else ;
  release_packet: 
#line 5113 
  ;
  
#line 5114 
  release_desc(desc);
  
#line 5115 
  next += 1;
  
#line 5116 
  next = info->mask & next;
  ldv_48626: 
#line 5117 
  ;
  
#line 5090 
  tmp_2 = left;
  
#line 5090 
  left -= 1;
  
#line 5090 
  ;
  
#line 5090 
  if (tmp_2 != 0) 
#line 5092 
                  goto ldv_48625; else 
#line 5095 
                                       goto ldv_48622;
  ldv_48622: 
#line 5096 
  ;
  
#line 5118 
  info->next = next;
  
#line 5120 
  return received;
}


#line 5123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int dev_rcv_special(struct dev_info *hw_priv)
{
  int next;
  union desc_stat status;
  struct ksz_desc *desc;
  int tmp_3;
  
#line 5127 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5128 
  struct net_device *dev = (struct net_device *)hw->port_info[0].pdev;
  
#line 5129 
  struct ksz_desc_info *info = & hw->rx_desc_info;
  
#line 5130 
  int left = info->alloc;
  
#line 5132 
  int received = 0;
  
#line 5134 
  next = info->next;
  
#line 5135 
  goto ldv_48643;
  ldv_48642: 
#line 5136 
  ;
  
#line 5137 
  desc = info->ring + next;
  
#line 5138 
  status.data = (desc->phw)->ctrl.data;
  
#line 5139 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) 
#line 5140 
                                                                   goto ldv_48638; else ;
  
#line 5142 
  if (hw->dev_count > 1) {
    int tmp_0;
    bool tmp;
    
#line 5144 
    int p = (int)status.rx.src_port + -1;
    
#line 5146 
    dev = (struct net_device *)hw->port_info[p].pdev;
    
#line 5147 
    tmp = netif_running((struct net_device const *)dev);
    
#line 5147 
    if (tmp) 
#line 5147 
             tmp_0 = 0; else 
#line 5147 
                             tmp_0 = 1;
    
#line 5147 
    if (tmp_0) 
#line 5148 
               goto release_packet; else ;
  }
  else ;
  
#line 5152 
  if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U && (unsigned int)*((unsigned char *)(& status.rx) + 3UL) != 0U) 
    
#line 5158 
    if ((unsigned int)*((unsigned char *)(& status.rx) + 3UL) == 0U || (status.data & 983040U) == 262144U) {
      int tmp_1;
      
#line 5161 
      tmp_1 = rx_proc(dev,hw,desc,status);
      
#line 5161 
      if (tmp_1 != 0) 
#line 5162 
                      goto release_packet; else ;
      
#line 5163 
      received += 1;
    }
    else {
      
#line 5165 
      struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
      
#line 5168 
      priv->port.counter[3] += 1ULL;
    }
  else ;
  release_packet: 
#line 5172 
  ;
  
#line 5173 
  release_desc(desc);
  
#line 5174 
  next += 1;
  
#line 5175 
  next = info->mask & next;
  ldv_48643: 
#line 5176 
  ;
  
#line 5135 
  tmp_3 = left;
  
#line 5135 
  left -= 1;
  
#line 5135 
  ;
  
#line 5135 
  if (tmp_3 != 0) 
#line 5137 
                  goto ldv_48642; else 
#line 5140 
                                       goto ldv_48638;
  ldv_48638: 
#line 5141 
  ;
  
#line 5177 
  info->next = next;
  
#line 5179 
  return received;
}


#line 5182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void rx_proc_task(unsigned long data)
{
  int tmp;
  
#line 5184 
  struct dev_info *hw_priv = (struct dev_info *)data;
  
#line 5185 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5187 
  if ((unsigned int)hw->enabled == 0U) 
#line 5188 
                                       goto return_label; else ;
  
#line 5189 
  tmp = (*(hw_priv->dev_rcv))(hw_priv);
  
#line 5189 
  if ((long)(tmp == 0) != 0L) {
    
#line 5192 
    hw_resume_rx(hw);
    
#line 5195 
    ldv_spin_lock_irq_77(& hw_priv->hwlock);
    
#line 5196 
    hw_turn_on_intr(hw,671088640U);
    
#line 5197 
    ldv_spin_unlock_irq_78(& hw_priv->hwlock);
  }
  else {
    
#line 5199 
    hw_ack_intr(hw,536870912U);
    
#line 5200 
    ldv_tasklet_schedule_79(& hw_priv->rx_tasklet);
  }
  return_label: 
#line 5202 
                return;
}


#line 5204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void tx_proc_task(unsigned long data)
{
  
#line 5206 
  struct dev_info *hw_priv = (struct dev_info *)data;
  
#line 5207 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5209 
  hw_ack_intr(hw,1342177280U);
  
#line 5211 
  tx_done(hw_priv);
  
#line 5214 
  ldv_spin_lock_irq_80(& hw_priv->hwlock);
  
#line 5215 
  hw_turn_on_intr(hw,1073741824U);
  
#line 5216 
  ldv_spin_unlock_irq_81(& hw_priv->hwlock);
  
#line 5217 
  return;
}


#line 5219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
__inline static void handle_rx_stop(struct ksz_hw *hw)
{
  
#line 5222 
  if ((unsigned int)hw->rx_stop == 0U) 
#line 5223 
                                       hw->intr_mask &= 4261412863U;
  else 
    
#line 5224 
    if ((unsigned int)hw->rx_stop > 1U) 
      
#line 5225 
      if ((unsigned int)hw->enabled != 0U && (hw->rx_cfg & 1U) != 0U) 
        
#line 5226 
        hw_start_rx(hw);
      else {
        
#line 5228 
        hw->intr_mask &= 4261412863U;
        
#line 5229 
        hw->rx_stop = (unsigned char)0U;
      }
    else 
#line 5233 
         hw->rx_stop = (u8)((int)hw->rx_stop + 1);
  
#line 5234 
  return;
}


#line 5245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static irqreturn_t netdev_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 5247 
  uint int_enable = 0U;
  
#line 5248 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 5249 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5250 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5251 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5253 
  ldv_spin_lock_82(& hw_priv->hwlock);
  
#line 5255 
  hw_read_intr(hw,& int_enable);
  
#line 5258 
  if (int_enable == 0U) {
    
#line 5259 
    ldv_spin_unlock_83(& hw_priv->hwlock);
    
#line 5260 
    __retres = IRQ_NONE;
    
#line 5260 
    goto return_label;
  }
  else ;
  
#line 5264 
  hw_ack_intr(hw,int_enable);
  
#line 5265 
  int_enable = hw->intr_mask & int_enable;
  
#line 5267 
  if ((long)((int_enable & 1342177280U) != 0U) != 0L) {
    
#line 5268 
    hw_dis_intr_bit(hw,1342177280U);
    
#line 5269 
    ldv_tasklet_schedule_84(& hw_priv->tx_tasklet);
  }
  else ;
  
#line 5272 
  if ((long)((int_enable & 536870912U) != 0U) != 0L) {
    
#line 5273 
    hw_dis_intr_bit(hw,536870912U);
    
#line 5274 
    ldv_tasklet_schedule_85(& hw_priv->rx_tasklet);
  }
  else ;
  
#line 5277 
  if ((long)((int_enable & 134217728U) != 0U) != 0L) {
    
#line 5278 
    dev->stats.rx_fifo_errors += 1UL;
    
#line 5279 
    hw_resume_rx(hw);
  }
  else ;
  
#line 5282 
  if ((long)(int_enable < (uint)0) != 0L) {
    
#line 5283 
    struct ksz_port *port = & priv->port;
    
#line 5285 
    hw->features |= 1U;
    
#line 5286 
    port_get_link_speed(port);
  }
  else ;
  
#line 5289 
  if ((long)((int_enable & 33554432U) != 0U) != 0L) {
    
#line 5290 
    handle_rx_stop(hw);
    
#line 5291 
    goto ldv_48667;
  }
  else ;
  
#line 5294 
  if ((long)((int_enable & 67108864U) != 0U) != 0L) {
    u32 data;
    
#line 5297 
    hw->intr_mask &= 4227858431U;
    
#line 5298 
    printk("\001");
    
#line 5299 
    data = readl((void const volatile *)hw->io);
    
#line 5300 
    if ((data & 1U) == 0U) 
#line 5301 
                           printk("\001"); else ;
    
#line 5302 
    goto ldv_48667;
  }
  else ;
  ldv_48667: 
#line 5304 
  ;
  
#line 5306 
  hw_ena_intr(hw);
  
#line 5308 
  ldv_spin_unlock_86(& hw_priv->hwlock);
  
#line 5310 
  __retres = IRQ_HANDLED;
  return_label: 
#line 5310 
                return __retres;
}


#line 5317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static unsigned long next_jiffies;

#line 5320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_netpoll(struct net_device *dev)
{
  
#line 5322 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5323 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5325 
  hw_dis_intr(& hw_priv->hw);
  
#line 5326 
  netdev_intr(dev->irq,(void *)dev);
  
#line 5327 
  return;
}


#line 5330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void bridge_change(struct ksz_hw *hw)
{
  int port;
  u8 member;
  
#line 5334 
  struct ksz_switch *sw = hw->ksz_switch;
  
#line 5337 
  if ((unsigned int)sw->member == 0U) {
    
#line 5338 
    port_set_stp_state(hw,2,5);
    
#line 5339 
    sw_block_addr(hw);
  }
  else ;
  
#line 5341 
  port = 0;
  
#line 5341 
  goto ldv_48682;
  ldv_48681: 
#line 5342 
  ;
  
#line 5342 
  if (sw->port_cfg[port].stp_state == 3) 
#line 5343 
                                         member = (unsigned char)((unsigned int)sw->member | 4U); else 
                                                                    
#line 5345 
                                                                    member = (unsigned char)((1 << port) | 4);
  
#line 5346 
  if ((int)sw->port_cfg[port].member != (int)member) 
#line 5347 
                                                     sw_cfg_port_base_vlan(hw,port,(unsigned char)((int)member)); else ;
  
#line 5341 
  port += 1;
  ldv_48682: 
#line 5342 
  ;
  
#line 5341 
  if (port <= 1) 
#line 5343 
                 goto ldv_48681; else 
#line 5346 
                                      goto ldv_48683;
  ldv_48683: 
#line 5347 
  ;
  
#line 5348 
  return;
}


#line 5360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_close(struct net_device *dev)
{
  int __retres;
  int pi;
  
#line 5362 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5363 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5364 
  struct ksz_port *port = & priv->port;
  
#line 5365 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5368 
  netif_start_queue(dev);
  
#line 5370 
  ksz_stop_timer(& priv->monitor_timer_info);
  
#line 5373 
  if (hw->dev_count > 1) {
    
#line 5374 
    port_set_stp_state(hw,port->first_port,0);
    
#line 5377 
    if ((hw->features & 256U) != 0U) {
      
#line 5378 
      pi = 1 << port->first_port;
      
#line 5379 
      if (((int)(hw->ksz_switch)->member & pi) != 0) {
        
#line 5380 
        (hw->ksz_switch)->member = (unsigned char)((int)(hw->ksz_switch)->member & ~ pi);
        
#line 5381 
        bridge_change(hw);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5385 
  if (port->first_port > 0) 
#line 5386 
                            hw_del_addr(hw,dev->dev_addr); else ;
  
#line 5387 
  if (hw_priv->wol_enable == 0) 
#line 5388 
                                port_set_power_saving(port,1); else ;
  
#line 5390 
  if (priv->multicast != 0) 
#line 5391 
                            hw->all_multi = (u8)((int)hw->all_multi - 1); else ;
  
#line 5392 
  if (priv->promiscuous != 0) 
#line 5393 
                              hw->promiscuous = (u8)((int)hw->promiscuous - 1); else ;
  
#line 5395 
  hw_priv->opened -= 1;
  
#line 5396 
  if (hw_priv->opened == 0) {
    
#line 5397 
    ksz_stop_timer(& hw_priv->mib_timer_info);
    
#line 5398 
    ldv_flush_work_87(& hw_priv->mib_read);
    
#line 5400 
    hw_dis_intr(hw);
    
#line 5401 
    hw_disable(hw);
    
#line 5402 
    hw_clr_multicast(hw);
    
#line 5405 
    msleep(8U);
    
#line 5407 
    tasklet_kill(& hw_priv->rx_tasklet);
    
#line 5408 
    tasklet_kill(& hw_priv->tx_tasklet);
    
#line 5409 
    ldv_free_irq_88((unsigned int)dev->irq,(void *)hw_priv->dev);
    
#line 5411 
    transmit_cleanup(hw_priv,0);
    
#line 5412 
    hw_reset_pkts(& hw->rx_desc_info);
    
#line 5413 
    hw_reset_pkts(& hw->tx_desc_info);
    
#line 5416 
    if ((hw->features & 256U) != 0U) 
#line 5417 
                                     sw_clr_sta_mac_table(hw); else ;
  }
  else ;
  
#line 5420 
  __retres = 0;
  
#line 5420 
  return __retres;
}


#line 5423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void hw_cfg_huge_frame(struct dev_info *hw_priv, struct ksz_hw *hw)
{
  
#line 5425 
  if (hw->ksz_switch != (struct ksz_switch *)0) {
    u32 data;
    unsigned short tmp;
    
#line 5428 
    tmp = readw((void const volatile *)(hw->io + 1028U));
    
#line 5428 
    data = (unsigned int)tmp;
    
#line 5429 
    if ((hw->features & 16U) != 0U) 
#line 5430 
                                    data |= 4U; else 
#line 5432 
                                                     data &= 4294967291U;
    
#line 5433 
    writew((unsigned short)((int)((unsigned short)data)),(void volatile *)(hw->io + 1028U));
  }
  else ;
  
#line 5435 
  if ((hw->features & 16U) != 0U) {
    
#line 5436 
    hw->rx_cfg |= 8U;
    
#line 5437 
    hw_priv->dev_rcv = & dev_rcv_special;
  }
  else {
    
#line 5439 
    hw->rx_cfg &= 4294967287U;
    
#line 5440 
    if (hw->dev_count > 1) 
#line 5441 
                           hw_priv->dev_rcv = & port_rcv_packets; else 
                                                                    
#line 5443 
                                                                    hw_priv->dev_rcv = & dev_rcv_packets;
  }
  
#line 5445 
  return;
}


#line 5447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int prepare_hardware(struct net_device *dev)
{
  int __retres;
  
#line 5449 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5450 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5451 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5452 
  int rc = 0;
  
#line 5455 
  hw_priv->dev = dev;
  
#line 5456 
  rc = ldv_request_irq_89((unsigned int)dev->irq,& netdev_intr,128UL,(char const *)(& dev->name),(void *)dev);
  
#line 5457 
  if (rc != 0) {
    
#line 5458 
    __retres = rc;
    
#line 5458 
    goto return_label;
  }
  else ;
  
#line 5459 
  ldv_tasklet_init_90(& hw_priv->rx_tasklet,& rx_proc_task,(unsigned long)hw_priv);
  
#line 5461 
  ldv_tasklet_init_91(& hw_priv->tx_tasklet,& tx_proc_task,(unsigned long)hw_priv);
  
#line 5464 
  hw->promiscuous = (unsigned char)0U;
  
#line 5465 
  hw->all_multi = (unsigned char)0U;
  
#line 5466 
  hw->multi_list_size = (unsigned char)0U;
  
#line 5468 
  hw_reset(hw);
  
#line 5470 
  hw_set_desc_base(hw,hw->tx_desc_info.ring_phys,hw->rx_desc_info.ring_phys);
  
#line 5472 
  hw_set_addr(hw);
  
#line 5473 
  hw_cfg_huge_frame(hw_priv,hw);
  
#line 5474 
  ksz_init_rx_buffers(hw_priv);
  
#line 5475 
  __retres = 0;
  return_label: 
#line 5475 
                return __retres;
}


#line 5478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void set_media_state(struct net_device *dev, int media_state)
{
  
#line 5480 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5482 
  if (priv->media_state == media_state) 
#line 5483 
                                        netif_carrier_on(dev); else 
#line 5485 
                                                                    netif_carrier_off(dev);
  
#line 5486 
  if ((priv->msg_enable & 4U) != 0U) {
    char *tmp_0;
    
#line 5486 
    if (priv->media_state == media_state) 
#line 5486 
                                          tmp_0 = (char *)"on"; else 
                                                                  
#line 5486 
                                                                  tmp_0 = (char *)"off";
    
#line 5486 
    ;
    
#line 5486 
    netdev_info((struct net_device const *)dev,"link %s\n",tmp_0);
  }
  else ;
  
#line 5487 
  return;
}


#line 5499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_open(struct net_device *dev)
{
  int __retres;
  int i;
  int p;
  
#line 5501 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5502 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5503 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5504 
  struct ksz_port *port = & priv->port;
  
#line 5507 
  int rc = 0;
  
#line 5509 
  priv->multicast = 0;
  
#line 5510 
  priv->promiscuous = 0;
  
#line 5513 
  memset((void *)(& dev->stats),0,184UL);
  
#line 5514 
  memset((void *)(& port->counter),0,32UL);
  
#line 5517 
  if (hw_priv->opened == 0) {
    
#line 5518 
    rc = prepare_hardware(dev);
    
#line 5519 
    if (rc != 0) {
      
#line 5520 
      __retres = rc;
      
#line 5520 
      goto return_label;
    }
    else ;
    
#line 5521 
    i = 0;
    
#line 5521 
    goto ldv_48720;
    ldv_48719: 
#line 5522 
    ;
    
#line 5522 
    if (next_jiffies < jiffies) 
#line 5523 
                                next_jiffies = jiffies + 500UL; else 
                                                                  
#line 5525 
                                                                  next_jiffies += 250UL;
    
#line 5526 
    hw_priv->counter[i].time = next_jiffies;
    
#line 5527 
    hw->port_mib[i].state = (unsigned char)1U;
    
#line 5528 
    port_init_cnt(hw,i);
    
#line 5521 
    i += 1;
    ldv_48720: 
#line 5522 
    ;
    
#line 5521 
    if (hw->mib_port_cnt > i) 
#line 5523 
                              goto ldv_48719; else 
#line 5526 
                                                   goto ldv_48721;
    ldv_48721: 
#line 5527 
    ;
    
#line 5530 
    if (hw->ksz_switch != (struct ksz_switch *)0) 
#line 5531 
                                                  hw->port_mib[2].state = (unsigned char)0U;
    else {
      
#line 5533 
      hw_add_wol_bcast(hw);
      
#line 5534 
      hw_cfg_wol_pme(hw,0);
      
#line 5535 
      hw_clr_wol_pme_status(& hw_priv->hw);
    }
  }
  else ;
  
#line 5538 
  port_set_power_saving(port,0);
  
#line 5540 
  i = 0;
  
#line 5540 
  p = port->first_port;
  
#line 5540 
  goto ldv_48723;
  ldv_48722: 
#line 5541 
  ;
  
#line 5545 
  hw->port_info[p].partner = (unsigned char)255U;
  
#line 5546 
  hw->port_info[p].state = 1U;
  
#line 5540 
  i += 1;
  
#line 5540 
  p += 1;
  ldv_48723: 
#line 5541 
  ;
  
#line 5540 
  if (port->port_cnt > i) 
#line 5542 
                          goto ldv_48722; else 
#line 5545 
                                               goto ldv_48724;
  ldv_48724: 
#line 5546 
  ;
  
#line 5550 
  if (hw->dev_count > 1) {
    
#line 5551 
    port_set_stp_state(hw,port->first_port,5);
    
#line 5552 
    if (port->first_port > 0) 
#line 5553 
                              hw_add_addr(hw,dev->dev_addr); else ;
  }
  else ;
  
#line 5556 
  port_get_link_speed(port);
  
#line 5557 
  if ((unsigned int)port->force_link != 0U) 
#line 5558 
                                            port_force_link_speed(port); else 
                                                                    
#line 5560 
                                                                    port_set_link_speed(port);
  
#line 5562 
  if (hw_priv->opened == 0) {
    
#line 5563 
    hw_setup_intr(hw);
    
#line 5564 
    hw_enable(hw);
    
#line 5565 
    hw_ena_intr(hw);
    
#line 5567 
    if (hw->mib_port_cnt != 0) 
#line 5568 
                               ksz_start_timer(& hw_priv->mib_timer_info,hw_priv->mib_timer_info.period); else ;
  }
  else ;
  
#line 5572 
  hw_priv->opened += 1;
  
#line 5574 
  ksz_start_timer(& priv->monitor_timer_info,priv->monitor_timer_info.period);
  
#line 5577 
  priv->media_state = (int)(port->linked)->state;
  
#line 5579 
  set_media_state(dev,0);
  
#line 5580 
  netif_start_queue(dev);
  
#line 5582 
  __retres = 0;
  return_label: 
#line 5582 
                return __retres;
}


#line 5604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct net_device_stats *netdev_query_statistics(struct net_device *dev)
{
  struct net_device_stats *__retres;
  struct ksz_port_mib *mib;
  int i;
  int p;
  
#line 5606 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5607 
  struct ksz_port *port = & priv->port;
  
#line 5608 
  struct ksz_hw *hw = & (priv->adapter)->hw;
  
#line 5613 
  dev->stats.rx_errors = (unsigned long)port->counter[3];
  
#line 5614 
  dev->stats.tx_errors = (unsigned long)port->counter[2];
  
#line 5617 
  dev->stats.multicast = 0UL;
  
#line 5618 
  dev->stats.collisions = 0UL;
  
#line 5619 
  dev->stats.rx_length_errors = 0UL;
  
#line 5620 
  dev->stats.rx_crc_errors = 0UL;
  
#line 5621 
  dev->stats.rx_frame_errors = 0UL;
  
#line 5622 
  dev->stats.tx_window_errors = 0UL;
  
#line 5624 
  i = 0;
  
#line 5624 
  p = port->first_port;
  
#line 5624 
  goto ldv_48735;
  ldv_48734: 
#line 5625 
  ;
  
#line 5625 
  mib = & hw->port_mib[p];
  
#line 5627 
  dev->stats.multicast += (unsigned long)mib->counter[12];
  
#line 5630 
  dev->stats.collisions += (unsigned long)mib->counter[28];
  
#line 5633 
  dev->stats.rx_length_errors += (unsigned long)(((mib->counter[2] + mib->counter[3]) + mib->counter[4]) + mib->counter[5]);
  
#line 5638 
  dev->stats.rx_crc_errors += (unsigned long)mib->counter[7];
  
#line 5640 
  dev->stats.rx_frame_errors += (unsigned long)(mib->counter[8] + mib->counter[6]);
  
#line 5644 
  dev->stats.tx_window_errors += (unsigned long)mib->counter[22];
  
#line 5624 
  i += 1;
  
#line 5624 
  p += 1;
  ldv_48735: 
#line 5625 
  ;
  
#line 5624 
  if (port->mib_port_cnt > i) 
#line 5626 
                              goto ldv_48734; else 
#line 5629 
                                                   goto ldv_48736;
  ldv_48736: 
#line 5630 
  ;
  
#line 5648 
  __retres = & dev->stats;
  
#line 5648 
  return __retres;
}


#line 5660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_mac_address(struct net_device *dev, void *addr)
{
  int __retres;
  uint interrupt;
  
#line 5662 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5663 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5664 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5665 
  struct sockaddr *mac = (struct sockaddr *)addr;
  
#line 5668 
  if (priv->port.first_port > 0) 
#line 5669 
                                 hw_del_addr(hw,dev->dev_addr);
  else {
    
#line 5671 
    hw->mac_override = (unsigned char)1U;
    
#line 5672 
    memcpy((void *)(& hw->override_addr),(void const *)(& mac->sa_data),6UL);
  }
  
#line 5675 
  memcpy((void *)dev->dev_addr,(void const *)(& mac->sa_data),6UL);
  
#line 5677 
  interrupt = hw_block_intr(hw);
  
#line 5679 
  if (priv->port.first_port > 0) 
#line 5680 
                                 hw_add_addr(hw,dev->dev_addr); else 
                                                                  
#line 5682 
                                                                  hw_set_addr(hw);
  
#line 5683 
  hw_restore_intr(hw,interrupt);
  
#line 5685 
  __retres = 0;
  
#line 5685 
  return __retres;
}


#line 5688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void dev_set_promiscuous(struct net_device *dev, struct dev_priv *priv, struct ksz_hw *hw, int promiscuous)
{
  
#line 5691 
  if (priv->promiscuous != promiscuous) {
    
#line 5692 
    u8 prev_state = hw->promiscuous;
    
#line 5694 
    if (promiscuous != 0) 
#line 5695 
                          hw->promiscuous = (u8)((int)hw->promiscuous + 1); else 
                                                                    
#line 5697 
                                                                    hw->promiscuous = (u8)((int)hw->promiscuous - 1);
    
#line 5698 
    priv->promiscuous = promiscuous;
    
#line 5701 
    if ((unsigned int)hw->promiscuous <= 1U && (unsigned int)prev_state <= 1U) 
      
#line 5702 
      hw_set_promiscuous(hw,(unsigned char)((int)hw->promiscuous)); else ;
    
#line 5708 
    if (((hw->features & 256U) != 0U && promiscuous == 0) && (dev->priv_flags & 16384U) != 0U) {
      
#line 5710 
      struct ksz_switch *sw = hw->ksz_switch;
      
#line 5711 
      int port = priv->port.first_port;
      
#line 5713 
      port_set_stp_state(hw,port,0);
      
#line 5714 
      port = 1 << port;
      
#line 5715 
      if (((int)sw->member & port) != 0) {
        
#line 5716 
        sw->member = (unsigned char)((int)sw->member & ~ port);
        
#line 5717 
        bridge_change(hw);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5721 
  return;
}


#line 5723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void dev_set_multicast(struct dev_priv *priv, struct ksz_hw *hw, int multicast)
{
  
#line 5726 
  if (priv->multicast != multicast) {
    
#line 5727 
    u8 all_multi = hw->all_multi;
    
#line 5729 
    if (multicast != 0) 
#line 5730 
                        hw->all_multi = (u8)((int)hw->all_multi + 1); else 
                                                                    
#line 5732 
                                                                    hw->all_multi = (u8)((int)hw->all_multi - 1);
    
#line 5733 
    priv->multicast = multicast;
    
#line 5736 
    if ((unsigned int)hw->all_multi <= 1U && (unsigned int)all_multi <= 1U) 
      
#line 5737 
      hw_set_multicast(hw,(unsigned char)((int)hw->all_multi)); else ;
  }
  else ;
  
#line 5739 
  return;
}


#line 5748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_set_rx_mode(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  
#line 5750 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5751 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5752 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5754 
  int multicast = (int)dev->flags & 512;
  
#line 5756 
  dev_set_promiscuous(dev,priv,hw,(int)dev->flags & 256);
  
#line 5758 
  if (hw_priv->hw.dev_count > 1) 
#line 5759 
                                 multicast = (int)((dev->flags & 4096U) | (unsigned int)multicast); else ;
  
#line 5760 
  dev_set_multicast(priv,hw,multicast);
  
#line 5763 
  if (hw_priv->hw.dev_count > 1) 
#line 5764 
                                 goto return_label; else ;
  
#line 5766 
  if ((dev->flags & 4096U) != 0U && dev->mc.count != 0) {
    struct netdev_hw_addr *tmp_0;
    int tmp_1;
    struct netdev_hw_addr *tmp_2;
    
#line 5767 
    int i = 0;
    
#line 5770 
    if (dev->mc.count > 32) {
      
#line 5771 
      if ((unsigned int)hw->multi_list_size != 32U) {
        
#line 5772 
        hw->multi_list_size = (unsigned char)32U;
        
#line 5773 
        hw->all_multi = (u8)((int)hw->all_multi + 1);
        
#line 5774 
        hw_set_multicast(hw,(unsigned char)((int)hw->all_multi));
      }
      else ;
      
#line 5776 
      goto return_label;
    }
    else ;
    {
      
#line 5779 
      struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
      
#line 5779 
      tmp_0 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 5779 
    ha = tmp_0;
    
#line 5779 
    goto ldv_48776;
    ldv_48775: 
#line 5780 
    ;
    
#line 5780 
    if (i > 31) 
#line 5781 
                goto ldv_48774; else ;
    
#line 5782 
    ;
    
#line 5782 
    tmp_1 = i;
    
#line 5782 
    i += 1;
    
#line 5782 
    ;
    
#line 5782 
    memcpy((void *)(& hw->multi_list[tmp_1]),(void const *)(& ha->addr),6UL);
    {
      
#line 5779 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 5779 
      tmp_2 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 5779 
    ha = tmp_2;
    ldv_48776: 
#line 5781 
    ;
    
#line 5779 
    if (& ha->list != & dev->mc.list) 
#line 5781 
                                      goto ldv_48775; else 
#line 5784 
                                                           goto ldv_48774;
    ldv_48774: 
#line 5785 
    ;
    
#line 5784 
    hw->multi_list_size = (unsigned char)i;
    
#line 5785 
    hw_set_grp_addr(hw);
  }
  else {
    
#line 5787 
    if ((unsigned int)hw->multi_list_size == 32U) {
      
#line 5788 
      hw->all_multi = (u8)((int)hw->all_multi - 1);
      
#line 5789 
      hw_set_multicast(hw,(unsigned char)((int)hw->all_multi));
    }
    else ;
    
#line 5791 
    hw->multi_list_size = (unsigned char)0U;
    
#line 5792 
    hw_clr_multicast(hw);
  }
  return_label: 
#line 5794 
                return;
}


#line 5796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int hw_mtu;
  bool tmp_0;
  
#line 5798 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5799 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5800 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5803 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 5803 
  if ((int)tmp_0 != 0) {
    
#line 5804 
    __retres = -16;
    
#line 5804 
    goto return_label;
  }
  else ;
  
#line 5807 
  if (hw->dev_count > 1) {
    
#line 5808 
    if (hw_priv->dev != dev) {
      
#line 5809 
      __retres = 0;
      
#line 5809 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5810 
  if (new_mtu <= 59) {
    
#line 5811 
    __retres = -22;
    
#line 5811 
    goto return_label;
  }
  else ;
  
#line 5813 
  if (dev->mtu != (unsigned int)new_mtu) {
    
#line 5814 
    hw_mtu = new_mtu + 22;
    
#line 5815 
    if (hw_mtu > 1916) {
      
#line 5816 
      __retres = -22;
      
#line 5816 
      goto return_label;
    }
    else ;
    
#line 5817 
    if (hw_mtu > 1522) {
      
#line 5818 
      hw->features |= 16U;
      
#line 5819 
      hw_mtu = 1916;
    }
    else {
      
#line 5821 
      hw->features &= 4294967279U;
      
#line 5822 
      hw_mtu = 1522;
    }
    
#line 5824 
    hw_mtu = (hw_mtu + 3) & -4;
    
#line 5825 
    hw_priv->mtu = hw_mtu;
    
#line 5826 
    dev->mtu = (unsigned int)new_mtu;
  }
  else ;
  
#line 5828 
  __retres = 0;
  return_label: 
#line 5828 
                return __retres;
}


#line 5841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  int __retres;
  int tmp_1;
  
#line 5843 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5844 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5845 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 5846 
  struct ksz_port *port = & priv->port;
  
#line 5847 
  int result = 0;
  
#line 5848 
  struct mii_ioctl_data *data = if_mii(ifr);
  
#line 5850 
  tmp_1 = down_interruptible(& priv->proc_sem);
  
#line 5850 
  if (tmp_1 != 0) {
    
#line 5851 
    __retres = -512;
    
#line 5851 
    goto return_label;
  }
  else ;
  
#line 5853 
  switch (cmd) {
    int tmp_3;
    bool tmp_2;
    case 35143: 
#line 5855 
    ;
    
#line 5856 
    data->phy_id = (unsigned short)priv->id;
    case 35144: 
#line 5861 
    ;
    
#line 5862 
    if ((int)data->phy_id != priv->id || (unsigned int)data->reg_num > 5U) 
      
#line 5863 
      result = -5; else 
#line 5865 
                        hw_r_phy(hw,(int)(port->linked)->port_id,(unsigned short)((int)data->reg_num),& data->val_out);
    
#line 5867 
    goto ldv_48798;
    case 35145: 
#line 5870 
    ;
    
#line 5871 
    tmp_2 = capable(12);
    
#line 5871 
    if (tmp_2) 
#line 5871 
               tmp_3 = 0; else 
#line 5871 
                               tmp_3 = 1;
    
#line 5871 
    if (tmp_3) 
#line 5872 
               result = -1;
    else 
      
#line 5873 
      if ((int)data->phy_id != priv->id || (unsigned int)data->reg_num > 5U) 
        
#line 5874 
        result = -5; else 
#line 5876 
                          hw_w_phy(hw,(int)(port->linked)->port_id,(unsigned short)((int)data->reg_num),(unsigned short)((int)data->val_in));
    
#line 5878 
    goto ldv_48798;
    default: 
#line 5880 
    ;
    
#line 5881 
    result = -95;
  }
  ldv_48798: 
#line 5884 
  ;
  
#line 5884 
  up(& priv->proc_sem);
  
#line 5886 
  __retres = result;
  return_label: 
#line 5886 
                return __retres;
}


#line 5903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int mdio_read(struct net_device *dev, int phy_id, int reg_num)
{
  int __retres;
  u16 val_out;
  
#line 5905 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5906 
  struct ksz_port *port = & priv->port;
  
#line 5907 
  struct ksz_hw *hw = port->hw;
  
#line 5910 
  hw_r_phy(hw,(int)(port->linked)->port_id,(unsigned short)((int)((unsigned short)reg_num) << 1U),& val_out);
  
#line 5911 
  __retres = (int)val_out;
  
#line 5911 
  return __retres;
}


#line 5923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void mdio_write(struct net_device *dev, int phy_id, int reg_num, int val)
{
  int i;
  int pi;
  
#line 5925 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5926 
  struct ksz_port *port = & priv->port;
  
#line 5927 
  struct ksz_hw *hw = port->hw;
  
#line 5931 
  i = 0;
  
#line 5931 
  pi = port->first_port;
  
#line 5931 
  goto ldv_48822;
  ldv_48821: 
#line 5932 
  ;
  
#line 5932 
  hw_w_phy(hw,pi,(unsigned short)((int)((unsigned short)reg_num) << 1U),(unsigned short)((int)((unsigned short)val)));
  
#line 5931 
  i += 1;
  
#line 5931 
  pi += 1;
  ldv_48822: 
#line 5932 
  ;
  
#line 5931 
  if (port->port_cnt > i) 
#line 5933 
                          goto ldv_48821; else 
#line 5936 
                                               goto ldv_48823;
  ldv_48823: 
#line 5937 
  ;
  
#line 5938 
  return;
}


#line 5941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u16 eeprom_data[64U] = {(unsigned short)0U};

#line 5960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  
#line 5962 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5963 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5965 
  ldv_mutex_lock_92(& hw_priv->lock);
  
#line 5966 
  mii_ethtool_gset(& priv->mii_if,cmd);
  
#line 5967 
  cmd->advertising |= 128U;
  
#line 5968 
  ldv_mutex_unlock_93(& hw_priv->lock);
  
#line 5971 
  priv->advertising = cmd->advertising;
  
#line 5972 
  __retres = 0;
  
#line 5972 
  return __retres;
}


#line 5984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int rc;
  
#line 5986 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 5987 
  struct dev_info *hw_priv = priv->adapter;
  
#line 5988 
  struct ksz_port *port = & priv->port;
  
#line 5989 
  u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
  
#line 5996 
  if ((unsigned int)cmd->autoneg != 0U && priv->advertising == cmd->advertising) {
    
#line 5997 
    cmd->advertising |= 15U;
    
#line 5998 
    if (speed == 10U) 
#line 5999 
                      cmd->advertising &= 4294967283U;
    else 
      
#line 6002 
      if (speed == 100U) 
#line 6003 
                         cmd->advertising &= 4294967292U; else ;
    
#line 6006 
    if ((unsigned int)cmd->duplex == 0U) 
#line 6007 
                                         cmd->advertising &= 4294967285U;
    else 
      
#line 6010 
      if ((unsigned int)cmd->duplex == 1U) 
#line 6011 
                                           cmd->advertising &= 4294967290U; else ;
  }
  else ;
  
#line 6015 
  ldv_mutex_lock_94(& hw_priv->lock);
  
#line 6016 
  if ((unsigned int)cmd->autoneg != 0U && (cmd->advertising & 15U) == 15U) {
    
#line 6019 
    port->duplex = (unsigned char)0U;
    
#line 6020 
    port->speed = (unsigned char)0U;
    
#line 6021 
    port->force_link = (unsigned char)0U;
  }
  else {
    
#line 6023 
    port->duplex = (unsigned char)((unsigned int)cmd->duplex + 1U);
    
#line 6024 
    if (speed != 1000U) 
#line 6025 
                        port->speed = (unsigned char)speed; else ;
    
#line 6026 
    if ((unsigned int)cmd->autoneg != 0U) 
#line 6027 
                                          port->force_link = (unsigned char)0U; else 
                                                                    
#line 6029 
                                                                    port->force_link = (unsigned char)1U;
  }
  
#line 6031 
  rc = mii_ethtool_sset(& priv->mii_if,cmd);
  
#line 6032 
  ldv_mutex_unlock_95(& hw_priv->lock);
  
#line 6033 
  return rc;
}


#line 6044  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_nway_reset(struct net_device *dev)
{
  int rc;
  
#line 6046 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6047 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6050 
  ldv_mutex_lock_96(& hw_priv->lock);
  
#line 6051 
  rc = mii_nway_restart(& priv->mii_if);
  
#line 6052 
  ldv_mutex_unlock_97(& hw_priv->lock);
  
#line 6053 
  return rc;
}


#line 6064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u32 netdev_get_link(struct net_device *dev)
{
  u32 __retres;
  int rc;
  
#line 6066 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6069 
  rc = mii_link_ok(& priv->mii_if);
  
#line 6070 
  __retres = (unsigned int)rc;
  
#line 6070 
  return __retres;
}


#line 6080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 6083 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6084 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6086 
  strlcpy((char *)(& info->driver),"KSZ884X PCI",32UL);
  
#line 6087 
  strlcpy((char *)(& info->version),"1.0.0",32UL);
  
#line 6088 
  tmp_0 = pci_name((struct pci_dev const *)hw_priv->pdev);
  
#line 6088 
  ;
  
#line 6088 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 6089 
  return;
}


#line 6103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct hw_regs hw_regs_range[7U] = {{.start = 0, .end = 44}, {.start = 128, .end = 252}, {.start = 512, .end = 552}, {.start = 1024, .end = 1042}, {.start = 1136, .end = 1170}, {.start = 1232, .end = 1354}, {.start = 0, .end = 0}};

#line 6113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_get_regs_len(struct net_device *dev)
{
  
#line 6115 
  struct hw_regs *range = (struct hw_regs *)(& hw_regs_range);
  
#line 6116 
  int regs_len = 64;
  
#line 6118 
  goto ldv_48867;
  ldv_48866: 
#line 6119 
  ;
  
#line 6119 
  regs_len = (((range->end - range->start) + 3) / 4) * 4 + regs_len;
  
#line 6120 
  range += 1;
  ldv_48867: 
#line 6121 
  ;
  
#line 6118 
  if (range->end > range->start) 
#line 6120 
                                 goto ldv_48866; else 
#line 6123 
                                                      goto ldv_48868;
  ldv_48868: 
#line 6124 
  ;
  
#line 6122 
  return regs_len;
}


#line 6133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *ptr)
{
  int len;
  unsigned int tmp_0;
  
#line 6136 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6137 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6138 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6139 
  int *buf = (int *)ptr;
  
#line 6140 
  struct hw_regs *range = (struct hw_regs *)(& hw_regs_range);
  
#line 6143 
  ldv_mutex_lock_98(& hw_priv->lock);
  
#line 6144 
  regs->version = 0U;
  
#line 6145 
  len = 0;
  
#line 6145 
  goto ldv_48881;
  ldv_48880: 
#line 6146 
  ;
  
#line 6146 
  pci_read_config_dword((struct pci_dev const *)hw_priv->pdev,len,(u32 *)buf);
  
#line 6147 
  buf += 1;
  
#line 6145 
  len += 4;
  ldv_48881: 
#line 6146 
  ;
  
#line 6145 
  if (len <= 63) 
#line 6147 
                 goto ldv_48880; else 
#line 6150 
                                      goto ldv_48882;
  ldv_48882: 
#line 6151 
  ;
  
#line 6149 
  goto ldv_48887;
  ldv_48886: 
#line 6150 
  ;
  
#line 6150 
  len = range->start;
  
#line 6150 
  goto ldv_48884;
  ldv_48883: 
#line 6151 
  ;
  
#line 6151 
  tmp_0 = readl((void const volatile *)(hw->io + len));
  
#line 6151 
  *buf = (int)tmp_0;
  
#line 6152 
  buf += 1;
  
#line 6150 
  len += 4;
  ldv_48884: 
#line 6151 
  ;
  
#line 6150 
  if (range->end > len) 
#line 6152 
                        goto ldv_48883; else 
#line 6155 
                                             goto ldv_48885;
  ldv_48885: 
#line 6156 
  ;
  
#line 6154 
  range += 1;
  ldv_48887: 
#line 6155 
  ;
  
#line 6149 
  if (range->end > range->start) 
#line 6151 
                                 goto ldv_48886; else 
#line 6154 
                                                      goto ldv_48888;
  ldv_48888: 
#line 6155 
  ;
  
#line 6156 
  ldv_mutex_unlock_99(& hw_priv->lock);
  
#line 6157 
  return;
}


#line 6171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 6174 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6175 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6177 
  wol->supported = (unsigned int)hw_priv->wol_support;
  
#line 6178 
  wol->wolopts = (unsigned int)hw_priv->wol_enable;
  
#line 6179 
  memset((void *)(& wol->sopass),0,6UL);
  
#line 6180 
  return;
}


#line 6191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 6194 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6195 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6198 
  u8 const net_addr[4U] = {(unsigned char)192U, (unsigned char)168U, (unsigned char)1U, (unsigned char)1U};
  
#line 6200 
  if ((wol->wolopts & (unsigned int)(~ hw_priv->wol_support)) != 0U) {
    
#line 6201 
    __retres = -22;
    
#line 6201 
    goto return_label;
  }
  else ;
  
#line 6203 
  hw_priv->wol_enable = (int)wol->wolopts;
  
#line 6206 
  if (wol->wolopts != 0U) 
#line 6207 
                          hw_priv->wol_enable |= 1; else ;
  
#line 6208 
  hw_enable_wol(& hw_priv->hw,(unsigned int)hw_priv->wol_enable,(u8 const *)(& net_addr));
  
#line 6209 
  __retres = 0;
  return_label: 
#line 6209 
                return __retres;
}


#line 6220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static u32 netdev_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 6222 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6224 
  __retres = priv->msg_enable;
  
#line 6224 
  return __retres;
}


#line 6234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_set_msglevel(struct net_device *dev, u32 value)
{
  
#line 6236 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6238 
  priv->msg_enable = value;
  
#line 6239 
  return;
}


#line 6249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 6251 
  __retres = 128;
  
#line 6251 
  return __retres;
}


#line 6266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  int i;
  int len;
  
#line 6269 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6270 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6271 
  u8 *eeprom_byte = (u8 *)(& eeprom_data);
  
#line 6275 
  len = (int)(((eeprom->offset + eeprom->len) + 1U) / 2U);
  
#line 6276 
  i = (int)(eeprom->offset / 2U);
  
#line 6276 
  goto ldv_48925;
  ldv_48924: 
#line 6277 
  ;
  
#line 6277 
  eeprom_data[i] = eeprom_read(& hw_priv->hw,(unsigned char)((int)((unsigned char)i)));
  
#line 6276 
  i += 1;
  ldv_48925: 
#line 6277 
  ;
  
#line 6276 
  if (i < len) 
#line 6278 
               goto ldv_48924; else 
#line 6281 
                                    goto ldv_48926;
  ldv_48926: 
#line 6282 
  ;
  
#line 6278 
  eeprom->magic = 279021634U;
  
#line 6279 
  memcpy((void *)data,(void const *)(eeprom_byte + eeprom->offset),(unsigned long)eeprom->len);
  
#line 6281 
  __retres = 0;
  
#line 6281 
  return __retres;
}


#line 6294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  u16 eeprom_word[64U];
  int i;
  int len;
  
#line 6297 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6298 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6300 
  u8 *eeprom_byte = (u8 *)(& eeprom_word);
  
#line 6304 
  if (eeprom->magic != 279021634U) {
    
#line 6305 
    __retres = -22;
    
#line 6305 
    goto return_label;
  }
  else ;
  
#line 6307 
  len = (int)(((eeprom->offset + eeprom->len) + 1U) / 2U);
  
#line 6308 
  i = (int)(eeprom->offset / 2U);
  
#line 6308 
  goto ldv_48939;
  ldv_48938: 
#line 6309 
  ;
  
#line 6309 
  eeprom_data[i] = eeprom_read(& hw_priv->hw,(unsigned char)((int)((unsigned char)i)));
  
#line 6308 
  i += 1;
  ldv_48939: 
#line 6309 
  ;
  
#line 6308 
  if (i < len) 
#line 6310 
               goto ldv_48938; else 
#line 6313 
                                    goto ldv_48940;
  ldv_48940: 
#line 6314 
  ;
  
#line 6310 
  memcpy((void *)(& eeprom_word),(void const *)(& eeprom_data),128UL);
  
#line 6311 
  memcpy((void *)(eeprom_byte + eeprom->offset),(void const *)data,(unsigned long)eeprom->len);
  
#line 6312 
  i = 0;
  
#line 6312 
  goto ldv_48942;
  ldv_48941: 
#line 6313 
  ;
  
#line 6313 
  if ((int)eeprom_word[i] != (int)eeprom_data[i]) {
    
#line 6314 
    eeprom_data[i] = eeprom_word[i];
    
#line 6315 
    eeprom_write(& hw_priv->hw,(unsigned char)((int)((unsigned char)i)),(unsigned short)((int)eeprom_data[i]));
  }
  else ;
  
#line 6312 
  i += 1;
  ldv_48942: 
#line 6313 
  ;
  
#line 6312 
  if (i <= 63) 
#line 6314 
               goto ldv_48941; else 
#line 6317 
                                    goto ldv_48943;
  ldv_48943: 
#line 6318 
  ;
  
#line 6318 
  __retres = 0;
  return_label: 
#line 6318 
                return __retres;
}


#line 6328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  
#line 6331 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6332 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6333 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6335 
  pause->autoneg = (unsigned int)((hw->overrides & 1U) == 0U);
  
#line 6336 
  if (hw->ksz_switch == (struct ksz_switch *)0) {
    
#line 6337 
    pause->rx_pause = (hw->rx_cfg >> 9) & 1U;
    
#line 6339 
    pause->tx_pause = (hw->tx_cfg >> 9) & 1U;
  }
  else {
    int tmp_0;
    int tmp_1;
    
#line 6342 
    tmp_0 = sw_chk(hw,1026U,(unsigned short)4096);
    
#line 6342 
    pause->rx_pause = (unsigned int)(tmp_0 != 0);
    
#line 6345 
    tmp_1 = sw_chk(hw,1026U,(unsigned short)8192);
    
#line 6345 
    pause->tx_pause = (unsigned int)(tmp_1 != 0);
  }
  
#line 6349 
  return;
}


#line 6361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  int __retres;
  
#line 6364 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6365 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6366 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6367 
  struct ksz_port *port = & priv->port;
  
#line 6369 
  ldv_mutex_lock_100(& hw_priv->lock);
  
#line 6370 
  if (pause->autoneg != 0U) {
    
#line 6371 
    if (pause->rx_pause == 0U && pause->tx_pause == 0U) 
#line 6372 
                                                        port->flow_ctrl = (unsigned char)0U; else 
                                                                    
#line 6374 
                                                                    port->flow_ctrl = (unsigned char)1U;
    
#line 6375 
    hw->overrides &= 4294967294U;
    
#line 6376 
    port->force_link = (unsigned char)0U;
    
#line 6377 
    if (hw->ksz_switch != (struct ksz_switch *)0) {
      
#line 6378 
      sw_cfg(hw,1026U,(unsigned short)4096,1);
      
#line 6380 
      sw_cfg(hw,1026U,(unsigned short)8192,1);
    }
    else ;
    
#line 6383 
    port_set_link_speed(port);
  }
  else {
    
#line 6385 
    hw->overrides |= 1U;
    
#line 6386 
    if (hw->ksz_switch != (struct ksz_switch *)0) {
      
#line 6387 
      sw_cfg(hw,1026U,(unsigned short)4096,(int)pause->rx_pause);
      
#line 6389 
      sw_cfg(hw,1026U,(unsigned short)8192,(int)pause->tx_pause);
    }
    else 
#line 6392 
         set_flow_ctrl(hw,(int)pause->rx_pause,(int)pause->tx_pause);
  }
  
#line 6394 
  ldv_mutex_unlock_101(& hw_priv->lock);
  
#line 6396 
  __retres = 0;
  
#line 6396 
  return __retres;
}


#line 6406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ring)
{
  
#line 6409 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6410 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6411 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6413 
  ring->tx_max_pending = 512U;
  
#line 6414 
  ring->tx_pending = (unsigned int)hw->tx_desc_info.alloc;
  
#line 6415 
  ring->rx_max_pending = 512U;
  
#line 6416 
  ring->rx_pending = (unsigned int)hw->rx_desc_info.alloc;
  
#line 6417 
  return;
}


#line 6423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct __anonstruct_ethtool_stats_keys_331 ethtool_stats_keys[34U] = {{.string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'h', (char)'i', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'g', (char)'m', (char)'e', (char)'n', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'s', (char)'y', (char)'m', (char)'b', (char)'o', (char)'l', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'o', (char)'r', (char)'_', (char)'l', (char)'e', (char)'s', (char)'s', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'2', (char)'2', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'o', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'h', (char)'i', (char)'_', (char)'p', (char)'r', (char)'i', (char)'o', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'o', (char)'t', (char)'a', (char)'l', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'c', (char)'e', (char)'s', (char)'s', (char)'i', (char)'v', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'s', (char)'\000'}}};

#line 6470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_strings(struct net_device *dev, u32 stringset, u8 *buf)
{
  
#line 6472 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6473 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6474 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6476 
  if (stringset == 1U) 
#line 6477 
                       memcpy((void *)buf,(void const *)(& ethtool_stats_keys),(unsigned long)(hw->mib_cnt * 32)); else ;
  
#line 6479 
  return;
}


#line 6490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 6492 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6493 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6494 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6496 
  switch (sset) {
    case 1: 
#line 6497 
    ;
    
#line 6498 
    __retres = hw->mib_cnt;
    
#line 6498 
    goto return_label;
    default: 
#line 6499 
    ;
    
#line 6500 
    __retres = -95;
    
#line 6500 
    goto return_label;
  }
  return_label: 
#line 6496 
                return __retres;
}


#line 6512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  int i;
  int n;
  int p;
  int rc;
  u64 counter[34U];
  u64 *tmp_15;
  
#line 6515 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6516 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6517 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6518 
  struct ksz_port *port = & priv->port;
  
#line 6519 
  int n_stats = (int)stats->n_stats;
  
#line 6526 
  ldv_mutex_lock_102(& hw_priv->lock);
  
#line 6527 
  n = 2;
  
#line 6528 
  i = 0;
  
#line 6528 
  p = port->first_port;
  
#line 6528 
  goto ldv_49002;
  ldv_49001: 
#line 6529 
  ;
  
#line 6529 
  if ((unsigned int)hw->port_mib[p].state == 0U) {
    
#line 6530 
    hw_priv->counter[p].read = 1;
    
#line 6533 
    if (n == 2) 
#line 6534 
                n = p; else ;
  }
  else ;
  
#line 6528 
  i += 1;
  
#line 6528 
  p += 1;
  ldv_49002: 
#line 6529 
  ;
  
#line 6528 
  if (port->mib_port_cnt > i) 
#line 6530 
                              goto ldv_49001; else 
#line 6533 
                                                   goto ldv_49003;
  ldv_49003: 
#line 6534 
  ;
  
#line 6537 
  ldv_mutex_unlock_103(& hw_priv->lock);
  
#line 6539 
  if (n <= 1) 
#line 6540 
              ldv_schedule_work_104(& hw_priv->mib_read); else ;
  
#line 6542 
  if (port->mib_port_cnt == 1 && n <= 1) {
    long tmp_4;
    
#line 6543 
    p = n;
    {
      
#line 6544 
      long __ret = 250L;
      
#line 6544 
      __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c",6547,0);
      {
        int tmp_3;
        {
          
#line 6544 
          bool __cond_0 = (_Bool)(hw_priv->counter[p].read == 2);
          
#line 6544 
          if ((int)__cond_0 != 0 && __ret == 0L) 
#line 6544 
                                                 __ret = 1L; else ;
          
#line 6544 
          tmp_3 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
        }
        
#line 6544 
        if (tmp_3 == 0) {
          long tmp_2;
          {
            wait_queue_t __wait;
            
#line 6544 
            long __ret_0 = 250L;
            
#line 6544 
            INIT_LIST_HEAD(& __wait.task_list);
            
#line 6544 
            __wait.flags = 0U;
            ldv_49014: 
#line 6547 
            ;
            {
              int tmp_1;
              
#line 6544 
              long __int = prepare_to_wait_event(& hw_priv->counter[p].counter,& __wait,1);
              {
                
#line 6544 
                bool __cond = (_Bool)(hw_priv->counter[p].read == 2);
                
#line 6544 
                if ((int)__cond != 0 && __ret_0 == 0L) 
#line 6544 
                                                       __ret_0 = 1L; else ;
                
#line 6544 
                tmp_1 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
              }
              
#line 6544 
              if (tmp_1 != 0) 
#line 6544 
                              goto ldv_49013; else ;
              
#line 6544 
              if (__int != 0L) {
                
#line 6544 
                __ret_0 = __int;
                
#line 6544 
                goto ldv_49013;
              }
              else ;
              
#line 6544 
              __ret_0 = schedule_timeout(__ret_0);
            }
            
#line 6544 
            goto ldv_49014;
            ldv_49013: 
#line 6545 
            ;
            
#line 6544 
            finish_wait(& hw_priv->counter[p].counter,& __wait);
            __out_0: 
#line 6544 
            ;
            
#line 6544 
            tmp_2 = __ret_0;
          }
          
#line 6544 
          __ret = tmp_2;
        }
        else ;
      }
      
#line 6544 
      tmp_4 = __ret;
    }
    
#line 6544 
    rc = (int)tmp_4;
  }
  else {
    
#line 6549 
    i = 0;
    
#line 6549 
    p = n;
    
#line 6549 
    goto ldv_49044;
    ldv_49043: 
#line 6550 
    ;
    
#line 6550 
    if (i == 0) {
      long tmp_9;
      {
        
#line 6551 
        long __ret_1 = 500L;
        
#line 6551 
        __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c",6554,0);
        {
          int tmp_8;
          {
            
#line 6551 
            bool __cond_2 = (_Bool)(hw_priv->counter[p].read == 2);
            
#line 6551 
            if ((int)__cond_2 != 0 && __ret_1 == 0L) 
#line 6551 
                                                     __ret_1 = 1L; else ;
            
#line 6551 
            tmp_8 = ((int)__cond_2 != 0 || __ret_1 == 0L) != 0;
          }
          
#line 6551 
          if (tmp_8 == 0) {
            long tmp_7;
            {
              wait_queue_t __wait_0;
              
#line 6551 
              long __ret_2 = 500L;
              
#line 6551 
              INIT_LIST_HEAD(& __wait_0.task_list);
              
#line 6551 
              __wait_0.flags = 0U;
              ldv_49027: 
#line 6554 
              ;
              {
                int tmp_6;
                
#line 6551 
                long __int_0 = prepare_to_wait_event(& hw_priv->counter[p].counter,& __wait_0,1);
                {
                  
#line 6551 
                  bool __cond_1 = (_Bool)(hw_priv->counter[p].read == 2);
                  
#line 6551 
                  if ((int)__cond_1 != 0 && __ret_2 == 0L) 
#line 6551 
                                                           __ret_2 = 1L; else ;
                  
#line 6551 
                  tmp_6 = ((int)__cond_1 != 0 || __ret_2 == 0L) != 0;
                }
                
#line 6551 
                if (tmp_6 != 0) 
#line 6551 
                                goto ldv_49026; else ;
                
#line 6551 
                if (__int_0 != 0L) {
                  
#line 6551 
                  __ret_2 = __int_0;
                  
#line 6551 
                  goto ldv_49026;
                }
                else ;
                
#line 6551 
                __ret_2 = schedule_timeout(__ret_2);
              }
              
#line 6551 
              goto ldv_49027;
              ldv_49026: 
#line 6552 
              ;
              
#line 6551 
              finish_wait(& hw_priv->counter[p].counter,& __wait_0);
              __out_1: 
#line 6551 
              ;
              
#line 6551 
              tmp_7 = __ret_2;
            }
            
#line 6551 
            __ret_1 = tmp_7;
          }
          else ;
        }
        
#line 6551 
        tmp_9 = __ret_1;
      }
      
#line 6551 
      rc = (int)tmp_9;
    }
    else 
      
#line 6555 
      if ((unsigned int)hw->port_mib[p].cnt_ptr != 0U) {
        long tmp_14;
        {
          
#line 6556 
          long __ret_3 = 250L;
          
#line 6556 
          __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c",6559,0);
          {
            int tmp_13;
            {
              
#line 6556 
              bool __cond_4 = (_Bool)(hw_priv->counter[p].read == 2);
              
#line 6556 
              if ((int)__cond_4 != 0 && __ret_3 == 0L) 
#line 6556 
                                                       __ret_3 = 1L; else ;
              
#line 6556 
              tmp_13 = ((int)__cond_4 != 0 || __ret_3 == 0L) != 0;
            }
            
#line 6556 
            if (tmp_13 == 0) {
              long tmp_12;
              {
                wait_queue_t __wait_1;
                
#line 6556 
                long __ret_4 = 250L;
                
#line 6556 
                INIT_LIST_HEAD(& __wait_1.task_list);
                
#line 6556 
                __wait_1.flags = 0U;
                ldv_49040: 
#line 6559 
                ;
                {
                  int tmp_11;
                  
#line 6556 
                  long __int_1 = prepare_to_wait_event(& hw_priv->counter[p].counter,& __wait_1,1);
                  {
                    
#line 6556 
                    bool __cond_3 = (_Bool)(hw_priv->counter[p].read == 2);
                    
#line 6556 
                    if ((int)__cond_3 != 0 && __ret_4 == 0L) 
#line 6556 
                                                             __ret_4 = 1L; else ;
                    
#line 6556 
                    tmp_11 = ((int)__cond_3 != 0 || __ret_4 == 0L) != 0;
                  }
                  
#line 6556 
                  if (tmp_11 != 0) 
#line 6556 
                                   goto ldv_49039; else ;
                  
#line 6556 
                  if (__int_1 != 0L) {
                    
#line 6556 
                    __ret_4 = __int_1;
                    
#line 6556 
                    goto ldv_49039;
                  }
                  else ;
                  
#line 6556 
                  __ret_4 = schedule_timeout(__ret_4);
                }
                
#line 6556 
                goto ldv_49040;
                ldv_49039: 
#line 6557 
                ;
                
#line 6556 
                finish_wait(& hw_priv->counter[p].counter,& __wait_1);
                __out_2: 
#line 6556 
                ;
                
#line 6556 
                tmp_12 = __ret_4;
              }
              
#line 6556 
              __ret_3 = tmp_12;
            }
            else ;
          }
          
#line 6556 
          tmp_14 = __ret_3;
        }
        
#line 6556 
        rc = (int)tmp_14;
      }
      else ;
    
#line 6549 
    i += 1;
    
#line 6549 
    p += 1;
    ldv_49044: 
#line 6550 
    ;
    
#line 6549 
    if (port->mib_port_cnt - n > i) 
#line 6551 
                                    goto ldv_49043; else 
#line 6554 
                                                         goto ldv_49045;
    ldv_49045: 
#line 6555 
    ;
  }
  
#line 6563 
  get_mib_counters(hw,port->first_port,port->mib_port_cnt,(u64 *)(& counter));
  
#line 6564 
  n = hw->mib_cnt;
  
#line 6565 
  if (n > n_stats) 
#line 6566 
                   n = n_stats; else ;
  
#line 6567 
  n_stats -= n;
  
#line 6568 
  i = 0;
  
#line 6568 
  goto ldv_49047;
  ldv_49046: 
#line 6569 
  ;
  
#line 6569 
  tmp_15 = data;
  
#line 6569 
  data += 1;
  
#line 6569 
  *tmp_15 = counter[i];
  
#line 6568 
  i += 1;
  ldv_49047: 
#line 6569 
  ;
  
#line 6568 
  if (i < n) 
#line 6570 
             goto ldv_49046; else 
#line 6573 
                                  goto ldv_49048;
  ldv_49048: 
#line 6574 
  ;
  
#line 6575 
  return;
}


#line 6581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 6584 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6585 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6586 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6588 
  ldv_mutex_lock_105(& hw_priv->lock);
  
#line 6591 
  if ((features & 17179869184ULL) != 0ULL) 
#line 6592 
                                           hw->rx_cfg |= 196608U; else 
                                                                    
#line 6594 
                                                                    hw->rx_cfg &= 4294770687U;
  
#line 6596 
  if ((unsigned int)hw->enabled != 0U) 
#line 6597 
                                       writel(hw->rx_cfg,(void volatile *)(hw->io + 4U)); else ;
  
#line 6599 
  ldv_mutex_unlock_106(& hw_priv->lock);
  
#line 6601 
  __retres = 0;
  
#line 6601 
  return __retres;
}


#line 6604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct ethtool_ops const netdev_ethtool_ops = {.get_settings = & netdev_get_settings, .set_settings = & netdev_set_settings, .get_drvinfo = & netdev_get_drvinfo, .get_regs_len = & netdev_get_regs_len, .get_regs = & netdev_get_regs, .get_wol = & netdev_get_wol, .set_wol = & netdev_set_wol, .get_msglevel = & netdev_get_msglevel, .set_msglevel = & netdev_set_msglevel, .nway_reset = & netdev_nway_reset, .get_link = & netdev_get_link, .get_eeprom_len = & netdev_get_eeprom_len, .get_eeprom = & netdev_get_eeprom, .set_eeprom = & netdev_set_eeprom, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & netdev_get_ringparam, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & netdev_get_pauseparam, .set_pauseparam = & netdev_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & netdev_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & netdev_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & netdev_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 6631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void update_link(struct net_device *dev, struct dev_priv *priv, struct ksz_port *port)
{
  
#line 6634 
  if ((unsigned int)priv->media_state != (port->linked)->state) {
    bool tmp;
    
#line 6635 
    priv->media_state = (int)(port->linked)->state;
    
#line 6636 
    tmp = netif_running((struct net_device const *)dev);
    
#line 6636 
    if ((int)tmp != 0) 
#line 6637 
                       set_media_state(dev,0); else ;
  }
  else ;
  
#line 6639 
  return;
}


#line 6641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void mib_read_work(struct work_struct *work)
{
  struct dev_info *tmp;
  struct ksz_port_mib *mib;
  int i;
  {
    
#line 6644 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6644 
    tmp = (struct dev_info *)__mptr + 18446744073709549888U;
  }
  
#line 6643 
  struct dev_info *hw_priv = tmp;
  
#line 6645 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6649 
  next_jiffies = jiffies;
  
#line 6650 
  i = 0;
  
#line 6650 
  goto ldv_49079;
  ldv_49078: 
#line 6651 
  ;
  
#line 6651 
  mib = & hw->port_mib[i];
  
#line 6654 
  if ((unsigned int)mib->cnt_ptr != 0U || hw_priv->counter[i].read == 1) {
    int tmp_0;
    
#line 6657 
    tmp_0 = port_r_cnt(hw,i);
    
#line 6657 
    if (tmp_0 != 0) 
#line 6658 
                    goto ldv_49071; else ;
    
#line 6659 
    hw_priv->counter[i].read = 0;
    
#line 6662 
    if ((unsigned int)mib->cnt_ptr == 0U) {
      
#line 6663 
      hw_priv->counter[i].read = 2;
      
#line 6664 
      __wake_up(& hw_priv->counter[i].counter,1U,1,(void *)0);
    }
    else ;
  }
  else {
    int tmp_1;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 6667 
      tmp_1 = 1;
    }
    
#line 6667 
    if (tmp_1 != 0) {
      int tmp_2;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 6667 
        tmp_2 = 1;
      }
      
#line 6667 
      if (tmp_2 != 0) {
        
#line 6667 
        if ((long)(jiffies - hw_priv->counter[i].time) >= 0L) {
          
#line 6669 
          if ((unsigned int)mib->state == 0U) 
#line 6670 
                                              hw_priv->counter[i].read = 1; else ;
          
#line 6671 
          next_jiffies = (unsigned long)(hw->mib_port_cnt * 250) + next_jiffies;
          
#line 6672 
          hw_priv->counter[i].time = next_jiffies;
        }
        else 
#line 6667 
             goto _LAND_0;
      }
      else 
#line 6667 
           goto _LAND_0;
    }
    else {
      _LAND_0: 
#line 6675 
      ;
      
#line 6675 
      if ((unsigned int)mib->link_down != 0U) {
        
#line 6676 
        mib->link_down = (unsigned char)0U;
        
#line 6679 
        hw_priv->counter[i].read = 1;
      }
      else ;
    }
  }
  
#line 6650 
  i += 1;
  ldv_49079: 
#line 6651 
  ;
  
#line 6650 
  if (hw->mib_port_cnt > i) 
#line 6652 
                            goto ldv_49078; else 
#line 6655 
                                                 goto ldv_49071;
  ldv_49071: 
#line 6656 
  ;
  
#line 6657 
  return;
}


#line 6684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void mib_monitor(unsigned long ptr)
{
  
#line 6686 
  struct dev_info *hw_priv = (struct dev_info *)ptr;
  
#line 6688 
  mib_read_work(& hw_priv->mib_read);
  
#line 6691 
  if (hw_priv->pme_wait != 0UL) {
    int tmp;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 6692 
      tmp = 1;
    }
    
#line 6692 
    if (tmp != 0) {
      int tmp_0;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 6692 
        tmp_0 = 1;
      }
      
#line 6692 
      if (tmp_0 != 0) {
        
#line 6692 
        if ((long)(jiffies - hw_priv->pme_wait) >= 0L) {
          
#line 6693 
          hw_clr_wol_pme_status(& hw_priv->hw);
          
#line 6694 
          hw_priv->pme_wait = 0UL;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else {
    int tmp_1;
    
#line 6696 
    tmp_1 = hw_chk_wol_pme_status(& hw_priv->hw);
    
#line 6696 
    if (tmp_1 != 0) 
#line 6699 
                    hw_priv->pme_wait = jiffies + 500UL; else ;
  }
  
#line 6702 
  ksz_update_timer(& hw_priv->mib_timer_info);
  
#line 6703 
  return;
}


#line 6711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void dev_monitor(unsigned long ptr)
{
  
#line 6713 
  struct net_device *dev = (struct net_device *)ptr;
  
#line 6714 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6715 
  struct dev_info *hw_priv = priv->adapter;
  
#line 6716 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 6717 
  struct ksz_port *port = & priv->port;
  
#line 6719 
  if ((hw->features & 1U) == 0U) 
#line 6720 
                                 port_get_link_speed(port); else ;
  
#line 6721 
  update_link(dev,priv,port);
  
#line 6723 
  ksz_update_timer(& priv->monitor_timer_info);
  
#line 6724 
  return;
}


#line 6732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int msg_enable;

#line 6734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static char *macaddr = (char *)":";

#line 6735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static char *mac1addr = (char *)":";

#line 6746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int multi_dev;

#line 6768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int fast_aging;

#line 6778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int netdev_init(struct net_device *dev)
{
  int __retres;
  
#line 6780 
  struct dev_priv *priv = netdev_priv((struct net_device const *)dev);
  
#line 6783 
  ksz_init_timer(& priv->monitor_timer_info,125,& dev_monitor,(void *)dev);
  
#line 6787 
  dev->watchdog_timeo = 125;
  
#line 6789 
  dev->hw_features = 17179869187ULL;
  
#line 6795 
  dev->hw_features |= 16ULL;
  
#line 6797 
  dev->features |= dev->hw_features;
  
#line 6799 
  sema_init(& priv->proc_sem,1);
  
#line 6801 
  priv->mii_if.phy_id_mask = 1;
  
#line 6802 
  priv->mii_if.reg_num_mask = 7;
  
#line 6803 
  priv->mii_if.dev = dev;
  
#line 6804 
  priv->mii_if.mdio_read = & mdio_read;
  
#line 6805 
  priv->mii_if.mdio_write = & mdio_write;
  
#line 6806 
  priv->mii_if.phy_id = priv->port.first_port + 1;
  
#line 6808 
  priv->msg_enable = netif_msg_init(msg_enable,7);
  
#line 6811 
  __retres = 0;
  
#line 6811 
  return __retres;
}


#line 6814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct net_device_ops const netdev_ops = {.ndo_init = & netdev_init, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & netdev_open, .ndo_stop = & netdev_close, .ndo_start_xmit = & netdev_tx, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & netdev_set_rx_mode, .ndo_set_mac_address = & netdev_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & netdev_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & netdev_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & netdev_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & netdev_query_statistics, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & netdev_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & netdev_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 6832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void netdev_free(struct net_device *dev)
{
  
#line 6834 
  if (dev->watchdog_timeo != 0) 
#line 6835 
                                ldv_unregister_netdev_107(dev); else ;
  
#line 6837 
  ldv_free_netdev_108(dev);
  
#line 6838 
  return;
}


#line 6845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int net_device_present;

#line 6847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void get_mac_addr(struct dev_info *hw_priv, u8 *macaddr_0, int port)
{
  int i;
  int j;
  int got_num;
  int num;
  
#line 6854 
  got_num = 0;
  
#line 6854 
  num = got_num;
  
#line 6854 
  j = num;
  
#line 6854 
  i = j;
  
#line 6855 
  goto ldv_49128;
  ldv_49127: 
#line 6856 
  ;
  
#line 6856 
  if ((unsigned int)*(macaddr_0 + i) != 0U) {
    int digit;
    
#line 6859 
    got_num = 1;
    
#line 6860 
    digit = hex_to_bin((char)((int)((char)*(macaddr_0 + i))));
    
#line 6861 
    if (digit >= 0) 
#line 6862 
                    num = num * 16 + digit;
    else 
      
#line 6863 
      if ((unsigned int)*(macaddr_0 + i) == 58U) 
#line 6864 
                                                 got_num = 2; else 
#line 6866 
                                                                   goto ldv_49126;
  }
  else 
    
#line 6867 
    if (got_num != 0) 
#line 6868 
                      got_num = 2; else 
#line 6870 
                                        goto ldv_49126;
  
#line 6871 
  if (got_num == 2) {
    
#line 6872 
    if (port == 0) {
      int tmp;
      
#line 6873 
      tmp = j;
      
#line 6873 
      j += 1;
      
#line 6873 
      hw_priv->hw.override_addr[tmp] = (unsigned char)num;
      
#line 6874 
      hw_priv->hw.override_addr[5] = (unsigned char)((int)hw_priv->hw.override_addr[5] + (int)((unsigned char)hw_priv->hw.id));
    }
    else {
      int tmp_0;
      
#line 6877 
      tmp_0 = j;
      
#line 6877 
      j += 1;
      
#line 6877 
      (hw_priv->hw.ksz_switch)->other_addr[tmp_0] = (unsigned char)num;
      
#line 6879 
      (hw_priv->hw.ksz_switch)->other_addr[5] = (unsigned char)((int)(hw_priv->hw.ksz_switch)->other_addr[5] + (int)((unsigned char)hw_priv->hw.id));
    }
    
#line 6882 
    got_num = 0;
    
#line 6882 
    num = got_num;
  }
  else ;
  
#line 6884 
  i += 1;
  ldv_49128: 
#line 6885 
  ;
  
#line 6855 
  if (j <= 5) 
#line 6857 
              goto ldv_49127; else 
#line 6860 
                                   goto ldv_49126;
  ldv_49126: 
#line 6861 
  ;
  
#line 6886 
  if (j == 6) {
    
#line 6887 
    if (port == 0) 
#line 6888 
                   hw_priv->hw.mac_override = (unsigned char)1U; else ;
  }
  else ;
  
#line 6889 
  return;
}


#line 6894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void read_other_addr(struct ksz_hw *hw)
{
  int i;
  u16 data[3U];
  
#line 6898 
  struct ksz_switch *sw = hw->ksz_switch;
  
#line 6900 
  i = 0;
  
#line 6900 
  goto ldv_49136;
  ldv_49135: 
#line 6901 
  ;
  
#line 6901 
  data[i] = eeprom_read(hw,(unsigned char)((int)((unsigned int)((unsigned char)i) + 9U)));
  
#line 6900 
  i += 1;
  ldv_49136: 
#line 6901 
  ;
  
#line 6900 
  if (i <= 2) 
#line 6902 
              goto ldv_49135; else 
#line 6905 
                                   goto ldv_49137;
  ldv_49137: 
#line 6906 
  ;
  
#line 6902 
  if ((((unsigned int)data[0] != 0U || (unsigned int)data[1] != 0U) || (unsigned int)data[2] != 0U) && (unsigned int)data[0] != 65535U) {
    
#line 6903 
    sw->other_addr[5] = (unsigned char)data[0];
    
#line 6904 
    sw->other_addr[4] = (unsigned char)((int)data[0] >> 8);
    
#line 6905 
    sw->other_addr[3] = (unsigned char)data[1];
    
#line 6906 
    sw->other_addr[2] = (unsigned char)((int)data[1] >> 8);
    
#line 6907 
    sw->other_addr[1] = (unsigned char)data[2];
    
#line 6908 
    sw->other_addr[0] = (unsigned char)((int)data[2] >> 8);
  }
  else ;
  
#line 6910 
  return;
}


#line 6916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int pcidev_init(struct pci_dev *pdev, struct pci_device_id const *id)
{
  int __retres;
  struct net_device *dev;
  struct dev_priv *priv;
  struct dev_info *hw_priv;
  struct ksz_hw *hw;
  struct platform_info *info;
  struct ksz_port *port;
  unsigned long reg_base;
  unsigned long reg_len;
  int cnt;
  int i;
  int mib_port_count;
  int pi;
  int port_count;
  int result;
  char banner[39U];
  int tmp;
  resource_size_t tmp_1;
  struct resource *tmp_2;
  int tmp_5;
  int tmp_7;
  int tmp_9;
  
#line 6933 
  struct ksz_switch *sw = (struct ksz_switch *)0;
  
#line 6935 
  result = pci_enable_device(pdev);
  
#line 6936 
  if (result != 0) {
    
#line 6937 
    __retres = result;
    
#line 6937 
    goto return_label;
  }
  else ;
  
#line 6939 
  result = -19;
  
#line 6941 
  tmp = pci_set_dma_mask(pdev,4294967295ULL);
  
#line 6941 
  if (tmp != 0) {
    
#line 6943 
    __retres = result;
    
#line 6943 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 6941 
    tmp_0 = pci_set_consistent_dma_mask(pdev,4294967295ULL);
    
#line 6941 
    if (tmp_0 != 0) {
      
#line 6943 
      __retres = result;
      
#line 6943 
      goto return_label;
    }
    else ;
  }
  
#line 6945 
  reg_base = (unsigned long)pdev->resource[0].start;
  
#line 6946 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 6946 
    tmp_1 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 6946 
                                                                    tmp_1 = 0ULL;
  
#line 6946 
  reg_len = (unsigned long)tmp_1;
  
#line 6947 
  if ((pdev->resource[0].flags & 256UL) != 0UL) {
    
#line 6948 
    __retres = result;
    
#line 6948 
    goto return_label;
  }
  else ;
  
#line 6950 
  tmp_2 = __request_region(& iomem_resource,(unsigned long long)reg_base,(unsigned long long)reg_len,"KSZ884X PCI",0);
  
#line 6950 
  if (tmp_2 == (struct resource *)0) {
    
#line 6951 
    __retres = result;
    
#line 6951 
    goto return_label;
  }
  else ;
  
#line 6952 
  pci_set_master(pdev);
  
#line 6954 
  result = -12;
  
#line 6956 
  info = (struct platform_info *)kzalloc(2384UL,208U);
  
#line 6957 
  if (info == (struct platform_info *)0) 
#line 6958 
                                         goto pcidev_init_dev_err; else ;
  
#line 6960 
  hw_priv = & info->dev_info;
  
#line 6961 
  hw_priv->pdev = pdev;
  
#line 6963 
  hw = & hw_priv->hw;
  
#line 6965 
  hw->io = ioremap((unsigned long long)reg_base,reg_len);
  
#line 6966 
  if (hw->io == (void *)0) 
#line 6967 
                           goto pcidev_init_io_err; else ;
  
#line 6969 
  cnt = hw_init(hw);
  
#line 6970 
  if (cnt == 0) {
    
#line 6971 
    if ((msg_enable & 2) != 0) 
#line 6972 
                               printk("\001"); else ;
    
#line 6973 
    result = -19;
    
#line 6974 
    goto pcidev_init_alloc_err;
  }
  else ;
  
#line 6977 
  snprintf((char *)(& banner),39UL,"%s",(char *)(& version));
  
#line 6978 
  banner[13] = (char)((unsigned int)cnt + 48U);
  
#line 6979 
  _dev_info((struct device const *)(& (hw_priv->pdev)->dev),"%s\n",(char *)(& banner));
  {
    
#line 6980 
    struct _ddebug descriptor = {.modname = "ksz884x", .function = "pcidev_init", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c", .format = "Mem = %p; IRQ = %d\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))6980U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 6980 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 6980 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)(& (hw_priv->pdev)->dev),"Mem = %p; IRQ = %d\n",hw->io,pdev->irq); else ;
  }
  
#line 6983 
  hw->dev_count = 1;
  
#line 6984 
  port_count = 1;
  
#line 6985 
  mib_port_count = 1;
  
#line 6986 
  hw->addr_list_size = (unsigned char)0U;
  
#line 6987 
  hw->mib_cnt = 32;
  
#line 6988 
  hw->mib_port_cnt = 1;
  
#line 6991 
  if (cnt == 2) {
    
#line 6992 
    if (fast_aging != 0) 
#line 6993 
                         hw->overrides |= 2U; else ;
    
#line 6995 
    hw->mib_cnt = 34;
    
#line 6998 
    if (multi_dev != 0) {
      
#line 6999 
      hw->dev_count = 2;
      
#line 7000 
      hw->addr_list_size = (unsigned char)1U;
    }
    else ;
    
#line 7004 
    if (hw->dev_count == 1) {
      
#line 7005 
      port_count = 2;
      
#line 7006 
      mib_port_count = 2;
    }
    else ;
    
#line 7008 
    hw->mib_port_cnt = 3;
    
#line 7009 
    hw->ksz_switch = (struct ksz_switch *)kzalloc(368UL,208U);
    
#line 7010 
    if (hw->ksz_switch == (struct ksz_switch *)0) 
#line 7011 
                                                  goto pcidev_init_alloc_err; else ;
    
#line 7013 
    sw = hw->ksz_switch;
  }
  else ;
  
#line 7015 
  i = 0;
  
#line 7015 
  goto ldv_49164;
  ldv_49163: 
#line 7016 
  ;
  
#line 7016 
  hw->port_mib[i].mib_start = (unsigned char)0U;
  
#line 7015 
  i += 1;
  ldv_49164: 
#line 7016 
  ;
  
#line 7015 
  if (hw->mib_port_cnt > i) 
#line 7017 
                            goto ldv_49163; else 
#line 7020 
                                                 goto ldv_49165;
  ldv_49165: 
#line 7021 
  ;
  
#line 7018 
  hw->parent = (void *)hw_priv;
  
#line 7021 
  hw_priv->mtu = 1524;
  
#line 7023 
  tmp_5 = ksz_alloc_mem(hw_priv);
  
#line 7023 
  if (tmp_5 != 0) 
#line 7024 
                  goto pcidev_init_mem_err; else ;
  
#line 7026 
  hw_priv->hw.id = net_device_present;
  
#line 7028 
  spinlock_check(& hw_priv->hwlock);
  {
    struct lock_class_key __key;
    
#line 7028 
    __raw_spin_lock_init(& hw_priv->hwlock.__anonCompField_spinlock_18.rlock,"&(&hw_priv->hwlock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 7029 
    __mutex_init(& hw_priv->lock,"&hw_priv->lock",& __key_0);
  }
  
#line 7031 
  i = 0;
  
#line 7031 
  goto ldv_49171;
  ldv_49170: 
#line 7032 
  ;
  {
    struct lock_class_key __key_1;
    
#line 7032 
    __init_waitqueue_head(& hw_priv->counter[i].counter,"&hw_priv->counter[i].counter",& __key_1);
  }
  
#line 7031 
  i += 1;
  ldv_49171: 
#line 7032 
  ;
  
#line 7031 
  if (i <= 2) 
#line 7033 
              goto ldv_49170; else 
#line 7036 
                                   goto ldv_49172;
  ldv_49172: 
#line 7037 
  ;
  
#line 7034 
  if ((int)*macaddr != 58) 
#line 7035 
                           get_mac_addr(hw_priv,(u8 *)macaddr,0); else ;
  
#line 7038 
  hw_read_addr(hw);
  
#line 7041 
  if (hw->dev_count > 1) {
    
#line 7042 
    memcpy((void *)(& sw->other_addr),(void const *)(& hw->override_addr),6UL);
    
#line 7043 
    read_other_addr(hw);
    
#line 7044 
    if ((int)*mac1addr != 58) 
#line 7045 
                              get_mac_addr(hw_priv,(u8 *)mac1addr,1); else ;
  }
  else ;
  
#line 7048 
  hw_setup(hw);
  
#line 7049 
  if (hw->ksz_switch != (struct ksz_switch *)0) 
#line 7050 
                                                sw_setup(hw);
  else {
    
#line 7052 
    hw_priv->wol_support = 63;
    
#line 7053 
    hw_priv->wol_enable = 0;
  }
  {
    struct lock_class_key __key_2;
    
#line 7056 
    __init_work(& hw_priv->mib_read,0);
    
#line 7056 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 7056 
    hw_priv->mib_read.data = __constr_expr_37;
    
#line 7056 
    lockdep_init_map(& hw_priv->mib_read.lockdep_map,"(&hw_priv->mib_read)",& __key_2,0);
    
#line 7056 
    INIT_LIST_HEAD(& hw_priv->mib_read.entry);
    
#line 7056 
    hw_priv->mib_read.func = & mib_read_work;
  }
  
#line 7059 
  ksz_init_timer(& hw_priv->mib_timer_info,125,& mib_monitor,(void *)hw_priv);
  
#line 7062 
  i = 0;
  
#line 7062 
  goto ldv_49180;
  ldv_49179: 
#line 7063 
  ;
  
#line 7063 
  dev = ldv_alloc_etherdev_mqs_109(392,1U,1U);
  
#line 7064 
  if (dev == (struct net_device *)0) 
#line 7065 
                                     goto pcidev_init_reg_err; else ;
  
#line 7066 
  dev->dev.parent = & pdev->dev;
  
#line 7067 
  info->netdev[i] = dev;
  
#line 7069 
  priv = (struct dev_priv *)netdev_priv((struct net_device const *)dev);
  
#line 7070 
  priv->adapter = hw_priv;
  
#line 7071 
  tmp_7 = net_device_present;
  
#line 7071 
  net_device_present += 1;
  
#line 7071 
  priv->id = tmp_7;
  
#line 7073 
  port = & priv->port;
  
#line 7074 
  port->port_cnt = port_count;
  
#line 7075 
  port->mib_port_cnt = mib_port_count;
  
#line 7076 
  port->first_port = i;
  
#line 7077 
  port->flow_ctrl = (unsigned char)1U;
  
#line 7079 
  port->hw = hw;
  
#line 7080 
  port->linked = & hw->port_info[port->first_port];
  
#line 7082 
  cnt = 0;
  
#line 7082 
  pi = i;
  
#line 7082 
  goto ldv_49177;
  ldv_49176: 
#line 7083 
  ;
  
#line 7083 
  hw->port_info[pi].port_id = (unsigned char)pi;
  
#line 7084 
  hw->port_info[pi].pdev = (void *)dev;
  
#line 7085 
  hw->port_info[pi].state = 1U;
  
#line 7082 
  cnt += 1;
  
#line 7082 
  pi += 1;
  ldv_49177: 
#line 7083 
  ;
  
#line 7082 
  if (cnt < port_count) 
#line 7084 
                        goto ldv_49176; else 
#line 7087 
                                             goto ldv_49178;
  ldv_49178: 
#line 7088 
  ;
  
#line 7088 
  dev->mem_start = (unsigned long)hw->io;
  
#line 7089 
  dev->mem_end = (dev->mem_start + reg_len) + 18446744073709551615UL;
  
#line 7090 
  dev->irq = (int)pdev->irq;
  
#line 7091 
  if (i == 0) 
#line 7092 
              memcpy((void *)dev->dev_addr,(void const *)(& hw_priv->hw.override_addr),6UL);
  else {
    bool tmp_8;
    
#line 7095 
    memcpy((void *)dev->dev_addr,(void const *)(& sw->other_addr),6UL);
    
#line 7096 
    tmp_8 = ether_addr_equal((u8 const *)(& sw->other_addr),(u8 const *)(& hw->override_addr));
    
#line 7096 
    if ((int)tmp_8 != 0) 
#line 7097 
                         *(dev->dev_addr + 5U) = (unsigned char)((int)*(dev->dev_addr + 5U) + (int)((unsigned char)port->first_port)); else ;
  }
  
#line 7100 
  dev->netdev_ops = & netdev_ops;
  
#line 7101 
  dev->ethtool_ops = & netdev_ethtool_ops;
  
#line 7102 
  tmp_9 = ldv_register_netdev_110(dev);
  
#line 7102 
  if (tmp_9 != 0) 
#line 7103 
                  goto pcidev_init_reg_err; else ;
  
#line 7104 
  port_set_power_saving(port,1);
  
#line 7062 
  i += 1;
  ldv_49180: 
#line 7063 
  ;
  
#line 7062 
  if (hw->dev_count > i) 
#line 7064 
                         goto ldv_49179; else 
#line 7067 
                                              goto ldv_49181;
  ldv_49181: 
#line 7068 
  ;
  
#line 7107 
  pci_dev_get(hw_priv->pdev);
  
#line 7108 
  pci_set_drvdata(pdev,(void *)info);
  
#line 7109 
  __retres = 0;
  
#line 7109 
  goto return_label;
  pcidev_init_reg_err: 
#line 7111 
  ;
  
#line 7112 
  i = 0;
  
#line 7112 
  goto ldv_49183;
  ldv_49182: 
#line 7113 
  ;
  
#line 7113 
  if (info->netdev[i] != (struct net_device *)0) {
    
#line 7114 
    netdev_free(info->netdev[i]);
    
#line 7115 
    info->netdev[i] = (struct net_device *)0;
  }
  else ;
  
#line 7112 
  i += 1;
  ldv_49183: 
#line 7113 
  ;
  
#line 7112 
  if (hw->dev_count > i) 
#line 7114 
                         goto ldv_49182; else 
#line 7117 
                                              goto ldv_49184;
  ldv_49184: 
#line 7118 
  ;
  pcidev_init_mem_err: 
#line 7119 
  ;
  
#line 7120 
  ksz_free_mem(hw_priv);
  
#line 7121 
  kfree((void const *)hw->ksz_switch);
  pcidev_init_alloc_err: 
#line 7123 
  ;
  
#line 7124 
  iounmap((void volatile *)hw->io);
  pcidev_init_io_err: 
#line 7126 
  ;
  
#line 7127 
  kfree((void const *)info);
  pcidev_init_dev_err: 
#line 7129 
  ;
  
#line 7130 
  __release_region(& iomem_resource,(unsigned long long)reg_base,(unsigned long long)reg_len);
  
#line 7132 
  __retres = result;
  return_label: 
#line 7132 
                return __retres;
}


#line 7135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void pcidev_exit(struct pci_dev *pdev)
{
  int i;
  resource_size_t tmp_0;
  
#line 7138 
  struct platform_info *info = pci_get_drvdata(pdev);
  
#line 7139 
  struct dev_info *hw_priv = & info->dev_info;
  
#line 7141 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 7141 
    tmp_0 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 7141 
                                                                    tmp_0 = 0ULL;
  
#line 7141 
  ;
  
#line 7141 
  __release_region(& iomem_resource,pdev->resource[0].start,tmp_0);
  
#line 7143 
  i = 0;
  
#line 7143 
  goto ldv_49192;
  ldv_49191: 
#line 7144 
  ;
  
#line 7144 
  if (info->netdev[i] != (struct net_device *)0) 
#line 7145 
                                                 netdev_free(info->netdev[i]); else ;
  
#line 7143 
  i += 1;
  ldv_49192: 
#line 7144 
  ;
  
#line 7143 
  if (hw_priv->hw.dev_count > i) 
#line 7145 
                                 goto ldv_49191; else 
#line 7148 
                                                      goto ldv_49193;
  ldv_49193: 
#line 7149 
  ;
  
#line 7147 
  if (hw_priv->hw.io != (void *)0) 
#line 7148 
                                   iounmap((void volatile *)hw_priv->hw.io); else ;
  
#line 7149 
  ksz_free_mem(hw_priv);
  
#line 7150 
  kfree((void const *)hw_priv->hw.ksz_switch);
  
#line 7151 
  pci_dev_put(hw_priv->pdev);
  
#line 7152 
  kfree((void const *)info);
  
#line 7153 
  return;
}


#line 7156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int pcidev_resume(struct pci_dev *pdev)
{
  int __retres;
  int i;
  
#line 7159 
  struct platform_info *info = pci_get_drvdata(pdev);
  
#line 7160 
  struct dev_info *hw_priv = & info->dev_info;
  
#line 7161 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 7163 
  pci_set_power_state(pdev,0);
  
#line 7164 
  pci_restore_state(pdev);
  
#line 7165 
  pci_enable_wake(pdev,0,(_Bool)0);
  
#line 7167 
  if (hw_priv->wol_enable != 0) 
#line 7168 
                                hw_cfg_wol_pme(hw,0); else ;
  
#line 7169 
  i = 0;
  
#line 7169 
  goto ldv_49203;
  ldv_49202: 
#line 7170 
  ;
  
#line 7170 
  if (info->netdev[i] != (struct net_device *)0) {
    bool tmp_0;
    
#line 7171 
    struct net_device *dev = info->netdev[i];
    
#line 7173 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 7173 
    if ((int)tmp_0 != 0) {
      
#line 7174 
      netdev_open(dev);
      
#line 7175 
      netif_device_attach(dev);
    }
    else ;
  }
  else ;
  
#line 7169 
  i += 1;
  ldv_49203: 
#line 7170 
  ;
  
#line 7169 
  if (hw->dev_count > i) 
#line 7171 
                         goto ldv_49202; else 
#line 7174 
                                              goto ldv_49204;
  ldv_49204: 
#line 7175 
  ;
  
#line 7179 
  __retres = 0;
  
#line 7179 
  return __retres;
}


#line 7182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int pcidev_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  int i;
  pci_power_t tmp_1;
  pci_power_t tmp_2;
  
#line 7185 
  struct platform_info *info = pci_get_drvdata(pdev);
  
#line 7186 
  struct dev_info *hw_priv = & info->dev_info;
  
#line 7187 
  struct ksz_hw *hw = & hw_priv->hw;
  
#line 7190 
  u8 const net_addr[4U] = {(unsigned char)192U, (unsigned char)168U, (unsigned char)1U, (unsigned char)1U};
  
#line 7192 
  i = 0;
  
#line 7192 
  goto ldv_49216;
  ldv_49215: 
#line 7193 
  ;
  
#line 7193 
  if (info->netdev[i] != (struct net_device *)0) {
    bool tmp_0;
    
#line 7194 
    struct net_device *dev = info->netdev[i];
    
#line 7196 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 7196 
    if ((int)tmp_0 != 0) {
      
#line 7197 
      netif_device_detach(dev);
      
#line 7198 
      netdev_close(dev);
    }
    else ;
  }
  else ;
  
#line 7192 
  i += 1;
  ldv_49216: 
#line 7193 
  ;
  
#line 7192 
  if (hw->dev_count > i) 
#line 7194 
                         goto ldv_49215; else 
#line 7197 
                                              goto ldv_49217;
  ldv_49217: 
#line 7198 
  ;
  
#line 7202 
  if (hw_priv->wol_enable != 0) {
    
#line 7203 
    hw_enable_wol(hw,(unsigned int)hw_priv->wol_enable,(u8 const *)(& net_addr));
    
#line 7204 
    hw_cfg_wol_pme(hw,1);
  }
  else ;
  
#line 7207 
  pci_save_state(pdev);
  
#line 7208 
  tmp_1 = pci_choose_state(pdev,state);
  
#line 7208 
  ;
  
#line 7208 
  pci_enable_wake(pdev,tmp_1,(_Bool)1);
  
#line 7209 
  tmp_2 = pci_choose_state(pdev,state);
  
#line 7209 
  ;
  
#line 7209 
  pci_set_power_state(pdev,tmp_2);
  
#line 7210 
  __retres = 0;
  
#line 7210 
  return __retres;
}


#line 7214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static char pcidev_name[9U] = {(char)'k', (char)'s', (char)'z', (char)'8', (char)'8', (char)'4', (char)'x', (char)'p', (char)'\000'};

#line 7216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct pci_device_id const pcidev_table[3U] = {{.vendor = 5830U, .device = 34881U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5830U, .device = 34882U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 7224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
struct pci_device_id const __mod_pci__pcidev_table_device_table[3U];

#line 7226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static struct pci_driver pci_device_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& pcidev_name), .id_table = (struct pci_device_id const *)(& pcidev_table), .probe = & pcidev_init, .remove = & pcidev_exit, .suspend = & pcidev_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & pcidev_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 7237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static int pci_device_driver_init(void)
{
  int tmp;
  
#line 7237 
  tmp = ldv___pci_register_driver_111(& pci_device_driver,& __this_module,"ksz884x");
  
#line 7237 
  return tmp;
}


#line 7237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/micrel/ksz884x.c"
static void pci_device_driver_exit(void)
{
  
#line 7237 
  ldv_pci_unregister_driver_112(& pci_device_driver);
  
#line 7238 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int (*ldv_emg_alias_eth_validate_addr_9)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = & tx_proc_task;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
struct pci_driver *ldv_emg_alias_pci_device_driver_2 = & pci_device_driver;

#line 61 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 62 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 63 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 67 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 68 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 69 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 70 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 71 
_Bool ldv_emg_flush_work(struct work_struct *arg0);


#line 72 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 73 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 78 
  tmp = netdev_set_features(arg0,arg1);
  
#line 78 
  return tmp;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 83 
  tmp = netdev_get_eeprom(arg0,arg1,arg2);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
unsigned int ldv_emg_wrapper_netdev_get_msglevel_14(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 88 
  tmp = netdev_get_msglevel(arg0);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_ioctl_21(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 93 
  tmp = netdev_ioctl(arg0,arg1,arg2);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_tx_timeout_18(struct net_device *arg0)
{
  
#line 98 
  netdev_tx_timeout(arg0);
  
#line 99 
  return;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
enum netdev_tx ldv_emg_wrapper_netdev_tx_15(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 103 
  tmp = netdev_tx(arg0,arg1);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_netpoll_31(struct net_device *arg0)
{
  
#line 108 
  netdev_netpoll(arg0);
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_strings_19(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 113 
  netdev_get_strings(arg0,arg1,arg2);
  
#line 114 
  return;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
unsigned int ldv_emg_wrapper_netdev_get_link_10(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 118 
  tmp = netdev_get_link(arg0);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 123 
  tmp = netdev_close(arg0);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_pcidev_exit_4(struct pci_dev *arg0)
{
  
#line 128 
  pcidev_exit(arg0);
  
#line 129 
  return;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_wol_20(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 133 
  netdev_get_wol(arg0,arg1);
  
#line 134 
  return;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_set_msglevel_27(struct net_device *arg0, unsigned int arg1)
{
  
#line 138 
  netdev_set_msglevel(arg0,arg1);
  
#line 139 
  return;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 143 
  tmp = netdev_set_settings(arg0,arg1);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_get_settings_17(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 148 
  tmp = netdev_get_settings(arg0,arg1);
  
#line 148 
  return tmp;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_regs_23(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 153 
  netdev_get_regs(arg0,arg1,arg2);
  
#line 154 
  return;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_mac_address_16(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 158 
  tmp = netdev_set_mac_address(arg0,arg1);
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_change_mtu_7(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 163 
  tmp = netdev_change_mtu(arg0,arg1);
  
#line 163 
  return tmp;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_pcidev_init_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 168 
  tmp = pcidev_init(arg0,(struct pci_device_id const *)arg1);
  
#line 168 
  return tmp;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_eeprom_13(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 173 
  tmp = netdev_set_eeprom(arg0,arg1,arg2);
  
#line 173 
  return tmp;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 178 
  tmp = netdev_open(arg0);
  
#line 178 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_init_5(struct net_device *arg0)
{
  int tmp;
  
#line 183 
  tmp = netdev_init(arg0);
  
#line 183 
  return tmp;
}


#line 187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 188 
  netdev_get_pauseparam(arg0,arg1);
  
#line 189 
  return;
}


#line 192  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_pci_device_driver_exit(void)
{
  
#line 193 
  pci_device_driver_exit();
  
#line 194 
  return;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_drvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 197 
  netdev_get_drvinfo(arg0,arg1);
  
#line 198 
  return;
}


#line 201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_pcidev_resume_5(struct pci_dev *arg0)
{
  int tmp;
  
#line 202 
  tmp = pcidev_resume(arg0);
  
#line 202 
  return tmp;
}


#line 206  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_pauseparam_30(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 207 
  tmp = netdev_set_pauseparam(arg0,arg1);
  
#line 207 
  return tmp;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_pci_device_driver_init(void)
{
  int tmp;
  
#line 212 
  tmp = pci_device_driver_init();
  
#line 212 
  return tmp;
}


#line 215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_pcidev_suspend_3(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 216 
  tmp = pcidev_suspend(arg0,arg1);
  
#line 216 
  return tmp;
}


#line 220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_nway_reset_26(struct net_device *arg0)
{
  int tmp;
  
#line 221 
  tmp = netdev_nway_reset(arg0);
  
#line 221 
  return tmp;
}


#line 225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_set_rx_mode_6(struct net_device *arg0)
{
  
#line 226 
  netdev_set_rx_mode(arg0);
  
#line 227 
  return;
}


#line 230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
struct net_device_stats *ldv_emg_wrapper_netdev_query_statistics_25(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 231 
  tmp = netdev_query_statistics(arg0);
  
#line 231 
  return tmp;
}


#line 235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_get_eeprom_len_32(struct net_device *arg0)
{
  int tmp;
  
#line 236 
  tmp = netdev_get_eeprom_len(arg0);
  
#line 236 
  return tmp;
}


#line 240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_get_regs_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 241 
  tmp = netdev_get_regs_len(arg0);
  
#line 241 
  return tmp;
}


#line 245  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_get_sset_count_24(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 246 
  tmp = netdev_get_sset_count(arg0,arg1);
  
#line 246 
  return tmp;
}


#line 250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
int ldv_emg_wrapper_netdev_set_wol_22(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 251 
  tmp = netdev_set_wol(arg0,arg1);
  
#line 251 
  return tmp;
}


#line 255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
enum irqreturn ldv_emg_wrapper_netdev_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 256 
  tmp = netdev_intr(arg0,arg1);
  
#line 256 
  return tmp;
}


#line 260  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 261 
  netdev_get_ethtool_stats(arg0,arg1,arg2);
  
#line 262 
  return;
}


#line 265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
void ldv_emg_wrapper_netdev_get_ringparam_28(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 266 
  netdev_get_ringparam(arg0,arg1);
  
#line 267 
  return;
}


#line 695  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 698 
  tmp = ldv_kzalloc(size,flags);
  
#line 698 
  return tmp;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static int ldv_del_timer_sync_72(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 945 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 945 
  return tmp;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_lock_irq_73(spinlock_t *lock)
{
  
#line 953 
  ldv_spin_model_lock((char *)"hwlock_of_dev_info");
  
#line 955 
  spin_lock_irq(lock);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_irq_74(spinlock_t *lock)
{
  
#line 963 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 965 
  spin_unlock_irq(lock);
  
#line 966 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_lock_irq_75(spinlock_t *lock)
{
  
#line 973 
  ldv_spin_model_lock((char *)"hwlock_of_dev_info");
  
#line 975 
  spin_lock_irq(lock);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_irq_76(spinlock_t *lock)
{
  
#line 983 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 985 
  spin_unlock_irq(lock);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_lock_irq_77(spinlock_t *lock)
{
  
#line 993 
  ldv_spin_model_lock((char *)"hwlock_of_dev_info");
  
#line 995 
  spin_lock_irq(lock);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_irq_78(spinlock_t *lock)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 1005 
  spin_unlock_irq(lock);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_tasklet_schedule_79(struct tasklet_struct *t)
{
  
#line 1013 
  ldv_emg_tasklet_schedule(t);
  
#line 1014 
  return;
}


#line 1017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_lock_irq_80(spinlock_t *lock)
{
  
#line 1021 
  ldv_spin_model_lock((char *)"hwlock_of_dev_info");
  
#line 1023 
  spin_lock_irq(lock);
  
#line 1024 
  return;
}


#line 1027  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_irq_81(spinlock_t *lock)
{
  
#line 1031 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 1033 
  spin_unlock_irq(lock);
  
#line 1034 
  return;
}


#line 1037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_lock_82(spinlock_t *lock)
{
  
#line 1041 
  ldv_spin_model_lock((char *)"hwlock_of_dev_info");
  
#line 1043 
  spin_lock(lock);
  
#line 1044 
  return;
}


#line 1047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_83(spinlock_t *lock)
{
  
#line 1051 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 1053 
  spin_unlock(lock);
  
#line 1054 
  return;
}


#line 1057  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_tasklet_schedule_84(struct tasklet_struct *t)
{
  
#line 1061 
  ldv_emg_tasklet_schedule(t);
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_tasklet_schedule_85(struct tasklet_struct *t)
{
  
#line 1069 
  ldv_emg_tasklet_schedule(t);
  
#line 1070 
  return;
}


#line 1073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_spin_unlock_86(spinlock_t *lock)
{
  
#line 1077 
  ldv_spin_model_unlock((char *)"hwlock_of_dev_info");
  
#line 1079 
  spin_unlock(lock);
  
#line 1080 
  return;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static bool ldv_flush_work_87(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 1087 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 1087 
  __retres = tmp != 0;
  
#line 1087 
  return __retres;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_free_irq_88(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1095 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1096 
  return;
}


#line 1099  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static int ldv_request_irq_89(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1103 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1103 
  return tmp;
}


#line 1107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_tasklet_init_90(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1111 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_tasklet_init_91(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1119 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1120 
  return;
}


#line 1123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1)
{
  
#line 1127 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1128 
  return;
}


#line 1131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 1135 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1136 
  return;
}


#line 1139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_94(struct mutex *ldv_func_arg1)
{
  
#line 1143 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1144 
  return;
}


#line 1147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_95(struct mutex *ldv_func_arg1)
{
  
#line 1151 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1152 
  return;
}


#line 1155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_96(struct mutex *ldv_func_arg1)
{
  
#line 1159 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1160 
  return;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_97(struct mutex *ldv_func_arg1)
{
  
#line 1167 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1168 
  return;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_98(struct mutex *ldv_func_arg1)
{
  
#line 1175 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1176 
  return;
}


#line 1179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_99(struct mutex *ldv_func_arg1)
{
  
#line 1183 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1184 
  return;
}


#line 1187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_100(struct mutex *ldv_func_arg1)
{
  
#line 1191 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1192 
  return;
}


#line 1195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_101(struct mutex *ldv_func_arg1)
{
  
#line 1199 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1200 
  return;
}


#line 1203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_102(struct mutex *ldv_func_arg1)
{
  
#line 1207 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_103(struct mutex *ldv_func_arg1)
{
  
#line 1215 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1216 
  return;
}


#line 1219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static bool ldv_schedule_work_104(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1223 
  tmp = ldv_emg_schedule_work(work);
  
#line 1223 
  __retres = tmp != 0;
  
#line 1223 
  return __retres;
}


#line 1227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_lock_105(struct mutex *ldv_func_arg1)
{
  
#line 1231 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1232 
  return;
}


#line 1235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_mutex_unlock_106(struct mutex *ldv_func_arg1)
{
  
#line 1239 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_dev_info");
  
#line 1240 
  return;
}


#line 1243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_unregister_netdev_107(struct net_device *ldv_func_arg1)
{
  
#line 1247 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1248 
  return;
}


#line 1251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1)
{
  
#line 1255 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1256 
  return;
}


#line 1259  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_109(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1263 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1263 
  return tmp;
}


#line 1267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static int ldv_register_netdev_110(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1271 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1271 
  return tmp;
}


#line 1275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static int ldv___pci_register_driver_111(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1279 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1279 
  return tmp;
}


#line 1283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/weaver/.tmp_ksz884x.c.aux"
static void ldv_pci_unregister_driver_112(struct pci_driver *ldv_func_arg1)
{
  
#line 1287 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1288 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_16(void *arg0);


#line 93 
int main(void);


#line 95 
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 97 
void *ldv_interrupt_scenario_17(void *arg0);


#line 98 
void ldv_dispatch_irq_deregister_5_1(int arg0);


#line 100 
void ldv_dispatch_deregister_7_1(struct pci_driver *arg0);


#line 101 
void *ldv_timer_scenario_18(void *arg0);


#line 103 
void *ldv_initialization_1(void *arg0);


#line 104 
void ldv_dispatch_instance_deregister_13_1(struct timer_list *arg0);


#line 105 
void ldv_dispatch_deregister_4_1(struct net_device *arg0);


#line 107 
void ldv_dispatch_register_10_3(struct pci_driver *arg0);


#line 110 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 111 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_13_timer_list;
  
#line 130 
  ldv_13_timer_list = arg0;
  
#line 134 
  ldv_dispatch_instance_deregister_13_1(ldv_13_timer_list);
  
#line 135 
  ;
  
#line 135 
  __retres = 0;
  
#line 135 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 148 
  arg0->func = arg1;
  
#line 149 
  arg0->data = arg2;
  
#line 150 
  arg0->count.counter = 0;
  
#line 154 
  goto return_label;
  return_label: 
#line 156 
                return;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_16(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_16_resource_1;
  struct pci_device_id *ldv_16_ldv_param_1_2;
  struct pm_message ldv_16_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 166 
  struct pci_driver *ldv_16_container = ldv_emg_alias_pci_device_driver_2;
  
#line 167 
  int ldv_16_ret = ldv_undef_int();
  
#line 170 
  struct ldv_struct_pci_scenario_16 *data = (struct ldv_struct_pci_scenario_16 *)arg0;
  
#line 174 
  ldv_16_ret = ldv_undef_int();
  
#line 177 
  if (data != (struct ldv_struct_pci_scenario_16 *)0) {
    
#line 178 
    ldv_16_container = data->arg0;
    
#line 179 
    ldv_free((void *)data);
  }
  else ;
  
#line 190 
  goto ldv_main_16;
  
#line 192 
  __retres = (void *)0;
  
#line 192 
  goto return_label;
  ldv_main_16: 
#line 195 
  ;
  
#line 198 
  tmp_2 = ldv_undef_int();
  
#line 198 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 200 
    ldv_16_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 205 
    ldv_pre_probe();
    
#line 207 
    ldv_16_ret = ldv_emg_wrapper_pcidev_init_2(ldv_16_resource_1,ldv_16_ldv_param_1_2);
    
#line 209 
    ldv_16_ret = ldv_post_probe(ldv_16_ret);
    
#line 213 
    ldv_free((void *)ldv_16_ldv_param_1_2);
    
#line 216 
    tmp_1 = ldv_undef_int();
    
#line 216 
    if (tmp_1 != 0) {
      
#line 218 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 225 
      goto ldv_call_16;
    }
    else {
      
#line 229 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 236 
      goto ldv_main_16;
    }
  }
  else {
    
#line 248 
    __retres = (void *)0;
    
#line 248 
    goto return_label;
  }
  
#line 251 
  __retres = (void *)0;
  
#line 251 
  goto return_label;
  ldv_call_16: 
#line 254 
  ;
  
#line 257 
  tmp_3 = ldv_undef_int();
  
#line 257 
  switch (tmp_3) {
    case 1: 
#line 258 
    ;
    
#line 267 
    goto ldv_call_16;
    case 2: 
#line 270 
    ;
    
#line 273 
    ldv_16_ret = ldv_emg_wrapper_pcidev_suspend_3(ldv_16_resource_1,ldv_16_resource_0);
    
#line 275 
    ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    
#line 279 
    if (ldv_16_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 281 
      ldv_16_ret = (*(ldv_16_container->suspend_late))(ldv_16_resource_1,ldv_16_resource_0);
      
#line 283 
      ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    }
    else 
#line 285 
         ldv_16_ret = ldv_undef_int();
    
#line 290 
    if (ldv_16_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 292 
      (*(ldv_16_container->resume_early))(ldv_16_resource_1); else ;
    
#line 298 
    ldv_emg_wrapper_pcidev_resume_5(ldv_16_resource_1);
    
#line 305 
    goto ldv_call_16;
    case 3: 
#line 308 
    ;
    
#line 310 
    if (ldv_16_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 312 
      (*(ldv_16_container->shutdown))(ldv_16_resource_1); else ;
    
#line 318 
    ldv_emg_wrapper_pcidev_exit_4(ldv_16_resource_1);
    
#line 325 
    goto ldv_main_16;
    default: 
#line 328 
    ;
    
#line 328 
    __VERIFIER_assume(0);
  }
  
#line 331 
  __retres = (void *)0;
  return_label: 
#line 331 
                return __retres;
}


#line 336  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 339 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_pci_device_driver_2;
  
#line 343 
  tmp_0 = ldv_undef_int();
  
#line 343 
  if (tmp_0 != 0) {
    
#line 345 
    ldv_10_pci_driver = arg0;
    
#line 349 
    ldv_dispatch_register_10_3(ldv_10_pci_driver);
    
#line 353 
    __retres = 0;
    
#line 353 
    goto return_label;
  }
  else {
    int tmp;
    
#line 360 
    tmp = ldv_undef_int_negative();
    
#line 360 
    __retres = tmp;
    
#line 360 
    goto return_label;
  }
  return_label: 
#line 343 
                return __retres;
}


#line 370  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 373 
  ldv_initialize();
  
#line 376 
  ldv_initialization_1((void *)0);
  
#line 378 
  __retres = 0;
  
#line 378 
  return __retres;
}


#line 383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_12_ldv_param_0_2;
  struct tasklet_struct *ldv_12_tasklet_struct;
  
#line 390 
  ldv_12_tasklet_struct = arg0;
  
#line 397 
  if (ldv_12_tasklet_struct->count.counter == 0) 
#line 399 
                                                 (*ldv_emg_alias_None_2)(ldv_12_ldv_param_0_2); else ;
  
#line 407 
  goto return_label;
  return_label: 
#line 409 
                return;
}


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_17 *cf_arg_17;
  int tmp;
  
#line 417 
  tmp = ldv_undef_int();
  
#line 417 
  switch (tmp) {
    case 0: 
#line 418 
    ;
    
#line 419 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_17 *)ldv_xmalloc(32UL);
    
#line 420 
    cf_arg_17->arg0 = arg0;
    
#line 421 
    cf_arg_17->arg1 = arg1;
    
#line 422 
    cf_arg_17->arg2 = arg2;
    
#line 423 
    cf_arg_17->arg3 = arg3;
    
#line 424 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 425 
    __VERIFIER_assume(ret == 0);
    
#line 426 
    goto ldv_44795;
    default: 
#line 428 
    ;
    
#line 428 
    __VERIFIER_assume(0);
  }
  ldv_44795: 
#line 429 
  ;
  
#line 430 
  return;
}


#line 434  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_3_netdev;
  int tmp_0;
  
#line 441 
  tmp_0 = ldv_undef_int();
  
#line 441 
  if (tmp_0 != 0) {
    
#line 443 
    ldv_3_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 447 
    __retres = ldv_3_netdev;
    
#line 447 
    goto return_label;
  }
  else {
    
#line 454 
    __retres = (struct net_device *)0;
    
#line 454 
    goto return_label;
  }
  return_label: 
#line 441 
                return __retres;
}


#line 464  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp;
  
#line 470 
  enum irqreturn (*ldv_17_callback)(int , void *) = & ldv_emg_wrapper_netdev_intr_2;
  
#line 473 
  struct ldv_struct_interrupt_scenario_17 *data = (struct ldv_struct_interrupt_scenario_17 *)arg0;
  
#line 478 
  if (data != (struct ldv_struct_interrupt_scenario_17 *)0) {
    
#line 479 
    ldv_17_line = data->arg0;
    
#line 480 
    ldv_17_callback = data->arg1;
    
#line 481 
    ldv_17_thread = data->arg2;
    
#line 482 
    ldv_17_data = data->arg3;
    
#line 483 
    ldv_free((void *)data);
  }
  else ;
  
#line 489 
  ldv_switch_to_interrupt_context();
  
#line 491 
  ldv_17_ret_val = ldv_emg_wrapper_netdev_intr_2(ldv_17_line,ldv_17_data);
  
#line 493 
  ldv_switch_to_process_context();
  
#line 496 
  tmp = ldv_undef_int();
  
#line 496 
  if (tmp != 0) {
    
#line 498 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 502 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 504 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 511 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 520 
  __retres = (void *)0;
  
#line 520 
  goto return_label;
  
#line 522 
  __retres = (void *)0;
  return_label: 
#line 522 
                return __retres;
}


#line 527  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_5_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_5 *cf_arg_17;
  int tmp;
  
#line 530 
  tmp = ldv_undef_int();
  
#line 530 
  switch (tmp) {
    case 0: 
#line 531 
    ;
    
#line 532 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 533 
    __VERIFIER_assume(ret == 0);
    
#line 534 
    goto ldv_44822;
    default: 
#line 536 
    ;
    
#line 536 
    __VERIFIER_assume(0);
  }
  ldv_44822: 
#line 537 
  ;
  
#line 538 
  return;
}


#line 542  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp_0;
  
#line 547 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_netdev_intr_2;
  
#line 552 
  tmp_0 = ldv_undef_int();
  
#line 552 
  if (tmp_0 != 0) {
    
#line 554 
    ldv_14_line = (int)arg0;
    
#line 555 
    ldv_14_callback = arg1;
    
#line 556 
    ldv_14_thread = (enum irqreturn (*)(int , void *))0;
    
#line 557 
    ldv_14_data = arg4;
    
#line 561 
    ldv_dispatch_irq_register_14_3(ldv_14_line,ldv_14_callback,ldv_14_thread,ldv_14_data);
    
#line 565 
    __retres = 0;
    
#line 565 
    goto return_label;
  }
  else {
    int tmp;
    
#line 572 
    tmp = ldv_undef_int_negative();
    
#line 572 
    __retres = tmp;
    
#line 572 
    goto return_label;
  }
  return_label: 
#line 552 
                return __retres;
}


#line 582  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_7_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 585 
  tmp = ldv_undef_int();
  
#line 585 
  switch (tmp) {
    case 0: 
#line 586 
    ;
    
#line 587 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 588 
    __VERIFIER_assume(ret == 0);
    
#line 589 
    goto ldv_44847;
    default: 
#line 591 
    ;
    
#line 591 
    __VERIFIER_assume(0);
  }
  ldv_44847: 
#line 592 
  ;
  
#line 593 
  return;
}


#line 597  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_18(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_18_container;
  
#line 607 
  if (ldv_18_container->function != (void (*)(unsigned long ))0) {
    
#line 609 
    ldv_switch_to_interrupt_context();
    
#line 611 
    (*(ldv_18_container->function))(ldv_18_container->data);
    
#line 613 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 622 
  __retres = (void *)0;
  
#line 622 
  goto return_label;
  
#line 624 
  __retres = (void *)0;
  return_label: 
#line 624 
                return __retres;
}


#line 629  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_11_work_struct;
  int tmp;
  
#line 636 
  tmp = ldv_undef_int();
  
#line 636 
  if (tmp != 0) {
    
#line 638 
    ldv_11_work_struct = arg0;
    
#line 642 
    if (ldv_11_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 644 
      (*(ldv_11_work_struct->func))(ldv_11_work_struct); else ;
    
#line 649 
    __retres = (_Bool)1;
    
#line 649 
    goto return_label;
  }
  else {
    
#line 656 
    __retres = (_Bool)0;
    
#line 656 
    goto return_label;
  }
  return_label: 
#line 636 
                return __retres;
}


#line 666  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 673 
  ldv_1_ret = ldv_emg_pci_device_driver_init();
  
#line 674 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 677 
  tmp = ldv_undef_int();
  
#line 677 
  if (tmp != 0) {
    
#line 679 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 683 
    __retres = (void *)0;
    
#line 683 
    goto return_label;
  }
  else {
    
#line 687 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 692 
    ldv_emg_pci_device_driver_exit();
    
#line 696 
    __retres = (void *)0;
    
#line 696 
    goto return_label;
  }
  
#line 699 
  __retres = (void *)0;
  return_label: 
#line 699 
                return __retres;
}


#line 704  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_13_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_del_timer_sync_13 *cf_arg_18;
  int tmp;
  
#line 707 
  tmp = ldv_undef_int();
  
#line 707 
  switch (tmp) {
    case 0: 
#line 708 
    ;
    
#line 709 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 710 
    __VERIFIER_assume(ret == 0);
    
#line 711 
    goto ldv_44867;
    default: 
#line 713 
    ;
    
#line 713 
    __VERIFIER_assume(0);
  }
  ldv_44867: 
#line 714 
  ;
  
#line 715 
  return;
}


#line 719  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 722 
  tmp = ldv_undef_int();
  
#line 722 
  switch (tmp) {
    case 0: 
#line 723 
    ;
    
#line 724 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 725 
    __VERIFIER_assume(ret == 0);
    
#line 726 
    goto ldv_44875;
    default: 
#line 728 
    ;
    
#line 728 
    __VERIFIER_assume(0);
  }
  ldv_44875: 
#line 729 
  ;
  
#line 730 
  return;
}


#line 734  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 737 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_pci_device_driver_2;
  
#line 740 
  ldv_7_pci_driver = arg0;
  
#line 744 
  ldv_dispatch_deregister_7_1(ldv_7_pci_driver);
  
#line 748 
  goto return_label;
  return_label: 
#line 750 
                return;
}


#line 755  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 758 
  tmp = ldv_undef_int();
  
#line 758 
  switch (tmp) {
    case 0: 
#line 759 
    ;
    
#line 760 
    cf_arg_16 = (struct ldv_struct_pci_scenario_16 *)ldv_xmalloc(16UL);
    
#line 761 
    cf_arg_16->arg0 = arg0;
    
#line 762 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_pci_scenario_16,(void *)cf_arg_16);
    
#line 763 
    __VERIFIER_assume(ret == 0);
    
#line 764 
    goto ldv_44887;
    default: 
#line 766 
    ;
    
#line 766 
    __VERIFIER_assume(0);
  }
  ldv_44887: 
#line 767 
  ;
  
#line 768 
  return;
}


#line 772  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_4_netdev;
  
#line 778 
  ldv_4_netdev = arg0;
  
#line 783 
  ldv_emg_wrapper_netdev_close_2(ldv_4_netdev);
  
#line 787 
  ldv_dispatch_deregister_4_1(ldv_4_netdev);
  
#line 791 
  goto return_label;
  return_label: 
#line 793 
                return;
}


#line 798  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_5_line;
  
#line 804 
  ldv_5_line = (int)arg0;
  
#line 808 
  ldv_dispatch_irq_deregister_5_1(ldv_5_line);
  
#line 812 
  goto return_label;
  return_label: 
#line 814 
                return;
}


#line 819  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_15_ldv_param_1_3;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_10;
  struct ethtool_eeprom *ldv_15_ldv_param_1_15;
  void *ldv_15_ldv_param_2_23;
  void *ldv_15_ldv_param_1_14;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_2;
  struct ethtool_cmd *ldv_15_ldv_param_1_4;
  unsigned int ldv_15_ldv_param_1_5;
  struct ethtool_eeprom *ldv_15_ldv_param_1_11;
  unsigned long long *ldv_15_ldv_param_2_7;
  unsigned char *ldv_15_ldv_param_2_12;
  struct ethtool_ringparam *ldv_15_ldv_param_1_26;
  int ldv_15_ldv_param_1_8;
  struct net_device *ldv_15_container;
  int ldv_15_ldv_param_2_20;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_27;
  struct sk_buff *ldv_15_ldv_param_0_13;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_18;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_21;
  struct ethtool_stats *ldv_15_ldv_param_1_6;
  unsigned long long ldv_15_ldv_param_1_9;
  int ldv_15_ldv_param_1_17;
  struct ifreq *ldv_15_ldv_param_1_19;
  unsigned int ldv_15_ldv_param_1_24;
  unsigned char *ldv_15_ldv_param_2_25;
  struct ethtool_regs *ldv_15_ldv_param_1_22;
  unsigned char *ldv_15_ldv_param_2_16;
  int tmp_18;
  
#line 850 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 855 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 856 
    ldv_15_container = data->arg0;
    
#line 857 
    ldv_free((void *)data);
  }
  else ;
  
#line 865 
  goto ldv_call_15;
  
#line 867 
  __retres = (void *)0;
  
#line 867 
  goto return_label;
  ldv_call_15: 
#line 870 
  ;
  
#line 873 
  tmp_18 = ldv_undef_int();
  
#line 873 
  if (tmp_18 != 0) {
    int tmp_0;
    
#line 875 
    ldv_15_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 878 
    tmp_0 = ldv_undef_int();
    
#line 878 
    switch (tmp_0) {
      case 1: 
#line 879 
      ;
      
#line 882 
      ldv_emg_wrapper_netdev_get_pauseparam_2(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 885 
      goto ldv_44931;
      case 2: 
#line 887 
      ;
      
#line 890 
      ldv_emg_wrapper_netdev_set_rx_mode_6(ldv_15_container);
      
#line 893 
      goto ldv_44931;
      case 3: 
#line 895 
      ;
      
#line 898 
      ldv_emg_wrapper_netdev_nway_reset_26(ldv_15_container);
      
#line 901 
      goto ldv_44931;
      case 4: 
#line 903 
      ;
      
#line 905 
      ldv_15_ldv_param_1_27 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 910 
      ldv_emg_wrapper_netdev_set_pauseparam_30(ldv_15_container,ldv_15_ldv_param_1_27);
      
#line 914 
      ldv_free((void *)ldv_15_ldv_param_1_27);
      
#line 917 
      goto ldv_44931;
      case 5: 
#line 919 
      ;
      
#line 922 
      ldv_emg_wrapper_netdev_get_regs_len_29(ldv_15_container);
      
#line 925 
      goto ldv_44931;
      case 6: 
#line 927 
      ;
      
#line 929 
      ldv_15_ldv_param_1_26 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 934 
      ldv_emg_wrapper_netdev_get_ringparam_28(ldv_15_container,ldv_15_ldv_param_1_26);
      
#line 938 
      ldv_free((void *)ldv_15_ldv_param_1_26);
      
#line 941 
      goto ldv_44931;
      case 7: 
#line 943 
      ;
      
#line 945 
      ldv_15_ldv_param_2_25 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 950 
      ldv_emg_wrapper_netdev_get_strings_19(ldv_15_container,ldv_15_ldv_param_1_24,ldv_15_ldv_param_2_25);
      
#line 954 
      ldv_free((void *)ldv_15_ldv_param_2_25);
      
#line 957 
      goto ldv_44931;
      case 8: 
#line 959 
      ;
      
#line 962 
      ldv_emg_wrapper_netdev_netpoll_31(ldv_15_container);
      
#line 965 
      goto ldv_44931;
      case 9: 
#line 967 
      ;
      
#line 970 
      ldv_emg_wrapper_netdev_query_statistics_25(ldv_15_container);
      
#line 973 
      goto ldv_44931;
      case 10: 
#line 975 
      ;
      
#line 978 
      ldv_emg_wrapper_netdev_tx_timeout_18(ldv_15_container);
      
#line 981 
      goto ldv_44931;
      case 11: 
#line 983 
      ;
      
#line 985 
      ldv_15_ldv_param_2_23 = ldv_xmalloc_unknown_size(0UL);
      
#line 986 
      ldv_15_ldv_param_1_22 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 991 
      ldv_emg_wrapper_netdev_get_regs_23(ldv_15_container,ldv_15_ldv_param_1_22,ldv_15_ldv_param_2_23);
      
#line 995 
      ldv_free(ldv_15_ldv_param_2_23);
      
#line 996 
      ldv_free((void *)ldv_15_ldv_param_1_22);
      
#line 999 
      goto ldv_44931;
      case 12: 
#line 1001 
      ;
      
#line 1003 
      ldv_15_ldv_param_1_21 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1008 
      ldv_emg_wrapper_netdev_set_wol_22(ldv_15_container,ldv_15_ldv_param_1_21);
      
#line 1012 
      ldv_free((void *)ldv_15_ldv_param_1_21);
      
#line 1015 
      goto ldv_44931;
      case 13: 
#line 1017 
      ;
      
#line 1019 
      ldv_15_ldv_param_1_19 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1024 
      ldv_emg_wrapper_netdev_ioctl_21(ldv_15_container,ldv_15_ldv_param_1_19,ldv_15_ldv_param_2_20);
      
#line 1028 
      ldv_free((void *)ldv_15_ldv_param_1_19);
      
#line 1031 
      goto ldv_44931;
      case 14: 
#line 1033 
      ;
      
#line 1035 
      ldv_15_ldv_param_1_18 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1040 
      ldv_emg_wrapper_netdev_get_wol_20(ldv_15_container,ldv_15_ldv_param_1_18);
      
#line 1044 
      ldv_free((void *)ldv_15_ldv_param_1_18);
      
#line 1047 
      goto ldv_44931;
      case 15: 
#line 1049 
      ;
      
#line 1055 
      ldv_emg_wrapper_netdev_get_sset_count_24(ldv_15_container,ldv_15_ldv_param_1_17);
      
#line 1061 
      goto ldv_44931;
      case 16: 
#line 1063 
      ;
      
#line 1065 
      ldv_15_ldv_param_1_15 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1066 
      ldv_15_ldv_param_2_16 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1071 
      ldv_emg_wrapper_netdev_get_eeprom_3(ldv_15_container,ldv_15_ldv_param_1_15,ldv_15_ldv_param_2_16);
      
#line 1075 
      ldv_free((void *)ldv_15_ldv_param_1_15);
      
#line 1076 
      ldv_free((void *)ldv_15_ldv_param_2_16);
      
#line 1079 
      goto ldv_44931;
      case 17: 
#line 1081 
      ;
      
#line 1083 
      ldv_15_ldv_param_1_14 = ldv_xmalloc_unknown_size(0UL);
      
#line 1088 
      ldv_emg_wrapper_netdev_set_mac_address_16(ldv_15_container,ldv_15_ldv_param_1_14);
      
#line 1092 
      ldv_free(ldv_15_ldv_param_1_14);
      
#line 1095 
      goto ldv_44931;
      case 18: 
#line 1097 
      ;
      
#line 1099 
      ldv_15_ldv_param_0_13 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1104 
      ldv_emg_wrapper_netdev_tx_15(ldv_15_ldv_param_0_13,ldv_15_container);
      
#line 1108 
      ldv_free((void *)ldv_15_ldv_param_0_13);
      
#line 1111 
      goto ldv_44931;
      case 19: 
#line 1113 
      ;
      
#line 1116 
      ldv_emg_wrapper_netdev_get_msglevel_14(ldv_15_container);
      
#line 1119 
      goto ldv_44931;
      case 20: 
#line 1121 
      ;
      
#line 1123 
      ldv_15_ldv_param_2_12 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1124 
      ldv_15_ldv_param_1_11 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1129 
      ldv_emg_wrapper_netdev_set_eeprom_13(ldv_15_container,ldv_15_ldv_param_1_11,ldv_15_ldv_param_2_12);
      
#line 1133 
      ldv_free((void *)ldv_15_ldv_param_2_12);
      
#line 1134 
      ldv_free((void *)ldv_15_ldv_param_1_11);
      
#line 1137 
      goto ldv_44931;
      case 21: 
#line 1139 
      ;
      
#line 1142 
      ldv_emg_wrapper_netdev_get_eeprom_len_32(ldv_15_container);
      
#line 1145 
      goto ldv_44931;
      case 22: 
#line 1147 
      ;
      
#line 1149 
      ldv_15_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1154 
      ldv_emg_wrapper_netdev_get_drvinfo_12(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 1158 
      ldv_free((void *)ldv_15_ldv_param_1_10);
      
#line 1161 
      goto ldv_44931;
      case 23: 
#line 1163 
      ;
      
#line 1169 
      ldv_emg_wrapper_netdev_set_features_11(ldv_15_container,ldv_15_ldv_param_1_9);
      
#line 1175 
      goto ldv_44931;
      case 24: 
#line 1177 
      ;
      
#line 1180 
      ldv_emg_wrapper_netdev_get_link_10(ldv_15_container);
      
#line 1183 
      goto ldv_44931;
      case 25: 
#line 1185 
      ;
      
#line 1191 
      ldv_emg_wrapper_netdev_change_mtu_7(ldv_15_container,ldv_15_ldv_param_1_8);
      
#line 1197 
      goto ldv_44931;
      case 26: 
#line 1199 
      ;
      
#line 1201 
      ldv_15_ldv_param_1_6 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1202 
      ldv_15_ldv_param_2_7 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1207 
      ldv_emg_wrapper_netdev_get_ethtool_stats_8(ldv_15_container,ldv_15_ldv_param_1_6,ldv_15_ldv_param_2_7);
      
#line 1211 
      ldv_free((void *)ldv_15_ldv_param_1_6);
      
#line 1212 
      ldv_free((void *)ldv_15_ldv_param_2_7);
      
#line 1215 
      goto ldv_44931;
      case 27: 
#line 1217 
      ;
      
#line 1220 
      (*ldv_emg_alias_eth_validate_addr_9)(ldv_15_container);
      
#line 1223 
      goto ldv_44931;
      case 28: 
#line 1225 
      ;
      
#line 1228 
      ldv_emg_wrapper_netdev_init_5(ldv_15_container);
      
#line 1231 
      goto ldv_44931;
      case 29: 
#line 1233 
      ;
      
#line 1239 
      ldv_emg_wrapper_netdev_set_msglevel_27(ldv_15_container,ldv_15_ldv_param_1_5);
      
#line 1245 
      goto ldv_44931;
      case 30: 
#line 1247 
      ;
      
#line 1249 
      ldv_15_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1254 
      ldv_emg_wrapper_netdev_set_settings_4(ldv_15_container,ldv_15_ldv_param_1_4);
      
#line 1258 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 1261 
      goto ldv_44931;
      case 31: 
#line 1263 
      ;
      
#line 1265 
      ldv_15_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1270 
      ldv_emg_wrapper_netdev_get_settings_17(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1274 
      ldv_free((void *)ldv_15_ldv_param_1_3);
      
#line 1277 
      goto ldv_44931;
      default: 
#line 1279 
      ;
      
#line 1279 
      __VERIFIER_assume(0);
    }
    ldv_44931: 
#line 1282 
    ;
    
#line 1282 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1289 
    goto ldv_call_15;
  }
  else {
    
#line 1297 
    __retres = (void *)0;
    
#line 1297 
    goto return_label;
  }
  
#line 1300 
  __retres = (void *)0;
  return_label: 
#line 1300 
                return __retres;
}


#line 1305  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1308 
  tmp = ldv_undef_int();
  
#line 1308 
  switch (tmp) {
    case 0: 
#line 1309 
    ;
    
#line 1310 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1311 
    cf_arg_15->arg0 = arg0;
    
#line 1312 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 1313 
    __VERIFIER_assume(ret == 0);
    
#line 1314 
    goto ldv_44969;
    default: 
#line 1316 
    ;
    
#line 1316 
    __VERIFIER_assume(0);
  }
  ldv_44969: 
#line 1317 
  ;
  
#line 1318 
  return;
}


#line 1322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_flush_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_6_work_struct;
  int tmp;
  
#line 1329 
  tmp = ldv_undef_int();
  
#line 1329 
  if (tmp != 0) {
    
#line 1331 
    ldv_6_work_struct = arg0;
    
#line 1335 
    if (ldv_6_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1337 
      (*(ldv_6_work_struct->func))(ldv_6_work_struct); else ;
    
#line 1342 
    __retres = (_Bool)1;
    
#line 1342 
    goto return_label;
  }
  else {
    
#line 1349 
    __retres = (_Bool)0;
    
#line 1349 
    goto return_label;
  }
  return_label: 
#line 1329 
                return __retres;
}


#line 1359  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1365 
  ldv_2_netdev = arg0;
  
#line 1366 
  ldv_free((void *)ldv_2_netdev);
  
#line 1370 
  goto return_label;
  return_label: 
#line 1372 
                return;
}


#line 1377  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/micrel/ksz884x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1381 
  int ldv_9_ret = ldv_undef_int();
  
#line 1384 
  ldv_9_ret = ldv_undef_int();
  
#line 1387 
  tmp_3 = ldv_undef_int();
  
#line 1387 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1389 
    ldv_9_netdev = arg0;
    
#line 1394 
    ldv_9_ret = ldv_emg_wrapper_netdev_open_2(ldv_9_netdev);
    
#line 1397 
    tmp_1 = ldv_undef_int();
    
#line 1397 
    if (tmp_1 != 0) {
      
#line 1399 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1403 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1407 
      __retres = 0;
      
#line 1407 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1414 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1415 
      ldv_failed_register_netdev();
      
#line 1416 
      tmp_0 = ldv_undef_int_negative();
      
#line 1416 
      __retres = tmp_0;
      
#line 1416 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1424 
    ldv_failed_register_netdev();
    
#line 1425 
    tmp_2 = ldv_undef_int_negative();
    
#line 1425 
    __retres = tmp_2;
    
#line 1425 
    goto return_label;
  }
  return_label: 
#line 1387 
                return __retres;
}


