/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 173 
struct inode;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11502 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_53 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_54 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_23 ;
   struct __anonstruct_54 __anonCompField___anonunion_52_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_52 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_55 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_55 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_56 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   atomic_t _mapcount ;
   struct __anonstruct_62 __anonCompField___anonunion_61_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_60 {
   union __anonunion_61 __anonCompField___anonstruct_60_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_59 {
   unsigned long counters ;
   struct __anonstruct_60 __anonCompField___anonunion_59_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_57 {
   union __anonunion_58 __anonCompField___anonstruct_57_27 ;
   union __anonunion_59 __anonCompField___anonstruct_57_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_65 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   struct list_head lru ;
   struct __anonstruct_64 __anonCompField___anonunion_63_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_65 __anonCompField___anonunion_63_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_66 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_56 __anonCompField_page_26 ;
   struct __anonstruct_57 __anonCompField_page_32 ;
   union __anonunion_63 __anonCompField_page_35 ;
   union __anonunion_66 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_67 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_67 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct bio_vec;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_69 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_69 __anonCompField_iov_iter_37 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_12078 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_12078 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_70 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_70 nodemask_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct dentry;

#line 34 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_162 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_162 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_163 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_163 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_164 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_164 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_166 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_167 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_169 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_171 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_170 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_171 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_172 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_173 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_165 {
   int _pad[28U] ;
   struct __anonstruct__kill_166 _kill ;
   struct __anonstruct__timer_167 _timer ;
   struct __anonstruct__rt_168 _rt ;
   struct __anonstruct__sigchld_169 _sigchld ;
   struct __anonstruct__sigfault_170 _sigfault ;
   struct __anonstruct__sigpoll_172 _sigpoll ;
   struct __anonstruct__sigsys_173 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_165 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_183 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_182 {
   struct keyring_index_key index_key ;
   struct __anonstruct_183 __anonCompField___anonunion_182_50 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_184 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_186 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_185 {
   union __anonunion_payload_186 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_180 __anonCompField_key_48 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_181 __anonCompField_key_49 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_182 __anonCompField_key_51 ;
   union __anonunion_type_data_184 type_data ;
   union __anonunion_185 __anonCompField_key_52 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_187 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_187 __anonCompField_idr_layer_53 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22410 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22410 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_214 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_214 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct hlist_nulls_node;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_234 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_234 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_235 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_235 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_236 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_236 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_237 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_237 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_238 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_238 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_239 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_239 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_240 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_240 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_241 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_241 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_242 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_243 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_242 ifr_ifrn ;
   union __anonunion_ifr_ifru_243 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_248 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_247 {
   struct __anonstruct_248 __anonCompField___anonunion_247_80 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_247 __anonCompField_lockref_81 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_250 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_249 {
   struct __anonstruct_250 __anonCompField___anonunion_249_82 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_249 __anonCompField_qstr_83 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_251 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_251 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_255 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_254 {
   struct __anonstruct_255 __anonCompField___anonunion_254_84 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_254 __anonCompField_radix_tree_node_85 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_259 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_259 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_260 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_260 __anonCompField_kqid_87 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_263 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_264 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_265 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_263 __anonCompField_inode_88 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_264 __anonCompField_inode_89 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_265 __anonCompField_inode_90 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_266 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_266 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_268 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_267 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_268 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_267 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28004 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28004 phy_interface_t;

#line 126 
enum ldv_28057 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28057 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29769 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29770 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29769 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29770 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_317 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_317 __anonCompField_bpf_prog_98 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_328 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_328 __anonCompField_dst_entry_99 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_329 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_329 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_331 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_330 {
   __addrpair skc_addrpair ;
   struct __anonstruct_331 __anonCompField___anonunion_330_100 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_332 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_334 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_333 {
   __portpair skc_portpair ;
   struct __anonstruct_334 __anonCompField___anonunion_333_103 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_335 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_336 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_330 __anonCompField_sock_common_101 ;
   union __anonunion_332 __anonCompField_sock_common_102 ;
   union __anonunion_333 __anonCompField_sock_common_104 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_335 __anonCompField_sock_common_105 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_336 __anonCompField_sock_common_106 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_337 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_337 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_340 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_340 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_360 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_360 __anonCompField_kernel_param_108 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_367 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_367 __anonCompField_pci_dev_109 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct vlan_ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_vlan_proto ;
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inet.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_377 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_377 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_378 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_380 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_379 {
   struct __anonstruct_380 __anonCompField___anonunion_379_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_378 __anonCompField_inet_peer_111 ;
   union __anonunion_379 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cryptohash.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
struct mcp_dma_addr {
   __be32 high ;
   __be32 low ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_slot {
   __sum16 checksum ;
   __be16 length ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_cmd {
   __be32 cmd ;
   __be32 data0 ;
   __be32 data1 ;
   __be32 data2 ;
   struct mcp_dma_addr response_addr ;
   u8 pad[40U] ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_cmd_response {
   __be32 data ;
   __be32 result ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_kreq_ether_send {
   __be32 addr_high ;
   __be32 addr_low ;
   __be16 pseudo_hdr_offset ;
   __be16 length ;
   u8 pad ;
   u8 rdma_count ;
   u8 cksum_offset ;
   u8 flags ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_kreq_ether_recv {
   __be32 addr_high ;
   __be32 addr_low ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_irq_data {
   __be32 future_use[1U] ;
   __be32 dropped_pause ;
   __be32 dropped_unicast_filtered ;
   __be32 dropped_bad_crc32 ;
   __be32 dropped_bad_phy ;
   __be32 dropped_multicast_filtered ;
   __be32 send_done_count ;
   __be32 link_up ;
   __be32 dropped_link_overflow ;
   __be32 dropped_link_error_or_filtered ;
   __be32 dropped_runt ;
   __be32 dropped_overrun ;
   __be32 dropped_no_small_buffer ;
   __be32 dropped_no_big_buffer ;
   __be32 rdma_tags_available ;
   u8 tx_stopped ;
   u8 link_down ;
   u8 stats_updated ;
   u8 valid ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge_mcp.h"
struct mcp_gen_header {
   unsigned int header_length ;
   __be32 mcp_type ;
   char version[128U] ;
   unsigned int mcp_private ;
   unsigned int sram_size ;
   unsigned int string_specs ;
   unsigned int string_specs_len ;
   unsigned char mcp_index ;
   unsigned char disable_rabbit ;
   unsigned char unaligned_tlp ;
   unsigned char pcie_link_algo ;
   unsigned int counters_addr ;
   unsigned int copy_block_info ;
   unsigned short handoff_id_major ;
   unsigned short handoff_id_caps ;
   unsigned int msix_table_addr ;
   unsigned int bss_addr ;
   unsigned int features ;
   unsigned int ee_hdr_addr ;
   unsigned int led_pattern ;
   unsigned int led_pattern_dflt ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_rx_buffer_state {
   struct page *page ;
   int page_offset ;
   dma_addr_t bus ;
   __u32 len ;
};

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_tx_buffer_state {
   struct sk_buff *skb ;
   int last ;
   dma_addr_t bus ;
   __u32 len ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_cmd {
   u32 data0 ;
   u32 data1 ;
   u32 data2 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_rx_buf {
   struct mcp_kreq_ether_recv *lanai ;
   struct mcp_kreq_ether_recv *shadow ;
   struct myri10ge_rx_buffer_state *info ;
   struct page *page ;
   dma_addr_t bus ;
   int page_offset ;
   int cnt ;
   int fill_cnt ;
   int alloc_fail ;
   int mask ;
   int watchdog_needed ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_tx_buf {
   struct mcp_kreq_ether_send *lanai ;
   __be32 *send_go ;
   __be32 *send_stop ;
   struct mcp_kreq_ether_send *req_list ;
   char *req_bytes ;
   struct myri10ge_tx_buffer_state *info ;
   int mask ;
   int req ;
   int pkt_start ;
   int stop_queue ;
   int linearized ;
   int done ;
   int pkt_done ;
   int wake_queue ;
   int queue_active ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_rx_done {
   struct mcp_slot *entry ;
   dma_addr_t bus ;
   int cnt ;
   int idx ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_slice_netstats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
};

#line 172 
struct myri10ge_priv;

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_slice_state {
   struct myri10ge_tx_buf tx ;
   struct myri10ge_rx_buf rx_small ;
   struct myri10ge_rx_buf rx_big ;
   struct myri10ge_rx_done rx_done ;
   struct net_device *dev ;
   struct napi_struct napi ;
   struct myri10ge_priv *mgp ;
   struct myri10ge_slice_netstats stats ;
   __be32 *irq_claim ;
   struct mcp_irq_data *fw_stats ;
   dma_addr_t fw_stats_bus ;
   int watchdog_tx_done ;
   int watchdog_tx_req ;
   int watchdog_rx_done ;
   int stuck ;
   int cached_dca_tag ;
   int cpu ;
   __be32 *dca_tag ;
   unsigned int state ;
   spinlock_t lock ;
   unsigned long lock_napi_yield ;
   unsigned long lock_poll_yield ;
   unsigned long busy_poll_miss ;
   unsigned long busy_poll_cnt ;
   char irq_desc[32U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct myri10ge_priv {
   struct myri10ge_slice_state *ss ;
   int tx_boundary ;
   int num_slices ;
   int running ;
   int small_bytes ;
   int big_bytes ;
   int max_intr_slots ;
   struct net_device *dev ;
   u8 *sram ;
   int sram_size ;
   unsigned long board_span ;
   unsigned long iomem_base ;
   __be32 *irq_deassert ;
   char *mac_addr_string ;
   struct mcp_cmd_response *cmd ;
   dma_addr_t cmd_bus ;
   struct pci_dev *pdev ;
   int msi_enabled ;
   int msix_enabled ;
   struct msix_entry *msix_vectors ;
   int dca_enabled ;
   int relaxed_order ;
   u32 link_state ;
   unsigned int rdma_tags_available ;
   int intr_coal_delay ;
   __be32 *intr_coal_delay_ptr ;
   int wc_cookie ;
   int down_cnt ;
   wait_queue_head_t down_wq ;
   struct work_struct watchdog_work ;
   struct timer_list watchdog_timer ;
   int watchdog_resets ;
   int watchdog_pause ;
   int pause ;
   bool fw_name_allocated ;
   char *fw_name ;
   char eeprom_strings[256U] ;
   char *product_code_string ;
   char fw_version[128U] ;
   int fw_ver_major ;
   int fw_ver_minor ;
   int fw_ver_tiny ;
   int adopted_rx_filter_bug ;
   u8 mac_addr[6U] ;
   unsigned long serial_number ;
   int vendor_specific_offset ;
   int fw_multicast_support ;
   u32 features ;
   u32 max_tso6 ;
   u32 read_dma ;
   u32 write_dma ;
   u32 read_write_dma ;
   u32 link_changes ;
   u32 msg_enable ;
   unsigned int board_number ;
   int rebooted ;
};

#line 773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
typedef int ldv_func_ret_type;

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_16 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_14 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/fvtp/.tmp_myri10ge.c"
void ldv_inline_asm(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static bool is_power_of_2(unsigned long n)
{
  bool __retres;
  
#line 54 
  __retres = (_Bool)((n != 0UL && ((n + 18446744073709551615UL) & n) == 0UL) != 0);
  
#line 54 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __rounddown_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 72 
  tmp = fls_long(n);
  
#line 72 
  __retres = 1UL << (tmp + 4294967295U);
  
#line 72 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 393 
unsigned long simple_strtoul(char const *, char **, unsigned int);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 418 
int sscanf(char const *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 50 
char *strchr(char const *, int);


#line 118 
char *kstrdup(char const *, gfp_t);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR(void const *ptr);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  
#line 567 
  ldv_inline_asm();
  
#line 568 
  return;
}


#line 570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  
#line 572 
  rep_nop();
  
#line 573 
  return;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 39 
int _raw_spin_trylock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_73(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 391 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock(spinlock_t *lock)
{
  int tmp;
  
#line 398 
  tmp = _raw_spin_trylock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 398 
  return tmp;
}


#line 343 
static int ldv_spin_trylock_62(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_74(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 444 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
void synchronize_sched(void);


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void synchronize_rcu(void)
{
  
#line 280 
  synchronize_sched();
  
#line 281 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_87(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_81(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_88(struct work_struct *work);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void __writeb(unsigned char val, void volatile *addr)
{
  
#line 70 
  ldv_inline_asm();
  
#line 71 
  return;
}


#line 195 
void iounmap(void volatile *);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_fromio(void *dst, void const volatile *src, size_t count)
{
  
#line 217 
  memcpy(dst,(void const *)src,count);
  
#line 218 
  return;
}


#line 329 
void *ioremap_wc(resource_size_t, unsigned long);


#line 352 
int arch_phys_wc_add(unsigned long, unsigned long);


#line 354 
void arch_phys_wc_del(int);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__wsum csum_partial(void const *, int, __wsum);


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static unsigned int add32_with_carry(unsigned int a, unsigned int b)
{
  
#line 184 
  ldv_inline_asm();
  
#line 188 
  return a;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_add(__wsum csum, __wsum addend)
{
  __wsum tmp;
  
#line 194 
  tmp = add32_with_carry(csum,addend);
  
#line 194 
  return tmp;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_sub(__wsum csum, __wsum addend)
{
  __wsum tmp;
  
#line 71 
  tmp = csum_add(csum,~ addend);
  
#line 71 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_unfold(__sum16 n)
{
  __wsum __retres;
  
#line 113 
  __retres = (unsigned int)n;
  
#line 113 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
int driver_for_each_device(struct device_driver *, struct device *, void *, int (*)(struct device *, void *));


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_36.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_32.__anonCompField___anonstruct_57_27.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 862 
int skb_pad(struct sk_buff *, int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_put(struct sk_buff *skb, unsigned int len)
{
  bool tmp_1;
  
#line 1691 
  unsigned char *tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1692 
  tmp_1 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 1692 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 1694 
    ldv_inline_asm();
    
#line 1692 
    ;
  }
  else ;
  
#line 1693 
  skb->tail += len;
  
#line 1694 
  skb->len += len;
  
#line 1695 
  return tmp;
}


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_checksum_start_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp;
  
#line 1964 
  tmp = skb_headroom(skb);
  
#line 1964 
  ;
  
#line 1964 
  __retres = (int)((unsigned int)skb->__anonCompField_sk_buff_69.__anonCompField___anonunion_220_68.csum_start - tmp);
  
#line 1964 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_put_padto(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  
#line 2503 
  unsigned int size = skb->len;
  
#line 2505 
  if ((long)(size < len) != 0L) {
    int tmp;
    
#line 2506 
    len -= size;
    
#line 2507 
    tmp = skb_pad(skb,(int)len);
    
#line 2507 
    if (tmp != 0) {
      
#line 2508 
      __retres = -12;
      
#line 2508 
      goto return_label;
    }
    else ;
    
#line 2509 
    __skb_put(skb,len);
  }
  else ;
  
#line 2511 
  __retres = 0;
  return_label: 
#line 2511 
                return __retres;
}


#line 2545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_linearize(struct sk_buff *skb)
{
  int tmp_0;
  unsigned char *tmp;
  
#line 2547 
  tmp = __pskb_pull_tail(skb,(int)skb->data_len);
  
#line 2547 
  if (tmp != (unsigned char *)0U) 
#line 2547 
                                  tmp_0 = 0; else 
#line 2547 
                                                  tmp_0 = -12;
  
#line 2547 
  return tmp_0;
}


#line 2557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_linearize(struct sk_buff *skb)
{
  int tmp_1;
  bool tmp;
  
#line 2559 
  tmp = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 2559 
  if ((int)tmp != 0) 
#line 2559 
                     tmp_1 = __skb_linearize(skb); else 
#line 2559 
                                                        tmp_1 = 0;
  
#line 2559 
  return tmp_1;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso_v6(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3392 
  tmp = skb_end_pointer(skb);
  
#line 3392 
  ;
  
#line 3392 
  __retres = (_Bool)(((int)((struct skb_shared_info *)tmp)->gso_type & 16) != 0);
  
#line 3392 
  return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/io.h"
void __iowrite64_copy(void *, void const *, size_t);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_82(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_84(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static void ldv_free_irq_83(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 161 
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 478 
void napi_hash_add(struct napi_struct *);


#line 487 
void napi_hash_del(struct napi_struct *);


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_92(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_94(struct net_device *ldv_func_arg1);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2559 
  i = 0U;
  
#line 2559 
  goto ldv_42316;
  ldv_42315: 
#line 2560 
  ;
  {
    
#line 2560 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2561 
    netif_tx_wake_queue(txq);
  }
  
#line 2559 
  i += 1U;
  ldv_42316: 
#line 2560 
  ;
  
#line 2559 
  if (dev->num_tx_queues > i) 
#line 2561 
                              goto ldv_42315; else 
#line 2564 
                                                   goto ldv_42317;
  ldv_42317: 
#line 2565 
  ;
  
#line 2566 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2892 
int netif_get_num_default_rss_queues(void);


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2950 
struct sk_buff *napi_get_frags(struct napi_struct *);


#line 2951 
gro_result_t napi_gro_frags(struct napi_struct *);


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_tx_trylock(struct netdev_queue *txq)
{
  int tmp;
  
#line 3184 
  tmp = ldv_spin_trylock_62(& txq->_xmit_lock);
  
#line 3184 
  bool ok = (_Bool)(tmp != 0);
  
#line 3185 
  if ((long)((int)ok != 0) != 0L) {
    int tmp_4;
    {
      int pscr_ret__;
      {
        
#line 3186 
        void const *__vpp_verify = (void const *)0;
        
#line 3186 
        void const *tmp_2 = __vpp_verify;
      }
      
#line 3186 
      switch (4UL) {
        int tmp_0;
        int tmp_1;
        int tmp_2_0;
        int tmp_3;
        case (unsigned long)1: 
#line 3186 
        ;
        {
          int pfo_ret__;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42758;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42758;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42758;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42758;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42758: 
#line 3186 
          ;
          
#line 3186 
          tmp_0 = pfo_ret__;
        }
        
#line 3186 
        pscr_ret__ = tmp_0;
        
#line 3186 
        goto ldv_42764;
        case (unsigned long)2: 
#line 3186 
        ;
        {
          int pfo_ret___0;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42768;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42768;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42768;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42768;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42768: 
#line 3186 
          ;
          
#line 3186 
          tmp_1 = pfo_ret___0;
        }
        
#line 3186 
        pscr_ret__ = tmp_1;
        
#line 3186 
        goto ldv_42764;
        case (unsigned long)4: 
#line 3186 
        ;
        {
          int pfo_ret___1;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42777;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42777;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42777;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42777;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42777: 
#line 3186 
          ;
          
#line 3186 
          tmp_2_0 = pfo_ret___1;
        }
        
#line 3186 
        pscr_ret__ = tmp_2_0;
        
#line 3186 
        goto ldv_42764;
        case (unsigned long)8: 
#line 3186 
        ;
        {
          int pfo_ret___2;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42786;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42786;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42786;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42786;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42786: 
#line 3186 
          ;
          
#line 3186 
          tmp_3 = pfo_ret___2;
        }
        
#line 3186 
        pscr_ret__ = tmp_3;
        
#line 3186 
        goto ldv_42764;
        default: 
#line 3186 
        ;
        
#line 3186 
        __bad_size_call_parameter();
        
#line 3186 
        goto ldv_42764;
      }
      ldv_42764: 
#line 3186 
      ;
      
#line 3186 
      tmp_4 = pscr_ret__;
    }
    
#line 3186 
    txq->xmit_lock_owner = tmp_4;
  }
  else ;
  
#line 3187 
  return ok;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42877;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42877;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42877;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42877;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_42877: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_42883;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42887;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42887;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42887;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42887;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_42887: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_42883;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42896;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42896;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42896;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42896;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_42896: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_42883;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42905;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42905;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42905;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_42905;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_42905: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_42883;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_42883;
    }
    ldv_42883: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_42915;
  ldv_42914: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_stop_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_42915: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_42914; else 
#line 3294 
                                                   goto ldv_42916;
  ldv_42916: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_91(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_93(struct net_device *ldv_func_arg1);


#line 3553 
int skb_checksum_help(struct sk_buff *);


#line 3554 
struct sk_buff *__skb_gso_segment(struct sk_buff *, netdev_features_t, bool);


#line 3573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct sk_buff *skb_gso_segment(struct sk_buff *skb, netdev_features_t features)
{
  struct sk_buff *tmp;
  
#line 3575 
  tmp = __skb_gso_segment(skb,features,(_Bool)1);
  
#line 3575 
  return tmp;
}


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
void kernel_param_lock(struct module *);


#line 244 
void kernel_param_unlock(struct module *);


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_find_capability(struct pci_dev *, int);


#line 837 
int pci_find_ext_capability(struct pci_dev *, int);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 910 
int pcie_capability_read_word(struct pci_dev *, int, u16 *);


#line 912 
int pcie_capability_write_word(struct pci_dev *, int, u16);


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 991 
int pcie_get_readrq(struct pci_dev *);


#line 992 
int pcie_set_readrq(struct pci_dev *, int);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1146 
static int ldv___pci_register_driver_95(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_96(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_page(struct pci_dev *hwdev, struct page *page, unsigned long offset, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  if (hwdev != (struct pci_dev *)0) 
#line 54 
                                    tmp = & hwdev->dev; else 
#line 54 
                                                             tmp = (struct device *)0;
  
#line 54 
  tmp_0 = dma_map_page(tmp,page,offset,size,(enum dma_data_direction)direction);
  
#line 54 
  return tmp_0;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static u16 pcie_caps_reg(struct pci_dev const *dev)
{
  u16 __retres;
  
#line 1740 
  __retres = dev->pcie_flags_reg;
  
#line 1740 
  return __retres;
}


#line 1747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_type(struct pci_dev const *dev)
{
  int __retres;
  u16 tmp;
  
#line 1749 
  tmp = pcie_caps_reg(dev);
  
#line 1749 
  __retres = ((int)tmp >> 4) & 15;
  
#line 1749 
  return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_90(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static int eth_skb_pad(struct sk_buff *skb)
{
  int tmp;
  
#line 447 
  tmp = skb_put_padto(skb,60U);
  
#line 447 
  return tmp;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dca.h"
void dca_register_notify(struct notifier_block *);


#line 30 
void dca_unregister_notify(struct notifier_block *);


#line 68 
int dca_add_requester(struct device *);


#line 69 
int dca_remove_requester(struct device *);


#line 71 
u8 dca3_get_tag(struct device *, int);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
__inline static void skb_mark_napi_id(struct sk_buff *skb, struct napi_struct *napi)
{
  
#line 124 
  skb->__anonCompField_sk_buff_70.napi_id = napi->napi_id;
  
#line 125 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_unaligned = (char *)"myri10ge_ethp_z8e.dat";

#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_aligned = (char *)"myri10ge_eth_z8e.dat";

#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_rss_unaligned = (char *)"myri10ge_rss_ethp_z8e.dat";

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_rss_aligned = (char *)"myri10ge_rss_eth_z8e.dat";

#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_name = (char *)0;

#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char *myri10ge_fw_names[8U] = {(char *)0, (char *)0, (char *)0, (char *)0, (char *)0, (char *)0, (char *)0, (char *)0};

#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_ecrc_enable = 1;

#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_small_bytes = -1;

#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_msi = 1;

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_intr_coal_delay = 75;

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_flow_control = 1;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_deassert_wait = 1;

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_force_firmware = 0;

#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_initial_mtu = 9000;

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_napi_weight = 64;

#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_watchdog_timeout = 1;

#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_max_irq_loops = 1048576;

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_debug = -1;

#line 347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_fill_thresh = 256;

#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_reset_recover = 1;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_max_slices = 1;

#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_rss_hash = 5;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_dca = 1;

#line 372 
static void myri10ge_set_multicast_list(struct net_device *dev);


#line 373 
static netdev_tx_t myri10ge_sw_tso(struct sk_buff *skb, struct net_device *dev);


#line 376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void put_be32(__be32 val, __be32 *p)
{
  
#line 378 
  writel(val,(void volatile *)p);
  
#line 379 
  return;
}


#line 381 
static struct rtnl_link_stats64 *myri10ge_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats);


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void set_fw_name(struct myri10ge_priv *mgp, char *name, bool allocated)
{
  
#line 386 
  if ((int)mgp->fw_name_allocated != 0) 
#line 387 
                                        kfree((void const *)mgp->fw_name); else ;
  
#line 388 
  mgp->fw_name = name;
  
#line 389 
  mgp->fw_name_allocated = allocated;
  
#line 390 
  return;
}


#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_send_cmd(struct myri10ge_priv *mgp, u32 cmd, struct myri10ge_cmd *data, int atomic)
{
  int __retres;
  struct mcp_cmd *buf;
  char buf_bytes[72U];
  u32 dma_low;
  u32 dma_high;
  u32 result;
  u32 value;
  
#line 398 
  struct mcp_cmd_response *response = mgp->cmd;
  
#line 399 
  char *cmd_addr = (char *)(mgp->sram + 16252928U);
  
#line 401 
  int sleep_total = 0;
  
#line 404 
  buf = (struct mcp_cmd *)(((unsigned long)(& buf_bytes) + 7UL) & 18446744073709551608UL);
  
#line 406 
  if (0 != 0) 
#line 406 
              buf->data0 = (((data->data0 << 24) | ((data->data0 << 8) & 16711680U)) | ((data->data0 >> 8) & 65280U)) | (data->data0 >> 24); else 
                                                                    
#line 406 
                                                                    buf->data0 = __fswab32(data->data0);
  
#line 407 
  if (0 != 0) 
#line 407 
              buf->data1 = (((data->data1 << 24) | ((data->data1 << 8) & 16711680U)) | ((data->data1 >> 8) & 65280U)) | (data->data1 >> 24); else 
                                                                    
#line 407 
                                                                    buf->data1 = __fswab32(data->data1);
  
#line 408 
  if (0 != 0) 
#line 408 
              buf->data2 = (((data->data2 << 24) | ((data->data2 << 8) & 16711680U)) | ((data->data2 >> 8) & 65280U)) | (data->data2 >> 24); else 
                                                                    
#line 408 
                                                                    buf->data2 = __fswab32(data->data2);
  
#line 409 
  if (0 != 0) 
#line 409 
              buf->cmd = (((cmd << 24) | ((cmd << 8) & 16711680U)) | ((cmd >> 8) & 65280U)) | (cmd >> 24); else 
                                                                    
#line 409 
                                                                    buf->cmd = __fswab32(cmd);
  
#line 410 
  dma_low = (unsigned int)mgp->cmd_bus;
  
#line 411 
  dma_high = (unsigned int)(mgp->cmd_bus >> 32);
  
#line 413 
  if (0 != 0) 
#line 413 
              buf->response_addr.low = (((dma_low << 24) | ((dma_low << 8) & 16711680U)) | ((dma_low >> 8) & 65280U)) | (dma_low >> 24); else 
                                                                    
#line 413 
                                                                    buf->response_addr.low = __fswab32(dma_low);
  
#line 414 
  if (0 != 0) 
#line 414 
              buf->response_addr.high = (((dma_high << 24) | ((dma_high << 8) & 16711680U)) | ((dma_high >> 8) & 65280U)) | (dma_high >> 24); else 
                                                                    
#line 414 
                                                                    buf->response_addr.high = __fswab32(dma_high);
  
#line 415 
  response->result = 4294967295U;
  
#line 416 
  ldv_inline_asm();
  
#line 417 
  __iowrite64_copy((void *)cmd_addr,(void const *)buf,8UL);
  
#line 424 
  if (atomic != 0) {
    
#line 428 
    sleep_total = 0;
    
#line 428 
    goto ldv_56742;
    ldv_56741: 
#line 429 
    ;
    
#line 432 
    __const_udelay(42950UL);
    
#line 434 
    ldv_inline_asm();
    
#line 431 
    sleep_total += 10;
    ldv_56742: 
#line 432 
    ;
    
#line 428 
    if (sleep_total <= 999 && response->result == 4294967295U) 
#line 432 
                                                               goto ldv_56741; else 
                                                                    
#line 435 
                                                                    goto ldv_56743;
    ldv_56743: 
#line 436 
    ;
  }
  else {
    
#line 437 
    sleep_total = 0;
    
#line 437 
    goto ldv_56745;
    ldv_56744: 
#line 438 
    ;
    
#line 441 
    msleep(1U);
    
#line 440 
    sleep_total += 1;
    ldv_56745: 
#line 441 
    ;
    
#line 437 
    if (sleep_total <= 14 && response->result == 4294967295U) 
#line 441 
                                                              goto ldv_56744; else 
                                                                    
#line 444 
                                                                    goto ldv_56746;
    ldv_56746: 
#line 445 
    ;
  }
  
#line 444 
  if (0 != 0) 
#line 444 
              result = (((response->result << 24) | ((response->result << 8) & 16711680U)) | ((response->result >> 8) & 65280U)) | (response->result >> 24); else 
                                                                    
#line 444 
                                                                    result = __fswab32(response->result);
  
#line 445 
  if (0 != 0) 
#line 445 
              value = (((response->data << 24) | ((response->data << 8) & 16711680U)) | ((response->data >> 8) & 65280U)) | (response->data >> 24); else 
                                                                    
#line 445 
                                                                    value = __fswab32(response->data);
  
#line 446 
  if (result != 4294967295U) 
    
#line 447 
    if (result == 0U) {
      
#line 448 
      data->data0 = value;
      
#line 449 
      __retres = 0;
      
#line 449 
      goto return_label;
    }
    else 
      
#line 450 
      if (result == 1U) {
        
#line 451 
        __retres = -38;
        
#line 451 
        goto return_label;
      }
      else 
        
#line 452 
        if (result == 10U) {
          
#line 453 
          __retres = -7;
          
#line 453 
          goto return_label;
        }
        else 
          
#line 454 
          if ((result == 2U && cmd == 36U) && (data->data1 & 2U) != 0U) {
            
#line 459 
            __retres = -34;
            
#line 459 
            goto return_label;
          }
          else {
            
#line 461 
            dev_err((struct device const *)(& (mgp->pdev)->dev),"command %d failed, result = %d\n",cmd,result);
            
#line 464 
            __retres = -6;
            
#line 464 
            goto return_label;
          }
  else ;
  
#line 468 
  dev_err((struct device const *)(& (mgp->pdev)->dev),"command %d timed out, result = %d\n",cmd,result);
  
#line 470 
  __retres = -11;
  return_label: 
#line 470 
                return __retres;
}


#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_read_mac_addr(struct myri10ge_priv *mgp)
{
  int __retres;
  char *ptr;
  char *limit;
  int i;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 485 
  ptr = (char *)(& mgp->eeprom_strings);
  
#line 486 
  limit = (char *)(& mgp->eeprom_strings) + 256U;
  
#line 488 
  goto ldv_56761;
  ldv_56760: 
#line 489 
  ;
  
#line 489 
  tmp_0 = memcmp((void const *)ptr,(void const *)"MAC=",4UL);
  
#line 489 
  if (tmp_0 == 0) {
    unsigned long tmp;
    
#line 490 
    ptr += 4U;
    
#line 491 
    mgp->mac_addr_string = ptr;
    
#line 492 
    i = 0;
    
#line 492 
    goto ldv_56755;
    ldv_56754: 
#line 493 
    ;
    
#line 493 
    if (ptr + 2U > limit) 
#line 494 
                          goto abort; else ;
    
#line 495 
    tmp = simple_strtoul((char const *)ptr,& ptr,16U);
    
#line 495 
    mgp->mac_addr[i] = (unsigned char)tmp;
    
#line 497 
    ptr += 1U;
    
#line 492 
    i += 1;
    ldv_56755: 
#line 493 
    ;
    
#line 492 
    if (i <= 5) 
#line 494 
                goto ldv_56754; else 
#line 497 
                                     goto ldv_56756;
    ldv_56756: 
#line 498 
    ;
  }
  else ;
  
#line 500 
  tmp_1 = memcmp((void const *)ptr,(void const *)"PC=",3UL);
  
#line 500 
  if (tmp_1 == 0) {
    
#line 501 
    ptr += 3U;
    
#line 502 
    mgp->product_code_string = ptr;
  }
  else ;
  
#line 504 
  tmp_2 = memcmp((void const *)ptr,(void const *)"SN=",3UL);
  
#line 504 
  if (tmp_2 == 0) {
    
#line 505 
    ptr += 3U;
    
#line 506 
    mgp->serial_number = simple_strtoul((char const *)ptr,& ptr,10U);
  }
  else ;
  
#line 508 
  goto ldv_56758;
  ldv_56757: 
#line 509 
  ;
  ldv_56758: 
#line 510 
  ;
  
#line 508 
  if (ptr < limit) {
    char *tmp_3;
    
#line 508 
    tmp_3 = ptr;
    
#line 508 
    ptr += 1;
    
#line 508 
    ;
    
#line 508 
    if ((int)*tmp_3 != 0) 
#line 510 
                          goto ldv_56757; else 
#line 513 
                                               goto ldv_56759;
  }
  else 
#line 513 
       goto ldv_56759;
  ldv_56759: 
#line 514 
  ;
  ldv_56761: 
#line 515 
  ;
  
#line 488 
  if ((int)*ptr != 0 && ptr < limit) 
#line 490 
                                     goto ldv_56760; else 
#line 493 
                                                          goto ldv_56762;
  ldv_56762: 
#line 494 
  ;
  
#line 511 
  __retres = 0;
  
#line 511 
  goto return_label;
  abort: 
#line 513 
  ;
  
#line 514 
  dev_err((struct device const *)(& (mgp->pdev)->dev),"failed to parse eeprom_strings\n");
  
#line 515 
  __retres = -6;
  return_label: 
#line 515 
                return __retres;
}


#line 523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_dummy_rdma(struct myri10ge_priv *mgp, int enable)
{
  char *submit;
  __be32 buf[16U];
  u32 dma_low;
  u32 dma_high;
  int i;
  
#line 531 
  (mgp->cmd)->data = 0U;
  
#line 532 
  ldv_inline_asm();
  
#line 538 
  dma_low = (unsigned int)mgp->cmd_bus;
  
#line 539 
  dma_high = (unsigned int)(mgp->cmd_bus >> 32);
  
#line 541 
  if (0 != 0) 
#line 541 
              buf[0] = (((dma_high << 24) | ((dma_high << 8) & 16711680U)) | ((dma_high >> 8) & 65280U)) | (dma_high >> 24); else 
                                                                    
#line 541 
                                                                    buf[0] = __fswab32(dma_high);
  
#line 542 
  if (0 != 0) 
#line 542 
              buf[1] = (((dma_low << 24) | ((dma_low << 8) & 16711680U)) | ((dma_low >> 8) & 65280U)) | (dma_low >> 24); else 
                                                                    
#line 542 
                                                                    buf[1] = __fswab32(dma_low);
  
#line 543 
  buf[2] = 4294967295U;
  
#line 544 
  if (0 != 0) 
#line 544 
              buf[3] = (((dma_high << 24) | ((dma_high << 8) & 16711680U)) | ((dma_high >> 8) & 65280U)) | (dma_high >> 24); else 
                                                                    
#line 544 
                                                                    buf[3] = __fswab32(dma_high);
  
#line 545 
  if (0 != 0) 
#line 545 
              buf[4] = (((dma_low << 24) | ((dma_low << 8) & 16711680U)) | ((dma_low >> 8) & 65280U)) | (dma_low >> 24); else 
                                                                    
#line 545 
                                                                    buf[4] = __fswab32(dma_low);
  
#line 546 
  if (0 != 0) 
#line 546 
              buf[5] = ((((unsigned int)enable << 24) | (((unsigned int)enable << 8) & 16711680U)) | (((unsigned int)enable >> 8) & 65280U)) | ((unsigned int)enable >> 24); else 
                                                                    
#line 546 
                                                                    buf[5] = __fswab32((unsigned int)enable);
  
#line 548 
  submit = (char *)(mgp->sram + 16515520U);
  
#line 550 
  __iowrite64_copy((void *)submit,(void const *)(& buf),8UL);
  
#line 551 
  i = 0;
  
#line 551 
  goto ldv_56773;
  ldv_56772: 
#line 552 
  ;
  
#line 552 
  msleep(1U);
  
#line 551 
  i += 1;
  ldv_56773: 
#line 552 
  ;
  
#line 551 
  if ((mgp->cmd)->data != 4294967295U && i <= 19) 
#line 553 
                                                  goto ldv_56772; else 
                                                                    
#line 556 
                                                                    goto ldv_56774;
  ldv_56774: 
#line 557 
  ;
  
#line 553 
  if ((mgp->cmd)->data != 4294967295U) {
    char *tmp_4;
    
#line 554 
    if (enable != 0) 
#line 554 
                     tmp_4 = (char *)"enable"; else 
#line 554 
                                                    tmp_4 = (char *)"disable";
    
#line 554 
    ;
    
#line 554 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"dummy rdma %s failed\n",tmp_4);
  }
  else ;
  
#line 556 
  return;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_validate_firmware(struct myri10ge_priv *mgp, struct mcp_gen_header *hdr)
{
  int __retres;
  int tmp_2;
  
#line 562 
  struct device *dev = & (mgp->pdev)->dev;
  
#line 565 
  if (0 != 0) 
#line 565 
              tmp_2 = ((((hdr->mcp_type << 24) | ((hdr->mcp_type << 8) & 16711680U)) | ((hdr->mcp_type >> 8) & 65280U)) | (hdr->mcp_type >> 24)) != 1163151392U;
  else {
    __u32 tmp_1;
    
#line 565 
    tmp_1 = __fswab32(hdr->mcp_type);
    
#line 565 
    tmp_2 = tmp_1 != 1163151392U;
  }
  
#line 565 
  if (tmp_2) {
    unsigned int tmp_0;
    
#line 566 
    if (0 != 0) 
#line 566 
                tmp_0 = (((hdr->mcp_type << 24) | ((hdr->mcp_type << 8) & 16711680U)) | ((hdr->mcp_type >> 8) & 65280U)) | (hdr->mcp_type >> 24); else 
                                                                    
#line 566 
                                                                    tmp_0 = __fswab32(hdr->mcp_type);
    
#line 566 
    ;
    
#line 566 
    dev_err((struct device const *)dev,"Bad firmware type: 0x%x\n",tmp_0);
    
#line 567 
    __retres = -22;
    
#line 567 
    goto return_label;
  }
  else ;
  
#line 571 
  strncpy((char *)(& mgp->fw_version),(char const *)(& hdr->version),128UL);
  
#line 572 
  mgp->fw_version[127UL] = (char)0;
  
#line 574 
  sscanf((char const *)(& mgp->fw_version),"%d.%d.%d",& mgp->fw_ver_major,& mgp->fw_ver_minor,& mgp->fw_ver_tiny);
  
#line 577 
  if (mgp->fw_ver_major != 1 || mgp->fw_ver_minor != 4) {
    
#line 579 
    dev_err((struct device const *)dev,"Found firmware version %s\n",(char *)(& mgp->fw_version));
    
#line 580 
    dev_err((struct device const *)dev,"Driver needs %d.%d\n",1,4);
    
#line 582 
    __retres = -22;
    
#line 582 
    goto return_label;
  }
  else ;
  
#line 584 
  __retres = 0;
  return_label: 
#line 584 
                return __retres;
}


#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_load_hotplug_firmware(struct myri10ge_priv *mgp, u32 *size)
{
  unsigned int crc;
  unsigned int reread_crc;
  struct firmware const *fw;
  unsigned char *fw_readback;
  struct mcp_gen_header *hdr;
  size_t hdr_offset;
  int status;
  unsigned int i;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 591 
  struct device *dev = & (mgp->pdev)->dev;
  
#line 598 
  status = request_firmware(& fw,(char const *)mgp->fw_name,dev);
  
#line 598 
  if (status < 0) {
    
#line 599 
    dev_err((struct device const *)dev,"Unable to load %s firmware image via hotplug\n",mgp->fw_name);
    
#line 601 
    status = -22;
    
#line 602 
    goto abort_with_nothing;
  }
  else ;
  
#line 607 
  if (fw->size >= (unsigned long)(mgp->sram_size + -1048576) || fw->size <= 63UL) {
    
#line 609 
    dev_err((struct device const *)dev,"Firmware size invalid:%d\n",(int)fw->size);
    
#line 610 
    status = -22;
    
#line 611 
    goto abort_with_fw;
  }
  else ;
  
#line 615 
  if (0 != 0) 
#line 615 
              tmp_0 = (((*((__be32 *)(fw->data + 60U)) << 24) | ((*((__be32 *)(fw->data + 60U)) << 8) & 16711680U)) | ((*((__be32 *)(fw->data + 60U)) >> 8) & 65280U)) | (*((__be32 *)(fw->data + 60U)) >> 24); else 
                                                                    
#line 615 
                                                                    tmp_0 = __fswab32(*((__be32 *)(fw->data + 60U)));
  
#line 615 
  hdr_offset = (unsigned long)tmp_0;
  
#line 616 
  if ((hdr_offset & 3UL) != 0UL || hdr_offset + 192UL > fw->size) {
    
#line 617 
    dev_err((struct device const *)dev,"Bad firmware file\n");
    
#line 618 
    status = -22;
    
#line 619 
    goto abort_with_fw;
  }
  else ;
  
#line 621 
  hdr = (struct mcp_gen_header *)(fw->data + hdr_offset);
  
#line 623 
  status = myri10ge_validate_firmware(mgp,hdr);
  
#line 624 
  if (status != 0) 
#line 625 
                   goto abort_with_fw; else ;
  
#line 627 
  crc = crc32_le(4294967295U,fw->data,fw->size);
  
#line 628 
  i = 0U;
  
#line 628 
  goto ldv_56799;
  ldv_56798: 
#line 629 
  ;
  {
    unsigned int tmp_1;
    
#line 629 
    unsigned int _min1 = 256U;
    
#line 629 
    unsigned int _min2 = (unsigned int)fw->size - i;
    
#line 629 
    if (_min1 < _min2) 
#line 629 
                       tmp_1 = _min1; else 
#line 629 
                                           tmp_1 = _min2;
    
#line 629 
    tmp_2 = tmp_1;
  }
  
#line 629 
  ;
  
#line 629 
  ;
  
#line 629 
  __iowrite64_copy((void *)(mgp->sram + (i + 1048576U)),(void const *)(fw->data + i),(unsigned long)(tmp_2 / 8U));
  
#line 630 
  ldv_inline_asm();
  
#line 633 
  readb((void const volatile *)mgp->sram);
  
#line 628 
  i += 256U;
  ldv_56799: 
#line 629 
  ;
  
#line 628 
  if ((unsigned long)i < fw->size) 
#line 630 
                                   goto ldv_56798; else 
#line 633 
                                                        goto ldv_56800;
  ldv_56800: 
#line 634 
  ;
  
#line 635 
  fw_readback = (unsigned char *)vmalloc(fw->size);
  
#line 636 
  if (fw_readback == (unsigned char *)0U) {
    
#line 637 
    status = -12;
    
#line 638 
    goto abort_with_fw;
  }
  else ;
  
#line 641 
  memcpy_fromio((void *)fw_readback,(void const volatile *)(mgp->sram + 1048576U),fw->size);
  
#line 642 
  reread_crc = crc32_le(4294967295U,(unsigned char const *)fw_readback,fw->size);
  
#line 643 
  vfree((void const *)fw_readback);
  
#line 644 
  if (crc != reread_crc) {
    
#line 645 
    dev_err((struct device const *)dev,"CRC failed(fw-len=%u), got 0x%x (expect 0x%x)\n",(unsigned int)fw->size,reread_crc,crc);
    
#line 647 
    status = -5;
    
#line 648 
    goto abort_with_fw;
  }
  else ;
  
#line 650 
  *size = (unsigned int)fw->size;
  abort_with_fw: 
#line 652 
  ;
  
#line 653 
  release_firmware(fw);
  abort_with_nothing: 
#line 655 
  ;
  
#line 656 
  return status;
}


#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_adopt_running_firmware(struct myri10ge_priv *mgp)
{
  int __retres;
  struct mcp_gen_header *hdr;
  size_t hdr_offset;
  int status;
  __u32 tmp_0;
  unsigned int tmp;
  
#line 662 
  struct device *dev = & (mgp->pdev)->dev;
  
#line 663 
  size_t const bytes = 192UL;
  
#line 668 
  tmp = readl((void const volatile *)(mgp->sram + 60U));
  
#line 668 
  tmp_0 = __fswab32(tmp);
  
#line 668 
  hdr_offset = (unsigned long)tmp_0;
  
#line 670 
  if ((hdr_offset & 3UL) != 0UL || hdr_offset + 192UL > (unsigned long)mgp->sram_size) {
    
#line 671 
    dev_err((struct device const *)dev,"Running firmware has bad header offset (%d)\n",(int)hdr_offset);
    
#line 673 
    __retres = -5;
    
#line 673 
    goto return_label;
  }
  else ;
  
#line 678 
  hdr = (struct mcp_gen_header *)kmalloc(bytes,208U);
  
#line 679 
  if (hdr == (struct mcp_gen_header *)0) {
    
#line 680 
    __retres = -12;
    
#line 680 
    goto return_label;
  }
  else ;
  
#line 682 
  memcpy_fromio((void *)hdr,(void const volatile *)(mgp->sram + hdr_offset),bytes);
  
#line 683 
  status = myri10ge_validate_firmware(mgp,hdr);
  
#line 684 
  kfree((void const *)hdr);
  
#line 689 
  if (((mgp->fw_ver_major == 1 && mgp->fw_ver_minor == 4) && mgp->fw_ver_tiny > 3) && mgp->fw_ver_tiny <= 11) {
    
#line 691 
    mgp->adopted_rx_filter_bug = 1;
    
#line 692 
    dev_warn((struct device const *)dev,"Adopting fw %d.%d.%d: ",mgp->fw_ver_major,mgp->fw_ver_minor,mgp->fw_ver_tiny);
  }
  else ;
  
#line 697 
  __retres = status;
  return_label: 
#line 697 
                return __retres;
}


#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_get_firmware_capabilities(struct myri10ge_priv *mgp)
{
  int __retres;
  struct myri10ge_cmd cmd;
  int status;
  
#line 706 
  mgp->features = 65545U;
  
#line 707 
  status = myri10ge_send_cmd(mgp,44U,& cmd,0);
  
#line 709 
  if (status == 0) {
    
#line 710 
    mgp->max_tso6 = cmd.data0;
    
#line 711 
    mgp->features |= 1048576U;
  }
  else ;
  
#line 714 
  status = myri10ge_send_cmd(mgp,12U,& cmd,0);
  
#line 715 
  if (status != 0) {
    
#line 716 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"failed MXGEFW_CMD_GET_RX_RING_SIZE\n");
    
#line 718 
    __retres = -6;
    
#line 718 
    goto return_label;
  }
  else ;
  
#line 721 
  mgp->max_intr_slots = (int)((cmd.data0 / 8U) * 2U);
  
#line 723 
  __retres = 0;
  return_label: 
#line 723 
                return __retres;
}


#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_load_firmware(struct myri10ge_priv *mgp, int adopt)
{
  int __retres;
  char *submit;
  __be32 buf[16U];
  u32 dma_low;
  u32 dma_high;
  u32 size;
  int status;
  int i;
  
#line 733 
  size = 0U;
  
#line 734 
  status = myri10ge_load_hotplug_firmware(mgp,& size);
  
#line 735 
  if (status != 0) {
    
#line 736 
    if (adopt == 0) {
      
#line 737 
      __retres = status;
      
#line 737 
      goto return_label;
    }
    else ;
    
#line 738 
    dev_warn((struct device const *)(& (mgp->pdev)->dev),"hotplug firmware loading failed\n");
    
#line 742 
    if (status == -5) {
      
#line 743 
      __retres = status;
      
#line 743 
      goto return_label;
    }
    else ;
    
#line 745 
    status = myri10ge_adopt_running_firmware(mgp);
    
#line 746 
    if (status != 0) {
      
#line 747 
      dev_err((struct device const *)(& (mgp->pdev)->dev),"failed to adopt running firmware\n");
      
#line 749 
      __retres = status;
      
#line 749 
      goto return_label;
    }
    else ;
    
#line 751 
    _dev_info((struct device const *)(& (mgp->pdev)->dev),"Successfully adopted running firmware\n");
    
#line 753 
    if (mgp->tx_boundary == 4096) {
      
#line 754 
      dev_warn((struct device const *)(& (mgp->pdev)->dev),"Using firmware currently running on NIC");
      
#line 757 
      dev_warn((struct device const *)(& (mgp->pdev)->dev),"performance consider loading optimized ");
      
#line 760 
      dev_warn((struct device const *)(& (mgp->pdev)->dev),"via hotplug\n");
    }
    else ;
    
#line 763 
    set_fw_name(mgp,(char *)"adopted",(_Bool)0);
    
#line 764 
    mgp->tx_boundary = 2048;
    
#line 765 
    myri10ge_dummy_rdma(mgp,1);
    
#line 766 
    status = myri10ge_get_firmware_capabilities(mgp);
    
#line 767 
    __retres = status;
    
#line 767 
    goto return_label;
  }
  else ;
  
#line 771 
  (mgp->cmd)->data = 0U;
  
#line 772 
  ldv_inline_asm();
  
#line 778 
  dma_low = (unsigned int)mgp->cmd_bus;
  
#line 779 
  dma_high = (unsigned int)(mgp->cmd_bus >> 32);
  
#line 781 
  if (0 != 0) 
#line 781 
              buf[0] = (((dma_high << 24) | ((dma_high << 8) & 16711680U)) | ((dma_high >> 8) & 65280U)) | (dma_high >> 24); else 
                                                                    
#line 781 
                                                                    buf[0] = __fswab32(dma_high);
  
#line 782 
  if (0 != 0) 
#line 782 
              buf[1] = (((dma_low << 24) | ((dma_low << 8) & 16711680U)) | ((dma_low >> 8) & 65280U)) | (dma_low >> 24); else 
                                                                    
#line 782 
                                                                    buf[1] = __fswab32(dma_low);
  
#line 783 
  buf[2] = 4294967295U;
  
#line 789 
  buf[3] = 134221824U;
  
#line 790 
  if (0 != 0) 
#line 790 
              buf[4] = ((((size + 4294967288U) << 24) | (((size + 4294967288U) << 8) & 16711680U)) | (((size + 4294967288U) >> 8) & 65280U)) | ((size + 4294967288U) >> 24); else 
                                                                    
#line 790 
                                                                    buf[4] = __fswab32(size + 4294967288U);
  
#line 791 
  buf[5] = 134217728U;
  
#line 792 
  buf[6] = 0U;
  
#line 794 
  submit = (char *)(mgp->sram + 16515072U);
  
#line 796 
  __iowrite64_copy((void *)submit,(void const *)(& buf),8UL);
  
#line 797 
  ldv_inline_asm();
  
#line 798 
  msleep(1U);
  
#line 799 
  ldv_inline_asm();
  
#line 800 
  i = 0;
  
#line 801 
  goto ldv_56826;
  ldv_56825: 
#line 802 
  ;
  
#line 802 
  msleep((unsigned int)(1 << i));
  
#line 803 
  i += 1;
  ldv_56826: 
#line 804 
  ;
  
#line 801 
  if ((mgp->cmd)->data != 4294967295U && i <= 8) 
#line 803 
                                                 goto ldv_56825; else 
                                                                   
#line 806 
                                                                   goto ldv_56827;
  ldv_56827: 
#line 807 
  ;
  
#line 805 
  if ((mgp->cmd)->data != 4294967295U) {
    
#line 806 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"handoff failed\n");
    
#line 807 
    __retres = -6;
    
#line 807 
    goto return_label;
  }
  else ;
  
#line 809 
  myri10ge_dummy_rdma(mgp,1);
  
#line 810 
  status = myri10ge_get_firmware_capabilities(mgp);
  
#line 812 
  __retres = status;
  return_label: 
#line 812 
                return __retres;
}


#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_update_mac_address(struct myri10ge_priv *mgp, u8 *addr)
{
  struct myri10ge_cmd cmd;
  int status;
  
#line 820 
  cmd.data0 = (unsigned int)(((((int)*addr << 24) | ((int)*(addr + 1U) << 16)) | ((int)*(addr + 2U) << 8)) | (int)*(addr + 3U));
  
#line 823 
  cmd.data1 = (unsigned int)(((int)*(addr + 4U) << 8) | (int)*(addr + 5U));
  
#line 825 
  status = myri10ge_send_cmd(mgp,22U,& cmd,0);
  
#line 826 
  return status;
}


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_change_pause(struct myri10ge_priv *mgp, int pause)
{
  int __retres;
  struct myri10ge_cmd cmd;
  int status;
  int ctl;
  
#line 834 
  if (pause != 0) 
#line 834 
                  ctl = 23; else 
#line 834 
                                 ctl = 24;
  
#line 835 
  status = myri10ge_send_cmd(mgp,(unsigned int)ctl,& cmd,0);
  
#line 837 
  if (status != 0) {
    
#line 838 
    netdev_err((struct net_device const *)mgp->dev,"Failed to set flow control mode\n");
    
#line 839 
    __retres = status;
    
#line 839 
    goto return_label;
  }
  else ;
  
#line 841 
  mgp->pause = pause;
  
#line 842 
  __retres = 0;
  return_label: 
#line 842 
                return __retres;
}


#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_change_promisc(struct myri10ge_priv *mgp, int promisc, int atomic)
{
  struct myri10ge_cmd cmd;
  int status;
  int ctl;
  
#line 851 
  if (promisc != 0) 
#line 851 
                    ctl = 20; else 
#line 851 
                                   ctl = 21;
  
#line 852 
  status = myri10ge_send_cmd(mgp,(unsigned int)ctl,& cmd,atomic);
  
#line 853 
  if (status != 0) 
#line 854 
                   netdev_err((struct net_device const *)mgp->dev,"Failed to set promisc mode\n"); else ;
  
#line 855 
  return;
}


#line 857  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_dma_test(struct myri10ge_priv *mgp, int test_type)
{
  int __retres;
  struct myri10ge_cmd cmd;
  int status;
  u32 len;
  struct page *dmatest_page;
  dma_addr_t dmatest_bus;
  int tmp;
  
#line 864 
  char *test = (char *)" ";
  
#line 866 
  dmatest_page = alloc_pages(208U,0U);
  
#line 867 
  if (dmatest_page == (struct page *)0) {
    
#line 868 
    __retres = -12;
    
#line 868 
    goto return_label;
  }
  else ;
  
#line 869 
  dmatest_bus = pci_map_page(mgp->pdev,dmatest_page,0UL,4096UL,0);
  
#line 871 
  tmp = pci_dma_mapping_error(mgp->pdev,dmatest_bus);
  
#line 871 
  if ((long)(tmp != 0) != 0L) {
    
#line 872 
    __free_pages(dmatest_page,0U);
    
#line 873 
    __retres = -12;
    
#line 873 
    goto return_label;
  }
  else ;
  
#line 885 
  len = (unsigned int)mgp->tx_boundary;
  
#line 887 
  cmd.data0 = (unsigned int)dmatest_bus;
  
#line 888 
  cmd.data1 = (unsigned int)(dmatest_bus >> 32);
  
#line 889 
  cmd.data2 = len * 65536U;
  
#line 890 
  status = myri10ge_send_cmd(mgp,(unsigned int)test_type,& cmd,0);
  
#line 891 
  if (status != 0) {
    
#line 892 
    test = (char *)"read";
    
#line 893 
    goto abort;
  }
  else ;
  
#line 895 
  mgp->read_dma = (((cmd.data0 >> 16) * len) * 2U) / (cmd.data0 & 65535U);
  
#line 896 
  cmd.data0 = (unsigned int)dmatest_bus;
  
#line 897 
  cmd.data1 = (unsigned int)(dmatest_bus >> 32);
  
#line 898 
  cmd.data2 = len;
  
#line 899 
  status = myri10ge_send_cmd(mgp,(unsigned int)test_type,& cmd,0);
  
#line 900 
  if (status != 0) {
    
#line 901 
    test = (char *)"write";
    
#line 902 
    goto abort;
  }
  else ;
  
#line 904 
  mgp->write_dma = (((cmd.data0 >> 16) * len) * 2U) / (cmd.data0 & 65535U);
  
#line 906 
  cmd.data0 = (unsigned int)dmatest_bus;
  
#line 907 
  cmd.data1 = (unsigned int)(dmatest_bus >> 32);
  
#line 908 
  cmd.data2 = len * 65537U;
  
#line 909 
  status = myri10ge_send_cmd(mgp,(unsigned int)test_type,& cmd,0);
  
#line 910 
  if (status != 0) {
    
#line 911 
    test = (char *)"read/write";
    
#line 912 
    goto abort;
  }
  else ;
  
#line 914 
  mgp->read_write_dma = (((cmd.data0 >> 16) * len) * 4U) / (cmd.data0 & 65535U);
  abort: 
#line 917 
  ;
  
#line 918 
  pci_unmap_page(mgp->pdev,dmatest_bus,4096UL,0);
  
#line 919 
  put_page(dmatest_page);
  
#line 921 
  if (status != 0 && test_type != 32) 
#line 922 
                                      dev_warn((struct device const *)(& (mgp->pdev)->dev),"DMA %s benchmark failed: %d\n",test,status); else ;
  
#line 925 
  __retres = status;
  return_label: 
#line 925 
                return __retres;
}


#line 929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_ss_init_lock(struct myri10ge_slice_state *ss)
{
  
#line 931 
  spinlock_check(& ss->lock);
  {
    struct lock_class_key __key;
    
#line 931 
    __raw_spin_lock_init(& ss->lock.__anonCompField_spinlock_18.rlock,"&(&ss->lock)->rlock",& __key);
  }
  
#line 932 
  ss->state = 0U;
  
#line 933 
  return;
}


#line 935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static bool myri10ge_ss_lock_napi(struct myri10ge_slice_state *ss)
{
  
#line 937 
  bool rc = (_Bool)1;
  
#line 938 
  ldv_spin_lock_73(& ss->lock);
  
#line 939 
  if ((ss->state & 3U) != 0U) {
    {
      
#line 940 
      int __ret_warn_on = (ss->state & 1U) != 0U;
      
#line 940 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 940 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c",940); else ;
      
#line 940 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 941 
    ss->state |= 4U;
    
#line 942 
    rc = (_Bool)0;
    
#line 943 
    ss->lock_napi_yield += 1UL;
  }
  else 
#line 945 
       ss->state = 1U;
  
#line 946 
  ldv_spin_unlock_74(& ss->lock);
  
#line 947 
  return rc;
}


#line 950  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_ss_unlock_napi(struct myri10ge_slice_state *ss)
{
  
#line 952 
  ldv_spin_lock_75(& ss->lock);
  {
    
#line 953 
    int __ret_warn_on = (ss->state & 6U) != 0U;
    
#line 953 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 953 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c",953); else ;
    
#line 953 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 954 
  ss->state = 0U;
  
#line 955 
  ldv_spin_unlock_76(& ss->lock);
  
#line 956 
  return;
}


#line 958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static bool myri10ge_ss_lock_poll(struct myri10ge_slice_state *ss)
{
  
#line 960 
  bool rc = (_Bool)1;
  
#line 961 
  ldv_spin_lock_bh_77(& ss->lock);
  
#line 962 
  if ((ss->state & 3U) != 0U) {
    
#line 963 
    ss->state |= 8U;
    
#line 964 
    rc = (_Bool)0;
    
#line 965 
    ss->lock_poll_yield += 1UL;
  }
  else 
#line 967 
       ss->state |= 2U;
  
#line 968 
  ldv_spin_unlock_bh_78(& ss->lock);
  
#line 969 
  return rc;
}


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_ss_unlock_poll(struct myri10ge_slice_state *ss)
{
  
#line 974 
  ldv_spin_lock_bh_79(& ss->lock);
  {
    
#line 975 
    int __ret_warn_on = (ss->state & 1U) != 0U;
    
#line 975 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 975 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c",975); else ;
    
#line 975 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 976 
  ss->state = 0U;
  
#line 977 
  ldv_spin_unlock_bh_80(& ss->lock);
  
#line 978 
  return;
}


#line 980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static bool myri10ge_ss_busy_polling(struct myri10ge_slice_state *ss)
{
  bool __retres;
  {
    
#line 982 
    int __ret_warn_on = (ss->state & 3U) == 0U;
    
#line 982 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 982 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c",982); else ;
    
#line 982 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 983 
  __retres = (_Bool)((ss->state & 10U) != 0U);
  
#line 983 
  return __retres;
}


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_reset(struct myri10ge_priv *mgp)
{
  int __retres;
  struct myri10ge_cmd cmd;
  struct myri10ge_slice_state *ss;
  int i;
  int status;
  size_t bytes;
  unsigned long dca_tag_off;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  unsigned int tmp_4;
  
#line 1026 
  memset((void *)(& cmd),0,12UL);
  
#line 1027 
  status = myri10ge_send_cmd(mgp,1U,& cmd,0);
  
#line 1028 
  if (status != 0) {
    
#line 1029 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"failed reset\n");
    
#line 1030 
    __retres = -6;
    
#line 1030 
    goto return_label;
  }
  else ;
  
#line 1033 
  myri10ge_dma_test(mgp,25);
  
#line 1040 
  cmd.data0 = 0U;
  
#line 1041 
  myri10ge_send_cmd(mgp,52U,& cmd,0);
  
#line 1045 
  bytes = (unsigned long)mgp->max_intr_slots * 4UL;
  
#line 1046 
  cmd.data0 = (unsigned int)bytes;
  
#line 1047 
  status = myri10ge_send_cmd(mgp,13U,& cmd,0);
  
#line 1060 
  if (mgp->num_slices > 1) {
    
#line 1063 
    status = myri10ge_send_cmd(mgp,35U,& cmd,0);
    
#line 1065 
    if (status != 0) 
#line 1066 
                     dev_err((struct device const *)(& (mgp->pdev)->dev),"failed to get number of slices\n"); else ;
    
#line 1075 
    cmd.data0 = (unsigned int)mgp->num_slices;
    
#line 1076 
    cmd.data1 = 1U;
    
#line 1077 
    if ((mgp->dev)->real_num_tx_queues > 1U) 
#line 1078 
                                             cmd.data1 |= 2U; else ;
    
#line 1079 
    status = myri10ge_send_cmd(mgp,36U,& cmd,0);
    
#line 1085 
    if (status != 0 && (mgp->dev)->real_num_tx_queues > 1U) {
      
#line 1086 
      netif_set_real_num_tx_queues(mgp->dev,1U);
      
#line 1087 
      cmd.data0 = (unsigned int)mgp->num_slices;
      
#line 1088 
      cmd.data1 = 1U;
      
#line 1089 
      status = myri10ge_send_cmd(mgp,36U,& cmd,0);
    }
    else ;
    
#line 1094 
    if (status != 0) {
      
#line 1095 
      dev_err((struct device const *)(& (mgp->pdev)->dev),"failed to set number of slices\n");
      
#line 1098 
      __retres = status;
      
#line 1098 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1101 
  i = 0;
  
#line 1101 
  goto ldv_56899;
  ldv_56898: 
#line 1102 
  ;
  
#line 1102 
  ss = mgp->ss + i;
  
#line 1103 
  cmd.data0 = (unsigned int)ss->rx_done.bus;
  
#line 1104 
  cmd.data1 = (unsigned int)(ss->rx_done.bus >> 32);
  
#line 1105 
  cmd.data2 = (unsigned int)i;
  
#line 1106 
  tmp = myri10ge_send_cmd(mgp,3U,& cmd,0);
  
#line 1107 
  status = tmp | status;
  
#line 1101 
  i += 1;
  ldv_56899: 
#line 1102 
  ;
  
#line 1101 
  if (mgp->num_slices > i) 
#line 1103 
                           goto ldv_56898; else 
#line 1106 
                                                goto ldv_56900;
  ldv_56900: 
#line 1107 
  ;
  
#line 1110 
  tmp_0 = myri10ge_send_cmd(mgp,9U,& cmd,0);
  
#line 1111 
  status = tmp_0 | status;
  
#line 1112 
  i = 0;
  
#line 1112 
  goto ldv_56902;
  ldv_56901: 
#line 1113 
  ;
  
#line 1113 
  ss = mgp->ss + i;
  
#line 1114 
  ss->irq_claim = (__be32 *)(mgp->sram + (cmd.data0 + (u32)(i * 8)));
  
#line 1112 
  i += 1;
  ldv_56902: 
#line 1113 
  ;
  
#line 1112 
  if (mgp->num_slices > i) 
#line 1114 
                           goto ldv_56901; else 
#line 1117 
                                                goto ldv_56903;
  ldv_56903: 
#line 1118 
  ;
  
#line 1117 
  tmp_1 = myri10ge_send_cmd(mgp,10U,& cmd,0);
  
#line 1118 
  status = tmp_1 | status;
  
#line 1119 
  mgp->irq_deassert = (__be32 *)(mgp->sram + cmd.data0);
  
#line 1121 
  tmp_2 = myri10ge_send_cmd(mgp,17U,& cmd,0);
  
#line 1122 
  status = tmp_2 | status;
  
#line 1123 
  mgp->intr_coal_delay_ptr = (__be32 *)(mgp->sram + cmd.data0);
  
#line 1124 
  if (status != 0) {
    
#line 1125 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"failed set interrupt parameters\n");
    
#line 1126 
    __retres = status;
    
#line 1126 
    goto return_label;
  }
  else ;
  
#line 1128 
  ;
  
#line 1128 
  if (0 != 0) 
#line 1128 
              tmp_4 = ((((unsigned int)mgp->intr_coal_delay << 24) | (((unsigned int)mgp->intr_coal_delay << 8) & 16711680U)) | (((unsigned int)mgp->intr_coal_delay >> 8) & 65280U)) | ((unsigned int)mgp->intr_coal_delay >> 24); else 
                                                                    
#line 1128 
                                                                    tmp_4 = __fswab32((unsigned int)mgp->intr_coal_delay);
  
#line 1128 
  put_be32(tmp_4,mgp->intr_coal_delay_ptr);
  
#line 1131 
  status = myri10ge_send_cmd(mgp,56U,& cmd,0);
  
#line 1132 
  dca_tag_off = (unsigned long)cmd.data0;
  
#line 1133 
  i = 0;
  
#line 1133 
  goto ldv_56905;
  ldv_56904: 
#line 1134 
  ;
  
#line 1134 
  ss = mgp->ss + i;
  
#line 1135 
  if (status == 0) 
#line 1136 
                   ss->dca_tag = (__be32 *)(mgp->sram + ((unsigned long)(i * 4) + dca_tag_off)); else 
                                                                    
#line 1139 
                                                                    ss->dca_tag = (__be32 *)0U;
  
#line 1133 
  i += 1;
  ldv_56905: 
#line 1134 
  ;
  
#line 1133 
  if (mgp->num_slices > i) 
#line 1135 
                           goto ldv_56904; else 
#line 1138 
                                                goto ldv_56906;
  ldv_56906: 
#line 1139 
  ;
  
#line 1146 
  mgp->link_changes = 0U;
  
#line 1147 
  i = 0;
  
#line 1147 
  goto ldv_56908;
  ldv_56907: 
#line 1148 
  ;
  
#line 1148 
  ss = mgp->ss + i;
  
#line 1150 
  memset((void *)ss->rx_done.entry,0,bytes);
  
#line 1151 
  ss->tx.req = 0;
  
#line 1152 
  ss->tx.done = 0;
  
#line 1153 
  ss->tx.pkt_start = 0;
  
#line 1154 
  ss->tx.pkt_done = 0;
  
#line 1155 
  ss->rx_big.cnt = 0;
  
#line 1156 
  ss->rx_small.cnt = 0;
  
#line 1157 
  ss->rx_done.idx = 0;
  
#line 1158 
  ss->rx_done.cnt = 0;
  
#line 1159 
  ss->tx.wake_queue = 0;
  
#line 1160 
  ss->tx.stop_queue = 0;
  
#line 1147 
  i += 1;
  ldv_56908: 
#line 1148 
  ;
  
#line 1147 
  if (mgp->num_slices > i) 
#line 1149 
                           goto ldv_56907; else 
#line 1152 
                                                goto ldv_56909;
  ldv_56909: 
#line 1153 
  ;
  
#line 1163 
  status = myri10ge_update_mac_address(mgp,(mgp->dev)->dev_addr);
  
#line 1164 
  myri10ge_change_pause(mgp,mgp->pause);
  
#line 1165 
  myri10ge_set_multicast_list(mgp->dev);
  
#line 1166 
  __retres = status;
  return_label: 
#line 1166 
                return __retres;
}


#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_toggle_relaxed(struct pci_dev *pdev, int on)
{
  int ret;
  u16 ctl;
  
#line 1175 
  pcie_capability_read_word(pdev,8,& ctl);
  
#line 1177 
  ret = ((int)ctl >> 4) & 1;
  
#line 1178 
  if (ret != on) {
    
#line 1179 
    ctl = (unsigned short)((unsigned int)ctl & 65519U);
    
#line 1180 
    ctl = (unsigned short)((on << 4) | (int)ctl);
    
#line 1181 
    pcie_capability_write_word(pdev,8,(unsigned short)((int)ctl));
  }
  else ;
  
#line 1183 
  return ret;
}


#line 1187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_write_dca(struct myri10ge_slice_state *ss, int cpu, int tag)
{
  unsigned int tmp_0;
  
#line 1189 
  ss->cached_dca_tag = tag;
  
#line 1190 
  ;
  
#line 1190 
  if (0 != 0) 
#line 1190 
              tmp_0 = ((((unsigned int)tag << 24) | (((unsigned int)tag << 8) & 16711680U)) | (((unsigned int)tag >> 8) & 65280U)) | ((unsigned int)tag >> 24); else 
                                                                    
#line 1190 
                                                                    tmp_0 = __fswab32((unsigned int)tag);
  
#line 1190 
  put_be32(tmp_0,ss->dca_tag);
  
#line 1191 
  return;
}


#line 1193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_update_dca(struct myri10ge_slice_state *ss)
{
  int tmp_4;
  int tag;
  {
    int tmp_3;
    
#line 1195 
    __preempt_count_add(1);
    
#line 1196 
    ldv_inline_asm();
    {
      int pscr_ret__;
      {
        
#line 1195 
        void const *__vpp_verify = (void const *)0;
        
#line 1195 
        void const *tmp = __vpp_verify;
      }
      
#line 1195 
      switch (4UL) {
        int tmp_0;
        int tmp_0_0;
        int tmp_1;
        int tmp_2;
        case (unsigned long)1: 
#line 1195 
        ;
        {
          int pfo_ret__;
          
#line 1195 
          switch (4UL) {
            case (unsigned long)1: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56930;
            case (unsigned long)2: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56930;
            case (unsigned long)4: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56930;
            case (unsigned long)8: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56930;
            default: 
#line 1195 
            ;
            
#line 1195 
            __bad_percpu_size();
          }
          ldv_56930: 
#line 1195 
          ;
          
#line 1195 
          tmp_0 = pfo_ret__;
        }
        
#line 1195 
        pscr_ret__ = tmp_0;
        
#line 1195 
        goto ldv_56936;
        case (unsigned long)2: 
#line 1195 
        ;
        {
          int pfo_ret___0;
          
#line 1195 
          switch (4UL) {
            case (unsigned long)1: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56940;
            case (unsigned long)2: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56940;
            case (unsigned long)4: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56940;
            case (unsigned long)8: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56940;
            default: 
#line 1195 
            ;
            
#line 1195 
            __bad_percpu_size();
          }
          ldv_56940: 
#line 1195 
          ;
          
#line 1195 
          tmp_0_0 = pfo_ret___0;
        }
        
#line 1195 
        pscr_ret__ = tmp_0_0;
        
#line 1195 
        goto ldv_56936;
        case (unsigned long)4: 
#line 1195 
        ;
        {
          int pfo_ret___1;
          
#line 1195 
          switch (4UL) {
            case (unsigned long)1: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56949;
            case (unsigned long)2: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56949;
            case (unsigned long)4: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56949;
            case (unsigned long)8: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56949;
            default: 
#line 1195 
            ;
            
#line 1195 
            __bad_percpu_size();
          }
          ldv_56949: 
#line 1195 
          ;
          
#line 1195 
          tmp_1 = pfo_ret___1;
        }
        
#line 1195 
        pscr_ret__ = tmp_1;
        
#line 1195 
        goto ldv_56936;
        case (unsigned long)8: 
#line 1195 
        ;
        {
          int pfo_ret___2;
          
#line 1195 
          switch (4UL) {
            case (unsigned long)1: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56958;
            case (unsigned long)2: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56958;
            case (unsigned long)4: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56958;
            case (unsigned long)8: 
#line 1195 
            ;
            
#line 1196 
            ldv_inline_asm();
            
#line 1195 
            goto ldv_56958;
            default: 
#line 1195 
            ;
            
#line 1195 
            __bad_percpu_size();
          }
          ldv_56958: 
#line 1195 
          ;
          
#line 1195 
          tmp_2 = pfo_ret___2;
        }
        
#line 1195 
        pscr_ret__ = tmp_2;
        
#line 1195 
        goto ldv_56936;
        default: 
#line 1195 
        ;
        
#line 1195 
        __bad_size_call_parameter();
        
#line 1195 
        goto ldv_56936;
      }
      ldv_56936: 
#line 1195 
      ;
      
#line 1195 
      tmp_3 = pscr_ret__;
    }
    
#line 1195 
    tmp_4 = tmp_3;
  }
  
#line 1195 
  int cpu = tmp_4;
  
#line 1198 
  if (ss->cpu != cpu) {
    u8 tmp_5;
    
#line 1199 
    tmp_5 = dca3_get_tag(& ((ss->mgp)->pdev)->dev,cpu);
    
#line 1199 
    tag = (int)tmp_5;
    
#line 1200 
    if (ss->cached_dca_tag != tag) 
#line 1201 
                                   myri10ge_write_dca(ss,cpu,tag); else ;
    
#line 1202 
    ss->cpu = cpu;
  }
  else ;
  
#line 1204 
  ldv_inline_asm();
  
#line 1204 
  __preempt_count_sub(1);
  
#line 1205 
  return;
}


#line 1207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_setup_dca(struct myri10ge_priv *mgp)
{
  int err;
  int i;
  
#line 1210 
  struct pci_dev *pdev = mgp->pdev;
  
#line 1212 
  if ((mgp->ss)->dca_tag == (__be32 *)0U || mgp->dca_enabled != 0) 
#line 1213 
                                                                   goto return_label; else ;
  
#line 1214 
  if (myri10ge_dca == 0) {
    
#line 1215 
    dev_err((struct device const *)(& pdev->dev),"dca disabled by administrator\n");
    
#line 1216 
    goto return_label;
  }
  else ;
  
#line 1218 
  err = dca_add_requester(& pdev->dev);
  
#line 1219 
  if (err != 0) {
    
#line 1220 
    if (err != -19) 
#line 1221 
                    dev_err((struct device const *)(& pdev->dev),"dca_add_requester() failed, err=%d\n",err); else ;
    
#line 1223 
    goto return_label;
  }
  else ;
  
#line 1225 
  mgp->relaxed_order = myri10ge_toggle_relaxed(pdev,0);
  
#line 1226 
  mgp->dca_enabled = 1;
  
#line 1227 
  i = 0;
  
#line 1227 
  goto ldv_56975;
  ldv_56974: 
#line 1228 
  ;
  
#line 1228 
  (mgp->ss + i)->cpu = -1;
  
#line 1229 
  (mgp->ss + i)->cached_dca_tag = -1;
  
#line 1230 
  myri10ge_update_dca(mgp->ss + i);
  
#line 1227 
  i += 1;
  ldv_56975: 
#line 1228 
  ;
  
#line 1227 
  if (mgp->num_slices > i) 
#line 1229 
                           goto ldv_56974; else 
#line 1232 
                                                goto ldv_56976;
  ldv_56976: 
#line 1233 
  ;
  return_label: 
#line 1234 
                return;
}


#line 1234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_teardown_dca(struct myri10ge_priv *mgp)
{
  
#line 1236 
  struct pci_dev *pdev = mgp->pdev;
  
#line 1238 
  if (mgp->dca_enabled == 0) 
#line 1239 
                             goto return_label; else ;
  
#line 1240 
  mgp->dca_enabled = 0;
  
#line 1241 
  if (mgp->relaxed_order != 0) 
#line 1242 
                               myri10ge_toggle_relaxed(pdev,1); else ;
  
#line 1243 
  dca_remove_requester(& pdev->dev);
  return_label: 
#line 1244 
                return;
}


#line 1246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_notify_dca_device(struct device *dev, void *data)
{
  int __retres;
  struct myri10ge_priv *mgp;
  unsigned long event;
  
#line 1251 
  mgp = (struct myri10ge_priv *)dev_get_drvdata((struct device const *)dev);
  
#line 1252 
  event = *((unsigned long *)data);
  
#line 1254 
  if (event == 1UL) 
#line 1255 
                    myri10ge_setup_dca(mgp);
  else 
    
#line 1256 
    if (event == 2UL) 
#line 1257 
                      myri10ge_teardown_dca(mgp); else ;
  
#line 1258 
  __retres = 0;
  
#line 1258 
  return __retres;
}


#line 1263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_submit_8rx(struct mcp_kreq_ether_recv *dst, struct mcp_kreq_ether_recv *src)
{
  __be32 low;
  
#line 1268 
  low = src->addr_low;
  
#line 1269 
  src->addr_low = 4294967295U;
  
#line 1270 
  __iowrite64_copy((void *)dst,(void const *)src,4UL);
  
#line 1271 
  ldv_inline_asm();
  
#line 1272 
  __iowrite64_copy((void *)(dst + 4U),(void const *)(src + 4U),4UL);
  
#line 1273 
  ldv_inline_asm();
  
#line 1274 
  src->addr_low = low;
  
#line 1275 
  put_be32(low,& dst->addr_low);
  
#line 1276 
  ldv_inline_asm();
  
#line 1277 
  return;
}


#line 1292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_alloc_rx_pages(struct myri10ge_priv *mgp, struct myri10ge_rx_buf *rx, int bytes, int watchdog)
{
  struct page *page;
  dma_addr_t bus;
  int idx;
  
#line 1302 
  if ((long)(rx->watchdog_needed != 0) != 0L && (long)(watchdog == 0) != 0L) 
    
#line 1303 
    goto return_label; else ;
  
#line 1306 
  goto ldv_57007;
  ldv_57006: 
#line 1307 
  ;
  
#line 1307 
  idx = rx->fill_cnt & rx->mask;
  
#line 1308 
  if ((unsigned int)(rx->page_offset + bytes) <= 4096U) 
#line 1310 
                                                        get_page(rx->page);
  else {
    int tmp;
    
#line 1313 
    page = alloc_pages(16416U,0U);
    
#line 1316 
    if ((long)(page == (struct page *)0) != 0L) {
      
#line 1317 
      if (rx->fill_cnt - rx->cnt <= 15) 
#line 1318 
                                        rx->watchdog_needed = 1; else ;
      
#line 1319 
      goto return_label;
    }
    else ;
    
#line 1322 
    bus = pci_map_page(mgp->pdev,page,0UL,4096UL,2);
    
#line 1325 
    tmp = pci_dma_mapping_error(mgp->pdev,bus);
    
#line 1325 
    if ((long)(tmp != 0) != 0L) {
      
#line 1326 
      __free_pages(page,0U);
      
#line 1327 
      if (rx->fill_cnt - rx->cnt <= 15) 
#line 1328 
                                        rx->watchdog_needed = 1; else ;
      
#line 1329 
      goto return_label;
    }
    else ;
    
#line 1332 
    rx->page = page;
    
#line 1333 
    rx->page_offset = 0;
    
#line 1334 
    rx->bus = bus;
  }
  
#line 1337 
  (rx->info + idx)->page = rx->page;
  
#line 1338 
  (rx->info + idx)->page_offset = rx->page_offset;
  
#line 1341 
  (rx->info + idx)->bus = rx->bus;
  
#line 1342 
  if (0 != 0) 
#line 1342 
              (rx->shadow + idx)->addr_low = (((((unsigned int)rx->bus + (unsigned int)rx->page_offset) << 24) | ((((unsigned int)rx->bus + (unsigned int)rx->page_offset) << 8) & 16711680U)) | ((((unsigned int)rx->bus + (unsigned int)rx->page_offset) >> 8) & 65280U)) | (((unsigned int)rx->bus + (unsigned int)rx->page_offset) >> 24); else 
                                                                    
#line 1343 
                                                                    (rx->shadow + idx)->addr_low = __fswab32((unsigned int)rx->bus + (unsigned int)rx->page_offset);
  
#line 1344 
  if (0 != 0) 
#line 1344 
              (rx->shadow + idx)->addr_high = ((((unsigned int)(rx->bus >> 32) << 24) | (((unsigned int)(rx->bus >> 32) << 8) & 16711680U)) | (((unsigned int)(rx->bus >> 32) >> 8) & 65280U)) | ((unsigned int)(rx->bus >> 32) >> 24); else 
                                                                    
#line 1345 
                                                                    (rx->shadow + idx)->addr_high = __fswab32((unsigned int)(rx->bus >> 32));
  
#line 1348 
  rx->page_offset += (bytes + 63) & -64;
  
#line 1356 
  rx->fill_cnt += 1;
  
#line 1359 
  if ((idx & 7) == 7) 
#line 1360 
                      myri10ge_submit_8rx(rx->lanai + ((unsigned long)idx + 18446744073709551609U),rx->shadow + ((unsigned long)idx + 18446744073709551609U)); else ;
  ldv_57007: 
#line 1362 
  ;
  
#line 1306 
  if (rx->fill_cnt != (rx->cnt + rx->mask) + 1) 
#line 1308 
                                                goto ldv_57006; else 
                                                                  
#line 1311 
                                                                  goto ldv_57008;
  ldv_57008: 
#line 1312 
  ;
  return_label: 
#line 1313 
                return;
}


#line 1367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_unmap_rx_page(struct pci_dev *pdev, struct myri10ge_rx_buffer_state *info, int bytes)
{
  
#line 1371 
  if ((unsigned int)bytes > 2047U || (unsigned int)(info->page_offset + bytes * 2) > 4096U) 
    
#line 1373 
    pci_unmap_page(pdev,info->bus & 18446744073709547520ULL,4096UL,2); else ;
  
#line 1375 
  return;
}


#line 1387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_vlan_rx(struct net_device *dev, void *addr, struct sk_buff *skb)
{
  u8 *va;
  struct vlan_ethhdr *veh;
  struct skb_frag_struct *frag;
  __wsum vsum;
  
#line 1394 
  va = (u8 *)addr;
  
#line 1395 
  va += 2U;
  
#line 1396 
  veh = (struct vlan_ethhdr *)va;
  
#line 1397 
  if ((dev->features & 256ULL) != 0ULL && (unsigned int)veh->h_vlan_proto == 129U) {
    int tmp_0;
    unsigned char *tmp_1;
    unsigned int tmp_2;
    
#line 1401 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 4U) {
      
#line 1402 
      vsum = csum_partial((void const *)(va + 14U),4,0U);
      
#line 1403 
      skb->__anonCompField_sk_buff_69.csum = csum_sub(skb->__anonCompField_sk_buff_69.csum,vsum);
    }
    else ;
    
#line 1406 
    if (0 != 0) 
#line 1406 
                tmp_0 = (int)((unsigned short)(((int)veh->h_vlan_TCI << 8) | ((int)veh->h_vlan_TCI >> 8)));
    else {
      __u16 tmp;
      
#line 1406 
      tmp = __fswab16((unsigned short)((int)veh->h_vlan_TCI));
      
#line 1406 
      tmp_0 = (int)tmp;
    }
    
#line 1406 
    ;
    
#line 1406 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_0);
    
#line 1407 
    memmove((void *)(va + 4U),(void const *)va,12UL);
    
#line 1408 
    skb->len += 4294967292U;
    
#line 1409 
    skb->data_len += 4294967292U;
    
#line 1410 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1410 
    frag = (struct skb_frag_struct *)(& ((struct skb_shared_info *)tmp_1)->frags);
    
#line 1411 
    frag->page_offset += 4U;
    
#line 1412 
    tmp_2 = skb_frag_size((skb_frag_t const *)frag);
    
#line 1412 
    ;
    
#line 1412 
    skb_frag_size_set(frag,tmp_2 + 4294967292U);
  }
  else ;
  
#line 1414 
  return;
}


#line 1419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static int myri10ge_rx_done(struct myri10ge_slice_state *ss, int len, __wsum csum)
{
  int __retres;
  struct sk_buff *skb;
  struct skb_frag_struct *rx_frags;
  struct myri10ge_rx_buf *rx;
  int i;
  int idx;
  int remainder;
  int bytes;
  u8 *va;
  bool polling;
  void *tmp;
  unsigned char *tmp_0;
  int tmp_1;
  
#line 1421 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 1426 
  struct pci_dev *pdev = mgp->pdev;
  
#line 1427 
  struct net_device *dev = mgp->dev;
  
#line 1431 
  if (mgp->small_bytes >= len) {
    
#line 1432 
    rx = & ss->rx_small;
    
#line 1433 
    bytes = mgp->small_bytes;
  }
  else {
    
#line 1435 
    rx = & ss->rx_big;
    
#line 1436 
    bytes = mgp->big_bytes;
  }
  
#line 1439 
  len += 2;
  
#line 1440 
  idx = rx->cnt & rx->mask;
  
#line 1441 
  tmp = lowmem_page_address((struct page const *)(rx->info + idx)->page);
  
#line 1441 
  va = (u8 *)(tmp + (rx->info + idx)->page_offset);
  
#line 1442 
  __builtin_prefetch((void const *)va);
  
#line 1448 
  polling = myri10ge_ss_busy_polling(ss);
  
#line 1449 
  if ((int)polling != 0) 
#line 1450 
                         skb = netdev_alloc_skb(dev,80U); else 
#line 1452 
                                                               skb = napi_get_frags(& ss->napi);
  
#line 1453 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 1454 
    ss->stats.rx_dropped += 1UL;
    
#line 1455 
    i = 0;
    
#line 1455 
    remainder = len;
    
#line 1455 
    goto ldv_57041;
    ldv_57040: 
#line 1456 
    ;
    
#line 1456 
    myri10ge_unmap_rx_page(pdev,rx->info + idx,bytes);
    
#line 1457 
    put_page((rx->info + idx)->page);
    
#line 1458 
    rx->cnt += 1;
    
#line 1459 
    idx = rx->cnt & rx->mask;
    
#line 1460 
    remainder = (int)((unsigned int)remainder + 4294963200U);
    
#line 1455 
    i += 1;
    ldv_57041: 
#line 1456 
    ;
    
#line 1455 
    if (remainder > 0) 
#line 1457 
                       goto ldv_57040; else 
#line 1460 
                                            goto ldv_57042;
    ldv_57042: 
#line 1461 
    ;
    
#line 1462 
    __retres = 0;
    
#line 1462 
    goto return_label;
  }
  else ;
  
#line 1464 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1464 
  rx_frags = (struct skb_frag_struct *)(& ((struct skb_shared_info *)tmp_0)->frags);
  
#line 1466 
  i = 0;
  
#line 1466 
  remainder = len;
  
#line 1466 
  goto ldv_57044;
  ldv_57043: 
#line 1467 
  ;
  
#line 1467 
  myri10ge_unmap_rx_page(pdev,rx->info + idx,bytes);
  
#line 1469 
  if ((unsigned int)remainder <= 4095U) 
#line 1469 
                                        tmp_1 = remainder; else 
#line 1469 
                                                                tmp_1 = 4096;
  
#line 1468 
  ;
  
#line 1468 
  ;
  
#line 1468 
  ;
  
#line 1468 
  ;
  
#line 1468 
  skb_fill_page_desc(skb,i,(rx->info + idx)->page,(rx->info + idx)->page_offset,tmp_1);
  
#line 1472 
  rx->cnt += 1;
  
#line 1473 
  idx = rx->cnt & rx->mask;
  
#line 1474 
  remainder = (int)((unsigned int)remainder + 4294963200U);
  
#line 1466 
  i += 1;
  ldv_57044: 
#line 1467 
  ;
  
#line 1466 
  if (remainder > 0) 
#line 1468 
                     goto ldv_57043; else 
#line 1471 
                                          goto ldv_57045;
  ldv_57045: 
#line 1472 
  ;
  
#line 1478 
  rx_frags->page_offset += 2U;
  
#line 1479 
  rx_frags->size += 4294967294U;
  
#line 1480 
  len += -2;
  
#line 1482 
  skb->len = (unsigned int)len;
  
#line 1483 
  skb->data_len = (unsigned int)len;
  
#line 1484 
  skb->truesize += (unsigned int)len;
  
#line 1485 
  if ((dev->features & 17179869184ULL) != 0ULL) {
    
#line 1486 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
    
#line 1487 
    skb->__anonCompField_sk_buff_69.csum = csum;
  }
  else ;
  
#line 1489 
  myri10ge_vlan_rx(mgp->dev,(void *)va,skb);
  
#line 1490 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)(((long)ss - (long)mgp->ss) / 896L))));
  
#line 1491 
  skb_mark_napi_id(skb,& ss->napi);
  
#line 1493 
  if ((int)polling != 0) {
    int hlen;
    unsigned int tmp_2;
    void *tmp_4;
    struct page *tmp_3;
    
#line 1499 
    if (64U < skb->len) 
#line 1499 
                        tmp_2 = 64U; else 
#line 1499 
                                          tmp_2 = skb->len;
    
#line 1499 
    hlen = (int)tmp_2;
    
#line 1500 
    tmp_3 = skb_frag_page((skb_frag_t const *)rx_frags);
    
#line 1500 
    tmp_4 = lowmem_page_address((struct page const *)tmp_3);
    
#line 1500 
    va = (u8 *)(tmp_4 + rx_frags->page_offset);
    
#line 1503 
    skb_copy_to_linear_data(skb,(void const *)va,(unsigned int)hlen);
    
#line 1504 
    rx_frags->page_offset += (unsigned int)hlen;
    
#line 1505 
    rx_frags->size -= (unsigned int)hlen;
    
#line 1506 
    skb->data_len -= (unsigned int)hlen;
    
#line 1507 
    skb->tail += (unsigned int)hlen;
    
#line 1508 
    skb->protocol = eth_type_trans(skb,dev);
    
#line 1509 
    netif_receive_skb(skb);
  }
  else 
#line 1512 
       napi_gro_frags(& ss->napi);
  
#line 1514 
  __retres = 1;
  return_label: 
#line 1514 
                return __retres;
}


#line 1518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_tx_done(struct myri10ge_slice_state *ss, int mcp_index)
{
  struct netdev_queue *dev_queue;
  struct sk_buff *skb;
  int idx;
  int len;
  bool tmp_0;
  
#line 1520 
  struct pci_dev *pdev = (ss->mgp)->pdev;
  
#line 1521 
  struct myri10ge_tx_buf *tx = & ss->tx;
  
#line 1526 
  goto ldv_57058;
  ldv_57057: 
#line 1527 
  ;
  
#line 1527 
  idx = tx->done & tx->mask;
  
#line 1528 
  skb = (tx->info + idx)->skb;
  
#line 1531 
  (tx->info + idx)->skb = (struct sk_buff *)0;
  
#line 1532 
  if ((tx->info + idx)->last != 0) {
    
#line 1533 
    tx->pkt_done += 1;
    
#line 1534 
    (tx->info + idx)->last = 0;
  }
  else ;
  
#line 1536 
  tx->done += 1;
  
#line 1537 
  len = (int)(tx->info + idx)->len;
  
#line 1538 
  (tx->info + idx)->len = 0U;
  
#line 1539 
  if (skb != (struct sk_buff *)0) {
    
#line 1540 
    ss->stats.tx_bytes += (unsigned long)skb->len;
    
#line 1541 
    ss->stats.tx_packets += 1UL;
    
#line 1542 
    dev_kfree_skb_irq(skb);
    
#line 1543 
    if (len != 0) 
#line 1544 
                  pci_unmap_single(pdev,(tx->info + idx)->bus,(unsigned long)len,1); else ;
  }
  else 
    
#line 1549 
    if (len != 0) 
#line 1550 
                  pci_unmap_page(pdev,(tx->info + idx)->bus,(unsigned long)len,1); else ;
  ldv_57058: 
#line 1552 
  ;
  
#line 1526 
  if (tx->pkt_done != mcp_index) 
#line 1528 
                                 goto ldv_57057; else 
#line 1531 
                                                      goto ldv_57059;
  ldv_57059: 
#line 1532 
  ;
  
#line 1557 
  dev_queue = netdev_get_tx_queue((struct net_device const *)ss->dev,(unsigned int)(((long)ss - (long)(ss->mgp)->ss) / 896L));
  
#line 1567 
  if (((ss->mgp)->dev)->real_num_tx_queues > 1U) {
    bool tmp;
    
#line 1567 
    tmp = __netif_tx_trylock(dev_queue);
    
#line 1567 
    if ((int)tmp != 0) {
      
#line 1569 
      if (tx->req == tx->done) {
        
#line 1570 
        tx->queue_active = 0;
        
#line 1571 
        put_be32(16777216U,tx->send_stop);
        
#line 1572 
        ldv_inline_asm();
        
#line 1573 
        ldv_inline_asm();
      }
      else ;
      
#line 1575 
      __netif_tx_unlock(dev_queue);
    }
    else ;
  }
  else ;
  
#line 1579 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)dev_queue);
  
#line 1579 
  if ((int)tmp_0 != 0) {
    
#line 1579 
    if (tx->req - tx->done < tx->mask >> 1) {
      
#line 1580 
      if ((ss->mgp)->running == 3) {
        
#line 1582 
        tx->wake_queue += 1;
        
#line 1583 
        netif_tx_wake_queue(dev_queue);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1585 
  return;
}


#line 1588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static int myri10ge_clean_rx_done(struct myri10ge_slice_state *ss, int budget)
{
  unsigned long rx_ok;
  u16 length;
  __wsum checksum;
  int tmp_0;
  
#line 1590 
  struct myri10ge_rx_done *rx_done = & ss->rx_done;
  
#line 1591 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 1592 
  unsigned long rx_bytes = 0UL;
  
#line 1593 
  unsigned long rx_packets = 0UL;
  
#line 1595 
  int idx = rx_done->idx;
  
#line 1596 
  int cnt = rx_done->cnt;
  
#line 1597 
  int work_done = 0;
  
#line 1601 
  goto ldv_57075;
  ldv_57074: 
#line 1602 
  ;
  
#line 1602 
  if (0 != 0) 
#line 1602 
              length = (unsigned short)(((int)(rx_done->entry + idx)->length << 8) | ((int)(rx_done->entry + idx)->length >> 8)); else 
                                                                    
#line 1602 
                                                                    length = __fswab16((unsigned short)((int)(rx_done->entry + idx)->length));
  
#line 1603 
  (rx_done->entry + idx)->length = (unsigned short)0U;
  
#line 1604 
  checksum = csum_unfold((unsigned short)((int)(rx_done->entry + idx)->checksum));
  
#line 1605 
  tmp_0 = myri10ge_rx_done(ss,(int)length,checksum);
  
#line 1605 
  rx_ok = (unsigned long)tmp_0;
  
#line 1606 
  rx_packets += rx_ok;
  
#line 1607 
  rx_bytes = (unsigned long)length * rx_ok + rx_bytes;
  
#line 1608 
  cnt += 1;
  
#line 1609 
  idx = (mgp->max_intr_slots + -1) & cnt;
  
#line 1610 
  work_done += 1;
  ldv_57075: 
#line 1611 
  ;
  
#line 1601 
  if ((unsigned int)(rx_done->entry + idx)->length != 0U && work_done < budget) 
    
#line 1603 
    goto ldv_57074; else 
#line 1606 
                         goto ldv_57076;
  ldv_57076: 
#line 1607 
  ;
  
#line 1612 
  rx_done->idx = idx;
  
#line 1613 
  rx_done->cnt = cnt;
  
#line 1614 
  ss->stats.rx_packets += rx_packets;
  
#line 1615 
  ss->stats.rx_bytes += rx_bytes;
  
#line 1618 
  if (ss->rx_small.fill_cnt - ss->rx_small.cnt < myri10ge_fill_thresh) 
    
#line 1619 
    myri10ge_alloc_rx_pages(mgp,& ss->rx_small,mgp->small_bytes + 2,0); else ;
  
#line 1621 
  if (ss->rx_big.fill_cnt - ss->rx_big.cnt < myri10ge_fill_thresh) 
#line 1622 
                                                                   myri10ge_alloc_rx_pages(mgp,& ss->rx_big,mgp->big_bytes,0); else ;
  
#line 1624 
  return work_done;
}


#line 1627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_check_statblock(struct myri10ge_priv *mgp)
{
  
#line 1629 
  struct mcp_irq_data *stats = (mgp->ss)->fw_stats;
  
#line 1631 
  if ((long)((unsigned int)stats->stats_updated != 0U) != 0L) {
    unsigned int tmp_0;
    unsigned int tmp_4;
    
#line 1632 
    if (0 != 0) 
#line 1632 
                tmp_0 = (((stats->link_up << 24) | ((stats->link_up << 8) & 16711680U)) | ((stats->link_up >> 8) & 65280U)) | (stats->link_up >> 24); else 
                                                                    
#line 1632 
                                                                    tmp_0 = __fswab32(stats->link_up);
    
#line 1632 
    unsigned int link_up = tmp_0;
    
#line 1633 
    if (mgp->link_state != link_up) {
      
#line 1634 
      mgp->link_state = link_up;
      
#line 1636 
      if (mgp->link_state == 1U) {
        
#line 1637 
        if ((mgp->msg_enable & 4U) != 0U) 
#line 1637 
                                          netdev_info((struct net_device const *)mgp->dev,"link up\n"); else ;
        
#line 1638 
        netif_carrier_on(mgp->dev);
        
#line 1639 
        mgp->link_changes += 1U;
      }
      else {
        
#line 1641 
        if ((mgp->msg_enable & 4U) != 0U) {
          char *tmp_1;
          
#line 1641 
          if (link_up == 2U) 
#line 1641 
                             tmp_1 = (char *)"mismatch (Myrinet detected)"; else 
                                                                    
#line 1641 
                                                                    tmp_1 = (char *)"down";
          
#line 1641 
          ;
          
#line 1641 
          netdev_info((struct net_device const *)mgp->dev,"link %s\n",tmp_1);
        }
        else ;
        
#line 1645 
        netif_carrier_off(mgp->dev);
        
#line 1646 
        mgp->link_changes += 1U;
      }
    }
    else ;
    
#line 1649 
    if (0 != 0) 
#line 1649 
                tmp_4 = (((stats->rdma_tags_available << 24) | ((stats->rdma_tags_available << 8) & 16711680U)) | ((stats->rdma_tags_available >> 8) & 65280U)) | (stats->rdma_tags_available >> 24); else 
                                                                    
#line 1650 
                                                                    tmp_4 = __fswab32(stats->rdma_tags_available);
    
#line 1649 
    ;
    
#line 1649 
    if (mgp->rdma_tags_available != tmp_4) {
      
#line 1651 
      if (0 != 0) 
#line 1651 
                  mgp->rdma_tags_available = (((stats->rdma_tags_available << 24) | ((stats->rdma_tags_available << 8) & 16711680U)) | ((stats->rdma_tags_available >> 8) & 65280U)) | (stats->rdma_tags_available >> 24); else 
                                                                    
#line 1652 
                                                                    mgp->rdma_tags_available = __fswab32(stats->rdma_tags_available);
      
#line 1653 
      netdev_warn((struct net_device const *)mgp->dev,"RDMA timed out! %d tags left\n",mgp->rdma_tags_available);
    }
    else ;
    
#line 1656 
    mgp->down_cnt += (int)stats->link_down;
    
#line 1657 
    if ((unsigned int)stats->link_down != 0U) 
#line 1658 
                                              __wake_up(& mgp->down_wq,3U,1,(void *)0); else ;
  }
  else ;
  
#line 1660 
  return;
}


#line 1662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct myri10ge_slice_state *tmp;
  int work_done;
  int tmp_1;
  bool tmp_0;
  {
    
#line 1665 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1665 
    tmp = (struct myri10ge_slice_state *)__mptr + 18446744073709551264U;
  }
  
#line 1664 
  struct myri10ge_slice_state *ss = tmp;
  
#line 1669 
  if ((ss->mgp)->dca_enabled != 0) 
#line 1670 
                                   myri10ge_update_dca(ss); else ;
  
#line 1673 
  tmp_0 = myri10ge_ss_lock_napi(ss);
  
#line 1673 
  if (tmp_0) 
#line 1673 
             tmp_1 = 0; else 
#line 1673 
                             tmp_1 = 1;
  
#line 1673 
  if (tmp_1) {
    
#line 1674 
    __retres = budget;
    
#line 1674 
    goto return_label;
  }
  else ;
  
#line 1677 
  work_done = myri10ge_clean_rx_done(ss,budget);
  
#line 1679 
  myri10ge_ss_unlock_napi(ss);
  
#line 1680 
  if (work_done < budget) {
    
#line 1681 
    napi_complete(napi);
    
#line 1682 
    put_be32(50331648U,ss->irq_claim);
  }
  else ;
  
#line 1684 
  __retres = work_done;
  return_label: 
#line 1684 
                return __retres;
}


#line 1688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_busy_poll(struct napi_struct *napi)
{
  int __retres;
  struct myri10ge_slice_state *tmp;
  int work_done;
  int tmp_1;
  bool tmp_0;
  {
    
#line 1691 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1691 
    tmp = (struct myri10ge_slice_state *)__mptr + 18446744073709551264U;
  }
  
#line 1690 
  struct myri10ge_slice_state *ss = tmp;
  
#line 1692 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 1696 
  if (mgp->link_state != 1U) {
    
#line 1697 
    __retres = -1;
    
#line 1697 
    goto return_label;
  }
  else ;
  
#line 1699 
  tmp_0 = myri10ge_ss_lock_poll(ss);
  
#line 1699 
  if (tmp_0) 
#line 1699 
             tmp_1 = 0; else 
#line 1699 
                             tmp_1 = 1;
  
#line 1699 
  if (tmp_1) {
    
#line 1700 
    __retres = -2;
    
#line 1700 
    goto return_label;
  }
  else ;
  
#line 1703 
  work_done = myri10ge_clean_rx_done(ss,4);
  
#line 1704 
  if (work_done != 0) 
#line 1705 
                      ss->busy_poll_cnt += (unsigned long)work_done; else 
                                                                    
#line 1707 
                                                                    ss->busy_poll_miss += 1UL;
  
#line 1709 
  myri10ge_ss_unlock_poll(ss);
  
#line 1711 
  __retres = work_done;
  return_label: 
#line 1711 
                return __retres;
}


#line 1715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static irqreturn_t myri10ge_intr(int irq, void *arg)
{
  irqreturn_t __retres;
  u32 send_done_count;
  int i;
  
#line 1717 
  struct myri10ge_slice_state *ss = (struct myri10ge_slice_state *)arg;
  
#line 1718 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 1719 
  struct mcp_irq_data *stats = ss->fw_stats;
  
#line 1720 
  struct myri10ge_tx_buf *tx = & ss->tx;
  
#line 1726 
  if ((mgp->dev)->real_num_tx_queues == 1U && mgp->ss != ss) {
    
#line 1727 
    napi_schedule(& ss->napi);
    
#line 1728 
    __retres = IRQ_HANDLED;
    
#line 1728 
    goto return_label;
  }
  else ;
  
#line 1732 
  if ((long)((unsigned int)stats->valid == 0U) != 0L) {
    
#line 1733 
    __retres = IRQ_NONE;
    
#line 1733 
    goto return_label;
  }
  else ;
  
#line 1737 
  if (((int)stats->valid & 1) != 0) 
#line 1738 
                                    napi_schedule(& ss->napi); else ;
  
#line 1740 
  if (mgp->msi_enabled == 0 && mgp->msix_enabled == 0) {
    
#line 1741 
    put_be32(0U,mgp->irq_deassert);
    
#line 1742 
    if (myri10ge_deassert_wait == 0) 
#line 1743 
                                     stats->valid = (unsigned char)0U; else ;
    
#line 1744 
    ldv_inline_asm();
  }
  else 
#line 1746 
       stats->valid = (unsigned char)0U;
  
#line 1749 
  i = 0;
  ldv_57109: 
#line 1750 
  ;
  
#line 1751 
  i += 1;
  
#line 1753 
  if (0 != 0) 
#line 1753 
              send_done_count = (((stats->send_done_count << 24) | ((stats->send_done_count << 8) & 16711680U)) | ((stats->send_done_count >> 8) & 65280U)) | (stats->send_done_count >> 24); else 
                                                                    
#line 1753 
                                                                    send_done_count = __fswab32(stats->send_done_count);
  
#line 1754 
  if ((unsigned int)tx->pkt_done != send_done_count) 
#line 1755 
                                                     myri10ge_tx_done(ss,(int)send_done_count); else ;
  
#line 1756 
  if ((long)(i > myri10ge_max_irq_loops) != 0L) {
    
#line 1757 
    netdev_warn((struct net_device const *)mgp->dev,"irq stuck?\n");
    
#line 1758 
    stats->valid = (unsigned char)0U;
    
#line 1759 
    ldv_schedule_work_81(& mgp->watchdog_work);
  }
  else ;
  
#line 1761 
  if ((long)((unsigned int)stats->valid == 0U) != 0L) 
#line 1762 
                                                      goto ldv_57108; else ;
  
#line 1763 
  cpu_relax();
  
#line 1764 
  ldv_inline_asm();
  
#line 1751 
  goto ldv_57109;
  ldv_57108: 
#line 1752 
  ;
  
#line 1768 
  if (mgp->ss == ss) 
#line 1769 
                     myri10ge_check_statblock(mgp); else ;
  
#line 1771 
  put_be32(50331648U,ss->irq_claim + 1U);
  
#line 1772 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1772 
                return __retres;
}


#line 1776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int __retres;
  char *ptr;
  int i;
  
#line 1778 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1782 
  cmd->autoneg = (unsigned char)0U;
  
#line 1783 
  ethtool_cmd_speed_set(cmd,10000U);
  
#line 1784 
  cmd->duplex = (unsigned char)1U;
  
#line 1792 
  ptr = mgp->product_code_string;
  
#line 1793 
  if (ptr == (char *)0) {
    
#line 1794 
    netdev_err((struct net_device const *)netdev,"Missing product code\n");
    
#line 1795 
    __retres = 0;
    
#line 1795 
    goto return_label;
  }
  else ;
  
#line 1797 
  i = 0;
  
#line 1797 
  goto ldv_57118;
  ldv_57117: 
#line 1798 
  ;
  
#line 1798 
  ptr = strchr((char const *)ptr,45);
  
#line 1799 
  if (ptr == (char *)0) {
    
#line 1800 
    netdev_err((struct net_device const *)netdev,"Invalid product code %s\n",mgp->product_code_string);
    
#line 1802 
    __retres = 0;
    
#line 1802 
    goto return_label;
  }
  else ;
  
#line 1797 
  i += 1;
  
#line 1797 
  ptr += 1;
  ldv_57118: 
#line 1798 
  ;
  
#line 1797 
  if (i <= 2) 
#line 1799 
              goto ldv_57117; else 
#line 1802 
                                   goto ldv_57119;
  ldv_57119: 
#line 1803 
  ;
  
#line 1805 
  if ((int)*ptr == 50) 
#line 1806 
                       ptr += 1; else ;
  
#line 1807 
  if ((unsigned int)*ptr + 175U <= 2U) {
    
#line 1809 
    cmd->port = (unsigned char)3U;
    
#line 1810 
    cmd->supported |= 1024U;
    
#line 1811 
    cmd->advertising |= 1024U;
  }
  else 
#line 1813 
       cmd->port = (unsigned char)255U;
  
#line 1815 
  if ((unsigned int)*ptr + 174U <= 1U) 
#line 1816 
                                       cmd->transceiver = (unsigned char)1U; else 
                                                                    
#line 1818 
                                                                    cmd->transceiver = (unsigned char)0U;
  
#line 1820 
  __retres = 0;
  return_label: 
#line 1820 
                return __retres;
}


#line 1824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 1826 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1828 
  strlcpy((char *)(& info->driver),"myri10ge",32UL);
  
#line 1829 
  strlcpy((char *)(& info->version),"1.5.3-1.534",32UL);
  
#line 1830 
  strlcpy((char *)(& info->fw_version),(char const *)(& mgp->fw_version),32UL);
  
#line 1831 
  tmp_0 = pci_name((struct pci_dev const *)mgp->pdev);
  
#line 1831 
  ;
  
#line 1831 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 1832 
  return;
}


#line 1835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *coal)
{
  int __retres;
  
#line 1837 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1839 
  coal->rx_coalesce_usecs = (unsigned int)mgp->intr_coal_delay;
  
#line 1840 
  __retres = 0;
  
#line 1840 
  return __retres;
}


#line 1844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *coal)
{
  int __retres;
  unsigned int tmp_1;
  
#line 1846 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1848 
  mgp->intr_coal_delay = (int)coal->rx_coalesce_usecs;
  
#line 1849 
  ;
  
#line 1849 
  if (0 != 0) 
#line 1849 
              tmp_1 = ((((unsigned int)mgp->intr_coal_delay << 24) | (((unsigned int)mgp->intr_coal_delay << 8) & 16711680U)) | (((unsigned int)mgp->intr_coal_delay >> 8) & 65280U)) | ((unsigned int)mgp->intr_coal_delay >> 24); else 
                                                                    
#line 1849 
                                                                    tmp_1 = __fswab32((unsigned int)mgp->intr_coal_delay);
  
#line 1849 
  put_be32(tmp_1,mgp->intr_coal_delay_ptr);
  
#line 1850 
  __retres = 0;
  
#line 1850 
  return __retres;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  
#line 1857 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1859 
  pause->autoneg = 0U;
  
#line 1860 
  pause->rx_pause = (unsigned int)mgp->pause;
  
#line 1861 
  pause->tx_pause = (unsigned int)mgp->pause;
  
#line 1862 
  return;
}


#line 1865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  int __retres;
  
#line 1868 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1870 
  if (pause->tx_pause != (unsigned int)mgp->pause) {
    int tmp_0;
    
#line 1871 
    tmp_0 = myri10ge_change_pause(mgp,(int)pause->tx_pause);
    
#line 1871 
    __retres = tmp_0;
    
#line 1871 
    goto return_label;
  }
  else ;
  
#line 1872 
  if (pause->rx_pause != (unsigned int)mgp->pause) {
    int tmp_1;
    
#line 1873 
    tmp_1 = myri10ge_change_pause(mgp,(int)pause->rx_pause);
    
#line 1873 
    __retres = tmp_1;
    
#line 1873 
    goto return_label;
  }
  else ;
  
#line 1874 
  if (pause->autoneg != 0U) {
    
#line 1875 
    __retres = -22;
    
#line 1875 
    goto return_label;
  }
  else ;
  
#line 1876 
  __retres = 0;
  return_label: 
#line 1876 
                return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  
#line 1883 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1885 
  ring->rx_mini_max_pending = (unsigned int)((mgp->ss)->rx_small.mask + 1);
  
#line 1886 
  ring->rx_max_pending = (unsigned int)((mgp->ss)->rx_big.mask + 1);
  
#line 1887 
  ring->rx_jumbo_max_pending = 0U;
  
#line 1888 
  ring->tx_max_pending = (unsigned int)((mgp->ss)->tx.mask + 1);
  
#line 1889 
  ring->rx_mini_pending = ring->rx_mini_max_pending;
  
#line 1890 
  ring->rx_pending = ring->rx_max_pending;
  
#line 1891 
  ring->rx_jumbo_pending = ring->rx_jumbo_max_pending;
  
#line 1892 
  ring->tx_pending = ring->tx_max_pending;
  
#line 1893 
  return;
}


#line 1895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char const myri10ge_gstrings_main_stats[45U][32U] = {{(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'r', (char)'t', (char)'b', (char)'e', (char)'a', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'w', (char)'i', (char)'n', (char)'d', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'o', (char)'u', (char)'n', (char)'d', (char)'a', (char)'r', (char)'y', (char)'\000'}, {(char)'i', (char)'r', (char)'q', (char)'\000'}, {(char)'M', (char)'S', (char)'I', (char)'\000'}, {(char)'M', (char)'S', (char)'I', (char)'X', (char)'\000'}, {(char)'r', (char)'e', (char)'a', (char)'d', (char)'_', (char)'d', (char)'m', (char)'a', (char)'_', (char)'b', (char)'w', (char)'_', (char)'M', (char)'B', (char)'s', (char)'\000'}, {(char)'w', (char)'r', (char)'i', (char)'t', (char)'e', (char)'_', (char)'d', (char)'m', (char)'a', (char)'_', (char)'b', (char)'w', (char)'_', (char)'M', (char)'B', (char)'s', (char)'\000'}, {(char)'r', (char)'e', (char)'a', (char)'d', (char)'_', (char)'w', (char)'r', (char)'i', (char)'t', (char)'e', (char)'_', (char)'d', (char)'m', (char)'a', (char)'_', (char)'b', (char)'w', (char)'_', (char)'M', (char)'B', (char)'s', (char)'\000'}, {(char)'s', (char)'e', (char)'r', (char)'i', (char)'a', (char)'l', (char)'_', (char)'n', (char)'u', (char)'m', (char)'b', (char)'e', (char)'r', (char)'\000'}, {(char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'d', (char)'c', (char)'a', (char)'_', (char)'c', (char)'a', (char)'p', (char)'a', (char)'b', (char)'l', (char)'e', (char)'_', (char)'f', (char)'i', (char)'r', (char)'m', (char)'w', (char)'a', (char)'r', (char)'e', (char)'\000'}, {(char)'d', (char)'c', (char)'a', (char)'_', (char)'d', (char)'e', (char)'v', (char)'i', (char)'c', (char)'e', (char)'_', (char)'p', (char)'r', (char)'e', (char)'s', (char)'e', (char)'n', (char)'t', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'c', (char)'h', (char)'a', (char)'n', (char)'g', (char)'e', (char)'s', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'u', (char)'p', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'o', (char)'r', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'e', (char)'d', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'b', (char)'a', (char)'d', (char)'_', (char)'p', (char)'h', (char)'y', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'b', (char)'a', (char)'d', (char)'_', (char)'c', (char)'r', (char)'c', (char)'3', (char)'2', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'e', (char)'d', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'e', (char)'d', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'r', (char)'u', (char)'n', (char)'t', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'n', (char)'o', (char)'_', (char)'s', (char)'m', (char)'a', (char)'l', (char)'l', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'e', (char)'r', (char)'\000'}, {(char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'_', (char)'n', (char)'o', (char)'_', (char)'b', (char)'i', (char)'g', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'e', (char)'r', (char)'\000'}};

#line 1917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static char const myri10ge_gstrings_slice_stats[14U][32U] = {{(char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)' ', (char)'s', (char)'l', (char)'i', (char)'c', (char)'e', (char)' ', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'-', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'_', (char)'d', (char)'o', (char)'n', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'q', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'o', (char)'n', (char)'e', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'s', (char)'m', (char)'a', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'i', (char)'g', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'a', (char)'k', (char)'e', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, {(char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'l', (char)'i', (char)'n', (char)'e', (char)'a', (char)'r', (char)'i', (char)'z', (char)'e', (char)'d', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'c', (char)'k', (char)'_', (char)'n', (char)'a', (char)'p', (char)'i', (char)'_', (char)'y', (char)'i', (char)'e', (char)'l', (char)'d', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'c', (char)'k', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'_', (char)'y', (char)'i', (char)'e', (char)'l', (char)'d', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'u', (char)'s', (char)'y', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'u', (char)'s', (char)'y', (char)'_', (char)'p', (char)'o', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 1935 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1938 
  switch (stringset) {
    case (u32)1: 
#line 1939 
    ;
    
#line 1940 
    memcpy((void *)data,(void const *)(& myri10ge_gstrings_main_stats),1440UL);
    
#line 1942 
    data += 1440U;
    
#line 1943 
    i = 0;
    
#line 1943 
    goto ldv_57161;
    ldv_57160: 
#line 1944 
    ;
    
#line 1944 
    memcpy((void *)data,(void const *)(& myri10ge_gstrings_slice_stats),448UL);
    
#line 1946 
    data += 448U;
    
#line 1943 
    i += 1;
    ldv_57161: 
#line 1944 
    ;
    
#line 1943 
    if (mgp->num_slices > i) 
#line 1945 
                             goto ldv_57160; else 
#line 1948 
                                                  goto ldv_57162;
    ldv_57162: 
#line 1949 
    ;
    
#line 1948 
    goto ldv_57163;
  }
  ldv_57163: 
#line 1950 
  ;
  
#line 1951 
  return;
}


#line 1952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 1954 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1956 
  switch (sset) {
    case 1: 
#line 1957 
    ;
    
#line 1958 
    __retres = (int)((unsigned long)mgp->num_slices * (unsigned long)14U + (unsigned long)45U);
    
#line 1958 
    goto return_label;
    default: 
#line 1960 
    ;
    
#line 1961 
    __retres = -95;
    
#line 1961 
    goto return_label;
  }
  return_label: 
#line 1956 
                return __retres;
}


#line 1966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  struct myri10ge_slice_state *ss;
  struct rtnl_link_stats64 link_stats;
  int slice;
  int i;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  unsigned int tmp_14;
  int tmp_15;
  unsigned int tmp_17;
  int tmp_18;
  unsigned int tmp_20;
  int tmp_21;
  unsigned int tmp_23;
  int tmp_24;
  unsigned int tmp_26;
  int tmp_27;
  unsigned int tmp_29;
  int tmp_30;
  unsigned int tmp_32;
  int tmp_33;
  unsigned int tmp_35;
  int tmp_36;
  unsigned int tmp_38;
  int tmp_39;
  unsigned int tmp_41;
  int tmp_42;
  unsigned int tmp_44;
  int tmp_45;
  unsigned int tmp_47;
  int tmp_48;
  int tmp_49;
  int tmp_50;
  int tmp_51;
  int tmp_52;
  int tmp_53;
  int tmp_54;
  int tmp_55;
  int tmp_56;
  int tmp_57;
  int tmp_58;
  int tmp_59;
  int tmp_60;
  int tmp_61;
  
#line 1969 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 1976 
  memset((void *)(& link_stats),0,184UL);
  
#line 1977 
  myri10ge_get_stats(netdev,& link_stats);
  
#line 1978 
  i = 0;
  
#line 1978 
  goto ldv_57188;
  ldv_57187: 
#line 1979 
  ;
  
#line 1979 
  *(data + i) = *((u64 *)(& link_stats) + i);
  
#line 1978 
  i += 1;
  ldv_57188: 
#line 1979 
  ;
  
#line 1978 
  if (i <= 20) 
#line 1980 
               goto ldv_57187; else 
#line 1983 
                                    goto ldv_57189;
  ldv_57189: 
#line 1984 
  ;
  
#line 1981 
  tmp_0 = i;
  
#line 1981 
  i += 1;
  
#line 1981 
  *(data + tmp_0) = (unsigned long long)((unsigned int)mgp->tx_boundary);
  
#line 1982 
  tmp_1 = i;
  
#line 1982 
  i += 1;
  
#line 1982 
  *(data + tmp_1) = (unsigned long long)(mgp->pdev)->irq;
  
#line 1983 
  tmp_2 = i;
  
#line 1983 
  i += 1;
  
#line 1983 
  *(data + tmp_2) = (unsigned long long)((unsigned int)mgp->msi_enabled);
  
#line 1984 
  tmp_3 = i;
  
#line 1984 
  i += 1;
  
#line 1984 
  *(data + tmp_3) = (unsigned long long)((unsigned int)mgp->msix_enabled);
  
#line 1985 
  tmp_4 = i;
  
#line 1985 
  i += 1;
  
#line 1985 
  *(data + tmp_4) = (unsigned long long)mgp->read_dma;
  
#line 1986 
  tmp_5 = i;
  
#line 1986 
  i += 1;
  
#line 1986 
  *(data + tmp_5) = (unsigned long long)mgp->write_dma;
  
#line 1987 
  tmp_6 = i;
  
#line 1987 
  i += 1;
  
#line 1987 
  *(data + tmp_6) = (unsigned long long)mgp->read_write_dma;
  
#line 1988 
  tmp_7 = i;
  
#line 1988 
  i += 1;
  
#line 1988 
  *(data + tmp_7) = (unsigned long long)((unsigned int)mgp->serial_number);
  
#line 1989 
  tmp_8 = i;
  
#line 1989 
  i += 1;
  
#line 1989 
  *(data + tmp_8) = (unsigned long long)((unsigned int)mgp->watchdog_resets);
  
#line 1991 
  tmp_9 = i;
  
#line 1991 
  i += 1;
  
#line 1991 
  *(data + tmp_9) = (unsigned long long)((mgp->ss)->dca_tag != (__be32 *)0U);
  
#line 1992 
  tmp_10 = i;
  
#line 1992 
  i += 1;
  
#line 1992 
  *(data + tmp_10) = (unsigned long long)((unsigned int)mgp->dca_enabled);
  
#line 1994 
  tmp_11 = i;
  
#line 1994 
  i += 1;
  
#line 1994 
  *(data + tmp_11) = (unsigned long long)mgp->link_changes;
  
#line 1997 
  ss = mgp->ss;
  
#line 1998 
  tmp_12 = i;
  
#line 1998 
  i += 1;
  
#line 1998 
  if (0 != 0) 
#line 1998 
              tmp_14 = ((((ss->fw_stats)->link_up << 24) | (((ss->fw_stats)->link_up << 8) & 16711680U)) | (((ss->fw_stats)->link_up >> 8) & 65280U)) | ((ss->fw_stats)->link_up >> 24); else 
                                                                    
#line 1998 
                                                                    tmp_14 = __fswab32((ss->fw_stats)->link_up);
  
#line 1998 
  *(data + tmp_12) = (unsigned long long)tmp_14;
  
#line 1999 
  tmp_15 = i;
  
#line 1999 
  i += 1;
  
#line 1999 
  if (0 != 0) 
#line 1999 
              tmp_17 = ((((ss->fw_stats)->dropped_link_overflow << 24) | (((ss->fw_stats)->dropped_link_overflow << 8) & 16711680U)) | (((ss->fw_stats)->dropped_link_overflow >> 8) & 65280U)) | ((ss->fw_stats)->dropped_link_overflow >> 24); else 
                                                                    
#line 1999 
                                                                    tmp_17 = __fswab32((ss->fw_stats)->dropped_link_overflow);
  
#line 1999 
  *(data + tmp_15) = (unsigned long long)tmp_17;
  
#line 2000 
  tmp_18 = i;
  
#line 2000 
  i += 1;
  
#line 2001 
  if (0 != 0) 
#line 2001 
              tmp_20 = ((((ss->fw_stats)->dropped_link_error_or_filtered << 24) | (((ss->fw_stats)->dropped_link_error_or_filtered << 8) & 16711680U)) | (((ss->fw_stats)->dropped_link_error_or_filtered >> 8) & 65280U)) | ((ss->fw_stats)->dropped_link_error_or_filtered >> 24); else 
                                                                    
#line 2001 
                                                                    tmp_20 = __fswab32((ss->fw_stats)->dropped_link_error_or_filtered);
  
#line 2000 
  *(data + tmp_18) = (unsigned long long)tmp_20;
  
#line 2002 
  tmp_21 = i;
  
#line 2002 
  i += 1;
  
#line 2002 
  if (0 != 0) 
#line 2002 
              tmp_23 = ((((ss->fw_stats)->dropped_pause << 24) | (((ss->fw_stats)->dropped_pause << 8) & 16711680U)) | (((ss->fw_stats)->dropped_pause >> 8) & 65280U)) | ((ss->fw_stats)->dropped_pause >> 24); else 
                                                                    
#line 2002 
                                                                    tmp_23 = __fswab32((ss->fw_stats)->dropped_pause);
  
#line 2002 
  *(data + tmp_21) = (unsigned long long)tmp_23;
  
#line 2003 
  tmp_24 = i;
  
#line 2003 
  i += 1;
  
#line 2003 
  if (0 != 0) 
#line 2003 
              tmp_26 = ((((ss->fw_stats)->dropped_bad_phy << 24) | (((ss->fw_stats)->dropped_bad_phy << 8) & 16711680U)) | (((ss->fw_stats)->dropped_bad_phy >> 8) & 65280U)) | ((ss->fw_stats)->dropped_bad_phy >> 24); else 
                                                                    
#line 2003 
                                                                    tmp_26 = __fswab32((ss->fw_stats)->dropped_bad_phy);
  
#line 2003 
  *(data + tmp_24) = (unsigned long long)tmp_26;
  
#line 2004 
  tmp_27 = i;
  
#line 2004 
  i += 1;
  
#line 2004 
  if (0 != 0) 
#line 2004 
              tmp_29 = ((((ss->fw_stats)->dropped_bad_crc32 << 24) | (((ss->fw_stats)->dropped_bad_crc32 << 8) & 16711680U)) | (((ss->fw_stats)->dropped_bad_crc32 >> 8) & 65280U)) | ((ss->fw_stats)->dropped_bad_crc32 >> 24); else 
                                                                    
#line 2004 
                                                                    tmp_29 = __fswab32((ss->fw_stats)->dropped_bad_crc32);
  
#line 2004 
  *(data + tmp_27) = (unsigned long long)tmp_29;
  
#line 2005 
  tmp_30 = i;
  
#line 2005 
  i += 1;
  
#line 2005 
  if (0 != 0) 
#line 2005 
              tmp_32 = ((((ss->fw_stats)->dropped_unicast_filtered << 24) | (((ss->fw_stats)->dropped_unicast_filtered << 8) & 16711680U)) | (((ss->fw_stats)->dropped_unicast_filtered >> 8) & 65280U)) | ((ss->fw_stats)->dropped_unicast_filtered >> 24); else 
                                                                    
#line 2005 
                                                                    tmp_32 = __fswab32((ss->fw_stats)->dropped_unicast_filtered);
  
#line 2005 
  *(data + tmp_30) = (unsigned long long)tmp_32;
  
#line 2006 
  tmp_33 = i;
  
#line 2006 
  i += 1;
  
#line 2007 
  if (0 != 0) 
#line 2007 
              tmp_35 = ((((ss->fw_stats)->dropped_multicast_filtered << 24) | (((ss->fw_stats)->dropped_multicast_filtered << 8) & 16711680U)) | (((ss->fw_stats)->dropped_multicast_filtered >> 8) & 65280U)) | ((ss->fw_stats)->dropped_multicast_filtered >> 24); else 
                                                                    
#line 2007 
                                                                    tmp_35 = __fswab32((ss->fw_stats)->dropped_multicast_filtered);
  
#line 2006 
  *(data + tmp_33) = (unsigned long long)tmp_35;
  
#line 2008 
  tmp_36 = i;
  
#line 2008 
  i += 1;
  
#line 2008 
  if (0 != 0) 
#line 2008 
              tmp_38 = ((((ss->fw_stats)->dropped_runt << 24) | (((ss->fw_stats)->dropped_runt << 8) & 16711680U)) | (((ss->fw_stats)->dropped_runt >> 8) & 65280U)) | ((ss->fw_stats)->dropped_runt >> 24); else 
                                                                    
#line 2008 
                                                                    tmp_38 = __fswab32((ss->fw_stats)->dropped_runt);
  
#line 2008 
  *(data + tmp_36) = (unsigned long long)tmp_38;
  
#line 2009 
  tmp_39 = i;
  
#line 2009 
  i += 1;
  
#line 2009 
  if (0 != 0) 
#line 2009 
              tmp_41 = ((((ss->fw_stats)->dropped_overrun << 24) | (((ss->fw_stats)->dropped_overrun << 8) & 16711680U)) | (((ss->fw_stats)->dropped_overrun >> 8) & 65280U)) | ((ss->fw_stats)->dropped_overrun >> 24); else 
                                                                    
#line 2009 
                                                                    tmp_41 = __fswab32((ss->fw_stats)->dropped_overrun);
  
#line 2009 
  *(data + tmp_39) = (unsigned long long)tmp_41;
  
#line 2010 
  tmp_42 = i;
  
#line 2010 
  i += 1;
  
#line 2010 
  if (0 != 0) 
#line 2010 
              tmp_44 = ((((ss->fw_stats)->dropped_no_small_buffer << 24) | (((ss->fw_stats)->dropped_no_small_buffer << 8) & 16711680U)) | (((ss->fw_stats)->dropped_no_small_buffer >> 8) & 65280U)) | ((ss->fw_stats)->dropped_no_small_buffer >> 24); else 
                                                                    
#line 2010 
                                                                    tmp_44 = __fswab32((ss->fw_stats)->dropped_no_small_buffer);
  
#line 2010 
  *(data + tmp_42) = (unsigned long long)tmp_44;
  
#line 2011 
  tmp_45 = i;
  
#line 2011 
  i += 1;
  
#line 2011 
  if (0 != 0) 
#line 2011 
              tmp_47 = ((((ss->fw_stats)->dropped_no_big_buffer << 24) | (((ss->fw_stats)->dropped_no_big_buffer << 8) & 16711680U)) | (((ss->fw_stats)->dropped_no_big_buffer >> 8) & 65280U)) | ((ss->fw_stats)->dropped_no_big_buffer >> 24); else 
                                                                    
#line 2011 
                                                                    tmp_47 = __fswab32((ss->fw_stats)->dropped_no_big_buffer);
  
#line 2011 
  *(data + tmp_45) = (unsigned long long)tmp_47;
  
#line 2013 
  slice = 0;
  
#line 2013 
  goto ldv_57191;
  ldv_57190: 
#line 2014 
  ;
  
#line 2014 
  ss = mgp->ss + slice;
  
#line 2015 
  tmp_48 = i;
  
#line 2015 
  i += 1;
  
#line 2015 
  *(data + tmp_48) = (unsigned long long)slice;
  
#line 2016 
  tmp_49 = i;
  
#line 2016 
  i += 1;
  
#line 2016 
  *(data + tmp_49) = (unsigned long long)((unsigned int)ss->tx.pkt_start);
  
#line 2017 
  tmp_50 = i;
  
#line 2017 
  i += 1;
  
#line 2017 
  *(data + tmp_50) = (unsigned long long)((unsigned int)ss->tx.pkt_done);
  
#line 2018 
  tmp_51 = i;
  
#line 2018 
  i += 1;
  
#line 2018 
  *(data + tmp_51) = (unsigned long long)((unsigned int)ss->tx.req);
  
#line 2019 
  tmp_52 = i;
  
#line 2019 
  i += 1;
  
#line 2019 
  *(data + tmp_52) = (unsigned long long)((unsigned int)ss->tx.done);
  
#line 2020 
  tmp_53 = i;
  
#line 2020 
  i += 1;
  
#line 2020 
  *(data + tmp_53) = (unsigned long long)((unsigned int)ss->rx_small.cnt);
  
#line 2021 
  tmp_54 = i;
  
#line 2021 
  i += 1;
  
#line 2021 
  *(data + tmp_54) = (unsigned long long)((unsigned int)ss->rx_big.cnt);
  
#line 2022 
  tmp_55 = i;
  
#line 2022 
  i += 1;
  
#line 2022 
  *(data + tmp_55) = (unsigned long long)((unsigned int)ss->tx.wake_queue);
  
#line 2023 
  tmp_56 = i;
  
#line 2023 
  i += 1;
  
#line 2023 
  *(data + tmp_56) = (unsigned long long)((unsigned int)ss->tx.stop_queue);
  
#line 2024 
  tmp_57 = i;
  
#line 2024 
  i += 1;
  
#line 2024 
  *(data + tmp_57) = (unsigned long long)((unsigned int)ss->tx.linearized);
  
#line 2026 
  tmp_58 = i;
  
#line 2026 
  i += 1;
  
#line 2026 
  *(data + tmp_58) = (unsigned long long)ss->lock_napi_yield;
  
#line 2027 
  tmp_59 = i;
  
#line 2027 
  i += 1;
  
#line 2027 
  *(data + tmp_59) = (unsigned long long)ss->lock_poll_yield;
  
#line 2028 
  tmp_60 = i;
  
#line 2028 
  i += 1;
  
#line 2028 
  *(data + tmp_60) = (unsigned long long)ss->busy_poll_miss;
  
#line 2029 
  tmp_61 = i;
  
#line 2029 
  i += 1;
  
#line 2029 
  *(data + tmp_61) = (unsigned long long)ss->busy_poll_cnt;
  
#line 2013 
  slice += 1;
  ldv_57191: 
#line 2014 
  ;
  
#line 2013 
  if (mgp->num_slices > slice) 
#line 2015 
                               goto ldv_57190; else 
#line 2018 
                                                    goto ldv_57192;
  ldv_57192: 
#line 2019 
  ;
  
#line 2020 
  return;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_set_msglevel(struct net_device *netdev, u32 value)
{
  
#line 2036 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 2037 
  mgp->msg_enable = value;
  
#line 2038 
  return;
}


#line 2040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static u32 myri10ge_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 2042 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 2043 
  __retres = mgp->msg_enable;
  
#line 2043 
  return __retres;
}


#line 2051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_led(struct myri10ge_priv *mgp, int on)
{
  int __retres;
  struct mcp_gen_header *hdr;
  size_t hdr_off;
  size_t pattern_off;
  size_t hdr_len;
  __u32 tmp_0;
  unsigned int tmp;
  __u32 tmp_2;
  unsigned int tmp_1;
  unsigned int tmp_6;
  
#line 2054 
  struct device *dev = & (mgp->pdev)->dev;
  
#line 2056 
  u32 pattern = 4294967294U;
  
#line 2059 
  tmp = readl((void const volatile *)(mgp->sram + 60U));
  
#line 2059 
  tmp_0 = __fswab32(tmp);
  
#line 2059 
  hdr_off = (unsigned long)tmp_0;
  
#line 2060 
  if ((hdr_off & 3UL) != 0UL || hdr_off + 192UL > (unsigned long)mgp->sram_size) {
    
#line 2061 
    dev_err((struct device const *)dev,"Running firmware has bad header offset (%d)\n",(int)hdr_off);
    
#line 2063 
    __retres = -5;
    
#line 2063 
    goto return_label;
  }
  else ;
  
#line 2065 
  tmp_1 = readl((void const volatile *)(mgp->sram + hdr_off));
  
#line 2065 
  tmp_2 = __fswab32(tmp_1);
  
#line 2065 
  hdr_len = (unsigned long)tmp_2;
  
#line 2067 
  pattern_off = hdr_off + 184UL;
  
#line 2068 
  if (hdr_len + hdr_off <= pattern_off) {
    
#line 2069 
    _dev_info((struct device const *)dev,"Firmware does not support LED identification\n");
    
#line 2070 
    __retres = -22;
    
#line 2070 
    goto return_label;
  }
  else ;
  
#line 2072 
  if (on == 0) {
    __u32 tmp_4;
    unsigned int tmp_3;
    
#line 2073 
    tmp_3 = readl((void const volatile *)(mgp->sram + (pattern_off + (size_t)4U)));
    
#line 2073 
    tmp_4 = __fswab32(tmp_3);
    
#line 2073 
    pattern = tmp_4;
  }
  else ;
  
#line 2074 
  ;
  
#line 2074 
  if (0 != 0) 
#line 2074 
              tmp_6 = (((pattern << 24) | ((pattern << 8) & 16711680U)) | ((pattern >> 8) & 65280U)) | (pattern >> 24); else 
                                                                    
#line 2074 
                                                                    tmp_6 = __fswab32(pattern);
  
#line 2074 
  writel(tmp_6,(void volatile *)(mgp->sram + pattern_off));
  
#line 2075 
  __retres = 0;
  return_label: 
#line 2075 
                return __retres;
}


#line 2079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_phys_id(struct net_device *netdev, enum ethtool_phys_id_state state)
{
  int rc;
  
#line 2081 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)netdev);
  
#line 2084 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 2085 
    ;
    
#line 2086 
    rc = myri10ge_led(mgp,1);
    
#line 2087 
    goto ldv_57219;
    case (unsigned int)0: 
#line 2089 
    ;
    
#line 2090 
    rc = myri10ge_led(mgp,0);
    
#line 2091 
    goto ldv_57219;
    default: 
#line 2093 
    ;
    
#line 2094 
    rc = -22;
  }
  ldv_57219: 
#line 2097 
  ;
  
#line 2097 
  return rc;
}


#line 2100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct ethtool_ops const myri10ge_ethtool_ops = {.get_settings = & myri10ge_get_settings, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & myri10ge_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & myri10ge_get_msglevel, .set_msglevel = & myri10ge_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & myri10ge_get_coalesce, .set_coalesce = & myri10ge_set_coalesce, .get_ringparam = & myri10ge_get_ringparam, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & myri10ge_get_pauseparam, .set_pauseparam = & myri10ge_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & myri10ge_get_strings, .set_phys_id = & myri10ge_phys_id, .get_ethtool_stats = & myri10ge_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & myri10ge_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_allocate_rings(struct myri10ge_slice_state *ss)
{
  int __retres;
  struct myri10ge_cmd cmd;
  int tx_ring_size;
  int rx_ring_size;
  int tx_ring_entries;
  int rx_ring_entries;
  int i;
  int slice;
  int status;
  size_t bytes;
  int tmp;
  int tmp_0;
  
#line 2119 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 2121 
  struct net_device *dev = mgp->dev;
  
#line 2128 
  slice = (int)(((long)ss - (long)mgp->ss) / 896L);
  
#line 2129 
  cmd.data0 = (unsigned int)slice;
  
#line 2130 
  status = myri10ge_send_cmd(mgp,11U,& cmd,0);
  
#line 2131 
  tx_ring_size = (int)cmd.data0;
  
#line 2132 
  cmd.data0 = (unsigned int)slice;
  
#line 2133 
  tmp = myri10ge_send_cmd(mgp,12U,& cmd,0);
  
#line 2133 
  status = tmp | status;
  
#line 2134 
  if (status != 0) {
    
#line 2135 
    __retres = status;
    
#line 2135 
    goto return_label;
  }
  else ;
  
#line 2136 
  rx_ring_size = (int)cmd.data0;
  
#line 2138 
  tx_ring_entries = (int)((unsigned long)tx_ring_size / 16UL);
  
#line 2139 
  rx_ring_entries = (int)((unsigned long)rx_ring_size / 8UL);
  
#line 2140 
  ss->tx.mask = tx_ring_entries + -1;
  
#line 2141 
  tmp_0 = rx_ring_entries + -1;
  
#line 2141 
  ss->rx_big.mask = tmp_0;
  
#line 2141 
  ss->rx_small.mask = tmp_0;
  
#line 2143 
  status = -12;
  
#line 2147 
  bytes = 1096UL;
  
#line 2149 
  ss->tx.req_bytes = (char *)kzalloc(bytes,208U);
  
#line 2150 
  if (ss->tx.req_bytes == (char *)0) 
#line 2151 
                                     goto abort_with_nothing; else ;
  
#line 2154 
  ss->tx.req_list = (struct mcp_kreq_ether_send *)(((unsigned long)ss->tx.req_bytes + 7UL) & 18446744073709551608UL);
  
#line 2156 
  ss->tx.queue_active = 0;
  
#line 2158 
  bytes = (unsigned long)rx_ring_entries * 8UL;
  
#line 2159 
  ss->rx_small.shadow = (struct mcp_kreq_ether_recv *)kzalloc(bytes,208U);
  
#line 2160 
  if (ss->rx_small.shadow == (struct mcp_kreq_ether_recv *)0) 
#line 2161 
                                                              goto abort_with_tx_req_bytes; else ;
  
#line 2163 
  bytes = (unsigned long)rx_ring_entries * 8UL;
  
#line 2164 
  ss->rx_big.shadow = (struct mcp_kreq_ether_recv *)kzalloc(bytes,208U);
  
#line 2165 
  if (ss->rx_big.shadow == (struct mcp_kreq_ether_recv *)0) 
#line 2166 
                                                            goto abort_with_rx_small_shadow; else ;
  
#line 2170 
  bytes = (unsigned long)tx_ring_entries * 32UL;
  
#line 2171 
  ss->tx.info = (struct myri10ge_tx_buffer_state *)kzalloc(bytes,208U);
  
#line 2172 
  if (ss->tx.info == (struct myri10ge_tx_buffer_state *)0) 
#line 2173 
                                                           goto abort_with_rx_big_shadow; else ;
  
#line 2175 
  bytes = (unsigned long)rx_ring_entries * 32UL;
  
#line 2176 
  ss->rx_small.info = (struct myri10ge_rx_buffer_state *)kzalloc(bytes,208U);
  
#line 2177 
  if (ss->rx_small.info == (struct myri10ge_rx_buffer_state *)0) 
#line 2178 
                                                                 goto abort_with_tx_info; else ;
  
#line 2180 
  bytes = (unsigned long)rx_ring_entries * 32UL;
  
#line 2181 
  ss->rx_big.info = (struct myri10ge_rx_buffer_state *)kzalloc(bytes,208U);
  
#line 2182 
  if (ss->rx_big.info == (struct myri10ge_rx_buffer_state *)0) 
#line 2183 
                                                               goto abort_with_rx_small_info; else ;
  
#line 2186 
  ss->rx_big.cnt = 0;
  
#line 2187 
  ss->rx_small.cnt = 0;
  
#line 2188 
  ss->rx_big.fill_cnt = 0;
  
#line 2189 
  ss->rx_small.fill_cnt = 0;
  
#line 2190 
  ss->rx_small.page_offset = 4096;
  
#line 2191 
  ss->rx_big.page_offset = 4096;
  
#line 2192 
  ss->rx_small.watchdog_needed = 0;
  
#line 2193 
  ss->rx_big.watchdog_needed = 0;
  
#line 2194 
  if (mgp->small_bytes == 0) 
#line 2195 
                             ss->rx_small.fill_cnt = ss->rx_small.mask + 1; else 
                                                                    
#line 2197 
                                                                    myri10ge_alloc_rx_pages(mgp,& ss->rx_small,mgp->small_bytes + 2,0);
  
#line 2201 
  if (ss->rx_small.fill_cnt < ss->rx_small.mask + 1) {
    
#line 2202 
    netdev_err((struct net_device const *)dev,"slice-%d: alloced only %d small bufs\n",slice,ss->rx_small.fill_cnt);
    
#line 2204 
    goto abort_with_rx_small_ring;
  }
  else ;
  
#line 2207 
  myri10ge_alloc_rx_pages(mgp,& ss->rx_big,mgp->big_bytes,0);
  
#line 2208 
  if (ss->rx_big.fill_cnt < ss->rx_big.mask + 1) {
    
#line 2209 
    netdev_err((struct net_device const *)dev,"slice-%d: alloced only %d big bufs\n",slice,ss->rx_big.fill_cnt);
    
#line 2211 
    goto abort_with_rx_big_ring;
  }
  else ;
  
#line 2214 
  __retres = 0;
  
#line 2214 
  goto return_label;
  abort_with_rx_big_ring: 
#line 2216 
  ;
  
#line 2217 
  i = ss->rx_big.cnt;
  
#line 2217 
  goto ldv_57247;
  ldv_57246: 
#line 2218 
  ;
  {
    
#line 2218 
    int idx = ss->rx_big.mask & i;
    
#line 2219 
    myri10ge_unmap_rx_page(mgp->pdev,ss->rx_big.info + idx,mgp->big_bytes);
    
#line 2221 
    put_page((ss->rx_big.info + idx)->page);
  }
  
#line 2217 
  i += 1;
  ldv_57247: 
#line 2218 
  ;
  
#line 2217 
  if (ss->rx_big.fill_cnt > i) 
#line 2219 
                               goto ldv_57246; else 
#line 2222 
                                                    goto ldv_57248;
  ldv_57248: 
#line 2223 
  ;
  abort_with_rx_small_ring: 
#line 2224 
  ;
  
#line 2225 
  if (mgp->small_bytes == 0) 
#line 2226 
                             ss->rx_small.fill_cnt = ss->rx_small.cnt; else ;
  
#line 2227 
  i = ss->rx_small.cnt;
  
#line 2227 
  goto ldv_57251;
  ldv_57250: 
#line 2228 
  ;
  {
    
#line 2228 
    int idx_0 = ss->rx_small.mask & i;
    
#line 2229 
    myri10ge_unmap_rx_page(mgp->pdev,ss->rx_small.info + idx_0,mgp->small_bytes + 2);
    
#line 2231 
    put_page((ss->rx_small.info + idx_0)->page);
  }
  
#line 2227 
  i += 1;
  ldv_57251: 
#line 2228 
  ;
  
#line 2227 
  if (ss->rx_small.fill_cnt > i) 
#line 2229 
                                 goto ldv_57250; else 
#line 2232 
                                                      goto ldv_57252;
  ldv_57252: 
#line 2233 
  ;
  
#line 2234 
  kfree((void const *)ss->rx_big.info);
  abort_with_rx_small_info: 
#line 2236 
  ;
  
#line 2237 
  kfree((void const *)ss->rx_small.info);
  abort_with_tx_info: 
#line 2239 
  ;
  
#line 2240 
  kfree((void const *)ss->tx.info);
  abort_with_rx_big_shadow: 
#line 2242 
  ;
  
#line 2243 
  kfree((void const *)ss->rx_big.shadow);
  abort_with_rx_small_shadow: 
#line 2245 
  ;
  
#line 2246 
  kfree((void const *)ss->rx_small.shadow);
  abort_with_tx_req_bytes: 
#line 2248 
  ;
  
#line 2249 
  kfree((void const *)ss->tx.req_bytes);
  
#line 2250 
  ss->tx.req_bytes = (char *)0;
  
#line 2251 
  ss->tx.req_list = (struct mcp_kreq_ether_send *)0;
  abort_with_nothing: 
#line 2253 
  ;
  
#line 2254 
  __retres = status;
  return_label: 
#line 2254 
                return __retres;
}


#line 2257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_free_rings(struct myri10ge_slice_state *ss)
{
  struct sk_buff *skb;
  struct myri10ge_tx_buf *tx;
  int i;
  int len;
  int idx;
  
#line 2259 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 2265 
  if (ss->tx.req_list == (struct mcp_kreq_ether_send *)0) 
#line 2266 
                                                          goto return_label; else ;
  
#line 2268 
  i = ss->rx_big.cnt;
  
#line 2268 
  goto ldv_57263;
  ldv_57262: 
#line 2269 
  ;
  
#line 2269 
  idx = ss->rx_big.mask & i;
  
#line 2270 
  if (ss->rx_big.fill_cnt + -1 == i) 
#line 2271 
                                     (ss->rx_big.info + idx)->page_offset = 4096; else ;
  
#line 2272 
  myri10ge_unmap_rx_page(mgp->pdev,ss->rx_big.info + idx,mgp->big_bytes);
  
#line 2274 
  put_page((ss->rx_big.info + idx)->page);
  
#line 2268 
  i += 1;
  ldv_57263: 
#line 2269 
  ;
  
#line 2268 
  if (ss->rx_big.fill_cnt > i) 
#line 2270 
                               goto ldv_57262; else 
#line 2273 
                                                    goto ldv_57264;
  ldv_57264: 
#line 2274 
  ;
  
#line 2277 
  if (mgp->small_bytes == 0) 
#line 2278 
                             ss->rx_small.fill_cnt = ss->rx_small.cnt; else ;
  
#line 2279 
  i = ss->rx_small.cnt;
  
#line 2279 
  goto ldv_57266;
  ldv_57265: 
#line 2280 
  ;
  
#line 2280 
  idx = ss->rx_small.mask & i;
  
#line 2281 
  if (ss->rx_small.fill_cnt + -1 == i) 
#line 2282 
                                       (ss->rx_small.info + idx)->page_offset = 4096; else ;
  
#line 2284 
  myri10ge_unmap_rx_page(mgp->pdev,ss->rx_small.info + idx,mgp->small_bytes + 2);
  
#line 2286 
  put_page((ss->rx_small.info + idx)->page);
  
#line 2279 
  i += 1;
  ldv_57266: 
#line 2280 
  ;
  
#line 2279 
  if (ss->rx_small.fill_cnt > i) 
#line 2281 
                                 goto ldv_57265; else 
#line 2284 
                                                      goto ldv_57267;
  ldv_57267: 
#line 2285 
  ;
  
#line 2288 
  tx = & ss->tx;
  
#line 2289 
  goto ldv_57269;
  ldv_57268: 
#line 2290 
  ;
  
#line 2290 
  idx = tx->done & tx->mask;
  
#line 2291 
  skb = (tx->info + idx)->skb;
  
#line 2294 
  (tx->info + idx)->skb = (struct sk_buff *)0;
  
#line 2295 
  tx->done += 1;
  
#line 2296 
  len = (int)(tx->info + idx)->len;
  
#line 2297 
  (tx->info + idx)->len = 0U;
  
#line 2298 
  if (skb != (struct sk_buff *)0) {
    
#line 2299 
    ss->stats.tx_dropped += 1UL;
    
#line 2300 
    dev_kfree_skb_any(skb);
    
#line 2301 
    if (len != 0) 
#line 2302 
                  pci_unmap_single(mgp->pdev,(tx->info + idx)->bus,(unsigned long)len,1); else ;
  }
  else 
    
#line 2307 
    if (len != 0) 
#line 2308 
                  pci_unmap_page(mgp->pdev,(tx->info + idx)->bus,(unsigned long)len,1); else ;
  ldv_57269: 
#line 2310 
  ;
  
#line 2289 
  if (tx->done != tx->req) 
#line 2291 
                           goto ldv_57268; else 
#line 2294 
                                                goto ldv_57270;
  ldv_57270: 
#line 2295 
  ;
  
#line 2314 
  kfree((void const *)ss->rx_big.info);
  
#line 2316 
  kfree((void const *)ss->rx_small.info);
  
#line 2318 
  kfree((void const *)ss->tx.info);
  
#line 2320 
  kfree((void const *)ss->rx_big.shadow);
  
#line 2322 
  kfree((void const *)ss->rx_small.shadow);
  
#line 2324 
  kfree((void const *)ss->tx.req_bytes);
  
#line 2325 
  ss->tx.req_bytes = (char *)0;
  
#line 2326 
  ss->tx.req_list = (struct mcp_kreq_ether_send *)0;
  return_label: 
#line 2327 
                return;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_request_irq(struct myri10ge_priv *mgp)
{
  int __retres;
  struct myri10ge_slice_state *ss;
  int i;
  int status;
  
#line 2331 
  struct pci_dev *pdev = mgp->pdev;
  
#line 2333 
  struct net_device *netdev = mgp->dev;
  
#line 2337 
  mgp->msi_enabled = 0;
  
#line 2338 
  mgp->msix_enabled = 0;
  
#line 2339 
  status = 0;
  
#line 2340 
  if (myri10ge_msi != 0) {
    
#line 2341 
    if (mgp->num_slices > 1) {
      
#line 2342 
      status = pci_enable_msix_range(pdev,mgp->msix_vectors,mgp->num_slices,mgp->num_slices);
      
#line 2344 
      if (status < 0) {
        
#line 2345 
        dev_err((struct device const *)(& pdev->dev),"Error %d setting up MSI-X\n",status);
        
#line 2347 
        __retres = status;
        
#line 2347 
        goto return_label;
      }
      else ;
      
#line 2349 
      mgp->msix_enabled = 1;
    }
    else ;
    
#line 2351 
    if (mgp->msix_enabled == 0) {
      
#line 2352 
      status = pci_enable_msi_exact(pdev,1);
      
#line 2353 
      if (status != 0) 
#line 2354 
                       dev_err((struct device const *)(& pdev->dev),"Error %d setting up MSI; falling back to xPIC\n",status); else 
                                                                    
#line 2358 
                                                                    mgp->msi_enabled = 1;
    }
    else ;
  }
  else ;
  
#line 2362 
  if (mgp->msix_enabled != 0) {
    
#line 2363 
    i = 0;
    
#line 2363 
    goto ldv_57283;
    ldv_57282: 
#line 2364 
    ;
    
#line 2364 
    ss = mgp->ss + i;
    
#line 2365 
    snprintf((char *)(& ss->irq_desc),32UL,"%s:slice-%d",(char *)(& netdev->name),i);
    
#line 2367 
    status = ldv_request_irq_82((mgp->msix_vectors + i)->vector,& myri10ge_intr,0UL,(char const *)(& ss->irq_desc),(void *)ss);
    
#line 2370 
    if (status != 0) {
      
#line 2371 
      dev_err((struct device const *)(& pdev->dev),"slice %d failed to allocate IRQ\n",i);
      
#line 2373 
      i -= 1;
      
#line 2374 
      goto ldv_57280;
      ldv_57279: 
#line 2375 
      ;
      
#line 2375 
      ldv_free_irq_83((mgp->msix_vectors + i)->vector,(void *)(mgp->ss + i));
      
#line 2377 
      i -= 1;
      ldv_57280: 
#line 2378 
      ;
      
#line 2374 
      if (i >= 0) 
#line 2376 
                  goto ldv_57279; else 
#line 2379 
                                       goto ldv_57281;
      ldv_57281: 
#line 2380 
      ;
      
#line 2379 
      pci_disable_msix(pdev);
      
#line 2380 
      __retres = status;
      
#line 2380 
      goto return_label;
    }
    else ;
    
#line 2363 
    i += 1;
    ldv_57283: 
#line 2364 
    ;
    
#line 2363 
    if (mgp->num_slices > i) 
#line 2365 
                             goto ldv_57282; else 
#line 2368 
                                                  goto ldv_57284;
    ldv_57284: 
#line 2369 
    ;
  }
  else {
    
#line 2384 
    status = ldv_request_irq_84(pdev->irq,& myri10ge_intr,128UL,(char const *)(& (mgp->dev)->name),(void *)mgp->ss);
    
#line 2386 
    if (status != 0) {
      
#line 2387 
      dev_err((struct device const *)(& pdev->dev),"failed to allocate IRQ\n");
      
#line 2388 
      if (mgp->msi_enabled != 0) 
#line 2389 
                                 pci_disable_msi(pdev); else ;
    }
    else ;
  }
  
#line 2392 
  __retres = status;
  return_label: 
#line 2392 
                return __retres;
}


#line 2395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_free_irq(struct myri10ge_priv *mgp)
{
  int i;
  
#line 2397 
  struct pci_dev *pdev = mgp->pdev;
  
#line 2400 
  if (mgp->msix_enabled != 0) {
    
#line 2401 
    i = 0;
    
#line 2401 
    goto ldv_57291;
    ldv_57290: 
#line 2402 
    ;
    
#line 2402 
    ldv_free_irq_85((mgp->msix_vectors + i)->vector,(void *)(mgp->ss + i));
    
#line 2401 
    i += 1;
    ldv_57291: 
#line 2402 
    ;
    
#line 2401 
    if (mgp->num_slices > i) 
#line 2403 
                             goto ldv_57290; else 
#line 2406 
                                                  goto ldv_57292;
    ldv_57292: 
#line 2407 
    ;
  }
  else 
#line 2404 
       ldv_free_irq_86(pdev->irq,(void *)mgp->ss);
  
#line 2406 
  if (mgp->msi_enabled != 0) 
#line 2407 
                             pci_disable_msi(pdev); else ;
  
#line 2408 
  if (mgp->msix_enabled != 0) 
#line 2409 
                              pci_disable_msix(pdev); else ;
  
#line 2410 
  return;
}


#line 2412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_get_txrx(struct myri10ge_priv *mgp, int slice)
{
  struct myri10ge_cmd cmd;
  struct myri10ge_slice_state *ss;
  int status;
  int tmp;
  int tmp_0;
  
#line 2418 
  ss = mgp->ss + slice;
  
#line 2419 
  status = 0;
  
#line 2420 
  if (slice == 0 || (mgp->dev)->real_num_tx_queues > 1U) {
    
#line 2421 
    cmd.data0 = (unsigned int)slice;
    
#line 2422 
    status = myri10ge_send_cmd(mgp,6U,& cmd,0);
    
#line 2424 
    ss->tx.lanai = (struct mcp_kreq_ether_send *)(mgp->sram + cmd.data0);
  }
  else ;
  
#line 2427 
  cmd.data0 = (unsigned int)slice;
  
#line 2428 
  tmp = myri10ge_send_cmd(mgp,7U,& cmd,0);
  
#line 2429 
  status = tmp | status;
  
#line 2430 
  ss->rx_small.lanai = (struct mcp_kreq_ether_recv *)(mgp->sram + cmd.data0);
  
#line 2433 
  cmd.data0 = (unsigned int)slice;
  
#line 2434 
  tmp_0 = myri10ge_send_cmd(mgp,8U,& cmd,0);
  
#line 2434 
  status = tmp_0 | status;
  
#line 2435 
  ss->rx_big.lanai = (struct mcp_kreq_ether_recv *)(mgp->sram + cmd.data0);
  
#line 2438 
  ss->tx.send_go = (__be32 *)(mgp->sram + ((unsigned int)(slice * 64) + 3670016U));
  
#line 2440 
  ss->tx.send_stop = (__be32 *)(mgp->sram + ((unsigned int)(slice * 64) + 3932160U));
  
#line 2442 
  return status;
}


#line 2446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_set_stats(struct myri10ge_priv *mgp, int slice)
{
  int __retres;
  struct myri10ge_cmd cmd;
  struct myri10ge_slice_state *ss;
  int status;
  
#line 2452 
  ss = mgp->ss + slice;
  
#line 2453 
  cmd.data0 = (unsigned int)ss->fw_stats_bus;
  
#line 2454 
  cmd.data1 = (unsigned int)(ss->fw_stats_bus >> 32);
  
#line 2455 
  cmd.data2 = (unsigned int)((slice << 16) | 64);
  
#line 2456 
  status = myri10ge_send_cmd(mgp,31U,& cmd,0);
  
#line 2457 
  if (status == -38) {
    
#line 2458 
    dma_addr_t bus = ss->fw_stats_bus;
    
#line 2459 
    if (slice != 0) {
      
#line 2460 
      __retres = -22;
      
#line 2460 
      goto return_label;
    }
    else ;
    
#line 2461 
    bus += 24ULL;
    
#line 2462 
    cmd.data0 = (unsigned int)bus;
    
#line 2463 
    cmd.data1 = (unsigned int)(bus >> 32);
    
#line 2464 
    status = myri10ge_send_cmd(mgp,19U,& cmd,0);
    
#line 2468 
    mgp->fw_multicast_support = 0;
  }
  else 
#line 2470 
       mgp->fw_multicast_support = 1;
  
#line 2472 
  __retres = 0;
  return_label: 
#line 2472 
                return __retres;
}


#line 2475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_open(struct net_device *dev)
{
  int __retres;
  struct myri10ge_slice_state *ss;
  struct myri10ge_cmd cmd;
  int i;
  int status;
  int big_pow2;
  int slice;
  u8 *itable;
  int tmp_3;
  int tmp_4;
  
#line 2478 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 2483 
  if (mgp->running != 0) {
    
#line 2484 
    __retres = -16;
    
#line 2484 
    goto return_label;
  }
  else ;
  
#line 2486 
  mgp->running = 2;
  
#line 2487 
  status = myri10ge_reset(mgp);
  
#line 2488 
  if (status != 0) {
    
#line 2489 
    netdev_err((struct net_device const *)dev,"failed reset\n");
    
#line 2490 
    goto abort_with_nothing;
  }
  else ;
  
#line 2493 
  if (mgp->num_slices > 1) {
    int tmp_0;
    
#line 2494 
    cmd.data0 = (unsigned int)mgp->num_slices;
    
#line 2495 
    cmd.data1 = 1U;
    
#line 2496 
    if ((mgp->dev)->real_num_tx_queues > 1U) 
#line 2497 
                                             cmd.data1 |= 2U; else ;
    
#line 2498 
    status = myri10ge_send_cmd(mgp,36U,& cmd,0);
    
#line 2500 
    if (status != 0) {
      
#line 2501 
      netdev_err((struct net_device const *)dev,"failed to set number of slices\n");
      
#line 2502 
      goto abort_with_nothing;
    }
    else ;
    
#line 2505 
    cmd.data0 = (unsigned int)mgp->num_slices;
    
#line 2506 
    status = myri10ge_send_cmd(mgp,40U,& cmd,0);
    
#line 2509 
    tmp_0 = myri10ge_send_cmd(mgp,39U,& cmd,0);
    
#line 2511 
    status = tmp_0 | status;
    
#line 2512 
    if (status != 0) {
      
#line 2513 
      netdev_err((struct net_device const *)dev,"failed to setup rss tables\n");
      
#line 2514 
      goto abort_with_nothing;
    }
    else ;
    
#line 2518 
    itable = mgp->sram + cmd.data0;
    
#line 2519 
    i = 0;
    
#line 2519 
    goto ldv_57321;
    ldv_57320: 
#line 2520 
    ;
    
#line 2520 
    __writeb((unsigned char)((int)((unsigned char)i)),(void volatile *)(itable + i));
    
#line 2519 
    i += 1;
    ldv_57321: 
#line 2520 
    ;
    
#line 2519 
    if (mgp->num_slices > i) 
#line 2521 
                             goto ldv_57320; else 
#line 2524 
                                                  goto ldv_57322;
    ldv_57322: 
#line 2525 
    ;
    
#line 2522 
    cmd.data0 = 1U;
    
#line 2523 
    cmd.data1 = (unsigned int)myri10ge_rss_hash;
    
#line 2524 
    status = myri10ge_send_cmd(mgp,43U,& cmd,0);
    
#line 2526 
    if (status != 0) {
      
#line 2527 
      netdev_err((struct net_device const *)dev,"failed to enable slices\n");
      
#line 2528 
      goto abort_with_nothing;
    }
    else ;
  }
  else ;
  
#line 2532 
  status = myri10ge_request_irq(mgp);
  
#line 2533 
  if (status != 0) 
#line 2534 
                   goto abort_with_nothing; else ;
  
#line 2542 
  if (dev->mtu <= 1500U) 
#line 2544 
                         mgp->small_bytes = 126; else 
#line 2549 
                                                      mgp->small_bytes = 1518;
  
#line 2552 
  if (myri10ge_small_bytes >= 0) 
#line 2553 
                                 mgp->small_bytes = myri10ge_small_bytes; else ;
  
#line 2559 
  big_pow2 = (int)(dev->mtu + 20U);
  
#line 2560 
  if ((unsigned int)big_pow2 <= 2047U) {
    int tmp_2;
    bool tmp_1;
    
#line 2561 
    goto ldv_57324;
    ldv_57323: 
#line 2562 
    ;
    
#line 2562 
    big_pow2 += 1;
    ldv_57324: 
#line 2563 
    ;
    
#line 2561 
    tmp_1 = is_power_of_2((unsigned long)big_pow2);
    
#line 2561 
    if (tmp_1) 
#line 2561 
               tmp_2 = 0; else 
#line 2561 
                               tmp_2 = 1;
    
#line 2561 
    if (tmp_2) 
#line 2563 
               goto ldv_57323; else 
#line 2566 
                                    goto ldv_57325;
    ldv_57325: 
#line 2567 
    ;
    
#line 2563 
    mgp->big_bytes = (int)(dev->mtu + 20U);
  }
  else {
    
#line 2565 
    big_pow2 = 4096;
    
#line 2566 
    mgp->big_bytes = big_pow2;
  }
  
#line 2570 
  slice = 0;
  
#line 2570 
  goto ldv_57328;
  ldv_57327: 
#line 2571 
  ;
  
#line 2571 
  ss = mgp->ss + slice;
  
#line 2573 
  status = myri10ge_get_txrx(mgp,slice);
  
#line 2574 
  if (status != 0) {
    
#line 2575 
    netdev_err((struct net_device const *)dev,"failed to get ring sizes or locations\n");
    
#line 2576 
    goto abort_with_rings;
  }
  else ;
  
#line 2578 
  status = myri10ge_allocate_rings(ss);
  
#line 2579 
  if (status != 0) 
#line 2580 
                   goto abort_with_rings; else ;
  
#line 2585 
  if (slice == 0 || (mgp->dev)->real_num_tx_queues > 1U) 
#line 2586 
                                                         status = myri10ge_set_stats(mgp,slice); else ;
  
#line 2587 
  if (status != 0) {
    
#line 2588 
    netdev_err((struct net_device const *)dev,"Couldn\'t set stats DMA\n");
    
#line 2589 
    goto abort_with_rings;
  }
  else ;
  
#line 2593 
  myri10ge_ss_init_lock(ss);
  
#line 2596 
  napi_enable(& ss->napi);
  
#line 2570 
  slice += 1;
  ldv_57328: 
#line 2571 
  ;
  
#line 2570 
  if (mgp->num_slices > slice) 
#line 2572 
                               goto ldv_57327; else 
#line 2575 
                                                    goto ldv_57329;
  ldv_57329: 
#line 2576 
  ;
  
#line 2600 
  cmd.data0 = dev->mtu + 18U;
  
#line 2601 
  status = myri10ge_send_cmd(mgp,16U,& cmd,0);
  
#line 2602 
  cmd.data0 = (unsigned int)mgp->small_bytes;
  
#line 2603 
  tmp_3 = myri10ge_send_cmd(mgp,5U,& cmd,0);
  
#line 2604 
  status = tmp_3 | status;
  
#line 2605 
  cmd.data0 = (unsigned int)big_pow2;
  
#line 2606 
  tmp_4 = myri10ge_send_cmd(mgp,4U,& cmd,0);
  
#line 2607 
  status = tmp_4 | status;
  
#line 2608 
  if (status != 0) {
    
#line 2609 
    netdev_err((struct net_device const *)dev,"Couldn\'t set buffer sizes\n");
    
#line 2610 
    goto abort_with_rings;
  }
  else ;
  
#line 2618 
  cmd.data0 = 0U;
  
#line 2619 
  status = myri10ge_send_cmd(mgp,45U,& cmd,0);
  
#line 2620 
  if (status != 0 && status != -38) {
    
#line 2621 
    netdev_err((struct net_device const *)dev,"Couldn\'t set TSO mode\n");
    
#line 2622 
    goto abort_with_rings;
  }
  else ;
  
#line 2625 
  mgp->link_state = 4294967295U;
  
#line 2626 
  mgp->rdma_tags_available = 15U;
  
#line 2628 
  status = myri10ge_send_cmd(mgp,14U,& cmd,0);
  
#line 2629 
  if (status != 0) {
    
#line 2630 
    netdev_err((struct net_device const *)dev,"Couldn\'t bring up link\n");
    
#line 2631 
    goto abort_with_rings;
  }
  else ;
  
#line 2634 
  mgp->running = 3;
  
#line 2635 
  mgp->watchdog_timer.expires = (unsigned long)(myri10ge_watchdog_timeout * 250) + jiffies;
  
#line 2636 
  add_timer(& mgp->watchdog_timer);
  
#line 2637 
  netif_tx_wake_all_queues(dev);
  
#line 2639 
  __retres = 0;
  
#line 2639 
  goto return_label;
  abort_with_rings: 
#line 2641 
  ;
  
#line 2642 
  goto ldv_57331;
  ldv_57330: 
#line 2643 
  ;
  
#line 2643 
  slice -= 1;
  
#line 2644 
  napi_disable(& (mgp->ss + slice)->napi);
  ldv_57331: 
#line 2645 
  ;
  
#line 2642 
  if (slice != 0) 
#line 2644 
                  goto ldv_57330; else 
#line 2647 
                                       goto ldv_57332;
  ldv_57332: 
#line 2648 
  ;
  
#line 2646 
  i = 0;
  
#line 2646 
  goto ldv_57334;
  ldv_57333: 
#line 2647 
  ;
  
#line 2647 
  myri10ge_free_rings(mgp->ss + i);
  
#line 2646 
  i += 1;
  ldv_57334: 
#line 2647 
  ;
  
#line 2646 
  if (mgp->num_slices > i) 
#line 2648 
                           goto ldv_57333; else 
#line 2651 
                                                goto ldv_57335;
  ldv_57335: 
#line 2652 
  ;
  
#line 2649 
  myri10ge_free_irq(mgp);
  abort_with_nothing: 
#line 2651 
  ;
  
#line 2652 
  mgp->running = 0;
  
#line 2653 
  __retres = -12;
  return_label: 
#line 2653 
                return __retres;
}


#line 2656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_close(struct net_device *dev)
{
  int __retres;
  struct myri10ge_cmd cmd;
  int status;
  int old_down_cnt;
  int i;
  int tmp_2;
  bool tmp_1;
  
#line 2658 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 2663 
  if (mgp->running != 3) {
    
#line 2664 
    __retres = 0;
    
#line 2664 
    goto return_label;
  }
  else ;
  
#line 2666 
  if ((mgp->ss)->tx.req_bytes == (char *)0) {
    
#line 2667 
    __retres = 0;
    
#line 2667 
    goto return_label;
  }
  else ;
  
#line 2669 
  ldv_del_timer_sync_87(& mgp->watchdog_timer);
  
#line 2670 
  mgp->running = 1;
  
#line 2671 
  local_bh_disable();
  
#line 2672 
  i = 0;
  
#line 2672 
  goto ldv_57352;
  ldv_57351: 
#line 2673 
  ;
  
#line 2673 
  napi_disable(& (mgp->ss + i)->napi);
  
#line 2678 
  goto ldv_57349;
  ldv_57348: 
#line 2679 
  ;
  
#line 2679 
  printk("\001",i);
  
#line 2680 
  if (1) 
#line 2680 
         __const_udelay(4295000UL);
  else {
    
#line 2680 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 2680 
      goto ldv_57346;
      ldv_57345: 
#line 2681 
      ;
      
#line 2680 
      __const_udelay(4295000UL);
      ldv_57346: 
#line 2682 
      ;
      
#line 2680 
      tmp_0 = __ms;
      
#line 2680 
      __ms -= 1UL;
      
#line 2680 
      ;
      
#line 2680 
      if (tmp_0 != 0UL) 
#line 2682 
                        goto ldv_57345; else 
#line 2685 
                                             goto ldv_57347;
      ldv_57347: 
#line 2686 
      ;
    }
  }
  ldv_57349: 
#line 2689 
  ;
  
#line 2678 
  tmp_1 = myri10ge_ss_lock_napi(mgp->ss + i);
  
#line 2678 
  if (tmp_1) 
#line 2678 
             tmp_2 = 0; else 
#line 2678 
                             tmp_2 = 1;
  
#line 2678 
  if (tmp_2) 
#line 2680 
             goto ldv_57348; else 
#line 2683 
                                  goto ldv_57350;
  ldv_57350: 
#line 2684 
  ;
  
#line 2672 
  i += 1;
  ldv_57352: 
#line 2673 
  ;
  
#line 2672 
  if (mgp->num_slices > i) 
#line 2674 
                           goto ldv_57351; else 
#line 2677 
                                                goto ldv_57353;
  ldv_57353: 
#line 2678 
  ;
  
#line 2683 
  local_bh_enable();
  
#line 2684 
  netif_carrier_off(dev);
  
#line 2686 
  netif_tx_stop_all_queues(dev);
  
#line 2687 
  if (mgp->rebooted == 0) {
    
#line 2688 
    old_down_cnt = mgp->down_cnt;
    
#line 2689 
    ldv_inline_asm();
    
#line 2690 
    status = myri10ge_send_cmd(mgp,15U,& cmd,0);
    
#line 2692 
    if (status != 0) 
#line 2693 
                     netdev_err((struct net_device const *)dev,"Couldn\'t bring down link\n"); else ;
    {
      
#line 2695 
      long __ret = 250L;
      
#line 2695 
      __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c",2696,0);
      {
        int tmp_6;
        {
          
#line 2695 
          bool __cond_0 = (_Bool)(mgp->down_cnt != old_down_cnt);
          
#line 2695 
          if ((int)__cond_0 != 0 && __ret == 0L) 
#line 2695 
                                                 __ret = 1L; else ;
          
#line 2695 
          tmp_6 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
        }
        
#line 2695 
        if (tmp_6 == 0) {
          long tmp_5;
          {
            wait_queue_t __wait;
            
#line 2695 
            long __ret_0 = 250L;
            
#line 2695 
            INIT_LIST_HEAD(& __wait.task_list);
            
#line 2695 
            __wait.flags = 0U;
            ldv_57364: 
#line 2698 
            ;
            {
              int tmp_4;
              
#line 2695 
              long __int = prepare_to_wait_event(& mgp->down_wq,& __wait,2);
              {
                
#line 2695 
                bool __cond = (_Bool)(mgp->down_cnt != old_down_cnt);
                
#line 2695 
                if ((int)__cond != 0 && __ret_0 == 0L) 
#line 2695 
                                                       __ret_0 = 1L; else ;
                
#line 2695 
                tmp_4 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
              }
              
#line 2695 
              if (tmp_4 != 0) 
#line 2695 
                              goto ldv_57363; else ;
              
#line 2695 
              __ret_0 = schedule_timeout(__ret_0);
            }
            
#line 2695 
            goto ldv_57364;
            ldv_57363: 
#line 2696 
            ;
            
#line 2695 
            finish_wait(& mgp->down_wq,& __wait);
            __out_0: 
#line 2695 
            ;
            
#line 2695 
            tmp_5 = __ret_0;
          }
          
#line 2695 
          __ret = tmp_5;
        }
        else ;
      }
      
#line 2695 
      long tmp_7 = __ret;
    }
    
#line 2697 
    if (mgp->down_cnt == old_down_cnt) 
#line 2698 
                                       netdev_err((struct net_device const *)dev,"never got down irq\n"); else ;
  }
  else ;
  
#line 2700 
  netif_tx_disable(dev);
  
#line 2701 
  myri10ge_free_irq(mgp);
  
#line 2702 
  i = 0;
  
#line 2702 
  goto ldv_57368;
  ldv_57367: 
#line 2703 
  ;
  
#line 2703 
  myri10ge_free_rings(mgp->ss + i);
  
#line 2702 
  i += 1;
  ldv_57368: 
#line 2703 
  ;
  
#line 2702 
  if (mgp->num_slices > i) 
#line 2704 
                           goto ldv_57367; else 
#line 2707 
                                                goto ldv_57369;
  ldv_57369: 
#line 2708 
  ;
  
#line 2705 
  mgp->running = 0;
  
#line 2706 
  __retres = 0;
  return_label: 
#line 2706 
                return __retres;
}


#line 2713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_submit_req_backwards(struct myri10ge_tx_buf *tx, struct mcp_kreq_ether_send *src, int cnt)
{
  int idx;
  int starting_slot;
  
#line 2717 
  starting_slot = tx->req;
  
#line 2718 
  goto ldv_57378;
  ldv_57377: 
#line 2719 
  ;
  
#line 2719 
  cnt -= 1;
  
#line 2720 
  idx = (starting_slot + cnt) & tx->mask;
  
#line 2721 
  __iowrite64_copy((void *)(tx->lanai + idx),(void const *)(src + cnt),2UL);
  
#line 2722 
  ldv_inline_asm();
  ldv_57378: 
#line 2723 
  ;
  
#line 2718 
  if (cnt > 1) 
#line 2720 
               goto ldv_57377; else 
#line 2723 
                                    goto ldv_57379;
  ldv_57379: 
#line 2724 
  ;
  
#line 2725 
  return;
}


#line 2734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
__inline static void myri10ge_submit_req(struct myri10ge_tx_buf *tx, struct mcp_kreq_ether_send *src, int cnt)
{
  int idx;
  int i;
  struct mcp_kreq_ether_send *dstp;
  struct mcp_kreq_ether_send *dst;
  struct mcp_kreq_ether_send *srcp;
  u8 last_flags;
  
#line 2742 
  idx = tx->req & tx->mask;
  
#line 2744 
  last_flags = src->flags;
  
#line 2745 
  src->flags = (unsigned char)0U;
  
#line 2746 
  ldv_inline_asm();
  
#line 2747 
  dstp = tx->lanai + idx;
  
#line 2747 
  dst = dstp;
  
#line 2748 
  srcp = src;
  
#line 2750 
  if (idx + cnt < tx->mask) {
    
#line 2751 
    i = 0;
    
#line 2751 
    goto ldv_57392;
    ldv_57391: 
#line 2752 
    ;
    
#line 2752 
    __iowrite64_copy((void *)dstp,(void const *)srcp,4UL);
    
#line 2753 
    ldv_inline_asm();
    
#line 2754 
    srcp += 2U;
    
#line 2755 
    dstp += 2U;
    
#line 2751 
    i += 2;
    ldv_57392: 
#line 2752 
    ;
    
#line 2751 
    if (cnt + -1 > i) 
#line 2753 
                      goto ldv_57391; else 
#line 2756 
                                           goto ldv_57393;
    ldv_57393: 
#line 2757 
    ;
  }
  else {
    
#line 2760 
    myri10ge_submit_req_backwards(tx,src,cnt);
    
#line 2761 
    i = 0;
  }
  
#line 2763 
  if (i < cnt) {
    
#line 2765 
    __iowrite64_copy((void *)dstp,(void const *)srcp,2UL);
    
#line 2766 
    ldv_inline_asm();
  }
  else ;
  
#line 2770 
  src->flags = last_flags;
  
#line 2771 
  put_be32(*((__be32 *)src + 3U),(__be32 *)dst + 3U);
  
#line 2772 
  tx->req += cnt;
  
#line 2773 
  ldv_inline_asm();
  
#line 2774 
  return;
}


#line 2776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_unmap_tx_dma(struct myri10ge_priv *mgp, struct myri10ge_tx_buf *tx, int idx)
{
  unsigned int len;
  int last_idx;
  
#line 2783 
  last_idx = (idx + 1) & tx->mask;
  
#line 2784 
  idx = tx->req & tx->mask;
  ldv_57401: 
#line 2785 
  ;
  
#line 2786 
  len = (tx->info + idx)->len;
  
#line 2787 
  if (len != 0U) {
    
#line 2788 
    if ((tx->info + idx)->skb != (struct sk_buff *)0) 
#line 2789 
                                                      pci_unmap_single(mgp->pdev,(tx->info + idx)->bus,(unsigned long)len,1); else 
                                                                    
#line 2794 
                                                                    pci_unmap_page(mgp->pdev,(tx->info + idx)->bus,(unsigned long)len,1);
    
#line 2798 
    (tx->info + idx)->len = 0U;
    
#line 2799 
    (tx->info + idx)->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 2801 
  idx = (idx + 1) & tx->mask;
  
#line 2802 
  if (idx != last_idx) 
#line 2804 
                       goto ldv_57401; else 
#line 2807 
                                            goto ldv_57402;
  ldv_57402: 
#line 2808 
  ;
  
#line 2809 
  return;
}


#line 2815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static netdev_tx_t myri10ge_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct myri10ge_slice_state *ss;
  struct mcp_kreq_ether_send *req;
  struct myri10ge_tx_buf *tx;
  struct skb_frag_struct *frag;
  struct netdev_queue *netdev_queue;
  dma_addr_t bus;
  u32 low;
  __be32 high_swapped;
  unsigned int len;
  int idx;
  int avail;
  int frag_cnt;
  int frag_idx;
  int count;
  int mss;
  int max_segments;
  u16 pseudo_hdr_offset;
  u16 cksum_offset;
  u16 queue;
  int cum_len;
  int seglen;
  int boundary;
  int rdma_count;
  u8 flags;
  u8 odd_flag;
  bool tmp_1;
  int tmp_10;
  unsigned char *tmp_11;
  unsigned char *tmp_18;
  int tmp_19;
  bool tmp_20;
  int tmp_21;
  
#line 2818 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 2833 
  queue = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 2834 
  ss = mgp->ss + (int)queue;
  
#line 2835 
  netdev_queue = netdev_get_tx_queue((struct net_device const *)mgp->dev,(unsigned int)queue);
  
#line 2836 
  tx = & ss->tx;
  again: 
#line 2838 
  ;
  
#line 2839 
  req = tx->req_list;
  
#line 2840 
  avail = (tx->mask + -1) - (tx->req - tx->done);
  
#line 2842 
  mss = 0;
  
#line 2843 
  max_segments = 12;
  
#line 2845 
  tmp_1 = skb_is_gso((struct sk_buff const *)skb);
  
#line 2845 
  if ((int)tmp_1 != 0) {
    unsigned char *tmp_0;
    
#line 2846 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2846 
    mss = (int)((struct skb_shared_info *)tmp_0)->gso_size;
    
#line 2847 
    max_segments = 64;
  }
  else ;
  
#line 2850 
  if ((long)(avail < max_segments) != 0L) {
    
#line 2852 
    tx->stop_queue += 1;
    
#line 2853 
    netif_tx_stop_queue(netdev_queue);
    
#line 2854 
    __retres = NETDEV_TX_BUSY;
    
#line 2854 
    goto return_label;
  }
  else ;
  
#line 2858 
  cksum_offset = (unsigned short)0U;
  
#line 2859 
  pseudo_hdr_offset = (unsigned short)0U;
  
#line 2860 
  odd_flag = (unsigned char)0U;
  
#line 2861 
  flags = (unsigned char)18U;
  
#line 2862 
  if ((long)((unsigned int)*((unsigned char *)skb + 145UL) == 6U) != 0L) {
    int tmp_2;
    
#line 2863 
    tmp_2 = skb_checksum_start_offset((struct sk_buff const *)skb);
    
#line 2863 
    cksum_offset = (unsigned short)tmp_2;
    
#line 2864 
    pseudo_hdr_offset = (unsigned short)((int)skb->__anonCompField_sk_buff_69.__anonCompField___anonunion_220_68.csum_offset + (int)cksum_offset);
    
#line 2867 
    if ((long)(mss == 0) != 0L && (long)(((unsigned int)cksum_offset > 255U || (unsigned int)pseudo_hdr_offset > 127U) != 0) != 0L) {
      int tmp_3;
      
#line 2869 
      tmp_3 = skb_checksum_help(skb);
      
#line 2869 
      if (tmp_3 != 0) 
#line 2870 
                      goto drop; else ;
      
#line 2871 
      cksum_offset = (unsigned short)0U;
      
#line 2872 
      pseudo_hdr_offset = (unsigned short)0U;
    }
    else {
      
#line 2874 
      odd_flag = (unsigned char)4U;
      
#line 2875 
      flags = (unsigned char)((unsigned int)flags | 8U);
    }
  }
  else ;
  
#line 2879 
  cum_len = 0;
  
#line 2881 
  if (mss != 0) {
    int tmp_4;
    unsigned int tmp_5;
    bool tmp_8;
    
#line 2883 
    flags = (unsigned char)3U;
    
#line 2889 
    tmp_4 = skb_transport_offset((struct sk_buff const *)skb);
    
#line 2889 
    tmp_5 = tcp_hdrlen((struct sk_buff const *)skb);
    
#line 2889 
    cum_len = (int)(- ((unsigned int)tmp_4 + tmp_5));
    
#line 2894 
    tmp_8 = skb_is_gso_v6((struct sk_buff const *)skb);
    
#line 2894 
    if ((int)tmp_8 != 0) {
      unsigned int tmp_6;
      
#line 2895 
      tmp_6 = tcp_hdrlen((struct sk_buff const *)skb);
      
#line 2895 
      cksum_offset = (unsigned short)tmp_6;
      
#line 2897 
      if ((long)((unsigned int)(- cum_len) > mgp->max_tso6) != 0L) {
        netdev_tx_t tmp_7;
        
#line 2898 
        tmp_7 = myri10ge_sw_tso(skb,dev);
        
#line 2898 
        __retres = tmp_7;
        
#line 2898 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 2903 
    pseudo_hdr_offset = (unsigned short)mss;
  }
  else 
    
#line 2906 
    if (skb->len <= 1520U) {
      int tmp_9;
      
#line 2907 
      flags = (unsigned char)((unsigned int)flags | 1U);
      
#line 2910 
      tmp_9 = eth_skb_pad(skb);
      
#line 2910 
      if (tmp_9 != 0) {
        
#line 2913 
        ss->stats.tx_dropped += 1UL;
        
#line 2914 
        __retres = NETDEV_TX_OK;
        
#line 2914 
        goto return_label;
      }
      else ;
    }
    else ;
  
#line 2919 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 2920 
  bus = pci_map_single(mgp->pdev,(void *)skb->data,(unsigned long)len,1);
  
#line 2921 
  tmp_10 = pci_dma_mapping_error(mgp->pdev,bus);
  
#line 2921 
  if ((long)(tmp_10 != 0) != 0L) 
#line 2922 
                                 goto drop; else ;
  
#line 2924 
  idx = tx->req & tx->mask;
  
#line 2925 
  (tx->info + idx)->skb = skb;
  
#line 2926 
  (tx->info + idx)->bus = bus;
  
#line 2927 
  (tx->info + idx)->len = len;
  
#line 2929 
  tmp_11 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2929 
  frag_cnt = (int)((struct skb_shared_info *)tmp_11)->nr_frags;
  
#line 2930 
  frag_idx = 0;
  
#line 2931 
  count = 0;
  
#line 2932 
  rdma_count = 0;
  ldv_57445: 
#line 2933 
  ;
  
#line 2955 
  low = (unsigned int)bus;
  
#line 2956 
  if (0 != 0) 
#line 2956 
              high_swapped = ((((unsigned int)(bus >> 32) << 24) | (((unsigned int)(bus >> 32) << 8) & 16711680U)) | (((unsigned int)(bus >> 32) >> 8) & 65280U)) | ((unsigned int)(bus >> 32) >> 24); else 
                                                                    
#line 2956 
                                                                    high_swapped = __fswab32((unsigned int)(bus >> 32));
  
#line 2957 
  goto ldv_57442;
  ldv_57441: 
#line 2958 
  ;
  {
    u8 flags_next;
    int cum_len_next;
    
#line 2961 
    if ((long)(count == max_segments) != 0L) 
#line 2962 
                                             goto abort_linearize; else ;
    
#line 2964 
    boundary = (int)(((unsigned int)mgp->tx_boundary + low) & (unsigned int)(- mgp->tx_boundary));
    
#line 2966 
    seglen = (int)((unsigned int)boundary - low);
    
#line 2967 
    if ((unsigned int)seglen > len) 
#line 2968 
                                    seglen = (int)len; else ;
    
#line 2969 
    flags_next = (unsigned char)((unsigned int)flags & 253U);
    
#line 2970 
    cum_len_next = cum_len + seglen;
    
#line 2971 
    if (mss != 0) {
      
#line 2972 
      (req + - rdma_count)->rdma_count = (unsigned char)((unsigned int)((unsigned char)rdma_count) + 1U);
      
#line 2974 
      if ((long)(cum_len >= 0) != 0L) {
        int next_is_first;
        int chop;
        
#line 2977 
        chop = cum_len_next > mss;
        
#line 2978 
        cum_len_next %= mss;
        
#line 2979 
        next_is_first = cum_len_next == 0;
        
#line 2980 
        flags = (unsigned char)((unsigned int)chop * 16U | (unsigned int)flags);
        
#line 2981 
        flags_next = (unsigned char)((unsigned int)next_is_first * 2U | (unsigned int)flags_next);
        
#line 2983 
        rdma_count = - (chop | next_is_first) | rdma_count;
        
#line 2984 
        rdma_count = (~ next_is_first & chop) + rdma_count;
      }
      else 
        
#line 2985 
        if ((long)(cum_len_next >= 0) != 0L) {
          int small;
          
#line 2988 
          rdma_count = -1;
          
#line 2989 
          cum_len_next = 0;
          
#line 2990 
          seglen = - cum_len;
          
#line 2991 
          small = mss <= 1520;
          
#line 2992 
          flags_next = (unsigned char)(small | 34);
        }
        else ;
    }
    else ;
    
#line 2997 
    req->addr_high = high_swapped;
    
#line 2998 
    if (0 != 0) 
#line 2998 
                req->addr_low = (((low << 24) | ((low << 8) & 16711680U)) | ((low >> 8) & 65280U)) | (low >> 24); else 
                                                                    
#line 2998 
                                                                    req->addr_low = __fswab32(low);
    
#line 2999 
    if (0 != 0) 
#line 2999 
                req->pseudo_hdr_offset = (unsigned short)(((int)pseudo_hdr_offset << 8) | ((int)pseudo_hdr_offset >> 8)); else 
                                                                    
#line 2999 
                                                                    req->pseudo_hdr_offset = __fswab16((unsigned short)((int)pseudo_hdr_offset));
    
#line 3000 
    req->pad = (unsigned char)0U;
    
#line 3001 
    req->rdma_count = (unsigned char)1U;
    
#line 3002 
    if (0 != 0) 
#line 3002 
                req->length = (unsigned short)(((int)((unsigned short)seglen) << 8) | ((int)((unsigned short)seglen) >> 8)); else 
                                                                    
#line 3002 
                                                                    req->length = __fswab16((unsigned short)((int)((unsigned short)seglen)));
    
#line 3003 
    req->cksum_offset = (unsigned char)cksum_offset;
    
#line 3004 
    req->flags = (unsigned char)(((unsigned int)cum_len & 1U) * (unsigned int)odd_flag | (unsigned int)flags);
    
#line 3006 
    low += (unsigned int)seglen;
    
#line 3007 
    len -= (unsigned int)seglen;
    
#line 3008 
    cum_len = cum_len_next;
    
#line 3009 
    flags = flags_next;
    
#line 3010 
    req += 1;
    
#line 3011 
    count += 1;
    
#line 3012 
    rdma_count += 1;
    
#line 3013 
    if ((unsigned int)cksum_offset != 0U) {
      
#line 3013 
      if (mss == 0) 
#line 3013 
                    goto _LOR;
      else {
        int tmp_17;
        bool tmp_16;
        
#line 3013 
        tmp_16 = skb_is_gso_v6((struct sk_buff const *)skb);
        
#line 3013 
        if (tmp_16) 
#line 3013 
                    tmp_17 = 0; else 
#line 3013 
                                     tmp_17 = 1;
        
#line 3013 
        if (tmp_17) 
          _LOR: 
#line 3014 
                if ((long)((int)cksum_offset > seglen) != 0L) 
#line 3015 
                                                              cksum_offset = (unsigned short)((int)cksum_offset - (int)((unsigned short)seglen)); else 
                                                                    
#line 3017 
                                                                    cksum_offset = (unsigned short)0U;
        else ;
      }
    }
    else ;
  }
  ldv_57442: 
#line 3019 
  ;
  
#line 2957 
  if (len != 0U) 
#line 2959 
                 goto ldv_57441; else 
#line 2962 
                                      goto ldv_57443;
  ldv_57443: 
#line 2963 
  ;
  
#line 3020 
  if (frag_idx == frag_cnt) 
#line 3021 
                            goto ldv_57444; else ;
  
#line 3024 
  tmp_18 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 3024 
  frag = & ((struct skb_shared_info *)tmp_18)->frags[frag_idx];
  
#line 3025 
  frag_idx += 1;
  
#line 3026 
  len = skb_frag_size((skb_frag_t const *)frag);
  
#line 3027 
  bus = skb_frag_dma_map(& (mgp->pdev)->dev,(skb_frag_t const *)frag,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 3029 
  tmp_19 = pci_dma_mapping_error(mgp->pdev,bus);
  
#line 3029 
  if ((long)(tmp_19 != 0) != 0L) {
    
#line 3030 
    myri10ge_unmap_tx_dma(mgp,tx,idx);
    
#line 3031 
    goto drop;
  }
  else ;
  
#line 3033 
  idx = (tx->req + count) & tx->mask;
  
#line 3034 
  (tx->info + idx)->bus = bus;
  
#line 3035 
  (tx->info + idx)->len = len;
  
#line 2955 
  goto ldv_57445;
  ldv_57444: 
#line 2956 
  ;
  
#line 3038 
  (req + - rdma_count)->rdma_count = (unsigned char)rdma_count;
  
#line 3039 
  if (mss != 0) {
    ldv_57446: 
#line 3041 
    ;
    
#line 3041 
    req -= 1;
    
#line 3042 
    req->flags = (unsigned char)((unsigned int)req->flags | 8U);
    
#line 3044 
    if (((int)req->flags & 18) == 0) 
#line 3045 
                                     goto ldv_57446; else 
#line 3048 
                                                          goto ldv_57447;
    ldv_57447: 
#line 3049 
    ;
  }
  else ;
  
#line 3045 
  idx = ((count + -1) + tx->req) & tx->mask;
  
#line 3046 
  (tx->info + idx)->last = 1;
  
#line 3047 
  myri10ge_submit_req(tx,tx->req_list,count);
  
#line 3050 
  if ((mgp->dev)->real_num_tx_queues > 1U && tx->queue_active == 0) {
    
#line 3051 
    tx->queue_active = 1;
    
#line 3052 
    put_be32(16777216U,tx->send_go);
    
#line 3053 
    ldv_inline_asm();
    
#line 3054 
    ldv_inline_asm();
  }
  else ;
  
#line 3056 
  tx->pkt_start += 1;
  
#line 3057 
  if (avail - count <= 11) {
    
#line 3058 
    tx->stop_queue += 1;
    
#line 3059 
    netif_tx_stop_queue(netdev_queue);
  }
  else ;
  
#line 3061 
  __retres = NETDEV_TX_OK;
  
#line 3061 
  goto return_label;
  abort_linearize: 
#line 3063 
  ;
  
#line 3064 
  myri10ge_unmap_tx_dma(mgp,tx,idx);
  
#line 3066 
  tmp_20 = skb_is_gso((struct sk_buff const *)skb);
  
#line 3066 
  if ((int)tmp_20 != 0) {
    
#line 3067 
    netdev_err((struct net_device const *)mgp->dev,"TSO but wanted to linearize?!?!?\n");
    
#line 3068 
    goto drop;
  }
  else ;
  
#line 3071 
  tmp_21 = skb_linearize(skb);
  
#line 3071 
  if (tmp_21 != 0) 
#line 3072 
                   goto drop; else ;
  
#line 3074 
  tx->linearized += 1;
  
#line 3075 
  goto again;
  drop: 
#line 3077 
  ;
  
#line 3078 
  dev_kfree_skb_any(skb);
  
#line 3079 
  ss->stats.tx_dropped += 1UL;
  
#line 3080 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 3080 
                return __retres;
}


#line 3084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static netdev_tx_t myri10ge_sw_tso(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct sk_buff *segs;
  struct sk_buff *curr;
  struct myri10ge_slice_state *ss;
  netdev_tx_t status;
  bool tmp_0;
  u16 tmp_1;
  
#line 3088 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 3092 
  segs = skb_gso_segment(skb,dev->features & 18446744073708503039ULL);
  
#line 3093 
  tmp_0 = IS_ERR((void const *)segs);
  
#line 3093 
  if ((int)tmp_0 != 0) 
#line 3094 
                       goto drop; else ;
  
#line 3096 
  goto ldv_57459;
  ldv_57458: 
#line 3097 
  ;
  
#line 3097 
  curr = segs;
  
#line 3098 
  segs = segs->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  
#line 3099 
  curr->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = (struct sk_buff *)0;
  
#line 3100 
  status = myri10ge_xmit(curr,dev);
  
#line 3101 
  if (status != (unsigned int)NETDEV_TX_OK) {
    
#line 3102 
    dev_kfree_skb_any(curr);
    
#line 3103 
    if (segs != (struct sk_buff *)0) {
      
#line 3104 
      curr = segs;
      
#line 3105 
      segs = segs->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
      
#line 3106 
      curr->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = (struct sk_buff *)0;
      
#line 3107 
      dev_kfree_skb_any(segs);
    }
    else ;
    
#line 3109 
    goto drop;
  }
  else ;
  ldv_57459: 
#line 3111 
  ;
  
#line 3096 
  if (segs != (struct sk_buff *)0) 
#line 3098 
                                   goto ldv_57458; else 
#line 3101 
                                                        goto ldv_57460;
  ldv_57460: 
#line 3102 
  ;
  
#line 3112 
  dev_kfree_skb_any(skb);
  
#line 3113 
  __retres = NETDEV_TX_OK;
  
#line 3113 
  goto return_label;
  drop: 
#line 3115 
  ;
  
#line 3116 
  tmp_1 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 3116 
  ss = mgp->ss + (int)tmp_1;
  
#line 3117 
  dev_kfree_skb_any(skb);
  
#line 3118 
  ss->stats.tx_dropped += 1UL;
  
#line 3119 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 3119 
                return __retres;
}


#line 3122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct rtnl_link_stats64 *myri10ge_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
{
  struct myri10ge_slice_netstats const *slice_stats;
  int i;
  
#line 3125 
  struct myri10ge_priv const *mgp = netdev_priv((struct net_device const *)dev);
  
#line 3129 
  i = 0;
  
#line 3129 
  goto ldv_57469;
  ldv_57468: 
#line 3130 
  ;
  
#line 3130 
  slice_stats = (struct myri10ge_slice_netstats const *)(& (mgp->ss + i)->stats);
  
#line 3131 
  stats->rx_packets += (unsigned long long)slice_stats->rx_packets;
  
#line 3132 
  stats->tx_packets += (unsigned long long)slice_stats->tx_packets;
  
#line 3133 
  stats->rx_bytes += (unsigned long long)slice_stats->rx_bytes;
  
#line 3134 
  stats->tx_bytes += (unsigned long long)slice_stats->tx_bytes;
  
#line 3135 
  stats->rx_dropped += (unsigned long long)slice_stats->rx_dropped;
  
#line 3136 
  stats->tx_dropped += (unsigned long long)slice_stats->tx_dropped;
  
#line 3129 
  i += 1;
  ldv_57469: 
#line 3130 
  ;
  
#line 3129 
  if (mgp->num_slices > i) 
#line 3131 
                           goto ldv_57468; else 
#line 3134 
                                                goto ldv_57470;
  ldv_57470: 
#line 3135 
  ;
  
#line 3138 
  return stats;
}


#line 3141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_set_multicast_list(struct net_device *dev)
{
  struct myri10ge_cmd cmd;
  struct netdev_hw_addr *ha;
  int err;
  struct netdev_hw_addr *tmp_0;
  struct netdev_hw_addr *tmp_3;
  
#line 3143 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 3146 
  __be32 data[2U] = {0U, 0U};
  
#line 3151 
  myri10ge_change_promisc(mgp,(int)dev->flags & 256,1);
  
#line 3154 
  if (mgp->fw_multicast_support == 0) 
#line 3155 
                                      goto return_label; else ;
  
#line 3159 
  err = myri10ge_send_cmd(mgp,26U,& cmd,1);
  
#line 3160 
  if (err != 0) {
    
#line 3161 
    netdev_err((struct net_device const *)dev,"Failed MXGEFW_ENABLE_ALLMULTI, error status: %d\n",err);
    
#line 3163 
    goto abort;
  }
  else ;
  
#line 3166 
  if ((dev->flags & 512U) != 0U || mgp->adopted_rx_filter_bug != 0) 
#line 3168 
                                                                    goto return_label; else ;
  
#line 3173 
  err = myri10ge_send_cmd(mgp,30U,& cmd,1);
  
#line 3175 
  if (err != 0) {
    
#line 3176 
    netdev_err((struct net_device const *)dev,"Failed MXGEFW_LEAVE_ALL_MULTICAST_GROUPS, error status: %d\n",err);
    
#line 3178 
    goto abort;
  }
  else ;
  {
    
#line 3182 
    struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
    
#line 3182 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 3182 
  ha = tmp_0;
  
#line 3182 
  goto ldv_57485;
  ldv_57484: 
#line 3183 
  ;
  
#line 3183 
  memcpy((void *)(& data),(void const *)(& ha->addr),6UL);
  
#line 3184 
  if (0 != 0) 
#line 3184 
              cmd.data0 = (((data[0] << 24) | ((data[0] << 8) & 16711680U)) | ((data[0] >> 8) & 65280U)) | (data[0] >> 24); else 
                                                                    
#line 3184 
                                                                    cmd.data0 = __fswab32(data[0]);
  
#line 3185 
  if (0 != 0) 
#line 3185 
              cmd.data1 = (((data[1] << 24) | ((data[1] << 8) & 16711680U)) | ((data[1] >> 8) & 65280U)) | (data[1] >> 24); else 
                                                                    
#line 3185 
                                                                    cmd.data1 = __fswab32(data[1]);
  
#line 3186 
  err = myri10ge_send_cmd(mgp,28U,& cmd,1);
  
#line 3189 
  if (err != 0) {
    
#line 3190 
    netdev_err((struct net_device const *)dev,"Failed MXGEFW_JOIN_MULTICAST_GROUP, error status:%d %pM\n",err,(unsigned char *)(& ha->addr));
    
#line 3192 
    goto abort;
  }
  else ;
  {
    
#line 3182 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 3182 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 3182 
  ha = tmp_3;
  ldv_57485: 
#line 3184 
  ;
  
#line 3182 
  if (& ha->list != & dev->mc.list) 
#line 3184 
                                    goto ldv_57484; else 
#line 3187 
                                                         goto ldv_57486;
  ldv_57486: 
#line 3188 
  ;
  
#line 3196 
  err = myri10ge_send_cmd(mgp,27U,& cmd,1);
  
#line 3197 
  if (err != 0) {
    
#line 3198 
    netdev_err((struct net_device const *)dev,"Failed MXGEFW_DISABLE_ALLMULTI, error status: %d\n",err);
    
#line 3200 
    goto abort;
  }
  else ;
  
#line 3203 
  goto return_label;
  abort: 
#line 3205 
  ;
  return_label: 
#line 3206 
                return;
}


#line 3209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_set_mac_address(struct net_device *dev, void *addr)
{
  int __retres;
  int status;
  int tmp_1;
  bool tmp_0;
  
#line 3211 
  struct sockaddr *sa = (struct sockaddr *)addr;
  
#line 3212 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 3215 
  tmp_0 = is_valid_ether_addr((u8 const *)(& sa->sa_data));
  
#line 3215 
  if (tmp_0) 
#line 3215 
             tmp_1 = 0; else 
#line 3215 
                             tmp_1 = 1;
  
#line 3215 
  if (tmp_1) {
    
#line 3216 
    __retres = -99;
    
#line 3216 
    goto return_label;
  }
  else ;
  
#line 3218 
  status = myri10ge_update_mac_address(mgp,(u8 *)(& sa->sa_data));
  
#line 3219 
  if (status != 0) {
    
#line 3220 
    netdev_err((struct net_device const *)dev,"changing mac address failed with %d\n",status);
    
#line 3222 
    __retres = status;
    
#line 3222 
    goto return_label;
  }
  else ;
  
#line 3226 
  memcpy((void *)dev->dev_addr,(void const *)(& sa->sa_data),6UL);
  
#line 3227 
  __retres = 0;
  return_label: 
#line 3227 
                return __retres;
}


#line 3230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  
#line 3232 
  struct myri10ge_priv *mgp = netdev_priv((struct net_device const *)dev);
  
#line 3233 
  int error = 0;
  
#line 3235 
  if (new_mtu <= 67 || new_mtu + 14 > 9014) {
    
#line 3236 
    netdev_err((struct net_device const *)dev,"new mtu (%d) is not valid\n",new_mtu);
    
#line 3237 
    __retres = -22;
    
#line 3237 
    goto return_label;
  }
  else ;
  
#line 3239 
  netdev_info((struct net_device const *)dev,"changing mtu from %d to %d\n",dev->mtu,new_mtu);
  
#line 3240 
  if (mgp->running != 0) {
    
#line 3243 
    myri10ge_close(dev);
    
#line 3244 
    dev->mtu = (unsigned int)new_mtu;
    
#line 3245 
    myri10ge_open(dev);
  }
  else 
#line 3247 
       dev->mtu = (unsigned int)new_mtu;
  
#line 3249 
  __retres = error;
  return_label: 
#line 3249 
                return __retres;
}


#line 3258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_enable_ecrc(struct myri10ge_priv *mgp)
{
  int cap;
  unsigned int err_cap;
  int ret;
  int tmp_3;
  char const *tmp_5;
  
#line 3260 
  struct pci_dev *bridge = ((mgp->pdev)->bus)->self;
  
#line 3261 
  struct device *dev = & (mgp->pdev)->dev;
  
#line 3266 
  if (myri10ge_ecrc_enable == 0 || bridge == (struct pci_dev *)0) 
#line 3267 
                                                                  goto return_label; else ;
  
#line 3270 
  tmp_3 = pci_pcie_type((struct pci_dev const *)bridge);
  
#line 3270 
  if (tmp_3 != 4) 
    
#line 3271 
    if (myri10ge_ecrc_enable > 1) {
      struct pci_dev *prev_bridge;
      int tmp;
      char const *tmp_0;
      char const *tmp_1;
      
#line 3272 
      struct pci_dev *old_bridge = bridge;
      ldv_57510: 
#line 3273 
      ;
      
#line 3277 
      prev_bridge = bridge;
      
#line 3278 
      bridge = (bridge->bus)->self;
      
#line 3279 
      if (bridge == (struct pci_dev *)0 || prev_bridge == bridge) {
        
#line 3280 
        dev_err((struct device const *)dev,"Failed to find root port");
        
#line 3283 
        goto return_label;
      }
      else ;
      
#line 3286 
      tmp = pci_pcie_type((struct pci_dev const *)bridge);
      
#line 3286 
      if (tmp != 4) 
#line 3287 
                    goto ldv_57510; else 
#line 3290 
                                         goto ldv_57511;
      ldv_57511: 
#line 3291 
      ;
      
#line 3288 
      tmp_0 = pci_name((struct pci_dev const *)bridge);
      
#line 3288 
      tmp_1 = pci_name((struct pci_dev const *)old_bridge);
      
#line 3288 
      ;
      
#line 3288 
      _dev_info((struct device const *)dev,"Forcing ECRC on non-root port %s",tmp_1,tmp_0);
    }
    else {
      char const *tmp_2;
      
#line 3294 
      tmp_2 = pci_name((struct pci_dev const *)bridge);
      
#line 3293 
      ;
      
#line 3293 
      dev_err((struct device const *)dev,"Not enabling ECRC on non-root port %s\n",tmp_2);
      
#line 3296 
      goto return_label;
    }
  else ;
  
#line 3300 
  cap = pci_find_ext_capability(bridge,1);
  
#line 3301 
  if (cap == 0) 
#line 3302 
                goto return_label; else ;
  
#line 3304 
  ret = pci_read_config_dword((struct pci_dev const *)bridge,cap + 24,& err_cap);
  
#line 3305 
  if (ret != 0) {
    char const *tmp_4;
    
#line 3306 
    tmp_4 = pci_name((struct pci_dev const *)bridge);
    
#line 3306 
    ;
    
#line 3306 
    dev_err((struct device const *)dev,"failed reading ext-conf-space of %s\n",tmp_4);
    
#line 3308 
    dev_err((struct device const *)dev,"\t pci=nommconf in use? ");
    
#line 3310 
    goto return_label;
  }
  else ;
  
#line 3312 
  if ((err_cap & 32U) == 0U) 
#line 3313 
                             goto return_label; else ;
  
#line 3315 
  err_cap |= 64U;
  
#line 3316 
  pci_write_config_dword((struct pci_dev const *)bridge,cap + 24,err_cap);
  
#line 3317 
  tmp_5 = pci_name((struct pci_dev const *)bridge);
  
#line 3317 
  ;
  
#line 3317 
  _dev_info((struct device const *)dev,"Enabled ECRC on upstream bridge %s\n",tmp_5);
  return_label: 
#line 3318 
                return;
}


#line 3339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_firmware_probe(struct myri10ge_priv *mgp)
{
  int status;
  
#line 3341 
  struct pci_dev *pdev = mgp->pdev;
  
#line 3342 
  struct device *dev = & pdev->dev;
  
#line 3345 
  mgp->tx_boundary = 4096;
  
#line 3350 
  status = pcie_get_readrq(pdev);
  
#line 3351 
  if (status < 0) {
    
#line 3352 
    dev_err((struct device const *)dev,"Couldn\'t read max read req size: %d\n",status);
    
#line 3353 
    goto abort;
  }
  else ;
  
#line 3355 
  if (status != 4096) {
    
#line 3356 
    dev_warn((struct device const *)dev,"Max Read Request size != 4096 (%d)\n",status);
    
#line 3357 
    mgp->tx_boundary = 2048;
  }
  else ;
  
#line 3363 
  set_fw_name(mgp,myri10ge_fw_aligned,(_Bool)0);
  
#line 3364 
  status = myri10ge_load_firmware(mgp,1);
  
#line 3365 
  if (status != 0) 
#line 3366 
                   goto abort; else ;
  
#line 3372 
  myri10ge_enable_ecrc(mgp);
  
#line 3379 
  status = myri10ge_dma_test(mgp,32);
  
#line 3380 
  if (status == 0) 
#line 3381 
                   goto return_label; else ;
  
#line 3383 
  if (status != -7) 
#line 3384 
                    dev_warn((struct device const *)dev,"DMA test failed: %d\n",status); else ;
  
#line 3385 
  if (status == -38) 
#line 3386 
                     dev_warn((struct device const *)dev,"Falling back to ethp! "); else ;
  abort: 
#line 3388 
  ;
  
#line 3390 
  mgp->tx_boundary = 2048;
  
#line 3391 
  set_fw_name(mgp,myri10ge_fw_unaligned,(_Bool)0);
  return_label: 
#line 3392 
                return;
}


#line 3394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_select_firmware(struct myri10ge_priv *mgp)
{
  
#line 3396 
  int overridden = 0;
  
#line 3398 
  if (myri10ge_force_firmware == 0) {
    int link_width;
    u16 lnk;
    
#line 3402 
    pcie_capability_read_word(mgp->pdev,18,& lnk);
    
#line 3403 
    link_width = ((int)lnk >> 4) & 63;
    
#line 3408 
    if (link_width <= 7) {
      
#line 3409 
      _dev_info((struct device const *)(& (mgp->pdev)->dev),"PCIE x%d Link\n",link_width);
      
#line 3411 
      mgp->tx_boundary = 4096;
      
#line 3412 
      set_fw_name(mgp,myri10ge_fw_aligned,(_Bool)0);
    }
    else 
#line 3414 
         myri10ge_firmware_probe(mgp);
  }
  else 
    
#line 3417 
    if (myri10ge_force_firmware == 1) {
      
#line 3418 
      _dev_info((struct device const *)(& (mgp->pdev)->dev),"Assuming aligned completions (forced)\n");
      
#line 3420 
      mgp->tx_boundary = 4096;
      
#line 3421 
      set_fw_name(mgp,myri10ge_fw_aligned,(_Bool)0);
    }
    else {
      
#line 3423 
      _dev_info((struct device const *)(& (mgp->pdev)->dev),"Assuming unaligned completions (forced)\n");
      
#line 3425 
      mgp->tx_boundary = 2048;
      
#line 3426 
      set_fw_name(mgp,myri10ge_fw_unaligned,(_Bool)0);
    }
  
#line 3430 
  kernel_param_lock(& __this_module);
  
#line 3431 
  if (myri10ge_fw_name != (char *)0) {
    
#line 3432 
    char *fw_name = kstrdup((char const *)myri10ge_fw_name,208U);
    
#line 3433 
    if (fw_name != (char *)0) {
      
#line 3434 
      overridden = 1;
      
#line 3435 
      set_fw_name(mgp,fw_name,(_Bool)1);
    }
    else ;
  }
  else ;
  
#line 3438 
  kernel_param_unlock(& __this_module);
  
#line 3440 
  if (mgp->board_number <= 7U && myri10ge_fw_names[mgp->board_number] != (char *)0) {
    size_t tmp_0;
    
#line 3441 
    tmp_0 = strlen((char const *)myri10ge_fw_names[mgp->board_number]);
    
#line 3441 
    if (tmp_0 != 0UL) {
      
#line 3443 
      set_fw_name(mgp,myri10ge_fw_names[mgp->board_number],(_Bool)0);
      
#line 3444 
      overridden = 1;
    }
    else ;
  }
  else ;
  
#line 3446 
  if (overridden != 0) 
#line 3447 
                       _dev_info((struct device const *)(& (mgp->pdev)->dev),"overriding firmware to %s\n",mgp->fw_name); else ;
  
#line 3448 
  return;
}


#line 3451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_mask_surprise_down(struct pci_dev *pdev)
{
  int cap;
  u32 mask;
  
#line 3453 
  struct pci_dev *bridge = (pdev->bus)->self;
  
#line 3457 
  if (bridge == (struct pci_dev *)0) 
#line 3458 
                                     goto return_label; else ;
  
#line 3460 
  cap = pci_find_ext_capability(bridge,1);
  
#line 3461 
  if (cap != 0) {
    
#line 3465 
    pci_read_config_dword((struct pci_dev const *)bridge,cap + 8,& mask);
    
#line 3466 
    mask |= 32U;
    
#line 3467 
    pci_write_config_dword((struct pci_dev const *)bridge,cap + 8,mask);
  }
  else ;
  return_label: 
#line 3469 
                return;
}


#line 3472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  struct myri10ge_priv *mgp;
  struct net_device *netdev;
  bool tmp_0;
  int tmp_2;
  pci_power_t tmp_1;
  
#line 3477 
  mgp = (struct myri10ge_priv *)pci_get_drvdata(pdev);
  
#line 3478 
  if (mgp == (struct myri10ge_priv *)0) {
    
#line 3479 
    __retres = -22;
    
#line 3479 
    goto return_label;
  }
  else ;
  
#line 3480 
  netdev = mgp->dev;
  
#line 3482 
  netif_device_detach(netdev);
  
#line 3483 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 3483 
  if ((int)tmp_0 != 0) {
    
#line 3484 
    netdev_info((struct net_device const *)netdev,"closing\n");
    
#line 3485 
    rtnl_lock();
    
#line 3486 
    myri10ge_close(netdev);
    
#line 3487 
    rtnl_unlock();
  }
  else ;
  
#line 3489 
  myri10ge_dummy_rdma(mgp,0);
  
#line 3490 
  pci_save_state(pdev);
  
#line 3491 
  pci_disable_device(pdev);
  
#line 3493 
  tmp_1 = pci_choose_state(pdev,state);
  
#line 3493 
  ;
  
#line 3493 
  tmp_2 = pci_set_power_state(pdev,tmp_1);
  
#line 3493 
  __retres = tmp_2;
  return_label: 
#line 3493 
                return __retres;
}


#line 3496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_resume(struct pci_dev *pdev)
{
  int __retres;
  struct myri10ge_priv *mgp;
  struct net_device *netdev;
  int status;
  u16 vendor;
  bool tmp_0;
  
#line 3503 
  mgp = (struct myri10ge_priv *)pci_get_drvdata(pdev);
  
#line 3504 
  if (mgp == (struct myri10ge_priv *)0) {
    
#line 3505 
    __retres = -22;
    
#line 3505 
    goto return_label;
  }
  else ;
  
#line 3506 
  netdev = mgp->dev;
  
#line 3507 
  pci_set_power_state(pdev,0);
  
#line 3508 
  msleep(5U);
  
#line 3509 
  pci_read_config_word((struct pci_dev const *)mgp->pdev,0,& vendor);
  
#line 3510 
  if ((unsigned int)vendor == 65535U) {
    
#line 3511 
    netdev_err((struct net_device const *)mgp->dev,"device disappeared!\n");
    
#line 3512 
    __retres = -5;
    
#line 3512 
    goto return_label;
  }
  else ;
  
#line 3515 
  pci_restore_state(pdev);
  
#line 3517 
  status = pci_enable_device(pdev);
  
#line 3518 
  if (status != 0) {
    
#line 3519 
    dev_err((struct device const *)(& pdev->dev),"failed to enable device\n");
    
#line 3520 
    __retres = status;
    
#line 3520 
    goto return_label;
  }
  else ;
  
#line 3523 
  pci_set_master(pdev);
  
#line 3525 
  myri10ge_reset(mgp);
  
#line 3526 
  myri10ge_dummy_rdma(mgp,1);
  
#line 3530 
  pci_save_state(pdev);
  
#line 3532 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 3532 
  if ((int)tmp_0 != 0) {
    
#line 3533 
    rtnl_lock();
    
#line 3534 
    status = myri10ge_open(netdev);
    
#line 3535 
    rtnl_unlock();
    
#line 3536 
    if (status != 0) 
#line 3537 
                     goto abort_with_enabled; else ;
  }
  else ;
  
#line 3540 
  netif_device_attach(netdev);
  
#line 3542 
  __retres = 0;
  
#line 3542 
  goto return_label;
  abort_with_enabled: 
#line 3544 
  ;
  
#line 3545 
  pci_disable_device(pdev);
  
#line 3546 
  __retres = -5;
  return_label: 
#line 3546 
                return __retres;
}


#line 3551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static u32 myri10ge_read_reboot(struct myri10ge_priv *mgp)
{
  u32 reboot;
  
#line 3553 
  struct pci_dev *pdev = mgp->pdev;
  
#line 3554 
  int vs = mgp->vendor_specific_offset;
  
#line 3558 
  pci_write_config_byte((struct pci_dev const *)pdev,vs + 16,(unsigned char)3);
  
#line 3561 
  pci_write_config_dword((struct pci_dev const *)pdev,vs + 24,4294967280U);
  
#line 3562 
  pci_read_config_dword((struct pci_dev const *)pdev,vs + 20,& reboot);
  
#line 3563 
  return reboot;
}


#line 3567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_check_slice(struct myri10ge_slice_state *ss, int *reset_needed, int *busy_slice_cnt, u32 rx_pause_cnt)
{
  
#line 3570 
  struct myri10ge_priv *mgp = ss->mgp;
  
#line 3571 
  int slice = (int)(((long)ss - (long)mgp->ss) / 896L);
  
#line 3573 
  if ((ss->tx.req != ss->tx.done && ss->tx.done == ss->watchdog_tx_done) && ss->watchdog_tx_req != ss->watchdog_tx_done) 
    
#line 3577 
    if ((unsigned int)mgp->watchdog_pause != rx_pause_cnt) {
      int tmp;
      
#line 3578 
      tmp = net_ratelimit();
      
#line 3578 
      if (tmp != 0) 
#line 3579 
                    netdev_warn((struct net_device const *)mgp->dev,"slice %d: TX paused, ",slice); else ;
    }
    else {
      unsigned int tmp_1;
      
#line 3587 
      if (0 != 0) 
#line 3587 
                  tmp_1 = (((((mgp->ss + slice)->fw_stats)->send_done_count << 24) | ((((mgp->ss + slice)->fw_stats)->send_done_count << 8) & 16711680U)) | ((((mgp->ss + slice)->fw_stats)->send_done_count >> 8) & 65280U)) | (((mgp->ss + slice)->fw_stats)->send_done_count >> 24); else 
                                                                    
#line 3587 
                                                                    tmp_1 = __fswab32(((mgp->ss + slice)->fw_stats)->send_done_count);
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      ;
      
#line 3582 
      netdev_warn((struct net_device const *)mgp->dev,"slice %d: TX stuck %d %d %d %d %d %d\n",slice,ss->tx.queue_active,ss->tx.req,ss->tx.done,ss->tx.pkt_start,ss->tx.pkt_done,(int)tmp_1);
      
#line 3589 
      *reset_needed = 1;
      
#line 3590 
      ss->stuck = 1;
    }
  else ;
  
#line 3593 
  if (ss->watchdog_tx_done != ss->tx.done || ss->watchdog_rx_done != ss->rx_done.cnt) 
    
#line 3595 
    *busy_slice_cnt += 1; else ;
  
#line 3597 
  ss->watchdog_tx_done = ss->tx.done;
  
#line 3598 
  ss->watchdog_tx_req = ss->tx.req;
  
#line 3599 
  ss->watchdog_rx_done = ss->rx_done.cnt;
  
#line 3600 
  return;
}


#line 3606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_watchdog(struct work_struct *work)
{
  struct myri10ge_priv *tmp;
  struct myri10ge_slice_state *ss;
  u32 reboot;
  u32 rx_pause_cnt;
  int status;
  int rebooted;
  int i;
  u16 cmd;
  u16 vendor;
  {
    
#line 3609 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 3609 
    tmp = (struct myri10ge_priv *)__mptr + 18446744073709551360U;
  }
  
#line 3608 
  struct myri10ge_priv *mgp = tmp;
  
#line 3614 
  int reset_needed = 0;
  
#line 3615 
  int busy_slice_cnt = 0;
  
#line 3618 
  mgp->watchdog_resets += 1;
  
#line 3619 
  pci_read_config_word((struct pci_dev const *)mgp->pdev,4,& cmd);
  
#line 3620 
  rebooted = 0;
  
#line 3621 
  if (((int)cmd & 4) == 0) {
    char *tmp_0;
    
#line 3625 
    reboot = myri10ge_read_reboot(mgp);
    
#line 3626 
    if (myri10ge_reset_recover != 0) 
#line 3626 
                                     tmp_0 = (char *)""; else 
#line 3626 
                                                              tmp_0 = (char *)" not";
    
#line 3626 
    ;
    
#line 3626 
    ;
    
#line 3626 
    netdev_err((struct net_device const *)mgp->dev,"NIC rebooted (0x%x),%s resetting\n",reboot,tmp_0);
    
#line 3628 
    if (myri10ge_reset_recover == 0) 
#line 3629 
                                     goto return_label; else ;
    
#line 3630 
    rtnl_lock();
    
#line 3631 
    mgp->rebooted = 1;
    
#line 3632 
    rebooted = 1;
    
#line 3633 
    myri10ge_close(mgp->dev);
    
#line 3634 
    myri10ge_reset_recover -= 1;
    
#line 3635 
    mgp->rebooted = 0;
    
#line 3643 
    pci_restore_state(mgp->pdev);
    
#line 3646 
    pci_save_state(mgp->pdev);
  }
  else {
    
#line 3652 
    if ((unsigned int)cmd == 65535U) {
      
#line 3653 
      pci_read_config_word((struct pci_dev const *)mgp->pdev,0,& vendor);
      
#line 3654 
      if ((unsigned int)vendor == 65535U) {
        
#line 3655 
        netdev_err((struct net_device const *)mgp->dev,"device disappeared!\n");
        
#line 3656 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 3661 
    if (0 != 0) 
#line 3661 
                rx_pause_cnt = (((((mgp->ss)->fw_stats)->dropped_pause << 24) | ((((mgp->ss)->fw_stats)->dropped_pause << 8) & 16711680U)) | ((((mgp->ss)->fw_stats)->dropped_pause >> 8) & 65280U)) | (((mgp->ss)->fw_stats)->dropped_pause >> 24); else 
                                                                    
#line 3661 
                                                                    rx_pause_cnt = __fswab32(((mgp->ss)->fw_stats)->dropped_pause);
    
#line 3662 
    i = 0;
    
#line 3662 
    goto ldv_57577;
    ldv_57576: 
#line 3663 
    ;
    
#line 3663 
    ss = mgp->ss;
    
#line 3664 
    if (ss->stuck != 0) {
      
#line 3665 
      myri10ge_check_slice(ss,& reset_needed,& busy_slice_cnt,rx_pause_cnt);
      
#line 3668 
      ss->stuck = 0;
    }
    else ;
    
#line 3662 
    i += 1;
    ldv_57577: 
#line 3663 
    ;
    
#line 3662 
    if (mgp->num_slices > i) 
#line 3664 
                             goto ldv_57576; else 
#line 3667 
                                                  goto ldv_57578;
    ldv_57578: 
#line 3668 
    ;
    
#line 3671 
    if (reset_needed == 0) {
      {
        
#line 3672 
        struct _ddebug descriptor = {.modname = "myri10ge", .function = "myri10ge_watchdog", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c", .format = "not resetting\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))3672U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 3672 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 3672 
                                                            __dynamic_netdev_dbg(& descriptor,(struct net_device const *)mgp->dev,"not resetting\n"); else ;
      }
      
#line 3673 
      goto return_label;
    }
    else ;
    
#line 3676 
    netdev_err((struct net_device const *)mgp->dev,"device timeout, resetting\n");
  }
  
#line 3679 
  if (rebooted == 0) {
    
#line 3680 
    rtnl_lock();
    
#line 3681 
    myri10ge_close(mgp->dev);
  }
  else ;
  
#line 3683 
  status = myri10ge_load_firmware(mgp,1);
  
#line 3684 
  if (status != 0) 
#line 3685 
                   netdev_err((struct net_device const *)mgp->dev,"failed to load firmware\n"); else 
                                                                    
#line 3687 
                                                                    myri10ge_open(mgp->dev);
  
#line 3688 
  rtnl_unlock();
  return_label: 
#line 3689 
                return;
}


#line 3698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_watchdog_timer(unsigned long arg)
{
  struct myri10ge_priv *mgp;
  struct myri10ge_slice_state *ss;
  int i;
  int reset_needed;
  int busy_slice_cnt;
  u32 rx_pause_cnt;
  u16 cmd;
  
#line 3706 
  mgp = (struct myri10ge_priv *)arg;
  
#line 3708 
  if (0 != 0) 
#line 3708 
              rx_pause_cnt = (((((mgp->ss)->fw_stats)->dropped_pause << 24) | ((((mgp->ss)->fw_stats)->dropped_pause << 8) & 16711680U)) | ((((mgp->ss)->fw_stats)->dropped_pause >> 8) & 65280U)) | (((mgp->ss)->fw_stats)->dropped_pause >> 24); else 
                                                                    
#line 3708 
                                                                    rx_pause_cnt = __fswab32(((mgp->ss)->fw_stats)->dropped_pause);
  
#line 3709 
  busy_slice_cnt = 0;
  
#line 3710 
  i = 0;
  
#line 3710 
  reset_needed = 0;
  
#line 3710 
  goto ldv_57592;
  ldv_57591: 
#line 3711 
  ;
  
#line 3713 
  ss = mgp->ss + i;
  
#line 3714 
  if (ss->rx_small.watchdog_needed != 0) {
    
#line 3715 
    myri10ge_alloc_rx_pages(mgp,& ss->rx_small,mgp->small_bytes + 2,1);
    
#line 3718 
    if (ss->rx_small.fill_cnt - ss->rx_small.cnt >= myri10ge_fill_thresh) 
      
#line 3720 
      ss->rx_small.watchdog_needed = 0; else ;
  }
  else ;
  
#line 3722 
  if (ss->rx_big.watchdog_needed != 0) {
    
#line 3723 
    myri10ge_alloc_rx_pages(mgp,& ss->rx_big,mgp->big_bytes,1);
    
#line 3725 
    if (ss->rx_big.fill_cnt - ss->rx_big.cnt >= myri10ge_fill_thresh) 
      
#line 3727 
      ss->rx_big.watchdog_needed = 0; else ;
  }
  else ;
  
#line 3729 
  myri10ge_check_slice(ss,& reset_needed,& busy_slice_cnt,rx_pause_cnt);
  
#line 3711 
  i += 1;
  ldv_57592: 
#line 3712 
  ;
  
#line 3710 
  if (mgp->num_slices > i && reset_needed == 0) 
#line 3713 
                                                goto ldv_57591; else 
                                                                  
#line 3716 
                                                                  goto ldv_57593;
  ldv_57593: 
#line 3717 
  ;
  
#line 3735 
  if (busy_slice_cnt == 0) {
    
#line 3736 
    pci_read_config_word((struct pci_dev const *)mgp->pdev,4,& cmd);
    
#line 3737 
    if (((int)cmd & 4) == 0) 
#line 3738 
                             reset_needed = 1; else ;
  }
  else ;
  
#line 3741 
  mgp->watchdog_pause = (int)rx_pause_cnt;
  
#line 3743 
  if (reset_needed != 0) 
#line 3744 
                         ldv_schedule_work_88(& mgp->watchdog_work); else 
                                                                    
#line 3747 
                                                                    ldv_mod_timer_89(& mgp->watchdog_timer,(unsigned long)(myri10ge_watchdog_timeout * 250) + jiffies);
  
#line 3749 
  return;
}


#line 3752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_free_slices(struct myri10ge_priv *mgp)
{
  struct myri10ge_slice_state *ss;
  size_t bytes;
  int i;
  
#line 3755 
  struct pci_dev *pdev = mgp->pdev;
  
#line 3759 
  if (mgp->ss == (struct myri10ge_slice_state *)0) 
#line 3760 
                                                   goto return_label; else ;
  
#line 3762 
  i = 0;
  
#line 3762 
  goto ldv_57602;
  ldv_57601: 
#line 3763 
  ;
  
#line 3763 
  ss = mgp->ss + i;
  
#line 3764 
  if (ss->rx_done.entry != (struct mcp_slot *)0) {
    
#line 3765 
    bytes = (unsigned long)mgp->max_intr_slots * 4UL;
    
#line 3767 
    dma_free_attrs(& pdev->dev,bytes,(void *)ss->rx_done.entry,ss->rx_done.bus,(struct dma_attrs *)0);
    
#line 3769 
    ss->rx_done.entry = (struct mcp_slot *)0;
  }
  else ;
  
#line 3771 
  if (ss->fw_stats != (struct mcp_irq_data *)0) {
    
#line 3772 
    bytes = 64UL;
    
#line 3773 
    dma_free_attrs(& pdev->dev,bytes,(void *)ss->fw_stats,ss->fw_stats_bus,(struct dma_attrs *)0);
    
#line 3775 
    ss->fw_stats = (struct mcp_irq_data *)0;
  }
  else ;
  
#line 3777 
  napi_hash_del(& ss->napi);
  
#line 3778 
  netif_napi_del(& ss->napi);
  
#line 3762 
  i += 1;
  ldv_57602: 
#line 3763 
  ;
  
#line 3762 
  if (mgp->num_slices > i) 
#line 3764 
                           goto ldv_57601; else 
#line 3767 
                                                goto ldv_57603;
  ldv_57603: 
#line 3768 
  ;
  
#line 3781 
  synchronize_rcu();
  
#line 3782 
  kfree((void const *)mgp->ss);
  
#line 3783 
  mgp->ss = (struct myri10ge_slice_state *)0;
  return_label: 
#line 3784 
                return;
}


#line 3786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_alloc_slices(struct myri10ge_priv *mgp)
{
  int __retres;
  struct myri10ge_slice_state *ss;
  size_t bytes;
  int i;
  
#line 3789 
  struct pci_dev *pdev = mgp->pdev;
  
#line 3793 
  bytes = (unsigned long)mgp->num_slices * 896UL;
  
#line 3794 
  mgp->ss = (struct myri10ge_slice_state *)kzalloc(bytes,208U);
  
#line 3795 
  if (mgp->ss == (struct myri10ge_slice_state *)0) {
    
#line 3796 
    __retres = -12;
    
#line 3796 
    goto return_label;
  }
  else ;
  
#line 3799 
  i = 0;
  
#line 3799 
  goto ldv_57613;
  ldv_57612: 
#line 3800 
  ;
  
#line 3800 
  ss = mgp->ss + i;
  
#line 3801 
  bytes = (unsigned long)mgp->max_intr_slots * 4UL;
  
#line 3802 
  ss->rx_done.entry = (struct mcp_slot *)dma_zalloc_coherent(& pdev->dev,bytes,& ss->rx_done.bus,208U);
  
#line 3805 
  if (ss->rx_done.entry == (struct mcp_slot *)0) 
#line 3806 
                                                 goto abort; else ;
  
#line 3807 
  bytes = 64UL;
  
#line 3808 
  ss->fw_stats = (struct mcp_irq_data *)dma_alloc_attrs(& pdev->dev,bytes,& ss->fw_stats_bus,208U,(struct dma_attrs *)0);
  
#line 3811 
  if (ss->fw_stats == (struct mcp_irq_data *)0) 
#line 3812 
                                                goto abort; else ;
  
#line 3813 
  ss->mgp = mgp;
  
#line 3814 
  ss->dev = mgp->dev;
  
#line 3815 
  netif_napi_add(ss->dev,& ss->napi,& myri10ge_poll,myri10ge_napi_weight);
  
#line 3817 
  napi_hash_add(& ss->napi);
  
#line 3799 
  i += 1;
  ldv_57613: 
#line 3800 
  ;
  
#line 3799 
  if (mgp->num_slices > i) 
#line 3801 
                           goto ldv_57612; else 
#line 3804 
                                                goto ldv_57614;
  ldv_57614: 
#line 3805 
  ;
  
#line 3819 
  __retres = 0;
  
#line 3819 
  goto return_label;
  abort: 
#line 3820 
  ;
  
#line 3821 
  myri10ge_free_slices(mgp);
  
#line 3822 
  __retres = -12;
  return_label: 
#line 3822 
                return __retres;
}


#line 3831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_probe_slices(struct myri10ge_priv *mgp)
{
  struct myri10ge_cmd cmd;
  char *old_fw;
  bool old_allocated;
  int i;
  int status;
  int ncpus;
  
#line 3834 
  struct pci_dev *pdev = mgp->pdev;
  
#line 3839 
  mgp->num_slices = 1;
  
#line 3840 
  ncpus = netif_get_num_default_rss_queues();
  
#line 3842 
  if ((myri10ge_max_slices == 1 || (unsigned int)pdev->msix_cap == 0U) || (myri10ge_max_slices == -1 && ncpus <= 1)) 
    
#line 3844 
    goto return_label; else ;
  
#line 3847 
  old_fw = mgp->fw_name;
  
#line 3848 
  old_allocated = mgp->fw_name_allocated;
  
#line 3850 
  mgp->fw_name_allocated = (_Bool)0;
  
#line 3852 
  if (myri10ge_fw_name != (char *)0) {
    
#line 3853 
    _dev_info((struct device const *)(& (mgp->pdev)->dev),"overriding rss firmware to %s\n",myri10ge_fw_name);
    
#line 3855 
    set_fw_name(mgp,myri10ge_fw_name,(_Bool)0);
  }
  else 
    
#line 3856 
    if (old_fw == myri10ge_fw_aligned) 
#line 3857 
                                       set_fw_name(mgp,myri10ge_fw_rss_aligned,(_Bool)0); else 
                                                                    
#line 3859 
                                                                    set_fw_name(mgp,myri10ge_fw_rss_unaligned,(_Bool)0);
  
#line 3860 
  status = myri10ge_load_firmware(mgp,0);
  
#line 3861 
  if (status != 0) {
    
#line 3862 
    _dev_info((struct device const *)(& pdev->dev),"Rss firmware not found\n");
    
#line 3863 
    if ((int)old_allocated != 0) 
#line 3864 
                                 kfree((void const *)old_fw); else ;
    
#line 3865 
    goto return_label;
  }
  else ;
  
#line 3869 
  memset((void *)(& cmd),0,12UL);
  
#line 3870 
  status = myri10ge_send_cmd(mgp,1U,& cmd,0);
  
#line 3871 
  if (status != 0) {
    
#line 3872 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"failed reset\n");
    
#line 3873 
    goto abort_with_fw;
  }
  else ;
  
#line 3876 
  mgp->max_intr_slots = (int)(cmd.data0 / 4U);
  
#line 3879 
  cmd.data0 = (unsigned int)((unsigned long)mgp->max_intr_slots) * 4U;
  
#line 3880 
  status = myri10ge_send_cmd(mgp,13U,& cmd,0);
  
#line 3881 
  if (status != 0) {
    
#line 3882 
    dev_err((struct device const *)(& (mgp->pdev)->dev),"failed MXGEFW_CMD_SET_INTRQ_SIZE\n");
    
#line 3883 
    goto abort_with_fw;
  }
  else ;
  
#line 3887 
  status = myri10ge_send_cmd(mgp,35U,& cmd,0);
  
#line 3888 
  if (status != 0) 
#line 3889 
                   goto abort_with_fw; else 
#line 3891 
                                            mgp->num_slices = (int)cmd.data0;
  
#line 3894 
  if (myri10ge_msi == 0) 
#line 3895 
                         goto abort_with_fw; else ;
  
#line 3901 
  if (myri10ge_max_slices == -1) 
#line 3902 
                                 myri10ge_max_slices = ncpus; else ;
  
#line 3904 
  if (mgp->num_slices > myri10ge_max_slices) 
#line 3905 
                                             mgp->num_slices = myri10ge_max_slices; else ;
  
#line 3911 
  mgp->msix_vectors = (struct msix_entry *)kcalloc((unsigned long)mgp->num_slices,8UL,208U);
  
#line 3913 
  if (mgp->msix_vectors == (struct msix_entry *)0) 
#line 3914 
                                                   goto no_msix; else ;
  
#line 3915 
  i = 0;
  
#line 3915 
  goto ldv_57628;
  ldv_57627: 
#line 3916 
  ;
  
#line 3916 
  (mgp->msix_vectors + i)->entry = (unsigned short)i;
  
#line 3915 
  i += 1;
  ldv_57628: 
#line 3916 
  ;
  
#line 3915 
  if (mgp->num_slices > i) 
#line 3917 
                           goto ldv_57627; else 
#line 3920 
                                                goto ldv_57629;
  ldv_57629: 
#line 3921 
  ;
  
#line 3919 
  goto ldv_57631;
  ldv_57630: 
#line 3920 
  ;
  
#line 3920 
  if (0 != 0) {
    unsigned int tmp_68;
    
#line 3920 
    if (0 != 0) {
      unsigned int tmp_66;
      
#line 3920 
      if (mgp->num_slices <= 0) {
        int tmp_0;
        
#line 3920 
        tmp_0 = ____ilog2_NaN();
        
#line 3920 
        tmp_66 = (unsigned int)((int)(1UL << tmp_0));
      }
      else {
        unsigned int tmp_65;
        
#line 3920 
        if (mgp->num_slices >= 0) {
          unsigned int tmp_64;
          
#line 3920 
          if (((unsigned long long)mgp->num_slices & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_63;
            
#line 3920 
            if (((unsigned long long)mgp->num_slices & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_62;
              
#line 3920 
              if (((unsigned long long)mgp->num_slices & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_61;
                
#line 3920 
                if (((unsigned long long)mgp->num_slices & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_60;
                  
#line 3920 
                  if (((unsigned long long)mgp->num_slices & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_59;
                    
#line 3920 
                    if (((unsigned long long)mgp->num_slices & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_58;
                      
#line 3920 
                      if (((unsigned long long)mgp->num_slices & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_57;
                        
#line 3920 
                        if (((unsigned long long)mgp->num_slices & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_56;
                          
#line 3920 
                          if (((unsigned long long)mgp->num_slices & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_55;
                            
#line 3920 
                            if (((unsigned long long)mgp->num_slices & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_54;
                              
#line 3920 
                              if (((unsigned long long)mgp->num_slices & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_53;
                                
#line 3920 
                                if (((unsigned long long)mgp->num_slices & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_52;
                                  
#line 3920 
                                  if (((unsigned long long)mgp->num_slices & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_51;
                                    
#line 3920 
                                    if (((unsigned long long)mgp->num_slices & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_50;
                                      
#line 3920 
                                      if (((unsigned long long)mgp->num_slices & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_49;
                                        
#line 3920 
                                        if (((unsigned long long)mgp->num_slices & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_48;
                                          
#line 3920 
                                          if (((unsigned long long)mgp->num_slices & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_47;
                                            
#line 3920 
                                            if (((unsigned long long)mgp->num_slices & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_46;
                                              
#line 3920 
                                              if (((unsigned long long)mgp->num_slices & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_45;
                                                
#line 3920 
                                                if (((unsigned long long)mgp->num_slices & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_44;
                                                  
#line 3920 
                                                  if (((unsigned long long)mgp->num_slices & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_43;
                                                    
#line 3920 
                                                    if (((unsigned long long)mgp->num_slices & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_42;
                                                      
#line 3920 
                                                      if (((unsigned long long)mgp->num_slices & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_41;
                                                        
#line 3920 
                                                        if (((unsigned long long)mgp->num_slices & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_40;
                                                          
#line 3920 
                                                          if (((unsigned long long)mgp->num_slices & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_39;
                                                            
#line 3920 
                                                            if (((unsigned long long)mgp->num_slices & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_38;
                                                              
#line 3920 
                                                              if (((unsigned long long)mgp->num_slices & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_37;
                                                                
#line 3920 
                                                                if (((unsigned long long)mgp->num_slices & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_36;
                                                                  
#line 3920 
                                                                  if (
                                                                    ((unsigned long long)mgp->num_slices & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 3920 
                                                                    if (
                                                                    mgp->num_slices >= 0) {
                                                                    int tmp_32;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 1073741824ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 536870912ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 268435456ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 134217728ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 67108864ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 33554432ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 16777216ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 8388608ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 4194304ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 2097152ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 1048576ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 524288ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 262144ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 131072ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 65536ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 32768ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 16384ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 8192ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 4096ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 2048ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 1024ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 512ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 256ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 128ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 64ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 32ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 16ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 8ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 4ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 2ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 3920 
                                                                    if (
                                                                    ((unsigned long long)mgp->num_slices & 1ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 3920 
                                                                    tmp_1 = ____ilog2_NaN();
                                                                    
#line 3920 
                                                                    tmp_2 = (int)(1UL << tmp_1);
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_2 = 1;
                                                                    
#line 3920 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_3 = 2;
                                                                    
#line 3920 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_4 = 4;
                                                                    
#line 3920 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_5 = 8;
                                                                    
#line 3920 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_6 = 16;
                                                                    
#line 3920 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_7 = 32;
                                                                    
#line 3920 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_8 = 64;
                                                                    
#line 3920 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_9 = 128;
                                                                    
#line 3920 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_10 = 256;
                                                                    
#line 3920 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_11 = 512;
                                                                    
#line 3920 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_12 = 1024;
                                                                    
#line 3920 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_13 = 2048;
                                                                    
#line 3920 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_14 = 4096;
                                                                    
#line 3920 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_15 = 8192;
                                                                    
#line 3920 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_16 = 16384;
                                                                    
#line 3920 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_17 = 32768;
                                                                    
#line 3920 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_18 = 65536;
                                                                    
#line 3920 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_19 = 131072;
                                                                    
#line 3920 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_20 = 262144;
                                                                    
#line 3920 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_21 = 524288;
                                                                    
#line 3920 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_22 = 1048576;
                                                                    
#line 3920 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_23 = 2097152;
                                                                    
#line 3920 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_24 = 4194304;
                                                                    
#line 3920 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_25 = 8388608;
                                                                    
#line 3920 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_26 = 16777216;
                                                                    
#line 3920 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_27 = 33554432;
                                                                    
#line 3920 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_28 = 67108864;
                                                                    
#line 3920 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_29 = 134217728;
                                                                    
#line 3920 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_30 = 268435456;
                                                                    
#line 3920 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_31 = 536870912;
                                                                    
#line 3920 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_32 = 1073741824;
                                                                    
#line 3920 
                                                                    tmp_33 = (unsigned int)tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_33 = -2147483648;
                                                                    
#line 3920 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_34 = (unsigned int)0;
                                                                    
#line 3920 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 3920 
                                                                    tmp_35 = (unsigned int)0;
                                                                    
#line 3920 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 3920 
                                                                    tmp_36 = (unsigned int)0;
                                                                  
#line 3920 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 3920 
                                                                  tmp_37 = (unsigned int)0;
                                                                
#line 3920 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 3920 
                                                                   tmp_38 = (unsigned int)0;
                                                              
#line 3920 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 3920 
                                                                 tmp_39 = (unsigned int)0;
                                                            
#line 3920 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 3920 
                                                               tmp_40 = (unsigned int)0;
                                                          
#line 3920 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 3920 
                                                             tmp_41 = (unsigned int)0;
                                                        
#line 3920 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 3920 
                                                           tmp_42 = (unsigned int)0;
                                                      
#line 3920 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 3920 
                                                         tmp_43 = (unsigned int)0;
                                                    
#line 3920 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 3920 
                                                       tmp_44 = (unsigned int)0;
                                                  
#line 3920 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 3920 
                                                     tmp_45 = (unsigned int)0;
                                                
#line 3920 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 3920 
                                                   tmp_46 = (unsigned int)0;
                                              
#line 3920 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 3920 
                                                 tmp_47 = (unsigned int)0;
                                            
#line 3920 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 3920 
                                               tmp_48 = (unsigned int)0;
                                          
#line 3920 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 3920 
                                             tmp_49 = (unsigned int)0;
                                        
#line 3920 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 3920 
                                           tmp_50 = (unsigned int)0;
                                      
#line 3920 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 3920 
                                         tmp_51 = (unsigned int)0;
                                    
#line 3920 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 3920 
                                       tmp_52 = (unsigned int)0;
                                  
#line 3920 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 3920 
                                     tmp_53 = (unsigned int)0;
                                
#line 3920 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 3920 
                                   tmp_54 = (unsigned int)0;
                              
#line 3920 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 3920 
                                 tmp_55 = (unsigned int)0;
                            
#line 3920 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 3920 
                               tmp_56 = (unsigned int)0;
                          
#line 3920 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 3920 
                             tmp_57 = (unsigned int)0;
                        
#line 3920 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 3920 
                           tmp_58 = (unsigned int)0;
                      
#line 3920 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 3920 
                         tmp_59 = (unsigned int)0;
                    
#line 3920 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 3920 
                       tmp_60 = (unsigned int)0;
                  
#line 3920 
                  tmp_61 = tmp_60;
                }
                else 
#line 3920 
                     tmp_61 = (unsigned int)0;
                
#line 3920 
                tmp_62 = tmp_61;
              }
              else 
#line 3920 
                   tmp_62 = (unsigned int)0;
              
#line 3920 
              tmp_63 = tmp_62;
            }
            else 
#line 3920 
                 tmp_63 = (unsigned int)0;
            
#line 3920 
            tmp_64 = tmp_63;
          }
          else 
#line 3920 
               tmp_64 = (unsigned int)0;
          
#line 3920 
          tmp_65 = tmp_64;
        }
        else 
#line 3920 
             tmp_65 = (unsigned int)0;
        
#line 3920 
        tmp_66 = tmp_65;
      }
      
#line 3920 
      tmp_68 = tmp_66;
    }
    else {
      int tmp_67;
      
#line 3920 
      tmp_67 = __ilog2_u32((unsigned int)mgp->num_slices);
      
#line 3920 
      tmp_68 = (unsigned int)((int)(1UL << tmp_67));
    }
    
#line 3920 
    mgp->num_slices = (int)tmp_68;
  }
  else {
    unsigned long tmp_69;
    
#line 3920 
    tmp_69 = __rounddown_pow_of_two((unsigned long)mgp->num_slices);
    
#line 3920 
    mgp->num_slices = (int)tmp_69;
  }
  
#line 3921 
  if (mgp->num_slices == 1) 
#line 3922 
                            goto no_msix; else ;
  
#line 3923 
  status = pci_enable_msix_range(pdev,mgp->msix_vectors,mgp->num_slices,mgp->num_slices);
  
#line 3927 
  if (status < 0) 
#line 3928 
                  goto no_msix; else ;
  
#line 3930 
  pci_disable_msix(pdev);
  
#line 3932 
  if (mgp->num_slices == status) {
    
#line 3933 
    if ((int)old_allocated != 0) 
#line 3934 
                                 kfree((void const *)old_fw); else ;
    
#line 3935 
    goto return_label;
  }
  else 
#line 3937 
       mgp->num_slices = status;
  ldv_57631: 
#line 3938 
  ;
  
#line 3919 
  if (mgp->num_slices > 1) 
#line 3921 
                           goto ldv_57630; else 
#line 3924 
                                                goto ldv_57632;
  ldv_57632: 
#line 3925 
  ;
  no_msix: 
#line 3941 
  ;
  
#line 3942 
  if (mgp->msix_vectors != (struct msix_entry *)0) {
    
#line 3943 
    kfree((void const *)mgp->msix_vectors);
    
#line 3944 
    mgp->msix_vectors = (struct msix_entry *)0;
  }
  else ;
  abort_with_fw: 
#line 3947 
  ;
  
#line 3948 
  mgp->num_slices = 1;
  
#line 3949 
  set_fw_name(mgp,old_fw,(_Bool)((bool)((int)old_allocated) != 0));
  
#line 3950 
  myri10ge_load_firmware(mgp,0);
  return_label: 
#line 3951 
                return;
}


#line 3953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct net_device_ops const myri10ge_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & myri10ge_open, .ndo_stop = & myri10ge_close, .ndo_start_xmit = & myri10ge_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & myri10ge_set_multicast_list, .ndo_set_mac_address = & myri10ge_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & myri10ge_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = & myri10ge_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = & myri10ge_busy_poll, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  struct myri10ge_priv *mgp;
  int i;
  int dac_enabled;
  unsigned int hdr_offset;
  unsigned int ss_offset;
  int board_number;
  int tmp_0;
  resource_size_t tmp_2;
  __u32 tmp_5;
  unsigned int tmp_4;
  __u32 tmp_7;
  unsigned int tmp_6;
  
#line 3971 
  struct device *dev = & pdev->dev;
  
#line 3973 
  int status = -6;
  
#line 3978 
  netdev = ldv_alloc_etherdev_mqs_90(960,32U,32U);
  
#line 3979 
  if (netdev == (struct net_device *)0) {
    
#line 3980 
    __retres = -12;
    
#line 3980 
    goto return_label;
  }
  else ;
  
#line 3982 
  netdev->dev.parent = & pdev->dev;
  
#line 3984 
  mgp = (struct myri10ge_priv *)netdev_priv((struct net_device const *)netdev);
  
#line 3985 
  mgp->dev = netdev;
  
#line 3986 
  mgp->pdev = pdev;
  
#line 3987 
  mgp->pause = myri10ge_flow_control;
  
#line 3988 
  mgp->intr_coal_delay = myri10ge_intr_coal_delay;
  
#line 3989 
  mgp->msg_enable = netif_msg_init(myri10ge_debug,4);
  
#line 3990 
  mgp->board_number = (unsigned int)board_number;
  {
    struct lock_class_key __key;
    
#line 3991 
    __init_waitqueue_head(& mgp->down_wq,"&mgp->down_wq",& __key);
  }
  
#line 3993 
  tmp_0 = pci_enable_device(pdev);
  
#line 3993 
  if (tmp_0 != 0) {
    
#line 3994 
    dev_err((struct device const *)(& pdev->dev),"pci_enable_device call failed\n");
    
#line 3995 
    status = -19;
    
#line 3996 
    goto abort_with_netdev;
  }
  else ;
  
#line 4002 
  mgp->vendor_specific_offset = pci_find_capability(pdev,9);
  
#line 4005 
  status = pcie_set_readrq(pdev,4096);
  
#line 4006 
  if (status != 0) {
    
#line 4007 
    dev_err((struct device const *)(& pdev->dev),"Error %d writing PCI_EXP_DEVCTL\n",status);
    
#line 4009 
    goto abort_with_enabled;
  }
  else ;
  
#line 4012 
  myri10ge_mask_surprise_down(pdev);
  
#line 4013 
  pci_set_master(pdev);
  
#line 4014 
  dac_enabled = 1;
  
#line 4015 
  status = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 4016 
  if (status != 0) {
    
#line 4017 
    dac_enabled = 0;
    
#line 4018 
    dev_err((struct device const *)(& pdev->dev),"64-bit pci address mask was refused, ");
    
#line 4021 
    status = pci_set_dma_mask(pdev,4294967295ULL);
  }
  else ;
  
#line 4023 
  if (status != 0) {
    
#line 4024 
    dev_err((struct device const *)(& pdev->dev),"Error %d setting DMA mask\n",status);
    
#line 4025 
    goto abort_with_enabled;
  }
  else ;
  
#line 4027 
  pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
  
#line 4028 
  mgp->cmd = (struct mcp_cmd_response *)dma_alloc_attrs(& pdev->dev,8UL,& mgp->cmd_bus,208U,(struct dma_attrs *)0);
  
#line 4030 
  if (mgp->cmd == (struct mcp_cmd_response *)0) {
    
#line 4031 
    status = -12;
    
#line 4032 
    goto abort_with_enabled;
  }
  else ;
  
#line 4035 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 4035 
    tmp_2 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 4035 
                                                                    tmp_2 = 0ULL;
  
#line 4035 
  mgp->board_span = (unsigned long)tmp_2;
  
#line 4036 
  mgp->iomem_base = (unsigned long)pdev->resource[0].start;
  
#line 4037 
  mgp->wc_cookie = arch_phys_wc_add(mgp->iomem_base,mgp->board_span);
  
#line 4038 
  mgp->sram = (u8 *)ioremap_wc((unsigned long long)mgp->iomem_base,mgp->board_span);
  
#line 4039 
  if (mgp->sram == (u8 *)0U) {
    
#line 4040 
    dev_err((struct device const *)(& pdev->dev),"ioremap failed for %ld bytes at 0x%lx\n",mgp->board_span,mgp->iomem_base);
    
#line 4042 
    status = -6;
    
#line 4043 
    goto abort_with_mtrr;
  }
  else ;
  
#line 4046 
  tmp_4 = readl((void const volatile *)(mgp->sram + 60U));
  
#line 4046 
  tmp_5 = __fswab32(tmp_4);
  
#line 4045 
  hdr_offset = tmp_5 & 1048572U;
  
#line 4047 
  ss_offset = hdr_offset + 144U;
  
#line 4048 
  tmp_6 = readl((void const volatile *)(mgp->sram + ss_offset));
  
#line 4048 
  tmp_7 = __fswab32(tmp_6);
  
#line 4048 
  mgp->sram_size = (int)tmp_7;
  
#line 4049 
  if ((unsigned long)mgp->sram_size > mgp->board_span || mgp->sram_size <= 1048576) {
    
#line 4051 
    dev_err((struct device const *)(& pdev->dev),"invalid sram_size %dB or board span %ldB\n",mgp->sram_size,mgp->board_span);
    
#line 4054 
    goto abort_with_ioremap;
  }
  else ;
  
#line 4056 
  memcpy_fromio((void *)(& mgp->eeprom_strings),(void const volatile *)(mgp->sram + mgp->sram_size),256UL);
  
#line 4058 
  memset((void *)(& mgp->eeprom_strings) + 254U,0,2UL);
  
#line 4059 
  status = myri10ge_read_mac_addr(mgp);
  
#line 4060 
  if (status != 0) 
#line 4061 
                   goto abort_with_ioremap; else ;
  
#line 4063 
  i = 0;
  
#line 4063 
  goto ldv_57653;
  ldv_57652: 
#line 4064 
  ;
  
#line 4064 
  *(netdev->dev_addr + i) = mgp->mac_addr[i];
  
#line 4063 
  i += 1;
  ldv_57653: 
#line 4064 
  ;
  
#line 4063 
  if (i <= 5) 
#line 4065 
              goto ldv_57652; else 
#line 4068 
                                   goto ldv_57654;
  ldv_57654: 
#line 4069 
  ;
  
#line 4066 
  myri10ge_select_firmware(mgp);
  
#line 4068 
  status = myri10ge_load_firmware(mgp,1);
  
#line 4069 
  if (status != 0) {
    
#line 4070 
    dev_err((struct device const *)(& pdev->dev),"failed to load firmware\n");
    
#line 4071 
    goto abort_with_ioremap;
  }
  else ;
  
#line 4073 
  myri10ge_probe_slices(mgp);
  
#line 4074 
  status = myri10ge_alloc_slices(mgp);
  
#line 4075 
  if (status != 0) {
    
#line 4076 
    dev_err((struct device const *)(& pdev->dev),"failed to alloc slice state\n");
    
#line 4077 
    goto abort_with_firmware;
  }
  else ;
  
#line 4079 
  netif_set_real_num_tx_queues(netdev,(unsigned int)mgp->num_slices);
  
#line 4080 
  netif_set_real_num_rx_queues(netdev,(unsigned int)mgp->num_slices);
  
#line 4081 
  status = myri10ge_reset(mgp);
  
#line 4082 
  if (status != 0) {
    
#line 4083 
    dev_err((struct device const *)(& pdev->dev),"failed reset\n");
    
#line 4084 
    goto abort_with_slices;
  }
  else ;
  
#line 4087 
  myri10ge_setup_dca(mgp);
  
#line 4089 
  pci_set_drvdata(pdev,(void *)mgp);
  
#line 4090 
  if (myri10ge_initial_mtu + 14 > 9014) 
#line 4091 
                                        myri10ge_initial_mtu = 9000; else ;
  
#line 4092 
  if (myri10ge_initial_mtu + 14 <= 67) 
#line 4093 
                                       myri10ge_initial_mtu = 68; else ;
  
#line 4095 
  netdev->netdev_ops = & myri10ge_netdev_ops;
  
#line 4096 
  netdev->mtu = (unsigned int)myri10ge_initial_mtu;
  
#line 4097 
  netdev->hw_features = (unsigned long long)mgp->features | 17179869184ULL;
  
#line 4100 
  netdev->hw_features |= 256ULL;
  
#line 4102 
  netdev->features = netdev->hw_features;
  
#line 4104 
  if (dac_enabled != 0) 
#line 4105 
                        netdev->features |= 32ULL; else ;
  
#line 4107 
  netdev->vlan_features |= (unsigned long long)mgp->features;
  
#line 4108 
  if (mgp->fw_ver_tiny <= 36) 
#line 4109 
                              netdev->vlan_features &= 18446744073708503039ULL; else ;
  
#line 4110 
  if (mgp->fw_ver_tiny <= 31) 
#line 4111 
                              netdev->vlan_features &= 18446744073709486079ULL; else ;
  
#line 4115 
  status = myri10ge_request_irq(mgp);
  
#line 4116 
  if (status != 0) 
#line 4117 
                   goto abort_with_firmware; else ;
  
#line 4118 
  myri10ge_free_irq(mgp);
  
#line 4122 
  pci_save_state(pdev);
  {
    struct lock_class_key __key_0;
    
#line 4125 
    init_timer_key(& mgp->watchdog_timer,0U,"((&mgp->watchdog_timer))",& __key_0);
  }
  
#line 4125 
  mgp->watchdog_timer.function = & myri10ge_watchdog_timer;
  
#line 4125 
  mgp->watchdog_timer.data = (unsigned long)mgp;
  
#line 4128 
  netdev->ethtool_ops = & myri10ge_ethtool_ops;
  {
    struct lock_class_key __key_1;
    
#line 4129 
    __init_work(& mgp->watchdog_work,0);
    
#line 4129 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 4129 
    mgp->watchdog_work.data = __constr_expr_37;
    
#line 4129 
    lockdep_init_map(& mgp->watchdog_work.lockdep_map,"(&mgp->watchdog_work)",& __key_1,0);
    
#line 4129 
    INIT_LIST_HEAD(& mgp->watchdog_work.entry);
    
#line 4129 
    mgp->watchdog_work.func = & myri10ge_watchdog;
  }
  
#line 4130 
  status = ldv_register_netdev_91(netdev);
  
#line 4131 
  if (status != 0) {
    
#line 4132 
    dev_err((struct device const *)(& pdev->dev),"register_netdev failed: %d\n",status);
    
#line 4133 
    goto abort_with_state;
  }
  else ;
  
#line 4135 
  if (mgp->msix_enabled != 0) {
    char *tmp_8;
    
#line 4136 
    if (mgp->wc_cookie > 0) 
#line 4136 
                            tmp_8 = (char *)"Enabled"; else 
#line 4136 
                                                            tmp_8 = (char *)"Disabled";
    
#line 4136 
    ;
    
#line 4136 
    ;
    
#line 4136 
    ;
    
#line 4136 
    ;
    
#line 4136 
    _dev_info((struct device const *)dev,"%d MSI-X IRQs, tx bndry %d, fw %s, MTRR %s, WC Enabled\n",mgp->num_slices,mgp->tx_boundary,mgp->fw_name,tmp_8);
  }
  else {
    char *tmp_9;
    char *tmp_10;
    
#line 4140 
    if (mgp->wc_cookie > 0) 
#line 4140 
                            tmp_9 = (char *)"Enabled"; else 
#line 4140 
                                                            tmp_9 = (char *)"Disabled";
    
#line 4140 
    ;
    
#line 4140 
    ;
    
#line 4140 
    ;
    
#line 4140 
    if (mgp->msi_enabled != 0) 
#line 4140 
                               tmp_10 = (char *)"MSI"; else 
#line 4140 
                                                            tmp_10 = (char *)"xPIC";
    
#line 4140 
    ;
    
#line 4140 
    _dev_info((struct device const *)dev,"%s IRQ %d, tx bndry %d, fw %s, MTRR %s, WC Enabled\n",tmp_10,pdev->irq,mgp->tx_boundary,mgp->fw_name,tmp_9);
  }
  
#line 4145 
  board_number += 1;
  
#line 4146 
  __retres = 0;
  
#line 4146 
  goto return_label;
  abort_with_state: 
#line 4148 
  ;
  
#line 4149 
  pci_restore_state(pdev);
  abort_with_slices: 
#line 4151 
  ;
  
#line 4152 
  myri10ge_free_slices(mgp);
  abort_with_firmware: 
#line 4154 
  ;
  
#line 4155 
  myri10ge_dummy_rdma(mgp,0);
  abort_with_ioremap: 
#line 4157 
  ;
  
#line 4158 
  if (mgp->mac_addr_string != (char *)0) 
#line 4159 
                                         dev_err((struct device const *)(& pdev->dev),"myri10ge_probe() failed: MAC=%s, SN=%ld\n",mgp->mac_addr_string,mgp->serial_number); else ;
  
#line 4162 
  iounmap((void volatile *)mgp->sram);
  abort_with_mtrr: 
#line 4164 
  ;
  
#line 4165 
  arch_phys_wc_del(mgp->wc_cookie);
  
#line 4166 
  dma_free_attrs(& pdev->dev,8UL,(void *)mgp->cmd,mgp->cmd_bus,(struct dma_attrs *)0);
  abort_with_enabled: 
#line 4169 
  ;
  
#line 4170 
  pci_disable_device(pdev);
  abort_with_netdev: 
#line 4172 
  ;
  
#line 4173 
  set_fw_name(mgp,(char *)0,(_Bool)0);
  
#line 4174 
  ldv_free_netdev_92(netdev);
  
#line 4175 
  __retres = status;
  return_label: 
#line 4175 
                return __retres;
}


#line 4185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_remove(struct pci_dev *pdev)
{
  struct myri10ge_priv *mgp;
  struct net_device *netdev;
  
#line 4190 
  mgp = (struct myri10ge_priv *)pci_get_drvdata(pdev);
  
#line 4191 
  if (mgp == (struct myri10ge_priv *)0) 
#line 4192 
                                        goto return_label; else ;
  
#line 4194 
  cancel_work_sync(& mgp->watchdog_work);
  
#line 4195 
  netdev = mgp->dev;
  
#line 4196 
  ldv_unregister_netdev_93(netdev);
  
#line 4199 
  myri10ge_teardown_dca(mgp);
  
#line 4201 
  myri10ge_dummy_rdma(mgp,0);
  
#line 4204 
  pci_restore_state(pdev);
  
#line 4206 
  iounmap((void volatile *)mgp->sram);
  
#line 4207 
  arch_phys_wc_del(mgp->wc_cookie);
  
#line 4208 
  myri10ge_free_slices(mgp);
  
#line 4209 
  kfree((void const *)mgp->msix_vectors);
  
#line 4210 
  dma_free_attrs(& pdev->dev,8UL,(void *)mgp->cmd,mgp->cmd_bus,(struct dma_attrs *)0);
  
#line 4213 
  set_fw_name(mgp,(char *)0,(_Bool)0);
  
#line 4214 
  ldv_free_netdev_94(netdev);
  
#line 4215 
  pci_disable_device(pdev);
  return_label: 
#line 4216 
                return;
}


#line 4221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct pci_device_id const myri10ge_pci_tbl[3U] = {{.vendor = 5313U, .device = 8U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5313U, .device = 9U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 4228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
struct pci_device_id const __mod_pci__myri10ge_pci_tbl_device_table[3U];

#line 4230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct pci_driver myri10ge_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "myri10ge", .id_table = (struct pci_device_id const *)(& myri10ge_pci_tbl), .probe = & myri10ge_probe, .remove = & myri10ge_remove, .suspend = & myri10ge_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & myri10ge_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 4243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_notify_dca(struct notifier_block *nb, unsigned long event, void *p)
{
  int __retres;
  
#line 4245 
  int err = driver_for_each_device(& myri10ge_driver.driver,(struct device *)0,(void *)(& event),& myri10ge_notify_dca_device);
  
#line 4249 
  if (err != 0) {
    
#line 4250 
    __retres = 32770;
    
#line 4250 
    goto return_label;
  }
  else ;
  
#line 4251 
  __retres = 0;
  return_label: 
#line 4251 
                return __retres;
}


#line 4254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static struct notifier_block myri10ge_dca_notifier = {.notifier_call = & myri10ge_notify_dca, .next = (struct notifier_block *)0, .priority = 0};

#line 4261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static int myri10ge_init_module(void)
{
  int tmp;
  
#line 4263 
  printk("\001",(char *)"1.5.3-1.534");
  
#line 4265 
  if (myri10ge_rss_hash > 5) {
    
#line 4266 
    printk("\001",myri10ge_rss_hash);
    
#line 4268 
    myri10ge_rss_hash = 4;
  }
  else ;
  
#line 4271 
  dca_register_notify(& myri10ge_dca_notifier);
  
#line 4273 
  if (myri10ge_max_slices > 32) 
#line 4274 
                                myri10ge_max_slices = 32; else ;
  
#line 4276 
  tmp = ldv___pci_register_driver_95(& myri10ge_driver,& __this_module,"myri10ge");
  
#line 4276 
  return tmp;
}


#line 4281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/myricom/myri10ge/myri10ge.c"
static void myri10ge_cleanup_module(void)
{
  
#line 4284 
  dca_unregister_notify(& myri10ge_dca_notifier);
  
#line 4286 
  ldv_pci_unregister_driver_96(& myri10ge_driver);
  
#line 4287 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int (*ldv_emg_alias_eth_validate_addr_11)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_4)(struct net_device *) = & ethtool_op_get_link;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
struct pci_driver *ldv_emg_alias_myri10ge_driver_2 = & myri10ge_driver;

#line 61 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 62 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 63 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_set_mac_address_21(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 76 
  tmp = myri10ge_set_mac_address(arg0,arg1);
  
#line 76 
  return tmp;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_get_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 81 
  tmp = myri10ge_get_settings(arg0,arg1);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_get_strings_6(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 86 
  myri10ge_get_strings(arg0,arg1,arg2);
  
#line 87 
  return;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_remove_4(struct pci_dev *arg0)
{
  
#line 91 
  myri10ge_remove(arg0);
  
#line 92 
  return;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_myri10ge_init_module(void)
{
  int tmp;
  
#line 96 
  tmp = myri10ge_init_module();
  
#line 96 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_get_ringparam_16(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 100 
  myri10ge_get_ringparam(arg0,arg1);
  
#line 101 
  return;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_myri10ge_get_stats_8(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 105 
  tmp = myri10ge_get_stats(arg0,arg1);
  
#line 105 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_myri10ge_cleanup_module(void)
{
  
#line 110 
  myri10ge_cleanup_module();
  
#line 111 
  return;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 114 
  tmp = myri10ge_open(arg0);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_set_pauseparam_22(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 119 
  tmp = myri10ge_set_pauseparam(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_resume_5(struct pci_dev *arg0)
{
  int tmp;
  
#line 124 
  tmp = myri10ge_resume(arg0);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_get_ethtool_stats_10(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 129 
  myri10ge_get_ethtool_stats(arg0,arg1,arg2);
  
#line 130 
  return;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_suspend_3(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 134 
  tmp = myri10ge_suspend(arg0,arg1);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_get_drvinfo_13(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 139 
  myri10ge_get_drvinfo(arg0,arg1);
  
#line 140 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
enum netdev_tx ldv_emg_wrapper_myri10ge_xmit_20(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 144 
  tmp = myri10ge_xmit(arg0,arg1);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_change_mtu_7(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 149 
  tmp = myri10ge_change_mtu(arg0,arg1);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_busy_poll_14(struct napi_struct *arg0)
{
  int tmp;
  
#line 154 
  tmp = myri10ge_busy_poll(arg0);
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_set_msglevel_15(struct net_device *arg0, unsigned int arg1)
{
  
#line 159 
  myri10ge_set_msglevel(arg0,arg1);
  
#line 160 
  return;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
unsigned int ldv_emg_wrapper_myri10ge_get_msglevel_19(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 164 
  tmp = myri10ge_get_msglevel(arg0);
  
#line 164 
  return tmp;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 169 
  tmp = myri10ge_close(arg0);
  
#line 169 
  return tmp;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_get_sset_count_12(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 174 
  tmp = myri10ge_get_sset_count(arg0,arg1);
  
#line 174 
  return tmp;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_set_multicast_list_18(struct net_device *arg0)
{
  
#line 179 
  myri10ge_set_multicast_list(arg0);
  
#line 180 
  return;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_get_coalesce_9(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 184 
  tmp = myri10ge_get_coalesce(arg0,arg1);
  
#line 184 
  return tmp;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_phys_id_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 189 
  tmp = myri10ge_phys_id(arg0,arg1);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_set_coalesce_17(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 194 
  tmp = myri10ge_set_coalesce(arg0,arg1);
  
#line 194 
  return tmp;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
enum irqreturn ldv_emg_wrapper_myri10ge_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 199 
  tmp = myri10ge_intr(arg0,arg1);
  
#line 199 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
void ldv_emg_wrapper_myri10ge_get_pauseparam_3(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 204 
  myri10ge_get_pauseparam(arg0,arg1);
  
#line 205 
  return;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
int ldv_emg_wrapper_myri10ge_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 209 
  tmp = myri10ge_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 209 
  return tmp;
}


#line 228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 232 
  ret = ldv_is_err(ptr);
  
#line 233 
  __retres = (_Bool)(ret != 0L);
  
#line 233 
  return __retres;
}


#line 267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 270 
  ldv_atomic_inc(v);
  
#line 271 
  return;
}


#line 546  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 549 
  tmp = ldv_kmalloc(size,flags);
  
#line 549 
  return tmp;
}


#line 560  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 563 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 563 
  return tmp;
}


#line 567  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 570 
  tmp = ldv_kzalloc(size,flags);
  
#line 570 
  return tmp;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 755 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 757 
  spin_lock(lock);
  
#line 758 
  return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_spin_trylock_62(spinlock_t *lock)
{
  int __retres;
  
#line 775 
  ldv_func_ret_type ldv_func_res = spin_trylock(lock);
  
#line 777 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 779 
  if (is_spin_held_by_another_thread != 0) {
    
#line 782 
    __retres = 0;
    
#line 782 
    goto return_label;
  }
  else {
    
#line 785 
    ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
    
#line 787 
    __retres = 1;
    
#line 787 
    goto return_label;
  }
  
#line 790 
  __retres = ldv_func_res;
  return_label: 
#line 790 
                return __retres;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 798 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 800 
  spin_unlock(lock);
  
#line 801 
  return;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_lock_73(spinlock_t *lock)
{
  
#line 898 
  ldv_spin_model_lock((char *)"lock_of_myri10ge_slice_state");
  
#line 900 
  spin_lock(lock);
  
#line 901 
  return;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_unlock_74(spinlock_t *lock)
{
  
#line 908 
  ldv_spin_model_unlock((char *)"lock_of_myri10ge_slice_state");
  
#line 910 
  spin_unlock(lock);
  
#line 911 
  return;
}


#line 914  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 918 
  ldv_spin_model_lock((char *)"lock_of_myri10ge_slice_state");
  
#line 920 
  spin_lock(lock);
  
#line 921 
  return;
}


#line 924  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 928 
  ldv_spin_model_unlock((char *)"lock_of_myri10ge_slice_state");
  
#line 930 
  spin_unlock(lock);
  
#line 931 
  return;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 938 
  ldv_spin_model_lock((char *)"lock_of_myri10ge_slice_state");
  
#line 940 
  spin_lock_bh(lock);
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 948 
  ldv_spin_model_unlock((char *)"lock_of_myri10ge_slice_state");
  
#line 950 
  spin_unlock_bh(lock);
  
#line 951 
  return;
}


#line 954  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 958 
  ldv_spin_model_lock((char *)"lock_of_myri10ge_slice_state");
  
#line 960 
  spin_lock_bh(lock);
  
#line 961 
  return;
}


#line 964  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 968 
  ldv_spin_model_unlock((char *)"lock_of_myri10ge_slice_state");
  
#line 970 
  spin_unlock_bh(lock);
  
#line 971 
  return;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static bool ldv_schedule_work_81(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 978 
  tmp = ldv_emg_schedule_work(work);
  
#line 978 
  __retres = tmp != 0;
  
#line 978 
  return __retres;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_request_irq_82(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 986 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 986 
  return tmp;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_free_irq_83(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 994 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 995 
  return;
}


#line 998  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_request_irq_84(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1002 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1002 
  return tmp;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1010 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1018 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1019 
  return;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_del_timer_sync_87(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1026 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1026 
  return tmp;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static bool ldv_schedule_work_88(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1034 
  tmp = ldv_emg_schedule_work(work);
  
#line 1034 
  __retres = tmp != 0;
  
#line 1034 
  return __retres;
}


#line 1038  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1042 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1042 
  return tmp;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_90(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1050 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1050 
  return tmp;
}


#line 1054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv_register_netdev_91(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1058 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1058 
  return tmp;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_free_netdev_92(struct net_device *ldv_func_arg1)
{
  
#line 1066 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1067 
  return;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_unregister_netdev_93(struct net_device *ldv_func_arg1)
{
  
#line 1074 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1075 
  return;
}


#line 1078  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_free_netdev_94(struct net_device *ldv_func_arg1)
{
  
#line 1082 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1083 
  return;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static int ldv___pci_register_driver_95(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1090 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1090 
  return tmp;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/weaver/.tmp_myri10ge.c.aux"
static void ldv_pci_unregister_driver_96(struct pci_driver *ldv_func_arg1)
{
  
#line 1098 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1099 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 81 
int main(void);


#line 82 
void *ldv_timer_scenario_15(void *arg0);


#line 83 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 84 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 86 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 88 
void *ldv_pci_scenario_14(void *arg0);


#line 89 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 90 
void *ldv_interrupt_scenario_16(void *arg0);


#line 92 
void *ldv_initialization_1(void *arg0);


#line 93 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 94 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 99 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 100 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 115 
  tmp = ldv_undef_int();
  
#line 115 
  switch (tmp) {
    case 0: 
#line 116 
    ;
    
#line 117 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 118 
    cf_arg_13->arg0 = arg0;
    
#line 119 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 120 
    __VERIFIER_assume(ret == 0);
    
#line 121 
    goto ldv_44715;
    default: 
#line 123 
    ;
    
#line 123 
    __VERIFIER_assume(0);
  }
  ldv_44715: 
#line 124 
  ;
  
#line 125 
  return;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 135 
  ldv_9_timer_list = arg0;
  
#line 139 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 140 
  ;
  
#line 140 
  __retres = 0;
  
#line 140 
  return __retres;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 151 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_myri10ge_driver_2;
  
#line 155 
  tmp_0 = ldv_undef_int();
  
#line 155 
  if (tmp_0 != 0) {
    
#line 157 
    ldv_7_pci_driver = arg0;
    
#line 161 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 165 
    __retres = 0;
    
#line 165 
    goto return_label;
  }
  else {
    int tmp;
    
#line 172 
    tmp = ldv_undef_int_negative();
    
#line 172 
    __retres = tmp;
    
#line 172 
    goto return_label;
  }
  return_label: 
#line 155 
                return __retres;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 185 
  ldv_initialize();
  
#line 188 
  ldv_initialization_1((void *)0);
  
#line 190 
  __retres = 0;
  
#line 190 
  return __retres;
}


#line 195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 200 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 205 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 206 
    ldv_15_container = data->arg0;
    
#line 207 
    ldv_free((void *)data);
  }
  else ;
  
#line 212 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 214 
    ldv_switch_to_interrupt_context();
    
#line 216 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 218 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 227 
  __retres = (void *)0;
  
#line 227 
  goto return_label;
  
#line 229 
  __retres = (void *)0;
  return_label: 
#line 229 
                return __retres;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_16 *cf_arg_16;
  int tmp;
  
#line 237 
  tmp = ldv_undef_int();
  
#line 237 
  switch (tmp) {
    case 0: 
#line 238 
    ;
    
#line 239 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_16 *)ldv_xmalloc(32UL);
    
#line 240 
    cf_arg_16->arg0 = arg0;
    
#line 241 
    cf_arg_16->arg1 = arg1;
    
#line 242 
    cf_arg_16->arg2 = arg2;
    
#line 243 
    cf_arg_16->arg3 = arg3;
    
#line 244 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 245 
    __VERIFIER_assume(ret == 0);
    
#line 246 
    goto ldv_44748;
    default: 
#line 248 
    ;
    
#line 248 
    __VERIFIER_assume(0);
  }
  ldv_44748: 
#line 249 
  ;
  
#line 250 
  return;
}


#line 254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  int tmp;
  
#line 257 
  tmp = ldv_undef_int();
  
#line 257 
  switch (tmp) {
    case 0: 
#line 258 
    ;
    
#line 259 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 260 
    __VERIFIER_assume(ret == 0);
    
#line 261 
    goto ldv_44756;
    default: 
#line 263 
    ;
    
#line 263 
    __VERIFIER_assume(0);
  }
  ldv_44756: 
#line 264 
  ;
  
#line 265 
  return;
}


#line 269  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 276 
  tmp_0 = ldv_undef_int();
  
#line 276 
  if (tmp_0 != 0) {
    
#line 278 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 282 
    __retres = ldv_5_netdev;
    
#line 282 
    goto return_label;
  }
  else {
    
#line 289 
    __retres = (struct net_device *)0;
    
#line 289 
    goto return_label;
  }
  return_label: 
#line 276 
                return __retres;
}


#line 299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_14 *cf_arg_14;
  int tmp;
  
#line 302 
  tmp = ldv_undef_int();
  
#line 302 
  switch (tmp) {
    case 0: 
#line 303 
    ;
    
#line 304 
    cf_arg_14 = (struct ldv_struct_pci_scenario_14 *)ldv_xmalloc(16UL);
    
#line 305 
    cf_arg_14->arg0 = arg0;
    
#line 306 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_pci_scenario_14,(void *)cf_arg_14);
    
#line 307 
    __VERIFIER_assume(ret == 0);
    
#line 308 
    goto ldv_44770;
    default: 
#line 310 
    ;
    
#line 310 
    __VERIFIER_assume(0);
  }
  ldv_44770: 
#line 311 
  ;
  
#line 312 
  return;
}


#line 316  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 321 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_myri10ge_intr_2;
  
#line 326 
  tmp_0 = ldv_undef_int();
  
#line 326 
  if (tmp_0 != 0) {
    
#line 328 
    ldv_12_line = (int)arg0;
    
#line 329 
    ldv_12_callback = arg1;
    
#line 330 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 331 
    ldv_12_data = arg4;
    
#line 335 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 339 
    __retres = 0;
    
#line 339 
    goto return_label;
  }
  else {
    int tmp;
    
#line 346 
    tmp = ldv_undef_int_negative();
    
#line 346 
    __retres = tmp;
    
#line 346 
    goto return_label;
  }
  return_label: 
#line 326 
                return __retres;
}


#line 356  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 362 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_myri10ge_intr_2;
  
#line 365 
  struct ldv_struct_interrupt_scenario_16 *data = (struct ldv_struct_interrupt_scenario_16 *)arg0;
  
#line 370 
  if (data != (struct ldv_struct_interrupt_scenario_16 *)0) {
    
#line 371 
    ldv_16_line = data->arg0;
    
#line 372 
    ldv_16_callback = data->arg1;
    
#line 373 
    ldv_16_thread = data->arg2;
    
#line 374 
    ldv_16_data = data->arg3;
    
#line 375 
    ldv_free((void *)data);
  }
  else ;
  
#line 381 
  ldv_switch_to_interrupt_context();
  
#line 383 
  ldv_16_ret_val = ldv_emg_wrapper_myri10ge_intr_2(ldv_16_line,ldv_16_data);
  
#line 385 
  ldv_switch_to_process_context();
  
#line 388 
  tmp = ldv_undef_int();
  
#line 388 
  if (tmp != 0) {
    
#line 390 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 394 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 396 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 403 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 412 
  __retres = (void *)0;
  
#line 412 
  goto return_label;
  
#line 414 
  __retres = (void *)0;
  return_label: 
#line 414 
                return __retres;
}


#line 419  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  int ldv_13_ldv_param_1_12;
  struct ethtool_ringparam *ldv_13_ldv_param_1_16;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_18;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_3;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_13;
  unsigned long long *ldv_13_ldv_param_2_10;
  unsigned char *ldv_13_ldv_param_2_15;
  struct rtnl_link_stats64 *ldv_13_ldv_param_1_7;
  int ldv_13_ldv_param_1_6;
  struct ethtool_coalesce *ldv_13_ldv_param_1_8;
  struct sk_buff *ldv_13_ldv_param_0_11;
  struct ethtool_coalesce *ldv_13_ldv_param_1_17;
  struct ethtool_cmd *ldv_13_ldv_param_1_2;
  enum ethtool_phys_id_state *ldv_13_ldv_param_1_4;
  unsigned int ldv_13_ldv_param_1_5;
  void *ldv_13_ldv_param_1_20;
  struct net_device *ldv_13_container;
  struct ethtool_stats *ldv_13_ldv_param_1_9;
  struct napi_struct *ldv_13_ldv_param_0_19;
  unsigned int ldv_13_ldv_param_1_14;
  int tmp_14;
  
#line 443 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 448 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 449 
    ldv_13_container = data->arg0;
    
#line 450 
    ldv_free((void *)data);
  }
  else ;
  
#line 458 
  goto ldv_call_13;
  
#line 460 
  __retres = (void *)0;
  
#line 460 
  goto return_label;
  ldv_call_13: 
#line 463 
  ;
  
#line 466 
  tmp_14 = ldv_undef_int();
  
#line 466 
  if (tmp_14 != 0) {
    int tmp_0;
    
#line 468 
    ldv_13_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 471 
    tmp_0 = ldv_undef_int();
    
#line 471 
    switch (tmp_0) {
      case 1: 
#line 472 
      ;
      
#line 475 
      ldv_emg_wrapper_myri10ge_get_settings_2(ldv_13_container,ldv_13_ldv_param_1_2);
      
#line 478 
      goto ldv_44828;
      case 2: 
#line 480 
      ;
      
#line 483 
      ldv_emg_wrapper_myri10ge_set_multicast_list_18(ldv_13_container);
      
#line 486 
      goto ldv_44828;
      case 3: 
#line 488 
      ;
      
#line 490 
      ldv_13_ldv_param_1_20 = ldv_xmalloc_unknown_size(0UL);
      
#line 495 
      ldv_emg_wrapper_myri10ge_set_mac_address_21(ldv_13_container,ldv_13_ldv_param_1_20);
      
#line 499 
      ldv_free(ldv_13_ldv_param_1_20);
      
#line 502 
      goto ldv_44828;
      case 4: 
#line 504 
      ;
      
#line 506 
      ldv_13_ldv_param_0_19 = (struct napi_struct *)ldv_xmalloc_unknown_size(0UL);
      
#line 511 
      ldv_emg_wrapper_myri10ge_busy_poll_14(ldv_13_ldv_param_0_19);
      
#line 515 
      ldv_free((void *)ldv_13_ldv_param_0_19);
      
#line 518 
      goto ldv_44828;
      case 5: 
#line 520 
      ;
      
#line 523 
      ldv_emg_wrapper_myri10ge_get_msglevel_19(ldv_13_container);
      
#line 526 
      goto ldv_44828;
      case 6: 
#line 528 
      ;
      
#line 530 
      ldv_13_ldv_param_1_18 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 535 
      ldv_emg_wrapper_myri10ge_set_pauseparam_22(ldv_13_container,ldv_13_ldv_param_1_18);
      
#line 539 
      ldv_free((void *)ldv_13_ldv_param_1_18);
      
#line 542 
      goto ldv_44828;
      case 7: 
#line 544 
      ;
      
#line 546 
      ldv_13_ldv_param_1_17 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 551 
      ldv_emg_wrapper_myri10ge_set_coalesce_17(ldv_13_container,ldv_13_ldv_param_1_17);
      
#line 555 
      ldv_free((void *)ldv_13_ldv_param_1_17);
      
#line 558 
      goto ldv_44828;
      case 8: 
#line 560 
      ;
      
#line 562 
      ldv_13_ldv_param_1_16 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 567 
      ldv_emg_wrapper_myri10ge_get_ringparam_16(ldv_13_container,ldv_13_ldv_param_1_16);
      
#line 571 
      ldv_free((void *)ldv_13_ldv_param_1_16);
      
#line 574 
      goto ldv_44828;
      case 9: 
#line 576 
      ;
      
#line 578 
      ldv_13_ldv_param_2_15 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 583 
      ldv_emg_wrapper_myri10ge_get_strings_6(ldv_13_container,ldv_13_ldv_param_1_14,ldv_13_ldv_param_2_15);
      
#line 587 
      ldv_free((void *)ldv_13_ldv_param_2_15);
      
#line 590 
      goto ldv_44828;
      case 10: 
#line 592 
      ;
      
#line 594 
      ldv_13_ldv_param_1_13 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 599 
      ldv_emg_wrapper_myri10ge_get_drvinfo_13(ldv_13_container,ldv_13_ldv_param_1_13);
      
#line 603 
      ldv_free((void *)ldv_13_ldv_param_1_13);
      
#line 606 
      goto ldv_44828;
      case 11: 
#line 608 
      ;
      
#line 614 
      ldv_emg_wrapper_myri10ge_get_sset_count_12(ldv_13_container,ldv_13_ldv_param_1_12);
      
#line 620 
      goto ldv_44828;
      case 12: 
#line 622 
      ;
      
#line 624 
      ldv_13_ldv_param_0_11 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 629 
      ldv_emg_wrapper_myri10ge_xmit_20(ldv_13_ldv_param_0_11,ldv_13_container);
      
#line 633 
      ldv_free((void *)ldv_13_ldv_param_0_11);
      
#line 636 
      goto ldv_44828;
      case 13: 
#line 638 
      ;
      
#line 641 
      (*ldv_emg_alias_eth_validate_addr_11)(ldv_13_container);
      
#line 644 
      goto ldv_44828;
      case 14: 
#line 646 
      ;
      
#line 648 
      ldv_13_ldv_param_2_10 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 649 
      ldv_13_ldv_param_1_9 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 654 
      ldv_emg_wrapper_myri10ge_get_ethtool_stats_10(ldv_13_container,ldv_13_ldv_param_1_9,ldv_13_ldv_param_2_10);
      
#line 658 
      ldv_free((void *)ldv_13_ldv_param_2_10);
      
#line 659 
      ldv_free((void *)ldv_13_ldv_param_1_9);
      
#line 662 
      goto ldv_44828;
      case 15: 
#line 664 
      ;
      
#line 666 
      ldv_13_ldv_param_1_8 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 671 
      ldv_emg_wrapper_myri10ge_get_coalesce_9(ldv_13_container,ldv_13_ldv_param_1_8);
      
#line 675 
      ldv_free((void *)ldv_13_ldv_param_1_8);
      
#line 678 
      goto ldv_44828;
      case 16: 
#line 680 
      ;
      
#line 682 
      ldv_13_ldv_param_1_7 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 687 
      ldv_emg_wrapper_myri10ge_get_stats_8(ldv_13_container,ldv_13_ldv_param_1_7);
      
#line 691 
      ldv_free((void *)ldv_13_ldv_param_1_7);
      
#line 694 
      goto ldv_44828;
      case 17: 
#line 696 
      ;
      
#line 702 
      ldv_emg_wrapper_myri10ge_change_mtu_7(ldv_13_container,ldv_13_ldv_param_1_6);
      
#line 708 
      goto ldv_44828;
      case 18: 
#line 710 
      ;
      
#line 716 
      ldv_emg_wrapper_myri10ge_set_msglevel_15(ldv_13_container,ldv_13_ldv_param_1_5);
      
#line 722 
      goto ldv_44828;
      case 19: 
#line 724 
      ;
      
#line 726 
      ldv_13_ldv_param_1_4 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 731 
      ldv_emg_wrapper_myri10ge_phys_id_5(ldv_13_container,*ldv_13_ldv_param_1_4);
      
#line 735 
      ldv_free((void *)ldv_13_ldv_param_1_4);
      
#line 738 
      goto ldv_44828;
      case 20: 
#line 740 
      ;
      
#line 743 
      (*ldv_emg_alias_ethtool_op_get_link_4)(ldv_13_container);
      
#line 746 
      goto ldv_44828;
      case 21: 
#line 748 
      ;
      
#line 750 
      ldv_13_ldv_param_1_3 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 755 
      ldv_emg_wrapper_myri10ge_get_pauseparam_3(ldv_13_container,ldv_13_ldv_param_1_3);
      
#line 759 
      ldv_free((void *)ldv_13_ldv_param_1_3);
      
#line 762 
      goto ldv_44828;
      default: 
#line 764 
      ;
      
#line 764 
      __VERIFIER_assume(0);
    }
    ldv_44828: 
#line 767 
    ;
    
#line 767 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 774 
    goto ldv_call_13;
  }
  else {
    
#line 782 
    __retres = (void *)0;
    
#line 782 
    goto return_label;
  }
  
#line 785 
  __retres = (void *)0;
  return_label: 
#line 785 
                return __retres;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 797 
  tmp = ldv_undef_int();
  
#line 797 
  if (tmp != 0) {
    
#line 799 
    ldv_8_work_struct = arg0;
    
#line 803 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 805 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 810 
    __retres = (_Bool)1;
    
#line 810 
    goto return_label;
  }
  else {
    
#line 817 
    __retres = (_Bool)0;
    
#line 817 
    goto return_label;
  }
  return_label: 
#line 797 
                return __retres;
}


#line 827  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 834 
  ldv_1_ret = ldv_emg_myri10ge_init_module();
  
#line 835 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 838 
  tmp = ldv_undef_int();
  
#line 838 
  if (tmp != 0) {
    
#line 840 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 844 
    __retres = (void *)0;
    
#line 844 
    goto return_label;
  }
  else {
    
#line 848 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 853 
    ldv_emg_myri10ge_cleanup_module();
    
#line 857 
    __retres = (void *)0;
    
#line 857 
    goto return_label;
  }
  
#line 860 
  __retres = (void *)0;
  return_label: 
#line 860 
                return __retres;
}


#line 865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 868 
  tmp = ldv_undef_int();
  
#line 868 
  switch (tmp) {
    case 0: 
#line 869 
    ;
    
#line 870 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 871 
    __VERIFIER_assume(ret == 0);
    
#line 872 
    goto ldv_44864;
    default: 
#line 874 
    ;
    
#line 874 
    __VERIFIER_assume(0);
  }
  ldv_44864: 
#line 875 
  ;
  
#line 876 
  return;
}


#line 880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_14 *cf_arg_14;
  int tmp;
  
#line 883 
  tmp = ldv_undef_int();
  
#line 883 
  switch (tmp) {
    case 0: 
#line 884 
    ;
    
#line 885 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 886 
    __VERIFIER_assume(ret == 0);
    
#line 887 
    goto ldv_44872;
    default: 
#line 889 
    ;
    
#line 889 
    __VERIFIER_assume(0);
  }
  ldv_44872: 
#line 890 
  ;
  
#line 891 
  return;
}


#line 895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 898 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_myri10ge_driver_2;
  
#line 901 
  ldv_10_pci_driver = arg0;
  
#line 905 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 909 
  goto return_label;
  return_label: 
#line 911 
                return;
}


#line 916  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 920 
  int ldv_11_ret = ldv_undef_int();
  
#line 923 
  ldv_11_ret = ldv_undef_int();
  
#line 926 
  tmp_3 = ldv_undef_int();
  
#line 926 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 928 
    ldv_11_netdev = arg0;
    
#line 933 
    ldv_11_ret = ldv_emg_wrapper_myri10ge_open_2(ldv_11_netdev);
    
#line 936 
    tmp_1 = ldv_undef_int();
    
#line 936 
    if (tmp_1 != 0) {
      
#line 938 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 942 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 946 
      __retres = 0;
      
#line 946 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 953 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 954 
      ldv_failed_register_netdev();
      
#line 955 
      tmp_0 = ldv_undef_int_negative();
      
#line 955 
      __retres = tmp_0;
      
#line 955 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 963 
    ldv_failed_register_netdev();
    
#line 964 
    tmp_2 = ldv_undef_int_negative();
    
#line 964 
    __retres = tmp_2;
    
#line 964 
    goto return_label;
  }
  return_label: 
#line 926 
                return __retres;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 980 
  ldv_6_netdev = arg0;
  
#line 985 
  ldv_emg_wrapper_myri10ge_close_2(ldv_6_netdev);
  
#line 989 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 993 
  goto return_label;
  return_label: 
#line 995 
                return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1006 
  ldv_3_line = (int)arg0;
  
#line 1010 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1014 
  goto return_label;
  return_label: 
#line 1016 
                return;
}


#line 1021  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1024 
  tmp = ldv_undef_int();
  
#line 1024 
  switch (tmp) {
    case 0: 
#line 1025 
    ;
    
#line 1026 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1027 
    cf_arg_15->arg0 = arg0;
    
#line 1028 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 1029 
    __VERIFIER_assume(ret == 0);
    
#line 1030 
    goto ldv_44898;
    default: 
#line 1032 
    ;
    
#line 1032 
    __VERIFIER_assume(0);
  }
  ldv_44898: 
#line 1033 
  ;
  
#line 1034 
  return;
}


#line 1038  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_14(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_14_resource_1;
  struct pci_device_id *ldv_14_ldv_param_1_2;
  struct pm_message ldv_14_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1043 
  struct pci_driver *ldv_14_container = ldv_emg_alias_myri10ge_driver_2;
  
#line 1044 
  int ldv_14_ret = ldv_undef_int();
  
#line 1047 
  struct ldv_struct_pci_scenario_14 *data = (struct ldv_struct_pci_scenario_14 *)arg0;
  
#line 1051 
  ldv_14_ret = ldv_undef_int();
  
#line 1054 
  if (data != (struct ldv_struct_pci_scenario_14 *)0) {
    
#line 1055 
    ldv_14_container = data->arg0;
    
#line 1056 
    ldv_free((void *)data);
  }
  else ;
  
#line 1067 
  goto ldv_main_14;
  
#line 1069 
  __retres = (void *)0;
  
#line 1069 
  goto return_label;
  ldv_main_14: 
#line 1072 
  ;
  
#line 1075 
  tmp_2 = ldv_undef_int();
  
#line 1075 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1077 
    ldv_14_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1082 
    ldv_pre_probe();
    
#line 1084 
    ldv_14_ret = ldv_emg_wrapper_myri10ge_probe_2(ldv_14_resource_1,ldv_14_ldv_param_1_2);
    
#line 1086 
    ldv_14_ret = ldv_post_probe(ldv_14_ret);
    
#line 1090 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 1093 
    tmp_1 = ldv_undef_int();
    
#line 1093 
    if (tmp_1 != 0) {
      
#line 1095 
      __VERIFIER_assume(ldv_14_ret == 0);
      
#line 1102 
      goto ldv_call_14;
    }
    else {
      
#line 1106 
      __VERIFIER_assume(ldv_14_ret != 0);
      
#line 1113 
      goto ldv_main_14;
    }
  }
  else {
    
#line 1125 
    __retres = (void *)0;
    
#line 1125 
    goto return_label;
  }
  
#line 1128 
  __retres = (void *)0;
  
#line 1128 
  goto return_label;
  ldv_call_14: 
#line 1131 
  ;
  
#line 1134 
  tmp_3 = ldv_undef_int();
  
#line 1134 
  switch (tmp_3) {
    case 1: 
#line 1135 
    ;
    
#line 1144 
    goto ldv_call_14;
    case 2: 
#line 1147 
    ;
    
#line 1150 
    ldv_14_ret = ldv_emg_wrapper_myri10ge_suspend_3(ldv_14_resource_1,ldv_14_resource_0);
    
#line 1152 
    ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    
#line 1156 
    if (ldv_14_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1158 
      ldv_14_ret = (*(ldv_14_container->suspend_late))(ldv_14_resource_1,ldv_14_resource_0);
      
#line 1160 
      ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    }
    else 
#line 1162 
         ldv_14_ret = ldv_undef_int();
    
#line 1167 
    if (ldv_14_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1169 
      (*(ldv_14_container->resume_early))(ldv_14_resource_1); else ;
    
#line 1175 
    ldv_emg_wrapper_myri10ge_resume_5(ldv_14_resource_1);
    
#line 1182 
    goto ldv_call_14;
    case 3: 
#line 1185 
    ;
    
#line 1187 
    if (ldv_14_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 1189 
      (*(ldv_14_container->shutdown))(ldv_14_resource_1); else ;
    
#line 1195 
    ldv_emg_wrapper_myri10ge_remove_4(ldv_14_resource_1);
    
#line 1202 
    goto ldv_main_14;
    default: 
#line 1205 
    ;
    
#line 1205 
    __VERIFIER_assume(0);
  }
  
#line 1208 
  __retres = (void *)0;
  return_label: 
#line 1208 
                return __retres;
}


#line 1213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1216 
  tmp = ldv_undef_int();
  
#line 1216 
  switch (tmp) {
    case 0: 
#line 1217 
    ;
    
#line 1218 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1219 
    __VERIFIER_assume(ret == 0);
    
#line 1220 
    goto ldv_44921;
    default: 
#line 1222 
    ;
    
#line 1222 
    __VERIFIER_assume(0);
  }
  ldv_44921: 
#line 1223 
  ;
  
#line 1224 
  return;
}


#line 1228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1234 
  ldv_2_netdev = arg0;
  
#line 1235 
  ldv_free((void *)ldv_2_netdev);
  
#line 1239 
  goto return_label;
  return_label: 
#line 1241 
                return;
}


#line 1246  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/myricom/myri10ge/myri10ge.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1253 
  tmp_0 = ldv_undef_int();
  
#line 1253 
  if (tmp_0 != 0) {
    
#line 1255 
    ldv_4_timer_list = arg0;
    
#line 1259 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1263 
    __retres = 0;
    
#line 1263 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1270 
    tmp = ldv_undef_int_negative();
    
#line 1270 
    __retres = tmp;
    
#line 1270 
    goto return_label;
  }
  return_label: 
#line 1253 
                return __retres;
}


