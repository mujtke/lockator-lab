/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long ulong;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_180 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_180 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_182 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_183 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_184 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_187 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_186 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_187 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_188 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_189 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_181 {
   int _pad[28U] ;
   struct __anonstruct__kill_182 _kill ;
   struct __anonstruct__timer_183 _timer ;
   struct __anonstruct__rt_184 _rt ;
   struct __anonstruct__sigchld_185 _sigchld ;
   struct __anonstruct__sigfault_186 _sigfault ;
   struct __anonstruct__sigpoll_188 _sigpoll ;
   struct __anonstruct__sigsys_189 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_181 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_196 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_199 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   struct keyring_index_key index_key ;
   struct __anonstruct_199 __anonCompField___anonunion_198_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_200 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_202 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   union __anonunion_payload_202 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_196 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_197 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_198 __anonCompField_key_53 ;
   union __anonunion_type_data_200 type_data ;
   union __anonunion_201 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_229 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_229 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_230 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_230 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_231 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_231 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_232 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_232 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_233 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_233 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_234 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_234 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_235 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_235 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_236 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_236 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_237 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_237 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_238 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_239 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_238 ifr_ifrn ;
   union __anonunion_ifr_ifru_239 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_244 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_243 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_246 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_245 {
   struct __anonstruct_246 __anonCompField___anonunion_245_69 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_245 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_247 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_247 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_251 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_250 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_255 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_255 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_256 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_256 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_259 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_259 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_260 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_261 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_262 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_262 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_264 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_263 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_264 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_263 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_279 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_279 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27186 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27186 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_284 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_285 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_288 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   u64 v64 ;
   struct __anonstruct_288 __anonCompField___anonunion_287_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_287 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_291 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_290 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_291 __anonCompField___anonstruct_290_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   struct __anonstruct_290 __anonCompField___anonunion_289_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_293 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   __wsum csum ;
   struct __anonstruct_293 __anonCompField___anonunion_292_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_294 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_289 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_292 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_294 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_295 __anonCompField_sk_buff_91 ;
   union __anonunion_296 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/mii.h"
struct mii_if_info {
   int phy_id ;
   int advertising ;
   int phy_id_mask ;
   int reg_num_mask ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_media : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) supports_gmii : 1 ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int ) ;
   void (*mdio_write)(struct net_device *, int , int , int ) ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084 
enum ldv_29337 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29337 phy_interface_t;

#line 126 
enum ldv_29390 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29390 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31100 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31101 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31100 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31101 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pcnet32_rx_head {
   __le32 base ;
   __le16 buf_length ;
   __le16 status ;
   __le32 msg_length ;
   __le32 reserved ;
};

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pcnet32_tx_head {
   __le32 base ;
   __le16 length ;
   __le16 status ;
   __le32 misc ;
   __le32 reserved ;
};

#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pcnet32_init_block {
   __le16 mode ;
   __le16 tlen_rlen ;
   u8 phys_addr[6U] ;
   __le16 reserved ;
   __le32 filter[2U] ;
   __le32 rx_ring ;
   __le32 tx_ring ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pcnet32_access {
   u16 (*read_csr)(unsigned long , int ) ;
   void (*write_csr)(unsigned long , int , u16 ) ;
   u16 (*read_bcr)(unsigned long , int ) ;
   void (*write_bcr)(unsigned long , int , u16 ) ;
   u16 (*read_rap)(unsigned long ) ;
   void (*write_rap)(unsigned long , u16 ) ;
   void (*reset)(unsigned long ) ;
};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pcnet32_private {
   struct pcnet32_init_block *init_block ;
   struct pcnet32_rx_head *rx_ring ;
   struct pcnet32_tx_head *tx_ring ;
   dma_addr_t init_dma_addr ;
   struct pci_dev *pci_dev ;
   char const *name ;
   struct sk_buff **tx_skbuff ;
   struct sk_buff **rx_skbuff ;
   dma_addr_t *tx_dma_addr ;
   dma_addr_t *rx_dma_addr ;
   struct pcnet32_access const *a ;
   spinlock_t lock ;
   unsigned int cur_rx ;
   unsigned int cur_tx ;
   unsigned int rx_ring_size ;
   unsigned int tx_ring_size ;
   unsigned int rx_mod_mask ;
   unsigned int tx_mod_mask ;
   unsigned short rx_len_bits ;
   unsigned short tx_len_bits ;
   dma_addr_t rx_ring_dma_addr ;
   dma_addr_t tx_ring_dma_addr ;
   unsigned int dirty_rx ;
   unsigned int dirty_tx ;
   struct net_device *dev ;
   struct napi_struct napi ;
   char tx_full ;
   char phycount ;
   int options ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) shared_irq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dxsuflo : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mii : 1 ;
   struct net_device *next ;
   struct mii_if_info mii_if ;
   struct timer_list watchdog_timer ;
   u32 msg_enable ;
   u32 phymask ;
   unsigned short chip_version ;
   u16 save_regs[4U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_13 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_12 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_14 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 36  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/fvtp/.tmp_pcnet32.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_115(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_116(spinlock_t *lock);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 482 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags);


#line 546 
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags);


#line 550 
static void ldv_spin_unlock_irqrestore_114(spinlock_t *lock, unsigned long flags);


#line 554 
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags);


#line 558 
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags);


#line 562 
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags);


#line 566 
static void ldv_spin_unlock_irqrestore_126(spinlock_t *lock, unsigned long flags);


#line 570 
static void ldv_spin_unlock_irqrestore_128(spinlock_t *lock, unsigned long flags);


#line 574 
static void ldv_spin_unlock_irqrestore_130(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_80(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1);


#line 126 
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1);


#line 130 
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1);


#line 134 
static void ldv___ldv_spin_lock_111(spinlock_t *ldv_func_arg1);


#line 138 
static void ldv___ldv_spin_lock_113(spinlock_t *ldv_func_arg1);


#line 142 
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1);


#line 146 
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1);


#line 150 
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1);


#line 154 
static void ldv___ldv_spin_lock_125(spinlock_t *ldv_func_arg1);


#line 158 
static void ldv___ldv_spin_lock_127(spinlock_t *ldv_func_arg1);


#line 162 
static void ldv___ldv_spin_lock_129(spinlock_t *ldv_func_arg1);


#line 170 
void ldv_spin_model_lock(char *);


#line 171 
void ldv_spin_model_unlock(char *);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static char const * const version = "pcnet32";

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_107(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_131(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_117(struct timer_list *ldv_func_arg1);


#line 252 
unsigned long round_jiffies(unsigned long);


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
extern struct resource ioport_resource;


#line 192 
struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, char const *, int);


#line 201 
void __release_region(struct resource *, resource_size_t, resource_size_t);


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char inb(int port)
{
  unsigned char value;
  
#line 321 
  ldv_inline_asm();
  
#line 320 
  return value;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outw(unsigned short value, int port)
{
  
#line 323 
  ldv_inline_asm();
  
#line 324 
  return;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned short inw(int port)
{
  unsigned short value;
  
#line 322 
  ldv_inline_asm();
  
#line 321 
  return value;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outl(unsigned int value, int port)
{
  
#line 324 
  ldv_inline_asm();
  
#line 325 
  return;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int inl(int port)
{
  unsigned int value;
  
#line 323 
  ldv_inline_asm();
  
#line 322 
  return value;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_105(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_110(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 157 
static void ldv_free_irq_120(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 651 
unsigned long probe_irq_on(void);


#line 652 
int probe_irq_off(unsigned long);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1146 
static int ldv___pci_register_driver_134(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_137(struct pci_driver *ldv_func_arg1);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_supported(struct pci_dev *hwdev, u64 mask)
{
  int tmp_0;
  struct device *tmp;
  
#line 12 
  ;
  
#line 12 
  if (hwdev != (struct pci_dev *)0) 
#line 12 
                                    tmp = & hwdev->dev; else 
#line 12 
                                                             tmp = (struct device *)0;
  
#line 12 
  tmp_0 = dma_supported(tmp,mask);
  
#line 12 
  return tmp_0;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
int mii_link_ok(struct mii_if_info *);


#line 32 
int mii_nway_restart(struct mii_if_info *);


#line 33 
int mii_ethtool_gset(struct mii_if_info *, struct ethtool_cmd *);


#line 34 
int mii_ethtool_sset(struct mii_if_info *, struct ethtool_cmd *);


#line 40 
int generic_mii_ioctl(struct mii_if_info *, struct mii_ioctl_data *, int, unsigned int *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 449 
void __napi_complete(struct napi_struct *);


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_104(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_133(struct net_device *ldv_func_arg1);


#line 2213 
static void ldv_free_netdev_136(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45687;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45687;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45687;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45687;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45687: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_45693;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45697;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45697;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45697;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45697;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45697: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_45693;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45706;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45706;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45706;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45706;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45706: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_45693;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45715;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45715;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45715;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45715;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45715: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_45693;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_45693;
    }
    ldv_45693: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_45725;
  ldv_45724: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_45725: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_45724; else 
#line 3294 
                                                   goto ldv_45726;
  ldv_45726: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_103(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_132(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_135(struct net_device *ldv_func_arg1);


#line 3819 
void netdev_printk(char const *, struct net_device const *, char const * , ...);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 46 
int eth_change_mtu(struct net_device *, int);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_102(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct pci_device_id const pcnet32_pci_tbl[4U] = {{.vendor = 4130U, .device = 8193U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4130U, .device = 8192U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4131U, .device = 8192U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
struct pci_device_id const __mod_pci__pcnet32_pci_tbl_device_table[4U];

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int cards_found;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static unsigned int pcnet32_portlist[5U] = {768U, 800U, 832U, 864U, 0U};

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_debug;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int tx_start = 1;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32vlb;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct net_device *pcnet32_dev;

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int max_interrupt_work = 2;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int rx_copybreak = 200;

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static unsigned char const options_mapping[16U] = {(unsigned char)4U, (unsigned char)0U, (unsigned char)0U, (unsigned char)4U, (unsigned char)129U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)3U, (unsigned char)131U, (unsigned char)3U, (unsigned char)1U, (unsigned char)67U, (unsigned char)195U, (unsigned char)4U};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static char const pcnet32_gstrings_test[1U][32U] = {{(char)'L', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}};

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int options[8U];

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int full_duplex[8U];

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int homepna[8U];

#line 308 
static int pcnet32_probe_pci(struct pci_dev *pdev, struct pci_device_id const *ent);


#line 309 
static int pcnet32_probe1(unsigned long ioaddr, int shared, struct pci_dev *pdev);


#line 310 
static int pcnet32_open(struct net_device *dev);


#line 311 
static int pcnet32_init_ring(struct net_device *dev);


#line 312 
static netdev_tx_t pcnet32_start_xmit(struct sk_buff *skb, struct net_device *dev);


#line 314 
static void pcnet32_tx_timeout(struct net_device *dev);


#line 315 
static irqreturn_t pcnet32_interrupt(int irq, void *dev_id);


#line 316 
static int pcnet32_close(struct net_device *dev);


#line 317 
static struct net_device_stats *pcnet32_get_stats(struct net_device *dev);


#line 318 
static void pcnet32_load_multicast(struct net_device *dev);


#line 319 
static void pcnet32_set_multicast_list(struct net_device *dev);


#line 320 
static int pcnet32_ioctl(struct net_device *dev, struct ifreq *rq, int cmd);


#line 321 
static void pcnet32_watchdog(struct net_device *dev);


#line 322 
static int mdio_read(struct net_device *dev, int phy_id, int reg_num);


#line 323 
static void mdio_write(struct net_device *dev, int phy_id, int reg_num, int val);


#line 325 
static void pcnet32_restart(struct net_device *dev, unsigned int csr0_bits);


#line 326 
static void pcnet32_ethtool_test(struct net_device *dev, struct ethtool_test *test, u64 *data);


#line 328 
static int pcnet32_loopback_test(struct net_device *dev, uint64_t *data1);


#line 329 
static int pcnet32_get_regs_len(struct net_device *dev);


#line 330 
static void pcnet32_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *ptr);


#line 332 
static void pcnet32_purge_tx_ring(struct net_device *dev);


#line 333 
static int pcnet32_alloc_ring(struct net_device *dev, char const *name);


#line 334 
static void pcnet32_free_ring(struct net_device *dev);


#line 335 
static void pcnet32_check_media(struct net_device *dev, int verbose);


#line 337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_wio_read_csr(unsigned long addr, int index)
{
  u16 tmp;
  
#line 339 
  outw((unsigned short)((int)((unsigned short)index)),(int)(addr + (unsigned long)18U));
  
#line 340 
  tmp = inw((int)(addr + (unsigned long)16U));
  
#line 340 
  return tmp;
}


#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_wio_write_csr(unsigned long addr, int index, u16 val)
{
  
#line 345 
  outw((unsigned short)((int)((unsigned short)index)),(int)(addr + (unsigned long)18U));
  
#line 346 
  outw((unsigned short)((int)val),(int)(addr + (unsigned long)16U));
  
#line 347 
  return;
}


#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_wio_read_bcr(unsigned long addr, int index)
{
  u16 tmp;
  
#line 351 
  outw((unsigned short)((int)((unsigned short)index)),(int)(addr + (unsigned long)18U));
  
#line 352 
  tmp = inw((int)(addr + (unsigned long)22U));
  
#line 352 
  return tmp;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_wio_write_bcr(unsigned long addr, int index, u16 val)
{
  
#line 357 
  outw((unsigned short)((int)((unsigned short)index)),(int)(addr + (unsigned long)18U));
  
#line 358 
  outw((unsigned short)((int)val),(int)(addr + (unsigned long)22U));
  
#line 359 
  return;
}


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_wio_read_rap(unsigned long addr)
{
  u16 tmp;
  
#line 363 
  tmp = inw((int)(addr + (unsigned long)18U));
  
#line 363 
  return tmp;
}


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_wio_write_rap(unsigned long addr, u16 val)
{
  
#line 368 
  outw((unsigned short)((int)val),(int)(addr + (unsigned long)18U));
  
#line 369 
  return;
}


#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_wio_reset(unsigned long addr)
{
  
#line 373 
  inw((int)(addr + (unsigned long)20U));
  
#line 374 
  return;
}


#line 376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_wio_check(unsigned long addr)
{
  int __retres;
  unsigned short tmp;
  
#line 378 
  outw((unsigned short)88,(int)(addr + (unsigned long)18U));
  
#line 379 
  tmp = inw((int)(addr + (unsigned long)18U));
  
#line 379 
  __retres = (unsigned int)tmp == 88U;
  
#line 379 
  return __retres;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct pcnet32_access const pcnet32_wio = {.read_csr = & pcnet32_wio_read_csr, .write_csr = & pcnet32_wio_write_csr, .read_bcr = & pcnet32_wio_read_bcr, .write_bcr = & pcnet32_wio_write_bcr, .read_rap = & pcnet32_wio_read_rap, .write_rap = & pcnet32_wio_write_rap, .reset = & pcnet32_wio_reset};

#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_dwio_read_csr(unsigned long addr, int index)
{
  u16 __retres;
  unsigned int tmp;
  
#line 394 
  outl((unsigned int)index,(int)(addr + (unsigned long)20U));
  
#line 395 
  tmp = inl((int)(addr + (unsigned long)16U));
  
#line 395 
  __retres = (unsigned short)tmp;
  
#line 395 
  return __retres;
}


#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_dwio_write_csr(unsigned long addr, int index, u16 val)
{
  
#line 400 
  outl((unsigned int)index,(int)(addr + (unsigned long)20U));
  
#line 401 
  outl((unsigned int)val,(int)(addr + (unsigned long)16U));
  
#line 402 
  return;
}


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_dwio_read_bcr(unsigned long addr, int index)
{
  u16 __retres;
  unsigned int tmp;
  
#line 406 
  outl((unsigned int)index,(int)(addr + (unsigned long)20U));
  
#line 407 
  tmp = inl((int)(addr + (unsigned long)28U));
  
#line 407 
  __retres = (unsigned short)tmp;
  
#line 407 
  return __retres;
}


#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_dwio_write_bcr(unsigned long addr, int index, u16 val)
{
  
#line 412 
  outl((unsigned int)index,(int)(addr + (unsigned long)20U));
  
#line 413 
  outl((unsigned int)val,(int)(addr + (unsigned long)28U));
  
#line 414 
  return;
}


#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u16 pcnet32_dwio_read_rap(unsigned long addr)
{
  u16 __retres;
  unsigned int tmp;
  
#line 418 
  tmp = inl((int)(addr + (unsigned long)20U));
  
#line 418 
  __retres = (unsigned short)tmp;
  
#line 418 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_dwio_write_rap(unsigned long addr, u16 val)
{
  
#line 423 
  outl((unsigned int)val,(int)(addr + (unsigned long)20U));
  
#line 424 
  return;
}


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_dwio_reset(unsigned long addr)
{
  
#line 428 
  inl((int)(addr + (unsigned long)24U));
  
#line 429 
  return;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_dwio_check(unsigned long addr)
{
  int __retres;
  unsigned int tmp;
  
#line 433 
  outl(88U,(int)(addr + (unsigned long)20U));
  
#line 434 
  tmp = inl((int)(addr + (unsigned long)20U));
  
#line 434 
  __retres = (tmp & 65535U) == 88U;
  
#line 434 
  return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct pcnet32_access const pcnet32_dwio = {.read_csr = & pcnet32_dwio_read_csr, .write_csr = & pcnet32_dwio_write_csr, .read_bcr = & pcnet32_dwio_read_bcr, .write_bcr = & pcnet32_dwio_write_bcr, .read_rap = & pcnet32_dwio_read_rap, .write_rap = & pcnet32_dwio_write_rap, .reset = & pcnet32_dwio_reset};

#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_netif_stop(struct net_device *dev)
{
  
#line 449 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 451 
  dev->trans_start = jiffies;
  
#line 452 
  napi_disable(& lp->napi);
  
#line 453 
  netif_tx_disable(dev);
  
#line 454 
  return;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_netif_start(struct net_device *dev)
{
  u16 val;
  
#line 458 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 459 
  ulong ioaddr = dev->base_addr;
  
#line 462 
  netif_wake_queue(dev);
  
#line 463 
  val = (*((lp->a)->read_csr))(ioaddr,3);
  
#line 464 
  val = (unsigned short)((unsigned int)val & 255U);
  
#line 465 
  (*((lp->a)->write_csr))(ioaddr,3,(unsigned short)((int)val));
  
#line 466 
  napi_enable(& lp->napi);
  
#line 467 
  return;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_realloc_tx_ring(struct net_device *dev, struct pcnet32_private *lp, unsigned int size)
{
  dma_addr_t new_ring_dma_addr;
  dma_addr_t *new_dma_addr_list;
  struct pcnet32_tx_head *new_tx_ring;
  struct sk_buff **new_skb_list;
  
#line 484 
  unsigned int entries = (unsigned int)(1UL << size);
  
#line 486 
  pcnet32_purge_tx_ring(dev);
  
#line 489 
  new_tx_ring = (struct pcnet32_tx_head *)pci_zalloc_consistent(lp->pci_dev,(unsigned long)entries * 16UL,& new_ring_dma_addr);
  
#line 492 
  if (new_tx_ring == (struct pcnet32_tx_head *)0) 
#line 493 
                                                  goto return_label; else ;
  
#line 495 
  new_dma_addr_list = (dma_addr_t *)kcalloc((unsigned long)entries,8UL,32U);
  
#line 496 
  if (new_dma_addr_list == (dma_addr_t *)0ULL) 
#line 497 
                                               goto free_new_tx_ring; else ;
  
#line 499 
  new_skb_list = (struct sk_buff **)kcalloc((unsigned long)entries,8UL,32U);
  
#line 500 
  if (new_skb_list == (struct sk_buff **)0) 
#line 501 
                                            goto free_new_lists; else ;
  
#line 503 
  kfree((void const *)lp->tx_skbuff);
  
#line 504 
  kfree((void const *)lp->tx_dma_addr);
  
#line 505 
  pci_free_consistent(lp->pci_dev,(unsigned long)lp->tx_ring_size * 16UL,(void *)lp->tx_ring,lp->tx_ring_dma_addr);
  
#line 509 
  lp->tx_ring_size = entries;
  
#line 510 
  lp->tx_mod_mask = lp->tx_ring_size + 4294967295U;
  
#line 511 
  lp->tx_len_bits = (unsigned short)((int)((unsigned short)size) << 12U);
  
#line 512 
  lp->tx_ring = new_tx_ring;
  
#line 513 
  lp->tx_ring_dma_addr = new_ring_dma_addr;
  
#line 514 
  lp->tx_dma_addr = new_dma_addr_list;
  
#line 515 
  lp->tx_skbuff = new_skb_list;
  
#line 516 
  goto return_label;
  free_new_lists: 
#line 518 
  ;
  
#line 519 
  kfree((void const *)new_dma_addr_list);
  free_new_tx_ring: 
#line 520 
  ;
  
#line 521 
  pci_free_consistent(lp->pci_dev,(unsigned long)entries * 16UL,(void *)new_tx_ring,new_ring_dma_addr);
  return_label: 
#line 523 
                return;
}


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_realloc_rx_ring(struct net_device *dev, struct pcnet32_private *lp, unsigned int size)
{
  dma_addr_t new_ring_dma_addr;
  dma_addr_t *new_dma_addr_list;
  struct pcnet32_rx_head *new_rx_ring;
  struct sk_buff **new_skb_list;
  int new;
  int overlap;
  unsigned int tmp_3;
  
#line 546 
  unsigned int entries = (unsigned int)(1UL << size);
  
#line 549 
  new_rx_ring = (struct pcnet32_rx_head *)pci_zalloc_consistent(lp->pci_dev,(unsigned long)entries * 16UL,& new_ring_dma_addr);
  
#line 552 
  if (new_rx_ring == (struct pcnet32_rx_head *)0) 
#line 553 
                                                  goto return_label; else ;
  
#line 555 
  new_dma_addr_list = (dma_addr_t *)kcalloc((unsigned long)entries,8UL,32U);
  
#line 556 
  if (new_dma_addr_list == (dma_addr_t *)0ULL) 
#line 557 
                                               goto free_new_rx_ring; else ;
  
#line 559 
  new_skb_list = (struct sk_buff **)kcalloc((unsigned long)entries,8UL,32U);
  
#line 560 
  if (new_skb_list == (struct sk_buff **)0) 
#line 561 
                                            goto free_new_lists; else ;
  {
    unsigned int tmp_2;
    
#line 564 
    unsigned int _min1 = entries;
    
#line 564 
    unsigned int _min2 = lp->rx_ring_size;
    
#line 564 
    if (_min1 < _min2) 
#line 564 
                       tmp_2 = _min1; else 
#line 564 
                                           tmp_2 = _min2;
    
#line 564 
    tmp_3 = tmp_2;
  }
  
#line 564 
  overlap = (int)tmp_3;
  
#line 565 
  new = 0;
  
#line 565 
  goto ldv_46773;
  ldv_46772: 
#line 566 
  ;
  
#line 566 
  *(new_rx_ring + new) = *(lp->rx_ring + new);
  
#line 567 
  *(new_dma_addr_list + new) = *(lp->rx_dma_addr + new);
  
#line 568 
  *(new_skb_list + new) = *(lp->rx_skbuff + new);
  
#line 565 
  new += 1;
  ldv_46773: 
#line 566 
  ;
  
#line 565 
  if (new < overlap) 
#line 567 
                     goto ldv_46772; else 
#line 570 
                                          goto ldv_46774;
  ldv_46774: 
#line 571 
  ;
  
#line 571 
  goto ldv_46779;
  ldv_46778: 
#line 572 
  ;
  {
    struct sk_buff *rx_skbuff;
    int tmp_4;
    
#line 573 
    *(new_skb_list + new) = netdev_alloc_skb(dev,1544U);
    
#line 574 
    rx_skbuff = *(new_skb_list + new);
    
#line 575 
    if (rx_skbuff == (struct sk_buff *)0) {
      
#line 577 
      if ((lp->msg_enable & 1U) != 0U) 
#line 577 
                                       netdev_err((struct net_device const *)dev,"%s netdev_alloc_skb failed\n","pcnet32_realloc_rx_ring"); else ;
      
#line 579 
      goto free_all_new;
    }
    else ;
    
#line 581 
    skb_reserve(rx_skbuff,0);
    
#line 583 
    *(new_dma_addr_list + new) = pci_map_single(lp->pci_dev,(void *)rx_skbuff->data,1544UL,2);
    
#line 586 
    tmp_4 = pci_dma_mapping_error(lp->pci_dev,*(new_dma_addr_list + new));
    
#line 586 
    if (tmp_4 != 0) {
      
#line 588 
      if ((lp->msg_enable & 1U) != 0U) 
#line 588 
                                       netdev_err((struct net_device const *)dev,"%s dma mapping failed\n","pcnet32_realloc_rx_ring"); else ;
      
#line 590 
      consume_skb(*(new_skb_list + new));
      
#line 591 
      goto free_all_new;
    }
    else ;
    
#line 593 
    (new_rx_ring + new)->base = (unsigned int)*(new_dma_addr_list + new);
    
#line 594 
    (new_rx_ring + new)->buf_length = (unsigned short)63992U;
    
#line 595 
    (new_rx_ring + new)->status = (unsigned short)32768U;
  }
  
#line 571 
  new += 1;
  ldv_46779: 
#line 572 
  ;
  
#line 571 
  if ((unsigned int)new < entries) 
#line 573 
                                   goto ldv_46778; else 
#line 576 
                                                        goto ldv_46780;
  ldv_46780: 
#line 577 
  ;
  
#line 598 
  goto ldv_46782;
  ldv_46781: 
#line 599 
  ;
  
#line 599 
  if (*(lp->rx_skbuff + new) != (struct sk_buff *)0) {
    int tmp_5;
    
#line 600 
    tmp_5 = pci_dma_mapping_error(lp->pci_dev,*(lp->rx_dma_addr + new));
    
#line 600 
    if (tmp_5 == 0) 
#line 602 
                    pci_unmap_single(lp->pci_dev,*(lp->rx_dma_addr + new),1544UL,2); else ;
    
#line 606 
    consume_skb(*(lp->rx_skbuff + new));
  }
  else ;
  
#line 598 
  new += 1;
  ldv_46782: 
#line 599 
  ;
  
#line 598 
  if (lp->rx_ring_size > (unsigned int)new) 
#line 600 
                                            goto ldv_46781; else 
#line 603 
                                                                 goto ldv_46783;
  ldv_46783: 
#line 604 
  ;
  
#line 610 
  kfree((void const *)lp->rx_skbuff);
  
#line 611 
  kfree((void const *)lp->rx_dma_addr);
  
#line 612 
  pci_free_consistent(lp->pci_dev,(unsigned long)lp->rx_ring_size * 16UL,(void *)lp->rx_ring,lp->rx_ring_dma_addr);
  
#line 617 
  lp->rx_ring_size = entries;
  
#line 618 
  lp->rx_mod_mask = lp->rx_ring_size + 4294967295U;
  
#line 619 
  lp->rx_len_bits = (unsigned short)((int)((unsigned short)size) << 4U);
  
#line 620 
  lp->rx_ring = new_rx_ring;
  
#line 621 
  lp->rx_ring_dma_addr = new_ring_dma_addr;
  
#line 622 
  lp->rx_dma_addr = new_dma_addr_list;
  
#line 623 
  lp->rx_skbuff = new_skb_list;
  
#line 624 
  goto return_label;
  free_all_new: 
#line 626 
  ;
  
#line 627 
  goto ldv_46785;
  ldv_46784: 
#line 628 
  ;
  
#line 628 
  if (*(new_skb_list + new) != (struct sk_buff *)0) {
    int tmp_6;
    
#line 629 
    tmp_6 = pci_dma_mapping_error(lp->pci_dev,*(new_dma_addr_list + new));
    
#line 629 
    if (tmp_6 == 0) 
#line 631 
                    pci_unmap_single(lp->pci_dev,*(new_dma_addr_list + new),1544UL,2); else ;
    
#line 635 
    consume_skb(*(new_skb_list + new));
  }
  else ;
  ldv_46785: 
#line 637 
  ;
  
#line 627 
  new -= 1;
  
#line 627 
  ;
  
#line 627 
  if ((unsigned int)new >= lp->rx_ring_size) 
#line 629 
                                             goto ldv_46784; else 
#line 632 
                                                                  goto ldv_46786;
  ldv_46786: 
#line 633 
  ;
  
#line 638 
  kfree((void const *)new_skb_list);
  free_new_lists: 
#line 639 
  ;
  
#line 640 
  kfree((void const *)new_dma_addr_list);
  free_new_rx_ring: 
#line 641 
  ;
  
#line 642 
  pci_free_consistent(lp->pci_dev,(unsigned long)entries * 16UL,(void *)new_rx_ring,new_ring_dma_addr);
  return_label: 
#line 644 
                return;
}


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_purge_rx_ring(struct net_device *dev)
{
  int i;
  
#line 650 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 654 
  i = 0;
  
#line 654 
  goto ldv_46793;
  ldv_46792: 
#line 655 
  ;
  
#line 655 
  (lp->rx_ring + i)->status = (unsigned short)0U;
  
#line 656 
  ldv_inline_asm();
  
#line 657 
  if (*(lp->rx_skbuff + i) != (struct sk_buff *)0) {
    int tmp_0;
    
#line 658 
    tmp_0 = pci_dma_mapping_error(lp->pci_dev,*(lp->rx_dma_addr + i));
    
#line 658 
    if (tmp_0 == 0) 
#line 660 
                    pci_unmap_single(lp->pci_dev,*(lp->rx_dma_addr + i),1544UL,2); else ;
    
#line 664 
    dev_kfree_skb_any(*(lp->rx_skbuff + i));
  }
  else ;
  
#line 666 
  *(lp->rx_skbuff + i) = (struct sk_buff *)0;
  
#line 667 
  *(lp->rx_dma_addr + i) = 0ULL;
  
#line 654 
  i += 1;
  ldv_46793: 
#line 655 
  ;
  
#line 654 
  if (lp->rx_ring_size > (unsigned int)i) 
#line 656 
                                          goto ldv_46792; else 
#line 659 
                                                               goto ldv_46794;
  ldv_46794: 
#line 660 
  ;
  
#line 661 
  return;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_poll_controller(struct net_device *dev)
{
  
#line 674 
  disable_irq((unsigned int)dev->irq);
  
#line 675 
  pcnet32_interrupt(0,(void *)dev);
  
#line 676 
  enable_irq((unsigned int)dev->irq);
  
#line 677 
  return;
}


#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  unsigned long flags;
  
#line 682 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 684 
  int r = -95;
  
#line 686 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    
#line 687 
    ldv___ldv_spin_lock_74(& lp->lock);
    
#line 688 
    mii_ethtool_gset(& lp->mii_if,cmd);
    
#line 689 
    ldv_spin_unlock_irqrestore_75(& lp->lock,flags);
    
#line 690 
    r = 0;
  }
  else ;
  
#line 692 
  return r;
}


#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  unsigned long flags;
  
#line 697 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 699 
  int r = -95;
  
#line 701 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    
#line 702 
    ldv___ldv_spin_lock_76(& lp->lock);
    
#line 703 
    r = mii_ethtool_sset(& lp->mii_if,cmd);
    
#line 704 
    ldv_spin_unlock_irqrestore_77(& lp->lock,flags);
  }
  else ;
  
#line 706 
  return r;
}


#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  
#line 712 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 714 
  strlcpy((char *)(& info->driver),"pcnet32",32UL);
  
#line 715 
  strlcpy((char *)(& info->version),"1.35",32UL);
  
#line 716 
  if (lp->pci_dev != (struct pci_dev *)0) {
    char const *tmp_0;
    
#line 717 
    tmp_0 = pci_name((struct pci_dev const *)lp->pci_dev);
    
#line 717 
    ;
    
#line 717 
    strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  }
  else 
#line 720 
       snprintf((char *)(& info->bus_info),32UL,"VLB 0x%lx",dev->base_addr);
  
#line 722 
  return;
}


#line 724  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u32 pcnet32_get_link(struct net_device *dev)
{
  u32 __retres;
  unsigned long flags;
  int r;
  
#line 726 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 730 
  ldv___ldv_spin_lock_78(& lp->lock);
  
#line 731 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) 
#line 732 
                                                          r = mii_link_ok(& lp->mii_if);
  else 
    
#line 733 
    if ((unsigned int)lp->chip_version > 9760U) {
      u16 tmp_0;
      
#line 734 
      ulong ioaddr = dev->base_addr;
      
#line 735 
      tmp_0 = (*((lp->a)->read_bcr))(ioaddr,4);
      
#line 735 
      r = (unsigned int)tmp_0 != 192U;
    }
    else 
#line 737 
         r = 1;
  
#line 739 
  ldv_spin_unlock_irqrestore_79(& lp->lock,flags);
  
#line 741 
  __retres = (unsigned int)r;
  
#line 741 
  return __retres;
}


#line 744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static u32 pcnet32_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 746 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 747 
  __retres = lp->msg_enable;
  
#line 747 
  return __retres;
}


#line 750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_set_msglevel(struct net_device *dev, u32 value)
{
  
#line 752 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 753 
  lp->msg_enable = value;
  
#line 754 
  return;
}


#line 756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_nway_reset(struct net_device *dev)
{
  unsigned long flags;
  
#line 758 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 760 
  int r = -95;
  
#line 762 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    
#line 763 
    ldv___ldv_spin_lock_80(& lp->lock);
    
#line 764 
    r = mii_nway_restart(& lp->mii_if);
    
#line 765 
    ldv_spin_unlock_irqrestore_81(& lp->lock,flags);
  }
  else ;
  
#line 767 
  return r;
}


#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  
#line 773 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 775 
  ering->tx_max_pending = 512U;
  
#line 776 
  ering->tx_pending = lp->tx_ring_size;
  
#line 777 
  ering->rx_max_pending = 512U;
  
#line 778 
  ering->rx_pending = lp->rx_ring_size;
  
#line 779 
  return;
}


#line 781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  int __retres;
  unsigned long flags;
  unsigned int size;
  int i;
  bool tmp_0;
  unsigned int tmp_2;
  unsigned int tmp_4;
  bool tmp_5;
  
#line 784 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 787 
  ulong ioaddr = dev->base_addr;
  
#line 790 
  if (ering->rx_mini_pending != 0U || ering->rx_jumbo_pending != 0U) {
    
#line 791 
    __retres = -22;
    
#line 791 
    goto return_label;
  }
  else ;
  
#line 793 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 793 
  if ((int)tmp_0 != 0) 
#line 794 
                       pcnet32_netif_stop(dev); else ;
  
#line 796 
  ldv___ldv_spin_lock_82(& lp->lock);
  
#line 797 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  {
    __u32 tmp_1;
    
#line 799 
    __u32 _min1 = ering->tx_pending;
    
#line 799 
    unsigned int _min2 = 512U;
    
#line 799 
    if (_min1 < _min2) 
#line 799 
                       tmp_1 = _min1; else 
#line 799 
                                           tmp_1 = _min2;
    
#line 799 
    tmp_2 = tmp_1;
  }
  
#line 799 
  size = tmp_2;
  
#line 804 
  i = 2;
  
#line 804 
  goto ldv_46858;
  ldv_46857: 
#line 805 
  ;
  
#line 805 
  if ((unsigned int)(1 << i) >= size) 
#line 806 
                                      goto ldv_46856; else ;
  
#line 804 
  i += 1;
  ldv_46858: 
#line 805 
  ;
  
#line 804 
  if (i <= 9) 
#line 806 
              goto ldv_46857; else 
#line 809 
                                   goto ldv_46856;
  ldv_46856: 
#line 810 
  ;
  
#line 808 
  if ((unsigned int)(1 << i) != lp->tx_ring_size) 
#line 809 
                                                  pcnet32_realloc_tx_ring(dev,lp,(unsigned int)i); else ;
  {
    __u32 tmp_3;
    
#line 811 
    __u32 _min1_0 = ering->rx_pending;
    
#line 811 
    unsigned int _min2_0 = 512U;
    
#line 811 
    if (_min1_0 < _min2_0) 
#line 811 
                           tmp_3 = _min1_0; else 
#line 811 
                                                 tmp_3 = _min2_0;
    
#line 811 
    tmp_4 = tmp_3;
  }
  
#line 811 
  size = tmp_4;
  
#line 812 
  i = 2;
  
#line 812 
  goto ldv_46864;
  ldv_46863: 
#line 813 
  ;
  
#line 813 
  if ((unsigned int)(1 << i) >= size) 
#line 814 
                                      goto ldv_46862; else ;
  
#line 812 
  i += 1;
  ldv_46864: 
#line 813 
  ;
  
#line 812 
  if (i <= 9) 
#line 814 
              goto ldv_46863; else 
#line 817 
                                   goto ldv_46862;
  ldv_46862: 
#line 818 
  ;
  
#line 816 
  if ((unsigned int)(1 << i) != lp->rx_ring_size) 
#line 817 
                                                  pcnet32_realloc_rx_ring(dev,lp,(unsigned int)i); else ;
  
#line 819 
  lp->napi.weight = (int)(lp->rx_ring_size / 2U);
  
#line 821 
  tmp_5 = netif_running((struct net_device const *)dev);
  
#line 821 
  if ((int)tmp_5 != 0) {
    
#line 822 
    pcnet32_netif_start(dev);
    
#line 823 
    pcnet32_restart(dev,66U);
  }
  else ;
  
#line 826 
  ldv_spin_unlock_irqrestore_83(& lp->lock,flags);
  
#line 828 
  if ((lp->msg_enable & 1U) != 0U) 
#line 828 
                                   netdev_info((struct net_device const *)dev,"Ring Param Settings: RX: %d, TX: %d\n",lp->rx_ring_size,lp->tx_ring_size); else ;
  
#line 831 
  __retres = 0;
  return_label: 
#line 831 
                return __retres;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  
#line 837 
  memcpy((void *)data,(void const *)(& pcnet32_gstrings_test),32UL);
  
#line 838 
  return;
}


#line 840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 842 
  switch (sset) {
    case 0: 
#line 843 
    ;
    
#line 844 
    __retres = 1;
    
#line 844 
    goto return_label;
    default: 
#line 845 
    ;
    
#line 846 
    __retres = -95;
    
#line 846 
    goto return_label;
  }
  return_label: 
#line 842 
                return __retres;
}


#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_ethtool_test(struct net_device *dev, struct ethtool_test *test, u64 *data)
{
  int rc;
  
#line 853 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 856 
  if (test->flags == 1U) {
    
#line 857 
    rc = pcnet32_loopback_test(dev,data);
    
#line 858 
    if (rc != 0) {
      
#line 859 
      if ((lp->msg_enable & 8192U) != 0U) 
#line 859 
                                          netdev_printk("\001",(struct net_device const *)dev,"Loopback test failed\n"); else ;
      
#line 861 
      test->flags |= 2U;
    }
    else 
      
#line 863 
      if ((lp->msg_enable & 8192U) != 0U) 
#line 863 
                                          netdev_printk("\001",(struct net_device const *)dev,"Loopback test passed\n"); else ;
  }
  else 
    
#line 866 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 866 
                                        netdev_printk("\001",(struct net_device const *)dev,"No tests to run (specify \'Offline\' on ethtool)\n"); else ;
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_loopback_test(struct net_device *dev, uint64_t *data1)
{
  struct sk_buff *skb;
  int x;
  int i;
  __le16 teststatus;
  int rc;
  int size;
  unsigned char *packet;
  unsigned long flags;
  unsigned long ticks;
  bool tmp_0;
  int tmp_4;
  unsigned char *tmp_5;
  unsigned char *tmp_6;
  unsigned char *tmp_7;
  unsigned char *tmp_8;
  unsigned char *tmp_9;
  unsigned char *tmp_10;
  int tmp_11;
  u16 tmp_12;
  u16 tmp_13;
  u16 tmp_14;
  u16 tmp_15;
  bool tmp_16;
  
#line 872 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 873 
  struct pcnet32_access const *a = lp->a;
  
#line 874 
  ulong ioaddr = dev->base_addr;
  
#line 877 
  int numbuffs = 4;
  
#line 878 
  u16 status = (unsigned short)33536U;
  
#line 883 
  int const data_len = 60;
  
#line 887 
  rc = 1;
  
#line 889 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 889 
  if ((int)tmp_0 != 0) 
#line 890 
                       pcnet32_netif_stop(dev); else ;
  
#line 892 
  ldv___ldv_spin_lock_84(& lp->lock);
  
#line 893 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  {
    unsigned int tmp_2;
    int tmp_3;
    
#line 895 
    int _min1 = numbuffs;
    {
      unsigned int tmp_1;
      
#line 895 
      unsigned int _min1_0 = lp->rx_ring_size;
      
#line 895 
      unsigned int _min2_0 = lp->tx_ring_size;
      
#line 895 
      if (_min1_0 < _min2_0) 
#line 895 
                             tmp_1 = _min1_0; else 
#line 895 
                                                   tmp_1 = _min2_0;
      
#line 895 
      tmp_2 = tmp_1;
    }
    
#line 895 
    int _min2 = (int)tmp_2;
    
#line 895 
    if (_min1 < _min2) 
#line 895 
                       tmp_3 = _min1; else 
#line 895 
                                           tmp_3 = _min2;
    
#line 895 
    tmp_4 = tmp_3;
  }
  
#line 895 
  numbuffs = tmp_4;
  
#line 898 
  (*((lp->a)->reset))(ioaddr);
  
#line 899 
  (*((lp->a)->write_csr))(ioaddr,4,(unsigned short)2325);
  
#line 902 
  (*((lp->a)->write_bcr))(ioaddr,20,(unsigned short)2);
  
#line 905 
  pcnet32_restart(dev,0U);
  
#line 907 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  
#line 910 
  size = 75;
  
#line 911 
  x = 0;
  
#line 911 
  goto ldv_46925;
  ldv_46924: 
#line 912 
  ;
  
#line 912 
  skb = netdev_alloc_skb(dev,(unsigned int)size);
  
#line 913 
  if (skb == (struct sk_buff *)0) {
    
#line 914 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 914 
                                        netdev_printk("\001",(struct net_device const *)dev,"Cannot allocate skb at line: %d!\n",916); else ;
    
#line 917 
    goto clean_up;
  }
  else ;
  
#line 919 
  packet = skb->data;
  
#line 920 
  skb_put(skb,(unsigned int)size);
  
#line 921 
  *(lp->tx_skbuff + x) = skb;
  
#line 922 
  (lp->tx_ring + x)->length = (unsigned short)(- ((int)((unsigned short)skb->len)));
  
#line 923 
  (lp->tx_ring + x)->misc = 0U;
  
#line 926 
  i = 0;
  
#line 926 
  goto ldv_46916;
  ldv_46915: 
#line 927 
  ;
  
#line 927 
  tmp_5 = packet;
  
#line 927 
  packet += 1;
  
#line 927 
  *tmp_5 = *(dev->dev_addr + i);
  
#line 926 
  i += 1;
  ldv_46916: 
#line 927 
  ;
  
#line 926 
  if (i <= 5) 
#line 928 
              goto ldv_46915; else 
#line 931 
                                   goto ldv_46917;
  ldv_46917: 
#line 932 
  ;
  
#line 928 
  i = 0;
  
#line 928 
  goto ldv_46919;
  ldv_46918: 
#line 929 
  ;
  
#line 929 
  tmp_6 = packet;
  
#line 929 
  packet += 1;
  
#line 929 
  *tmp_6 = *(dev->dev_addr + i);
  
#line 928 
  i += 1;
  ldv_46919: 
#line 929 
  ;
  
#line 928 
  if (i <= 5) 
#line 930 
              goto ldv_46918; else 
#line 933 
                                   goto ldv_46920;
  ldv_46920: 
#line 934 
  ;
  
#line 931 
  tmp_7 = packet;
  
#line 931 
  packet += 1;
  
#line 931 
  *tmp_7 = (unsigned char)8U;
  
#line 932 
  tmp_8 = packet;
  
#line 932 
  packet += 1;
  
#line 932 
  *tmp_8 = (unsigned char)6U;
  
#line 934 
  tmp_9 = packet;
  
#line 934 
  packet += 1;
  
#line 934 
  *tmp_9 = (unsigned char)x;
  
#line 936 
  i = 0;
  
#line 936 
  goto ldv_46922;
  ldv_46921: 
#line 937 
  ;
  
#line 937 
  tmp_10 = packet;
  
#line 937 
  packet += 1;
  
#line 937 
  *tmp_10 = (unsigned char)i;
  
#line 936 
  i += 1;
  ldv_46922: 
#line 937 
  ;
  
#line 936 
  if (i <= 59) 
#line 938 
               goto ldv_46921; else 
#line 941 
                                    goto ldv_46923;
  ldv_46923: 
#line 942 
  ;
  
#line 939 
  *(lp->tx_dma_addr + x) = pci_map_single(lp->pci_dev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 942 
  tmp_11 = pci_dma_mapping_error(lp->pci_dev,*(lp->tx_dma_addr + x));
  
#line 942 
  if (tmp_11 != 0) {
    
#line 943 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 943 
                                        netdev_printk("\001",(struct net_device const *)dev,"DMA mapping error at line: %d!\n",945); else ;
    
#line 946 
    goto clean_up;
  }
  else ;
  
#line 948 
  (lp->tx_ring + x)->base = (unsigned int)*(lp->tx_dma_addr + x);
  
#line 949 
  ldv_inline_asm();
  
#line 950 
  (lp->tx_ring + x)->status = status;
  
#line 911 
  x += 1;
  ldv_46925: 
#line 912 
  ;
  
#line 911 
  if (x < numbuffs) 
#line 913 
                    goto ldv_46924; else 
#line 916 
                                         goto ldv_46926;
  ldv_46926: 
#line 917 
  ;
  
#line 953 
  tmp_12 = (*(a->read_bcr))(ioaddr,32);
  
#line 953 
  x = (int)tmp_12;
  
#line 954 
  (*(a->write_bcr))(ioaddr,32,(unsigned short)((int)((unsigned short)(x | 2))));
  
#line 957 
  tmp_13 = (*(a->read_csr))(ioaddr,15);
  
#line 957 
  x = (int)tmp_13 & 65532;
  
#line 958 
  (*((lp->a)->write_csr))(ioaddr,15,(unsigned short)((int)((unsigned short)(x | 68))));
  
#line 960 
  teststatus = (unsigned short)32768U;
  
#line 961 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)2);
  
#line 964 
  x = 0;
  
#line 964 
  goto ldv_46932;
  ldv_46931: 
#line 965 
  ;
  
#line 965 
  ticks = 0UL;
  
#line 966 
  ldv_inline_asm();
  
#line 967 
  goto ldv_46928;
  ldv_46927: 
#line 968 
  ;
  
#line 968 
  ldv_spin_unlock_irqrestore_85(& lp->lock,flags);
  
#line 969 
  msleep(1U);
  
#line 970 
  ldv___ldv_spin_lock_86(& lp->lock);
  
#line 971 
  ldv_inline_asm();
  
#line 972 
  ticks += 1UL;
  ldv_46928: 
#line 973 
  ;
  
#line 967 
  if ((unsigned int)((int)(lp->rx_ring + x)->status & (int)teststatus) != 0U && ticks <= 199UL) 
    
#line 969 
    goto ldv_46927; else 
#line 972 
                         goto ldv_46929;
  ldv_46929: 
#line 973 
  ;
  
#line 974 
  if (ticks == 200UL) {
    
#line 975 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 975 
                                        netdev_err((struct net_device const *)dev,"Desc %d failed to reset!\n",x); else ;
    
#line 976 
    goto ldv_46930;
  }
  else ;
  
#line 964 
  x += 1;
  ldv_46932: 
#line 965 
  ;
  
#line 964 
  if (x < numbuffs) 
#line 966 
                    goto ldv_46931; else 
#line 969 
                                         goto ldv_46930;
  ldv_46930: 
#line 970 
  ;
  
#line 980 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  
#line 981 
  ldv_inline_asm();
  
#line 982 
  if ((lp->msg_enable & 8192U) != 0U && (lp->msg_enable & 4096U) != 0U) {
    
#line 983 
    netdev_printk("\001",(struct net_device const *)dev,"RX loopback packets:\n");
    
#line 985 
    x = 0;
    
#line 985 
    goto ldv_46937;
    ldv_46936: 
#line 986 
    ;
    
#line 986 
    netdev_printk("\001",(struct net_device const *)dev,"Packet %d: ",x);
    
#line 987 
    skb = *(lp->rx_skbuff + x);
    
#line 988 
    i = 0;
    
#line 988 
    goto ldv_46934;
    ldv_46933: 
#line 989 
    ;
    
#line 989 
    printk("",(int)*(skb->data + i));
    
#line 988 
    i += 1;
    ldv_46934: 
#line 989 
    ;
    
#line 988 
    if (i < size) 
#line 990 
                  goto ldv_46933; else 
#line 993 
                                       goto ldv_46935;
    ldv_46935: 
#line 994 
    ;
    
#line 990 
    printk("");
    
#line 985 
    x += 1;
    ldv_46937: 
#line 986 
    ;
    
#line 985 
    if (x < numbuffs) 
#line 987 
                      goto ldv_46936; else 
#line 990 
                                           goto ldv_46938;
    ldv_46938: 
#line 991 
    ;
  }
  else ;
  
#line 994 
  x = 0;
  
#line 995 
  rc = 0;
  
#line 996 
  goto ldv_46943;
  ldv_46942: 
#line 997 
  ;
  
#line 997 
  skb = *(lp->rx_skbuff + x);
  
#line 998 
  packet = (*(lp->tx_skbuff + x))->data;
  
#line 999 
  i = 0;
  
#line 999 
  goto ldv_46941;
  ldv_46940: 
#line 1000 
  ;
  
#line 1000 
  if ((int)*(skb->data + i) != (int)*(packet + i)) {
    
#line 1001 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 1001 
                                        netdev_printk("\001",(struct net_device const *)dev,"Error in compare! %2x - %02x %02x\n",i,(int)*(skb->data + i),(int)*(packet + i)); else ;
    
#line 1004 
    rc = 1;
    
#line 1005 
    goto ldv_46939;
  }
  else ;
  
#line 999 
  i += 1;
  ldv_46941: 
#line 1000 
  ;
  
#line 999 
  if (i < size) 
#line 1001 
                goto ldv_46940; else 
#line 1004 
                                     goto ldv_46939;
  ldv_46939: 
#line 1005 
  ;
  
#line 1008 
  x += 1;
  ldv_46943: 
#line 1009 
  ;
  
#line 996 
  if (x < numbuffs && rc == 0) 
#line 998 
                               goto ldv_46942; else 
#line 1001 
                                                    goto ldv_46944;
  ldv_46944: 
#line 1002 
  ;
  clean_up: 
#line 1011 
  ;
  
#line 1012 
  *data1 = (unsigned long long)rc;
  
#line 1013 
  pcnet32_purge_tx_ring(dev);
  
#line 1015 
  tmp_14 = (*(a->read_csr))(ioaddr,15);
  
#line 1015 
  x = (int)tmp_14;
  
#line 1016 
  (*(a->write_csr))(ioaddr,15,(unsigned short)((int)((unsigned short)x) & 65467));
  
#line 1018 
  tmp_15 = (*(a->read_bcr))(ioaddr,32);
  
#line 1018 
  x = (int)tmp_15;
  
#line 1019 
  (*(a->write_bcr))(ioaddr,32,(unsigned short)((int)((unsigned short)x) & 65533));
  
#line 1021 
  tmp_16 = netif_running((struct net_device const *)dev);
  
#line 1021 
  if ((int)tmp_16 != 0) {
    
#line 1022 
    pcnet32_netif_start(dev);
    
#line 1023 
    pcnet32_restart(dev,66U);
  }
  else {
    
#line 1025 
    pcnet32_purge_rx_ring(dev);
    
#line 1026 
    (*((lp->a)->write_bcr))(ioaddr,20,(unsigned short)4);
  }
  
#line 1028 
  ldv_spin_unlock_irqrestore_87(& lp->lock,flags);
  
#line 1030 
  return rc;
}


#line 1033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_set_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  unsigned long flags;
  int i;
  
#line 1036 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1037 
  struct pcnet32_access const *a = lp->a;
  
#line 1038 
  ulong ioaddr = dev->base_addr;
  
#line 1042 
  switch ((unsigned int)state) {
    u16 tmp_0;
    case (unsigned int)1: 
#line 1043 
    ;
    
#line 1045 
    ldv___ldv_spin_lock_88(& lp->lock);
    
#line 1046 
    i = 4;
    
#line 1046 
    goto ldv_46956;
    ldv_46955: 
#line 1047 
    ;
    
#line 1047 
    lp->save_regs[i + -4] = (*(a->read_bcr))(ioaddr,i);
    
#line 1046 
    i += 1;
    ldv_46956: 
#line 1047 
    ;
    
#line 1046 
    if (i <= 7) 
#line 1048 
                goto ldv_46955; else 
#line 1051 
                                     goto ldv_46957;
    ldv_46957: 
#line 1052 
    ;
    
#line 1048 
    ldv_spin_unlock_irqrestore_89(& lp->lock,flags);
    
#line 1049 
    __retres = 2;
    
#line 1049 
    goto return_label;
    case (unsigned int)2: 
#line 1051 
    ;
    case (unsigned int)3: 
#line 1052 
    ;
    
#line 1054 
    ldv___ldv_spin_lock_90(& lp->lock);
    
#line 1055 
    i = 4;
    
#line 1055 
    goto ldv_46961;
    ldv_46960: 
#line 1056 
    ;
    
#line 1056 
    tmp_0 = (*(a->read_bcr))(ioaddr,i);
    
#line 1056 
    ;
    
#line 1056 
    ;
    
#line 1056 
    (*(a->write_bcr))(ioaddr,i,(unsigned short)((int)((unsigned int)tmp_0 ^ 16384U)));
    
#line 1055 
    i += 1;
    ldv_46961: 
#line 1056 
    ;
    
#line 1055 
    if (i <= 7) 
#line 1057 
                goto ldv_46960; else 
#line 1060 
                                     goto ldv_46962;
    ldv_46962: 
#line 1061 
    ;
    
#line 1057 
    ldv_spin_unlock_irqrestore_91(& lp->lock,flags);
    
#line 1058 
    goto ldv_46963;
    case (unsigned int)0: 
#line 1060 
    ;
    
#line 1062 
    ldv___ldv_spin_lock_92(& lp->lock);
    
#line 1063 
    i = 4;
    
#line 1063 
    goto ldv_46966;
    ldv_46965: 
#line 1064 
    ;
    
#line 1064 
    (*(a->write_bcr))(ioaddr,i,(unsigned short)((int)lp->save_regs[i + -4]));
    
#line 1063 
    i += 1;
    ldv_46966: 
#line 1064 
    ;
    
#line 1063 
    if (i <= 7) 
#line 1065 
                goto ldv_46965; else 
#line 1068 
                                     goto ldv_46967;
    ldv_46967: 
#line 1069 
    ;
    
#line 1065 
    ldv_spin_unlock_irqrestore_93(& lp->lock,flags);
  }
  ldv_46963: 
#line 1067 
  ;
  
#line 1067 
  __retres = 0;
  return_label: 
#line 1067 
                return __retres;
}


#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_suspend(struct net_device *dev, unsigned long *flags, int can_sleep)
{
  int __retres;
  int csr5;
  int ticks;
  u16 tmp_0;
  u16 tmp_2;
  
#line 1077 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1078 
  struct pcnet32_access const *a = lp->a;
  
#line 1079 
  ulong ioaddr = dev->base_addr;
  
#line 1083 
  if ((unsigned int)lp->chip_version <= 9760U) {
    
#line 1084 
    __retres = 0;
    
#line 1084 
    goto return_label;
  }
  else ;
  
#line 1087 
  tmp_0 = (*(a->read_csr))(ioaddr,5);
  
#line 1087 
  csr5 = (int)tmp_0;
  
#line 1088 
  (*(a->write_csr))(ioaddr,5,(unsigned short)((int)((unsigned short)(csr5 | 1))));
  
#line 1091 
  ticks = 0;
  
#line 1092 
  goto ldv_46983;
  ldv_46982: 
#line 1093 
  ;
  
#line 1093 
  ldv_spin_unlock_irqrestore_94(& lp->lock,*flags);
  
#line 1094 
  if (can_sleep != 0) 
#line 1095 
                      msleep(1U);
  else 
    
#line 1097 
    if (1) 
#line 1097 
           __const_udelay(4295000UL);
    else {
      
#line 1097 
      unsigned long __ms = 1UL;
      {
        unsigned long tmp_1;
        
#line 1097 
        goto ldv_46980;
        ldv_46979: 
#line 1098 
        ;
        
#line 1097 
        __const_udelay(4295000UL);
        ldv_46980: 
#line 1099 
        ;
        
#line 1097 
        tmp_1 = __ms;
        
#line 1097 
        __ms -= 1UL;
        
#line 1097 
        ;
        
#line 1097 
        if (tmp_1 != 0UL) 
#line 1099 
                          goto ldv_46979; else 
#line 1102 
                                               goto ldv_46981;
        ldv_46981: 
#line 1103 
        ;
      }
    }
  
#line 1098 
  ldv___ldv_spin_lock_95(& lp->lock);
  
#line 1099 
  ticks += 1;
  
#line 1100 
  if (ticks > 200) {
    
#line 1101 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 1101 
                                        netdev_printk("\001",(struct net_device const *)dev,"Error getting into suspend!\n"); else ;
    
#line 1103 
    __retres = 0;
    
#line 1103 
    goto return_label;
  }
  else ;
  ldv_46983: 
#line 1105 
  ;
  
#line 1092 
  tmp_2 = (*(a->read_csr))(ioaddr,5);
  
#line 1092 
  if (((int)tmp_2 & 1) == 0) 
#line 1094 
                             goto ldv_46982; else 
#line 1097 
                                                  goto ldv_46984;
  ldv_46984: 
#line 1098 
  ;
  
#line 1106 
  __retres = 1;
  return_label: 
#line 1106 
                return __retres;
}


#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_rx_entry(struct net_device *dev, struct pcnet32_private *lp, struct pcnet32_rx_head *rxp, int entry)
{
  struct sk_buff *skb;
  short pkt_len;
  
#line 1118 
  int status = (int)((short)rxp->status) >> 8;
  
#line 1119 
  int rx_in_place = 0;
  
#line 1123 
  if (status != 3) {
    
#line 1130 
    if ((status & 1) != 0) 
#line 1131 
                           dev->stats.rx_errors += 1UL; else ;
    
#line 1132 
    if ((status & 32) != 0) 
#line 1133 
                            dev->stats.rx_frame_errors += 1UL; else ;
    
#line 1134 
    if ((status & 16) != 0) 
#line 1135 
                            dev->stats.rx_over_errors += 1UL; else ;
    
#line 1136 
    if ((status & 8) != 0) 
#line 1137 
                           dev->stats.rx_crc_errors += 1UL; else ;
    
#line 1138 
    if ((status & 4) != 0) 
#line 1139 
                           dev->stats.rx_fifo_errors += 1UL; else ;
    
#line 1140 
    goto return_label;
  }
  else ;
  
#line 1143 
  pkt_len = (short)((rxp->msg_length & 4095U) + 65532U);
  
#line 1146 
  if ((long)((int)pkt_len > 1544) != 0L) {
    
#line 1147 
    if ((lp->msg_enable & 1U) != 0U) 
#line 1147 
                                     netdev_err((struct net_device const *)dev,"Impossible packet size %d!\n",(int)pkt_len); else ;
    
#line 1149 
    dev->stats.rx_errors += 1UL;
    
#line 1150 
    goto return_label;
  }
  else ;
  
#line 1152 
  if ((int)pkt_len <= 59) {
    
#line 1153 
    if ((lp->msg_enable & 64U) != 0U) 
#line 1153 
                                      netdev_err((struct net_device const *)dev,"Runt packet!\n"); else ;
    
#line 1154 
    dev->stats.rx_errors += 1UL;
    
#line 1155 
    goto return_label;
  }
  else ;
  
#line 1158 
  if ((int)pkt_len > rx_copybreak) {
    struct sk_buff *newskb;
    dma_addr_t new_dma_addr;
    
#line 1162 
    newskb = netdev_alloc_skb(dev,1544U);
    
#line 1167 
    if (newskb != (struct sk_buff *)0) {
      int tmp;
      
#line 1168 
      skb_reserve(newskb,0);
      
#line 1169 
      new_dma_addr = pci_map_single(lp->pci_dev,(void *)newskb->data,1544UL,2);
      
#line 1173 
      tmp = pci_dma_mapping_error(lp->pci_dev,new_dma_addr);
      
#line 1173 
      if (tmp != 0) {
        
#line 1174 
        if ((lp->msg_enable & 64U) != 0U) 
#line 1174 
                                          netdev_err((struct net_device const *)dev,"DMA mapping error.\n"); else ;
        
#line 1176 
        consume_skb(newskb);
        
#line 1177 
        skb = (struct sk_buff *)0;
      }
      else {
        
#line 1179 
        skb = *(lp->rx_skbuff + entry);
        
#line 1180 
        pci_unmap_single(lp->pci_dev,*(lp->rx_dma_addr + entry),1544UL,2);
        
#line 1184 
        skb_put(skb,(unsigned int)pkt_len);
        
#line 1185 
        *(lp->rx_skbuff + entry) = newskb;
        
#line 1186 
        *(lp->rx_dma_addr + entry) = new_dma_addr;
        
#line 1187 
        rxp->base = (unsigned int)new_dma_addr;
        
#line 1188 
        rx_in_place = 1;
      }
    }
    else 
#line 1191 
         skb = (struct sk_buff *)0;
  }
  else 
#line 1193 
       skb = netdev_alloc_skb(dev,(unsigned int)pkt_len);
  
#line 1195 
  if (skb == (struct sk_buff *)0) {
    
#line 1196 
    dev->stats.rx_dropped += 1UL;
    
#line 1197 
    goto return_label;
  }
  else ;
  
#line 1199 
  if (rx_in_place == 0) {
    
#line 1200 
    skb_reserve(skb,0);
    
#line 1201 
    skb_put(skb,(unsigned int)pkt_len);
    
#line 1202 
    pci_dma_sync_single_for_cpu(lp->pci_dev,*(lp->rx_dma_addr + entry),(unsigned long)pkt_len,2);
    
#line 1206 
    skb_copy_to_linear_data(skb,(void const *)(*(lp->rx_skbuff + entry))->data,(unsigned int)pkt_len);
    
#line 1209 
    pci_dma_sync_single_for_device(lp->pci_dev,*(lp->rx_dma_addr + entry),(unsigned long)pkt_len,2);
  }
  else ;
  
#line 1214 
  dev->stats.rx_bytes += (unsigned long)skb->len;
  
#line 1215 
  skb->protocol = eth_type_trans(skb,dev);
  
#line 1216 
  netif_receive_skb(skb);
  
#line 1217 
  dev->stats.rx_packets += 1UL;
  return_label: 
#line 1218 
                return;
}


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_rx(struct net_device *dev, int budget)
{
  
#line 1222 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1223 
  int entry = (int)(lp->cur_rx & lp->rx_mod_mask);
  
#line 1224 
  struct pcnet32_rx_head *rxp = lp->rx_ring + entry;
  
#line 1225 
  int npackets = 0;
  
#line 1228 
  goto ldv_47006;
  ldv_47005: 
#line 1229 
  ;
  
#line 1229 
  pcnet32_rx_entry(dev,lp,rxp,entry);
  
#line 1230 
  npackets += 1;
  
#line 1235 
  rxp->buf_length = (unsigned short)63992U;
  
#line 1236 
  ldv_inline_asm();
  
#line 1237 
  rxp->status = (unsigned short)32768U;
  
#line 1238 
  lp->cur_rx += 1U;
  
#line 1238 
  entry = (int)(lp->cur_rx & lp->rx_mod_mask);
  
#line 1239 
  rxp = lp->rx_ring + entry;
  ldv_47006: 
#line 1240 
  ;
  
#line 1228 
  if (npackets < budget && (int)((short)rxp->status) >= 0) 
#line 1230 
                                                           goto ldv_47005; else 
                                                                    
#line 1233 
                                                                    goto ldv_47007;
  ldv_47007: 
#line 1234 
  ;
  
#line 1242 
  return npackets;
}


#line 1245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_tx(struct net_device *dev)
{
  int delta;
  
#line 1247 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1248 
  unsigned int dirty_tx = lp->dirty_tx;
  
#line 1250 
  int must_restart = 0;
  
#line 1252 
  goto ldv_47020;
  ldv_47019: 
#line 1253 
  ;
  {
    
#line 1253 
    int entry = (int)(lp->tx_mod_mask & dirty_tx);
    
#line 1254 
    int status = (int)((short)(lp->tx_ring + entry)->status);
    
#line 1256 
    if (status < 0) 
#line 1257 
                    goto ldv_47017; else ;
    
#line 1259 
    (lp->tx_ring + entry)->base = 0U;
    
#line 1261 
    if ((status & 16384) != 0) {
      
#line 1263 
      int err_status = (int)(lp->tx_ring + entry)->misc;
      
#line 1264 
      dev->stats.tx_errors += 1UL;
      
#line 1265 
      if ((lp->msg_enable & 128U) != 0U) 
#line 1265 
                                         netdev_err((struct net_device const *)dev,"Tx error status=%04x err_status=%08x\n",status,err_status); else ;
      
#line 1268 
      if ((err_status & 67108864) != 0) 
#line 1269 
                                        dev->stats.tx_aborted_errors += 1UL; else ;
      
#line 1270 
      if ((err_status & 134217728) != 0) 
#line 1271 
                                         dev->stats.tx_carrier_errors += 1UL; else ;
      
#line 1272 
      if ((err_status & 268435456) != 0) 
#line 1273 
                                         dev->stats.tx_window_errors += 1UL; else ;
      
#line 1275 
      if ((err_status & 1073741824) != 0) {
        
#line 1276 
        dev->stats.tx_fifo_errors += 1UL;
        
#line 1279 
        if ((lp->msg_enable & 128U) != 0U) 
#line 1279 
                                           netdev_err((struct net_device const *)dev,"Tx FIFO error!\n"); else ;
        
#line 1280 
        must_restart = 1;
      }
      else ;
    }
    else {
      
#line 1294 
      if ((status & 6144) != 0) 
#line 1295 
                                dev->stats.collisions += 1UL; else ;
      
#line 1296 
      dev->stats.tx_packets += 1UL;
    }
    
#line 1300 
    if (*(lp->tx_skbuff + entry) != (struct sk_buff *)0) {
      
#line 1301 
      pci_unmap_single(lp->pci_dev,*(lp->tx_dma_addr + entry),(unsigned long)(*(lp->tx_skbuff + entry))->len,1);
      
#line 1305 
      dev_kfree_skb_any(*(lp->tx_skbuff + entry));
      
#line 1306 
      *(lp->tx_skbuff + entry) = (struct sk_buff *)0;
      
#line 1307 
      *(lp->tx_dma_addr + entry) = 0ULL;
    }
    else ;
    
#line 1309 
    dirty_tx += 1U;
  }
  ldv_47020: 
#line 1311 
  ;
  
#line 1252 
  if (lp->cur_tx != dirty_tx) 
#line 1254 
                              goto ldv_47019; else 
#line 1257 
                                                   goto ldv_47017;
  ldv_47017: 
#line 1258 
  ;
  
#line 1312 
  delta = (int)((lp->cur_tx - dirty_tx) & (lp->tx_mod_mask + lp->tx_ring_size));
  
#line 1313 
  if (lp->tx_ring_size < (unsigned int)delta) {
    
#line 1314 
    if ((lp->msg_enable & 1U) != 0U) 
#line 1314 
                                     netdev_err((struct net_device const *)dev,"out-of-sync dirty pointer, %d vs. %d, full=%d\n",dirty_tx,lp->cur_tx,(int)lp->tx_full); else ;
    
#line 1316 
    dirty_tx = lp->tx_ring_size + dirty_tx;
    
#line 1317 
    delta = (int)((unsigned int)delta - lp->tx_ring_size);
  }
  else ;
  
#line 1320 
  if ((int)lp->tx_full != 0) {
    bool tmp_0;
    
#line 1320 
    tmp_0 = netif_queue_stopped((struct net_device const *)dev);
    
#line 1320 
    if ((int)tmp_0 != 0) {
      
#line 1321 
      if (lp->tx_ring_size + 4294967294U > (unsigned int)delta) {
        
#line 1324 
        lp->tx_full = (char)0;
        
#line 1325 
        netif_wake_queue(dev);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1327 
  lp->dirty_tx = dirty_tx;
  
#line 1329 
  return must_restart;
}


#line 1332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_poll(struct napi_struct *napi, int budget)
{
  struct pcnet32_private *tmp;
  unsigned long flags;
  int work_done;
  u16 val;
  int tmp_0;
  {
    
#line 1334 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1334 
    tmp = (struct pcnet32_private *)__mptr + 18446744073709551392U;
  }
  
#line 1334 
  struct pcnet32_private *lp = tmp;
  
#line 1335 
  struct net_device *dev = lp->dev;
  
#line 1336 
  unsigned long ioaddr = dev->base_addr;
  
#line 1341 
  work_done = pcnet32_rx(dev,budget);
  
#line 1343 
  ldv___ldv_spin_lock_96(& lp->lock);
  
#line 1344 
  tmp_0 = pcnet32_tx(dev);
  
#line 1344 
  if (tmp_0 != 0) {
    
#line 1346 
    (*((lp->a)->reset))(ioaddr);
    
#line 1347 
    (*((lp->a)->write_csr))(ioaddr,4,(unsigned short)2325);
    
#line 1348 
    pcnet32_restart(dev,2U);
    
#line 1349 
    netif_wake_queue(dev);
  }
  else ;
  
#line 1351 
  ldv_spin_unlock_irqrestore_97(& lp->lock,flags);
  
#line 1353 
  if (work_done < budget) {
    
#line 1354 
    ldv___ldv_spin_lock_98(& lp->lock);
    
#line 1356 
    __napi_complete(napi);
    
#line 1359 
    val = (*((lp->a)->read_csr))(ioaddr,3);
    
#line 1360 
    val = (unsigned short)((unsigned int)val & 255U);
    
#line 1361 
    (*((lp->a)->write_csr))(ioaddr,3,(unsigned short)((int)val));
    
#line 1364 
    (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)64);
    
#line 1366 
    ldv_spin_unlock_irqrestore_99(& lp->lock,flags);
  }
  else ;
  
#line 1368 
  return work_done;
}


#line 1373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 1375 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1376 
  int j = (int)lp->phycount * 32;
  
#line 1378 
  __retres = (int)((unsigned long)(j + 136) * (unsigned long)2U);
  
#line 1378 
  return __retres;
}


#line 1381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *ptr)
{
  int i;
  int csr0;
  unsigned long flags;
  u16 tmp_0;
  u16 *tmp_1;
  u16 *tmp_2;
  u16 *tmp_3;
  u16 *tmp_4;
  u16 *tmp_5;
  u16 *tmp_6;
  u16 *tmp_7;
  
#line 1385 
  u16 *buff = (u16 *)ptr;
  
#line 1386 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1387 
  struct pcnet32_access const *a = lp->a;
  
#line 1388 
  ulong ioaddr = dev->base_addr;
  
#line 1391 
  ldv___ldv_spin_lock_100(& lp->lock);
  
#line 1393 
  tmp_0 = (*(a->read_csr))(ioaddr,0);
  
#line 1393 
  csr0 = (int)tmp_0;
  
#line 1394 
  if ((csr0 & 4) == 0) 
#line 1395 
                       pcnet32_suspend(dev,& flags,1); else ;
  
#line 1398 
  i = 0;
  
#line 1398 
  goto ldv_47051;
  ldv_47050: 
#line 1399 
  ;
  
#line 1399 
  tmp_1 = buff;
  
#line 1399 
  buff += 1;
  
#line 1399 
  *tmp_1 = inw((int)(ioaddr + (ulong)i));
  
#line 1398 
  i += 2;
  ldv_47051: 
#line 1399 
  ;
  
#line 1398 
  if (i <= 15) 
#line 1400 
               goto ldv_47050; else 
#line 1403 
                                    goto ldv_47052;
  ldv_47052: 
#line 1404 
  ;
  
#line 1402 
  i = 0;
  
#line 1402 
  goto ldv_47054;
  ldv_47053: 
#line 1403 
  ;
  
#line 1403 
  tmp_2 = buff;
  
#line 1403 
  buff += 1;
  
#line 1403 
  *tmp_2 = (*(a->read_csr))(ioaddr,i);
  
#line 1402 
  i += 1;
  ldv_47054: 
#line 1403 
  ;
  
#line 1402 
  if (i <= 89) 
#line 1404 
               goto ldv_47053; else 
#line 1407 
                                    goto ldv_47055;
  ldv_47055: 
#line 1408 
  ;
  
#line 1405 
  tmp_3 = buff;
  
#line 1405 
  buff += 1;
  
#line 1405 
  *tmp_3 = (*(a->read_csr))(ioaddr,112);
  
#line 1406 
  tmp_4 = buff;
  
#line 1406 
  buff += 1;
  
#line 1406 
  *tmp_4 = (*(a->read_csr))(ioaddr,114);
  
#line 1409 
  i = 0;
  
#line 1409 
  goto ldv_47057;
  ldv_47056: 
#line 1410 
  ;
  
#line 1410 
  tmp_5 = buff;
  
#line 1410 
  buff += 1;
  
#line 1410 
  *tmp_5 = (*(a->read_bcr))(ioaddr,i);
  
#line 1409 
  i += 1;
  ldv_47057: 
#line 1410 
  ;
  
#line 1409 
  if (i <= 29) 
#line 1411 
               goto ldv_47056; else 
#line 1414 
                                    goto ldv_47058;
  ldv_47058: 
#line 1415 
  ;
  
#line 1412 
  tmp_6 = buff;
  
#line 1412 
  buff += 1;
  
#line 1412 
  *tmp_6 = (unsigned short)0U;
  
#line 1414 
  i = 31;
  
#line 1414 
  goto ldv_47060;
  ldv_47059: 
#line 1415 
  ;
  
#line 1415 
  tmp_7 = buff;
  
#line 1415 
  buff += 1;
  
#line 1415 
  *tmp_7 = (*(a->read_bcr))(ioaddr,i);
  
#line 1414 
  i += 1;
  ldv_47060: 
#line 1415 
  ;
  
#line 1414 
  if (i <= 35) 
#line 1416 
               goto ldv_47059; else 
#line 1419 
                                    goto ldv_47061;
  ldv_47061: 
#line 1420 
  ;
  
#line 1418 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    int j;
    
#line 1420 
    j = 0;
    
#line 1420 
    goto ldv_47067;
    ldv_47066: 
#line 1421 
    ;
    
#line 1421 
    if ((lp->phymask & (unsigned int)(1 << j)) != 0U) {
      u16 *tmp_8;
      
#line 1422 
      i = 0;
      
#line 1422 
      goto ldv_47064;
      ldv_47063: 
#line 1423 
      ;
      
#line 1423 
      (*((lp->a)->write_bcr))(ioaddr,33,(unsigned short)((int)((unsigned short)((j << 5) | i))));
      
#line 1425 
      tmp_8 = buff;
      
#line 1425 
      buff += 1;
      
#line 1425 
      *tmp_8 = (*((lp->a)->read_bcr))(ioaddr,34);
      
#line 1422 
      i += 1;
      ldv_47064: 
#line 1423 
      ;
      
#line 1422 
      if (i <= 31) 
#line 1424 
                   goto ldv_47063; else 
#line 1427 
                                        goto ldv_47065;
      ldv_47065: 
#line 1428 
      ;
    }
    else ;
    
#line 1420 
    j += 1;
    ldv_47067: 
#line 1421 
    ;
    
#line 1420 
    if (j <= 31) 
#line 1422 
                 goto ldv_47066; else 
#line 1425 
                                      goto ldv_47068;
    ldv_47068: 
#line 1426 
    ;
  }
  else ;
  
#line 1431 
  if ((csr0 & 4) == 0) {
    int csr5;
    u16 tmp_9;
    
#line 1435 
    tmp_9 = (*(a->read_csr))(ioaddr,5);
    
#line 1435 
    csr5 = (int)tmp_9;
    
#line 1436 
    (*(a->write_csr))(ioaddr,5,(unsigned short)((int)((unsigned short)csr5) & 65534));
  }
  else ;
  
#line 1439 
  ldv_spin_unlock_irqrestore_101(& lp->lock,flags);
  
#line 1440 
  return;
}


#line 1442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct ethtool_ops const pcnet32_ethtool_ops = {.get_settings = & pcnet32_get_settings, .set_settings = & pcnet32_set_settings, .get_drvinfo = & pcnet32_get_drvinfo, .get_regs_len = & pcnet32_get_regs_len, .get_regs = & pcnet32_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & pcnet32_get_msglevel, .set_msglevel = & pcnet32_set_msglevel, .nway_reset = & pcnet32_nway_reset, .get_link = & pcnet32_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & pcnet32_get_ringparam, .set_ringparam = & pcnet32_set_ringparam, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = & pcnet32_ethtool_test, .get_strings = & pcnet32_get_strings, .set_phys_id = & pcnet32_set_phys_id, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & pcnet32_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 1463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_probe_vlbus(unsigned int *pcnet32_portlist_0)
{
  unsigned int *port;
  unsigned int ioaddr;
  struct resource *tmp_1;
  
#line 1468 
  port = pcnet32_portlist_0;
  
#line 1468 
  goto ldv_47077;
  ldv_47076: 
#line 1469 
  ;
  
#line 1469 
  tmp_1 = __request_region(& ioport_resource,(unsigned long long)ioaddr,32ULL,"pcnet32_probe_vlbus",0);
  
#line 1469 
  if (tmp_1 != (struct resource *)0) {
    unsigned char tmp;
    
#line 1472 
    tmp = inb((int)(ioaddr + 14U));
    
#line 1472 
    if ((unsigned int)tmp == 87U) {
      unsigned char tmp_0;
      
#line 1472 
      tmp_0 = inb((int)(ioaddr + 15U));
      
#line 1472 
      if ((unsigned int)tmp_0 == 87U) 
#line 1474 
                                      pcnet32_probe1((unsigned long)ioaddr,0,(struct pci_dev *)0); else 
                                                                    
#line 1476 
                                                                    __release_region(& ioport_resource,(unsigned long long)ioaddr,32ULL);
    }
    else 
#line 1476 
         __release_region(& ioport_resource,(unsigned long long)ioaddr,32ULL);
  }
  else ;
  
#line 1468 
  port += 1;
  ldv_47077: 
#line 1469 
  ;
  
#line 1468 
  ioaddr = *port;
  
#line 1468 
  if (ioaddr != 0U) 
#line 1470 
                    goto ldv_47076; else 
#line 1473 
                                         goto ldv_47078;
  ldv_47078: 
#line 1474 
  ;
  
#line 1475 
  return;
}


#line 1483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_probe_pci(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  unsigned long ioaddr;
  int err;
  int tmp;
  struct resource *tmp_0;
  
#line 1488 
  err = pci_enable_device(pdev);
  
#line 1489 
  if (err < 0) {
    
#line 1490 
    if ((pcnet32_debug & 2) != 0) 
#line 1491 
                                  printk("\001",err); else ;
    
#line 1492 
    __retres = err;
    
#line 1492 
    goto return_label;
  }
  else ;
  
#line 1494 
  pci_set_master(pdev);
  
#line 1496 
  ioaddr = (unsigned long)pdev->resource[0].start;
  
#line 1497 
  if (ioaddr == 0UL) {
    
#line 1498 
    if ((pcnet32_debug & 2) != 0) 
#line 1499 
                                  printk("\001"); else ;
    
#line 1500 
    __retres = -19;
    
#line 1500 
    goto return_label;
  }
  else ;
  
#line 1503 
  tmp = pci_dma_supported(pdev,4294967295ULL);
  
#line 1503 
  if (tmp == 0) {
    
#line 1504 
    if ((pcnet32_debug & 2) != 0) 
#line 1505 
                                  printk("\001"); else ;
    
#line 1506 
    __retres = -19;
    
#line 1506 
    goto return_label;
  }
  else ;
  
#line 1508 
  tmp_0 = __request_region(& ioport_resource,(unsigned long long)ioaddr,32ULL,"pcnet32_probe_pci",0);
  
#line 1508 
  if (tmp_0 == (struct resource *)0) {
    
#line 1509 
    if ((pcnet32_debug & 2) != 0) 
#line 1510 
                                  printk("\001"); else ;
    
#line 1511 
    __retres = -16;
    
#line 1511 
    goto return_label;
  }
  else ;
  
#line 1514 
  err = pcnet32_probe1(ioaddr,1,pdev);
  
#line 1515 
  if (err < 0) 
#line 1516 
               pci_disable_device(pdev); else ;
  
#line 1518 
  __retres = err;
  return_label: 
#line 1518 
                return __retres;
}


#line 1521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct net_device_ops const pcnet32_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & pcnet32_open, .ndo_stop = & pcnet32_close, .ndo_start_xmit = & pcnet32_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & pcnet32_set_multicast_list, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & pcnet32_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & eth_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & pcnet32_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & pcnet32_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & pcnet32_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 1542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_probe1(unsigned long ioaddr, int shared, struct pci_dev *pdev)
{
  int __retres;
  struct pcnet32_private *lp;
  int i;
  int media;
  int fdx;
  int mii;
  int fset;
  int dxsuflo;
  int sram;
  int chip_version;
  char *chipname;
  struct net_device *dev;
  u8 promaddr[6U];
  u16 tmp_1;
  u16 tmp_3;
  u16 tmp_4;
  int tmp_12;
  bool tmp_11;
  int tmp_16;
  bool tmp_15;
  int tmp_25;
  char const *tmp_24;
  int tmp_31;
  u16 tmp_32;
  
#line 1550 
  struct pcnet32_access const *a = (struct pcnet32_access const *)0;
  
#line 1552 
  int ret = -19;
  
#line 1555 
  pcnet32_wio_reset(ioaddr);
  
#line 1558 
  tmp_1 = pcnet32_wio_read_csr(ioaddr,0);
  
#line 1558 
  if ((unsigned int)tmp_1 == 4U) {
    int tmp_2;
    
#line 1558 
    tmp_2 = pcnet32_wio_check(ioaddr);
    
#line 1558 
    if (tmp_2 != 0) 
#line 1559 
                    a = & pcnet32_wio; else 
#line 1558 
                                            goto _LAND_0;
  }
  else {
    _LAND_0: {
               u16 tmp;
               
#line 1561 
               pcnet32_dwio_reset(ioaddr);
               
#line 1562 
               tmp = pcnet32_dwio_read_csr(ioaddr,0);
               
#line 1562 
               if ((unsigned int)tmp == 4U) {
                 int tmp_0;
                 
#line 1562 
                 tmp_0 = pcnet32_dwio_check(ioaddr);
                 
#line 1562 
                 if (tmp_0 != 0) 
#line 1564 
                                 a = & pcnet32_dwio; else 
#line 1562 
                                                          goto _LAND;
               }
               else {
                 _LAND: {
                          
#line 1566 
                          if ((pcnet32_debug & 2) != 0) 
#line 1567 
                                                        printk("\001"); else ;
                          
#line 1568 
                          goto err_release_region;
                        }
               }
             }
  }
  
#line 1573 
  tmp_3 = (*(a->read_csr))(ioaddr,88);
  
#line 1573 
  tmp_4 = (*(a->read_csr))(ioaddr,89);
  
#line 1572 
  chip_version = (int)tmp_3 | ((int)tmp_4 << 16);
  
#line 1574 
  if ((pcnet32_debug & 2) != 0 && (pcnet32_debug & 8192) != 0) 
#line 1575 
                                                               printk("\001",chip_version); else ;
  
#line 1576 
  if ((chip_version & 4095) != 3) {
    
#line 1577 
    if ((pcnet32_debug & 2) != 0) 
#line 1578 
                                  printk("\001"); else ;
    
#line 1579 
    goto err_release_region;
  }
  else ;
  
#line 1583 
  sram = 0;
  
#line 1583 
  dxsuflo = sram;
  
#line 1583 
  fset = dxsuflo;
  
#line 1583 
  mii = fset;
  
#line 1583 
  fdx = mii;
  
#line 1584 
  chip_version = (chip_version >> 12) & 65535;
  
#line 1586 
  switch (chip_version) {
    u16 tmp_5;
    case 9248: 
#line 1587 
    ;
    
#line 1588 
    chipname = (char *)"PCnet/PCI 79C970";
    
#line 1589 
    goto ldv_47107;
    case 9264: 
#line 1590 
    ;
    
#line 1591 
    if (shared != 0) 
#line 1592 
                     chipname = (char *)"PCnet/PCI 79C970"; else 
#line 1594 
                                                                 chipname = (char *)"PCnet/32 79C965";
    
#line 1595 
    goto ldv_47107;
    case 9761: 
#line 1596 
    ;
    
#line 1597 
    chipname = (char *)"PCnet/PCI II 79C970A";
    
#line 1598 
    fdx = 1;
    
#line 1599 
    goto ldv_47107;
    case 9763: 
#line 1600 
    ;
    
#line 1601 
    chipname = (char *)"PCnet/FAST 79C971";
    
#line 1602 
    fdx = 1;
    
#line 1603 
    mii = 1;
    
#line 1604 
    fset = 1;
    
#line 1605 
    goto ldv_47107;
    case 9764: 
#line 1606 
    ;
    
#line 1607 
    chipname = (char *)"PCnet/FAST+ 79C972";
    
#line 1608 
    fdx = 1;
    
#line 1609 
    mii = 1;
    
#line 1610 
    fset = 1;
    
#line 1611 
    goto ldv_47107;
    case 9765: 
#line 1612 
    ;
    
#line 1613 
    chipname = (char *)"PCnet/FAST III 79C973";
    
#line 1614 
    fdx = 1;
    
#line 1615 
    mii = 1;
    
#line 1616 
    sram = 1;
    
#line 1617 
    goto ldv_47107;
    case 9766: 
#line 1618 
    ;
    
#line 1619 
    chipname = (char *)"PCnet/Home 79C978";
    
#line 1620 
    fdx = 1;
    
#line 1627 
    tmp_5 = (*(a->read_bcr))(ioaddr,49);
    
#line 1627 
    media = (int)tmp_5;
    
#line 1628 
    media &= -4;
    
#line 1629 
    if (cards_found <= 7 && homepna[cards_found] != 0) 
#line 1630 
                                                       media |= 1; else ;
    
#line 1631 
    if ((pcnet32_debug & 2) != 0) {
      char *tmp_6;
      
#line 1632 
      if ((media & 1) != 0) 
#line 1632 
                            tmp_6 = (char *)"1"; else 
#line 1632 
                                                      tmp_6 = (char *)"10";
      
#line 1632 
      printk("\001",tmp_6);
    }
    else ;
    
#line 1634 
    (*(a->write_bcr))(ioaddr,49,(unsigned short)((int)((unsigned short)media)));
    
#line 1635 
    goto ldv_47107;
    case 9767: 
#line 1636 
    ;
    
#line 1637 
    chipname = (char *)"PCnet/FAST III 79C975";
    
#line 1638 
    fdx = 1;
    
#line 1639 
    mii = 1;
    
#line 1640 
    sram = 1;
    
#line 1641 
    goto ldv_47107;
    case 9768: 
#line 1642 
    ;
    
#line 1643 
    chipname = (char *)"PCnet/PRO 79C976";
    
#line 1644 
    fdx = 1;
    
#line 1645 
    mii = 1;
    
#line 1646 
    goto ldv_47107;
    default: 
#line 1647 
    ;
    
#line 1648 
    if ((pcnet32_debug & 2) != 0) 
#line 1649 
                                  printk("\001",chip_version); else ;
    
#line 1651 
    goto err_release_region;
  }
  ldv_47107: 
#line 1662 
  ;
  
#line 1662 
  if (fset != 0) {
    u16 tmp_7;
    
#line 1663 
    tmp_7 = (*(a->read_bcr))(ioaddr,18);
    
#line 1663 
    ;
    
#line 1663 
    (*(a->write_bcr))(ioaddr,18,(unsigned short)((int)((unsigned int)tmp_7 | 2144U)));
    
#line 1664 
    (*(a->read_csr))(ioaddr,80);
    
#line 1664 
    ;
    
#line 1664 
    (*(a->write_csr))(ioaddr,80,(unsigned short)3072);
    
#line 1666 
    dxsuflo = 1;
  }
  else ;
  
#line 1675 
  if (sram != 0) {
    u16 tmp_8;
    
#line 1688 
    (*(a->write_bcr))(ioaddr,25,(unsigned short)23);
    
#line 1689 
    (*(a->write_bcr))(ioaddr,26,(unsigned short)12);
    
#line 1691 
    tmp_8 = (*(a->read_bcr))(ioaddr,18);
    
#line 1691 
    ;
    
#line 1691 
    (*(a->write_bcr))(ioaddr,18,(unsigned short)((int)((unsigned int)tmp_8 | 2048U)));
  }
  else ;
  
#line 1694 
  dev = ldv_alloc_etherdev_mqs_102(728,1U,1U);
  
#line 1695 
  if (dev == (struct net_device *)0) {
    
#line 1696 
    ret = -12;
    
#line 1697 
    goto err_release_region;
  }
  else ;
  
#line 1700 
  if (pdev != (struct pci_dev *)0) 
#line 1701 
                                   dev->dev.parent = & pdev->dev; else ;
  
#line 1703 
  if ((pcnet32_debug & 2) != 0) 
#line 1704 
                                printk("\001",chipname,ioaddr); else ;
  
#line 1713 
  i = 0;
  
#line 1713 
  goto ldv_47119;
  ldv_47118: 
#line 1714 
  ;
  {
    unsigned int val;
    u16 tmp_9;
    
#line 1715 
    tmp_9 = (*(a->read_csr))(ioaddr,i + 12);
    
#line 1715 
    val = (unsigned int)tmp_9;
    
#line 1717 
    *(dev->dev_addr + i * 2) = (unsigned char)val;
    
#line 1718 
    *(dev->dev_addr + ((unsigned int)(i * 2) + 1U)) = (unsigned char)(val >> 8);
  }
  
#line 1713 
  i += 1;
  ldv_47119: 
#line 1714 
  ;
  
#line 1713 
  if (i <= 2) 
#line 1715 
              goto ldv_47118; else 
#line 1718 
                                   goto ldv_47120;
  ldv_47120: 
#line 1719 
  ;
  
#line 1722 
  i = 0;
  
#line 1722 
  goto ldv_47122;
  ldv_47121: 
#line 1723 
  ;
  
#line 1723 
  promaddr[i] = inb((int)(ioaddr + (unsigned long)i));
  
#line 1722 
  i += 1;
  ldv_47122: 
#line 1723 
  ;
  
#line 1722 
  if (i <= 5) 
#line 1724 
              goto ldv_47121; else 
#line 1727 
                                   goto ldv_47123;
  ldv_47123: 
#line 1728 
  ;
  
#line 1725 
  tmp_11 = ether_addr_equal((u8 const *)(& promaddr),(u8 const *)dev->dev_addr);
  
#line 1725 
  if (tmp_11) 
#line 1725 
              tmp_12 = 0; else 
#line 1725 
                               tmp_12 = 1;
  
#line 1725 
  if (tmp_12) 
#line 1725 
              goto _LOR;
  else {
    int tmp_14;
    bool tmp_13;
    
#line 1726 
    tmp_13 = is_valid_ether_addr((u8 const *)dev->dev_addr);
    
#line 1726 
    if (tmp_13) 
#line 1726 
                tmp_14 = 0; else 
#line 1726 
                                 tmp_14 = 1;
    
#line 1726 
    if (tmp_14) {
      bool tmp_10;
      _LOR: 
#line 1727 
      tmp_10 = is_valid_ether_addr((u8 const *)(& promaddr));
      
#line 1727 
      if ((int)tmp_10 != 0) {
        
#line 1728 
        if ((pcnet32_debug & 2) != 0) {
          
#line 1729 
          printk("");
          
#line 1730 
          printk("\001");
        }
        else ;
        
#line 1732 
        memcpy((void *)dev->dev_addr,(void const *)(& promaddr),6UL);
      }
      else ;
    }
    else ;
  }
  
#line 1737 
  tmp_15 = is_valid_ether_addr((u8 const *)dev->dev_addr);
  
#line 1737 
  if (tmp_15) 
#line 1737 
              tmp_16 = 0; else 
#line 1737 
                               tmp_16 = 1;
  
#line 1737 
  if (tmp_16) 
#line 1738 
              eth_zero_addr(dev->dev_addr); else ;
  
#line 1740 
  if ((pcnet32_debug & 2) != 0) {
    
#line 1741 
    printk("",dev->dev_addr);
    
#line 1744 
    if (((chip_version + 1) & 65534) == 9764) {
      u16 tmp_17;
      u16 tmp_18;
      u16 tmp_19;
      u16 tmp_20;
      u16 tmp_21;
      
#line 1745 
      tmp_17 = (*(a->read_csr))(ioaddr,80);
      
#line 1745 
      i = (int)tmp_17 & 3072;
      
#line 1746 
      printk("\001",i);
      
#line 1747 
      switch (i >> 10) {
        case 0: 
#line 1748 
        ;
        
#line 1749 
        printk("");
        
#line 1750 
        goto ldv_47125;
        case 1: 
#line 1751 
        ;
        
#line 1752 
        printk("");
        
#line 1753 
        goto ldv_47125;
        case 2: 
#line 1754 
        ;
        
#line 1755 
        printk("");
        
#line 1756 
        goto ldv_47125;
        case 3: 
#line 1757 
        ;
        
#line 1758 
        printk("");
        
#line 1759 
        goto ldv_47125;
      }
      ldv_47125: 
#line 1761 
      ;
      
#line 1761 
      tmp_18 = (*(a->read_bcr))(ioaddr,18);
      
#line 1761 
      i = (int)tmp_18;
      
#line 1762 
      printk("",i & 65535);
      
#line 1763 
      if ((i & 32) != 0) 
#line 1764 
                         printk(""); else ;
      
#line 1765 
      if ((i & 64) != 0) 
#line 1766 
                         printk(""); else ;
      
#line 1767 
      if ((i & 128) != 0) 
#line 1768 
                          printk(""); else ;
      
#line 1769 
      if ((i & 2048) != 0) 
#line 1770 
                           printk(""); else ;
      
#line 1771 
      tmp_19 = (*(a->read_bcr))(ioaddr,25);
      
#line 1771 
      i = (int)tmp_19;
      
#line 1772 
      printk("\001",i << 8);
      
#line 1773 
      tmp_20 = (*(a->read_bcr))(ioaddr,26);
      
#line 1773 
      i = (int)tmp_20;
      
#line 1774 
      printk("",i << 8);
      
#line 1775 
      tmp_21 = (*(a->read_bcr))(ioaddr,27);
      
#line 1775 
      i = (int)tmp_21;
      
#line 1776 
      if ((i & 16384) != 0) 
#line 1777 
                            printk(""); else ;
    }
    else ;
  }
  else ;
  
#line 1781 
  dev->base_addr = ioaddr;
  
#line 1782 
  lp = (struct pcnet32_private *)netdev_priv((struct net_device const *)dev);
  
#line 1784 
  lp->init_block = (struct pcnet32_init_block *)pci_alloc_consistent(pdev,28UL,& lp->init_dma_addr);
  
#line 1786 
  if (lp->init_block == (struct pcnet32_init_block *)0) {
    
#line 1787 
    if ((pcnet32_debug & 2) != 0) 
#line 1788 
                                  printk("\001"); else ;
    
#line 1789 
    ret = -12;
    
#line 1790 
    goto err_free_netdev;
  }
  else ;
  
#line 1792 
  lp->pci_dev = pdev;
  
#line 1794 
  lp->dev = dev;
  
#line 1796 
  spinlock_check(& lp->lock);
  {
    struct lock_class_key __key;
    
#line 1796 
    __raw_spin_lock_init(& lp->lock.__anonCompField_spinlock_18.rlock,"&(&lp->lock)->rlock",& __key);
  }
  
#line 1798 
  lp->name = (char const *)chipname;
  
#line 1799 
  lp->shared_irq = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))shared;
  
#line 1800 
  lp->tx_ring_size = 16U;
  
#line 1801 
  lp->rx_ring_size = 32U;
  
#line 1802 
  lp->tx_mod_mask = lp->tx_ring_size + 4294967295U;
  
#line 1803 
  lp->rx_mod_mask = lp->rx_ring_size + 4294967295U;
  
#line 1804 
  lp->tx_len_bits = (unsigned short)16384U;
  
#line 1805 
  lp->rx_len_bits = (unsigned short)80U;
  
#line 1806 
  lp->mii_if.full_duplex = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))fdx;
  
#line 1807 
  lp->mii_if.phy_id_mask = 31;
  
#line 1808 
  lp->mii_if.reg_num_mask = 31;
  
#line 1809 
  lp->dxsuflo = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))dxsuflo;
  
#line 1810 
  lp->mii = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))mii;
  
#line 1811 
  lp->chip_version = (unsigned short)chip_version;
  
#line 1812 
  lp->msg_enable = (unsigned int)pcnet32_debug;
  
#line 1813 
  if (cards_found > 7 || (unsigned int)options[cards_found] > 15U) 
#line 1815 
                                                                   lp->options = 4; else 
                                                                    
#line 1817 
                                                                    lp->options = (int)options_mapping[options[cards_found]];
  
#line 1818 
  lp->mii_if.dev = dev;
  
#line 1819 
  lp->mii_if.mdio_read = & mdio_read;
  
#line 1820 
  lp->mii_if.mdio_write = & mdio_write;
  
#line 1823 
  lp->napi.weight = (int)(lp->rx_ring_size / 2U);
  
#line 1825 
  netif_napi_add(dev,& lp->napi,& pcnet32_poll,(int)(lp->rx_ring_size / 2U));
  
#line 1827 
  if ((fdx != 0 && (lp->options & 4) == 0) && (cards_found > 7 || full_duplex[cards_found] != 0)) 
    
#line 1829 
    lp->options |= 128; else ;
  
#line 1831 
  lp->a = a;
  
#line 1834 
  tmp_24 = pci_name((struct pci_dev const *)lp->pci_dev);
  
#line 1834 
  ;
  
#line 1834 
  tmp_25 = pcnet32_alloc_ring(dev,tmp_24);
  
#line 1834 
  if (tmp_25 != 0) {
    
#line 1835 
    ret = -12;
    
#line 1836 
    goto err_free_ring;
  }
  else ;
  
#line 1839 
  if (((unsigned int)*(dev->dev_addr) == 0U && (unsigned int)*(dev->dev_addr + 1U) == 224U) && (unsigned int)*(dev->dev_addr + 2U) == 117U) 
    
#line 1841 
    lp->options = 130; else ;
  
#line 1843 
  (lp->init_block)->mode = (unsigned short)3U;
  
#line 1844 
  (lp->init_block)->tlen_rlen = (unsigned short)((int)lp->tx_len_bits | (int)lp->rx_len_bits);
  
#line 1846 
  i = 0;
  
#line 1846 
  goto ldv_47133;
  ldv_47132: 
#line 1847 
  ;
  
#line 1847 
  (lp->init_block)->phys_addr[i] = *(dev->dev_addr + i);
  
#line 1846 
  i += 1;
  ldv_47133: 
#line 1847 
  ;
  
#line 1846 
  if (i <= 5) 
#line 1848 
              goto ldv_47132; else 
#line 1851 
                                   goto ldv_47134;
  ldv_47134: 
#line 1852 
  ;
  
#line 1848 
  (lp->init_block)->filter[0] = 0U;
  
#line 1849 
  (lp->init_block)->filter[1] = 0U;
  
#line 1850 
  (lp->init_block)->rx_ring = (unsigned int)lp->rx_ring_dma_addr;
  
#line 1851 
  (lp->init_block)->tx_ring = (unsigned int)lp->tx_ring_dma_addr;
  
#line 1854 
  (*(a->write_bcr))(ioaddr,20,(unsigned short)2);
  
#line 1856 
  (*(a->write_csr))(ioaddr,1,(unsigned short)((int)((unsigned short)lp->init_dma_addr)));
  
#line 1857 
  (*(a->write_csr))(ioaddr,2,(unsigned short)((int)((unsigned short)(lp->init_dma_addr >> 16))));
  
#line 1859 
  if (pdev != (struct pci_dev *)0) {
    
#line 1860 
    dev->irq = (int)pdev->irq;
    
#line 1861 
    if ((pcnet32_debug & 2) != 0) 
#line 1862 
                                  printk("",dev->irq); else ;
  }
  else {
    
#line 1864 
    unsigned long irq_mask = probe_irq_on();
    
#line 1872 
    (*(a->write_csr))(ioaddr,0,(unsigned short)65);
    
#line 1873 
    if (1) 
#line 1873 
           __const_udelay(4295000UL);
    else {
      
#line 1873 
      unsigned long __ms = 1UL;
      {
        unsigned long tmp_27;
        
#line 1873 
        goto ldv_47138;
        ldv_47137: 
#line 1874 
        ;
        
#line 1873 
        __const_udelay(4295000UL);
        ldv_47138: 
#line 1875 
        ;
        
#line 1873 
        tmp_27 = __ms;
        
#line 1873 
        __ms -= 1UL;
        
#line 1873 
        ;
        
#line 1873 
        if (tmp_27 != 0UL) 
#line 1875 
                           goto ldv_47137; else 
#line 1878 
                                                goto ldv_47139;
        ldv_47139: 
#line 1879 
        ;
      }
    }
    
#line 1875 
    dev->irq = probe_irq_off(irq_mask);
    
#line 1876 
    if (dev->irq == 0) {
      
#line 1877 
      if ((pcnet32_debug & 2) != 0) 
#line 1878 
                                    printk(""); else ;
      
#line 1879 
      ret = -19;
      
#line 1880 
      goto err_free_ring;
    }
    else ;
    
#line 1882 
    if ((pcnet32_debug & 2) != 0) 
#line 1883 
                                  printk("",dev->irq); else ;
  }
  
#line 1887 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    u16 tmp_28;
    
#line 1890 
    tmp_28 = (*((lp->a)->read_bcr))(ioaddr,33);
    
#line 1890 
    lp->mii_if.phy_id = ((int)tmp_28 >> 5) & 31;
    
#line 1892 
    i = 0;
    
#line 1892 
    goto ldv_47144;
    ldv_47143: 
#line 1893 
    ;
    {
      unsigned short id1;
      unsigned short id2;
      int tmp_29;
      int tmp_30;
      
#line 1895 
      tmp_29 = mdio_read(dev,i,2);
      
#line 1895 
      id1 = (unsigned short)tmp_29;
      
#line 1896 
      if ((unsigned int)id1 == 65535U) 
#line 1897 
                                       goto ldv_47142; else ;
      
#line 1898 
      tmp_30 = mdio_read(dev,i,3);
      
#line 1898 
      id2 = (unsigned short)tmp_30;
      
#line 1899 
      if ((unsigned int)id2 == 65535U) 
#line 1900 
                                       goto ldv_47142; else ;
      
#line 1901 
      if (i == 31 && ((chip_version + 1) & 65534) == 9764) 
#line 1902 
                                                           goto ldv_47142; else ;
      
#line 1903 
      lp->phycount = (char)((int)lp->phycount + 1);
      
#line 1904 
      lp->phymask |= (unsigned int)(1 << i);
      
#line 1905 
      lp->mii_if.phy_id = i;
      
#line 1906 
      if ((pcnet32_debug & 2) != 0) 
#line 1907 
                                    printk("\001",(int)id1,(int)id2,i); else ;
    }
    ldv_47142: 
#line 1909 
    ;
    
#line 1892 
    i += 1;
    ldv_47144: 
#line 1893 
    ;
    
#line 1892 
    if (i <= 31) 
#line 1894 
                 goto ldv_47143; else 
#line 1897 
                                      goto ldv_47145;
    ldv_47145: 
#line 1898 
    ;
    
#line 1910 
    (*((lp->a)->write_bcr))(ioaddr,33,(unsigned short)((int)((unsigned short)lp->mii_if.phy_id) << 5U));
    
#line 1911 
    if ((int)lp->phycount > 1) 
#line 1912 
                               lp->options |= 3; else ;
  }
  else ;
  {
    struct lock_class_key __key_0;
    
#line 1915 
    init_timer_key(& lp->watchdog_timer,0U,"(&lp->watchdog_timer)",& __key_0);
  }
  
#line 1916 
  lp->watchdog_timer.data = (unsigned long)dev;
  
#line 1917 
  lp->watchdog_timer.function = (void (*)(unsigned long ))(& pcnet32_watchdog);
  
#line 1920 
  dev->netdev_ops = & pcnet32_netdev_ops;
  
#line 1921 
  dev->ethtool_ops = & pcnet32_ethtool_ops;
  
#line 1922 
  dev->watchdog_timeo = 1250;
  
#line 1925 
  tmp_31 = ldv_register_netdev_103(dev);
  
#line 1925 
  if (tmp_31 != 0) 
#line 1926 
                   goto err_free_ring; else ;
  
#line 1928 
  if (pdev != (struct pci_dev *)0) 
#line 1929 
                                   pci_set_drvdata(pdev,(void *)dev);
  else {
    
#line 1931 
    lp->next = pcnet32_dev;
    
#line 1932 
    pcnet32_dev = dev;
  }
  
#line 1935 
  if ((pcnet32_debug & 2) != 0) 
#line 1936 
                                printk("\001",(char *)(& dev->name),lp->name); else ;
  
#line 1937 
  cards_found += 1;
  
#line 1940 
  tmp_32 = (*(a->read_bcr))(ioaddr,2);
  
#line 1940 
  ;
  
#line 1940 
  (*(a->write_bcr))(ioaddr,2,(unsigned short)((int)((unsigned int)tmp_32 | 4096U)));
  
#line 1942 
  __retres = 0;
  
#line 1942 
  goto return_label;
  err_free_ring: 
#line 1944 
  ;
  
#line 1945 
  pcnet32_free_ring(dev);
  
#line 1946 
  pci_free_consistent(lp->pci_dev,28UL,(void *)lp->init_block,lp->init_dma_addr);
  err_free_netdev: 
#line 1948 
  ;
  
#line 1949 
  ldv_free_netdev_104(dev);
  err_release_region: 
#line 1950 
  ;
  
#line 1951 
  __release_region(& ioport_resource,(unsigned long long)ioaddr,32ULL);
  
#line 1952 
  __retres = ret;
  return_label: 
#line 1952 
                return __retres;
}


#line 1956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_alloc_ring(struct net_device *dev, char const *name)
{
  int __retres;
  
#line 1958 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1960 
  lp->tx_ring = (struct pcnet32_tx_head *)pci_alloc_consistent(lp->pci_dev,(unsigned long)lp->tx_ring_size * 16UL,& lp->tx_ring_dma_addr);
  
#line 1964 
  if (lp->tx_ring == (struct pcnet32_tx_head *)0) {
    
#line 1965 
    if ((lp->msg_enable & 1U) != 0U) 
#line 1965 
                                     netdev_err((struct net_device const *)dev,"Consistent memory allocation failed\n"); else ;
    
#line 1966 
    __retres = -12;
    
#line 1966 
    goto return_label;
  }
  else ;
  
#line 1969 
  lp->rx_ring = (struct pcnet32_rx_head *)pci_alloc_consistent(lp->pci_dev,(unsigned long)lp->rx_ring_size * 16UL,& lp->rx_ring_dma_addr);
  
#line 1973 
  if (lp->rx_ring == (struct pcnet32_rx_head *)0) {
    
#line 1974 
    if ((lp->msg_enable & 1U) != 0U) 
#line 1974 
                                     netdev_err((struct net_device const *)dev,"Consistent memory allocation failed\n"); else ;
    
#line 1975 
    __retres = -12;
    
#line 1975 
    goto return_label;
  }
  else ;
  
#line 1978 
  lp->tx_dma_addr = (dma_addr_t *)kcalloc((unsigned long)lp->tx_ring_size,8UL,32U);
  
#line 1980 
  if (lp->tx_dma_addr == (dma_addr_t *)0ULL) {
    
#line 1981 
    __retres = -12;
    
#line 1981 
    goto return_label;
  }
  else ;
  
#line 1983 
  lp->rx_dma_addr = (dma_addr_t *)kcalloc((unsigned long)lp->rx_ring_size,8UL,32U);
  
#line 1985 
  if (lp->rx_dma_addr == (dma_addr_t *)0ULL) {
    
#line 1986 
    __retres = -12;
    
#line 1986 
    goto return_label;
  }
  else ;
  
#line 1988 
  lp->tx_skbuff = (struct sk_buff **)kcalloc((unsigned long)lp->tx_ring_size,8UL,32U);
  
#line 1990 
  if (lp->tx_skbuff == (struct sk_buff **)0) {
    
#line 1991 
    __retres = -12;
    
#line 1991 
    goto return_label;
  }
  else ;
  
#line 1993 
  lp->rx_skbuff = (struct sk_buff **)kcalloc((unsigned long)lp->rx_ring_size,8UL,32U);
  
#line 1995 
  if (lp->rx_skbuff == (struct sk_buff **)0) {
    
#line 1996 
    __retres = -12;
    
#line 1996 
    goto return_label;
  }
  else ;
  
#line 1998 
  __retres = 0;
  return_label: 
#line 1998 
                return __retres;
}


#line 2001  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_free_ring(struct net_device *dev)
{
  
#line 2003 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2005 
  kfree((void const *)lp->tx_skbuff);
  
#line 2006 
  lp->tx_skbuff = (struct sk_buff **)0;
  
#line 2008 
  kfree((void const *)lp->rx_skbuff);
  
#line 2009 
  lp->rx_skbuff = (struct sk_buff **)0;
  
#line 2011 
  kfree((void const *)lp->tx_dma_addr);
  
#line 2012 
  lp->tx_dma_addr = (dma_addr_t *)0ULL;
  
#line 2014 
  kfree((void const *)lp->rx_dma_addr);
  
#line 2015 
  lp->rx_dma_addr = (dma_addr_t *)0ULL;
  
#line 2017 
  if (lp->tx_ring != (struct pcnet32_tx_head *)0) {
    
#line 2018 
    pci_free_consistent(lp->pci_dev,(unsigned long)lp->tx_ring_size * 16UL,(void *)lp->tx_ring,lp->tx_ring_dma_addr);
    
#line 2022 
    lp->tx_ring = (struct pcnet32_tx_head *)0;
  }
  else ;
  
#line 2025 
  if (lp->rx_ring != (struct pcnet32_rx_head *)0) {
    
#line 2026 
    pci_free_consistent(lp->pci_dev,(unsigned long)lp->rx_ring_size * 16UL,(void *)lp->rx_ring,lp->rx_ring_dma_addr);
    
#line 2030 
    lp->rx_ring = (struct pcnet32_rx_head *)0;
  }
  else ;
  
#line 2032 
  return;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_open(struct net_device *dev)
{
  int __retres;
  u16 val;
  int i;
  int rc;
  unsigned long flags;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  u16 tmp_3;
  u16 tmp_5;
  int tmp_13;
  u16 tmp_14;
  int tmp_15;
  
#line 2036 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2037 
  struct pci_dev *pdev = lp->pci_dev;
  
#line 2038 
  unsigned long ioaddr = dev->base_addr;
  
#line 2044 
  tmp_0 = ldv_request_irq_105((unsigned int)dev->irq,& pcnet32_interrupt,(unsigned long)((int)*((unsigned char *)lp + 512UL) << 7) & 255UL,(char const *)(& dev->name),(void *)dev);
  
#line 2044 
  if (tmp_0 != 0) {
    
#line 2047 
    __retres = -11;
    
#line 2047 
    goto return_label;
  }
  else ;
  
#line 2050 
  ldv___ldv_spin_lock_106(& lp->lock);
  
#line 2052 
  tmp_1 = is_valid_ether_addr((u8 const *)dev->dev_addr);
  
#line 2052 
  if (tmp_1) 
#line 2052 
             tmp_2 = 0; else 
#line 2052 
                             tmp_2 = 1;
  
#line 2052 
  if (tmp_2) {
    
#line 2053 
    rc = -22;
    
#line 2054 
    goto err_free_irq;
  }
  else ;
  
#line 2058 
  (*((lp->a)->reset))(ioaddr);
  
#line 2061 
  (*((lp->a)->write_bcr))(ioaddr,20,(unsigned short)2);
  
#line 2063 
  if ((lp->msg_enable & 32U) != 0U) 
#line 2063 
                                    netdev_printk("\001",(struct net_device const *)dev,"%s() irq %d tx/rx rings %#x/%#x init %#x\n","pcnet32_open",dev->irq,(unsigned int)lp->tx_ring_dma_addr,(unsigned int)lp->rx_ring_dma_addr,(unsigned int)lp->init_dma_addr); else ;
  
#line 2070 
  tmp_3 = (*((lp->a)->read_bcr))(ioaddr,2);
  
#line 2070 
  val = (unsigned short)((unsigned int)tmp_3 & 65533U);
  
#line 2071 
  if ((lp->options & 4) != 0) 
#line 2072 
                              val = (unsigned short)((unsigned int)val | 2U); else ;
  
#line 2073 
  (*((lp->a)->write_bcr))(ioaddr,2,(unsigned short)((int)val));
  
#line 2076 
  if ((unsigned int)*((unsigned char *)(& lp->mii_if) + 16UL) != 0U) {
    u16 tmp_4;
    
#line 2077 
    tmp_4 = (*((lp->a)->read_bcr))(ioaddr,9);
    
#line 2077 
    val = (unsigned short)((unsigned int)tmp_4 & 65532U);
    
#line 2078 
    if ((lp->options & 128) != 0) {
      
#line 2079 
      val = (unsigned short)((unsigned int)val | 1U);
      
#line 2080 
      if (lp->options == 128) 
#line 2081 
                              val = (unsigned short)((unsigned int)val | 2U); else ;
    }
    else 
      
#line 2082 
      if ((lp->options & 4) != 0) {
        
#line 2084 
        if ((unsigned int)lp->chip_version == 9767U) 
#line 2085 
                                                     val = (unsigned short)((unsigned int)val | 3U); else ;
      }
      else ;
    
#line 2087 
    (*((lp->a)->write_bcr))(ioaddr,9,(unsigned short)((int)val));
  }
  else ;
  
#line 2091 
  tmp_5 = (*((lp->a)->read_csr))(ioaddr,124);
  
#line 2091 
  val = (unsigned short)((unsigned int)tmp_5 & 65519U);
  
#line 2092 
  if ((lp->options & 3) == 2) 
#line 2093 
                              val = (unsigned short)((unsigned int)val | 16U); else ;
  
#line 2094 
  (*((lp->a)->write_csr))(ioaddr,124,(unsigned short)((int)val));
  
#line 2097 
  if ((pdev != (struct pci_dev *)0 && (unsigned int)pdev->subsystem_vendor == 4697U) && ((unsigned int)pdev->subsystem_device == 9985U || (unsigned int)pdev->subsystem_device == 9987U)) {
    
#line 2100 
    if ((lp->options & 4) != 0) {
      
#line 2101 
      lp->options = 192;
      
#line 2102 
      if ((lp->msg_enable & 4U) != 0U) 
#line 2102 
                                       netdev_printk("\001",(struct net_device const *)dev,"Setting 100Mb-Full Duplex\n"); else ;
    }
    else ;
  }
  else ;
  
#line 2106 
  if ((int)lp->phycount <= 1) {
    
#line 2112 
    if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U && (lp->options & 4) == 0) {
      u16 tmp_6;
      u16 tmp_7;
      
#line 2114 
      tmp_6 = (*((lp->a)->read_bcr))(ioaddr,32);
      
#line 2113 
      ;
      
#line 2113 
      (*((lp->a)->write_bcr))(ioaddr,32,(unsigned short)((int)((unsigned int)tmp_6 | 128U)));
      
#line 2116 
      tmp_7 = (*((lp->a)->read_bcr))(ioaddr,32);
      
#line 2116 
      val = (unsigned short)((unsigned int)tmp_7 & 65351U);
      
#line 2117 
      if ((lp->options & 128) != 0) 
#line 2118 
                                    val = (unsigned short)((unsigned int)val | 16U); else ;
      
#line 2119 
      if ((lp->options & 64) != 0) 
#line 2120 
                                   val = (unsigned short)((unsigned int)val | 8U); else ;
      
#line 2121 
      (*((lp->a)->write_bcr))(ioaddr,32,(unsigned short)((int)val));
    }
    else 
      
#line 2123 
      if ((lp->options & 4) != 0) {
        u16 tmp_8;
        u16 tmp_9;
        
#line 2125 
        tmp_8 = (*((lp->a)->read_bcr))(ioaddr,32);
        
#line 2124 
        ;
        
#line 2124 
        (*((lp->a)->write_bcr))(ioaddr,32,(unsigned short)((int)((unsigned int)tmp_8 | 128U)));
        
#line 2128 
        tmp_9 = (*((lp->a)->read_bcr))(ioaddr,32);
        
#line 2128 
        val = (unsigned short)((unsigned int)tmp_9 & 65383U);
        
#line 2129 
        val = (unsigned short)((unsigned int)val | 32U);
        
#line 2130 
        (*((lp->a)->write_bcr))(ioaddr,32,(unsigned short)((int)val));
      }
      else ;
  }
  else {
    u16 bmcr;
    u32 bcr9;
    
#line 2134 
    int first_phy = -1;
    
#line 2137 
    struct ethtool_cmd ecmd = {.cmd = 1U, .supported = 0U, .advertising = 0U, .speed = (unsigned short)0, .duplex = (unsigned char)0, .port = (unsigned char)0, .phy_address = (unsigned char)0, .transceiver = (unsigned char)0, .autoneg = (unsigned char)0, .mdio_support = (unsigned char)0, .maxtxpkt = 0U, .maxrxpkt = 0U, .speed_hi = (unsigned short)0, .eth_tp_mdix = (unsigned char)0, .eth_tp_mdix_ctrl = (unsigned char)0, .lp_advertising = 0U, .reserved = {0U, 0U}};
    
#line 2143 
    val = (*((lp->a)->read_bcr))(ioaddr,2);
    
#line 2144 
    (*((lp->a)->write_bcr))(ioaddr,2,(unsigned short)((int)val & 65533));
    
#line 2145 
    val = (*((lp->a)->read_bcr))(ioaddr,32);
    
#line 2146 
    (*((lp->a)->write_bcr))(ioaddr,32,(unsigned short)((int)val & 65407));
    
#line 2148 
    if ((lp->options & 4) == 0) {
      int tmp_10;
      u16 tmp_11;
      
#line 2150 
      ecmd.port = (unsigned char)2U;
      
#line 2151 
      ecmd.transceiver = (unsigned char)0U;
      
#line 2152 
      ecmd.autoneg = (unsigned char)0U;
      
#line 2155 
      if ((lp->options & 64) != 0) 
#line 2155 
                                   tmp_10 = 100; else 
#line 2155 
                                                      tmp_10 = 10;
      
#line 2153 
      ethtool_cmd_speed_set(& ecmd,(unsigned int)tmp_10);
      
#line 2156 
      tmp_11 = (*((lp->a)->read_bcr))(ioaddr,9);
      
#line 2156 
      bcr9 = (unsigned int)tmp_11;
      
#line 2158 
      if ((lp->options & 128) != 0) {
        
#line 2159 
        ecmd.duplex = (unsigned char)1U;
        
#line 2160 
        bcr9 |= 1U;
      }
      else {
        
#line 2162 
        ecmd.duplex = (unsigned char)0U;
        
#line 2163 
        bcr9 |= 4294967294U;
      }
      
#line 2165 
      (*((lp->a)->write_bcr))(ioaddr,9,(unsigned short)((int)((unsigned short)bcr9)));
    }
    else ;
    
#line 2168 
    i = 0;
    
#line 2168 
    goto ldv_47173;
    ldv_47172: 
#line 2169 
    ;
    
#line 2169 
    if ((lp->phymask & (unsigned int)(1 << i)) != 0U) {
      int tmp_12;
      
#line 2171 
      tmp_12 = mdio_read(dev,i,0);
      
#line 2171 
      bmcr = (unsigned short)tmp_12;
      
#line 2172 
      if (first_phy == -1) {
        
#line 2173 
        first_phy = i;
        
#line 2174 
        mdio_write(dev,i,0,(int)bmcr & -1025);
      }
      else 
#line 2177 
           mdio_write(dev,i,0,(int)((unsigned int)bmcr | 1024U));
      
#line 2181 
      lp->mii_if.phy_id = i;
      
#line 2182 
      ecmd.phy_address = (unsigned char)i;
      
#line 2183 
      if ((lp->options & 4) != 0) {
        
#line 2184 
        mii_ethtool_gset(& lp->mii_if,& ecmd);
        
#line 2185 
        ecmd.autoneg = (unsigned char)1U;
      }
      else ;
      
#line 2187 
      mii_ethtool_sset(& lp->mii_if,& ecmd);
    }
    else ;
    
#line 2168 
    i += 1;
    ldv_47173: 
#line 2169 
    ;
    
#line 2168 
    if (i <= 31) 
#line 2170 
                 goto ldv_47172; else 
#line 2173 
                                      goto ldv_47174;
    ldv_47174: 
#line 2174 
    ;
    
#line 2190 
    lp->mii_if.phy_id = first_phy;
    
#line 2191 
    if ((lp->msg_enable & 4U) != 0U) 
#line 2191 
                                     netdev_info((struct net_device const *)dev,"Using PHY number %d\n",first_phy); else ;
  }
  
#line 2202 
  (lp->init_block)->mode = (unsigned short)((unsigned int)((int)((unsigned short)lp->options) << 7U) & 384U);
  
#line 2204 
  pcnet32_load_multicast(dev);
  
#line 2206 
  tmp_13 = pcnet32_init_ring(dev);
  
#line 2206 
  if (tmp_13 != 0) {
    
#line 2207 
    rc = -12;
    
#line 2208 
    goto err_free_ring;
  }
  else ;
  
#line 2211 
  napi_enable(& lp->napi);
  
#line 2214 
  (*((lp->a)->write_csr))(ioaddr,1,(unsigned short)((int)((unsigned short)lp->init_dma_addr)));
  
#line 2215 
  (*((lp->a)->write_csr))(ioaddr,2,(unsigned short)((int)((unsigned short)(lp->init_dma_addr >> 16))));
  
#line 2217 
  (*((lp->a)->write_csr))(ioaddr,4,(unsigned short)2325);
  
#line 2218 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)1);
  
#line 2220 
  netif_start_queue(dev);
  
#line 2222 
  if ((unsigned int)lp->chip_version > 9760U) {
    
#line 2224 
    pcnet32_check_media(dev,1);
    
#line 2225 
    ldv_mod_timer_107(& lp->watchdog_timer,jiffies + 500UL);
  }
  else ;
  
#line 2228 
  i = 0;
  
#line 2229 
  goto ldv_47178;
  ldv_47177: 
#line 2230 
  ;
  
#line 2230 
  tmp_14 = (*((lp->a)->read_csr))(ioaddr,0);
  
#line 2230 
  if (((int)tmp_14 & 256) != 0) 
#line 2231 
                                goto ldv_47176; else ;
  ldv_47178: 
#line 2232 
  ;
  
#line 2229 
  tmp_15 = i;
  
#line 2229 
  i += 1;
  
#line 2229 
  ;
  
#line 2229 
  if (tmp_15 <= 99) 
#line 2231 
                    goto ldv_47177; else 
#line 2234 
                                         goto ldv_47176;
  ldv_47176: 
#line 2235 
  ;
  
#line 2236 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)66);
  
#line 2238 
  if ((lp->msg_enable & 32U) != 0U) {
    u16 tmp_16;
    
#line 2238 
    tmp_16 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2238 
    ;
    
#line 2238 
    ;
    
#line 2238 
    ;
    
#line 2238 
    netdev_printk("\001",(struct net_device const *)dev,"pcnet32 open after %d ticks, init block %#x csr0 %4.4x\n",i,(unsigned int)lp->init_dma_addr,(int)tmp_16);
  }
  else ;
  
#line 2244 
  ldv_spin_unlock_irqrestore_108(& lp->lock,flags);
  
#line 2246 
  __retres = 0;
  
#line 2246 
  goto return_label;
  err_free_ring: 
#line 2248 
  ;
  
#line 2250 
  pcnet32_purge_rx_ring(dev);
  
#line 2256 
  (*((lp->a)->write_bcr))(ioaddr,20,(unsigned short)4);
  err_free_irq: 
#line 2258 
  ;
  
#line 2259 
  ldv_spin_unlock_irqrestore_109(& lp->lock,flags);
  
#line 2260 
  ldv_free_irq_110((unsigned int)dev->irq,(void *)dev);
  
#line 2261 
  __retres = rc;
  return_label: 
#line 2261 
                return __retres;
}


#line 2277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_purge_tx_ring(struct net_device *dev)
{
  int i;
  
#line 2279 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2282 
  i = 0;
  
#line 2282 
  goto ldv_47185;
  ldv_47184: 
#line 2283 
  ;
  
#line 2283 
  (lp->tx_ring + i)->status = (unsigned short)0U;
  
#line 2284 
  ldv_inline_asm();
  
#line 2285 
  if (*(lp->tx_skbuff + i) != (struct sk_buff *)0) {
    int tmp_0;
    
#line 2286 
    tmp_0 = pci_dma_mapping_error(lp->pci_dev,*(lp->tx_dma_addr + i));
    
#line 2286 
    if (tmp_0 == 0) 
#line 2288 
                    pci_unmap_single(lp->pci_dev,*(lp->tx_dma_addr + i),(unsigned long)(*(lp->tx_skbuff + i))->len,1); else ;
    
#line 2292 
    dev_kfree_skb_any(*(lp->tx_skbuff + i));
  }
  else ;
  
#line 2294 
  *(lp->tx_skbuff + i) = (struct sk_buff *)0;
  
#line 2295 
  *(lp->tx_dma_addr + i) = 0ULL;
  
#line 2282 
  i += 1;
  ldv_47185: 
#line 2283 
  ;
  
#line 2282 
  if (lp->tx_ring_size > (unsigned int)i) 
#line 2284 
                                          goto ldv_47184; else 
#line 2287 
                                                               goto ldv_47186;
  ldv_47186: 
#line 2288 
  ;
  
#line 2289 
  return;
}


#line 2300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_init_ring(struct net_device *dev)
{
  int __retres;
  int i;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 2302 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2305 
  lp->tx_full = (char)0;
  
#line 2306 
  tmp_0 = 0U;
  
#line 2306 
  lp->cur_tx = tmp_0;
  
#line 2306 
  lp->cur_rx = tmp_0;
  
#line 2307 
  tmp_1 = 0U;
  
#line 2307 
  lp->dirty_tx = tmp_1;
  
#line 2307 
  lp->dirty_rx = tmp_1;
  
#line 2309 
  i = 0;
  
#line 2309 
  goto ldv_47195;
  ldv_47194: 
#line 2310 
  ;
  {
    
#line 2310 
    struct sk_buff *rx_skbuff = *(lp->rx_skbuff + i);
    
#line 2311 
    if (rx_skbuff == (struct sk_buff *)0) {
      
#line 2312 
      *(lp->rx_skbuff + i) = netdev_alloc_skb(dev,1544U);
      
#line 2313 
      rx_skbuff = *(lp->rx_skbuff + i);
      
#line 2314 
      if (rx_skbuff == (struct sk_buff *)0) {
        
#line 2316 
        if ((lp->msg_enable & 1U) != 0U) 
#line 2316 
                                         netdev_err((struct net_device const *)dev,"%s netdev_alloc_skb failed\n","pcnet32_init_ring"); else ;
        
#line 2318 
        __retres = -1;
        
#line 2318 
        goto return_label;
      }
      else ;
      
#line 2320 
      skb_reserve(rx_skbuff,0);
    }
    else ;
    
#line 2322 
    ldv_inline_asm();
    
#line 2324 
    if (*(lp->rx_dma_addr + i) == 0ULL) {
      int tmp_2;
      
#line 2325 
      *(lp->rx_dma_addr + i) = pci_map_single(lp->pci_dev,(void *)rx_skbuff->data,1544UL,2);
      
#line 2328 
      tmp_2 = pci_dma_mapping_error(lp->pci_dev,*(lp->rx_dma_addr + i));
      
#line 2328 
      if (tmp_2 != 0) {
        
#line 2331 
        if ((lp->msg_enable & 1U) != 0U) 
#line 2331 
                                         netdev_err((struct net_device const *)dev,"%s pci dma mapping error\n","pcnet32_init_ring"); else ;
        
#line 2334 
        __retres = -1;
        
#line 2334 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 2337 
    (lp->rx_ring + i)->base = (unsigned int)*(lp->rx_dma_addr + i);
    
#line 2338 
    (lp->rx_ring + i)->buf_length = (unsigned short)63992U;
    
#line 2339 
    ldv_inline_asm();
    
#line 2340 
    (lp->rx_ring + i)->status = (unsigned short)32768U;
  }
  
#line 2309 
  i += 1;
  ldv_47195: 
#line 2310 
  ;
  
#line 2309 
  if (lp->rx_ring_size > (unsigned int)i) 
#line 2311 
                                          goto ldv_47194; else 
#line 2314 
                                                               goto ldv_47196;
  ldv_47196: 
#line 2315 
  ;
  
#line 2344 
  i = 0;
  
#line 2344 
  goto ldv_47198;
  ldv_47197: 
#line 2345 
  ;
  
#line 2345 
  (lp->tx_ring + i)->status = (unsigned short)0U;
  
#line 2346 
  ldv_inline_asm();
  
#line 2347 
  (lp->tx_ring + i)->base = 0U;
  
#line 2348 
  *(lp->tx_dma_addr + i) = 0ULL;
  
#line 2344 
  i += 1;
  ldv_47198: 
#line 2345 
  ;
  
#line 2344 
  if (lp->tx_ring_size > (unsigned int)i) 
#line 2346 
                                          goto ldv_47197; else 
#line 2349 
                                                               goto ldv_47199;
  ldv_47199: 
#line 2350 
  ;
  
#line 2351 
  (lp->init_block)->tlen_rlen = (unsigned short)((int)lp->tx_len_bits | (int)lp->rx_len_bits);
  
#line 2353 
  i = 0;
  
#line 2353 
  goto ldv_47201;
  ldv_47200: 
#line 2354 
  ;
  
#line 2354 
  (lp->init_block)->phys_addr[i] = *(dev->dev_addr + i);
  
#line 2353 
  i += 1;
  ldv_47201: 
#line 2354 
  ;
  
#line 2353 
  if (i <= 5) 
#line 2355 
              goto ldv_47200; else 
#line 2358 
                                   goto ldv_47202;
  ldv_47202: 
#line 2359 
  ;
  
#line 2355 
  (lp->init_block)->rx_ring = (unsigned int)lp->rx_ring_dma_addr;
  
#line 2356 
  (lp->init_block)->tx_ring = (unsigned int)lp->tx_ring_dma_addr;
  
#line 2357 
  ldv_inline_asm();
  
#line 2358 
  __retres = 0;
  return_label: 
#line 2358 
                return __retres;
}


#line 2365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_restart(struct net_device *dev, unsigned int csr0_bits)
{
  int i;
  u16 tmp_0;
  int tmp_1;
  u16 tmp_2;
  int tmp_3;
  
#line 2367 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2368 
  unsigned long ioaddr = dev->base_addr;
  
#line 2372 
  i = 0;
  
#line 2372 
  goto ldv_47212;
  ldv_47211: 
#line 2373 
  ;
  
#line 2373 
  tmp_0 = (*((lp->a)->read_csr))(ioaddr,0);
  
#line 2373 
  if (((int)tmp_0 & 4) != 0) 
#line 2374 
                             goto ldv_47210; else ;
  
#line 2372 
  i += 1;
  ldv_47212: 
#line 2373 
  ;
  
#line 2372 
  if (i <= 99) 
#line 2374 
               goto ldv_47211; else 
#line 2377 
                                    goto ldv_47210;
  ldv_47210: 
#line 2378 
  ;
  
#line 2376 
  if (i > 99) {
    
#line 2377 
    if ((lp->msg_enable & 1U) != 0U) 
#line 2377 
                                     netdev_err((struct net_device const *)dev,"%s timed out waiting for stop\n","pcnet32_restart"); else ;
  }
  else ;
  
#line 2380 
  pcnet32_purge_tx_ring(dev);
  
#line 2381 
  tmp_1 = pcnet32_init_ring(dev);
  
#line 2381 
  if (tmp_1 != 0) 
#line 2382 
                  goto return_label; else ;
  
#line 2385 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)1);
  
#line 2386 
  i = 0;
  
#line 2387 
  goto ldv_47216;
  ldv_47215: 
#line 2388 
  ;
  
#line 2388 
  tmp_2 = (*((lp->a)->read_csr))(ioaddr,0);
  
#line 2388 
  if (((int)tmp_2 & 256) != 0) 
#line 2389 
                               goto ldv_47214; else ;
  ldv_47216: 
#line 2390 
  ;
  
#line 2387 
  tmp_3 = i;
  
#line 2387 
  i += 1;
  
#line 2387 
  ;
  
#line 2387 
  if (tmp_3 <= 999) 
#line 2389 
                    goto ldv_47215; else 
#line 2392 
                                         goto ldv_47214;
  ldv_47214: 
#line 2393 
  ;
  
#line 2391 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)((int)((unsigned short)csr0_bits)));
  return_label: 
#line 2392 
                return;
}


#line 2394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_tx_timeout(struct net_device *dev)
{
  unsigned long flags;
  
#line 2396 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2397 
  unsigned long ioaddr = dev->base_addr;
  
#line 2399 
  ldv___ldv_spin_lock_111(& lp->lock);
  
#line 2401 
  if ((pcnet32_debug & 1) != 0) {
    u16 tmp_0;
    
#line 2402 
    tmp_0 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2402 
    ;
    
#line 2402 
    printk("\001",(char *)(& dev->name),(int)tmp_0);
  }
  else ;
  
#line 2404 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  
#line 2405 
  dev->stats.tx_errors += 1UL;
  
#line 2406 
  if ((lp->msg_enable & 128U) != 0U) {
    int i;
    char *tmp_1;
    char *tmp_2;
    char *tmp_3;
    
#line 2408 
    ;
    
#line 2410 
    if ((int)lp->tx_full != 0) 
#line 2410 
                               tmp_1 = (char *)" (full)"; else 
#line 2410 
                                                               tmp_1 = (char *)"";
    
#line 2408 
    ;
    
#line 2408 
    ;
    
#line 2408 
    printk("\001",lp->dirty_tx,lp->cur_tx,tmp_1,lp->cur_rx);
    
#line 2412 
    i = 0;
    
#line 2412 
    goto ldv_47225;
    ldv_47224: 
#line 2413 
    ;
    
#line 2413 
    ;
    
#line 2413 
    ;
    
#line 2413 
    ;
    
#line 2413 
    ;
    
#line 2413 
    if ((i & 1) != 0) 
#line 2413 
                      tmp_2 = (char *)""; else 
#line 2413 
                                               tmp_2 = (char *)"\n ";
    
#line 2413 
    printk("%s %08x %04x %08x %04x",tmp_2,(lp->rx_ring + i)->base,- ((int)(lp->rx_ring + i)->buf_length) & 65535,(lp->rx_ring + i)->msg_length,(int)(lp->rx_ring + i)->status);
    
#line 2412 
    i += 1;
    ldv_47225: 
#line 2413 
    ;
    
#line 2412 
    if (lp->rx_ring_size > (unsigned int)i) 
#line 2414 
                                            goto ldv_47224; else 
#line 2417 
                                                                 goto ldv_47226;
    ldv_47226: 
#line 2418 
    ;
    
#line 2418 
    i = 0;
    
#line 2418 
    goto ldv_47228;
    ldv_47227: 
#line 2419 
    ;
    
#line 2419 
    ;
    
#line 2419 
    ;
    
#line 2419 
    ;
    
#line 2419 
    ;
    
#line 2419 
    if ((i & 1) != 0) 
#line 2419 
                      tmp_3 = (char *)""; else 
#line 2419 
                                               tmp_3 = (char *)"\n ";
    
#line 2419 
    printk("%s %08x %04x %08x %04x",tmp_3,(lp->tx_ring + i)->base,- ((int)(lp->tx_ring + i)->length) & 65535,(lp->tx_ring + i)->misc,(int)(lp->tx_ring + i)->status);
    
#line 2418 
    i += 1;
    ldv_47228: 
#line 2419 
    ;
    
#line 2418 
    if (lp->tx_ring_size > (unsigned int)i) 
#line 2420 
                                            goto ldv_47227; else 
#line 2423 
                                                                 goto ldv_47229;
    ldv_47229: 
#line 2424 
    ;
    
#line 2424 
    printk("\n");
  }
  else ;
  
#line 2426 
  pcnet32_restart(dev,66U);
  
#line 2428 
  dev->trans_start = jiffies;
  
#line 2429 
  netif_wake_queue(dev);
  
#line 2431 
  ldv_spin_unlock_irqrestore_112(& lp->lock,flags);
  
#line 2432 
  return;
}


#line 2434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static netdev_tx_t pcnet32_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  u16 status;
  int entry;
  unsigned long flags;
  int tmp_1;
  
#line 2437 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2438 
  unsigned long ioaddr = dev->base_addr;
  
#line 2443 
  ldv___ldv_spin_lock_113(& lp->lock);
  
#line 2445 
  if ((lp->msg_enable & 256U) != 0U) {
    u16 tmp_0;
    
#line 2445 
    tmp_0 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2445 
    ;
    
#line 2445 
    netdev_printk("\001",(struct net_device const *)dev,"%s() called, csr0 %4.4x\n","pcnet32_start_xmit",(int)tmp_0);
  }
  else ;
  
#line 2452 
  status = (unsigned short)33536U;
  
#line 2457 
  entry = (int)(lp->cur_tx & lp->tx_mod_mask);
  
#line 2462 
  (lp->tx_ring + entry)->length = (unsigned short)(- ((int)((unsigned short)skb->len)));
  
#line 2464 
  (lp->tx_ring + entry)->misc = 0U;
  
#line 2466 
  *(lp->tx_dma_addr + entry) = pci_map_single(lp->pci_dev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 2468 
  tmp_1 = pci_dma_mapping_error(lp->pci_dev,*(lp->tx_dma_addr + entry));
  
#line 2468 
  if (tmp_1 != 0) {
    
#line 2469 
    dev_kfree_skb_any(skb);
    
#line 2470 
    dev->stats.tx_dropped += 1UL;
    
#line 2471 
    goto drop_packet;
  }
  else ;
  
#line 2473 
  *(lp->tx_skbuff + entry) = skb;
  
#line 2474 
  (lp->tx_ring + entry)->base = (unsigned int)*(lp->tx_dma_addr + entry);
  
#line 2475 
  ldv_inline_asm();
  
#line 2476 
  (lp->tx_ring + entry)->status = status;
  
#line 2478 
  lp->cur_tx += 1U;
  
#line 2479 
  dev->stats.tx_bytes += (unsigned long)skb->len;
  
#line 2482 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)72);
  
#line 2484 
  if ((lp->tx_ring + ((unsigned int)(entry + 1) & lp->tx_mod_mask))->base != 0U) {
    
#line 2485 
    lp->tx_full = (char)1;
    
#line 2486 
    netif_start_queue(dev);
  }
  else ;
  drop_packet: 
#line 2488 
  ;
  
#line 2489 
  ldv_spin_unlock_irqrestore_114(& lp->lock,flags);
  
#line 2490 
  __retres = NETDEV_TX_OK;
  
#line 2490 
  return __retres;
}


#line 2495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static irqreturn_t pcnet32_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  struct pcnet32_private *lp;
  unsigned long ioaddr;
  u16 csr0;
  bool tmp_1;
  
#line 2497 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 2501 
  int boguscnt = max_interrupt_work;
  
#line 2503 
  ioaddr = dev->base_addr;
  
#line 2504 
  lp = (struct pcnet32_private *)netdev_priv((struct net_device const *)dev);
  
#line 2506 
  ldv_spin_lock_115(& lp->lock);
  
#line 2508 
  csr0 = (*((lp->a)->read_csr))(ioaddr,0);
  
#line 2509 
  goto ldv_47253;
  ldv_47252: 
#line 2510 
  ;
  
#line 2510 
  if ((unsigned int)csr0 == 65535U) 
#line 2511 
                                    goto ldv_47250; else ;
  
#line 2513 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)((int)csr0 & 65456));
  
#line 2515 
  if ((lp->msg_enable & 512U) != 0U) {
    u16 tmp_0;
    
#line 2515 
    tmp_0 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2515 
    ;
    
#line 2515 
    ;
    
#line 2515 
    netdev_printk("\001",(struct net_device const *)dev,"interrupt  csr0=%#2.2x new csr=%#2.2x\n",(int)csr0,(int)tmp_0);
  }
  else ;
  
#line 2520 
  if (((int)csr0 & 16384) != 0) 
#line 2521 
                                dev->stats.tx_errors += 1UL; else ;
  
#line 2522 
  if (((int)csr0 & 4096) != 0) 
#line 2534 
                               dev->stats.rx_errors += 1UL; else ;
  
#line 2536 
  if (((int)csr0 & 2048) != 0) {
    
#line 2537 
    if ((lp->msg_enable & 1U) != 0U) 
#line 2537 
                                     netdev_err((struct net_device const *)dev,"Bus master arbitration failure, status %4.4x\n",(int)csr0); else ;
  }
  else ;
  
#line 2541 
  tmp_1 = napi_schedule_prep(& lp->napi);
  
#line 2541 
  if ((int)tmp_1 != 0) {
    u16 val;
    
#line 2544 
    val = (*((lp->a)->read_csr))(ioaddr,3);
    
#line 2545 
    val = (unsigned short)((unsigned int)val | 24320U);
    
#line 2546 
    (*((lp->a)->write_csr))(ioaddr,3,(unsigned short)((int)val));
    
#line 2548 
    __napi_schedule(& lp->napi);
    
#line 2549 
    goto ldv_47250;
  }
  else ;
  
#line 2551 
  csr0 = (*((lp->a)->read_csr))(ioaddr,0);
  ldv_47253: 
#line 2552 
  ;
  
#line 2509 
  if (((int)csr0 & 36608) != 0) {
    
#line 2509 
    boguscnt -= 1;
    
#line 2509 
    if (boguscnt >= 0) 
#line 2511 
                       goto ldv_47252; else 
#line 2514 
                                            goto ldv_47250;
  }
  else 
#line 2514 
       goto ldv_47250;
  ldv_47250: 
#line 2515 
  ;
  
#line 2554 
  if ((lp->msg_enable & 512U) != 0U) {
    u16 tmp_2;
    
#line 2554 
    tmp_2 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2554 
    ;
    
#line 2554 
    netdev_printk("\001",(struct net_device const *)dev,"exiting interrupt, csr0=%#4.4x\n",(int)tmp_2);
  }
  else ;
  
#line 2558 
  ldv_spin_unlock_116(& lp->lock);
  
#line 2560 
  __retres = IRQ_HANDLED;
  
#line 2560 
  return __retres;
}


#line 2563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_close(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  u16 tmp_0;
  
#line 2565 
  unsigned long ioaddr = dev->base_addr;
  
#line 2566 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2569 
  ldv_del_timer_sync_117(& lp->watchdog_timer);
  
#line 2571 
  netif_start_queue(dev);
  
#line 2572 
  napi_disable(& lp->napi);
  
#line 2574 
  ldv___ldv_spin_lock_118(& lp->lock);
  
#line 2576 
  tmp_0 = (*((lp->a)->read_csr))(ioaddr,112);
  
#line 2576 
  dev->stats.rx_missed_errors = (unsigned long)tmp_0;
  
#line 2578 
  if ((lp->msg_enable & 16U) != 0U) {
    u16 tmp_1;
    
#line 2578 
    tmp_1 = (*((lp->a)->read_csr))(ioaddr,0);
    
#line 2578 
    ;
    
#line 2578 
    netdev_printk("\001",(struct net_device const *)dev,"Shutting down ethercard, status was %2.2x\n",(int)tmp_1);
  }
  else ;
  
#line 2583 
  (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
  
#line 2589 
  (*((lp->a)->write_bcr))(ioaddr,20,(unsigned short)4);
  
#line 2591 
  ldv_spin_unlock_irqrestore_119(& lp->lock,flags);
  
#line 2593 
  ldv_free_irq_120((unsigned int)dev->irq,(void *)dev);
  
#line 2595 
  ldv___ldv_spin_lock_121(& lp->lock);
  
#line 2597 
  pcnet32_purge_rx_ring(dev);
  
#line 2598 
  pcnet32_purge_tx_ring(dev);
  
#line 2600 
  ldv_spin_unlock_irqrestore_122(& lp->lock,flags);
  
#line 2602 
  __retres = 0;
  
#line 2602 
  return __retres;
}


#line 2605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct net_device_stats *pcnet32_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  unsigned long flags;
  u16 tmp_0;
  
#line 2607 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2608 
  unsigned long ioaddr = dev->base_addr;
  
#line 2611 
  ldv___ldv_spin_lock_123(& lp->lock);
  
#line 2612 
  tmp_0 = (*((lp->a)->read_csr))(ioaddr,112);
  
#line 2612 
  dev->stats.rx_missed_errors = (unsigned long)tmp_0;
  
#line 2613 
  ldv_spin_unlock_irqrestore_124(& lp->lock,flags);
  
#line 2615 
  __retres = & dev->stats;
  
#line 2615 
  return __retres;
}


#line 2619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_load_multicast(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  int i;
  u32 crc;
  struct netdev_hw_addr *tmp_0;
  struct netdev_hw_addr *tmp_1;
  
#line 2621 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2622 
  struct pcnet32_init_block volatile *ib = (struct pcnet32_init_block volatile *)lp->init_block;
  
#line 2623 
  __le16 volatile *mcast_table = (__le16 volatile *)(& ib->filter);
  
#line 2625 
  unsigned long ioaddr = dev->base_addr;
  
#line 2630 
  if ((dev->flags & 512U) != 0U) {
    
#line 2631 
    ib->filter[0] = 4294967295U;
    
#line 2632 
    ib->filter[1] = 4294967295U;
    
#line 2633 
    (*((lp->a)->write_csr))(ioaddr,8,(unsigned short)65535);
    
#line 2634 
    (*((lp->a)->write_csr))(ioaddr,9,(unsigned short)65535);
    
#line 2635 
    (*((lp->a)->write_csr))(ioaddr,10,(unsigned short)65535);
    
#line 2636 
    (*((lp->a)->write_csr))(ioaddr,11,(unsigned short)65535);
    
#line 2637 
    goto return_label;
  }
  else ;
  
#line 2640 
  ib->filter[0] = 0U;
  
#line 2641 
  ib->filter[1] = 0U;
  {
    
#line 2644 
    struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
    
#line 2644 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 2644 
  ha = tmp_0;
  
#line 2644 
  goto ldv_47281;
  ldv_47280: 
#line 2645 
  ;
  
#line 2645 
  crc = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
  
#line 2646 
  crc >>= 26;
  
#line 2647 
  *(mcast_table + (crc >> 4)) = (unsigned short)((int)*(mcast_table + (crc >> 4)) | (int)((unsigned short)(1 << (crc & 15U))));
  {
    
#line 2644 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 2644 
    tmp_1 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 2644 
  ha = tmp_1;
  ldv_47281: 
#line 2646 
  ;
  
#line 2644 
  if (& ha->list != & dev->mc.list) 
#line 2646 
                                    goto ldv_47280; else 
#line 2649 
                                                         goto ldv_47282;
  ldv_47282: 
#line 2650 
  ;
  
#line 2649 
  i = 0;
  
#line 2649 
  goto ldv_47284;
  ldv_47283: 
#line 2650 
  ;
  
#line 2650 
  (*((lp->a)->write_csr))(ioaddr,i + 8,(unsigned short)((int)*(mcast_table + i)));
  
#line 2649 
  i += 1;
  ldv_47284: 
#line 2650 
  ;
  
#line 2649 
  if (i <= 3) 
#line 2651 
              goto ldv_47283; else 
#line 2654 
                                   goto ldv_47285;
  ldv_47285: 
#line 2655 
  ;
  return_label: 
#line 2656 
                return;
}


#line 2657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_set_multicast_list(struct net_device *dev)
{
  unsigned long flags;
  int csr15;
  int suspended;
  u16 tmp_0;
  
#line 2659 
  unsigned long ioaddr = dev->base_addr;
  
#line 2660 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2663 
  ldv___ldv_spin_lock_125(& lp->lock);
  
#line 2664 
  suspended = pcnet32_suspend(dev,& flags,0);
  
#line 2665 
  tmp_0 = (*((lp->a)->read_csr))(ioaddr,15);
  
#line 2665 
  csr15 = (int)tmp_0;
  
#line 2666 
  if ((dev->flags & 256U) != 0U) {
    
#line 2668 
    if ((lp->msg_enable & 8192U) != 0U) 
#line 2668 
                                        netdev_info((struct net_device const *)dev,"Promiscuous mode enabled\n"); else ;
    
#line 2669 
    (lp->init_block)->mode = (unsigned short)(((lp->options << 7) & 384) | -32768);
    
#line 2672 
    (*((lp->a)->write_csr))(ioaddr,15,(unsigned short)((int)((unsigned short)(csr15 | -32768))));
  }
  else {
    
#line 2674 
    (lp->init_block)->mode = (unsigned short)((unsigned int)((int)((unsigned short)lp->options) << 7U) & 384U);
    
#line 2676 
    (*((lp->a)->write_csr))(ioaddr,15,(unsigned short)((int)((unsigned short)csr15) & 32767));
    
#line 2677 
    pcnet32_load_multicast(dev);
  }
  
#line 2680 
  if (suspended != 0) {
    int csr5;
    u16 tmp_1;
    
#line 2683 
    tmp_1 = (*((lp->a)->read_csr))(ioaddr,5);
    
#line 2683 
    csr5 = (int)tmp_1;
    
#line 2684 
    (*((lp->a)->write_csr))(ioaddr,5,(unsigned short)((int)((unsigned short)csr5) & 65534));
  }
  else {
    
#line 2686 
    (*((lp->a)->write_csr))(ioaddr,0,(unsigned short)4);
    
#line 2687 
    pcnet32_restart(dev,66U);
    
#line 2688 
    netif_wake_queue(dev);
  }
  
#line 2691 
  ldv_spin_unlock_irqrestore_126(& lp->lock,flags);
  
#line 2692 
  return;
}


#line 2695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int mdio_read(struct net_device *dev, int phy_id, int reg_num)
{
  int __retres;
  u16 val_out;
  
#line 2697 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2698 
  unsigned long ioaddr = dev->base_addr;
  
#line 2701 
  if ((unsigned int)*((unsigned char *)lp + 512UL) == 0U) {
    
#line 2702 
    __retres = 0;
    
#line 2702 
    goto return_label;
  }
  else ;
  
#line 2704 
  (*((lp->a)->write_bcr))(ioaddr,33,(unsigned short)((int)((unsigned short)(((phy_id << 5) & 992) | (reg_num & 31)))));
  
#line 2705 
  val_out = (*((lp->a)->read_bcr))(ioaddr,34);
  
#line 2707 
  __retres = (int)val_out;
  return_label: 
#line 2707 
                return __retres;
}


#line 2711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void mdio_write(struct net_device *dev, int phy_id, int reg_num, int val)
{
  
#line 2713 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2714 
  unsigned long ioaddr = dev->base_addr;
  
#line 2716 
  if ((unsigned int)*((unsigned char *)lp + 512UL) == 0U) 
#line 2717 
                                                          goto return_label; else ;
  
#line 2719 
  (*((lp->a)->write_bcr))(ioaddr,33,(unsigned short)((int)((unsigned short)(((phy_id << 5) & 992) | (reg_num & 31)))));
  
#line 2720 
  (*((lp->a)->write_bcr))(ioaddr,34,(unsigned short)((int)((unsigned short)val)));
  return_label: 
#line 2721 
                return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int rc;
  unsigned long flags;
  
#line 2725 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2730 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
    struct mii_ioctl_data *tmp_0;
    
#line 2731 
    ldv___ldv_spin_lock_127(& lp->lock);
    
#line 2732 
    ;
    
#line 2732 
    tmp_0 = if_mii(rq);
    
#line 2732 
    ;
    
#line 2732 
    rc = generic_mii_ioctl(& lp->mii_if,tmp_0,cmd,(unsigned int *)0U);
    
#line 2733 
    ldv_spin_unlock_irqrestore_128(& lp->lock,flags);
  }
  else 
#line 2735 
       rc = -95;
  
#line 2738 
  return rc;
}


#line 2741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_check_otherphy(struct net_device *dev)
{
  int __retres;
  u16 bmcr;
  int i;
  
#line 2743 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2744 
  struct mii_if_info mii = lp->mii_if;
  
#line 2748 
  i = 0;
  
#line 2748 
  goto ldv_47328;
  ldv_47327: 
#line 2749 
  ;
  
#line 2749 
  if (lp->mii_if.phy_id == i) 
#line 2750 
                              goto ldv_47326; else ;
  
#line 2751 
  if ((lp->phymask & (unsigned int)(1 << i)) != 0U) {
    int tmp_2;
    
#line 2752 
    mii.phy_id = i;
    
#line 2753 
    tmp_2 = mii_link_ok(& mii);
    
#line 2753 
    if (tmp_2 != 0) {
      int tmp_0;
      int tmp_1;
      
#line 2755 
      if ((lp->msg_enable & 4U) != 0U) 
#line 2755 
                                       netdev_info((struct net_device const *)dev,"Using PHY number %d\n",i); else ;
      
#line 2759 
      tmp_0 = mdio_read(dev,lp->mii_if.phy_id,0);
      
#line 2759 
      bmcr = (unsigned short)tmp_0;
      
#line 2761 
      mdio_write(dev,lp->mii_if.phy_id,0,(int)((unsigned int)bmcr | 1024U));
      
#line 2765 
      tmp_1 = mdio_read(dev,i,0);
      
#line 2765 
      bmcr = (unsigned short)tmp_1;
      
#line 2766 
      mdio_write(dev,i,0,(int)bmcr & -1025);
      
#line 2770 
      lp->mii_if.phy_id = i;
      
#line 2771 
      __retres = 1;
      
#line 2771 
      goto return_label;
    }
    else ;
  }
  else ;
  ldv_47326: 
#line 2774 
  ;
  
#line 2748 
  i += 1;
  ldv_47328: 
#line 2749 
  ;
  
#line 2748 
  if (i <= 31) 
#line 2750 
               goto ldv_47327; else 
#line 2753 
                                    goto ldv_47329;
  ldv_47329: 
#line 2754 
  ;
  
#line 2775 
  __retres = 0;
  return_label: 
#line 2775 
                return __retres;
}


#line 2786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_check_media(struct net_device *dev, int verbose)
{
  int curr_link;
  bool tmp_0;
  u32 bcr9;
  
#line 2788 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2790 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 2790 
  int prev_link = (int)tmp_0 != 0;
  
#line 2793 
  if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) 
#line 2794 
                                                          curr_link = mii_link_ok(& lp->mii_if);
  else {
    u16 tmp_1;
    
#line 2796 
    ulong ioaddr = dev->base_addr;
    
#line 2797 
    tmp_1 = (*((lp->a)->read_bcr))(ioaddr,4);
    
#line 2797 
    curr_link = (unsigned int)tmp_1 != 192U;
  }
  
#line 2799 
  if (curr_link == 0) {
    
#line 2800 
    if (prev_link != 0 || verbose != 0) {
      
#line 2801 
      netif_carrier_off(dev);
      
#line 2802 
      if ((lp->msg_enable & 4U) != 0U) 
#line 2802 
                                       netdev_info((struct net_device const *)dev,"link down\n"); else ;
    }
    else ;
    
#line 2804 
    if ((int)lp->phycount > 1) {
      
#line 2805 
      curr_link = pcnet32_check_otherphy(dev);
      
#line 2806 
      prev_link = 0;
    }
    else ;
  }
  else 
    
#line 2808 
    if (verbose != 0 || prev_link == 0) {
      
#line 2809 
      netif_carrier_on(dev);
      
#line 2810 
      if ((unsigned int)*((unsigned char *)lp + 512UL) != 0U) {
        u16 tmp_4;
        
#line 2811 
        if ((lp->msg_enable & 4U) != 0U) {
          char *tmp_2;
          __u32 tmp_3;
          
#line 2812 
          struct ethtool_cmd ecmd = {.cmd = 1U, .supported = 0U, .advertising = 0U, .speed = (unsigned short)0, .duplex = (unsigned char)0, .port = (unsigned char)0, .phy_address = (unsigned char)0, .transceiver = (unsigned char)0, .autoneg = (unsigned char)0, .mdio_support = (unsigned char)0, .maxtxpkt = 0U, .maxrxpkt = 0U, .speed_hi = (unsigned short)0, .eth_tp_mdix = (unsigned char)0, .eth_tp_mdix_ctrl = (unsigned char)0, .lp_advertising = 0U, .reserved = {0U, 0U}};
          
#line 2814 
          mii_ethtool_gset(& lp->mii_if,& ecmd);
          
#line 2816 
          if ((unsigned int)ecmd.duplex == 1U) 
#line 2816 
                                               tmp_2 = (char *)"full"; else 
                                                                    
#line 2816 
                                                                    tmp_2 = (char *)"half";
          
#line 2815 
          tmp_3 = ethtool_cmd_speed((struct ethtool_cmd const *)(& ecmd));
          
#line 2815 
          ;
          
#line 2815 
          netdev_info((struct net_device const *)dev,"link up, %uMbps, %s-duplex\n",tmp_3,tmp_2);
        }
        else ;
        
#line 2820 
        tmp_4 = (*((lp->a)->read_bcr))(dev->base_addr,9);
        
#line 2820 
        bcr9 = (unsigned int)tmp_4;
        
#line 2821 
        if ((bcr9 & 1U) != (unsigned int)lp->mii_if.full_duplex) {
          
#line 2822 
          if ((unsigned int)*((unsigned char *)(& lp->mii_if) + 16UL) != 0U) 
            
#line 2823 
            bcr9 |= 1U; else 
#line 2825 
                             bcr9 &= 4294967294U;
          
#line 2826 
          (*((lp->a)->write_bcr))(dev->base_addr,9,(unsigned short)((int)((unsigned short)bcr9)));
        }
        else ;
      }
      else 
        
#line 2829 
        if ((lp->msg_enable & 4U) != 0U) 
#line 2829 
                                         netdev_info((struct net_device const *)dev,"link up\n"); else ;
    }
    else ;
  
#line 2831 
  return;
}


#line 2839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_watchdog(struct net_device *dev)
{
  unsigned long flags;
  unsigned long tmp_0;
  
#line 2841 
  struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2845 
  ldv___ldv_spin_lock_129(& lp->lock);
  
#line 2846 
  pcnet32_check_media(dev,0);
  
#line 2847 
  ldv_spin_unlock_irqrestore_130(& lp->lock,flags);
  
#line 2849 
  tmp_0 = round_jiffies(jiffies + 500UL);
  
#line 2849 
  ;
  
#line 2849 
  ldv_mod_timer_131(& lp->watchdog_timer,tmp_0);
  
#line 2850 
  return;
}


#line 2852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_pm_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  bool tmp_0;
  pci_power_t tmp_1;
  
#line 2854 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 2856 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2856 
  if ((int)tmp_0 != 0) {
    
#line 2857 
    netif_device_detach(dev);
    
#line 2858 
    pcnet32_close(dev);
  }
  else ;
  
#line 2860 
  pci_save_state(pdev);
  
#line 2861 
  tmp_1 = pci_choose_state(pdev,state);
  
#line 2861 
  ;
  
#line 2861 
  pci_set_power_state(pdev,tmp_1);
  
#line 2862 
  __retres = 0;
  
#line 2862 
  return __retres;
}


#line 2865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_pm_resume(struct pci_dev *pdev)
{
  int __retres;
  bool tmp_0;
  
#line 2867 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 2869 
  pci_set_power_state(pdev,0);
  
#line 2870 
  pci_restore_state(pdev);
  
#line 2872 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2872 
  if ((int)tmp_0 != 0) {
    
#line 2873 
    pcnet32_open(dev);
    
#line 2874 
    netif_device_attach(dev);
  }
  else ;
  
#line 2876 
  __retres = 0;
  
#line 2876 
  return __retres;
}


#line 2879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_remove_one(struct pci_dev *pdev)
{
  
#line 2881 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 2883 
  if (dev != (struct net_device *)0) {
    
#line 2884 
    struct pcnet32_private *lp = netdev_priv((struct net_device const *)dev);
    
#line 2886 
    ldv_unregister_netdev_132(dev);
    
#line 2887 
    pcnet32_free_ring(dev);
    
#line 2888 
    __release_region(& ioport_resource,(unsigned long long)dev->base_addr,32ULL);
    
#line 2889 
    pci_free_consistent(lp->pci_dev,28UL,(void *)lp->init_block,lp->init_dma_addr);
    
#line 2891 
    ldv_free_netdev_133(dev);
    
#line 2892 
    pci_disable_device(pdev);
  }
  else ;
  
#line 2894 
  return;
}


#line 2896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static struct pci_driver pcnet32_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "pcnet32", .id_table = (struct pci_device_id const *)(& pcnet32_pci_tbl), .probe = & pcnet32_probe_pci, .remove = & pcnet32_remove_one, .suspend = & pcnet32_pm_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & pcnet32_pm_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 2906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int debug = -1;

#line 2907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int tx_start_pt = -1;

#line 2908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_have_pci;

#line 2938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static int pcnet32_init_module(void)
{
  u32 tmp;
  int tmp_0;
  int tmp_1;
  
#line 2940 
  printk("\001",version);
  
#line 2942 
  tmp = netif_msg_init(debug,7);
  
#line 2942 
  pcnet32_debug = (int)tmp;
  
#line 2944 
  if ((unsigned int)tx_start_pt <= 3U) 
#line 2945 
                                       tx_start = tx_start_pt; else ;
  
#line 2948 
  tmp_0 = ldv___pci_register_driver_134(& pcnet32_driver,& __this_module,"pcnet32");
  
#line 2948 
  if (tmp_0 == 0) 
#line 2949 
                  pcnet32_have_pci = 1; else ;
  
#line 2952 
  if (pcnet32vlb != 0) 
#line 2953 
                       pcnet32_probe_vlbus((unsigned int *)(& pcnet32_portlist)); else ;
  
#line 2955 
  if (cards_found != 0 && (pcnet32_debug & 2) != 0) 
#line 2956 
                                                    printk("\001",cards_found); else ;
  
#line 2958 
  if (pcnet32_have_pci + cards_found != 0) 
#line 2958 
                                           tmp_1 = 0; else 
#line 2958 
                                                           tmp_1 = -19;
  
#line 2958 
  return tmp_1;
}


#line 2961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/amd/pcnet32.c"
static void pcnet32_cleanup_module(void)
{
  struct net_device *next_dev;
  
#line 2965 
  goto ldv_47587;
  ldv_47586: 
#line 2966 
  ;
  {
    
#line 2966 
    struct pcnet32_private *lp = netdev_priv((struct net_device const *)pcnet32_dev);
    
#line 2967 
    next_dev = lp->next;
    
#line 2968 
    ldv_unregister_netdev_135(pcnet32_dev);
    
#line 2969 
    pcnet32_free_ring(pcnet32_dev);
    
#line 2970 
    __release_region(& ioport_resource,(unsigned long long)pcnet32_dev->base_addr,32ULL);
    
#line 2971 
    pci_free_consistent(lp->pci_dev,28UL,(void *)lp->init_block,lp->init_dma_addr);
    
#line 2973 
    ldv_free_netdev_136(pcnet32_dev);
    
#line 2974 
    pcnet32_dev = next_dev;
  }
  ldv_47587: 
#line 2976 
  ;
  
#line 2965 
  if (pcnet32_dev != (struct net_device *)0) 
#line 2967 
                                             goto ldv_47586; else 
#line 2970 
                                                                  goto ldv_47588;
  ldv_47588: 
#line 2971 
  ;
  
#line 2977 
  if (pcnet32_have_pci != 0) 
#line 2978 
                             ldv_pci_unregister_driver_137(& pcnet32_driver); else ;
  
#line 2979 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int (*ldv_emg_alias_eth_change_mtu_5)(struct net_device *, int ) = & eth_change_mtu;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int (*ldv_emg_alias_eth_validate_addr_6)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int (*ldv_emg_alias_eth_mac_addr_12)(struct net_device *, void *) = & eth_mac_addr;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
struct pci_driver *ldv_emg_alias_pcnet32_driver_2 = & pcnet32_driver;

#line 62 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 63 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_get_regs_len_23(struct net_device *arg0)
{
  int tmp;
  
#line 76 
  tmp = pcnet32_get_regs_len(arg0);
  
#line 76 
  return tmp;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_remove_one_4(struct pci_dev *arg0)
{
  
#line 81 
  pcnet32_remove_one(arg0);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_ioctl_16(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 86 
  tmp = pcnet32_ioctl(arg0,arg1,arg2);
  
#line 86 
  return tmp;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_nway_reset_20(struct net_device *arg0)
{
  int tmp;
  
#line 91 
  tmp = pcnet32_nway_reset(arg0);
  
#line 91 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
unsigned int ldv_emg_wrapper_pcnet32_get_msglevel_10(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 96 
  tmp = pcnet32_get_msglevel(arg0);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_get_ringparam_22(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 101 
  pcnet32_get_ringparam(arg0,arg1);
  
#line 102 
  return;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_get_sset_count_18(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 106 
  tmp = pcnet32_get_sset_count(arg0,arg1);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 111 
  tmp = pcnet32_close(arg0);
  
#line 111 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_pcnet32_init_module(void)
{
  int tmp;
  
#line 116 
  tmp = pcnet32_init_module();
  
#line 116 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
struct net_device_stats *ldv_emg_wrapper_pcnet32_get_stats_19(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 120 
  tmp = pcnet32_get_stats(arg0);
  
#line 120 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_set_multicast_list_25(struct net_device *arg0)
{
  
#line 125 
  pcnet32_set_multicast_list(arg0);
  
#line 126 
  return;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_get_regs_17(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 130 
  pcnet32_get_regs(arg0,arg1,arg2);
  
#line 131 
  return;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
unsigned int ldv_emg_wrapper_pcnet32_get_link_7(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 135 
  tmp = pcnet32_get_link(arg0);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_pcnet32_cleanup_module(void)
{
  
#line 140 
  pcnet32_cleanup_module();
  
#line 141 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_get_strings_21(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 144 
  pcnet32_get_strings(arg0,arg1,arg2);
  
#line 145 
  return;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_set_ringparam_9(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 149 
  tmp = pcnet32_set_ringparam(arg0,arg1);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_tx_timeout_14(struct net_device *arg0)
{
  
#line 154 
  pcnet32_tx_timeout(arg0);
  
#line 155 
  return;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_ethtool_test_15(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 159 
  pcnet32_ethtool_test(arg0,arg1,arg2);
  
#line 160 
  return;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 164 
  tmp = pcnet32_open(arg0);
  
#line 164 
  return tmp;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
enum irqreturn ldv_emg_wrapper_pcnet32_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 169 
  tmp = pcnet32_interrupt(arg0,arg1);
  
#line 169 
  return tmp;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_pm_suspend_3(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 174 
  tmp = pcnet32_pm_suspend(arg0,arg1);
  
#line 174 
  return tmp;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_set_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 179 
  tmp = pcnet32_set_settings(arg0,arg1);
  
#line 179 
  return tmp;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
enum netdev_tx ldv_emg_wrapper_pcnet32_start_xmit_11(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 184 
  tmp = pcnet32_start_xmit(arg0,arg1);
  
#line 184 
  return tmp;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_set_phys_id_3(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 189 
  tmp = pcnet32_set_phys_id(arg0,arg1);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_poll_controller_24(struct net_device *arg0)
{
  
#line 194 
  pcnet32_poll_controller(arg0);
  
#line 195 
  return;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_probe_pci_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 199 
  tmp = pcnet32_probe_pci(arg0,(struct pci_device_id const *)arg1);
  
#line 199 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_pm_resume_5(struct pci_dev *arg0)
{
  int tmp;
  
#line 204 
  tmp = pcnet32_pm_resume(arg0);
  
#line 204 
  return tmp;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
int ldv_emg_wrapper_pcnet32_get_settings_13(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 209 
  tmp = pcnet32_get_settings(arg0,arg1);
  
#line 209 
  return tmp;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_set_msglevel_4(struct net_device *arg0, unsigned int arg1)
{
  
#line 214 
  pcnet32_set_msglevel(arg0,arg1);
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
void ldv_emg_wrapper_pcnet32_get_drvinfo_8(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 219 
  pcnet32_get_drvinfo(arg0,arg1);
  
#line 220 
  return;
}


#line 606  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 609 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 609 
  return tmp;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 765 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 767 
  spin_lock(lock);
  
#line 768 
  return;
}


#line 804  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 808 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 810 
  spin_unlock(lock);
  
#line 811 
  return;
}


#line 914  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 918 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 920 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 921 
  return;
}


#line 924  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 928 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 930 
  spin_unlock_irqrestore(lock,flags);
  
#line 931 
  return;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 938 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 940 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 948 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 950 
  spin_unlock_irqrestore(lock,flags);
  
#line 951 
  return;
}


#line 954  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1)
{
  
#line 958 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 960 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 961 
  return;
}


#line 964  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags)
{
  
#line 968 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 970 
  spin_unlock_irqrestore(lock,flags);
  
#line 971 
  return;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_80(spinlock_t *ldv_func_arg1)
{
  
#line 978 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 980 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 981 
  return;
}


#line 984  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags)
{
  
#line 988 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 990 
  spin_unlock_irqrestore(lock,flags);
  
#line 991 
  return;
}


#line 994  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1)
{
  
#line 998 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1000 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1001 
  return;
}


#line 1004  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 1008 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1010 
  spin_unlock_irqrestore(lock,flags);
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1)
{
  
#line 1018 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1020 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags)
{
  
#line 1028 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1030 
  spin_unlock_irqrestore(lock,flags);
  
#line 1031 
  return;
}


#line 1034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1)
{
  
#line 1038 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1040 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1041 
  return;
}


#line 1044  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 1048 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1050 
  spin_unlock_irqrestore(lock,flags);
  
#line 1051 
  return;
}


#line 1054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1)
{
  
#line 1058 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1060 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1061 
  return;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 1068 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1070 
  spin_unlock_irqrestore(lock,flags);
  
#line 1071 
  return;
}


#line 1074  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 1078 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1080 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1081 
  return;
}


#line 1084  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 1088 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1090 
  spin_unlock_irqrestore(lock,flags);
  
#line 1091 
  return;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1)
{
  
#line 1098 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1100 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1101 
  return;
}


#line 1104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags)
{
  
#line 1108 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1110 
  spin_unlock_irqrestore(lock,flags);
  
#line 1111 
  return;
}


#line 1114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags)
{
  
#line 1118 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1120 
  spin_unlock_irqrestore(lock,flags);
  
#line 1121 
  return;
}


#line 1124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1)
{
  
#line 1128 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1130 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1131 
  return;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1)
{
  
#line 1138 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1140 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1141 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags)
{
  
#line 1148 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1150 
  spin_unlock_irqrestore(lock,flags);
  
#line 1151 
  return;
}


#line 1154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1)
{
  
#line 1158 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1160 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1161 
  return;
}


#line 1164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags)
{
  
#line 1168 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1170 
  spin_unlock_irqrestore(lock,flags);
  
#line 1171 
  return;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1)
{
  
#line 1178 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1180 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1181 
  return;
}


#line 1184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags)
{
  
#line 1188 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1190 
  spin_unlock_irqrestore(lock,flags);
  
#line 1191 
  return;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_102(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1198 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1198 
  return tmp;
}


#line 1202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv_register_netdev_103(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1206 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1206 
  return tmp;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_free_netdev_104(struct net_device *ldv_func_arg1)
{
  
#line 1214 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1215 
  return;
}


#line 1218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv_request_irq_105(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1222 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1222 
  return tmp;
}


#line 1226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1)
{
  
#line 1230 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1232 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1233 
  return;
}


#line 1236  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv_mod_timer_107(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1240 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1240 
  return tmp;
}


#line 1244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags)
{
  
#line 1248 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1250 
  spin_unlock_irqrestore(lock,flags);
  
#line 1251 
  return;
}


#line 1254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags)
{
  
#line 1258 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1260 
  spin_unlock_irqrestore(lock,flags);
  
#line 1261 
  return;
}


#line 1264  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_free_irq_110(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1268 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1269 
  return;
}


#line 1272  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_111(spinlock_t *ldv_func_arg1)
{
  
#line 1276 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1278 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1279 
  return;
}


#line 1282  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags)
{
  
#line 1286 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1288 
  spin_unlock_irqrestore(lock,flags);
  
#line 1289 
  return;
}


#line 1292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_113(spinlock_t *ldv_func_arg1)
{
  
#line 1296 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1298 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1299 
  return;
}


#line 1302  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_114(spinlock_t *lock, unsigned long flags)
{
  
#line 1306 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1308 
  spin_unlock_irqrestore(lock,flags);
  
#line 1309 
  return;
}


#line 1312  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_lock_115(spinlock_t *lock)
{
  
#line 1316 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1318 
  spin_lock(lock);
  
#line 1319 
  return;
}


#line 1322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_116(spinlock_t *lock)
{
  
#line 1326 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1328 
  spin_unlock(lock);
  
#line 1329 
  return;
}


#line 1332  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv_del_timer_sync_117(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1336 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1336 
  return tmp;
}


#line 1340  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1)
{
  
#line 1344 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1346 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1347 
  return;
}


#line 1350  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags)
{
  
#line 1354 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1356 
  spin_unlock_irqrestore(lock,flags);
  
#line 1357 
  return;
}


#line 1360  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_free_irq_120(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1364 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1365 
  return;
}


#line 1368  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1)
{
  
#line 1372 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1374 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1375 
  return;
}


#line 1378  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags)
{
  
#line 1382 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1384 
  spin_unlock_irqrestore(lock,flags);
  
#line 1385 
  return;
}


#line 1388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1)
{
  
#line 1392 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1394 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1395 
  return;
}


#line 1398  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags)
{
  
#line 1402 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1404 
  spin_unlock_irqrestore(lock,flags);
  
#line 1405 
  return;
}


#line 1408  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_125(spinlock_t *ldv_func_arg1)
{
  
#line 1412 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1414 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1415 
  return;
}


#line 1418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_126(spinlock_t *lock, unsigned long flags)
{
  
#line 1422 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1424 
  spin_unlock_irqrestore(lock,flags);
  
#line 1425 
  return;
}


#line 1428  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_127(spinlock_t *ldv_func_arg1)
{
  
#line 1432 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1434 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1435 
  return;
}


#line 1438  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_128(spinlock_t *lock, unsigned long flags)
{
  
#line 1442 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1444 
  spin_unlock_irqrestore(lock,flags);
  
#line 1445 
  return;
}


#line 1448  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv___ldv_spin_lock_129(spinlock_t *ldv_func_arg1)
{
  
#line 1452 
  ldv_spin_model_lock((char *)"lock_of_pcnet32_private");
  
#line 1454 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1455 
  return;
}


#line 1458  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_spin_unlock_irqrestore_130(spinlock_t *lock, unsigned long flags)
{
  
#line 1462 
  ldv_spin_model_unlock((char *)"lock_of_pcnet32_private");
  
#line 1464 
  spin_unlock_irqrestore(lock,flags);
  
#line 1465 
  return;
}


#line 1468  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv_mod_timer_131(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1472 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1472 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_unregister_netdev_132(struct net_device *ldv_func_arg1)
{
  
#line 1480 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1481 
  return;
}


#line 1484  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_free_netdev_133(struct net_device *ldv_func_arg1)
{
  
#line 1488 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1489 
  return;
}


#line 1492  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static int ldv___pci_register_driver_134(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1496 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1496 
  return tmp;
}


#line 1500  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_unregister_netdev_135(struct net_device *ldv_func_arg1)
{
  
#line 1504 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1505 
  return;
}


#line 1508  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_free_netdev_136(struct net_device *ldv_func_arg1)
{
  
#line 1512 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1513 
  return;
}


#line 1516  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/weaver/.tmp_pcnet32.c.aux"
static void ldv_pci_unregister_driver_137(struct pci_driver *ldv_func_arg1)
{
  
#line 1520 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1521 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 83 
int main(void);


#line 84 
void ldv_dispatch_register_10_4(struct net_device *arg0);


#line 85 
void *ldv_timer_scenario_15(void *arg0);


#line 86 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 88 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 90 
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0);


#line 91 
void *ldv_initialization_1(void *arg0);


#line 92 
void *ldv_random_allocationless_scenario_14(void *arg0);


#line 93 
void *ldv_interrupt_scenario_13(void *arg0);


#line 95 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 99 
void *ldv_pci_scenario_12(void *arg0);


#line 100 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 103 
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 119 
  ldv_8_timer_list = arg0;
  
#line 123 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 124 
  ;
  
#line 124 
  __retres = 0;
  
#line 124 
  return __retres;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 135 
  tmp = ldv_undef_int();
  
#line 135 
  switch (tmp) {
    case 0: 
#line 136 
    ;
    
#line 137 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 138 
    cf_arg_15->arg0 = arg0;
    
#line 139 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 140 
    __VERIFIER_assume(ret == 0);
    
#line 141 
    goto ldv_44724;
    default: 
#line 143 
    ;
    
#line 143 
    __VERIFIER_assume(0);
  }
  ldv_44724: 
#line 144 
  ;
  
#line 145 
  return;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 152 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_pcnet32_driver_2;
  
#line 156 
  tmp_0 = ldv_undef_int();
  
#line 156 
  if (tmp_0 != 0) {
    
#line 158 
    ldv_7_pci_driver = arg0;
    
#line 162 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 166 
    __retres = 0;
    
#line 166 
    goto return_label;
  }
  else {
    int tmp;
    
#line 173 
    tmp = ldv_undef_int_negative();
    
#line 173 
    __retres = tmp;
    
#line 173 
    goto return_label;
  }
  return_label: 
#line 156 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 186 
  ldv_initialize();
  
#line 189 
  ldv_initialization_1((void *)0);
  
#line 191 
  __retres = 0;
  
#line 191 
  return __retres;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 199 
  tmp = ldv_undef_int();
  
#line 199 
  switch (tmp) {
    case 0: 
#line 200 
    ;
    
#line 201 
    cf_arg_14 = (struct ldv_struct_random_allocationless_scenario_14 *)ldv_xmalloc(16UL);
    
#line 202 
    cf_arg_14->arg0 = arg0;
    
#line 203 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_14,(void *)cf_arg_14);
    
#line 204 
    __VERIFIER_assume(ret == 0);
    
#line 205 
    goto ldv_44741;
    default: 
#line 207 
    ;
    
#line 207 
    __VERIFIER_assume(0);
  }
  ldv_44741: 
#line 208 
  ;
  
#line 209 
  return;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 218 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 223 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 224 
    ldv_15_container = data->arg0;
    
#line 225 
    ldv_free((void *)data);
  }
  else ;
  
#line 230 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 232 
    ldv_switch_to_interrupt_context();
    
#line 234 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 236 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 245 
  __retres = (void *)0;
  
#line 245 
  goto return_label;
  
#line 247 
  __retres = (void *)0;
  return_label: 
#line 247 
                return __retres;
}


#line 252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_13;
  int tmp;
  
#line 255 
  tmp = ldv_undef_int();
  
#line 255 
  switch (tmp) {
    case 0: 
#line 256 
    ;
    
#line 257 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 258 
    __VERIFIER_assume(ret == 0);
    
#line 259 
    goto ldv_44754;
    default: 
#line 261 
    ;
    
#line 261 
    __VERIFIER_assume(0);
  }
  ldv_44754: 
#line 262 
  ;
  
#line 263 
  return;
}


#line 267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 274 
  tmp_0 = ldv_undef_int();
  
#line 274 
  if (tmp_0 != 0) {
    
#line 276 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 280 
    __retres = ldv_5_netdev;
    
#line 280 
    goto return_label;
  }
  else {
    
#line 287 
    __retres = (struct net_device *)0;
    
#line 287 
    goto return_label;
  }
  return_label: 
#line 274 
                return __retres;
}


#line 297  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 300 
  tmp = ldv_undef_int();
  
#line 300 
  switch (tmp) {
    case 0: 
#line 301 
    ;
    
#line 302 
    cf_arg_12 = (struct ldv_struct_pci_scenario_12 *)ldv_xmalloc(16UL);
    
#line 303 
    cf_arg_12->arg0 = arg0;
    
#line 304 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_pci_scenario_12,(void *)cf_arg_12);
    
#line 305 
    __VERIFIER_assume(ret == 0);
    
#line 306 
    goto ldv_44768;
    default: 
#line 308 
    ;
    
#line 308 
    __VERIFIER_assume(0);
  }
  ldv_44768: 
#line 309 
  ;
  
#line 310 
  return;
}


#line 314  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp_0;
  
#line 319 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_pcnet32_interrupt_2;
  
#line 324 
  tmp_0 = ldv_undef_int();
  
#line 324 
  if (tmp_0 != 0) {
    
#line 326 
    ldv_11_line = (int)arg0;
    
#line 327 
    ldv_11_callback = arg1;
    
#line 328 
    ldv_11_thread = (enum irqreturn (*)(int , void *))0;
    
#line 329 
    ldv_11_data = arg4;
    
#line 333 
    ldv_dispatch_irq_register_11_3(ldv_11_line,ldv_11_callback,ldv_11_thread,ldv_11_data);
    
#line 337 
    __retres = 0;
    
#line 337 
    goto return_label;
  }
  else {
    int tmp;
    
#line 344 
    tmp = ldv_undef_int_negative();
    
#line 344 
    __retres = tmp;
    
#line 344 
    goto return_label;
  }
  return_label: 
#line 324 
                return __retres;
}


#line 354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 357 
  tmp = ldv_undef_int();
  
#line 357 
  switch (tmp) {
    case 0: 
#line 358 
    ;
    
#line 359 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 360 
    __VERIFIER_assume(ret == 0);
    
#line 361 
    goto ldv_44793;
    default: 
#line 363 
    ;
    
#line 363 
    __VERIFIER_assume(0);
  }
  ldv_44793: 
#line 364 
  ;
  
#line 365 
  return;
}


#line 369  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 376 
  ldv_1_ret = ldv_emg_pcnet32_init_module();
  
#line 377 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 380 
  tmp = ldv_undef_int();
  
#line 380 
  if (tmp != 0) {
    
#line 382 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 386 
    __retres = (void *)0;
    
#line 386 
    goto return_label;
  }
  else {
    
#line 390 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 395 
    ldv_emg_pcnet32_cleanup_module();
    
#line 399 
    __retres = (void *)0;
    
#line 399 
    goto return_label;
  }
  
#line 402 
  __retres = (void *)0;
  return_label: 
#line 402 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_14(void *arg0)
{
  void *__retres;
  unsigned int ldv_14_ldv_param_1_18;
  struct ethtool_ringparam *ldv_14_ldv_param_1_20;
  unsigned int ldv_14_ldv_param_1_4;
  struct ethtool_cmd *ldv_14_ldv_param_1_10;
  struct ethtool_regs *ldv_14_ldv_param_1_15;
  unsigned char *ldv_14_ldv_param_2_19;
  struct ethtool_drvinfo *ldv_14_ldv_param_1_6;
  struct ethtool_ringparam *ldv_14_ldv_param_1_7;
  struct sk_buff *ldv_14_ldv_param_0_8;
  void *ldv_14_ldv_param_1_9;
  int ldv_14_ldv_param_1_17;
  struct ethtool_cmd *ldv_14_ldv_param_1_2;
  enum ethtool_phys_id_state *ldv_14_ldv_param_1_3;
  int ldv_14_ldv_param_1_5;
  struct ethtool_test *ldv_14_ldv_param_1_11;
  int ldv_14_ldv_param_2_14;
  unsigned long long *ldv_14_ldv_param_2_12;
  struct net_device *ldv_14_container;
  void *ldv_14_ldv_param_2_16;
  struct ifreq *ldv_14_ldv_param_1_13;
  int tmp_12;
  
#line 431 
  struct ldv_struct_random_allocationless_scenario_14 *data = (struct ldv_struct_random_allocationless_scenario_14 *)arg0;
  
#line 436 
  if (data != (struct ldv_struct_random_allocationless_scenario_14 *)0) {
    
#line 437 
    ldv_14_container = data->arg0;
    
#line 438 
    ldv_free((void *)data);
  }
  else ;
  
#line 446 
  goto ldv_call_14;
  
#line 448 
  __retres = (void *)0;
  
#line 448 
  goto return_label;
  ldv_call_14: 
#line 451 
  ;
  
#line 454 
  tmp_12 = ldv_undef_int();
  
#line 454 
  if (tmp_12 != 0) {
    int tmp_0;
    
#line 456 
    ldv_14_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 459 
    tmp_0 = ldv_undef_int();
    
#line 459 
    switch (tmp_0) {
      case 1: 
#line 460 
      ;
      
#line 463 
      ldv_emg_wrapper_pcnet32_set_settings_2(ldv_14_container,ldv_14_ldv_param_1_2);
      
#line 466 
      goto ldv_44825;
      case 2: 
#line 468 
      ;
      
#line 471 
      ldv_emg_wrapper_pcnet32_set_multicast_list_25(ldv_14_container);
      
#line 474 
      goto ldv_44825;
      case 3: 
#line 476 
      ;
      
#line 479 
      ldv_emg_wrapper_pcnet32_nway_reset_20(ldv_14_container);
      
#line 482 
      goto ldv_44825;
      case 4: 
#line 484 
      ;
      
#line 487 
      ldv_emg_wrapper_pcnet32_get_regs_len_23(ldv_14_container);
      
#line 490 
      goto ldv_44825;
      case 5: 
#line 492 
      ;
      
#line 494 
      ldv_14_ldv_param_1_20 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 499 
      ldv_emg_wrapper_pcnet32_get_ringparam_22(ldv_14_container,ldv_14_ldv_param_1_20);
      
#line 503 
      ldv_free((void *)ldv_14_ldv_param_1_20);
      
#line 506 
      goto ldv_44825;
      case 6: 
#line 508 
      ;
      
#line 510 
      ldv_14_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 515 
      ldv_emg_wrapper_pcnet32_get_strings_21(ldv_14_container,ldv_14_ldv_param_1_18,ldv_14_ldv_param_2_19);
      
#line 519 
      ldv_free((void *)ldv_14_ldv_param_2_19);
      
#line 522 
      goto ldv_44825;
      case 7: 
#line 524 
      ;
      
#line 527 
      ldv_emg_wrapper_pcnet32_poll_controller_24(ldv_14_container);
      
#line 530 
      goto ldv_44825;
      case 8: 
#line 532 
      ;
      
#line 535 
      ldv_emg_wrapper_pcnet32_get_stats_19(ldv_14_container);
      
#line 538 
      goto ldv_44825;
      case 9: 
#line 540 
      ;
      
#line 546 
      ldv_emg_wrapper_pcnet32_get_sset_count_18(ldv_14_container,ldv_14_ldv_param_1_17);
      
#line 552 
      goto ldv_44825;
      case 10: 
#line 554 
      ;
      
#line 556 
      ldv_14_ldv_param_1_15 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 557 
      ldv_14_ldv_param_2_16 = ldv_xmalloc_unknown_size(0UL);
      
#line 562 
      ldv_emg_wrapper_pcnet32_get_regs_17(ldv_14_container,ldv_14_ldv_param_1_15,ldv_14_ldv_param_2_16);
      
#line 566 
      ldv_free((void *)ldv_14_ldv_param_1_15);
      
#line 567 
      ldv_free(ldv_14_ldv_param_2_16);
      
#line 570 
      goto ldv_44825;
      case 11: 
#line 572 
      ;
      
#line 574 
      ldv_14_ldv_param_1_13 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 579 
      ldv_emg_wrapper_pcnet32_ioctl_16(ldv_14_container,ldv_14_ldv_param_1_13,ldv_14_ldv_param_2_14);
      
#line 583 
      ldv_free((void *)ldv_14_ldv_param_1_13);
      
#line 586 
      goto ldv_44825;
      case 12: 
#line 588 
      ;
      
#line 590 
      ldv_14_ldv_param_1_11 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 591 
      ldv_14_ldv_param_2_12 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 596 
      ldv_emg_wrapper_pcnet32_ethtool_test_15(ldv_14_container,ldv_14_ldv_param_1_11,ldv_14_ldv_param_2_12);
      
#line 600 
      ldv_free((void *)ldv_14_ldv_param_1_11);
      
#line 601 
      ldv_free((void *)ldv_14_ldv_param_2_12);
      
#line 604 
      goto ldv_44825;
      case 13: 
#line 606 
      ;
      
#line 609 
      ldv_emg_wrapper_pcnet32_tx_timeout_14(ldv_14_container);
      
#line 612 
      goto ldv_44825;
      case 14: 
#line 614 
      ;
      
#line 616 
      ldv_14_ldv_param_1_10 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 621 
      ldv_emg_wrapper_pcnet32_get_settings_13(ldv_14_container,ldv_14_ldv_param_1_10);
      
#line 625 
      ldv_free((void *)ldv_14_ldv_param_1_10);
      
#line 628 
      goto ldv_44825;
      case 15: 
#line 630 
      ;
      
#line 632 
      ldv_14_ldv_param_1_9 = ldv_xmalloc_unknown_size(0UL);
      
#line 637 
      (*ldv_emg_alias_eth_mac_addr_12)(ldv_14_container,ldv_14_ldv_param_1_9);
      
#line 641 
      ldv_free(ldv_14_ldv_param_1_9);
      
#line 644 
      goto ldv_44825;
      case 16: 
#line 646 
      ;
      
#line 648 
      ldv_14_ldv_param_0_8 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 653 
      ldv_emg_wrapper_pcnet32_start_xmit_11(ldv_14_ldv_param_0_8,ldv_14_container);
      
#line 657 
      ldv_free((void *)ldv_14_ldv_param_0_8);
      
#line 660 
      goto ldv_44825;
      case 17: 
#line 662 
      ;
      
#line 665 
      ldv_emg_wrapper_pcnet32_get_msglevel_10(ldv_14_container);
      
#line 668 
      goto ldv_44825;
      case 18: 
#line 670 
      ;
      
#line 672 
      ldv_14_ldv_param_1_7 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 677 
      ldv_emg_wrapper_pcnet32_set_ringparam_9(ldv_14_container,ldv_14_ldv_param_1_7);
      
#line 681 
      ldv_free((void *)ldv_14_ldv_param_1_7);
      
#line 684 
      goto ldv_44825;
      case 19: 
#line 686 
      ;
      
#line 688 
      ldv_14_ldv_param_1_6 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 693 
      ldv_emg_wrapper_pcnet32_get_drvinfo_8(ldv_14_container,ldv_14_ldv_param_1_6);
      
#line 697 
      ldv_free((void *)ldv_14_ldv_param_1_6);
      
#line 700 
      goto ldv_44825;
      case 20: 
#line 702 
      ;
      
#line 705 
      ldv_emg_wrapper_pcnet32_get_link_7(ldv_14_container);
      
#line 708 
      goto ldv_44825;
      case 21: 
#line 710 
      ;
      
#line 713 
      (*ldv_emg_alias_eth_validate_addr_6)(ldv_14_container);
      
#line 716 
      goto ldv_44825;
      case 22: 
#line 718 
      ;
      
#line 724 
      (*ldv_emg_alias_eth_change_mtu_5)(ldv_14_container,ldv_14_ldv_param_1_5);
      
#line 730 
      goto ldv_44825;
      case 23: 
#line 732 
      ;
      
#line 738 
      ldv_emg_wrapper_pcnet32_set_msglevel_4(ldv_14_container,ldv_14_ldv_param_1_4);
      
#line 744 
      goto ldv_44825;
      case 24: 
#line 746 
      ;
      
#line 748 
      ldv_14_ldv_param_1_3 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 753 
      ldv_emg_wrapper_pcnet32_set_phys_id_3(ldv_14_container,*ldv_14_ldv_param_1_3);
      
#line 757 
      ldv_free((void *)ldv_14_ldv_param_1_3);
      
#line 760 
      goto ldv_44825;
      default: 
#line 762 
      ;
      
#line 762 
      __VERIFIER_assume(0);
    }
    ldv_44825: 
#line 765 
    ;
    
#line 765 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 772 
    goto ldv_call_14;
  }
  else {
    
#line 780 
    __retres = (void *)0;
    
#line 780 
    goto return_label;
  }
  
#line 783 
  __retres = (void *)0;
  return_label: 
#line 783 
                return __retres;
}


#line 788  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_13(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_13_ret_val;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp;
  
#line 794 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_pcnet32_interrupt_2;
  
#line 797 
  struct ldv_struct_interrupt_scenario_13 *data = (struct ldv_struct_interrupt_scenario_13 *)arg0;
  
#line 802 
  if (data != (struct ldv_struct_interrupt_scenario_13 *)0) {
    
#line 803 
    ldv_13_line = data->arg0;
    
#line 804 
    ldv_13_callback = data->arg1;
    
#line 805 
    ldv_13_thread = data->arg2;
    
#line 806 
    ldv_13_data = data->arg3;
    
#line 807 
    ldv_free((void *)data);
  }
  else ;
  
#line 813 
  ldv_switch_to_interrupt_context();
  
#line 815 
  ldv_13_ret_val = ldv_emg_wrapper_pcnet32_interrupt_2(ldv_13_line,ldv_13_data);
  
#line 817 
  ldv_switch_to_process_context();
  
#line 820 
  tmp = ldv_undef_int();
  
#line 820 
  if (tmp != 0) {
    
#line 822 
    __VERIFIER_assume(ldv_13_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 826 
    if (ldv_13_thread != (enum irqreturn (*)(int , void *))0) 
#line 828 
                                                              (*ldv_13_thread)(ldv_13_line,ldv_13_data); else ;
  }
  else 
#line 835 
       __VERIFIER_assume(ldv_13_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 844 
  __retres = (void *)0;
  
#line 844 
  goto return_label;
  
#line 846 
  __retres = (void *)0;
  return_label: 
#line 846 
                return __retres;
}


#line 851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 854 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_pcnet32_driver_2;
  
#line 857 
  ldv_9_pci_driver = arg0;
  
#line 861 
  ldv_dispatch_deregister_9_1(ldv_9_pci_driver);
  
#line 865 
  goto return_label;
  return_label: 
#line 867 
                return;
}


#line 872  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 875 
  tmp = ldv_undef_int();
  
#line 875 
  switch (tmp) {
    case 0: 
#line 876 
    ;
    
#line 877 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 878 
    __VERIFIER_assume(ret == 0);
    
#line 879 
    goto ldv_44873;
    default: 
#line 881 
    ;
    
#line 881 
    __VERIFIER_assume(0);
  }
  ldv_44873: 
#line 882 
  ;
  
#line 883 
  return;
}


#line 887  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 893 
  ldv_6_netdev = arg0;
  
#line 898 
  ldv_emg_wrapper_pcnet32_close_2(ldv_6_netdev);
  
#line 902 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 906 
  goto return_label;
  return_label: 
#line 908 
                return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 919 
  ldv_3_line = (int)arg0;
  
#line 923 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 927 
  goto return_label;
  return_label: 
#line 929 
                return;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 941 
  tmp_0 = ldv_undef_int();
  
#line 941 
  if (tmp_0 != 0) {
    
#line 943 
    ldv_4_timer_list = arg0;
    
#line 947 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 951 
    __retres = 0;
    
#line 951 
    goto return_label;
  }
  else {
    int tmp;
    
#line 958 
    tmp = ldv_undef_int_negative();
    
#line 958 
    __retres = tmp;
    
#line 958 
    goto return_label;
  }
  return_label: 
#line 941 
                return __retres;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_12(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_12_resource_1;
  struct pci_device_id *ldv_12_ldv_param_1_2;
  struct pm_message ldv_12_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 973 
  struct pci_driver *ldv_12_container = ldv_emg_alias_pcnet32_driver_2;
  
#line 974 
  int ldv_12_ret = ldv_undef_int();
  
#line 977 
  struct ldv_struct_pci_scenario_12 *data = (struct ldv_struct_pci_scenario_12 *)arg0;
  
#line 981 
  ldv_12_ret = ldv_undef_int();
  
#line 984 
  if (data != (struct ldv_struct_pci_scenario_12 *)0) {
    
#line 985 
    ldv_12_container = data->arg0;
    
#line 986 
    ldv_free((void *)data);
  }
  else ;
  
#line 997 
  goto ldv_main_12;
  
#line 999 
  __retres = (void *)0;
  
#line 999 
  goto return_label;
  ldv_main_12: 
#line 1002 
  ;
  
#line 1005 
  tmp_2 = ldv_undef_int();
  
#line 1005 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1007 
    ldv_12_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1012 
    ldv_pre_probe();
    
#line 1014 
    ldv_12_ret = ldv_emg_wrapper_pcnet32_probe_pci_2(ldv_12_resource_1,ldv_12_ldv_param_1_2);
    
#line 1016 
    ldv_12_ret = ldv_post_probe(ldv_12_ret);
    
#line 1020 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 1023 
    tmp_1 = ldv_undef_int();
    
#line 1023 
    if (tmp_1 != 0) {
      
#line 1025 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 1032 
      goto ldv_call_12;
    }
    else {
      
#line 1036 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 1043 
      goto ldv_main_12;
    }
  }
  else {
    
#line 1055 
    __retres = (void *)0;
    
#line 1055 
    goto return_label;
  }
  
#line 1058 
  __retres = (void *)0;
  
#line 1058 
  goto return_label;
  ldv_call_12: 
#line 1061 
  ;
  
#line 1064 
  tmp_3 = ldv_undef_int();
  
#line 1064 
  switch (tmp_3) {
    case 1: 
#line 1065 
    ;
    
#line 1074 
    goto ldv_call_12;
    case 2: 
#line 1077 
    ;
    
#line 1080 
    ldv_12_ret = ldv_emg_wrapper_pcnet32_pm_suspend_3(ldv_12_resource_1,ldv_12_resource_0);
    
#line 1082 
    ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    
#line 1086 
    if (ldv_12_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1088 
      ldv_12_ret = (*(ldv_12_container->suspend_late))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 1090 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 1092 
         ldv_12_ret = ldv_undef_int();
    
#line 1097 
    if (ldv_12_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1099 
      (*(ldv_12_container->resume_early))(ldv_12_resource_1); else ;
    
#line 1105 
    ldv_emg_wrapper_pcnet32_pm_resume_5(ldv_12_resource_1);
    
#line 1112 
    goto ldv_call_12;
    case 3: 
#line 1115 
    ;
    
#line 1117 
    if (ldv_12_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 1119 
      (*(ldv_12_container->shutdown))(ldv_12_resource_1); else ;
    
#line 1125 
    ldv_emg_wrapper_pcnet32_remove_one_4(ldv_12_resource_1);
    
#line 1132 
    goto ldv_main_12;
    default: 
#line 1135 
    ;
    
#line 1135 
    __VERIFIER_assume(0);
  }
  
#line 1138 
  __retres = (void *)0;
  return_label: 
#line 1138 
                return __retres;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 1146 
  tmp = ldv_undef_int();
  
#line 1146 
  switch (tmp) {
    case 0: 
#line 1147 
    ;
    
#line 1148 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 1149 
    __VERIFIER_assume(ret == 0);
    
#line 1150 
    goto ldv_44910;
    default: 
#line 1152 
    ;
    
#line 1152 
    __VERIFIER_assume(0);
  }
  ldv_44910: 
#line 1153 
  ;
  
#line 1154 
  return;
}


#line 1158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1164 
  ldv_2_netdev = arg0;
  
#line 1165 
  ldv_free((void *)ldv_2_netdev);
  
#line 1169 
  goto return_label;
  return_label: 
#line 1171 
                return;
}


#line 1176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_10_netdev;
  int tmp_3;
  
#line 1180 
  int ldv_10_ret = ldv_undef_int();
  
#line 1183 
  ldv_10_ret = ldv_undef_int();
  
#line 1186 
  tmp_3 = ldv_undef_int();
  
#line 1186 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1188 
    ldv_10_netdev = arg0;
    
#line 1193 
    ldv_10_ret = ldv_emg_wrapper_pcnet32_open_2(ldv_10_netdev);
    
#line 1196 
    tmp_1 = ldv_undef_int();
    
#line 1196 
    if (tmp_1 != 0) {
      
#line 1198 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 1202 
      ldv_dispatch_register_10_4(ldv_10_netdev);
      
#line 1206 
      __retres = 0;
      
#line 1206 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1213 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 1214 
      ldv_failed_register_netdev();
      
#line 1215 
      tmp_0 = ldv_undef_int_negative();
      
#line 1215 
      __retres = tmp_0;
      
#line 1215 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1223 
    ldv_failed_register_netdev();
    
#line 1224 
    tmp_2 = ldv_undef_int_negative();
    
#line 1224 
    __retres = tmp_2;
    
#line 1224 
    goto return_label;
  }
  return_label: 
#line 1186 
                return __retres;
}


#line 1234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/amd/pcnet32.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1237 
  tmp = ldv_undef_int();
  
#line 1237 
  switch (tmp) {
    case 0: 
#line 1238 
    ;
    
#line 1239 
    cf_arg_13 = (struct ldv_struct_interrupt_scenario_13 *)ldv_xmalloc(32UL);
    
#line 1240 
    cf_arg_13->arg0 = arg0;
    
#line 1241 
    cf_arg_13->arg1 = arg1;
    
#line 1242 
    cf_arg_13->arg2 = arg2;
    
#line 1243 
    cf_arg_13->arg3 = arg3;
    
#line 1244 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_interrupt_scenario_13,(void *)cf_arg_13);
    
#line 1245 
    __VERIFIER_assume(ret == 0);
    
#line 1246 
    goto ldv_44934;
    default: 
#line 1248 
    ;
    
#line 1248 
    __VERIFIER_assume(0);
  }
  ldv_44934: 
#line 1249 
  ;
  
#line 1250 
  return;
}


