/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_48 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_48 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
union __anonunion_49 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_49 __anonCompField_idr_layer_19 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
struct dentry;

#line 98 
struct iattr;

#line 99 
struct vm_area_struct;

#line 100 
struct super_block;

#line 101 
struct file_system_type;

#line 102 
struct kernfs_open_node;

#line 103 
struct kernfs_iattrs;

#line 126 
struct kernfs_root;

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_54 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_54 __anonCompField_kernfs_node_20 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_55 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_55 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_56 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_56 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kref.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_58 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_57 {
   struct __anonstruct_58 __anonCompField___anonunion_57_21 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_57 __anonCompField_ctl_table_header_22 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_59 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_59 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_124 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_124 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_156 {
   struct __anonstruct_157 __anonCompField___anonunion_156_35 ;
   struct __anonstruct_158 __anonCompField___anonunion_156_36 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_156 __anonCompField_uprobe_task_37 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_159 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_165 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_164 {
   atomic_t _mapcount ;
   struct __anonstruct_165 __anonCompField___anonunion_164_40 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_163 {
   union __anonunion_164 __anonCompField___anonstruct_163_41 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long counters ;
   struct __anonstruct_163 __anonCompField___anonunion_162_42 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_160 {
   union __anonunion_161 __anonCompField___anonstruct_160_39 ;
   union __anonunion_162 __anonCompField___anonstruct_160_43 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_166 {
   struct list_head lru ;
   struct __anonstruct_167 __anonCompField___anonunion_166_45 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_168 __anonCompField___anonunion_166_46 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_169 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_159 __anonCompField_page_38 ;
   struct __anonstruct_160 __anonCompField_page_44 ;
   union __anonunion_166 __anonCompField_page_47 ;
   union __anonunion_169 __anonCompField_page_48 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_170 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_170 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_172 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_172 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_174 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_175 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_176 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_177 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_179 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_178 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_179 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_180 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_181 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_173 {
   int _pad[28U] ;
   struct __anonstruct__kill_174 _kill ;
   struct __anonstruct__timer_175 _timer ;
   struct __anonstruct__rt_176 _rt ;
   struct __anonstruct__sigchld_177 _sigchld ;
   struct __anonstruct__sigfault_178 _sigfault ;
   struct __anonstruct__sigpoll_180 _sigpoll ;
   struct __anonstruct__sigsys_181 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_173 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_188 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_189 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_191 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_190 {
   struct keyring_index_key index_key ;
   struct __anonstruct_191 __anonCompField___anonunion_190_51 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_192 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_194 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_193 {
   union __anonunion_payload_194 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_188 __anonCompField_key_49 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_189 __anonCompField_key_50 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_190 __anonCompField_key_52 ;
   union __anonunion_type_data_192 type_data ;
   union __anonunion_193 __anonCompField_key_53 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_209 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_209 __anonCompField_pci_dev_57 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_214 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_214 __anonCompField_kernel_param_58 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 796 
struct mnt_namespace;

#line 797 
struct ipc_namespace;

#line 798 
struct net;

#line 798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct proc_ns_operations;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18 
struct vfsmount;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_233 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_233 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_235 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_235 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_236 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_236 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_237 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_237 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_238 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_238 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_239 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_239 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_240 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_240 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_241 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_241 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_242 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_242 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_243 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_244 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_243 ifr_ifrn ;
   union __anonunion_ifr_ifru_244 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_249 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_248 {
   struct __anonstruct_249 __anonCompField___anonunion_248_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_248 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_251 {
   u32 hash ;
   u32 len ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_69 ;
   u64 hash_len ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_250 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_252 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_252 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_256 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_255 {
   struct __anonstruct_256 __anonCompField___anonunion_255_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_255 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_260 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_260 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_261 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_261 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_264 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_265 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_266 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_264 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_265 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_266 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_267 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_267 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_269 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_268 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_269 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_268 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_284 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_284 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27521 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27521 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_289 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_290 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_291 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_291 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_293 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   u64 v64 ;
   struct __anonstruct_293 __anonCompField___anonunion_292_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_292 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_295 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_296 __anonCompField___anonstruct_295_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_294 {
   struct __anonstruct_295 __anonCompField___anonunion_294_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_298 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __wsum csum ;
   struct __anonstruct_298 __anonCompField___anonunion_297_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_299 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_300 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_301 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_294 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_297 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_299 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_300 __anonCompField_sk_buff_91 ;
   union __anonunion_301 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net_generic;

#line 17 
struct netns_ipvs;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_310 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_310 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29326 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29326 phy_interface_t;

#line 126 
enum ldv_29379 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29379 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31072 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31073 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_320 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_321 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_322 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_320 adj_list ;
   struct __anonstruct_all_adj_list_321 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31072 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31073 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_322 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
struct global_regs {
   u32 txq_start_addr ;
   u32 txq_end_addr ;
   u32 rxq_start_addr ;
   u32 rxq_end_addr ;
   u32 pm_csr ;
   u32 unused ;
   u32 int_status ;
   u32 int_mask ;
   u32 int_alias_clr_en ;
   u32 int_status_alias ;
   u32 sw_reset ;
   u32 slv_timer ;
   u32 msi_config ;
   u32 loopback ;
   u32 watchdog_timer ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct txdma_regs {
   u32 csr ;
   u32 pr_base_hi ;
   u32 pr_base_lo ;
   u32 pr_num_des ;
   u32 txq_wr_addr ;
   u32 txq_wr_addr_ext ;
   u32 txq_rd_addr ;
   u32 dma_wb_base_hi ;
   u32 dma_wb_base_lo ;
   u32 service_request ;
   u32 service_complete ;
   u32 cache_rd_index ;
   u32 cache_wr_index ;
   u32 tx_dma_error ;
   u32 desc_abort_cnt ;
   u32 payload_abort_cnt ;
   u32 writeback_abort_cnt ;
   u32 desc_timeout_cnt ;
   u32 payload_timeout_cnt ;
   u32 writeback_timeout_cnt ;
   u32 desc_error_cnt ;
   u32 payload_error_cnt ;
   u32 writeback_error_cnt ;
   u32 dropped_tlp_cnt ;
   u32 new_service_complete ;
   u32 ethernet_packet_cnt ;
};

#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct rxdma_regs {
   u32 csr ;
   u32 dma_wb_base_lo ;
   u32 dma_wb_base_hi ;
   u32 num_pkt_done ;
   u32 max_pkt_time ;
   u32 rxq_rd_addr ;
   u32 rxq_rd_addr_ext ;
   u32 rxq_wr_addr ;
   u32 psr_base_lo ;
   u32 psr_base_hi ;
   u32 psr_num_des ;
   u32 psr_avail_offset ;
   u32 psr_full_offset ;
   u32 psr_access_index ;
   u32 psr_min_des ;
   u32 fbr0_base_lo ;
   u32 fbr0_base_hi ;
   u32 fbr0_num_des ;
   u32 fbr0_avail_offset ;
   u32 fbr0_full_offset ;
   u32 fbr0_rd_index ;
   u32 fbr0_min_des ;
   u32 fbr1_base_lo ;
   u32 fbr1_base_hi ;
   u32 fbr1_num_des ;
   u32 fbr1_avail_offset ;
   u32 fbr1_full_offset ;
   u32 fbr1_rd_index ;
   u32 fbr1_min_des ;
};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct txmac_regs {
   u32 ctl ;
   u32 shadow_ptr ;
   u32 err_cnt ;
   u32 max_fill ;
   u32 cf_param ;
   u32 tx_test ;
   u32 err ;
   u32 err_int ;
   u32 bp_ctrl ;
};

#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct rxmac_regs {
   u32 ctrl ;
   u32 crc0 ;
   u32 crc12 ;
   u32 crc34 ;
   u32 sa_lo ;
   u32 sa_hi ;
   u32 mask0_word0 ;
   u32 mask0_word1 ;
   u32 mask0_word2 ;
   u32 mask0_word3 ;
   u32 mask1_word0 ;
   u32 mask1_word1 ;
   u32 mask1_word2 ;
   u32 mask1_word3 ;
   u32 mask2_word0 ;
   u32 mask2_word1 ;
   u32 mask2_word2 ;
   u32 mask2_word3 ;
   u32 mask3_word0 ;
   u32 mask3_word1 ;
   u32 mask3_word2 ;
   u32 mask3_word3 ;
   u32 mask4_word0 ;
   u32 mask4_word1 ;
   u32 mask4_word2 ;
   u32 mask4_word3 ;
   u32 uni_pf_addr1 ;
   u32 uni_pf_addr2 ;
   u32 uni_pf_addr3 ;
   u32 multi_hash1 ;
   u32 multi_hash2 ;
   u32 multi_hash3 ;
   u32 multi_hash4 ;
   u32 pf_ctrl ;
   u32 mcif_ctrl_max_seg ;
   u32 mcif_water_mark ;
   u32 rxq_diag ;
   u32 space_avail ;
   u32 mif_ctrl ;
   u32 err_reg ;
};

#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct mac_regs {
   u32 cfg1 ;
   u32 cfg2 ;
   u32 ipg ;
   u32 hfdp ;
   u32 max_fm_len ;
   u32 rsv1 ;
   u32 rsv2 ;
   u32 mac_test ;
   u32 mii_mgmt_cfg ;
   u32 mii_mgmt_cmd ;
   u32 mii_mgmt_addr ;
   u32 mii_mgmt_ctrl ;
   u32 mii_mgmt_stat ;
   u32 mii_mgmt_indicator ;
   u32 if_ctrl ;
   u32 if_stat ;
   u32 station_addr_1 ;
   u32 station_addr_2 ;
};

#line 1067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct macstat_regs {
   u32 pad[32U] ;
   u32 txrx_0_64_byte_frames ;
   u32 txrx_65_127_byte_frames ;
   u32 txrx_128_255_byte_frames ;
   u32 txrx_256_511_byte_frames ;
   u32 txrx_512_1023_byte_frames ;
   u32 txrx_1024_1518_byte_frames ;
   u32 txrx_1519_1522_gvln_frames ;
   u32 rx_bytes ;
   u32 rx_packets ;
   u32 rx_fcs_errs ;
   u32 rx_multicast_packets ;
   u32 rx_broadcast_packets ;
   u32 rx_control_frames ;
   u32 rx_pause_frames ;
   u32 rx_unknown_opcodes ;
   u32 rx_align_errs ;
   u32 rx_frame_len_errs ;
   u32 rx_code_errs ;
   u32 rx_carrier_sense_errs ;
   u32 rx_undersize_packets ;
   u32 rx_oversize_packets ;
   u32 rx_fragment_packets ;
   u32 rx_jabbers ;
   u32 rx_drops ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 tx_multicast_packets ;
   u32 tx_broadcast_packets ;
   u32 tx_pause_frames ;
   u32 tx_deferred ;
   u32 tx_excessive_deferred ;
   u32 tx_single_collisions ;
   u32 tx_multiple_collisions ;
   u32 tx_late_collisions ;
   u32 tx_excessive_collisions ;
   u32 tx_total_collisions ;
   u32 tx_pause_honored_frames ;
   u32 tx_drops ;
   u32 tx_jabbers ;
   u32 tx_fcs_errs ;
   u32 tx_control_frames ;
   u32 tx_oversize_frames ;
   u32 tx_undersize_frames ;
   u32 tx_fragments ;
   u32 carry_reg1 ;
   u32 carry_reg2 ;
   u32 carry_reg1_mask ;
   u32 carry_reg2_mask ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct mmc_regs {
   u32 mmc_ctrl ;
   u32 sram_access ;
   u32 sram_word1 ;
   u32 sram_word2 ;
   u32 sram_word3 ;
   u32 sram_word4 ;
};

#line 1219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.h"
struct address_map {
   struct global_regs global ;
   u8 unused_global[4036U] ;
   struct txdma_regs txdma ;
   u8 unused_txdma[3992U] ;
   struct rxdma_regs rxdma ;
   u8 unused_rxdma[3980U] ;
   struct txmac_regs txmac ;
   u8 unused_txmac[4060U] ;
   struct rxmac_regs rxmac ;
   u8 unused_rxmac[3936U] ;
   struct mac_regs mac ;
   u8 unused_mac[4024U] ;
   struct macstat_regs macstat ;
   u8 unused_mac_stat[3776U] ;
   struct mmc_regs mmc ;
   u8 unused_mmc[4072U] ;
   u8 unused_[1015808U] ;
   u8 unused_exp_rom[4096U] ;
   u8 unused__[524288U] ;
};

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct fbr_desc {
   u32 addr_lo ;
   u32 addr_hi ;
   u32 word2 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct pkt_stat_desc {
   u32 word0 ;
   u32 word1 ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct rx_status_block {
   u32 word0 ;
   u32 word1 ;
};

#line 266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct fbr_lookup {
   void *virt[1024U] ;
   u32 bus_high[1024U] ;
   u32 bus_low[1024U] ;
   void *ring_virtaddr ;
   dma_addr_t ring_physaddr ;
   void *mem_virtaddrs[32U] ;
   dma_addr_t mem_physaddrs[32U] ;
   u32 local_full ;
   u32 num_entries ;
   dma_addr_t buffsize ;
};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct rx_ring {
   struct fbr_lookup *fbr[2U] ;
   void *ps_ring_virtaddr ;
   dma_addr_t ps_ring_physaddr ;
   u32 local_psr_full ;
   u32 psr_entries ;
   struct rx_status_block *rx_status_block ;
   dma_addr_t rx_status_bus ;
   struct list_head recv_list ;
   u32 num_ready_recv ;
   u32 num_rfd ;
   bool unfinished_receives ;
};

#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct tx_desc {
   u32 addr_hi ;
   u32 addr_lo ;
   u32 len_vlan ;
   u32 flags ;
};

#line 341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct tcb {
   struct tcb *next ;
   u32 count ;
   u32 stale ;
   struct sk_buff *skb ;
   u32 index ;
   u32 index_start ;
};

#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct tx_ring {
   struct tcb *tcb_ring ;
   struct tcb *tcb_qhead ;
   struct tcb *tcb_qtail ;
   struct tcb *send_head ;
   struct tcb *send_tail ;
   int used ;
   struct tx_desc *tx_desc_ring ;
   dma_addr_t tx_desc_ring_pa ;
   u32 send_idx ;
   u32 *tx_status ;
   dma_addr_t tx_status_pa ;
   int since_irq ;
};

#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct rfd {
   struct list_head list_node ;
   struct sk_buff *skb ;
   u32 len ;
   u16 bufferindex ;
   u8 ringindex ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct ce_stats {
   u32 multicast_pkts_rcvd ;
   u32 rcvd_pkts_dropped ;
   u32 tx_underflows ;
   u32 tx_collisions ;
   u32 tx_excessive_collisions ;
   u32 tx_first_collisions ;
   u32 tx_late_collisions ;
   u32 tx_max_pkt_errs ;
   u32 tx_deferred ;
   u32 rx_overflows ;
   u32 rx_length_errs ;
   u32 rx_align_errs ;
   u32 rx_crc_errs ;
   u32 rx_code_violations ;
   u32 rx_other_errs ;
   u32 interrupt_status ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct et131x_adapter {
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct mii_bus *mii_bus ;
   struct phy_device *phydev ;
   struct napi_struct napi ;
   u32 flags ;
   int link ;
   u8 rom_addr[6U] ;
   u8 addr[6U] ;
   bool has_eeprom ;
   u8 eeprom_data[2U] ;
   spinlock_t tcb_send_qlock ;
   spinlock_t tcb_ready_qlock ;
   spinlock_t rcv_lock ;
   u32 packet_filter ;
   u32 multicast_addr_count ;
   u8 multicast_list[128U][6U] ;
   struct address_map *regs ;
   u8 wanted_flow ;
   u32 registry_jumbo_packet ;
   u8 flow ;
   struct timer_list error_timer ;
   u8 boot_coma ;
   struct tx_ring tx_ring ;
   struct rx_ring rx_ring ;
   struct ce_stats stats ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_15 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_12 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_14 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 36  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_13 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/fvtp/.tmp_et131x.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_79(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_80(spinlock_t *lock);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1);


#line 122 
void ldv_spin_model_lock(char *);


#line 123 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_98(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 224 
void add_timer(struct timer_list *);


#line 232 
static int ldv_del_timer_sync_103(struct timer_list *ldv_func_arg1);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 195 
void iounmap(void volatile *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev *pci_dev_get(struct pci_dev *);


#line 814 
void pci_dev_put(struct pci_dev *);


#line 859 
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 992 
int pcie_set_readrq(struct pci_dev *, int);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_109(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_110(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 1718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_cap(struct pci_dev *dev)
{
  int __retres;
  
#line 1720 
  __retres = (int)dev->pcie_cap;
  
#line 1720 
  return __retres;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static bool pci_is_pcie(struct pci_dev *dev)
{
  bool __retres;
  int tmp;
  
#line 1731 
  tmp = pci_pcie_cap(dev);
  
#line 1731 
  __retres = (_Bool)(tmp != 0);
  
#line 1731 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_101(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_102(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus *mdiobus_alloc_size(size_t);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
__inline static struct mii_bus *mdiobus_alloc(void)
{
  struct mii_bus *tmp;
  
#line 198 
  tmp = mdiobus_alloc_size(0UL);
  
#line 198 
  return tmp;
}


#line 201 
int mdiobus_register(struct mii_bus *);


#line 202 
void mdiobus_unregister(struct mii_bus *);


#line 203 
void mdiobus_free(struct mii_bus *);


#line 736 
struct phy_device *phy_find_first(struct mii_bus *);


#line 742 
struct phy_device *phy_connect(struct net_device *, char const *, void (*)(struct net_device *), phy_interface_t);


#line 745 
void phy_disconnect(struct phy_device *);


#line 747 
void phy_start(struct phy_device *);


#line 748 
void phy_stop(struct phy_device *);


#line 777 
int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);


#line 778 
int phy_ethtool_gset(struct phy_device *, struct ethtool_cmd *);


#line 779 
int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);


#line 781 
void phy_print_status(struct phy_device *);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_100(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_device_present(struct net_device *dev)
{
  bool __retres;
  int tmp;
  
#line 3114 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& dev->state));
  
#line 3114 
  __retres = (_Bool)(tmp != 0);
  
#line 3114 
  return __retres;
}


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_107(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_99(struct net_device *ldv_func_arg1);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_106(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int eeprom_wait_ready(struct pci_dev *pdev, u32 *status)
{
  int __retres;
  u32 reg;
  int i;
  int tmp;
  
#line 506 
  i = 0;
  
#line 506 
  goto ldv_46799;
  ldv_46798: 
#line 507 
  ;
  
#line 507 
  tmp = pci_read_config_dword((struct pci_dev const *)pdev,176,& reg);
  
#line 507 
  if (tmp != 0) {
    
#line 508 
    __retres = -5;
    
#line 508 
    goto return_label;
  }
  else ;
  
#line 511 
  if ((reg & 12288U) == 12288U) {
    
#line 512 
    if (status != (u32 *)0U) 
#line 513 
                             *status = reg; else ;
    
#line 514 
    __retres = (int)reg & 255;
    
#line 514 
    goto return_label;
  }
  else ;
  
#line 506 
  i += 1;
  ldv_46799: 
#line 507 
  ;
  
#line 506 
  if (i <= 999) 
#line 508 
                goto ldv_46798; else 
#line 511 
                                     goto ldv_46800;
  ldv_46800: 
#line 512 
  ;
  
#line 517 
  __retres = -110;
  return_label: 
#line 517 
                return __retres;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int eeprom_write(struct et131x_adapter *adapter, u32 addr, u8 data)
{
  int __retres;
  int retries;
  u32 status;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 522 
  struct pci_dev *pdev = adapter->pdev;
  
#line 523 
  int index = 0;
  
#line 525 
  int err = 0;
  
#line 526 
  int writeok = 0;
  
#line 528 
  u32 val = 0U;
  
#line 537 
  err = eeprom_wait_ready(pdev,(u32 *)0U);
  
#line 538 
  if (err < 0) {
    
#line 539 
    __retres = err;
    
#line 539 
    goto return_label;
  }
  else ;
  
#line 546 
  tmp = pci_write_config_byte((struct pci_dev const *)pdev,177,(unsigned char)192);
  
#line 546 
  if (tmp != 0) {
    
#line 549 
    __retres = -5;
    
#line 549 
    goto return_label;
  }
  else ;
  
#line 552 
  retries = 0;
  
#line 552 
  goto ldv_46816;
  ldv_46815: 
#line 553 
  ;
  
#line 553 
  tmp_0 = pci_write_config_dword((struct pci_dev const *)pdev,172,addr);
  
#line 553 
  if (tmp_0 != 0) 
#line 554 
                  goto ldv_46813; else ;
  
#line 558 
  tmp_1 = pci_write_config_byte((struct pci_dev const *)pdev,176,(unsigned char)((int)data));
  
#line 558 
  if (tmp_1 != 0) 
#line 559 
                  goto ldv_46813; else ;
  
#line 567 
  err = eeprom_wait_ready(pdev,& status);
  
#line 568 
  if (err < 0) {
    
#line 569 
    __retres = 0;
    
#line 569 
    goto return_label;
  }
  else ;
  
#line 575 
  if ((status & 8U) != 0U && (unsigned int)(adapter->pdev)->revision == 0U) 
    
#line 577 
    goto ldv_46813; else ;
  
#line 586 
  if ((status & 4U) != 0U) {
    
#line 592 
    __const_udelay(42950UL);
    
#line 593 
    goto ldv_46814;
  }
  else ;
  
#line 596 
  writeok = 1;
  
#line 597 
  goto ldv_46813;
  ldv_46814: 
#line 598 
  ;
  
#line 552 
  retries += 1;
  ldv_46816: 
#line 553 
  ;
  
#line 552 
  if (retries <= 1) 
#line 554 
                    goto ldv_46815; else 
#line 557 
                                         goto ldv_46813;
  ldv_46813: 
#line 558 
  ;
  
#line 600 
  __const_udelay(42950UL);
  ldv_46822: 
#line 602 
  ;
  
#line 603 
  tmp_2 = pci_write_config_byte((struct pci_dev const *)pdev,177,(unsigned char)128);
  
#line 603 
  if (tmp_2 != 0) 
#line 605 
                  writeok = 0; else ;
  ldv_46819: 
#line 606 
  ;
  
#line 611 
  pci_write_config_dword((struct pci_dev const *)pdev,172,addr);
  ldv_46817: 
#line 612 
  ;
  
#line 615 
  pci_read_config_dword((struct pci_dev const *)pdev,176,& val);
  
#line 618 
  if ((val & 65536U) == 0U) 
#line 620 
                            goto ldv_46817; else 
#line 623 
                                                 goto ldv_46818;
  ldv_46818: 
#line 624 
  ;
  
#line 619 
  if ((val & 262144U) != 0U) 
#line 621 
                             goto ldv_46819; else 
#line 624 
                                                  goto ldv_46820;
  ldv_46820: 
#line 625 
  ;
  
#line 621 
  if ((val & 65280U) != 49152U || index == 10000) 
#line 622 
                                                  goto ldv_46821; else ;
  
#line 623 
  index += 1;
  
#line 603 
  goto ldv_46822;
  ldv_46821: 
#line 604 
  ;
  
#line 625 
  if (writeok != 0) 
#line 625 
                    tmp_3 = 0; else 
#line 625 
                                    tmp_3 = -5;
  
#line 625 
  __retres = tmp_3;
  return_label: 
#line 625 
                return __retres;
}


#line 628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int eeprom_read(struct et131x_adapter *adapter, u32 addr, u8 *pdata)
{
  int __retres;
  int err;
  u32 status;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 630 
  struct pci_dev *pdev = adapter->pdev;
  
#line 637 
  err = eeprom_wait_ready(pdev,(u32 *)0U);
  
#line 638 
  if (err < 0) {
    
#line 639 
    __retres = err;
    
#line 639 
    goto return_label;
  }
  else ;
  
#line 645 
  tmp = pci_write_config_byte((struct pci_dev const *)pdev,177,(unsigned char)128);
  
#line 645 
  if (tmp != 0) {
    
#line 647 
    __retres = -5;
    
#line 647 
    goto return_label;
  }
  else ;
  
#line 651 
  tmp_0 = pci_write_config_dword((struct pci_dev const *)pdev,172,addr);
  
#line 651 
  if (tmp_0 != 0) {
    
#line 652 
    __retres = -5;
    
#line 652 
    goto return_label;
  }
  else ;
  
#line 657 
  err = eeprom_wait_ready(pdev,& status);
  
#line 658 
  if (err < 0) {
    
#line 659 
    __retres = err;
    
#line 659 
    goto return_label;
  }
  else ;
  
#line 663 
  *pdata = (unsigned char)err;
  
#line 665 
  if ((status & 4U) != 0U) 
#line 665 
                           tmp_1 = -5; else 
#line 665 
                                            tmp_1 = 0;
  
#line 665 
  __retres = tmp_1;
  return_label: 
#line 665 
                return __retres;
}


#line 668  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_init_eeprom(struct et131x_adapter *adapter)
{
  int __retres;
  u8 eestatus;
  int tmp;
  
#line 670 
  struct pci_dev *pdev = adapter->pdev;
  
#line 673 
  pci_read_config_byte((struct pci_dev const *)pdev,178,& eestatus);
  
#line 681 
  tmp = pci_read_config_byte((struct pci_dev const *)pdev,178,& eestatus);
  
#line 681 
  if (tmp != 0) {
    
#line 682 
    dev_err((struct device const *)(& pdev->dev),"Could not read PCI config space for EEPROM Status\n");
    
#line 684 
    __retres = -5;
    
#line 684 
    goto return_label;
  }
  else ;
  
#line 690 
  if (((int)eestatus & 76) != 0) {
    
#line 691 
    int write_failed = 0;
    
#line 693 
    if ((unsigned int)pdev->revision == 1U) {
      int i;
      int tmp_0;
      
#line 695 
      u8 const eedata[4U] = {(unsigned char)254U, (unsigned char)19U, (unsigned char)16U, (unsigned char)255U};
      
#line 701 
      i = 0;
      
#line 701 
      goto ldv_46840;
      ldv_46839: 
#line 702 
      ;
      
#line 702 
      tmp_0 = eeprom_write(adapter,(unsigned int)i,(unsigned char)((int)eedata[i]));
      
#line 702 
      if (tmp_0 < 0) 
#line 703 
                     write_failed = 1; else ;
      
#line 701 
      i += 1;
      ldv_46840: 
#line 702 
      ;
      
#line 701 
      if (i <= 2) 
#line 703 
                  goto ldv_46839; else 
#line 706 
                                       goto ldv_46841;
      ldv_46841: 
#line 707 
      ;
    }
    else ;
    
#line 705 
    if ((unsigned int)pdev->revision != 1U || write_failed != 0) {
      
#line 706 
      dev_err((struct device const *)(& pdev->dev),"Fatal EEPROM Status Error - 0x%04x\n",(int)eestatus);
      
#line 716 
      adapter->has_eeprom = (_Bool)0;
      
#line 717 
      __retres = -5;
      
#line 717 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 720 
  adapter->has_eeprom = (_Bool)1;
  
#line 725 
  eeprom_read(adapter,112U,& adapter->eeprom_data[0]);
  
#line 726 
  eeprom_read(adapter,113U,& adapter->eeprom_data[1]);
  
#line 728 
  if ((unsigned int)adapter->eeprom_data[0] != 205U) 
#line 730 
                                                     adapter->eeprom_data[1] = (unsigned char)0U; else ;
  
#line 732 
  __retres = 0;
  return_label: 
#line 732 
                return __retres;
}


#line 735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_rx_dma_enable(struct et131x_adapter *adapter)
{
  
#line 738 
  u32 csr = 8192U;
  
#line 739 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  
#line 741 
  if ((rx_ring->fbr[1])->buffsize == 4096ULL) 
#line 742 
                                              csr |= 2048U;
  else 
    
#line 743 
    if ((rx_ring->fbr[1])->buffsize == 8192ULL) 
#line 744 
                                                csr |= 4096U;
    else 
      
#line 745 
      if ((rx_ring->fbr[1])->buffsize == 16384ULL) 
#line 746 
                                                   csr |= 6144U; else ;
  
#line 748 
  csr |= 1024U;
  
#line 749 
  if ((rx_ring->fbr[0])->buffsize == 256ULL) 
#line 750 
                                             csr |= 256U;
  else 
    
#line 751 
    if ((rx_ring->fbr[0])->buffsize == 512ULL) 
#line 752 
                                               csr |= 512U;
    else 
      
#line 753 
      if ((rx_ring->fbr[0])->buffsize == 1024ULL) 
#line 754 
                                                  csr |= 768U; else ;
  
#line 755 
  writel(csr,(void volatile *)(& (adapter->regs)->rxdma.csr));
  
#line 757 
  csr = readl((void const volatile *)(& (adapter->regs)->rxdma.csr));
  
#line 758 
  if ((csr & 131072U) != 0U) {
    
#line 759 
    __const_udelay(21475UL);
    
#line 760 
    csr = readl((void const volatile *)(& (adapter->regs)->rxdma.csr));
    
#line 761 
    if ((csr & 131072U) != 0U) 
#line 762 
                               dev_err((struct device const *)(& (adapter->pdev)->dev),"RX Dma failed to exit halt state. CSR 0x%08x\n",csr); else ;
  }
  else ;
  
#line 765 
  return;
}


#line 769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_rx_dma_disable(struct et131x_adapter *adapter)
{
  u32 csr;
  
#line 773 
  writel(8193U,(void volatile *)(& (adapter->regs)->rxdma.csr));
  
#line 775 
  csr = readl((void const volatile *)(& (adapter->regs)->rxdma.csr));
  
#line 776 
  if ((csr & 131072U) == 0U) {
    
#line 777 
    __const_udelay(21475UL);
    
#line 778 
    csr = readl((void const volatile *)(& (adapter->regs)->rxdma.csr));
    
#line 779 
    if ((csr & 131072U) == 0U) 
#line 780 
                               dev_err((struct device const *)(& (adapter->pdev)->dev),"RX Dma failed to enter halt state. CSR 0x%08x\n",csr); else ;
  }
  else ;
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_tx_dma_enable(struct et131x_adapter *adapter)
{
  
#line 791 
  writel(256U,(void volatile *)(& (adapter->regs)->txdma.csr));
  
#line 793 
  return;
}


#line 795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
__inline static void add_10bit(u32 *v, int n)
{
  
#line 797 
  *v = ((*v + (unsigned int)n) & 1023U) | (*v & 1024U);
  
#line 798 
  return;
}


#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
__inline static void add_12bit(u32 *v, int n)
{
  
#line 802 
  *v = ((*v + (unsigned int)n) & 4095U) | (*v & 4096U);
  
#line 803 
  return;
}


#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_mac_regs1(struct et131x_adapter *adapter)
{
  u32 station1;
  u32 station2;
  u32 ipg;
  
#line 807 
  struct mac_regs *macregs = & (adapter->regs)->mac;
  
#line 815 
  writel(3222208512U,(void volatile *)(& macregs->cfg1));
  
#line 821 
  ipg = 939546720U;
  
#line 822 
  ipg |= 20480U;
  
#line 823 
  writel(ipg,(void volatile *)(& macregs->ipg));
  
#line 827 
  writel(10612791U,(void volatile *)(& macregs->hfdp));
  
#line 830 
  writel(0U,(void volatile *)(& macregs->if_ctrl));
  
#line 832 
  writel(7U,(void volatile *)(& macregs->mii_mgmt_cfg));
  
#line 841 
  station2 = (unsigned int)(((int)adapter->addr[1] << 24) | ((int)adapter->addr[0] << 16));
  
#line 843 
  station1 = (unsigned int)(((((int)adapter->addr[5] << 24) | ((int)adapter->addr[4] << 16)) | ((int)adapter->addr[3] << 8)) | (int)adapter->addr[2]);
  
#line 847 
  writel(station1,(void volatile *)(& macregs->station_addr_1));
  
#line 848 
  writel(station2,(void volatile *)(& macregs->station_addr_2));
  
#line 857 
  writel(adapter->registry_jumbo_packet + 4U,(void volatile *)(& macregs->max_fm_len));
  
#line 860 
  writel(0U,(void volatile *)(& macregs->cfg1));
  
#line 861 
  return;
}


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_mac_regs2(struct et131x_adapter *adapter)
{
  u32 cfg1;
  u32 cfg2;
  u32 ifctrl;
  u32 ctl;
  
#line 865 
  int32_t delay = 0;
  
#line 866 
  struct mac_regs *mac = & (adapter->regs)->mac;
  
#line 867 
  struct phy_device *phydev = adapter->phydev;
  
#line 873 
  ctl = readl((void const volatile *)(& (adapter->regs)->txmac.ctl));
  
#line 874 
  cfg1 = readl((void const volatile *)(& mac->cfg1));
  
#line 875 
  cfg2 = readl((void const volatile *)(& mac->cfg2));
  
#line 876 
  ifctrl = readl((void const volatile *)(& mac->if_ctrl));
  
#line 879 
  cfg2 &= 4294966527U;
  
#line 880 
  if (phydev->speed == 1000) {
    
#line 881 
    cfg2 |= 512U;
    
#line 882 
    ifctrl &= 4278190079U;
  }
  else {
    
#line 884 
    cfg2 |= 256U;
    
#line 885 
    ifctrl |= 16777216U;
  }
  
#line 888 
  cfg1 |= 21U;
  
#line 891 
  cfg1 &= 4294967007U;
  
#line 892 
  if ((unsigned int)adapter->flow == 2U || (unsigned int)adapter->flow == 0U) 
    
#line 893 
    cfg1 |= 32U; else ;
  
#line 894 
  writel(cfg1,(void volatile *)(& mac->cfg1));
  
#line 900 
  cfg2 |= 28672U;
  
#line 901 
  cfg2 |= 16U;
  
#line 902 
  cfg2 |= 4U;
  
#line 903 
  cfg2 |= 2U;
  
#line 904 
  cfg2 &= 4294967263U;
  
#line 905 
  cfg2 &= 4294967294U;
  
#line 907 
  if (phydev->duplex == 1) 
#line 908 
                           cfg2 |= 1U; else ;
  
#line 910 
  ifctrl &= 4227858431U;
  
#line 911 
  if (phydev->duplex == 0) 
#line 912 
                           ifctrl |= 67108864U; else ;
  
#line 914 
  writel(ifctrl,(void volatile *)(& mac->if_ctrl));
  
#line 915 
  writel(cfg2,(void volatile *)(& mac->cfg2));
  ldv_46879: 
#line 916 
  ;
  
#line 918 
  __const_udelay(42950UL);
  
#line 919 
  delay += 1;
  
#line 920 
  cfg1 = readl((void const volatile *)(& mac->cfg1));
  
#line 921 
  if ((cfg1 & 10U) != 10U && delay <= 99) 
#line 923 
                                          goto ldv_46879; else 
#line 926 
                                                               goto ldv_46880;
  ldv_46880: 
#line 927 
  ;
  
#line 923 
  if (delay == 100) 
#line 924 
                    dev_warn((struct device const *)(& (adapter->pdev)->dev),"Syncd bits did not respond correctly cfg1 word 0x%08x\n",cfg1); else ;
  
#line 929 
  ctl |= 9U;
  
#line 930 
  writel(ctl,(void volatile *)(& (adapter->regs)->txmac.ctl));
  
#line 932 
  if ((adapter->flags & 2097152U) != 0U) {
    
#line 933 
    et131x_rx_dma_enable(adapter);
    
#line 934 
    et131x_tx_dma_enable(adapter);
  }
  else ;
  
#line 936 
  return;
}


#line 938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et1310_in_phy_coma(struct et131x_adapter *adapter)
{
  int __retres;
  
#line 940 
  u32 pmcsr = readl((void const volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 942 
  __retres = (int)(pmcsr >> 6) & 1;
  
#line 942 
  return __retres;
}


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_setup_device_for_multicast(struct et131x_adapter *adapter)
{
  u32 pm_csr;
  int tmp_4;
  
#line 947 
  struct rxmac_regs *rxmac = & (adapter->regs)->rxmac;
  
#line 948 
  u32 hash1 = 0U;
  
#line 949 
  u32 hash2 = 0U;
  
#line 950 
  u32 hash3 = 0U;
  
#line 951 
  u32 hash4 = 0U;
  
#line 959 
  if ((adapter->packet_filter & 2U) != 0U) {
    int i;
    
#line 963 
    i = 0;
    
#line 963 
    goto ldv_46901;
    ldv_46900: 
#line 964 
    ;
    {
      u32 result;
      u32 tmp_3;
      {
        u32 tmp_2;
        
#line 966 
        u32 __x = crc32_le(4294967295U,(unsigned char const *)(& adapter->multicast_list[i]),6UL);
        
#line 966 
        if (0 != 0) {
          u32 tmp_0;
          {
            
#line 966 
            u32 __x_0 = __x_0;
            
#line 966 
            __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
            
#line 966 
            __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
            
#line 966 
            __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
            
#line 966 
            __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
            
#line 966 
            __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
            
#line 966 
            tmp_0 = __x_0;
          }
          
#line 966 
          tmp_2 = tmp_0;
        }
        else 
#line 966 
             tmp_2 = __bitrev32(__x);
        
#line 966 
        tmp_3 = tmp_2;
      }
      
#line 966 
      result = tmp_3;
      
#line 968 
      result = (result >> 23) & 127U;
      
#line 970 
      if (result <= 31U) 
#line 971 
                         hash1 = (unsigned int)(1 << result) | hash1;
      else 
        
#line 972 
        if (result + 4294967264U <= 31U) {
          
#line 973 
          result += 4294967264U;
          
#line 974 
          hash2 = (unsigned int)(1 << result) | hash2;
        }
        else 
          
#line 975 
          if (result + 4294967232U <= 31U) {
            
#line 976 
            result += 4294967232U;
            
#line 977 
            hash3 = (unsigned int)(1 << result) | hash3;
          }
          else {
            
#line 979 
            result += 4294967200U;
            
#line 980 
            hash4 = (unsigned int)(1 << result) | hash4;
          }
    }
    
#line 963 
    i += 1;
    ldv_46901: 
#line 964 
    ;
    
#line 963 
    if (adapter->multicast_addr_count > (unsigned int)i) 
#line 965 
                                                         goto ldv_46900; else 
                                                                    
#line 968 
                                                                    goto ldv_46902;
    ldv_46902: 
#line 969 
    ;
  }
  else ;
  
#line 986 
  pm_csr = readl((void const volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 987 
  tmp_4 = et1310_in_phy_coma(adapter);
  
#line 987 
  if (tmp_4 == 0) {
    
#line 988 
    writel(hash1,(void volatile *)(& rxmac->multi_hash1));
    
#line 989 
    writel(hash2,(void volatile *)(& rxmac->multi_hash2));
    
#line 990 
    writel(hash3,(void volatile *)(& rxmac->multi_hash3));
    
#line 991 
    writel(hash4,(void volatile *)(& rxmac->multi_hash4));
  }
  else ;
  
#line 993 
  return;
}


#line 995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_setup_device_for_unicast(struct et131x_adapter *adapter)
{
  u32 uni_pf1;
  u32 uni_pf2;
  u32 uni_pf3;
  u32 pm_csr;
  int tmp;
  
#line 997 
  struct rxmac_regs *rxmac = & (adapter->regs)->rxmac;
  
#line 1012 
  uni_pf3 = (unsigned int)(((((int)adapter->addr[0] << 24) | ((int)adapter->addr[1] << 16)) | ((int)adapter->addr[0] << 8)) | (int)adapter->addr[1]);
  
#line 1017 
  uni_pf2 = (unsigned int)(((((int)adapter->addr[2] << 24) | ((int)adapter->addr[3] << 16)) | ((int)adapter->addr[4] << 8)) | (int)adapter->addr[5]);
  
#line 1022 
  uni_pf1 = (unsigned int)(((((int)adapter->addr[2] << 24) | ((int)adapter->addr[3] << 16)) | ((int)adapter->addr[4] << 8)) | (int)adapter->addr[5]);
  
#line 1027 
  pm_csr = readl((void const volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1028 
  tmp = et1310_in_phy_coma(adapter);
  
#line 1028 
  if (tmp == 0) {
    
#line 1029 
    writel(uni_pf1,(void volatile *)(& rxmac->uni_pf_addr1));
    
#line 1030 
    writel(uni_pf2,(void volatile *)(& rxmac->uni_pf_addr2));
    
#line 1031 
    writel(uni_pf3,(void volatile *)(& rxmac->uni_pf_addr3));
  }
  else ;
  
#line 1033 
  return;
}


#line 1035  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_rxmac_regs(struct et131x_adapter *adapter)
{
  u32 sa_lo;
  u32 *wolw;
  
#line 1037 
  struct rxmac_regs *rxmac = & (adapter->regs)->rxmac;
  
#line 1038 
  struct phy_device *phydev = adapter->phydev;
  
#line 1040 
  u32 sa_hi = 0U;
  
#line 1041 
  u32 pf_ctrl = 0U;
  
#line 1045 
  writel(8U,(void volatile *)(& rxmac->ctrl));
  
#line 1048 
  writel(0U,(void volatile *)(& rxmac->crc0));
  
#line 1049 
  writel(0U,(void volatile *)(& rxmac->crc12));
  
#line 1050 
  writel(0U,(void volatile *)(& rxmac->crc34));
  
#line 1056 
  wolw = & rxmac->mask0_word0;
  
#line 1056 
  goto ldv_46921;
  ldv_46920: 
#line 1057 
  ;
  
#line 1057 
  writel(0U,(void volatile *)wolw);
  
#line 1056 
  wolw += 1;
  ldv_46921: 
#line 1057 
  ;
  
#line 1056 
  if (& rxmac->mask4_word3 >= wolw) 
#line 1058 
                                    goto ldv_46920; else 
#line 1061 
                                                         goto ldv_46922;
  ldv_46922: 
#line 1062 
  ;
  
#line 1060 
  sa_lo = (unsigned int)(((((int)adapter->addr[2] << 24) | ((int)adapter->addr[3] << 16)) | ((int)adapter->addr[4] << 8)) | (int)adapter->addr[5]);
  
#line 1064 
  writel(sa_lo,(void volatile *)(& rxmac->sa_lo));
  
#line 1066 
  sa_hi = (unsigned int)((int)adapter->addr[0] << 8) | (unsigned int)adapter->addr[1];
  
#line 1068 
  writel(sa_hi,(void volatile *)(& rxmac->sa_hi));
  
#line 1071 
  writel(0U,(void volatile *)(& rxmac->pf_ctrl));
  
#line 1074 
  if ((adapter->packet_filter & 1U) != 0U) {
    
#line 1075 
    et1310_setup_device_for_unicast(adapter);
    
#line 1076 
    pf_ctrl |= 4U;
  }
  else {
    
#line 1078 
    writel(0U,(void volatile *)(& rxmac->uni_pf_addr1));
    
#line 1079 
    writel(0U,(void volatile *)(& rxmac->uni_pf_addr2));
    
#line 1080 
    writel(0U,(void volatile *)(& rxmac->uni_pf_addr3));
  }
  
#line 1084 
  if ((adapter->packet_filter & 16U) == 0U) {
    
#line 1085 
    pf_ctrl |= 2U;
    
#line 1086 
    et1310_setup_device_for_multicast(adapter);
  }
  else ;
  
#line 1090 
  pf_ctrl |= 4194304U;
  
#line 1091 
  pf_ctrl |= 8U;
  
#line 1093 
  if (adapter->registry_jumbo_packet > 8192U) 
#line 1104 
                                              writel(65U,(void volatile *)(& rxmac->mcif_ctrl_max_seg)); else 
                                                                    
#line 1106 
                                                                    writel(0U,(void volatile *)(& rxmac->mcif_ctrl_max_seg));
  
#line 1108 
  writel(0U,(void volatile *)(& rxmac->mcif_water_mark));
  
#line 1109 
  writel(0U,(void volatile *)(& rxmac->mif_ctrl));
  
#line 1110 
  writel(0U,(void volatile *)(& rxmac->space_avail));
  
#line 1125 
  if (phydev != (struct phy_device *)0 && phydev->speed == 100) 
#line 1126 
                                                                writel(196664U,(void volatile *)(& rxmac->mif_ctrl)); else 
                                                                    
#line 1128 
                                                                    writel(196656U,(void volatile *)(& rxmac->mif_ctrl));
  
#line 1136 
  writel(pf_ctrl,(void volatile *)(& rxmac->pf_ctrl));
  
#line 1137 
  writel(9U,(void volatile *)(& rxmac->ctrl));
  
#line 1138 
  return;
}


#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_txmac_regs(struct et131x_adapter *adapter)
{
  
#line 1142 
  struct txmac_regs *txmac = & (adapter->regs)->txmac;
  
#line 1148 
  if ((unsigned int)adapter->flow == 3U) 
#line 1149 
                                         writel(0U,(void volatile *)(& txmac->cf_param)); else 
                                                                    
#line 1151 
                                                                    writel(64U,(void volatile *)(& txmac->cf_param));
  
#line 1152 
  return;
}


#line 1154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_macstat_regs(struct et131x_adapter *adapter)
{
  u32 *reg;
  
#line 1156 
  struct macstat_regs *macstat = & (adapter->regs)->macstat;
  
#line 1160 
  reg = & macstat->txrx_0_64_byte_frames;
  
#line 1160 
  goto ldv_46933;
  ldv_46932: 
#line 1161 
  ;
  
#line 1162 
  writel(0U,(void volatile *)reg);
  
#line 1161 
  reg += 1;
  ldv_46933: 
#line 1162 
  ;
  
#line 1161 
  if (& macstat->carry_reg2 >= reg) 
#line 1163 
                                    goto ldv_46932; else 
#line 1166 
                                                         goto ldv_46934;
  ldv_46934: 
#line 1167 
  ;
  
#line 1168 
  writel(4294950450U,(void volatile *)(& macstat->carry_reg1_mask));
  
#line 1169 
  writel(4294868619U,(void volatile *)(& macstat->carry_reg2_mask));
  
#line 1170 
  return;
}


#line 1172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_phy_mii_read(struct et131x_adapter *adapter, u8 addr, u8 reg, u16 *value)
{
  u32 mii_addr;
  u32 mii_cmd;
  u32 mii_indicator;
  unsigned int tmp;
  
#line 1175 
  struct mac_regs *mac = & (adapter->regs)->mac;
  
#line 1176 
  int status = 0;
  
#line 1177 
  u32 delay = 0U;
  
#line 1185 
  mii_addr = readl((void const volatile *)(& mac->mii_mgmt_addr));
  
#line 1186 
  mii_cmd = readl((void const volatile *)(& mac->mii_mgmt_cmd));
  
#line 1189 
  writel(0U,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1192 
  writel((unsigned int)(((int)addr << 8) | (int)reg),(void volatile *)(& mac->mii_mgmt_addr));
  
#line 1194 
  writel(1U,(void volatile *)(& mac->mii_mgmt_cmd));
  ldv_46947: 
#line 1195 
  ;
  
#line 1197 
  __const_udelay(214750UL);
  
#line 1198 
  delay += 1U;
  
#line 1199 
  mii_indicator = readl((void const volatile *)(& mac->mii_mgmt_indicator));
  
#line 1200 
  if ((mii_indicator & 5U) != 0U && delay <= 49U) 
#line 1202 
                                                  goto ldv_46947; else 
                                                                    
#line 1205 
                                                                    goto ldv_46948;
  ldv_46948: 
#line 1206 
  ;
  
#line 1203 
  if (delay == 50U) {
    
#line 1204 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"reg 0x%08x could not be read\n",(int)reg);
    
#line 1206 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"status is  0x%08x\n",mii_indicator);
    
#line 1209 
    status = -5;
    
#line 1210 
    goto out;
  }
  else ;
  
#line 1216 
  tmp = readl((void const volatile *)(& mac->mii_mgmt_stat));
  
#line 1216 
  *value = (unsigned short)tmp;
  out: 
#line 1218 
  ;
  
#line 1220 
  writel(0U,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1225 
  writel(mii_addr,(void volatile *)(& mac->mii_mgmt_addr));
  
#line 1226 
  writel(mii_cmd,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1228 
  return status;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_mii_read(struct et131x_adapter *adapter, u8 reg, u16 *value)
{
  int __retres;
  int tmp;
  
#line 1233 
  struct phy_device *phydev = adapter->phydev;
  
#line 1235 
  if (phydev == (struct phy_device *)0) {
    
#line 1236 
    __retres = -5;
    
#line 1236 
    goto return_label;
  }
  else ;
  
#line 1238 
  tmp = et131x_phy_mii_read(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)((int)reg),value);
  
#line 1238 
  __retres = tmp;
  return_label: 
#line 1238 
                return __retres;
}


#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_mii_write(struct et131x_adapter *adapter, u8 addr, u8 reg, u16 value)
{
  u32 mii_addr;
  u32 mii_cmd;
  u32 mii_indicator;
  
#line 1244 
  struct mac_regs *mac = & (adapter->regs)->mac;
  
#line 1245 
  int status = 0;
  
#line 1246 
  u32 delay = 0U;
  
#line 1254 
  mii_addr = readl((void const volatile *)(& mac->mii_mgmt_addr));
  
#line 1255 
  mii_cmd = readl((void const volatile *)(& mac->mii_mgmt_cmd));
  
#line 1258 
  writel(0U,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1261 
  writel((unsigned int)(((int)addr << 8) | (int)reg),(void volatile *)(& mac->mii_mgmt_addr));
  
#line 1264 
  writel((unsigned int)value,(void volatile *)(& mac->mii_mgmt_ctrl));
  ldv_46968: 
#line 1265 
  ;
  
#line 1267 
  __const_udelay(214750UL);
  
#line 1268 
  delay += 1U;
  
#line 1269 
  mii_indicator = readl((void const volatile *)(& mac->mii_mgmt_indicator));
  
#line 1270 
  if ((mii_indicator & 1U) != 0U && delay <= 99U) 
#line 1272 
                                                  goto ldv_46968; else 
                                                                    
#line 1275 
                                                                    goto ldv_46969;
  ldv_46969: 
#line 1276 
  ;
  
#line 1273 
  if (delay == 100U) {
    u16 tmp;
    unsigned int tmp_0;
    
#line 1276 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"reg 0x%08x could not be written",(int)reg);
    
#line 1278 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"status is  0x%08x\n",mii_indicator);
    
#line 1280 
    tmp_0 = readl((void const volatile *)(& mac->mii_mgmt_cmd));
    
#line 1280 
    ;
    
#line 1280 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"command is  0x%08x\n",tmp_0);
    
#line 1283 
    et131x_mii_read(adapter,(unsigned char)((int)reg),& tmp);
    
#line 1285 
    status = -5;
  }
  else ;
  
#line 1288 
  writel(0U,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1293 
  writel(mii_addr,(void volatile *)(& mac->mii_mgmt_addr));
  
#line 1294 
  writel(mii_cmd,(void volatile *)(& mac->mii_mgmt_cmd));
  
#line 1296 
  return status;
}


#line 1299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_phy_read_mii_bit(struct et131x_adapter *adapter, u16 regnum, u16 bitnum, u8 *value)
{
  u16 reg;
  
#line 1305 
  u16 mask = (unsigned short)(1 << (int)bitnum);
  
#line 1307 
  et131x_mii_read(adapter,(unsigned char)((int)((unsigned char)regnum)),& reg);
  
#line 1309 
  *value = (unsigned char)(((int)reg & (int)mask) >> (int)bitnum);
  
#line 1310 
  return;
}


#line 1312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_config_flow_control(struct et131x_adapter *adapter)
{
  
#line 1314 
  struct phy_device *phydev = adapter->phydev;
  
#line 1316 
  if (phydev->duplex == 0) 
#line 1317 
                           adapter->flow = (unsigned char)3U;
  else {
    char remote_pause;
    char remote_async_pause;
    
#line 1321 
    et1310_phy_read_mii_bit(adapter,(unsigned short)5,(unsigned short)10,(u8 *)(& remote_pause));
    
#line 1322 
    et1310_phy_read_mii_bit(adapter,(unsigned short)5,(unsigned short)11,(u8 *)(& remote_async_pause));
    
#line 1324 
    if ((int)remote_pause != 0 && (int)remote_async_pause != 0) 
#line 1325 
                                                                adapter->flow = adapter->wanted_flow;
    else 
      
#line 1326 
      if ((int)remote_pause != 0 && (int)remote_async_pause == 0) 
        
#line 1327 
        if ((unsigned int)adapter->wanted_flow == 0U) 
#line 1328 
                                                      adapter->flow = (unsigned char)0U; else 
                                                                    
#line 1330 
                                                                    adapter->flow = (unsigned char)3U;
      else 
        
#line 1331 
        if ((int)remote_pause == 0 && (int)remote_async_pause == 0) 
#line 1332 
                                                                    adapter->flow = (unsigned char)3U;
        else 
          
#line 1334 
          if ((unsigned int)adapter->wanted_flow == 0U) 
#line 1335 
                                                        adapter->flow = (unsigned char)2U; else 
                                                                    
#line 1337 
                                                                    adapter->flow = (unsigned char)3U;
  }
  
#line 1339 
  return;
}


#line 1343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_update_macstat_host_counters(struct et131x_adapter *adapter)
{
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  unsigned int tmp_8;
  unsigned int tmp_9;
  unsigned int tmp_10;
  unsigned int tmp_11;
  unsigned int tmp_12;
  
#line 1345 
  struct ce_stats *stats = & adapter->stats;
  
#line 1346 
  struct macstat_regs *macstat = & (adapter->regs)->macstat;
  
#line 1349 
  tmp = readl((void const volatile *)(& macstat->tx_total_collisions));
  
#line 1349 
  stats->tx_collisions += tmp;
  
#line 1350 
  tmp_0 = readl((void const volatile *)(& macstat->tx_single_collisions));
  
#line 1350 
  stats->tx_first_collisions += tmp_0;
  
#line 1351 
  tmp_1 = readl((void const volatile *)(& macstat->tx_deferred));
  
#line 1351 
  stats->tx_deferred += tmp_1;
  
#line 1353 
  tmp_2 = readl((void const volatile *)(& macstat->tx_multiple_collisions));
  
#line 1353 
  stats->tx_excessive_collisions += tmp_2;
  
#line 1354 
  tmp_3 = readl((void const volatile *)(& macstat->tx_late_collisions));
  
#line 1354 
  stats->tx_late_collisions += tmp_3;
  
#line 1355 
  tmp_4 = readl((void const volatile *)(& macstat->tx_undersize_frames));
  
#line 1355 
  stats->tx_underflows += tmp_4;
  
#line 1356 
  tmp_5 = readl((void const volatile *)(& macstat->tx_oversize_frames));
  
#line 1356 
  stats->tx_max_pkt_errs += tmp_5;
  
#line 1358 
  tmp_6 = readl((void const volatile *)(& macstat->rx_align_errs));
  
#line 1358 
  stats->rx_align_errs += tmp_6;
  
#line 1359 
  tmp_7 = readl((void const volatile *)(& macstat->rx_code_errs));
  
#line 1359 
  stats->rx_crc_errs += tmp_7;
  
#line 1360 
  tmp_8 = readl((void const volatile *)(& macstat->rx_drops));
  
#line 1360 
  stats->rcvd_pkts_dropped += tmp_8;
  
#line 1361 
  tmp_9 = readl((void const volatile *)(& macstat->rx_oversize_packets));
  
#line 1361 
  stats->rx_overflows += tmp_9;
  
#line 1362 
  tmp_10 = readl((void const volatile *)(& macstat->rx_fcs_errs));
  
#line 1362 
  stats->rx_code_violations += tmp_10;
  
#line 1363 
  tmp_11 = readl((void const volatile *)(& macstat->rx_frame_len_errs));
  
#line 1363 
  stats->rx_length_errs += tmp_11;
  
#line 1364 
  tmp_12 = readl((void const volatile *)(& macstat->rx_fragment_packets));
  
#line 1364 
  stats->rx_other_errs += tmp_12;
  
#line 1365 
  return;
}


#line 1373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_handle_macstat_interrupt(struct et131x_adapter *adapter)
{
  u32 carry_reg1;
  u32 carry_reg2;
  
#line 1381 
  carry_reg1 = readl((void const volatile *)(& (adapter->regs)->macstat.carry_reg1));
  
#line 1382 
  carry_reg2 = readl((void const volatile *)(& (adapter->regs)->macstat.carry_reg2));
  
#line 1384 
  writel(carry_reg1,(void volatile *)(& (adapter->regs)->macstat.carry_reg1));
  
#line 1385 
  writel(carry_reg2,(void volatile *)(& (adapter->regs)->macstat.carry_reg2));
  
#line 1393 
  if ((carry_reg1 & 16384U) != 0U) 
#line 1394 
                                   adapter->stats.rx_code_violations += 65536U; else ;
  
#line 1395 
  if ((carry_reg1 & 256U) != 0U) 
#line 1396 
                                 adapter->stats.rx_align_errs += 4096U; else ;
  
#line 1397 
  if ((carry_reg1 & 128U) != 0U) 
#line 1398 
                                 adapter->stats.rx_length_errs += 65536U; else ;
  
#line 1399 
  if ((carry_reg1 & 4U) != 0U) 
#line 1400 
                               adapter->stats.rx_other_errs += 65536U; else ;
  
#line 1401 
  if ((carry_reg1 & 64U) != 0U) 
#line 1402 
                                adapter->stats.rx_crc_errs += 65536U; else ;
  
#line 1403 
  if ((carry_reg1 & 8U) != 0U) 
#line 1404 
                               adapter->stats.rx_overflows += 65536U; else ;
  
#line 1405 
  if ((carry_reg1 & 1U) != 0U) 
#line 1406 
                               adapter->stats.rcvd_pkts_dropped += 65536U; else ;
  
#line 1407 
  if ((carry_reg2 & 65536U) != 0U) 
#line 1408 
                                   adapter->stats.tx_max_pkt_errs += 4096U; else ;
  
#line 1409 
  if ((carry_reg2 & 32768U) != 0U) 
#line 1410 
                                   adapter->stats.tx_underflows += 4096U; else ;
  
#line 1411 
  if ((carry_reg2 & 64U) != 0U) 
#line 1412 
                                adapter->stats.tx_first_collisions += 4096U; else ;
  
#line 1413 
  if ((carry_reg2 & 256U) != 0U) 
#line 1414 
                                 adapter->stats.tx_deferred += 4096U; else ;
  
#line 1415 
  if ((carry_reg2 & 32U) != 0U) 
#line 1416 
                                adapter->stats.tx_excessive_collisions += 4096U; else ;
  
#line 1417 
  if ((carry_reg2 & 16U) != 0U) 
#line 1418 
                                adapter->stats.tx_late_collisions += 4096U; else ;
  
#line 1419 
  if ((carry_reg2 & 4U) != 0U) 
#line 1420 
                               adapter->stats.tx_collisions += 4096U; else ;
  
#line 1421 
  return;
}


#line 1423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_mdio_read(struct mii_bus *bus, int phy_addr, int reg)
{
  int __retres;
  u16 value;
  int ret;
  
#line 1425 
  struct net_device *netdev = (struct net_device *)bus->priv;
  
#line 1426 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1430 
  ret = et131x_phy_mii_read(adapter,(unsigned char)((int)((unsigned char)phy_addr)),(unsigned char)((int)((unsigned char)reg)),& value);
  
#line 1432 
  if (ret < 0) {
    
#line 1433 
    __retres = ret;
    
#line 1433 
    goto return_label;
  }
  else ;
  
#line 1435 
  __retres = (int)value;
  return_label: 
#line 1435 
                return __retres;
}


#line 1438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_mdio_write(struct mii_bus *bus, int phy_addr, int reg, u16 value)
{
  int tmp_0;
  
#line 1441 
  struct net_device *netdev = (struct net_device *)bus->priv;
  
#line 1442 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1444 
  tmp_0 = et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phy_addr)),(unsigned char)((int)((unsigned char)reg)),(unsigned short)((int)value));
  
#line 1444 
  return tmp_0;
}


#line 1456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_phy_power_switch(struct et131x_adapter *adapter, bool down_0)
{
  u16 data;
  
#line 1459 
  struct phy_device *phydev = adapter->phydev;
  
#line 1461 
  et131x_mii_read(adapter,(unsigned char)0,& data);
  
#line 1462 
  data = (unsigned short)((unsigned int)data & 63487U);
  
#line 1463 
  if ((int)down_0 != 0) 
#line 1464 
                        data = (unsigned short)((unsigned int)data | 2048U); else ;
  
#line 1465 
  et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)0,(unsigned short)((int)data));
  
#line 1466 
  return;
}


#line 1469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_xcvr_init(struct et131x_adapter *adapter)
{
  u16 lcr2;
  
#line 1472 
  struct phy_device *phydev = adapter->phydev;
  
#line 1482 
  if (((int)adapter->eeprom_data[1] & 4) == 0) {
    
#line 1483 
    et131x_mii_read(adapter,(unsigned char)28,& lcr2);
    
#line 1485 
    lcr2 = (unsigned short)((unsigned int)lcr2 & 255U);
    
#line 1486 
    lcr2 = (unsigned short)((unsigned int)lcr2 | 40960U);
    
#line 1488 
    if (((int)adapter->eeprom_data[1] & 8) == 0) 
#line 1489 
                                                 lcr2 = (unsigned short)((unsigned int)lcr2 | 768U); else 
                                                                    
#line 1491 
                                                                    lcr2 = (unsigned short)((unsigned int)lcr2 | 1024U);
    
#line 1493 
    et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)28,(unsigned short)((int)lcr2));
  }
  else ;
  
#line 1495 
  return;
}


#line 1498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_configure_global_regs(struct et131x_adapter *adapter)
{
  
#line 1500 
  struct global_regs *regs = & (adapter->regs)->global;
  
#line 1502 
  writel(0U,(void volatile *)(& regs->rxq_start_addr));
  
#line 1503 
  writel(1023U,(void volatile *)(& regs->txq_end_addr));
  
#line 1505 
  if (adapter->registry_jumbo_packet <= 2047U) {
    
#line 1511 
    writel(700U,(void volatile *)(& regs->rxq_end_addr));
    
#line 1512 
    writel(701U,(void volatile *)(& regs->txq_start_addr));
  }
  else 
    
#line 1513 
    if (adapter->registry_jumbo_packet <= 8191U) {
      
#line 1515 
      writel(511U,(void volatile *)(& regs->rxq_end_addr));
      
#line 1516 
      writel(512U,(void volatile *)(& regs->txq_start_addr));
    }
    else {
      
#line 1523 
      writel(435U,(void volatile *)(& regs->rxq_end_addr));
      
#line 1524 
      writel(436U,(void volatile *)(& regs->txq_start_addr));
    }
  
#line 1528 
  writel(0U,(void volatile *)(& regs->loopback));
  
#line 1530 
  writel(0U,(void volatile *)(& regs->msi_config));
  
#line 1535 
  writel(0U,(void volatile *)(& regs->watchdog_timer));
  
#line 1536 
  return;
}


#line 1539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_config_rx_dma_regs(struct et131x_adapter *adapter)
{
  struct fbr_desc *fbr_entry;
  u32 entry;
  u32 psr_num_des;
  unsigned long flags;
  u8 id;
  unsigned int tmp;
  
#line 1541 
  struct rxdma_regs *rx_dma = & (adapter->regs)->rxdma;
  
#line 1542 
  struct rx_ring *rx_local = & adapter->rx_ring;
  
#line 1549 
  et131x_rx_dma_disable(adapter);
  
#line 1552 
  writel((unsigned int)(rx_local->rx_status_bus >> 32),(void volatile *)(& rx_dma->dma_wb_base_hi));
  
#line 1553 
  writel((unsigned int)rx_local->rx_status_bus,(void volatile *)(& rx_dma->dma_wb_base_lo));
  
#line 1555 
  memset((void *)rx_local->rx_status_block,0,8UL);
  
#line 1558 
  writel((unsigned int)(rx_local->ps_ring_physaddr >> 32),(void volatile *)(& rx_dma->psr_base_hi));
  
#line 1559 
  writel((unsigned int)rx_local->ps_ring_physaddr,(void volatile *)(& rx_dma->psr_base_lo));
  
#line 1560 
  writel(rx_local->psr_entries + 4294967295U,(void volatile *)(& rx_dma->psr_num_des));
  
#line 1561 
  writel(0U,(void volatile *)(& rx_dma->psr_full_offset));
  
#line 1563 
  tmp = readl((void const volatile *)(& rx_dma->psr_num_des));
  
#line 1563 
  psr_num_des = tmp & 4095U;
  
#line 1564 
  writel((psr_num_des * 15U) / 100U,(void volatile *)(& rx_dma->psr_min_des));
  
#line 1567 
  ldv___ldv_spin_lock_72(& adapter->rcv_lock);
  
#line 1570 
  rx_local->local_psr_full = 0U;
  
#line 1572 
  id = (unsigned char)0U;
  
#line 1572 
  goto ldv_47047;
  ldv_47046: 
#line 1573 
  ;
  {
    u32 *num_des;
    u32 *full_offset;
    u32 *min_des;
    u32 *base_hi;
    u32 *base_lo;
    
#line 1578 
    struct fbr_lookup *fbr = rx_local->fbr[(int)id];
    
#line 1580 
    if ((unsigned int)id == 0U) {
      
#line 1581 
      num_des = & rx_dma->fbr0_num_des;
      
#line 1582 
      full_offset = & rx_dma->fbr0_full_offset;
      
#line 1583 
      min_des = & rx_dma->fbr0_min_des;
      
#line 1584 
      base_hi = & rx_dma->fbr0_base_hi;
      
#line 1585 
      base_lo = & rx_dma->fbr0_base_lo;
    }
    else {
      
#line 1587 
      num_des = & rx_dma->fbr1_num_des;
      
#line 1588 
      full_offset = & rx_dma->fbr1_full_offset;
      
#line 1589 
      min_des = & rx_dma->fbr1_min_des;
      
#line 1590 
      base_hi = & rx_dma->fbr1_base_hi;
      
#line 1591 
      base_lo = & rx_dma->fbr1_base_lo;
    }
    
#line 1595 
    fbr_entry = (struct fbr_desc *)fbr->ring_virtaddr;
    
#line 1596 
    entry = 0U;
    
#line 1596 
    goto ldv_47044;
    ldv_47043: 
#line 1597 
    ;
    
#line 1597 
    fbr_entry->addr_hi = fbr->bus_high[entry];
    
#line 1598 
    fbr_entry->addr_lo = fbr->bus_low[entry];
    
#line 1599 
    fbr_entry->word2 = entry;
    
#line 1600 
    fbr_entry += 1;
    
#line 1596 
    entry += 1U;
    ldv_47044: 
#line 1597 
    ;
    
#line 1596 
    if (fbr->num_entries > entry) 
#line 1598 
                                  goto ldv_47043; else 
#line 1601 
                                                       goto ldv_47045;
    ldv_47045: 
#line 1602 
    ;
    
#line 1604 
    writel((unsigned int)(fbr->ring_physaddr >> 32),(void volatile *)base_hi);
    
#line 1605 
    writel((unsigned int)fbr->ring_physaddr,(void volatile *)base_lo);
    
#line 1606 
    writel(fbr->num_entries + 4294967295U,(void volatile *)num_des);
    
#line 1607 
    writel(1024U,(void volatile *)full_offset);
    
#line 1612 
    fbr->local_full = 1024U;
    
#line 1613 
    writel((fbr->num_entries * 15U) / 100U + 4294967295U,(void volatile *)min_des);
  }
  
#line 1572 
  id = (u8)((int)id + 1);
  ldv_47047: 
#line 1573 
  ;
  
#line 1572 
  if ((unsigned int)id <= 1U) 
#line 1574 
                              goto ldv_47046; else 
#line 1577 
                                                   goto ldv_47048;
  ldv_47048: 
#line 1578 
  ;
  
#line 1622 
  writel(4U,(void volatile *)(& rx_dma->num_pkt_done));
  
#line 1629 
  writel(10U,(void volatile *)(& rx_dma->max_pkt_time));
  
#line 1631 
  ldv_spin_unlock_irqrestore_73(& adapter->rcv_lock,flags);
  
#line 1632 
  return;
}


#line 1639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_config_tx_dma_regs(struct et131x_adapter *adapter)
{
  
#line 1641 
  struct txdma_regs *txdma = & (adapter->regs)->txdma;
  
#line 1642 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 1645 
  writel((unsigned int)(tx_ring->tx_desc_ring_pa >> 32),(void volatile *)(& txdma->pr_base_hi));
  
#line 1646 
  writel((unsigned int)tx_ring->tx_desc_ring_pa,(void volatile *)(& txdma->pr_base_lo));
  
#line 1649 
  writel(511U,(void volatile *)(& txdma->pr_num_des));
  
#line 1652 
  writel((unsigned int)(tx_ring->tx_status_pa >> 32),(void volatile *)(& txdma->dma_wb_base_hi));
  
#line 1653 
  writel((unsigned int)tx_ring->tx_status_pa,(void volatile *)(& txdma->dma_wb_base_lo));
  
#line 1655 
  *(tx_ring->tx_status) = 0U;
  
#line 1657 
  writel(0U,(void volatile *)(& txdma->service_request));
  
#line 1658 
  tx_ring->send_idx = 0U;
  
#line 1659 
  return;
}


#line 1662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_adapter_setup(struct et131x_adapter *adapter)
{
  
#line 1664 
  et131x_configure_global_regs(adapter);
  
#line 1665 
  et1310_config_mac_regs1(adapter);
  
#line 1669 
  writel(1U,(void volatile *)(& (adapter->regs)->mmc.mmc_ctrl));
  
#line 1671 
  et1310_config_rxmac_regs(adapter);
  
#line 1672 
  et1310_config_txmac_regs(adapter);
  
#line 1674 
  et131x_config_rx_dma_regs(adapter);
  
#line 1675 
  et131x_config_tx_dma_regs(adapter);
  
#line 1677 
  et1310_config_macstat_regs(adapter);
  
#line 1679 
  et1310_phy_power_switch(adapter,(_Bool)0);
  
#line 1680 
  et131x_xcvr_init(adapter);
  
#line 1681 
  return;
}


#line 1684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_soft_reset(struct et131x_adapter *adapter)
{
  u32 reg;
  
#line 1689 
  reg = 3222208512U;
  
#line 1692 
  writel(reg,(void volatile *)(& (adapter->regs)->mac.cfg1));
  
#line 1694 
  reg = 127U;
  
#line 1695 
  writel(reg,(void volatile *)(& (adapter->regs)->global.sw_reset));
  
#line 1697 
  reg = 983040U;
  
#line 1699 
  writel(reg,(void volatile *)(& (adapter->regs)->mac.cfg1));
  
#line 1700 
  writel(0U,(void volatile *)(& (adapter->regs)->mac.cfg1));
  
#line 1701 
  return;
}


#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_enable_interrupts(struct et131x_adapter *adapter)
{
  u32 mask;
  
#line 1707 
  if ((unsigned int)adapter->flow <= 1U) 
#line 1708 
                                         mask = 4294885143U; else 
#line 1710 
                                                                  mask = 4294885335U;
  
#line 1712 
  writel(mask,(void volatile *)(& (adapter->regs)->global.int_mask));
  
#line 1713 
  return;
}


#line 1715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_disable_interrupts(struct et131x_adapter *adapter)
{
  
#line 1717 
  writel(4294967295U,(void volatile *)(& (adapter->regs)->global.int_mask));
  
#line 1718 
  return;
}


#line 1720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_tx_dma_disable(struct et131x_adapter *adapter)
{
  
#line 1723 
  writel(257U,(void volatile *)(& (adapter->regs)->txdma.csr));
  
#line 1725 
  return;
}


#line 1727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_enable_txrx(struct net_device *netdev)
{
  
#line 1729 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1731 
  et131x_rx_dma_enable(adapter);
  
#line 1732 
  et131x_tx_dma_enable(adapter);
  
#line 1734 
  if ((adapter->flags & 8U) != 0U) 
#line 1735 
                                   et131x_enable_interrupts(adapter); else ;
  
#line 1737 
  netif_start_queue(netdev);
  
#line 1738 
  return;
}


#line 1740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_disable_txrx(struct net_device *netdev)
{
  
#line 1742 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1744 
  netif_start_queue(netdev);
  
#line 1746 
  et131x_rx_dma_disable(adapter);
  
#line 1747 
  et131x_tx_dma_disable(adapter);
  
#line 1749 
  et131x_disable_interrupts(adapter);
  
#line 1750 
  return;
}


#line 1752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_init_send(struct et131x_adapter *adapter)
{
  int i;
  
#line 1755 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 1756 
  struct tcb *tcb = tx_ring->tcb_ring;
  
#line 1758 
  tx_ring->tcb_qhead = tcb;
  
#line 1760 
  memset((void *)tcb,0,2048UL);
  
#line 1762 
  i = 0;
  
#line 1762 
  goto ldv_47086;
  ldv_47085: 
#line 1763 
  ;
  
#line 1763 
  tcb->next = tcb + 1U;
  
#line 1764 
  tcb += 1;
  
#line 1762 
  i += 1;
  ldv_47086: 
#line 1763 
  ;
  
#line 1762 
  if (i <= 63) 
#line 1764 
               goto ldv_47085; else 
#line 1767 
                                    goto ldv_47087;
  ldv_47087: 
#line 1768 
  ;
  
#line 1767 
  tcb -= 1;
  
#line 1768 
  tx_ring->tcb_qtail = tcb;
  
#line 1769 
  tcb->next = (struct tcb *)0;
  
#line 1771 
  tx_ring->send_head = (struct tcb *)0;
  
#line 1772 
  tx_ring->send_tail = (struct tcb *)0;
  
#line 1773 
  return;
}


#line 1785  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_enable_phy_coma(struct et131x_adapter *adapter)
{
  
#line 1787 
  u32 pmcsr = readl((void const volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1790 
  adapter->flags |= 2097152U;
  
#line 1793 
  et131x_disable_txrx(adapter->netdev);
  
#line 1796 
  pmcsr &= 4294967239U;
  
#line 1797 
  writel(pmcsr,(void volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1800 
  pmcsr |= 64U;
  
#line 1801 
  writel(pmcsr,(void volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1802 
  return;
}


#line 1804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et1310_disable_phy_coma(struct et131x_adapter *adapter)
{
  u32 pmcsr;
  
#line 1808 
  pmcsr = readl((void const volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1811 
  pmcsr |= 56U;
  
#line 1812 
  pmcsr &= 4294967231U;
  
#line 1813 
  writel(pmcsr,(void volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 1820 
  et131x_init_send(adapter);
  
#line 1826 
  et131x_soft_reset(adapter);
  
#line 1828 
  et131x_adapter_setup(adapter);
  
#line 1831 
  adapter->flags &= 4292870143U;
  
#line 1833 
  et131x_enable_txrx(adapter->netdev);
  
#line 1834 
  return;
}


#line 1836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
__inline static u32 bump_free_buff_ring(u32 *free_buff_ring, u32 limit)
{
  
#line 1838 
  u32 tmp_free_buff_ring = *free_buff_ring;
  
#line 1840 
  tmp_free_buff_ring += 1U;
  
#line 1846 
  if ((tmp_free_buff_ring & 1023U) > limit) {
    
#line 1847 
    tmp_free_buff_ring &= 4294966272U;
    
#line 1848 
    tmp_free_buff_ring ^= 1024U;
  }
  else ;
  
#line 1851 
  tmp_free_buff_ring &= 2047U;
  
#line 1852 
  *free_buff_ring = tmp_free_buff_ring;
  
#line 1853 
  return tmp_free_buff_ring;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_rx_dma_memory_alloc(struct et131x_adapter *adapter)
{
  int __retres;
  u8 id;
  u32 i;
  u32 j;
  u32 bufsize;
  u32 psr_size;
  u32 fbr_chunksize;
  struct fbr_lookup *fbr;
  
#line 1868 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  
#line 1872 
  rx_ring->fbr[0] = (struct fbr_lookup *)kzalloc(16928UL,208U);
  
#line 1873 
  if (rx_ring->fbr[0] == (struct fbr_lookup *)0) {
    
#line 1874 
    __retres = -12;
    
#line 1874 
    goto return_label;
  }
  else ;
  
#line 1875 
  rx_ring->fbr[1] = (struct fbr_lookup *)kzalloc(16928UL,208U);
  
#line 1876 
  if (rx_ring->fbr[1] == (struct fbr_lookup *)0) {
    
#line 1877 
    __retres = -12;
    
#line 1877 
    goto return_label;
  }
  else ;
  
#line 1896 
  if (adapter->registry_jumbo_packet <= 2047U) {
    
#line 1897 
    (rx_ring->fbr[0])->buffsize = 256ULL;
    
#line 1898 
    (rx_ring->fbr[0])->num_entries = 512U;
    
#line 1899 
    (rx_ring->fbr[1])->buffsize = 2048ULL;
    
#line 1900 
    (rx_ring->fbr[1])->num_entries = 512U;
  }
  else 
    
#line 1901 
    if (adapter->registry_jumbo_packet <= 4095U) {
      
#line 1902 
      (rx_ring->fbr[0])->buffsize = 512ULL;
      
#line 1903 
      (rx_ring->fbr[0])->num_entries = 1024U;
      
#line 1904 
      (rx_ring->fbr[1])->buffsize = 4096ULL;
      
#line 1905 
      (rx_ring->fbr[1])->num_entries = 512U;
    }
    else {
      
#line 1907 
      (rx_ring->fbr[0])->buffsize = 1024ULL;
      
#line 1908 
      (rx_ring->fbr[0])->num_entries = 768U;
      
#line 1909 
      (rx_ring->fbr[1])->buffsize = 16384ULL;
      
#line 1910 
      (rx_ring->fbr[1])->num_entries = 128U;
    }
  
#line 1913 
  rx_ring->psr_entries = (rx_ring->fbr[0])->num_entries + (rx_ring->fbr[1])->num_entries;
  
#line 1916 
  id = (unsigned char)0U;
  
#line 1916 
  goto ldv_47113;
  ldv_47112: 
#line 1917 
  ;
  
#line 1917 
  fbr = rx_ring->fbr[(int)id];
  
#line 1919 
  bufsize = fbr->num_entries * 12U;
  
#line 1920 
  fbr->ring_virtaddr = dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)bufsize,& fbr->ring_physaddr,208U,(struct dma_attrs *)0);
  
#line 1924 
  if (fbr->ring_virtaddr == (void *)0) {
    
#line 1925 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot alloc memory for Free Buffer Ring %d\n",(int)id);
    
#line 1928 
    __retres = -12;
    
#line 1928 
    goto return_label;
  }
  else ;
  
#line 1916 
  id = (u8)((int)id + 1);
  ldv_47113: 
#line 1917 
  ;
  
#line 1916 
  if ((unsigned int)id <= 1U) 
#line 1918 
                              goto ldv_47112; else 
#line 1921 
                                                   goto ldv_47114;
  ldv_47114: 
#line 1922 
  ;
  
#line 1932 
  id = (unsigned char)0U;
  
#line 1932 
  goto ldv_47124;
  ldv_47123: 
#line 1933 
  ;
  
#line 1933 
  fbr = rx_ring->fbr[(int)id];
  
#line 1934 
  fbr_chunksize = (unsigned int)fbr->buffsize * 32U;
  
#line 1936 
  i = 0U;
  
#line 1936 
  goto ldv_47121;
  ldv_47120: 
#line 1937 
  ;
  {
    dma_addr_t fbr_physaddr;
    
#line 1939 
    fbr->mem_virtaddrs[i] = dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)fbr_chunksize,& fbr->mem_physaddrs[i],208U,(struct dma_attrs *)0);
    
#line 1944 
    if (fbr->mem_virtaddrs[i] == (void *)0) {
      
#line 1945 
      dev_err((struct device const *)(& (adapter->pdev)->dev),"Could not alloc memory\n");
      
#line 1947 
      __retres = -12;
      
#line 1947 
      goto return_label;
    }
    else ;
    
#line 1951 
    fbr_physaddr = fbr->mem_physaddrs[i];
    
#line 1953 
    j = 0U;
    
#line 1953 
    goto ldv_47118;
    ldv_47117: 
#line 1954 
    ;
    {
      
#line 1954 
      u32 k = i * 32U + j;
      
#line 1959 
      fbr->virt[k] = fbr->mem_virtaddrs[i] + (unsigned long long)j * fbr->buffsize;
      
#line 1965 
      fbr->bus_high[k] = (unsigned int)(fbr_physaddr >> 32);
      
#line 1966 
      fbr->bus_low[k] = (unsigned int)fbr_physaddr;
      
#line 1967 
      fbr_physaddr = fbr->buffsize + fbr_physaddr;
    }
    
#line 1953 
    j += 1U;
    ldv_47118: 
#line 1954 
    ;
    
#line 1953 
    if (j <= 31U) 
#line 1955 
                  goto ldv_47117; else 
#line 1958 
                                       goto ldv_47119;
    ldv_47119: 
#line 1959 
    ;
  }
  
#line 1936 
  i += 1U;
  ldv_47121: 
#line 1937 
  ;
  
#line 1936 
  if (fbr->num_entries / 32U > i) 
#line 1938 
                                  goto ldv_47120; else 
#line 1941 
                                                       goto ldv_47122;
  ldv_47122: 
#line 1942 
  ;
  
#line 1932 
  id = (u8)((int)id + 1);
  ldv_47124: 
#line 1933 
  ;
  
#line 1932 
  if ((unsigned int)id <= 1U) 
#line 1934 
                              goto ldv_47123; else 
#line 1937 
                                                   goto ldv_47125;
  ldv_47125: 
#line 1938 
  ;
  
#line 1973 
  psr_size = rx_ring->psr_entries * 8U;
  
#line 1975 
  rx_ring->ps_ring_virtaddr = dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)psr_size,& rx_ring->ps_ring_physaddr,208U,(struct dma_attrs *)0);
  
#line 1980 
  if (rx_ring->ps_ring_virtaddr == (void *)0) {
    
#line 1981 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot alloc memory for Packet Status Ring\n");
    
#line 1983 
    __retres = -12;
    
#line 1983 
    goto return_label;
  }
  else ;
  
#line 1987 
  rx_ring->rx_status_block = (struct rx_status_block *)dma_alloc_attrs(& (adapter->pdev)->dev,8UL,& rx_ring->rx_status_bus,208U,(struct dma_attrs *)0);
  
#line 1991 
  if (rx_ring->rx_status_block == (struct rx_status_block *)0) {
    
#line 1992 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot alloc memory for Status Block\n");
    
#line 1994 
    __retres = -12;
    
#line 1994 
    goto return_label;
  }
  else ;
  
#line 1996 
  rx_ring->num_rfd = 1024U;
  
#line 2001 
  INIT_LIST_HEAD(& rx_ring->recv_list);
  
#line 2002 
  __retres = 0;
  return_label: 
#line 2002 
                return __retres;
}


#line 2005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_rx_dma_memory_free(struct et131x_adapter *adapter)
{
  u8 id;
  u32 ii;
  u32 bufsize;
  u32 psr_size;
  struct rfd *rfd;
  struct fbr_lookup *fbr;
  struct rfd *tmp_0;
  int tmp_0_0;
  
#line 2012 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  {
    
#line 2016 
    int __ret_warn_on = rx_ring->num_ready_recv != rx_ring->num_rfd;
    
#line 2016 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2016 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2016); else ;
    
#line 2016 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 2018 
  goto ldv_47141;
  ldv_47140: 
#line 2019 
  ;
  {
    
#line 2019 
    struct list_head const *__mptr = (struct list_head const *)rx_ring->recv_list.next;
    
#line 2019 
    tmp_0 = (struct rfd *)__mptr;
  }
  
#line 2019 
  rfd = tmp_0;
  
#line 2022 
  list_del(& rfd->list_node);
  
#line 2023 
  rfd->skb = (struct sk_buff *)0;
  
#line 2024 
  kfree((void const *)rfd);
  ldv_47141: 
#line 2025 
  ;
  
#line 2018 
  tmp_0_0 = list_empty((struct list_head const *)(& rx_ring->recv_list));
  
#line 2018 
  if (tmp_0_0 == 0) 
#line 2020 
                    goto ldv_47140; else 
#line 2023 
                                         goto ldv_47142;
  ldv_47142: 
#line 2024 
  ;
  
#line 2028 
  id = (unsigned char)0U;
  
#line 2028 
  goto ldv_47148;
  ldv_47147: 
#line 2029 
  ;
  
#line 2029 
  fbr = rx_ring->fbr[(int)id];
  
#line 2031 
  if (fbr == (struct fbr_lookup *)0 || fbr->ring_virtaddr == (void *)0) 
    
#line 2032 
    goto ldv_47143; else ;
  
#line 2035 
  ii = 0U;
  
#line 2035 
  goto ldv_47145;
  ldv_47144: 
#line 2036 
  ;
  
#line 2036 
  if (fbr->mem_virtaddrs[ii] != (void *)0) {
    
#line 2037 
    bufsize = (unsigned int)fbr->buffsize * 32U;
    
#line 2039 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)bufsize,fbr->mem_virtaddrs[ii],fbr->mem_physaddrs[ii],(struct dma_attrs *)0);
    
#line 2044 
    fbr->mem_virtaddrs[ii] = (void *)0;
  }
  else ;
  
#line 2035 
  ii += 1U;
  ldv_47145: 
#line 2036 
  ;
  
#line 2035 
  if (fbr->num_entries / 32U > ii) 
#line 2037 
                                   goto ldv_47144; else 
#line 2040 
                                                        goto ldv_47146;
  ldv_47146: 
#line 2041 
  ;
  
#line 2048 
  bufsize = fbr->num_entries * 12U;
  
#line 2050 
  dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)bufsize,fbr->ring_virtaddr,fbr->ring_physaddr,(struct dma_attrs *)0);
  
#line 2055 
  fbr->ring_virtaddr = (void *)0;
  ldv_47143: 
#line 2056 
  ;
  
#line 2028 
  id = (u8)((int)id + 1);
  ldv_47148: 
#line 2029 
  ;
  
#line 2028 
  if ((unsigned int)id <= 1U) 
#line 2030 
                              goto ldv_47147; else 
#line 2033 
                                                   goto ldv_47149;
  ldv_47149: 
#line 2034 
  ;
  
#line 2059 
  if (rx_ring->ps_ring_virtaddr != (void *)0) {
    
#line 2060 
    psr_size = rx_ring->psr_entries * 8U;
    
#line 2062 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)psr_size,rx_ring->ps_ring_virtaddr,rx_ring->ps_ring_physaddr,(struct dma_attrs *)0);
    
#line 2066 
    rx_ring->ps_ring_virtaddr = (void *)0;
  }
  else ;
  
#line 2070 
  if (rx_ring->rx_status_block != (struct rx_status_block *)0) {
    
#line 2071 
    dma_free_attrs(& (adapter->pdev)->dev,8UL,(void *)rx_ring->rx_status_block,rx_ring->rx_status_bus,(struct dma_attrs *)0);
    
#line 2075 
    rx_ring->rx_status_block = (struct rx_status_block *)0;
  }
  else ;
  
#line 2079 
  kfree((void const *)rx_ring->fbr[0]);
  
#line 2080 
  kfree((void const *)rx_ring->fbr[1]);
  
#line 2083 
  rx_ring->num_ready_recv = 0U;
  
#line 2084 
  return;
}


#line 2087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_init_recv(struct et131x_adapter *adapter)
{
  int __retres;
  struct rfd *rfd;
  u32 rfdct;
  
#line 2091 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  
#line 2094 
  rfdct = 0U;
  
#line 2094 
  goto ldv_47157;
  ldv_47156: 
#line 2095 
  ;
  
#line 2095 
  rfd = (struct rfd *)kzalloc(32UL,33U);
  
#line 2096 
  if (rfd == (struct rfd *)0) {
    
#line 2097 
    __retres = -12;
    
#line 2097 
    goto return_label;
  }
  else ;
  
#line 2099 
  rfd->skb = (struct sk_buff *)0;
  
#line 2102 
  list_add_tail(& rfd->list_node,& rx_ring->recv_list);
  
#line 2105 
  rx_ring->num_ready_recv += 1U;
  
#line 2094 
  rfdct += 1U;
  ldv_47157: 
#line 2095 
  ;
  
#line 2094 
  if (rx_ring->num_rfd > rfdct) 
#line 2096 
                                goto ldv_47156; else 
#line 2099 
                                                     goto ldv_47158;
  ldv_47158: 
#line 2100 
  ;
  
#line 2108 
  __retres = 0;
  return_label: 
#line 2108 
                return __retres;
}


#line 2112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_set_rx_dma_timer(struct et131x_adapter *adapter)
{
  
#line 2114 
  struct phy_device *phydev = adapter->phydev;
  
#line 2119 
  if (phydev->speed == 100 || phydev->speed == 10) {
    
#line 2120 
    writel(0U,(void volatile *)(& (adapter->regs)->rxdma.max_pkt_time));
    
#line 2121 
    writel(1U,(void volatile *)(& (adapter->regs)->rxdma.num_pkt_done));
  }
  else ;
  
#line 2123 
  return;
}


#line 2126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void nic_return_rfd(struct et131x_adapter *adapter, struct rfd *rfd)
{
  unsigned long flags;
  
#line 2128 
  struct rx_ring *rx_local = & adapter->rx_ring;
  
#line 2129 
  struct rxdma_regs *rx_dma = & (adapter->regs)->rxdma;
  
#line 2130 
  u16 buff_index = rfd->bufferindex;
  
#line 2131 
  u8 ring_index = rfd->ringindex;
  
#line 2133 
  struct fbr_lookup *fbr = rx_local->fbr[(int)ring_index];
  
#line 2138 
  if ((unsigned int)buff_index < fbr->num_entries) {
    u32 free_buff_ring;
    u32 *offset;
    struct fbr_desc *next;
    
#line 2143 
    if ((unsigned int)ring_index == 0U) 
#line 2144 
                                        offset = & rx_dma->fbr0_full_offset; else 
                                                                    
#line 2146 
                                                                    offset = & rx_dma->fbr1_full_offset;
    
#line 2148 
    next = (struct fbr_desc *)fbr->ring_virtaddr + (fbr->local_full & 1023U);
    
#line 2155 
    next->addr_hi = fbr->bus_high[(int)buff_index];
    
#line 2156 
    next->addr_lo = fbr->bus_low[(int)buff_index];
    
#line 2157 
    next->word2 = (unsigned int)buff_index;
    
#line 2159 
    free_buff_ring = bump_free_buff_ring(& fbr->local_full,fbr->num_entries + 4294967295U);
    
#line 2161 
    writel(free_buff_ring,(void volatile *)offset);
  }
  else 
#line 2163 
       dev_err((struct device const *)(& (adapter->pdev)->dev),"%s illegal Buffer Index returned\n","nic_return_rfd");
  
#line 2170 
  ldv___ldv_spin_lock_74(& adapter->rcv_lock);
  
#line 2171 
  list_add_tail(& rfd->list_node,& rx_local->recv_list);
  
#line 2172 
  rx_local->num_ready_recv += 1U;
  
#line 2173 
  ldv_spin_unlock_irqrestore_75(& adapter->rcv_lock,flags);
  {
    
#line 2175 
    int __ret_warn_on = rx_local->num_ready_recv > rx_local->num_rfd;
    
#line 2175 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2175 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2175); else ;
    
#line 2175 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 2177 
  return;
}


#line 2185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct rfd *nic_rx_pkts(struct et131x_adapter *adapter)
{
  struct rfd *__retres;
  struct rx_status_block *status;
  struct pkt_stat_desc *psr;
  struct rfd *rfd;
  unsigned long flags;
  struct list_head *element;
  u8 ring_index;
  u16 buff_index;
  u32 len;
  u32 word0;
  u32 word1;
  struct sk_buff *skb;
  struct fbr_lookup *fbr;
  struct rfd *tmp;
  unsigned char *tmp_0;
  
#line 2187 
  struct rx_ring *rx_local = & adapter->rx_ring;
  
#line 2205 
  status = rx_local->rx_status_block;
  
#line 2206 
  word1 = status->word1 >> 16;
  
#line 2209 
  if (((rx_local->local_psr_full ^ word1) & 8191U) == 0U) {
    
#line 2210 
    __retres = (struct rfd *)0;
    
#line 2210 
    goto return_label;
  }
  else ;
  
#line 2213 
  psr = (struct pkt_stat_desc *)rx_local->ps_ring_virtaddr + (rx_local->local_psr_full & 4095U);
  
#line 2219 
  len = psr->word1 & 65535U;
  
#line 2220 
  ring_index = (unsigned char)((unsigned int)((unsigned char)(psr->word1 >> 26)) & 3U);
  
#line 2221 
  fbr = rx_local->fbr[(int)ring_index];
  
#line 2222 
  buff_index = (unsigned short)((unsigned int)((unsigned short)(psr->word1 >> 16)) & 1023U);
  
#line 2223 
  word0 = psr->word0;
  
#line 2227 
  add_12bit(& rx_local->local_psr_full,1);
  
#line 2228 
  if ((rx_local->local_psr_full & 4095U) > rx_local->psr_entries + 4294967295U) {
    
#line 2230 
    rx_local->local_psr_full &= 4294963200U;
    
#line 2231 
    rx_local->local_psr_full ^= 4096U;
  }
  else ;
  
#line 2234 
  writel(rx_local->local_psr_full,(void volatile *)(& (adapter->regs)->rxdma.psr_full_offset));
  
#line 2236 
  if ((unsigned int)ring_index > 1U || (unsigned int)buff_index > fbr->num_entries + 4294967295U) {
    
#line 2238 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"NICRxPkts PSR Entry %d indicates length of %d and/or bad bi(%d)\n",rx_local->local_psr_full & 4095U,len,(int)buff_index);
    
#line 2241 
    __retres = (struct rfd *)0;
    
#line 2241 
    goto return_label;
  }
  else ;
  
#line 2245 
  ldv___ldv_spin_lock_76(& adapter->rcv_lock);
  
#line 2247 
  element = rx_local->recv_list.next;
  {
    
#line 2248 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 2248 
    tmp = (struct rfd *)__mptr;
  }
  
#line 2248 
  rfd = tmp;
  
#line 2250 
  if (rfd == (struct rfd *)0) {
    
#line 2251 
    ldv_spin_unlock_irqrestore_77(& adapter->rcv_lock,flags);
    
#line 2252 
    __retres = (struct rfd *)0;
    
#line 2252 
    goto return_label;
  }
  else ;
  
#line 2255 
  list_del(& rfd->list_node);
  
#line 2256 
  rx_local->num_ready_recv -= 1U;
  
#line 2258 
  ldv_spin_unlock_irqrestore_78(& adapter->rcv_lock,flags);
  
#line 2260 
  rfd->bufferindex = buff_index;
  
#line 2261 
  rfd->ringindex = ring_index;
  
#line 2267 
  if (len <= 63U) {
    
#line 2268 
    adapter->stats.rx_other_errs += 1U;
    
#line 2269 
    rfd->len = 0U;
    
#line 2270 
    goto out;
  }
  else ;
  
#line 2273 
  if ((word0 & 16777216U) != 0U && (word0 & 33554432U) == 0U) 
#line 2274 
                                                              adapter->stats.multicast_pkts_rcvd += 1U; else ;
  
#line 2276 
  rfd->len = len;
  
#line 2278 
  skb = dev_alloc_skb(rfd->len + 2U);
  
#line 2279 
  if (skb == (struct sk_buff *)0) {
    
#line 2280 
    __retres = (struct rfd *)0;
    
#line 2280 
    goto return_label;
  }
  else ;
  
#line 2282 
  (adapter->netdev)->stats.rx_bytes += (unsigned long)rfd->len;
  
#line 2284 
  ;
  
#line 2284 
  ;
  
#line 2284 
  tmp_0 = skb_put(skb,rfd->len);
  
#line 2284 
  memcpy((void *)tmp_0,(void const *)fbr->virt[(int)buff_index],(unsigned long)rfd->len);
  
#line 2286 
  skb->protocol = eth_type_trans(skb,adapter->netdev);
  
#line 2287 
  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
  
#line 2288 
  netif_receive_skb(skb);
  out: 
#line 2290 
  ;
  
#line 2291 
  nic_return_rfd(adapter,rfd);
  
#line 2292 
  __retres = rfd;
  return_label: 
#line 2292 
                return __retres;
}


#line 2295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_handle_recv_pkts(struct et131x_adapter *adapter, int budget)
{
  int tmp_0;
  
#line 2297 
  struct rfd *rfd = (struct rfd *)0;
  
#line 2298 
  int count = 0;
  
#line 2299 
  int limit = budget;
  
#line 2300 
  bool done = (_Bool)1;
  
#line 2301 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  
#line 2303 
  if (budget > 256) 
#line 2304 
                    limit = 256; else ;
  
#line 2307 
  goto ldv_47210;
  ldv_47211: 
#line 2308 
  ;
  
#line 2308 
  tmp_0 = list_empty((struct list_head const *)(& rx_ring->recv_list));
  
#line 2308 
  if (tmp_0 != 0) {
    {
      
#line 2309 
      int __ret_warn_on = rx_ring->num_ready_recv != 0U;
      
#line 2309 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 2309 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2309); else ;
      
#line 2309 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 2310 
    done = (_Bool)0;
    
#line 2311 
    goto ldv_47209;
  }
  else ;
  
#line 2314 
  rfd = nic_rx_pkts(adapter);
  
#line 2316 
  if (rfd == (struct rfd *)0) 
#line 2317 
                              goto ldv_47209; else ;
  
#line 2324 
  if (adapter->packet_filter == 0U) 
#line 2324 
                                    goto _LOR;
  else {
    int tmp_1;
    bool tmp_0_0;
    
#line 2325 
    tmp_0_0 = netif_carrier_ok((struct net_device const *)adapter->netdev);
    
#line 2325 
    if (tmp_0_0) 
#line 2325 
                 tmp_1 = 0; else 
#line 2325 
                                 tmp_1 = 1;
    
#line 2325 
    if (tmp_1) 
#line 2324 
               goto _LOR;
    else 
      
#line 2325 
      if (rfd->len == 0U) _LOR: 
#line 2327 
                                goto ldv_47210; else ;
  }
  
#line 2329 
  (adapter->netdev)->stats.rx_packets += 1UL;
  
#line 2331 
  if (rx_ring->num_ready_recv <= 39U) 
#line 2332 
                                      dev_warn((struct device const *)(& (adapter->pdev)->dev),"RFD\'s are running out\n"); else ;
  
#line 2334 
  count += 1;
  ldv_47210: 
#line 2335 
  ;
  
#line 2307 
  if (count < limit) 
#line 2309 
                     goto ldv_47211; else 
#line 2312 
                                          goto ldv_47209;
  ldv_47209: 
#line 2313 
  ;
  
#line 2337 
  if (count == limit || ! done) {
    
#line 2338 
    rx_ring->unfinished_receives = (_Bool)1;
    
#line 2339 
    writel(40000U,(void volatile *)(& (adapter->regs)->global.watchdog_timer));
  }
  else 
#line 2343 
       rx_ring->unfinished_receives = (_Bool)0;
  
#line 2346 
  return count;
}


#line 2357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_tx_dma_memory_alloc(struct et131x_adapter *adapter)
{
  int __retres;
  
#line 2359 
  int desc_size = 0;
  
#line 2360 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2363 
  tx_ring->tcb_ring = (struct tcb *)kcalloc(64UL,32UL,33U);
  
#line 2365 
  if (tx_ring->tcb_ring == (struct tcb *)0) {
    
#line 2366 
    __retres = -12;
    
#line 2366 
    goto return_label;
  }
  else ;
  
#line 2368 
  desc_size = 8192;
  
#line 2369 
  tx_ring->tx_desc_ring = (struct tx_desc *)dma_alloc_attrs(& (adapter->pdev)->dev,(unsigned long)desc_size,& tx_ring->tx_desc_ring_pa,208U,(struct dma_attrs *)0);
  
#line 2373 
  if (tx_ring->tx_desc_ring == (struct tx_desc *)0) {
    
#line 2374 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot alloc memory for Tx Ring\n");
    
#line 2376 
    __retres = -12;
    
#line 2376 
    goto return_label;
  }
  else ;
  
#line 2379 
  tx_ring->tx_status = (u32 *)dma_alloc_attrs(& (adapter->pdev)->dev,4UL,& tx_ring->tx_status_pa,208U,(struct dma_attrs *)0);
  
#line 2383 
  if (tx_ring->tx_status_pa == 0ULL) {
    
#line 2384 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot alloc memory for Tx status block\n");
    
#line 2386 
    __retres = -12;
    
#line 2386 
    goto return_label;
  }
  else ;
  
#line 2388 
  __retres = 0;
  return_label: 
#line 2388 
                return __retres;
}


#line 2391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_tx_dma_memory_free(struct et131x_adapter *adapter)
{
  
#line 2393 
  int desc_size = 0;
  
#line 2394 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2396 
  if (tx_ring->tx_desc_ring != (struct tx_desc *)0) {
    
#line 2398 
    desc_size = 8192;
    
#line 2399 
    dma_free_attrs(& (adapter->pdev)->dev,(unsigned long)desc_size,(void *)tx_ring->tx_desc_ring,tx_ring->tx_desc_ring_pa,(struct dma_attrs *)0);
    
#line 2403 
    tx_ring->tx_desc_ring = (struct tx_desc *)0;
  }
  else ;
  
#line 2407 
  if (tx_ring->tx_status != (u32 *)0U) {
    
#line 2408 
    dma_free_attrs(& (adapter->pdev)->dev,4UL,(void *)tx_ring->tx_status,tx_ring->tx_status_pa,(struct dma_attrs *)0);
    
#line 2413 
    tx_ring->tx_status = (u32 *)0U;
  }
  else ;
  
#line 2416 
  kfree((void const *)tx_ring->tcb_ring);
  
#line 2417 
  return;
}


#line 2439 
void __compiletime_assert_2439(void);


#line 2420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int nic_send_packet(struct et131x_adapter *adapter, struct tcb *tcb)
{
  int __retres;
  u32 i;
  struct tx_desc desc[24U];
  u32 thiscopy;
  u32 remainder;
  unsigned char *tmp;
  unsigned char *tmp_0;
  dma_addr_t dma_addr;
  
#line 2424 
  u32 frag = 0U;
  
#line 2426 
  struct sk_buff *skb = tcb->skb;
  
#line 2427 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2427 
  u32 nr_frags = (unsigned int)((int)((struct skb_shared_info *)tmp)->nr_frags + 1);
  
#line 2428 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2428 
  struct skb_frag_struct *frags = & ((struct skb_shared_info *)tmp_0)->frags[0];
  
#line 2429 
  struct phy_device *phydev = adapter->phydev;
  
#line 2431 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  {
    
#line 2439 
    bool __cond = (_Bool)0;
    
#line 2439 
    if ((int)__cond != 0) 
#line 2439 
                          __compiletime_assert_2439(); else ;
  }
  
#line 2441 
  memset((void *)(& desc),0,(unsigned long)(nr_frags + 1U) * 16UL);
  
#line 2443 
  i = 0U;
  
#line 2443 
  goto ldv_47242;
  ldv_47241: 
#line 2444 
  ;
  
#line 2447 
  if (i == 0U) {
    unsigned int tmp_7;
    
#line 2457 
    tmp_7 = skb_headlen((struct sk_buff const *)skb);
    
#line 2457 
    if (tmp_7 <= 1514U) {
      unsigned int tmp_1;
      
#line 2461 
      desc[frag].len_vlan = skb_headlen((struct sk_buff const *)skb);
      
#line 2462 
      tmp_1 = skb_headlen((struct sk_buff const *)skb);
      
#line 2462 
      ;
      
#line 2462 
      ;
      
#line 2462 
      dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)skb->data,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 2466 
      desc[frag].addr_lo = (unsigned int)dma_addr;
      
#line 2467 
      desc[frag].addr_hi = (unsigned int)(dma_addr >> 32);
      
#line 2468 
      frag += 1U;
    }
    else {
      unsigned int tmp_2;
      unsigned int tmp_3;
      unsigned int tmp_4;
      unsigned int tmp_5;
      unsigned int tmp_6;
      
#line 2470 
      tmp_2 = skb_headlen((struct sk_buff const *)skb);
      
#line 2470 
      desc[frag].len_vlan = tmp_2 / 2U;
      
#line 2471 
      tmp_3 = skb_headlen((struct sk_buff const *)skb);
      
#line 2471 
      ;
      
#line 2471 
      ;
      
#line 2471 
      dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)skb->data,(unsigned long)(tmp_3 / 2U),(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 2475 
      desc[frag].addr_lo = (unsigned int)dma_addr;
      
#line 2476 
      desc[frag].addr_hi = (unsigned int)(dma_addr >> 32);
      
#line 2477 
      frag += 1U;
      
#line 2479 
      tmp_4 = skb_headlen((struct sk_buff const *)skb);
      
#line 2479 
      desc[frag].len_vlan = tmp_4 / 2U;
      
#line 2480 
      tmp_5 = skb_headlen((struct sk_buff const *)skb);
      
#line 2480 
      tmp_6 = skb_headlen((struct sk_buff const *)skb);
      
#line 2480 
      ;
      
#line 2480 
      ;
      
#line 2480 
      dma_addr = dma_map_single_attrs(& (adapter->pdev)->dev,(void *)(skb->data + tmp_6 / 2U),(unsigned long)(tmp_5 / 2U),(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 2485 
      desc[frag].addr_lo = (unsigned int)dma_addr;
      
#line 2486 
      desc[frag].addr_hi = (unsigned int)(dma_addr >> 32);
      
#line 2487 
      frag += 1U;
    }
  }
  else {
    
#line 2490 
    desc[frag].len_vlan = (frags + (i + 4294967295U))->size;
    
#line 2491 
    dma_addr = skb_frag_dma_map(& (adapter->pdev)->dev,(skb_frag_t const *)(frags + (i + 4294967295U)),0UL,(unsigned long)(frags + (i + 4294967295U))->size,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 2496 
    desc[frag].addr_lo = (unsigned int)dma_addr;
    
#line 2497 
    desc[frag].addr_hi = (unsigned int)(dma_addr >> 32);
    
#line 2498 
    frag += 1U;
  }
  
#line 2443 
  i += 1U;
  ldv_47242: 
#line 2444 
  ;
  
#line 2443 
  if (i < nr_frags) 
#line 2445 
                    goto ldv_47241; else 
#line 2448 
                                         goto ldv_47243;
  ldv_47243: 
#line 2449 
  ;
  
#line 2502 
  if (phydev != (struct phy_device *)0 && phydev->speed == 1000) {
    
#line 2503 
    tx_ring->since_irq += 1;
    
#line 2503 
    if (tx_ring->since_irq == 4) {
      
#line 2505 
      desc[frag + 4294967295U].flags = 5U;
      
#line 2507 
      tx_ring->since_irq = 0;
    }
    else 
#line 2509 
         desc[frag + 4294967295U].flags = 1U;
  }
  else 
#line 2512 
       desc[frag + 4294967295U].flags = 5U;
  
#line 2516 
  desc[0].flags |= 2U;
  
#line 2518 
  tcb->index_start = tx_ring->send_idx;
  
#line 2519 
  tcb->stale = 0U;
  
#line 2521 
  thiscopy = 512U - (tx_ring->send_idx & 1023U);
  
#line 2523 
  if (thiscopy >= frag) {
    
#line 2524 
    remainder = 0U;
    
#line 2525 
    thiscopy = frag;
  }
  else 
#line 2527 
       remainder = frag - thiscopy;
  
#line 2530 
  memcpy((void *)(tx_ring->tx_desc_ring + (tx_ring->send_idx & 1023U)),(void const *)(& desc),(unsigned long)thiscopy * 16UL);
  
#line 2534 
  add_10bit(& tx_ring->send_idx,(int)thiscopy);
  
#line 2536 
  if ((tx_ring->send_idx & 1023U) == 0U || (tx_ring->send_idx & 1023U) == 512U) {
    
#line 2538 
    tx_ring->send_idx &= 4294966272U;
    
#line 2539 
    tx_ring->send_idx ^= 1024U;
  }
  else ;
  
#line 2542 
  if (remainder != 0U) {
    
#line 2543 
    memcpy((void *)tx_ring->tx_desc_ring,(void const *)(& desc) + thiscopy,(unsigned long)remainder * 16UL);
    
#line 2547 
    add_10bit(& tx_ring->send_idx,(int)remainder);
  }
  else ;
  
#line 2550 
  if ((tx_ring->send_idx & 1023U) == 0U) 
    
#line 2551 
    if (tx_ring->send_idx != 0U) 
#line 2552 
                                 tcb->index = 511U; else 
#line 2554 
                                                         tcb->index = 1535U;
  else 
#line 2556 
       tcb->index = tx_ring->send_idx + 4294967295U;
  
#line 2559 
  ldv_spin_lock_79(& adapter->tcb_send_qlock);
  
#line 2561 
  if (tx_ring->send_tail != (struct tcb *)0) 
#line 2562 
                                             (tx_ring->send_tail)->next = tcb; else 
                                                                    
#line 2564 
                                                                    tx_ring->send_head = tcb;
  
#line 2566 
  tx_ring->send_tail = tcb;
  {
    
#line 2568 
    int __ret_warn_on = tcb->next != (struct tcb *)0;
    
#line 2568 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2568 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2568); else ;
    
#line 2568 
    long tmp_8 = (long)(__ret_warn_on != 0);
  }
  
#line 2570 
  tx_ring->used += 1;
  
#line 2572 
  ldv_spin_unlock_80(& adapter->tcb_send_qlock);
  
#line 2575 
  writel(tx_ring->send_idx,(void volatile *)(& (adapter->regs)->txdma.service_request));
  
#line 2580 
  if (phydev != (struct phy_device *)0 && phydev->speed == 1000) 
#line 2581 
                                                                 writel(40000U,(void volatile *)(& (adapter->regs)->global.watchdog_timer)); else ;
  
#line 2584 
  __retres = 0;
  
#line 2584 
  return __retres;
}


#line 2587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int send_packet(struct sk_buff *skb, struct et131x_adapter *adapter)
{
  int __retres;
  int status;
  struct tcb *tcb;
  unsigned long flags;
  
#line 2592 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2595 
  if (skb->len <= 13U) {
    
#line 2596 
    __retres = -5;
    
#line 2596 
    goto return_label;
  }
  else ;
  
#line 2598 
  ldv___ldv_spin_lock_81(& adapter->tcb_ready_qlock);
  
#line 2600 
  tcb = tx_ring->tcb_qhead;
  
#line 2602 
  if (tcb == (struct tcb *)0) {
    
#line 2603 
    ldv_spin_unlock_irqrestore_82(& adapter->tcb_ready_qlock,flags);
    
#line 2604 
    __retres = -12;
    
#line 2604 
    goto return_label;
  }
  else ;
  
#line 2607 
  tx_ring->tcb_qhead = tcb->next;
  
#line 2609 
  if (tx_ring->tcb_qhead == (struct tcb *)0) 
#line 2610 
                                             tx_ring->tcb_qtail = (struct tcb *)0; else ;
  
#line 2612 
  ldv_spin_unlock_irqrestore_83(& adapter->tcb_ready_qlock,flags);
  
#line 2614 
  tcb->skb = skb;
  
#line 2615 
  tcb->next = (struct tcb *)0;
  
#line 2617 
  status = nic_send_packet(adapter,tcb);
  
#line 2619 
  if (status != 0) {
    
#line 2620 
    ldv___ldv_spin_lock_84(& adapter->tcb_ready_qlock);
    
#line 2622 
    if (tx_ring->tcb_qtail != (struct tcb *)0) 
#line 2623 
                                               (tx_ring->tcb_qtail)->next = tcb; else 
                                                                    
#line 2626 
                                                                    tx_ring->tcb_qhead = tcb;
    
#line 2628 
    tx_ring->tcb_qtail = tcb;
    
#line 2629 
    ldv_spin_unlock_irqrestore_85(& adapter->tcb_ready_qlock,flags);
    
#line 2630 
    __retres = status;
    
#line 2630 
    goto return_label;
  }
  else ;
  {
    
#line 2632 
    int __ret_warn_on = tx_ring->used > 64;
    
#line 2632 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2632 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2632); else ;
    
#line 2632 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 2633 
  __retres = 0;
  return_label: 
#line 2633 
                return __retres;
}


#line 2637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
__inline static void free_send_packet(struct et131x_adapter *adapter, struct tcb *tcb)
{
  unsigned long flags;
  u64 dma_addr;
  
#line 2641 
  struct tx_desc *desc = (struct tx_desc *)0;
  
#line 2642 
  struct net_device_stats *stats = & (adapter->netdev)->stats;
  
#line 2643 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2646 
  if (tcb->skb != (struct sk_buff *)0) {
    
#line 2647 
    stats->tx_bytes += (unsigned long)(tcb->skb)->len;
    ldv_47265: 
#line 2648 
    ;
    
#line 2654 
    desc = tx_ring->tx_desc_ring + (tcb->index_start & 1023U);
    
#line 2657 
    dma_addr = (unsigned long long)desc->addr_lo;
    
#line 2658 
    dma_addr = ((unsigned long long)desc->addr_hi << 32) | dma_addr;
    
#line 2660 
    dma_unmap_single_attrs(& (adapter->pdev)->dev,dma_addr,(unsigned long)desc->len_vlan,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 2664 
    add_10bit(& tcb->index_start,1);
    
#line 2665 
    if ((tcb->index_start & 1023U) > 511U) {
      
#line 2667 
      tcb->index_start &= 4294966272U;
      
#line 2668 
      tcb->index_start ^= 1024U;
    }
    else ;
    
#line 2670 
    if (tx_ring->tx_desc_ring + (tcb->index & 1023U) != desc) 
#line 2672 
                                                              goto ldv_47265; else 
                                                                    
#line 2675 
                                                                    goto ldv_47266;
    ldv_47266: 
#line 2676 
    ;
    
#line 2672 
    dev_kfree_skb_any(tcb->skb);
  }
  else ;
  
#line 2675 
  memset((void *)tcb,0,32UL);
  
#line 2678 
  ldv___ldv_spin_lock_86(& adapter->tcb_ready_qlock);
  
#line 2680 
  stats->tx_packets += 1UL;
  
#line 2682 
  if (tx_ring->tcb_qtail != (struct tcb *)0) 
#line 2683 
                                             (tx_ring->tcb_qtail)->next = tcb; else 
                                                                    
#line 2685 
                                                                    tx_ring->tcb_qhead = tcb;
  
#line 2687 
  tx_ring->tcb_qtail = tcb;
  
#line 2689 
  ldv_spin_unlock_irqrestore_87(& adapter->tcb_ready_qlock,flags);
  {
    
#line 2690 
    int __ret_warn_on = tx_ring->used < 0;
    
#line 2690 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2690 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2690); else ;
    
#line 2690 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 2692 
  return;
}


#line 2694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_free_busy_send_packets(struct et131x_adapter *adapter)
{
  struct tcb *tcb;
  unsigned long flags;
  
#line 2698 
  u32 freed = 0U;
  
#line 2699 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2702 
  ldv___ldv_spin_lock_88(& adapter->tcb_send_qlock);
  
#line 2704 
  tcb = tx_ring->send_head;
  
#line 2706 
  goto ldv_47278;
  ldv_47277: 
#line 2707 
  ;
  {
    
#line 2707 
    struct tcb *next = tcb->next;
    
#line 2709 
    tx_ring->send_head = next;
    
#line 2711 
    if (next == (struct tcb *)0) 
#line 2712 
                                 tx_ring->send_tail = (struct tcb *)0; else ;
    
#line 2714 
    tx_ring->used -= 1;
    
#line 2716 
    ldv_spin_unlock_irqrestore_89(& adapter->tcb_send_qlock,flags);
    
#line 2718 
    freed += 1U;
    
#line 2719 
    free_send_packet(adapter,tcb);
    
#line 2721 
    ldv___ldv_spin_lock_90(& adapter->tcb_send_qlock);
    
#line 2723 
    tcb = tx_ring->send_head;
  }
  ldv_47278: 
#line 2725 
  ;
  
#line 2706 
  if (tcb != (struct tcb *)0 && freed <= 63U) 
#line 2708 
                                              goto ldv_47277; else 
#line 2711 
                                                                   goto ldv_47279;
  ldv_47279: 
#line 2712 
  ;
  {
    
#line 2726 
    int __ret_warn_on = freed == 64U;
    
#line 2726 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2726 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c",2726); else ;
    
#line 2726 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 2728 
  ldv_spin_unlock_irqrestore_91(& adapter->tcb_send_qlock,flags);
  
#line 2730 
  tx_ring->used = 0;
  
#line 2731 
  return;
}


#line 2738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_handle_send_pkts(struct et131x_adapter *adapter)
{
  unsigned long flags;
  u32 serviced;
  struct tcb *tcb;
  u32 index;
  
#line 2744 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 2746 
  serviced = readl((void const volatile *)(& (adapter->regs)->txdma.new_service_complete));
  
#line 2747 
  index = serviced & 1023U;
  
#line 2752 
  ldv___ldv_spin_lock_92(& adapter->tcb_send_qlock);
  
#line 2754 
  tcb = tx_ring->send_head;
  
#line 2756 
  goto ldv_47291;
  ldv_47290: 
#line 2757 
  ;
  
#line 2759 
  tx_ring->used -= 1;
  
#line 2760 
  tx_ring->send_head = tcb->next;
  
#line 2761 
  if (tcb->next == (struct tcb *)0) 
#line 2762 
                                    tx_ring->send_tail = (struct tcb *)0; else ;
  
#line 2764 
  ldv_spin_unlock_irqrestore_93(& adapter->tcb_send_qlock,flags);
  
#line 2765 
  free_send_packet(adapter,tcb);
  
#line 2766 
  ldv___ldv_spin_lock_94(& adapter->tcb_send_qlock);
  
#line 2769 
  tcb = tx_ring->send_head;
  ldv_47291: 
#line 2770 
  ;
  
#line 2756 
  if ((tcb != (struct tcb *)0 && ((tcb->index ^ serviced) & 1024U) != 0U) && (tcb->index & 1023U) > index) 
    
#line 2760 
    goto ldv_47290; else 
#line 2763 
                         goto ldv_47292;
  ldv_47292: 
#line 2764 
  ;
  
#line 2771 
  goto ldv_47294;
  ldv_47293: 
#line 2772 
  ;
  
#line 2774 
  tx_ring->used -= 1;
  
#line 2775 
  tx_ring->send_head = tcb->next;
  
#line 2776 
  if (tcb->next == (struct tcb *)0) 
#line 2777 
                                    tx_ring->send_tail = (struct tcb *)0; else ;
  
#line 2779 
  ldv_spin_unlock_irqrestore_95(& adapter->tcb_send_qlock,flags);
  
#line 2780 
  free_send_packet(adapter,tcb);
  
#line 2781 
  ldv___ldv_spin_lock_96(& adapter->tcb_send_qlock);
  
#line 2784 
  tcb = tx_ring->send_head;
  ldv_47294: 
#line 2785 
  ;
  
#line 2771 
  if ((tcb != (struct tcb *)0 && ((tcb->index ^ serviced) & 1024U) == 0U) && (tcb->index & 1023U) < index) 
    
#line 2775 
    goto ldv_47293; else 
#line 2778 
                         goto ldv_47295;
  ldv_47295: 
#line 2779 
  ;
  
#line 2788 
  if (tx_ring->used <= 21) 
#line 2789 
                           netif_wake_queue(adapter->netdev); else ;
  
#line 2791 
  ldv_spin_unlock_irqrestore_97(& adapter->tcb_send_qlock,flags);
  
#line 2792 
  return;
}


#line 2794  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int tmp_0;
  
#line 2797 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2799 
  tmp_0 = phy_ethtool_gset(adapter->phydev,cmd);
  
#line 2799 
  return tmp_0;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_set_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int tmp_0;
  
#line 2805 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2807 
  tmp_0 = phy_ethtool_sset(adapter->phydev,cmd);
  
#line 2807 
  return tmp_0;
}


#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 2813 
  __retres = 1024;
  
#line 2813 
  return __retres;
}


#line 2816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *regs_data)
{
  u16 tmp_0;
  int tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  u32 tmp_13;
  u32 tmp_14;
  u32 tmp_15;
  u32 tmp_16;
  u32 tmp_17;
  u32 tmp_18;
  u32 tmp_19;
  u32 tmp_20;
  u32 tmp_21;
  u32 tmp_22;
  u32 tmp_23;
  u32 tmp_24;
  u32 tmp_25;
  u32 tmp_26;
  u32 tmp_27;
  u32 tmp_28;
  u32 tmp_29;
  u32 tmp_30;
  u32 tmp_31;
  u32 tmp_32;
  u32 tmp_33;
  u32 tmp_34;
  u32 tmp_35;
  u32 tmp_36;
  u32 tmp_37;
  u32 tmp_38;
  u32 tmp_39;
  u32 tmp_40;
  u32 tmp_41;
  u32 tmp_42;
  u32 tmp_43;
  u32 tmp_44;
  u32 tmp_45;
  u32 tmp_46;
  u32 tmp_47;
  u32 tmp_48;
  u32 tmp_49;
  u32 tmp_50;
  u32 tmp_51;
  u32 tmp_52;
  u32 tmp_53;
  u32 tmp_54;
  u32 tmp_55;
  u32 tmp_56;
  u32 tmp_57;
  u32 tmp_58;
  u32 tmp_59;
  u32 tmp_60;
  u32 tmp_61;
  u32 tmp_62;
  u32 tmp_63;
  u32 tmp_64;
  u32 tmp_65;
  u32 tmp_66;
  u32 tmp_67;
  u32 tmp_68;
  u32 tmp_69;
  u32 tmp_70;
  u32 tmp_71;
  u32 tmp_72;
  u32 tmp_73;
  u32 tmp_74;
  u32 tmp_75;
  u32 tmp_76;
  u32 tmp_77;
  u32 tmp_78;
  u32 tmp_79;
  u32 tmp_80;
  u32 tmp_81;
  u32 tmp_82;
  u32 tmp_83;
  u32 tmp_84;
  u32 tmp_85;
  u32 tmp_86;
  u32 tmp_87;
  u32 tmp_88;
  u32 tmp_89;
  u32 tmp_90;
  u32 tmp_91;
  u32 tmp_92;
  u32 tmp_93;
  u32 tmp_94;
  u32 tmp_95;
  u32 tmp_96;
  u32 tmp_97;
  u32 tmp_98;
  u32 tmp_99;
  
#line 2819 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2820 
  struct address_map *aregs = adapter->regs;
  
#line 2821 
  u32 *regs_buff = (u32 *)regs_data;
  
#line 2822 
  u32 num = 0U;
  
#line 2825 
  tmp_1 = et131x_get_regs_len(netdev);
  
#line 2825 
  ;
  
#line 2825 
  memset(regs_data,0,(unsigned long)tmp_1);
  
#line 2827 
  regs->version = (unsigned int)((((int)(adapter->pdev)->revision << 16) | 16777216) | (int)(adapter->pdev)->device);
  
#line 2831 
  et131x_mii_read(adapter,(unsigned char)0,& tmp_0);
  
#line 2832 
  tmp_2 = num;
  
#line 2832 
  num += 1U;
  
#line 2832 
  *(regs_buff + tmp_2) = (unsigned int)tmp_0;
  
#line 2833 
  et131x_mii_read(adapter,(unsigned char)1,& tmp_0);
  
#line 2834 
  tmp_3 = num;
  
#line 2834 
  num += 1U;
  
#line 2834 
  *(regs_buff + tmp_3) = (unsigned int)tmp_0;
  
#line 2835 
  et131x_mii_read(adapter,(unsigned char)2,& tmp_0);
  
#line 2836 
  tmp_4 = num;
  
#line 2836 
  num += 1U;
  
#line 2836 
  *(regs_buff + tmp_4) = (unsigned int)tmp_0;
  
#line 2837 
  et131x_mii_read(adapter,(unsigned char)3,& tmp_0);
  
#line 2838 
  tmp_5 = num;
  
#line 2838 
  num += 1U;
  
#line 2838 
  *(regs_buff + tmp_5) = (unsigned int)tmp_0;
  
#line 2839 
  et131x_mii_read(adapter,(unsigned char)4,& tmp_0);
  
#line 2840 
  tmp_6 = num;
  
#line 2840 
  num += 1U;
  
#line 2840 
  *(regs_buff + tmp_6) = (unsigned int)tmp_0;
  
#line 2841 
  et131x_mii_read(adapter,(unsigned char)5,& tmp_0);
  
#line 2842 
  tmp_7 = num;
  
#line 2842 
  num += 1U;
  
#line 2842 
  *(regs_buff + tmp_7) = (unsigned int)tmp_0;
  
#line 2843 
  et131x_mii_read(adapter,(unsigned char)6,& tmp_0);
  
#line 2844 
  tmp_8 = num;
  
#line 2844 
  num += 1U;
  
#line 2844 
  *(regs_buff + tmp_8) = (unsigned int)tmp_0;
  
#line 2846 
  et131x_mii_read(adapter,(unsigned char)7,& tmp_0);
  
#line 2847 
  tmp_9 = num;
  
#line 2847 
  num += 1U;
  
#line 2847 
  *(regs_buff + tmp_9) = (unsigned int)tmp_0;
  
#line 2849 
  et131x_mii_read(adapter,(unsigned char)8,& tmp_0);
  
#line 2850 
  tmp_10 = num;
  
#line 2850 
  num += 1U;
  
#line 2850 
  *(regs_buff + tmp_10) = (unsigned int)tmp_0;
  
#line 2851 
  et131x_mii_read(adapter,(unsigned char)9,& tmp_0);
  
#line 2852 
  tmp_11 = num;
  
#line 2852 
  num += 1U;
  
#line 2852 
  *(regs_buff + tmp_11) = (unsigned int)tmp_0;
  
#line 2853 
  et131x_mii_read(adapter,(unsigned char)10,& tmp_0);
  
#line 2854 
  tmp_12 = num;
  
#line 2854 
  num += 1U;
  
#line 2854 
  *(regs_buff + tmp_12) = (unsigned int)tmp_0;
  
#line 2855 
  et131x_mii_read(adapter,(unsigned char)11,& tmp_0);
  
#line 2856 
  tmp_13 = num;
  
#line 2856 
  num += 1U;
  
#line 2856 
  *(regs_buff + tmp_13) = (unsigned int)tmp_0;
  
#line 2857 
  et131x_mii_read(adapter,(unsigned char)12,& tmp_0);
  
#line 2858 
  tmp_14 = num;
  
#line 2858 
  num += 1U;
  
#line 2858 
  *(regs_buff + tmp_14) = (unsigned int)tmp_0;
  
#line 2859 
  et131x_mii_read(adapter,(unsigned char)13,& tmp_0);
  
#line 2860 
  tmp_15 = num;
  
#line 2860 
  num += 1U;
  
#line 2860 
  *(regs_buff + tmp_15) = (unsigned int)tmp_0;
  
#line 2861 
  et131x_mii_read(adapter,(unsigned char)14,& tmp_0);
  
#line 2862 
  tmp_16 = num;
  
#line 2862 
  num += 1U;
  
#line 2862 
  *(regs_buff + tmp_16) = (unsigned int)tmp_0;
  
#line 2863 
  et131x_mii_read(adapter,(unsigned char)15,& tmp_0);
  
#line 2864 
  tmp_17 = num;
  
#line 2864 
  num += 1U;
  
#line 2864 
  *(regs_buff + tmp_17) = (unsigned int)tmp_0;
  
#line 2866 
  et131x_mii_read(adapter,(unsigned char)16,& tmp_0);
  
#line 2867 
  tmp_18 = num;
  
#line 2867 
  num += 1U;
  
#line 2867 
  *(regs_buff + tmp_18) = (unsigned int)tmp_0;
  
#line 2868 
  et131x_mii_read(adapter,(unsigned char)17,& tmp_0);
  
#line 2869 
  tmp_19 = num;
  
#line 2869 
  num += 1U;
  
#line 2869 
  *(regs_buff + tmp_19) = (unsigned int)tmp_0;
  
#line 2870 
  et131x_mii_read(adapter,(unsigned char)18,& tmp_0);
  
#line 2871 
  tmp_20 = num;
  
#line 2871 
  num += 1U;
  
#line 2871 
  *(regs_buff + tmp_20) = (unsigned int)tmp_0;
  
#line 2872 
  et131x_mii_read(adapter,(unsigned char)19,& tmp_0);
  
#line 2873 
  tmp_21 = num;
  
#line 2873 
  num += 1U;
  
#line 2873 
  *(regs_buff + tmp_21) = (unsigned int)tmp_0;
  
#line 2874 
  et131x_mii_read(adapter,(unsigned char)20,& tmp_0);
  
#line 2875 
  tmp_22 = num;
  
#line 2875 
  num += 1U;
  
#line 2875 
  *(regs_buff + tmp_22) = (unsigned int)tmp_0;
  
#line 2877 
  et131x_mii_read(adapter,(unsigned char)21,& tmp_0);
  
#line 2878 
  tmp_23 = num;
  
#line 2878 
  num += 1U;
  
#line 2878 
  *(regs_buff + tmp_23) = (unsigned int)tmp_0;
  
#line 2879 
  et131x_mii_read(adapter,(unsigned char)22,& tmp_0);
  
#line 2880 
  tmp_24 = num;
  
#line 2880 
  num += 1U;
  
#line 2880 
  *(regs_buff + tmp_24) = (unsigned int)tmp_0;
  
#line 2881 
  et131x_mii_read(adapter,(unsigned char)23,& tmp_0);
  
#line 2882 
  tmp_25 = num;
  
#line 2882 
  num += 1U;
  
#line 2882 
  *(regs_buff + tmp_25) = (unsigned int)tmp_0;
  
#line 2883 
  et131x_mii_read(adapter,(unsigned char)24,& tmp_0);
  
#line 2884 
  tmp_26 = num;
  
#line 2884 
  num += 1U;
  
#line 2884 
  *(regs_buff + tmp_26) = (unsigned int)tmp_0;
  
#line 2885 
  et131x_mii_read(adapter,(unsigned char)25,& tmp_0);
  
#line 2886 
  tmp_27 = num;
  
#line 2886 
  num += 1U;
  
#line 2886 
  *(regs_buff + tmp_27) = (unsigned int)tmp_0;
  
#line 2887 
  et131x_mii_read(adapter,(unsigned char)26,& tmp_0);
  
#line 2888 
  tmp_28 = num;
  
#line 2888 
  num += 1U;
  
#line 2888 
  *(regs_buff + tmp_28) = (unsigned int)tmp_0;
  
#line 2889 
  et131x_mii_read(adapter,(unsigned char)27,& tmp_0);
  
#line 2890 
  tmp_29 = num;
  
#line 2890 
  num += 1U;
  
#line 2890 
  *(regs_buff + tmp_29) = (unsigned int)tmp_0;
  
#line 2891 
  et131x_mii_read(adapter,(unsigned char)28,& tmp_0);
  
#line 2892 
  tmp_30 = num;
  
#line 2892 
  num += 1U;
  
#line 2892 
  *(regs_buff + tmp_30) = (unsigned int)tmp_0;
  
#line 2895 
  tmp_31 = num;
  
#line 2895 
  num += 1U;
  
#line 2895 
  *(regs_buff + tmp_31) = readl((void const volatile *)(& aregs->global.txq_start_addr));
  
#line 2896 
  tmp_32 = num;
  
#line 2896 
  num += 1U;
  
#line 2896 
  *(regs_buff + tmp_32) = readl((void const volatile *)(& aregs->global.txq_end_addr));
  
#line 2897 
  tmp_33 = num;
  
#line 2897 
  num += 1U;
  
#line 2897 
  *(regs_buff + tmp_33) = readl((void const volatile *)(& aregs->global.rxq_start_addr));
  
#line 2898 
  tmp_34 = num;
  
#line 2898 
  num += 1U;
  
#line 2898 
  *(regs_buff + tmp_34) = readl((void const volatile *)(& aregs->global.rxq_end_addr));
  
#line 2899 
  tmp_35 = num;
  
#line 2899 
  num += 1U;
  
#line 2899 
  *(regs_buff + tmp_35) = readl((void const volatile *)(& aregs->global.pm_csr));
  
#line 2900 
  tmp_36 = num;
  
#line 2900 
  num += 1U;
  
#line 2900 
  *(regs_buff + tmp_36) = adapter->stats.interrupt_status;
  
#line 2901 
  tmp_37 = num;
  
#line 2901 
  num += 1U;
  
#line 2901 
  *(regs_buff + tmp_37) = readl((void const volatile *)(& aregs->global.int_mask));
  
#line 2902 
  tmp_38 = num;
  
#line 2902 
  num += 1U;
  
#line 2902 
  *(regs_buff + tmp_38) = readl((void const volatile *)(& aregs->global.int_alias_clr_en));
  
#line 2903 
  tmp_39 = num;
  
#line 2903 
  num += 1U;
  
#line 2903 
  *(regs_buff + tmp_39) = readl((void const volatile *)(& aregs->global.int_status_alias));
  
#line 2904 
  tmp_40 = num;
  
#line 2904 
  num += 1U;
  
#line 2904 
  *(regs_buff + tmp_40) = readl((void const volatile *)(& aregs->global.sw_reset));
  
#line 2905 
  tmp_41 = num;
  
#line 2905 
  num += 1U;
  
#line 2905 
  *(regs_buff + tmp_41) = readl((void const volatile *)(& aregs->global.slv_timer));
  
#line 2906 
  tmp_42 = num;
  
#line 2906 
  num += 1U;
  
#line 2906 
  *(regs_buff + tmp_42) = readl((void const volatile *)(& aregs->global.msi_config));
  
#line 2907 
  tmp_43 = num;
  
#line 2907 
  num += 1U;
  
#line 2907 
  *(regs_buff + tmp_43) = readl((void const volatile *)(& aregs->global.loopback));
  
#line 2908 
  tmp_44 = num;
  
#line 2908 
  num += 1U;
  
#line 2908 
  *(regs_buff + tmp_44) = readl((void const volatile *)(& aregs->global.watchdog_timer));
  
#line 2911 
  tmp_45 = num;
  
#line 2911 
  num += 1U;
  
#line 2911 
  *(regs_buff + tmp_45) = readl((void const volatile *)(& aregs->txdma.csr));
  
#line 2912 
  tmp_46 = num;
  
#line 2912 
  num += 1U;
  
#line 2912 
  *(regs_buff + tmp_46) = readl((void const volatile *)(& aregs->txdma.pr_base_hi));
  
#line 2913 
  tmp_47 = num;
  
#line 2913 
  num += 1U;
  
#line 2913 
  *(regs_buff + tmp_47) = readl((void const volatile *)(& aregs->txdma.pr_base_lo));
  
#line 2914 
  tmp_48 = num;
  
#line 2914 
  num += 1U;
  
#line 2914 
  *(regs_buff + tmp_48) = readl((void const volatile *)(& aregs->txdma.pr_num_des));
  
#line 2915 
  tmp_49 = num;
  
#line 2915 
  num += 1U;
  
#line 2915 
  *(regs_buff + tmp_49) = readl((void const volatile *)(& aregs->txdma.txq_wr_addr));
  
#line 2916 
  tmp_50 = num;
  
#line 2916 
  num += 1U;
  
#line 2916 
  *(regs_buff + tmp_50) = readl((void const volatile *)(& aregs->txdma.txq_wr_addr_ext));
  
#line 2917 
  tmp_51 = num;
  
#line 2917 
  num += 1U;
  
#line 2917 
  *(regs_buff + tmp_51) = readl((void const volatile *)(& aregs->txdma.txq_rd_addr));
  
#line 2918 
  tmp_52 = num;
  
#line 2918 
  num += 1U;
  
#line 2918 
  *(regs_buff + tmp_52) = readl((void const volatile *)(& aregs->txdma.dma_wb_base_hi));
  
#line 2919 
  tmp_53 = num;
  
#line 2919 
  num += 1U;
  
#line 2919 
  *(regs_buff + tmp_53) = readl((void const volatile *)(& aregs->txdma.dma_wb_base_lo));
  
#line 2920 
  tmp_54 = num;
  
#line 2920 
  num += 1U;
  
#line 2920 
  *(regs_buff + tmp_54) = readl((void const volatile *)(& aregs->txdma.service_request));
  
#line 2921 
  tmp_55 = num;
  
#line 2921 
  num += 1U;
  
#line 2921 
  *(regs_buff + tmp_55) = readl((void const volatile *)(& aregs->txdma.service_complete));
  
#line 2922 
  tmp_56 = num;
  
#line 2922 
  num += 1U;
  
#line 2922 
  *(regs_buff + tmp_56) = readl((void const volatile *)(& aregs->txdma.cache_rd_index));
  
#line 2923 
  tmp_57 = num;
  
#line 2923 
  num += 1U;
  
#line 2923 
  *(regs_buff + tmp_57) = readl((void const volatile *)(& aregs->txdma.cache_wr_index));
  
#line 2924 
  tmp_58 = num;
  
#line 2924 
  num += 1U;
  
#line 2924 
  *(regs_buff + tmp_58) = readl((void const volatile *)(& aregs->txdma.tx_dma_error));
  
#line 2925 
  tmp_59 = num;
  
#line 2925 
  num += 1U;
  
#line 2925 
  *(regs_buff + tmp_59) = readl((void const volatile *)(& aregs->txdma.desc_abort_cnt));
  
#line 2926 
  tmp_60 = num;
  
#line 2926 
  num += 1U;
  
#line 2926 
  *(regs_buff + tmp_60) = readl((void const volatile *)(& aregs->txdma.payload_abort_cnt));
  
#line 2927 
  tmp_61 = num;
  
#line 2927 
  num += 1U;
  
#line 2927 
  *(regs_buff + tmp_61) = readl((void const volatile *)(& aregs->txdma.writeback_abort_cnt));
  
#line 2928 
  tmp_62 = num;
  
#line 2928 
  num += 1U;
  
#line 2928 
  *(regs_buff + tmp_62) = readl((void const volatile *)(& aregs->txdma.desc_timeout_cnt));
  
#line 2929 
  tmp_63 = num;
  
#line 2929 
  num += 1U;
  
#line 2929 
  *(regs_buff + tmp_63) = readl((void const volatile *)(& aregs->txdma.payload_timeout_cnt));
  
#line 2930 
  tmp_64 = num;
  
#line 2930 
  num += 1U;
  
#line 2930 
  *(regs_buff + tmp_64) = readl((void const volatile *)(& aregs->txdma.writeback_timeout_cnt));
  
#line 2931 
  tmp_65 = num;
  
#line 2931 
  num += 1U;
  
#line 2931 
  *(regs_buff + tmp_65) = readl((void const volatile *)(& aregs->txdma.desc_error_cnt));
  
#line 2932 
  tmp_66 = num;
  
#line 2932 
  num += 1U;
  
#line 2932 
  *(regs_buff + tmp_66) = readl((void const volatile *)(& aregs->txdma.payload_error_cnt));
  
#line 2933 
  tmp_67 = num;
  
#line 2933 
  num += 1U;
  
#line 2933 
  *(regs_buff + tmp_67) = readl((void const volatile *)(& aregs->txdma.writeback_error_cnt));
  
#line 2934 
  tmp_68 = num;
  
#line 2934 
  num += 1U;
  
#line 2934 
  *(regs_buff + tmp_68) = readl((void const volatile *)(& aregs->txdma.dropped_tlp_cnt));
  
#line 2935 
  tmp_69 = num;
  
#line 2935 
  num += 1U;
  
#line 2935 
  *(regs_buff + tmp_69) = readl((void const volatile *)(& aregs->txdma.new_service_complete));
  
#line 2936 
  tmp_70 = num;
  
#line 2936 
  num += 1U;
  
#line 2936 
  *(regs_buff + tmp_70) = readl((void const volatile *)(& aregs->txdma.ethernet_packet_cnt));
  
#line 2939 
  tmp_71 = num;
  
#line 2939 
  num += 1U;
  
#line 2939 
  *(regs_buff + tmp_71) = readl((void const volatile *)(& aregs->rxdma.csr));
  
#line 2940 
  tmp_72 = num;
  
#line 2940 
  num += 1U;
  
#line 2940 
  *(regs_buff + tmp_72) = readl((void const volatile *)(& aregs->rxdma.dma_wb_base_hi));
  
#line 2941 
  tmp_73 = num;
  
#line 2941 
  num += 1U;
  
#line 2941 
  *(regs_buff + tmp_73) = readl((void const volatile *)(& aregs->rxdma.dma_wb_base_lo));
  
#line 2942 
  tmp_74 = num;
  
#line 2942 
  num += 1U;
  
#line 2942 
  *(regs_buff + tmp_74) = readl((void const volatile *)(& aregs->rxdma.num_pkt_done));
  
#line 2943 
  tmp_75 = num;
  
#line 2943 
  num += 1U;
  
#line 2943 
  *(regs_buff + tmp_75) = readl((void const volatile *)(& aregs->rxdma.max_pkt_time));
  
#line 2944 
  tmp_76 = num;
  
#line 2944 
  num += 1U;
  
#line 2944 
  *(regs_buff + tmp_76) = readl((void const volatile *)(& aregs->rxdma.rxq_rd_addr));
  
#line 2945 
  tmp_77 = num;
  
#line 2945 
  num += 1U;
  
#line 2945 
  *(regs_buff + tmp_77) = readl((void const volatile *)(& aregs->rxdma.rxq_rd_addr_ext));
  
#line 2946 
  tmp_78 = num;
  
#line 2946 
  num += 1U;
  
#line 2946 
  *(regs_buff + tmp_78) = readl((void const volatile *)(& aregs->rxdma.rxq_wr_addr));
  
#line 2947 
  tmp_79 = num;
  
#line 2947 
  num += 1U;
  
#line 2947 
  *(regs_buff + tmp_79) = readl((void const volatile *)(& aregs->rxdma.psr_base_hi));
  
#line 2948 
  tmp_80 = num;
  
#line 2948 
  num += 1U;
  
#line 2948 
  *(regs_buff + tmp_80) = readl((void const volatile *)(& aregs->rxdma.psr_base_lo));
  
#line 2949 
  tmp_81 = num;
  
#line 2949 
  num += 1U;
  
#line 2949 
  *(regs_buff + tmp_81) = readl((void const volatile *)(& aregs->rxdma.psr_num_des));
  
#line 2950 
  tmp_82 = num;
  
#line 2950 
  num += 1U;
  
#line 2950 
  *(regs_buff + tmp_82) = readl((void const volatile *)(& aregs->rxdma.psr_avail_offset));
  
#line 2951 
  tmp_83 = num;
  
#line 2951 
  num += 1U;
  
#line 2951 
  *(regs_buff + tmp_83) = readl((void const volatile *)(& aregs->rxdma.psr_full_offset));
  
#line 2952 
  tmp_84 = num;
  
#line 2952 
  num += 1U;
  
#line 2952 
  *(regs_buff + tmp_84) = readl((void const volatile *)(& aregs->rxdma.psr_access_index));
  
#line 2953 
  tmp_85 = num;
  
#line 2953 
  num += 1U;
  
#line 2953 
  *(regs_buff + tmp_85) = readl((void const volatile *)(& aregs->rxdma.psr_min_des));
  
#line 2954 
  tmp_86 = num;
  
#line 2954 
  num += 1U;
  
#line 2954 
  *(regs_buff + tmp_86) = readl((void const volatile *)(& aregs->rxdma.fbr0_base_lo));
  
#line 2955 
  tmp_87 = num;
  
#line 2955 
  num += 1U;
  
#line 2955 
  *(regs_buff + tmp_87) = readl((void const volatile *)(& aregs->rxdma.fbr0_base_hi));
  
#line 2956 
  tmp_88 = num;
  
#line 2956 
  num += 1U;
  
#line 2956 
  *(regs_buff + tmp_88) = readl((void const volatile *)(& aregs->rxdma.fbr0_num_des));
  
#line 2957 
  tmp_89 = num;
  
#line 2957 
  num += 1U;
  
#line 2957 
  *(regs_buff + tmp_89) = readl((void const volatile *)(& aregs->rxdma.fbr0_avail_offset));
  
#line 2958 
  tmp_90 = num;
  
#line 2958 
  num += 1U;
  
#line 2958 
  *(regs_buff + tmp_90) = readl((void const volatile *)(& aregs->rxdma.fbr0_full_offset));
  
#line 2959 
  tmp_91 = num;
  
#line 2959 
  num += 1U;
  
#line 2959 
  *(regs_buff + tmp_91) = readl((void const volatile *)(& aregs->rxdma.fbr0_rd_index));
  
#line 2960 
  tmp_92 = num;
  
#line 2960 
  num += 1U;
  
#line 2960 
  *(regs_buff + tmp_92) = readl((void const volatile *)(& aregs->rxdma.fbr0_min_des));
  
#line 2961 
  tmp_93 = num;
  
#line 2961 
  num += 1U;
  
#line 2961 
  *(regs_buff + tmp_93) = readl((void const volatile *)(& aregs->rxdma.fbr1_base_lo));
  
#line 2962 
  tmp_94 = num;
  
#line 2962 
  num += 1U;
  
#line 2962 
  *(regs_buff + tmp_94) = readl((void const volatile *)(& aregs->rxdma.fbr1_base_hi));
  
#line 2963 
  tmp_95 = num;
  
#line 2963 
  num += 1U;
  
#line 2963 
  *(regs_buff + tmp_95) = readl((void const volatile *)(& aregs->rxdma.fbr1_num_des));
  
#line 2964 
  tmp_96 = num;
  
#line 2964 
  num += 1U;
  
#line 2964 
  *(regs_buff + tmp_96) = readl((void const volatile *)(& aregs->rxdma.fbr1_avail_offset));
  
#line 2965 
  tmp_97 = num;
  
#line 2965 
  num += 1U;
  
#line 2965 
  *(regs_buff + tmp_97) = readl((void const volatile *)(& aregs->rxdma.fbr1_full_offset));
  
#line 2966 
  tmp_98 = num;
  
#line 2966 
  num += 1U;
  
#line 2966 
  *(regs_buff + tmp_98) = readl((void const volatile *)(& aregs->rxdma.fbr1_rd_index));
  
#line 2967 
  tmp_99 = num;
  
#line 2967 
  num += 1U;
  
#line 2967 
  *(regs_buff + tmp_99) = readl((void const volatile *)(& aregs->rxdma.fbr1_min_des));
  
#line 2968 
  return;
}


#line 2970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 2973 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2975 
  strlcpy((char *)(& info->driver),"et131x",32UL);
  
#line 2976 
  strlcpy((char *)(& info->version),"v2.0",32UL);
  
#line 2977 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 2977 
  ;
  
#line 2977 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 2978 
  return;
}


#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct ethtool_ops et131x_ethtool_ops = {.get_settings = & et131x_get_settings, .set_settings = & et131x_set_settings, .get_drvinfo = & et131x_get_drvinfo, .get_regs_len = & et131x_get_regs_len, .get_regs = & et131x_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_hwaddr_init(struct et131x_adapter *adapter)
{
  bool tmp;
  
#line 2997 
  tmp = is_zero_ether_addr((u8 const *)(& adapter->rom_addr));
  
#line 2997 
  if ((int)tmp != 0) {
    
#line 3002 
    get_random_bytes((void *)(& adapter->addr[5]),1);
    
#line 3007 
    ether_addr_copy((u8 *)(& adapter->rom_addr),(u8 const *)(& adapter->addr));
  }
  else 
#line 3013 
       ether_addr_copy((u8 *)(& adapter->addr),(u8 const *)(& adapter->rom_addr));
  
#line 3014 
  return;
}


#line 3017  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_pci_init(struct et131x_adapter *adapter, struct pci_dev *pdev)
{
  int __retres;
  u16 max_payload;
  int i;
  int rc;
  int tmp_0;
  bool tmp;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 3023 
  rc = et131x_init_eeprom(adapter);
  
#line 3024 
  if (rc < 0) 
#line 3025 
              goto out; else ;
  
#line 3027 
  tmp = pci_is_pcie(pdev);
  
#line 3027 
  if (tmp) 
#line 3027 
           tmp_0 = 0; else 
#line 3027 
                           tmp_0 = 1;
  
#line 3027 
  if (tmp_0) {
    
#line 3028 
    dev_err((struct device const *)(& pdev->dev),"Missing PCIe capabilities\n");
    
#line 3029 
    goto err_out;
  }
  else ;
  
#line 3033 
  max_payload = (unsigned short)pdev->pcie_mpss;
  
#line 3035 
  if ((unsigned int)max_payload <= 1U) {
    int tmp_1;
    int tmp_2;
    
#line 3036 
    u16 const acknak[2U] = {(unsigned short)118U, (unsigned short)208U};
    
#line 3037 
    u16 const replay[2U] = {(unsigned short)480U, (unsigned short)749U};
    
#line 3039 
    tmp_1 = pci_write_config_word((struct pci_dev const *)pdev,192,(unsigned short)((int)acknak[(int)max_payload]));
    
#line 3039 
    if (tmp_1 != 0) {
      
#line 3041 
      dev_err((struct device const *)(& pdev->dev),"Could not write PCI config space for ACK/NAK\n");
      
#line 3043 
      goto err_out;
    }
    else ;
    
#line 3045 
    tmp_2 = pci_write_config_word((struct pci_dev const *)pdev,194,(unsigned short)((int)replay[(int)max_payload]));
    
#line 3045 
    if (tmp_2 != 0) {
      
#line 3047 
      dev_err((struct device const *)(& pdev->dev),"Could not write PCI config space for Replay Timer\n");
      
#line 3049 
      goto err_out;
    }
    else ;
  }
  else ;
  
#line 3056 
  tmp_3 = pci_write_config_byte((struct pci_dev const *)pdev,207,(unsigned char)17);
  
#line 3056 
  if (tmp_3 != 0) {
    
#line 3057 
    dev_err((struct device const *)(& pdev->dev),"Could not write PCI config space for Latency Timers\n");
    
#line 3059 
    goto err_out;
  }
  else ;
  
#line 3063 
  tmp_4 = pcie_set_readrq(pdev,2048);
  
#line 3063 
  if (tmp_4 != 0) {
    
#line 3064 
    dev_err((struct device const *)(& pdev->dev),"Couldn\'t change PCI config space for Max read size\n");
    
#line 3066 
    goto err_out;
  }
  else ;
  
#line 3072 
  if (! adapter->has_eeprom) {
    
#line 3073 
    et131x_hwaddr_init(adapter);
    
#line 3074 
    __retres = 0;
    
#line 3074 
    goto return_label;
  }
  else ;
  
#line 3077 
  i = 0;
  
#line 3077 
  goto ldv_47340;
  ldv_47339: 
#line 3078 
  ;
  
#line 3078 
  tmp_5 = pci_read_config_byte((struct pci_dev const *)pdev,i + 164,(u8 *)(& adapter->rom_addr) + i);
  
#line 3078 
  if (tmp_5 != 0) {
    
#line 3080 
    dev_err((struct device const *)(& pdev->dev),"Could not read PCI config space for MAC address\n");
    
#line 3081 
    goto err_out;
  }
  else ;
  
#line 3077 
  i += 1;
  ldv_47340: 
#line 3078 
  ;
  
#line 3077 
  if (i <= 5) 
#line 3079 
              goto ldv_47339; else 
#line 3082 
                                   goto ldv_47341;
  ldv_47341: 
#line 3083 
  ;
  
#line 3084 
  ether_addr_copy((u8 *)(& adapter->addr),(u8 const *)(& adapter->rom_addr));
  out: 
#line 3085 
  ;
  
#line 3086 
  __retres = rc;
  
#line 3086 
  goto return_label;
  err_out: 
#line 3087 
  ;
  
#line 3088 
  rc = -5;
  
#line 3089 
  goto out;
  return_label: 
#line 3089 
                return __retres;
}


#line 3098  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_error_timer_handler(unsigned long data)
{
  int tmp;
  unsigned long tmp_1;
  
#line 3100 
  struct et131x_adapter *adapter = (struct et131x_adapter *)data;
  
#line 3101 
  struct phy_device *phydev = adapter->phydev;
  
#line 3103 
  tmp = et1310_in_phy_coma(adapter);
  
#line 3103 
  if (tmp != 0) {
    
#line 3108 
    et1310_disable_phy_coma(adapter);
    
#line 3109 
    adapter->boot_coma = (unsigned char)20U;
  }
  else 
#line 3111 
       et1310_update_macstat_host_counters(adapter);
  
#line 3114 
  if (phydev->link == 0 && (unsigned int)adapter->boot_coma <= 10U) 
#line 3115 
                                                                    adapter->boot_coma = (u8)((int)adapter->boot_coma + 1); else ;
  
#line 3117 
  if ((unsigned int)adapter->boot_coma == 10U) {
    
#line 3118 
    if (phydev->link == 0) {
      int tmp_0;
      
#line 3119 
      tmp_0 = et1310_in_phy_coma(adapter);
      
#line 3119 
      if (tmp_0 == 0) {
        
#line 3123 
        et131x_enable_interrupts(adapter);
        
#line 3124 
        et1310_enable_phy_coma(adapter);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 3130 
  tmp_1 = msecs_to_jiffies(1000U);
  
#line 3130 
  ;
  
#line 3130 
  ;
  
#line 3130 
  ldv_mod_timer_98(& adapter->error_timer,tmp_1 + jiffies);
  
#line 3131 
  return;
}


#line 3134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_adapter_memory_free(struct et131x_adapter *adapter)
{
  
#line 3136 
  et131x_tx_dma_memory_free(adapter);
  
#line 3137 
  et131x_rx_dma_memory_free(adapter);
  
#line 3138 
  return;
}


#line 3140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_adapter_memory_alloc(struct et131x_adapter *adapter)
{
  int __retres;
  int status;
  
#line 3144 
  status = et131x_tx_dma_memory_alloc(adapter);
  
#line 3145 
  if (status != 0) {
    
#line 3146 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"et131x_tx_dma_memory_alloc FAILED\n");
    
#line 3148 
    et131x_tx_dma_memory_free(adapter);
    
#line 3149 
    __retres = status;
    
#line 3149 
    goto return_label;
  }
  else ;
  
#line 3152 
  status = et131x_rx_dma_memory_alloc(adapter);
  
#line 3153 
  if (status != 0) {
    
#line 3154 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"et131x_rx_dma_memory_alloc FAILED\n");
    
#line 3156 
    et131x_adapter_memory_free(adapter);
    
#line 3157 
    __retres = status;
    
#line 3157 
    goto return_label;
  }
  else ;
  
#line 3160 
  status = et131x_init_recv(adapter);
  
#line 3161 
  if (status != 0) {
    
#line 3162 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"et131x_init_recv FAILED\n");
    
#line 3163 
    et131x_adapter_memory_free(adapter);
  }
  else ;
  
#line 3165 
  __retres = status;
  return_label: 
#line 3165 
                return __retres;
}


#line 3168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_adjust_link(struct net_device *netdev)
{
  int tmp_0;
  
#line 3170 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3171 
  struct phy_device *phydev = adapter->phydev;
  
#line 3173 
  if (phydev == (struct phy_device *)0) 
#line 3174 
                                        goto return_label; else ;
  
#line 3175 
  if (phydev->link == adapter->link) 
#line 3176 
                                     goto return_label; else ;
  
#line 3182 
  tmp_0 = et1310_in_phy_coma(adapter);
  
#line 3182 
  if (tmp_0 != 0) 
#line 3183 
                  et1310_disable_phy_coma(adapter); else ;
  
#line 3185 
  adapter->link = phydev->link;
  
#line 3186 
  phy_print_status(phydev);
  
#line 3188 
  if (phydev->link != 0) {
    
#line 3189 
    adapter->boot_coma = (unsigned char)20U;
    
#line 3190 
    if (phydev->speed == 10) {
      u16 register18;
      
#line 3193 
      et131x_mii_read(adapter,(unsigned char)18,& register18);
      
#line 3195 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)18,(unsigned short)((int)((unsigned int)register18 | 4U)));
      
#line 3198 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)16,(unsigned short)((int)((unsigned int)register18 | 33794U)));
      
#line 3200 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)17,(unsigned short)((int)((unsigned int)register18 | 511U)));
      
#line 3202 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)18,(unsigned short)((int)register18));
    }
    else ;
    
#line 3206 
    et1310_config_flow_control(adapter);
    
#line 3208 
    if (phydev->speed == 1000 && adapter->registry_jumbo_packet > 2048U) {
      u16 reg;
      
#line 3212 
      et131x_mii_read(adapter,(unsigned char)22,& reg);
      
#line 3213 
      reg = (unsigned short)((unsigned int)reg & 53247U);
      
#line 3214 
      reg = (unsigned short)((unsigned int)reg | 8192U);
      
#line 3215 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)22,(unsigned short)((int)reg));
    }
    else ;
    
#line 3219 
    et131x_set_rx_dma_timer(adapter);
    
#line 3220 
    et1310_config_mac_regs2(adapter);
  }
  else {
    
#line 3222 
    adapter->boot_coma = (unsigned char)0U;
    
#line 3224 
    if (phydev->speed == 10) {
      u16 register18_0;
      
#line 3227 
      et131x_mii_read(adapter,(unsigned char)18,& register18_0);
      
#line 3229 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)18,(unsigned short)((int)((unsigned int)register18_0 | 4U)));
      
#line 3232 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)16,(unsigned short)((int)((unsigned int)register18_0 | 33794U)));
      
#line 3234 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)17,(unsigned short)((int)((unsigned int)register18_0 | 511U)));
      
#line 3236 
      et131x_mii_write(adapter,(unsigned char)((int)((unsigned char)phydev->addr)),(unsigned char)18,(unsigned short)((int)register18_0));
    }
    else ;
    
#line 3240 
    et131x_free_busy_send_packets(adapter);
    
#line 3241 
    et131x_init_send(adapter);
    
#line 3248 
    et131x_soft_reset(adapter);
    
#line 3250 
    et131x_adapter_setup(adapter);
    
#line 3252 
    et131x_disable_txrx(netdev);
    
#line 3253 
    et131x_enable_txrx(netdev);
  }
  return_label: 
#line 3255 
                return;
}


#line 3257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_mii_probe(struct net_device *netdev)
{
  int __retres;
  char const *tmp_0;
  bool tmp_2;
  char const *tmp_3;
  
#line 3259 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3260 
  struct phy_device *phydev = (struct phy_device *)0;
  
#line 3262 
  phydev = phy_find_first(adapter->mii_bus);
  
#line 3263 
  if (phydev == (struct phy_device *)0) {
    
#line 3264 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"no PHY found\n");
    
#line 3265 
    __retres = -19;
    
#line 3265 
    goto return_label;
  }
  else ;
  
#line 3268 
  tmp_0 = dev_name((struct device const *)(& phydev->dev));
  
#line 3268 
  ;
  
#line 3268 
  phydev = phy_connect(netdev,tmp_0,& et131x_adjust_link,(enum ldv_29326)PHY_INTERFACE_MODE_MII);
  
#line 3271 
  tmp_2 = IS_ERR((void const *)phydev);
  
#line 3271 
  if ((int)tmp_2 != 0) {
    long tmp_1;
    
#line 3272 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Could not attach to PHY\n");
    
#line 3273 
    tmp_1 = PTR_ERR((void const *)phydev);
    
#line 3273 
    __retres = (int)tmp_1;
    
#line 3273 
    goto return_label;
  }
  else ;
  
#line 3276 
  phydev->supported &= 719U;
  
#line 3284 
  if ((unsigned int)(adapter->pdev)->device != 60673U) 
#line 3285 
                                                       phydev->supported |= 48U; else ;
  
#line 3288 
  phydev->advertising = phydev->supported;
  
#line 3289 
  phydev->autoneg = 1;
  
#line 3290 
  adapter->phydev = phydev;
  
#line 3292 
  tmp_3 = dev_name((struct device const *)(& phydev->dev));
  
#line 3292 
  ;
  
#line 3292 
  ;
  
#line 3292 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"attached PHY driver [%s] (mii_bus:phy_addr=%s)\n",(phydev->drv)->name,tmp_3);
  
#line 3296 
  __retres = 0;
  return_label: 
#line 3296 
                return __retres;
}


#line 3299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct et131x_adapter *et131x_adapter_init(struct net_device *netdev, struct pci_dev *pdev)
{
  struct et131x_adapter *adapter;
  
#line 3302 
  u8 const default_mac[6U] = {(unsigned char)0U, (unsigned char)5U, (unsigned char)61U, (unsigned char)0U, (unsigned char)2U, (unsigned char)0U};
  
#line 3306 
  adapter = (struct et131x_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 3307 
  adapter->pdev = pci_dev_get(pdev);
  
#line 3308 
  adapter->netdev = netdev;
  
#line 3310 
  spinlock_check(& adapter->tcb_send_qlock);
  {
    struct lock_class_key __key;
    
#line 3310 
    __raw_spin_lock_init(& adapter->tcb_send_qlock.__anonCompField_spinlock_18.rlock,"&(&adapter->tcb_send_qlock)->rlock",& __key);
  }
  
#line 3311 
  spinlock_check(& adapter->tcb_ready_qlock);
  {
    struct lock_class_key __key_0;
    
#line 3311 
    __raw_spin_lock_init(& adapter->tcb_ready_qlock.__anonCompField_spinlock_18.rlock,"&(&adapter->tcb_ready_qlock)->rlock",& __key_0);
  }
  
#line 3312 
  spinlock_check(& adapter->rcv_lock);
  {
    struct lock_class_key __key_1;
    
#line 3312 
    __raw_spin_lock_init(& adapter->rcv_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->rcv_lock)->rlock",& __key_1);
  }
  
#line 3314 
  adapter->registry_jumbo_packet = 1514U;
  
#line 3316 
  ether_addr_copy((u8 *)(& adapter->addr),(u8 const *)(& default_mac));
  
#line 3318 
  return adapter;
}


#line 3321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_pci_remove(struct pci_dev *pdev)
{
  
#line 3323 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3324 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3326 
  ldv_unregister_netdev_99(netdev);
  
#line 3327 
  netif_napi_del(& adapter->napi);
  
#line 3328 
  phy_disconnect(adapter->phydev);
  
#line 3329 
  mdiobus_unregister(adapter->mii_bus);
  
#line 3330 
  kfree((void const *)(adapter->mii_bus)->irq);
  
#line 3331 
  mdiobus_free(adapter->mii_bus);
  
#line 3333 
  et131x_adapter_memory_free(adapter);
  
#line 3334 
  iounmap((void volatile *)adapter->regs);
  
#line 3335 
  pci_dev_put(pdev);
  
#line 3337 
  ldv_free_netdev_100(netdev);
  
#line 3338 
  pci_release_regions(pdev);
  
#line 3339 
  pci_disable_device(pdev);
  
#line 3340 
  return;
}


#line 3342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_up(struct net_device *netdev)
{
  
#line 3344 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3346 
  et131x_enable_txrx(netdev);
  
#line 3347 
  phy_start(adapter->phydev);
  
#line 3348 
  return;
}


#line 3350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_down(struct net_device *netdev)
{
  
#line 3352 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3355 
  netdev->trans_start = jiffies;
  
#line 3357 
  phy_stop(adapter->phydev);
  
#line 3358 
  et131x_disable_txrx(netdev);
  
#line 3359 
  return;
}


#line 3362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_suspend(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  bool tmp_1;
  {
    
#line 3364 
    struct device const *__mptr = (struct device const *)dev;
    
#line 3364 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3364 
  struct pci_dev *pdev = tmp;
  
#line 3365 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3367 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3367 
  if ((int)tmp_1 != 0) {
    
#line 3368 
    netif_device_detach(netdev);
    
#line 3369 
    et131x_down(netdev);
    
#line 3370 
    pci_save_state(pdev);
  }
  else ;
  
#line 3373 
  __retres = 0;
  
#line 3373 
  return __retres;
}


#line 3376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_resume(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  bool tmp_1;
  {
    
#line 3378 
    struct device const *__mptr = (struct device const *)dev;
    
#line 3378 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3378 
  struct pci_dev *pdev = tmp;
  
#line 3379 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3381 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3381 
  if ((int)tmp_1 != 0) {
    
#line 3382 
    pci_restore_state(pdev);
    
#line 3383 
    et131x_up(netdev);
    
#line 3384 
    netif_device_attach(netdev);
  }
  else ;
  
#line 3387 
  __retres = 0;
  
#line 3387 
  return __retres;
}


#line 3391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct dev_pm_ops const et131x_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & et131x_suspend, .resume = & et131x_resume, .freeze = & et131x_suspend, .thaw = & et131x_resume, .poweroff = & et131x_suspend, .restore = & et131x_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 3393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static irqreturn_t et131x_isr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 status;
  int tmp_1;
  bool tmp_0;
  
#line 3395 
  bool handled = (_Bool)1;
  
#line 3396 
  bool enable_interrupts = (_Bool)1;
  
#line 3397 
  struct net_device *netdev = (struct net_device *)dev_id;
  
#line 3398 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3399 
  struct address_map *iomem = adapter->regs;
  
#line 3400 
  struct rx_ring *rx_ring = & adapter->rx_ring;
  
#line 3401 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 3404 
  tmp_0 = netif_device_present(netdev);
  
#line 3404 
  if (tmp_0) 
#line 3404 
             tmp_1 = 0; else 
#line 3404 
                             tmp_1 = 1;
  
#line 3404 
  if (tmp_1) {
    
#line 3405 
    handled = (_Bool)0;
    
#line 3406 
    enable_interrupts = (_Bool)0;
    
#line 3407 
    goto out;
  }
  else ;
  
#line 3410 
  et131x_disable_interrupts(adapter);
  
#line 3412 
  status = readl((void const volatile *)(& (adapter->regs)->global.int_status));
  
#line 3414 
  if ((unsigned int)adapter->flow <= 1U) 
#line 3415 
                                         status &= 82152U; else 
#line 3417 
                                                                status &= 81960U;
  
#line 3420 
  if (status == 0U) {
    
#line 3421 
    handled = (_Bool)0;
    
#line 3422 
    et131x_enable_interrupts(adapter);
    
#line 3423 
    goto out;
  }
  else ;
  
#line 3427 
  if ((status & 16384U) != 0U) {
    
#line 3428 
    struct tcb *tcb = tx_ring->send_head;
    
#line 3430 
    if (tcb != (struct tcb *)0) {
      
#line 3431 
      tcb->stale += 1U;
      
#line 3431 
      if (tcb->stale > 1U) 
#line 3432 
                           status |= 8U; else ;
    }
    else ;
    
#line 3434 
    if ((int)rx_ring->unfinished_receives != 0) 
#line 3435 
                                                status |= 32U;
    else 
      
#line 3436 
      if (tcb == (struct tcb *)0) 
#line 3437 
                                  writel(0U,(void volatile *)(& (adapter->regs)->global.watchdog_timer)); else ;
    
#line 3439 
    status &= 4294950911U;
  }
  else ;
  
#line 3442 
  if ((status & 40U) != 0U) {
    
#line 3443 
    enable_interrupts = (_Bool)0;
    
#line 3444 
    napi_schedule(& adapter->napi);
  }
  else ;
  
#line 3447 
  status &= 4294967255U;
  
#line 3449 
  if (status == 0U) 
#line 3450 
                    goto out; else ;
  
#line 3452 
  if ((status & 16U) != 0U) {
    
#line 3454 
    u32 txdma_err = readl((void const volatile *)(& iomem->txdma.tx_dma_error));
    
#line 3456 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"TXDMA_ERR interrupt, error = %d\n",txdma_err);
  }
  else ;
  
#line 3461 
  if ((status & 192U) != 0U) {
    
#line 3477 
    if ((unsigned int)adapter->flow <= 1U) {
      u32 pm_csr;
      int tmp_3;
      
#line 3483 
      pm_csr = readl((void const volatile *)(& iomem->global.pm_csr));
      
#line 3484 
      tmp_3 = et1310_in_phy_coma(adapter);
      
#line 3484 
      if (tmp_3 == 0) 
#line 3485 
                      writel(3U,(void volatile *)(& iomem->txmac.bp_ctrl)); else ;
    }
    else ;
  }
  else ;
  
#line 3490 
  if ((status & 256U) != 0U) ; else ;
  
#line 3500 
  if ((status & 512U) != 0U) {
    unsigned int tmp_4;
    
#line 3517 
    tmp_4 = readl((void const volatile *)(& iomem->txmac.tx_test));
    
#line 3517 
    ;
    
#line 3517 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"RxDMA_ERR interrupt, error %x\n",tmp_4);
  }
  else ;
  
#line 3522 
  if ((status & 32768U) != 0U) 
#line 3527 
                               dev_err((struct device const *)(& (adapter->pdev)->dev),"WAKE_ON_LAN interrupt\n"); else ;
  
#line 3530 
  if ((status & 131072U) != 0U) {
    
#line 3531 
    u32 err = readl((void const volatile *)(& iomem->txmac.err));
    
#line 3541 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"TXMAC interrupt, error 0x%08x\n",err);
  }
  else ;
  
#line 3549 
  if ((status & 262144U) != 0U) {
    unsigned int tmp_6;
    unsigned int tmp_7;
    unsigned int tmp_8;
    
#line 3555 
    tmp_6 = readl((void const volatile *)(& iomem->rxmac.err_reg));
    
#line 3554 
    ;
    
#line 3554 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"RXMAC interrupt, error 0x%08x.  Requesting reset\n",tmp_6);
    
#line 3560 
    tmp_7 = readl((void const volatile *)(& iomem->rxmac.rxq_diag));
    
#line 3559 
    tmp_8 = readl((void const volatile *)(& iomem->rxmac.ctrl));
    
#line 3558 
    ;
    
#line 3558 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"Enable 0x%08x, Diag 0x%08x\n",tmp_8,tmp_7);
  }
  else ;
  
#line 3568 
  if ((status & 524288U) != 0U) 
#line 3573 
                                et1310_handle_macstat_interrupt(adapter); else ;
  
#line 3576 
  if ((status & 1048576U) != 0U) ; else ;
  out: 
#line 3585 
  ;
  
#line 3586 
  if ((int)enable_interrupts != 0) 
#line 3587 
                                   et131x_enable_interrupts(adapter); else ;
  
#line 3589 
  __retres = (enum irqreturn)((int)handled != 0);
  
#line 3589 
  return __retres;
}


#line 3592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_poll(struct napi_struct *napi, int budget)
{
  struct et131x_adapter *tmp;
  {
    
#line 3595 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 3595 
    tmp = (struct et131x_adapter *)__mptr + 18446744073709551584U;
  }
  
#line 3594 
  struct et131x_adapter *adapter = tmp;
  
#line 3596 
  int work_done = et131x_handle_recv_pkts(adapter,budget);
  
#line 3598 
  et131x_handle_send_pkts(adapter);
  
#line 3600 
  if (work_done < budget) {
    
#line 3601 
    napi_complete(& adapter->napi);
    
#line 3602 
    et131x_enable_interrupts(adapter);
  }
  else ;
  
#line 3605 
  return work_done;
}


#line 3609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct net_device_stats *et131x_stats(struct net_device *netdev)
{
  
#line 3611 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3612 
  struct net_device_stats *stats = & (adapter->netdev)->stats;
  
#line 3613 
  struct ce_stats *devstat = & adapter->stats;
  
#line 3615 
  stats->rx_errors = (unsigned long)((((devstat->rx_length_errs + devstat->rx_align_errs) + devstat->rx_crc_errs) + devstat->rx_code_violations) + devstat->rx_other_errs);
  
#line 3620 
  stats->tx_errors = (unsigned long)devstat->tx_max_pkt_errs;
  
#line 3621 
  stats->multicast = (unsigned long)devstat->multicast_pkts_rcvd;
  
#line 3622 
  stats->collisions = (unsigned long)devstat->tx_collisions;
  
#line 3624 
  stats->rx_length_errors = (unsigned long)devstat->rx_length_errs;
  
#line 3625 
  stats->rx_over_errors = (unsigned long)devstat->rx_overflows;
  
#line 3626 
  stats->rx_crc_errors = (unsigned long)devstat->rx_crc_errs;
  
#line 3627 
  stats->rx_dropped = (unsigned long)devstat->rcvd_pkts_dropped;
  
#line 3639 
  return stats;
}


#line 3642  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_open(struct net_device *netdev)
{
  int __retres;
  int result;
  unsigned long tmp_0;
  
#line 3644 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3645 
  struct pci_dev *pdev = adapter->pdev;
  
#line 3646 
  unsigned int irq = pdev->irq;
  {
    struct lock_class_key __key;
    
#line 3650 
    init_timer_key(& adapter->error_timer,0U,"(&adapter->error_timer)",& __key);
  }
  
#line 3651 
  tmp_0 = msecs_to_jiffies(1000U);
  
#line 3651 
  adapter->error_timer.expires = tmp_0 + jiffies;
  
#line 3653 
  adapter->error_timer.function = & et131x_error_timer_handler;
  
#line 3654 
  adapter->error_timer.data = (unsigned long)adapter;
  
#line 3655 
  add_timer(& adapter->error_timer);
  
#line 3657 
  result = ldv_request_irq_101(irq,& et131x_isr,128UL,(char const *)(& netdev->name),(void *)netdev);
  
#line 3659 
  if (result != 0) {
    
#line 3660 
    dev_err((struct device const *)(& pdev->dev),"could not register IRQ %d\n",irq);
    
#line 3661 
    __retres = result;
    
#line 3661 
    goto return_label;
  }
  else ;
  
#line 3664 
  adapter->flags |= 8U;
  
#line 3666 
  napi_enable(& adapter->napi);
  
#line 3668 
  et131x_up(netdev);
  
#line 3670 
  __retres = result;
  return_label: 
#line 3670 
                return __retres;
}


#line 3673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_close(struct net_device *netdev)
{
  int tmp_0;
  
#line 3675 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3677 
  et131x_down(netdev);
  
#line 3678 
  napi_disable(& adapter->napi);
  
#line 3680 
  adapter->flags &= 4294967287U;
  
#line 3681 
  ldv_free_irq_102((adapter->pdev)->irq,(void *)netdev);
  
#line 3684 
  tmp_0 = ldv_del_timer_sync_103(& adapter->error_timer);
  
#line 3684 
  return tmp_0;
}


#line 3687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_ioctl(struct net_device *netdev, struct ifreq *reqbuf, int cmd)
{
  int __retres;
  int tmp_0;
  
#line 3690 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3692 
  if (adapter->phydev == (struct phy_device *)0) {
    
#line 3693 
    __retres = -22;
    
#line 3693 
    goto return_label;
  }
  else ;
  
#line 3695 
  tmp_0 = phy_mii_ioctl(adapter->phydev,reqbuf,cmd);
  
#line 3695 
  __retres = tmp_0;
  return_label: 
#line 3695 
                return __retres;
}


#line 3699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_set_packet_filter(struct et131x_adapter *adapter)
{
  int __retres;
  u32 ctrl;
  u32 pf_ctrl;
  
#line 3701 
  int filter = (int)adapter->packet_filter;
  
#line 3705 
  ctrl = readl((void const volatile *)(& (adapter->regs)->rxmac.ctrl));
  
#line 3706 
  pf_ctrl = readl((void const volatile *)(& (adapter->regs)->rxmac.pf_ctrl));
  
#line 3709 
  ctrl |= 4U;
  
#line 3714 
  if ((filter & 8) != 0 || filter == 0) 
#line 3715 
                                        pf_ctrl &= 4294967288U;
  else {
    
#line 3721 
    if ((filter & 16) != 0) 
#line 3722 
                            pf_ctrl &= 4294967293U;
    else {
      
#line 3724 
      et1310_setup_device_for_multicast(adapter);
      
#line 3725 
      pf_ctrl |= 2U;
      
#line 3726 
      ctrl &= 4294967291U;
    }
    
#line 3730 
    if ((filter & 1) != 0) {
      
#line 3731 
      et1310_setup_device_for_unicast(adapter);
      
#line 3732 
      pf_ctrl |= 4U;
      
#line 3733 
      ctrl &= 4294967291U;
    }
    else ;
    
#line 3737 
    if ((filter & 4) != 0) {
      
#line 3738 
      pf_ctrl |= 1U;
      
#line 3739 
      ctrl &= 4294967291U;
    }
    else 
#line 3741 
         pf_ctrl &= 4294967294U;
    
#line 3748 
    writel(pf_ctrl,(void volatile *)(& (adapter->regs)->rxmac.pf_ctrl));
    
#line 3749 
    writel(ctrl,(void volatile *)(& (adapter->regs)->rxmac.ctrl));
  }
  
#line 3751 
  __retres = 0;
  
#line 3751 
  return __retres;
}


#line 3754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_multicast(struct net_device *netdev)
{
  int packet_filter;
  struct netdev_hw_addr *ha;
  int i;
  struct netdev_hw_addr *tmp_0;
  int tmp_1;
  struct netdev_hw_addr *tmp_2;
  
#line 3756 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3765 
  packet_filter = (int)adapter->packet_filter;
  
#line 3772 
  packet_filter &= -3;
  
#line 3777 
  if ((netdev->flags & 256U) != 0U) 
#line 3778 
                                    adapter->packet_filter |= 8U; else 
                                                                    
#line 3780 
                                                                    adapter->packet_filter &= 4294967287U;
  
#line 3782 
  if ((netdev->flags & 512U) != 0U || netdev->mc.count > 128) 
#line 3784 
                                                              adapter->packet_filter |= 16U; else ;
  
#line 3786 
  if (netdev->mc.count <= 0) {
    
#line 3787 
    adapter->packet_filter &= 4294967279U;
    
#line 3788 
    adapter->packet_filter &= 4294967293U;
  }
  else 
#line 3790 
       adapter->packet_filter |= 2U;
  
#line 3794 
  i = 0;
  {
    
#line 3795 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 3795 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 3795 
  ha = tmp_0;
  
#line 3795 
  goto ldv_47472;
  ldv_47471: 
#line 3796 
  ;
  
#line 3796 
  if (i == 128) 
#line 3797 
                goto ldv_47470; else ;
  
#line 3798 
  ;
  
#line 3798 
  tmp_1 = i;
  
#line 3798 
  i += 1;
  
#line 3798 
  ;
  
#line 3798 
  ether_addr_copy((u8 *)(& adapter->multicast_list[tmp_1]),(u8 const *)(& ha->addr));
  {
    
#line 3795 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 3795 
    tmp_2 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 3795 
  ha = tmp_2;
  ldv_47472: 
#line 3797 
  ;
  
#line 3795 
  if (& ha->list != & netdev->mc.list) 
#line 3797 
                                       goto ldv_47471; else 
#line 3800 
                                                            goto ldv_47470;
  ldv_47470: 
#line 3801 
  ;
  
#line 3800 
  adapter->multicast_addr_count = (unsigned int)i;
  
#line 3808 
  if (adapter->packet_filter != (unsigned int)packet_filter) 
#line 3809 
                                                             et131x_set_packet_filter(adapter); else ;
  
#line 3810 
  return;
}


#line 3812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static netdev_tx_t et131x_tx(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  int tmp_4;
  
#line 3814 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3815 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 3818 
  if (tx_ring->used > 62) {
    int tmp_1;
    bool tmp_0;
    
#line 3818 
    tmp_0 = netif_queue_stopped((struct net_device const *)netdev);
    
#line 3818 
    if (tmp_0) 
#line 3818 
               tmp_1 = 0; else 
#line 3818 
                               tmp_1 = 1;
    
#line 3818 
    if (tmp_1) 
#line 3819 
               netif_start_queue(netdev); else ;
  }
  else ;
  
#line 3822 
  netdev->trans_start = jiffies;
  
#line 3825 
  if (tx_ring->used > 63) 
#line 3826 
                          goto drop_err; else ;
  
#line 3828 
  if ((adapter->flags & 1072693248U) != 0U) 
#line 3830 
                                            goto drop_err;
  else {
    int tmp_3;
    bool tmp_2;
    
#line 3829 
    tmp_2 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 3829 
    if (tmp_2) 
#line 3829 
               tmp_3 = 0; else 
#line 3829 
                               tmp_3 = 1;
    
#line 3829 
    if (tmp_3) 
#line 3830 
               goto drop_err; else ;
  }
  
#line 3832 
  tmp_4 = send_packet(skb,adapter);
  
#line 3832 
  if (tmp_4 != 0) 
#line 3833 
                  goto drop_err; else ;
  
#line 3835 
  __retres = NETDEV_TX_OK;
  
#line 3835 
  goto return_label;
  drop_err: 
#line 3837 
  ;
  
#line 3838 
  dev_kfree_skb_any(skb);
  
#line 3839 
  (adapter->netdev)->stats.tx_dropped += 1UL;
  
#line 3840 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 3840 
                return __retres;
}


#line 3849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_tx_timeout(struct net_device *netdev)
{
  struct tcb *tcb;
  unsigned long flags;
  
#line 3851 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3852 
  struct tx_ring *tx_ring = & adapter->tx_ring;
  
#line 3858 
  goto return_label;
  
#line 3863 
  if ((adapter->flags & 8388608U) != 0U) 
#line 3864 
                                         goto return_label; else ;
  
#line 3867 
  if ((adapter->flags & 67108864U) != 0U) {
    
#line 3868 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"hardware error - reset\n");
    
#line 3869 
    goto return_label;
  }
  else ;
  
#line 3873 
  ldv___ldv_spin_lock_104(& adapter->tcb_send_qlock);
  
#line 3874 
  tcb = tx_ring->send_head;
  
#line 3875 
  ldv_spin_unlock_irqrestore_105(& adapter->tcb_send_qlock,flags);
  
#line 3877 
  if (tcb != (struct tcb *)0) {
    
#line 3878 
    tcb->count += 1U;
    
#line 3880 
    if (tcb->count != 0U) {
      
#line 3881 
      dev_warn((struct device const *)(& (adapter->pdev)->dev),"Send stuck - reset. tcb->WrIndex %x\n",tcb->index);
      
#line 3885 
      (adapter->netdev)->stats.tx_errors += 1UL;
      
#line 3888 
      et131x_disable_txrx(netdev);
      
#line 3889 
      et131x_enable_txrx(netdev);
    }
    else ;
  }
  else ;
  return_label: 
#line 3877 
                return;
}


#line 3894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  
#line 3896 
  int result = 0;
  
#line 3897 
  struct et131x_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3899 
  if ((unsigned int)new_mtu + 4294967232U > 9152U) {
    
#line 3900 
    __retres = -22;
    
#line 3900 
    goto return_label;
  }
  else ;
  
#line 3902 
  et131x_disable_txrx(netdev);
  
#line 3904 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 3906 
  et131x_adapter_memory_free(adapter);
  
#line 3909 
  adapter->registry_jumbo_packet = (unsigned int)(new_mtu + 14);
  
#line 3910 
  et131x_soft_reset(adapter);
  
#line 3912 
  result = et131x_adapter_memory_alloc(adapter);
  
#line 3913 
  if (result != 0) {
    
#line 3914 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"Change MTU failed; couldn\'t re-alloc DMA memory\n");
    
#line 3916 
    __retres = result;
    
#line 3916 
    goto return_label;
  }
  else ;
  
#line 3919 
  et131x_init_send(adapter);
  
#line 3920 
  et131x_hwaddr_init(adapter);
  
#line 3921 
  ether_addr_copy(netdev->dev_addr,(u8 const *)(& adapter->addr));
  
#line 3924 
  et131x_adapter_setup(adapter);
  
#line 3925 
  et131x_enable_txrx(netdev);
  
#line 3927 
  __retres = result;
  return_label: 
#line 3927 
                return __retres;
}


#line 3930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct net_device_ops const et131x_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & et131x_open, .ndo_stop = & et131x_close, .ndo_start_xmit = & et131x_tx, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & et131x_multicast, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & et131x_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & et131x_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & et131x_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & et131x_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_pci_setup(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  struct et131x_adapter *adapter;
  int rc;
  int ii;
  int tmp;
  
#line 3951 
  rc = pci_enable_device(pdev);
  
#line 3952 
  if (rc < 0) {
    
#line 3953 
    dev_err((struct device const *)(& pdev->dev),"pci_enable_device() failed\n");
    
#line 3954 
    goto out;
  }
  else ;
  
#line 3958 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 3959 
    dev_err((struct device const *)(& pdev->dev),"Can\'t find PCI device\'s base address\n");
    
#line 3960 
    rc = -19;
    
#line 3961 
    goto err_disable;
  }
  else ;
  
#line 3964 
  rc = pci_request_regions(pdev,"et131x");
  
#line 3965 
  if (rc < 0) {
    
#line 3966 
    dev_err((struct device const *)(& pdev->dev),"Can\'t get PCI resources\n");
    
#line 3967 
    goto err_disable;
  }
  else ;
  
#line 3970 
  pci_set_master(pdev);
  
#line 3973 
  tmp = dma_set_mask_and_coherent(& pdev->dev,18446744073709551615ULL);
  
#line 3973 
  if (tmp != 0) {
    int tmp_0;
    
#line 3973 
    tmp_0 = dma_set_mask_and_coherent(& pdev->dev,4294967295ULL);
    
#line 3973 
    if (tmp_0 != 0) {
      
#line 3975 
      dev_err((struct device const *)(& pdev->dev),"No usable DMA addressing method\n");
      
#line 3976 
      rc = -5;
      
#line 3977 
      goto err_release_res;
    }
    else ;
  }
  else ;
  
#line 3980 
  netdev = ldv_alloc_etherdev_mqs_106(1736,1U,1U);
  
#line 3981 
  if (netdev == (struct net_device *)0) {
    
#line 3982 
    dev_err((struct device const *)(& pdev->dev),"Couldn\'t alloc netdev struct\n");
    
#line 3983 
    rc = -12;
    
#line 3984 
    goto err_release_res;
  }
  else ;
  
#line 3987 
  netdev->watchdog_timeo = 250;
  
#line 3988 
  netdev->netdev_ops = & et131x_netdev_ops;
  
#line 3990 
  netdev->dev.parent = & pdev->dev;
  
#line 3991 
  netdev->ethtool_ops = (struct ethtool_ops const *)(& et131x_ethtool_ops);
  
#line 3993 
  adapter = et131x_adapter_init(netdev,pdev);
  
#line 3995 
  rc = et131x_pci_init(adapter,pdev);
  
#line 3996 
  if (rc < 0) 
#line 3997 
              goto err_free_dev; else ;
  
#line 4000 
  adapter->regs = (struct address_map *)pci_ioremap_bar(pdev,0);
  
#line 4001 
  if (adapter->regs == (struct address_map *)0) {
    
#line 4002 
    dev_err((struct device const *)(& pdev->dev),"Cannot map device registers\n");
    
#line 4003 
    rc = -12;
    
#line 4004 
    goto err_free_dev;
  }
  else ;
  
#line 4008 
  writel(56U,(void volatile *)(& (adapter->regs)->global.pm_csr));
  
#line 4010 
  et131x_soft_reset(adapter);
  
#line 4011 
  et131x_disable_interrupts(adapter);
  
#line 4013 
  rc = et131x_adapter_memory_alloc(adapter);
  
#line 4014 
  if (rc < 0) {
    
#line 4015 
    dev_err((struct device const *)(& pdev->dev),"Could not alloc adapter memory (DMA)\n");
    
#line 4016 
    goto err_iounmap;
  }
  else ;
  
#line 4019 
  et131x_init_send(adapter);
  
#line 4021 
  netif_napi_add(netdev,& adapter->napi,& et131x_poll,64);
  
#line 4023 
  ether_addr_copy(netdev->dev_addr,(u8 const *)(& adapter->addr));
  
#line 4025 
  rc = -12;
  
#line 4027 
  adapter->mii_bus = mdiobus_alloc();
  
#line 4028 
  if (adapter->mii_bus == (struct mii_bus *)0) {
    
#line 4029 
    dev_err((struct device const *)(& pdev->dev),"Alloc of mii_bus struct failed\n");
    
#line 4030 
    goto err_mem_free;
  }
  else ;
  
#line 4033 
  (adapter->mii_bus)->name = "et131x_eth_mii";
  
#line 4034 
  snprintf((char *)(& (adapter->mii_bus)->id),17UL,"%x",(unsigned int)((int)((adapter->pdev)->bus)->number << 8) | (adapter->pdev)->devfn);
  
#line 4036 
  (adapter->mii_bus)->priv = (void *)netdev;
  
#line 4037 
  (adapter->mii_bus)->read = & et131x_mdio_read;
  
#line 4038 
  (adapter->mii_bus)->write = & et131x_mdio_write;
  
#line 4039 
  (adapter->mii_bus)->irq = (int *)kmalloc_array(32UL,4UL,208U);
  
#line 4041 
  if ((adapter->mii_bus)->irq == (int *)0) 
#line 4042 
                                           goto err_mdio_free; else ;
  
#line 4044 
  ii = 0;
  
#line 4044 
  goto ldv_47510;
  ldv_47509: 
#line 4045 
  ;
  
#line 4045 
  *((adapter->mii_bus)->irq + ii) = -1;
  
#line 4044 
  ii += 1;
  ldv_47510: 
#line 4045 
  ;
  
#line 4044 
  if (ii <= 31) 
#line 4046 
                goto ldv_47509; else 
#line 4049 
                                     goto ldv_47511;
  ldv_47511: 
#line 4050 
  ;
  
#line 4047 
  rc = mdiobus_register(adapter->mii_bus);
  
#line 4048 
  if (rc < 0) {
    
#line 4049 
    dev_err((struct device const *)(& pdev->dev),"failed to register MII bus\n");
    
#line 4050 
    goto err_mdio_free_irq;
  }
  else ;
  
#line 4053 
  rc = et131x_mii_probe(netdev);
  
#line 4054 
  if (rc < 0) {
    
#line 4055 
    dev_err((struct device const *)(& pdev->dev),"failed to probe MII bus\n");
    
#line 4056 
    goto err_mdio_unregister;
  }
  else ;
  
#line 4059 
  et131x_adapter_setup(adapter);
  
#line 4062 
  adapter->boot_coma = (unsigned char)0U;
  
#line 4063 
  et1310_disable_phy_coma(adapter);
  
#line 4072 
  rc = ldv_register_netdev_107(netdev);
  
#line 4073 
  if (rc < 0) {
    
#line 4074 
    dev_err((struct device const *)(& pdev->dev),"register_netdev() failed\n");
    
#line 4075 
    goto err_phy_disconnect;
  }
  else ;
  
#line 4082 
  pci_set_drvdata(pdev,(void *)netdev);
  out: 
#line 4083 
  ;
  
#line 4084 
  __retres = rc;
  
#line 4084 
  goto return_label;
  err_phy_disconnect: 
#line 4086 
  ;
  
#line 4087 
  phy_disconnect(adapter->phydev);
  err_mdio_unregister: 
#line 4088 
  ;
  
#line 4089 
  mdiobus_unregister(adapter->mii_bus);
  err_mdio_free_irq: 
#line 4090 
  ;
  
#line 4091 
  kfree((void const *)(adapter->mii_bus)->irq);
  err_mdio_free: 
#line 4092 
  ;
  
#line 4093 
  mdiobus_free(adapter->mii_bus);
  err_mem_free: 
#line 4094 
  ;
  
#line 4095 
  et131x_adapter_memory_free(adapter);
  err_iounmap: 
#line 4096 
  ;
  
#line 4097 
  iounmap((void volatile *)adapter->regs);
  err_free_dev: 
#line 4098 
  ;
  
#line 4099 
  pci_dev_put(pdev);
  
#line 4100 
  ldv_free_netdev_108(netdev);
  err_release_res: 
#line 4101 
  ;
  
#line 4102 
  pci_release_regions(pdev);
  err_disable: 
#line 4103 
  ;
  
#line 4104 
  pci_disable_device(pdev);
  
#line 4105 
  goto out;
  return_label: 
#line 4105 
                return __retres;
}


#line 4108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct pci_device_id const et131x_pci_table[3U] = {{.vendor = 4545U, .device = 60672U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4545U, .device = 60673U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 4113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
struct pci_device_id const __mod_pci__et131x_pci_table_device_table[3U];

#line 4115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static struct pci_driver et131x_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "et131x", .id_table = (struct pci_device_id const *)(& et131x_pci_table), .probe = & et131x_pci_setup, .remove = & et131x_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & et131x_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 4123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static int et131x_driver_init(void)
{
  int tmp;
  
#line 4123 
  tmp = ldv___pci_register_driver_109(& et131x_driver,& __this_module,"et131x");
  
#line 4123 
  return tmp;
}


#line 4123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/agere/et131x.c"
static void et131x_driver_exit(void)
{
  
#line 4123 
  ldv_pci_unregister_driver_110(& et131x_driver);
  
#line 4124 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int (*ldv_emg_alias_eth_mac_addr_14)(struct net_device *, void *) = & eth_mac_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int (*ldv_emg_alias_eth_validate_addr_5)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_3)(struct net_device *) = & ethtool_op_get_link;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
struct pci_driver *ldv_emg_alias_et131x_driver_2 = & et131x_driver;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
struct dev_pm_ops *ldv_emg_alias_et131x_pm_ops_3 = (struct dev_pm_ops *)(& et131x_pm_ops);

#line 63 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 64 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 67 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 68 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 69 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 70 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 71 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_ioctl_4(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 77 
  tmp = et131x_ioctl(arg0,arg1,arg2);
  
#line 77 
  return tmp;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_get_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 82 
  tmp = et131x_get_settings(arg0,arg1);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_wrapper_et131x_pci_remove_3(struct pci_dev *arg0)
{
  
#line 87 
  et131x_pci_remove(arg0);
  
#line 88 
  return;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
enum netdev_tx ldv_emg_wrapper_et131x_tx_13(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 92 
  tmp = et131x_tx(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
enum irqreturn ldv_emg_wrapper_et131x_isr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 97 
  tmp = et131x_isr(arg0,arg1);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_wrapper_et131x_get_drvinfo_10(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 102 
  et131x_get_drvinfo(arg0,arg1);
  
#line 103 
  return;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_set_settings_7(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 107 
  tmp = et131x_set_settings(arg0,arg1);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_et131x_driver_exit(void)
{
  
#line 112 
  et131x_driver_exit();
  
#line 113 
  return;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
struct net_device_stats *ldv_emg_wrapper_et131x_stats_11(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 116 
  tmp = et131x_stats(arg0);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_change_mtu_6(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 121 
  tmp = et131x_change_mtu(arg0,arg1);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_wrapper_et131x_get_regs_8(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 126 
  et131x_get_regs(arg0,arg1,arg2);
  
#line 127 
  return;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_resume_4(struct device *arg0)
{
  int tmp;
  
#line 131 
  tmp = et131x_resume(arg0);
  
#line 131 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_wrapper_et131x_multicast_15(struct net_device *arg0)
{
  
#line 136 
  et131x_multicast(arg0);
  
#line 137 
  return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
void ldv_emg_wrapper_et131x_tx_timeout_9(struct net_device *arg0)
{
  
#line 141 
  et131x_tx_timeout(arg0);
  
#line 142 
  return;
}


#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 146 
  tmp = et131x_suspend(arg0);
  
#line 146 
  return tmp;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_et131x_driver_init(void)
{
  int tmp;
  
#line 151 
  tmp = et131x_driver_init();
  
#line 151 
  return tmp;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 155 
  tmp = et131x_open(arg0);
  
#line 155 
  return tmp;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_get_regs_len_12(struct net_device *arg0)
{
  int tmp;
  
#line 160 
  tmp = et131x_get_regs_len(arg0);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_pci_setup_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 165 
  tmp = et131x_pci_setup(arg0,(struct pci_device_id const *)arg1);
  
#line 165 
  return tmp;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
int ldv_emg_wrapper_et131x_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 170 
  tmp = et131x_close(arg0);
  
#line 170 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 185 
  tmp = ldv_ptr_err(ptr);
  
#line 185 
  return tmp;
}


#line 189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 193 
  ret = ldv_is_err(ptr);
  
#line 194 
  __retres = (_Bool)(ret != 0L);
  
#line 194 
  return __retres;
}


#line 585  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 588 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 588 
  return tmp;
}


#line 592  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 595 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 595 
  return tmp;
}


#line 599  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 602 
  tmp = ldv_kzalloc(size,flags);
  
#line 602 
  return tmp;
}


#line 845  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 849 
  ldv_spin_model_lock((char *)"rcv_lock_of_et131x_adapter");
  
#line 851 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 852 
  return;
}


#line 855  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 859 
  ldv_spin_model_unlock((char *)"rcv_lock_of_et131x_adapter");
  
#line 861 
  spin_unlock_irqrestore(lock,flags);
  
#line 862 
  return;
}


#line 865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 869 
  ldv_spin_model_lock((char *)"rcv_lock_of_et131x_adapter");
  
#line 871 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 872 
  return;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 879 
  ldv_spin_model_unlock((char *)"rcv_lock_of_et131x_adapter");
  
#line 881 
  spin_unlock_irqrestore(lock,flags);
  
#line 882 
  return;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 889 
  ldv_spin_model_lock((char *)"rcv_lock_of_et131x_adapter");
  
#line 891 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 892 
  return;
}


#line 895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 899 
  ldv_spin_model_unlock((char *)"rcv_lock_of_et131x_adapter");
  
#line 901 
  spin_unlock_irqrestore(lock,flags);
  
#line 902 
  return;
}


#line 905  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 909 
  ldv_spin_model_unlock((char *)"rcv_lock_of_et131x_adapter");
  
#line 911 
  spin_unlock_irqrestore(lock,flags);
  
#line 912 
  return;
}


#line 915  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_lock_79(spinlock_t *lock)
{
  
#line 919 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 921 
  spin_lock(lock);
  
#line 922 
  return;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_80(spinlock_t *lock)
{
  
#line 929 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 931 
  spin_unlock(lock);
  
#line 932 
  return;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 939 
  ldv_spin_model_lock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 941 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 949 
  ldv_spin_model_unlock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 951 
  spin_unlock_irqrestore(lock,flags);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 959 
  ldv_spin_model_unlock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 961 
  spin_unlock_irqrestore(lock,flags);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1)
{
  
#line 969 
  ldv_spin_model_lock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 971 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 972 
  return;
}


#line 975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags)
{
  
#line 979 
  ldv_spin_model_unlock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 981 
  spin_unlock_irqrestore(lock,flags);
  
#line 982 
  return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1)
{
  
#line 989 
  ldv_spin_model_lock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 991 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 999 
  ldv_spin_model_unlock((char *)"tcb_ready_qlock_of_et131x_adapter");
  
#line 1001 
  spin_unlock_irqrestore(lock,flags);
  
#line 1002 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1)
{
  
#line 1009 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1011 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 1019 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1021 
  spin_unlock_irqrestore(lock,flags);
  
#line 1022 
  return;
}


#line 1025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 1029 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1031 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1032 
  return;
}


#line 1035  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 1039 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1041 
  spin_unlock_irqrestore(lock,flags);
  
#line 1042 
  return;
}


#line 1045  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1)
{
  
#line 1049 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1051 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1052 
  return;
}


#line 1055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags)
{
  
#line 1059 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1061 
  spin_unlock_irqrestore(lock,flags);
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1)
{
  
#line 1069 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1071 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags)
{
  
#line 1079 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1081 
  spin_unlock_irqrestore(lock,flags);
  
#line 1082 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1)
{
  
#line 1089 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1091 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1092 
  return;
}


#line 1095  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags)
{
  
#line 1099 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1101 
  spin_unlock_irqrestore(lock,flags);
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static int ldv_mod_timer_98(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1109 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1109 
  return tmp;
}


#line 1113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_unregister_netdev_99(struct net_device *ldv_func_arg1)
{
  
#line 1117 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_free_netdev_100(struct net_device *ldv_func_arg1)
{
  
#line 1125 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1126 
  return;
}


#line 1129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static int ldv_request_irq_101(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1133 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1133 
  return tmp;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_free_irq_102(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1141 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1142 
  return;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static int ldv_del_timer_sync_103(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1149 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1149 
  return tmp;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1)
{
  
#line 1157 
  ldv_spin_model_lock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1159 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1160 
  return;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags)
{
  
#line 1167 
  ldv_spin_model_unlock((char *)"tcb_send_qlock_of_et131x_adapter");
  
#line 1169 
  spin_unlock_irqrestore(lock,flags);
  
#line 1170 
  return;
}


#line 1173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_106(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1177 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1177 
  return tmp;
}


#line 1181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static int ldv_register_netdev_107(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1185 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1185 
  return tmp;
}


#line 1189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_free_netdev_108(struct net_device *ldv_func_arg1)
{
  
#line 1193 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1194 
  return;
}


#line 1197  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static int ldv___pci_register_driver_109(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1201 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1201 
  return tmp;
}


#line 1205  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/weaver/.tmp_et131x.c.aux"
static void ldv_pci_unregister_driver_110(struct pci_driver *ldv_func_arg1)
{
  
#line 1209 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1210 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 74 
int main(void);


#line 75 
void ldv_dispatch_register_10_4(struct net_device *arg0);


#line 76 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 78 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 80 
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0);


#line 81 
void *ldv_initialization_1(void *arg0);


#line 82 
void *ldv_timer_scenario_13(void *arg0);


#line 83 
void *ldv_random_allocationless_scenario_14(void *arg0);


#line 86 
void *ldv_interrupt_scenario_15(void *arg0);


#line 88 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 90 
void *ldv_pm_ops_scenario_16(void *arg0);


#line 91 
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 92 
void *ldv_pci_scenario_12(void *arg0);


#line 93 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 112 
  ldv_8_timer_list = arg0;
  
#line 116 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 117 
  ;
  
#line 117 
  __retres = 0;
  
#line 117 
  return __retres;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 128 
  ldv_initialize();
  
#line 131 
  ldv_initialization_1((void *)0);
  
#line 133 
  __retres = 0;
  
#line 133 
  return __retres;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 141 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_et131x_driver_2;
  
#line 145 
  tmp_0 = ldv_undef_int();
  
#line 145 
  if (tmp_0 != 0) {
    
#line 147 
    ldv_7_pci_driver = arg0;
    
#line 151 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 155 
    __retres = 0;
    
#line 155 
    goto return_label;
  }
  else {
    int tmp;
    
#line 162 
    tmp = ldv_undef_int_negative();
    
#line 162 
    __retres = tmp;
    
#line 162 
    goto return_label;
  }
  return_label: 
#line 145 
                return __retres;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 175 
  tmp = ldv_undef_int();
  
#line 175 
  switch (tmp) {
    case 0: 
#line 176 
    ;
    
#line 177 
    cf_arg_14 = (struct ldv_struct_random_allocationless_scenario_14 *)ldv_xmalloc(16UL);
    
#line 178 
    cf_arg_14->arg0 = arg0;
    
#line 179 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_14,(void *)cf_arg_14);
    
#line 180 
    __VERIFIER_assume(ret == 0);
    
#line 181 
    goto ldv_44707;
    default: 
#line 183 
    ;
    
#line 183 
    __VERIFIER_assume(0);
  }
  ldv_44707: 
#line 184 
  ;
  
#line 185 
  return;
}


#line 189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_15;
  int tmp;
  
#line 192 
  tmp = ldv_undef_int();
  
#line 192 
  switch (tmp) {
    case 0: 
#line 193 
    ;
    
#line 194 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 195 
    __VERIFIER_assume(ret == 0);
    
#line 196 
    goto ldv_44715;
    default: 
#line 198 
    ;
    
#line 198 
    __VERIFIER_assume(0);
  }
  ldv_44715: 
#line 199 
  ;
  
#line 200 
  return;
}


#line 204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 211 
  tmp_0 = ldv_undef_int();
  
#line 211 
  if (tmp_0 != 0) {
    
#line 213 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 217 
    __retres = ldv_5_netdev;
    
#line 217 
    goto return_label;
  }
  else {
    
#line 224 
    __retres = (struct net_device *)0;
    
#line 224 
    goto return_label;
  }
  return_label: 
#line 211 
                return __retres;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 237 
  tmp = ldv_undef_int();
  
#line 237 
  switch (tmp) {
    case 0: 
#line 238 
    ;
    
#line 239 
    cf_arg_12 = (struct ldv_struct_pci_scenario_12 *)ldv_xmalloc(16UL);
    
#line 240 
    cf_arg_12->arg0 = arg0;
    
#line 241 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_pci_scenario_12,(void *)cf_arg_12);
    
#line 242 
    __VERIFIER_assume(ret == 0);
    
#line 243 
    goto ldv_44729;
    default: 
#line 245 
    ;
    
#line 245 
    __VERIFIER_assume(0);
  }
  ldv_44729: 
#line 246 
  ;
  
#line 247 
  return;
}


#line 251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp_0;
  
#line 256 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_et131x_isr_2;
  
#line 261 
  tmp_0 = ldv_undef_int();
  
#line 261 
  if (tmp_0 != 0) {
    
#line 263 
    ldv_11_line = (int)arg0;
    
#line 264 
    ldv_11_callback = arg1;
    
#line 265 
    ldv_11_thread = (enum irqreturn (*)(int , void *))0;
    
#line 266 
    ldv_11_data = arg4;
    
#line 270 
    ldv_dispatch_irq_register_11_3(ldv_11_line,ldv_11_callback,ldv_11_thread,ldv_11_data);
    
#line 274 
    __retres = 0;
    
#line 274 
    goto return_label;
  }
  else {
    int tmp;
    
#line 281 
    tmp = ldv_undef_int_negative();
    
#line 281 
    __retres = tmp;
    
#line 281 
    goto return_label;
  }
  return_label: 
#line 261 
                return __retres;
}


#line 291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 294 
  tmp = ldv_undef_int();
  
#line 294 
  switch (tmp) {
    case 0: 
#line 295 
    ;
    
#line 296 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 297 
    __VERIFIER_assume(ret == 0);
    
#line 298 
    goto ldv_44754;
    default: 
#line 300 
    ;
    
#line 300 
    __VERIFIER_assume(0);
  }
  ldv_44754: 
#line 301 
  ;
  
#line 302 
  return;
}


#line 306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 313 
  ldv_1_ret = ldv_emg_et131x_driver_init();
  
#line 314 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 317 
  tmp = ldv_undef_int();
  
#line 317 
  if (tmp != 0) {
    
#line 319 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 323 
    __retres = (void *)0;
    
#line 323 
    goto return_label;
  }
  else {
    
#line 327 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 332 
    ldv_emg_et131x_driver_exit();
    
#line 336 
    __retres = (void *)0;
    
#line 336 
    goto return_label;
  }
  
#line 339 
  __retres = (void *)0;
  return_label: 
#line 339 
                return __retres;
}


#line 344  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_13(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_13_container;
  
#line 349 
  struct ldv_struct_timer_scenario_13 *data = (struct ldv_struct_timer_scenario_13 *)arg0;
  
#line 354 
  if (data != (struct ldv_struct_timer_scenario_13 *)0) {
    
#line 355 
    ldv_13_container = data->arg0;
    
#line 356 
    ldv_free((void *)data);
  }
  else ;
  
#line 361 
  if (ldv_13_container->function != (void (*)(unsigned long ))0) {
    
#line 363 
    ldv_switch_to_interrupt_context();
    
#line 365 
    (*(ldv_13_container->function))(ldv_13_container->data);
    
#line 367 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 376 
  __retres = (void *)0;
  
#line 376 
  goto return_label;
  
#line 378 
  __retres = (void *)0;
  return_label: 
#line 378 
                return __retres;
}


#line 383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_14(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_14_ldv_param_0_10;
  struct ethtool_cmd *ldv_14_ldv_param_1_2;
  struct ifreq *ldv_14_ldv_param_1_3;
  int ldv_14_ldv_param_1_5;
  void *ldv_14_ldv_param_1_11;
  void *ldv_14_ldv_param_2_8;
  int ldv_14_ldv_param_2_4;
  struct ethtool_regs *ldv_14_ldv_param_1_7;
  struct ethtool_cmd *ldv_14_ldv_param_1_6;
  struct net_device *ldv_14_container;
  struct ethtool_drvinfo *ldv_14_ldv_param_1_9;
  int tmp_6;
  
#line 398 
  struct ldv_struct_random_allocationless_scenario_14 *data = (struct ldv_struct_random_allocationless_scenario_14 *)arg0;
  
#line 403 
  if (data != (struct ldv_struct_random_allocationless_scenario_14 *)0) {
    
#line 404 
    ldv_14_container = data->arg0;
    
#line 405 
    ldv_free((void *)data);
  }
  else ;
  
#line 413 
  goto ldv_call_14;
  
#line 415 
  __retres = (void *)0;
  
#line 415 
  goto return_label;
  ldv_call_14: 
#line 418 
  ;
  
#line 421 
  tmp_6 = ldv_undef_int();
  
#line 421 
  if (tmp_6 != 0) {
    int tmp_0;
    
#line 423 
    ldv_14_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 426 
    tmp_0 = ldv_undef_int();
    
#line 426 
    switch (tmp_0) {
      case 1: 
#line 427 
      ;
      
#line 430 
      ldv_emg_wrapper_et131x_get_settings_2(ldv_14_container,ldv_14_ldv_param_1_2);
      
#line 433 
      goto ldv_44782;
      case 2: 
#line 435 
      ;
      
#line 438 
      ldv_emg_wrapper_et131x_multicast_15(ldv_14_container);
      
#line 441 
      goto ldv_44782;
      case 3: 
#line 443 
      ;
      
#line 445 
      ldv_14_ldv_param_1_11 = ldv_xmalloc_unknown_size(0UL);
      
#line 450 
      (*ldv_emg_alias_eth_mac_addr_14)(ldv_14_container,ldv_14_ldv_param_1_11);
      
#line 454 
      ldv_free(ldv_14_ldv_param_1_11);
      
#line 457 
      goto ldv_44782;
      case 4: 
#line 459 
      ;
      
#line 461 
      ldv_14_ldv_param_0_10 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 466 
      ldv_emg_wrapper_et131x_tx_13(ldv_14_ldv_param_0_10,ldv_14_container);
      
#line 470 
      ldv_free((void *)ldv_14_ldv_param_0_10);
      
#line 473 
      goto ldv_44782;
      case 5: 
#line 475 
      ;
      
#line 478 
      ldv_emg_wrapper_et131x_get_regs_len_12(ldv_14_container);
      
#line 481 
      goto ldv_44782;
      case 6: 
#line 483 
      ;
      
#line 486 
      ldv_emg_wrapper_et131x_stats_11(ldv_14_container);
      
#line 489 
      goto ldv_44782;
      case 7: 
#line 491 
      ;
      
#line 493 
      ldv_14_ldv_param_1_9 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 498 
      ldv_emg_wrapper_et131x_get_drvinfo_10(ldv_14_container,ldv_14_ldv_param_1_9);
      
#line 502 
      ldv_free((void *)ldv_14_ldv_param_1_9);
      
#line 505 
      goto ldv_44782;
      case 8: 
#line 507 
      ;
      
#line 510 
      ldv_emg_wrapper_et131x_tx_timeout_9(ldv_14_container);
      
#line 513 
      goto ldv_44782;
      case 9: 
#line 515 
      ;
      
#line 517 
      ldv_14_ldv_param_2_8 = ldv_xmalloc_unknown_size(0UL);
      
#line 518 
      ldv_14_ldv_param_1_7 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 523 
      ldv_emg_wrapper_et131x_get_regs_8(ldv_14_container,ldv_14_ldv_param_1_7,ldv_14_ldv_param_2_8);
      
#line 527 
      ldv_free(ldv_14_ldv_param_2_8);
      
#line 528 
      ldv_free((void *)ldv_14_ldv_param_1_7);
      
#line 531 
      goto ldv_44782;
      case 10: 
#line 533 
      ;
      
#line 535 
      ldv_14_ldv_param_1_6 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 540 
      ldv_emg_wrapper_et131x_set_settings_7(ldv_14_container,ldv_14_ldv_param_1_6);
      
#line 544 
      ldv_free((void *)ldv_14_ldv_param_1_6);
      
#line 547 
      goto ldv_44782;
      case 11: 
#line 549 
      ;
      
#line 555 
      ldv_emg_wrapper_et131x_change_mtu_6(ldv_14_container,ldv_14_ldv_param_1_5);
      
#line 561 
      goto ldv_44782;
      case 12: 
#line 563 
      ;
      
#line 566 
      (*ldv_emg_alias_eth_validate_addr_5)(ldv_14_container);
      
#line 569 
      goto ldv_44782;
      case 13: 
#line 571 
      ;
      
#line 573 
      ldv_14_ldv_param_1_3 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 578 
      ldv_emg_wrapper_et131x_ioctl_4(ldv_14_container,ldv_14_ldv_param_1_3,ldv_14_ldv_param_2_4);
      
#line 582 
      ldv_free((void *)ldv_14_ldv_param_1_3);
      
#line 585 
      goto ldv_44782;
      case 14: 
#line 587 
      ;
      
#line 590 
      (*ldv_emg_alias_ethtool_op_get_link_3)(ldv_14_container);
      
#line 593 
      goto ldv_44782;
      default: 
#line 595 
      ;
      
#line 595 
      __VERIFIER_assume(0);
    }
    ldv_44782: 
#line 598 
    ;
    
#line 598 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 605 
    goto ldv_call_14;
  }
  else {
    
#line 613 
    __retres = (void *)0;
    
#line 613 
    goto return_label;
  }
  
#line 616 
  __retres = (void *)0;
  return_label: 
#line 616 
                return __retres;
}


#line 621  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_10_netdev;
  int tmp_3;
  
#line 625 
  int ldv_10_ret = ldv_undef_int();
  
#line 628 
  ldv_10_ret = ldv_undef_int();
  
#line 631 
  tmp_3 = ldv_undef_int();
  
#line 631 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 633 
    ldv_10_netdev = arg0;
    
#line 638 
    ldv_10_ret = ldv_emg_wrapper_et131x_open_2(ldv_10_netdev);
    
#line 641 
    tmp_1 = ldv_undef_int();
    
#line 641 
    if (tmp_1 != 0) {
      
#line 643 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 647 
      ldv_dispatch_register_10_4(ldv_10_netdev);
      
#line 651 
      __retres = 0;
      
#line 651 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 658 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 659 
      ldv_failed_register_netdev();
      
#line 660 
      tmp_0 = ldv_undef_int_negative();
      
#line 660 
      __retres = tmp_0;
      
#line 660 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 668 
    ldv_failed_register_netdev();
    
#line 669 
    tmp_2 = ldv_undef_int_negative();
    
#line 669 
    __retres = tmp_2;
    
#line 669 
    goto return_label;
  }
  return_label: 
#line 631 
                return __retres;
}


#line 679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_16(void *arg0)
{
  void *__retres;
  struct device *ldv_16_device;
  int tmp;
  
#line 682 
  struct dev_pm_ops *ldv_16_pm_ops = ldv_emg_alias_et131x_pm_ops_3;
  
#line 693 
  goto ldv_do_16;
  
#line 695 
  __retres = (void *)0;
  
#line 695 
  goto return_label;
  ldv_do_16: 
#line 698 
  ;
  
#line 701 
  tmp = ldv_undef_int();
  
#line 701 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 702 
    ;
    
#line 704 
    if (ldv_16_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 706 
                                                                    (*(ldv_16_pm_ops->runtime_idle))(ldv_16_device); else ;
    
#line 714 
    goto ldv_do_16;
    case 2: 
#line 717 
    ;
    
#line 719 
    if (ldv_16_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 721 
      (*(ldv_16_pm_ops->runtime_suspend))(ldv_16_device); else ;
    
#line 726 
    if (ldv_16_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 728 
      (*(ldv_16_pm_ops->runtime_resume))(ldv_16_device); else ;
    
#line 736 
    goto ldv_do_16;
    case 3: 
#line 739 
    ;
    
#line 741 
    if (ldv_16_pm_ops->prepare != (int (*)(struct device *))0) 
#line 743 
                                                               (*(ldv_16_pm_ops->prepare))(ldv_16_device); else ;
    
#line 747 
    tmp_0 = ldv_undef_int();
    
#line 747 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 748 
      ;
      
#line 751 
      ldv_emg_wrapper_et131x_suspend_2(ldv_16_device);
      
#line 754 
      tmp_1 = ldv_undef_int();
      
#line 754 
      if (tmp_1 != 0) {
        
#line 756 
        if (ldv_16_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 758 
          (*(ldv_16_pm_ops->suspend_noirq))(ldv_16_device); else ;
        
#line 763 
        if (ldv_16_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 765 
          (*(ldv_16_pm_ops->resume_noirq))(ldv_16_device); else ;
      }
      else {
        
#line 772 
        if (ldv_16_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 774 
          (*(ldv_16_pm_ops->suspend_late))(ldv_16_device); else ;
        
#line 779 
        if (ldv_16_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 781 
          (*(ldv_16_pm_ops->resume_early))(ldv_16_device); else ;
      }
      
#line 788 
      ldv_emg_wrapper_et131x_resume_4(ldv_16_device);
      
#line 791 
      goto ldv_44812;
      case 2: 
#line 793 
      ;
      
#line 796 
      ldv_emg_wrapper_et131x_suspend_2(ldv_16_device);
      
#line 799 
      tmp_2 = ldv_undef_int();
      
#line 799 
      if (tmp_2 != 0) {
        
#line 801 
        if (ldv_16_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 803 
          (*(ldv_16_pm_ops->freeze_late))(ldv_16_device); else ;
        
#line 808 
        if (ldv_16_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 810 
          (*(ldv_16_pm_ops->thaw_early))(ldv_16_device); else ;
      }
      else {
        
#line 817 
        if (ldv_16_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 819 
          (*(ldv_16_pm_ops->freeze_noirq))(ldv_16_device); else ;
        
#line 824 
        if (ldv_16_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 826 
          (*(ldv_16_pm_ops->thaw_noirq))(ldv_16_device); else ;
      }
      
#line 833 
      ldv_emg_wrapper_et131x_resume_4(ldv_16_device);
      
#line 836 
      goto ldv_44812;
      case 3: 
#line 838 
      ;
      
#line 841 
      ldv_emg_wrapper_et131x_suspend_2(ldv_16_device);
      
#line 844 
      tmp_3 = ldv_undef_int();
      
#line 844 
      if (tmp_3 != 0) {
        
#line 846 
        if (ldv_16_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 848 
          (*(ldv_16_pm_ops->poweroff_late))(ldv_16_device); else ;
        
#line 853 
        if (ldv_16_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 855 
          (*(ldv_16_pm_ops->restore_early))(ldv_16_device); else ;
      }
      else {
        
#line 862 
        if (ldv_16_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 864 
          (*(ldv_16_pm_ops->poweroff_noirq))(ldv_16_device); else ;
        
#line 869 
        if (ldv_16_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 871 
          (*(ldv_16_pm_ops->restore_noirq))(ldv_16_device); else ;
      }
      
#line 878 
      ldv_emg_wrapper_et131x_resume_4(ldv_16_device);
      
#line 881 
      goto ldv_44812;
      default: 
#line 883 
      ;
      
#line 883 
      __VERIFIER_assume(0);
    }
    ldv_44812: 
#line 886 
    ;
    
#line 886 
    if (ldv_16_pm_ops->complete != (void (*)(struct device *))0) 
#line 888 
                                                                 (*(ldv_16_pm_ops->complete))(ldv_16_device); else ;
    
#line 896 
    goto ldv_do_16;
    case 4: 
#line 899 
    ;
    
#line 905 
    __retres = (void *)0;
    
#line 905 
    goto return_label;
    default: 
#line 908 
    ;
    
#line 908 
    __VERIFIER_assume(0);
  }
  
#line 911 
  __retres = (void *)0;
  return_label: 
#line 911 
                return __retres;
}


#line 916  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_15(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_15_ret_val;
  int ldv_15_line;
  void *ldv_15_data;
  enum irqreturn (*ldv_15_thread)(int , void *);
  int tmp;
  
#line 922 
  enum irqreturn (*ldv_15_callback)(int , void *) = & ldv_emg_wrapper_et131x_isr_2;
  
#line 925 
  struct ldv_struct_interrupt_scenario_15 *data = (struct ldv_struct_interrupt_scenario_15 *)arg0;
  
#line 930 
  if (data != (struct ldv_struct_interrupt_scenario_15 *)0) {
    
#line 931 
    ldv_15_line = data->arg0;
    
#line 932 
    ldv_15_callback = data->arg1;
    
#line 933 
    ldv_15_thread = data->arg2;
    
#line 934 
    ldv_15_data = data->arg3;
    
#line 935 
    ldv_free((void *)data);
  }
  else ;
  
#line 941 
  ldv_switch_to_interrupt_context();
  
#line 943 
  ldv_15_ret_val = ldv_emg_wrapper_et131x_isr_2(ldv_15_line,ldv_15_data);
  
#line 945 
  ldv_switch_to_process_context();
  
#line 948 
  tmp = ldv_undef_int();
  
#line 948 
  if (tmp != 0) {
    
#line 950 
    __VERIFIER_assume(ldv_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 954 
    if (ldv_15_thread != (enum irqreturn (*)(int , void *))0) 
#line 956 
                                                              (*ldv_15_thread)(ldv_15_line,ldv_15_data); else ;
  }
  else 
#line 963 
       __VERIFIER_assume(ldv_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 972 
  __retres = (void *)0;
  
#line 972 
  goto return_label;
  
#line 974 
  __retres = (void *)0;
  return_label: 
#line 974 
                return __retres;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 982 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_et131x_driver_2;
  
#line 985 
  ldv_9_pci_driver = arg0;
  
#line 989 
  ldv_dispatch_deregister_9_1(ldv_9_pci_driver);
  
#line 993 
  goto return_label;
  return_label: 
#line 995 
                return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1003 
  tmp = ldv_undef_int();
  
#line 1003 
  switch (tmp) {
    case 0: 
#line 1004 
    ;
    
#line 1005 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1006 
    __VERIFIER_assume(ret == 0);
    
#line 1007 
    goto ldv_44841;
    default: 
#line 1009 
    ;
    
#line 1009 
    __VERIFIER_assume(0);
  }
  ldv_44841: 
#line 1010 
  ;
  
#line 1011 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1021 
  ldv_6_netdev = arg0;
  
#line 1026 
  ldv_emg_wrapper_et131x_close_2(ldv_6_netdev);
  
#line 1030 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1034 
  goto return_label;
  return_label: 
#line 1036 
                return;
}


#line 1041  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1047 
  ldv_3_line = (int)arg0;
  
#line 1051 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1055 
  goto return_label;
  return_label: 
#line 1057 
                return;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1069 
  tmp_0 = ldv_undef_int();
  
#line 1069 
  if (tmp_0 != 0) {
    
#line 1071 
    ldv_4_timer_list = arg0;
    
#line 1075 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1079 
    __retres = 0;
    
#line 1079 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1086 
    tmp = ldv_undef_int_negative();
    
#line 1086 
    __retres = tmp;
    
#line 1086 
    goto return_label;
  }
  return_label: 
#line 1069 
                return __retres;
}


#line 1096  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_12(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_12_resource_1;
  struct pci_device_id *ldv_12_ldv_param_1_2;
  struct pm_message ldv_12_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1101 
  struct pci_driver *ldv_12_container = ldv_emg_alias_et131x_driver_2;
  
#line 1102 
  int ldv_12_ret = ldv_undef_int();
  
#line 1105 
  struct ldv_struct_pci_scenario_12 *data = (struct ldv_struct_pci_scenario_12 *)arg0;
  
#line 1109 
  ldv_12_ret = ldv_undef_int();
  
#line 1112 
  if (data != (struct ldv_struct_pci_scenario_12 *)0) {
    
#line 1113 
    ldv_12_container = data->arg0;
    
#line 1114 
    ldv_free((void *)data);
  }
  else ;
  
#line 1125 
  goto ldv_main_12;
  
#line 1127 
  __retres = (void *)0;
  
#line 1127 
  goto return_label;
  ldv_main_12: 
#line 1130 
  ;
  
#line 1133 
  tmp_2 = ldv_undef_int();
  
#line 1133 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1135 
    ldv_12_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1140 
    ldv_pre_probe();
    
#line 1142 
    ldv_12_ret = ldv_emg_wrapper_et131x_pci_setup_2(ldv_12_resource_1,ldv_12_ldv_param_1_2);
    
#line 1144 
    ldv_12_ret = ldv_post_probe(ldv_12_ret);
    
#line 1148 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 1151 
    tmp_1 = ldv_undef_int();
    
#line 1151 
    if (tmp_1 != 0) {
      
#line 1153 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 1160 
      goto ldv_call_12;
    }
    else {
      
#line 1164 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 1171 
      goto ldv_main_12;
    }
  }
  else {
    
#line 1183 
    __retres = (void *)0;
    
#line 1183 
    goto return_label;
  }
  
#line 1186 
  __retres = (void *)0;
  
#line 1186 
  goto return_label;
  ldv_call_12: 
#line 1189 
  ;
  
#line 1192 
  tmp_3 = ldv_undef_int();
  
#line 1192 
  switch (tmp_3) {
    case 1: 
#line 1193 
    ;
    
#line 1202 
    goto ldv_call_12;
    case 2: 
#line 1205 
    ;
    
#line 1207 
    if (ldv_12_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1209 
      ldv_12_ret = (*(ldv_12_container->suspend))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 1211 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 1213 
         ldv_12_ret = ldv_undef_int();
    
#line 1218 
    if (ldv_12_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1220 
      ldv_12_ret = (*(ldv_12_container->suspend_late))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 1222 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 1224 
         ldv_12_ret = ldv_undef_int();
    
#line 1229 
    if (ldv_12_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1231 
      (*(ldv_12_container->resume_early))(ldv_12_resource_1); else ;
    
#line 1236 
    if (ldv_12_container->resume != (int (*)(struct pci_dev *))0) 
#line 1238 
                                                                  (*(ldv_12_container->resume))(ldv_12_resource_1); else ;
    
#line 1246 
    goto ldv_call_12;
    case 3: 
#line 1249 
    ;
    
#line 1251 
    if (ldv_12_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 1253 
      (*(ldv_12_container->shutdown))(ldv_12_resource_1); else ;
    
#line 1259 
    ldv_emg_wrapper_et131x_pci_remove_3(ldv_12_resource_1);
    
#line 1266 
    goto ldv_main_12;
    default: 
#line 1269 
    ;
    
#line 1269 
    __VERIFIER_assume(0);
  }
  
#line 1272 
  __retres = (void *)0;
  return_label: 
#line 1272 
                return __retres;
}


#line 1277  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 1280 
  tmp = ldv_undef_int();
  
#line 1280 
  switch (tmp) {
    case 0: 
#line 1281 
    ;
    
#line 1282 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 1283 
    __VERIFIER_assume(ret == 0);
    
#line 1284 
    goto ldv_44878;
    default: 
#line 1286 
    ;
    
#line 1286 
    __VERIFIER_assume(0);
  }
  ldv_44878: 
#line 1287 
  ;
  
#line 1288 
  return;
}


#line 1292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1298 
  ldv_2_netdev = arg0;
  
#line 1299 
  ldv_free((void *)ldv_2_netdev);
  
#line 1303 
  goto return_label;
  return_label: 
#line 1305 
                return;
}


#line 1310  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1313 
  tmp = ldv_undef_int();
  
#line 1313 
  switch (tmp) {
    case 0: 
#line 1314 
    ;
    
#line 1315 
    cf_arg_13 = (struct ldv_struct_timer_scenario_13 *)ldv_xmalloc(16UL);
    
#line 1316 
    cf_arg_13->arg0 = arg0;
    
#line 1317 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_timer_scenario_13,(void *)cf_arg_13);
    
#line 1318 
    __VERIFIER_assume(ret == 0);
    
#line 1319 
    goto ldv_44890;
    default: 
#line 1321 
    ;
    
#line 1321 
    __VERIFIER_assume(0);
  }
  ldv_44890: 
#line 1322 
  ;
  
#line 1323 
  return;
}


#line 1327  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/agere/et131x.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1330 
  tmp = ldv_undef_int();
  
#line 1330 
  switch (tmp) {
    case 0: 
#line 1331 
    ;
    
#line 1332 
    cf_arg_15 = (struct ldv_struct_interrupt_scenario_15 *)ldv_xmalloc(32UL);
    
#line 1333 
    cf_arg_15->arg0 = arg0;
    
#line 1334 
    cf_arg_15->arg1 = arg1;
    
#line 1335 
    cf_arg_15->arg2 = arg2;
    
#line 1336 
    cf_arg_15->arg3 = arg3;
    
#line 1337 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_interrupt_scenario_15,(void *)cf_arg_15);
    
#line 1338 
    __VERIFIER_assume(ret == 0);
    
#line 1339 
    goto ldv_44905;
    default: 
#line 1341 
    ;
    
#line 1341 
    __VERIFIER_assume(0);
  }
  ldv_44905: 
#line 1342 
  ;
  
#line 1343 
  return;
}


