/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long uintptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 796 
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 15 
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_187 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_187 __anonCompField_iov_iter_57 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_189 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_189 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_191 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_192 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_193 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_194 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_196 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_195 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_196 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_197 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_198 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_190 {
   int _pad[28U] ;
   struct __anonstruct__kill_191 _kill ;
   struct __anonstruct__timer_192 _timer ;
   struct __anonstruct__rt_193 _rt ;
   struct __anonstruct__sigchld_194 _sigchld ;
   struct __anonstruct__sigfault_195 _sigfault ;
   struct __anonstruct__sigpoll_197 _sigpoll ;
   struct __anonstruct__sigsys_198 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_190 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_205 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_206 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_208 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_207 {
   struct keyring_index_key index_key ;
   struct __anonstruct_208 __anonCompField___anonunion_207_60 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_209 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_211 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_210 {
   union __anonunion_payload_211 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_205 __anonCompField_key_58 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_206 __anonCompField_key_59 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_207 __anonCompField_key_61 ;
   union __anonunion_type_data_209 type_data ;
   union __anonunion_210 __anonCompField_key_62 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_226 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_226 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_23776 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_231 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_232 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_23776 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_231 __anonCompField_nf_bridge_info_69 ;
   union __anonunion_232 __anonCompField_nf_bridge_info_70 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_235 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_234 {
   u64 v64 ;
   struct __anonstruct_235 __anonCompField___anonunion_234_71 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_234 __anonCompField_skb_mstamp_72 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_238 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_237 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_238 __anonCompField___anonstruct_237_73 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_74 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_240 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_239 {
   __wsum csum ;
   struct __anonstruct_240 __anonCompField___anonunion_239_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_241 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_242 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_243 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_236 __anonCompField_sk_buff_75 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_239 __anonCompField_sk_buff_77 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_241 __anonCompField_sk_buff_78 ;
   __u32 secmark ;
   union __anonunion_242 __anonCompField_sk_buff_79 ;
   union __anonunion_243 __anonCompField_sk_buff_80 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_245 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_245 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_246 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_246 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_247 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_247 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_248 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_248 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_249 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_249 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_250 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_250 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_251 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_251 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_252 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_252 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_253 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_254 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_253 ifr_ifrn ;
   union __anonunion_ifr_ifru_254 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_259 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_258 {
   struct __anonstruct_259 __anonCompField___anonunion_258_81 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_258 __anonCompField_lockref_82 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_261 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_260 {
   struct __anonstruct_261 __anonCompField___anonunion_260_83 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_260 __anonCompField_qstr_84 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_262 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_262 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_266 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_265 {
   struct __anonstruct_266 __anonCompField___anonunion_265_85 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_265 __anonCompField_radix_tree_node_86 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_270 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_270 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_271 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_271 __anonCompField_kqid_88 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_274 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_275 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_276 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_274 __anonCompField_inode_89 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_275 __anonCompField_inode_90 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_276 __anonCompField_inode_91 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_277 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_277 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_279 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_278 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_279 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_278 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_302 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_302 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28407 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28407 phy_interface_t;

#line 126 
enum ldv_28460 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28460 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30170 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30171 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30170 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30171 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct mfd_cell;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id const *id_table ;
   bool prevent_deferred_probe ;
};

#line 338 
struct mdiobb_ctrl;

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct mdiobb_ops {
   struct module *owner ;
   void (*set_mdc)(struct mdiobb_ctrl *, int ) ;
   void (*set_mdio_dir)(struct mdiobb_ctrl *, int ) ;
   void (*set_mdio_data)(struct mdiobb_ctrl *, int ) ;
   int (*get_mdio_data)(struct mdiobb_ctrl *) ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio-bitbang.h"
struct mdiobb_ctrl {
   struct mdiobb_ops const *ops ;
   int (*reset)(struct mii_bus *) ;
};

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
struct sh_eth_plat_data {
   int phy ;
   int phy_irq ;
   int edmac_endian ;
   phy_interface_t phy_interface ;
   void (*set_mdio_gate)(void *) ;
   unsigned char mac_addr[6U] ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_ether_link : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ether_link_active_low : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_init : 1 ;
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_mdio.h"
struct sh_eth_txdesc {
   u32 status ;
   u16 pad0 ;
   u16 buffer_length ;
   u32 addr ;
   u32 pad1 ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
struct sh_eth_rxdesc {
   u32 status ;
   u16 frame_length ;
   u16 buffer_length ;
   u32 addr ;
   u32 pad0 ;
};

#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
struct sh_eth_cpu_data {
   void (*chip_reset)(struct net_device *) ;
   void (*set_duplex)(struct net_device *) ;
   void (*set_rate)(struct net_device *) ;
   int register_type ;
   u32 eesipr_value ;
   u32 ecsr_value ;
   u32 ecsipr_value ;
   u32 fdr_value ;
   u32 fcftr_value ;
   u32 rpadir_value ;
   u32 tx_check ;
   u32 eesr_err_check ;
   u32 trscer_err_mask ;
   unsigned long irq_flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_psr : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) apr : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mpr : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tpauser : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) bculr : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tsu : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hw_swap : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rpadir : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_trimd : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_ade : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hw_crc : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) select_mii : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) shift_rd0 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rmiimode : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rtrate : 1 ;
};

#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
struct sh_eth_private {
   struct platform_device *pdev ;
   struct sh_eth_cpu_data *cd ;
   u16 const *reg_offset ;
   void *addr ;
   void *tsu_addr ;
   u32 num_rx_ring ;
   u32 num_tx_ring ;
   dma_addr_t rx_desc_dma ;
   dma_addr_t tx_desc_dma ;
   struct sh_eth_rxdesc *rx_ring ;
   struct sh_eth_txdesc *tx_ring ;
   struct sk_buff **rx_skbuff ;
   struct sk_buff **tx_skbuff ;
   spinlock_t lock ;
   u32 cur_rx ;
   u32 dirty_rx ;
   u32 cur_tx ;
   u32 dirty_tx ;
   u32 rx_buf_sz ;
   int edmac_endian ;
   struct napi_struct napi ;
   bool irq_enabled ;
   u32 phy_id ;
   struct mii_bus *mii_bus ;
   struct phy_device *phydev ;
   int link ;
   phy_interface_t phy_interface ;
   int msg_enable ;
   int speed ;
   int duplex ;
   int port ;
   int vlan_num_ids ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_ether_link : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ether_link_active_low : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_opened : 1 ;
};

#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
struct bb_info {
   void (*set_gate)(void *) ;
   struct mdiobb_ctrl ctrl ;
   void *addr ;
   u32 mmd_msk ;
   u32 mdo_msk ;
   u32 mdi_msk ;
   u32 mdc_msk ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 17  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_10 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_platform_instance_12 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned int __builtin_bswap32(unsigned int);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/fvtp/.tmp_sh_eth.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static void *ERR_PTR(long error);


#line 32 
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_72(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_73(spinlock_t *lock);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1);


#line 94 
void ldv_spin_model_lock(char *);


#line 95 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *phys_to_virt(phys_addr_t address)
{
  void *__retres;
  
#line 138 
  __retres = (void *)((unsigned long)address + 18446612132314218496UL);
  
#line 138 
  return __retres;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread32(void *);


#line 37 
void iowrite32(u32, void *);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_80(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 157 
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void *devm_kmalloc(struct device *, size_t, gfp_t);


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kzalloc(struct device *dev, size_t size, gfp_t gfp)
{
  void *tmp;
  
#line 647 
  tmp = devm_kmalloc(dev,size,gfp | 32768U);
  
#line 647 
  return tmp;
}


#line 649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *devm_kmalloc_array(struct device *dev, size_t n, size_t size, gfp_t flags)
{
  void *__retres;
  void *tmp;
  
#line 652 
  if (size != 0UL && 18446744073709551615UL / size < n) {
    
#line 653 
    __retres = (void *)0;
    
#line 653 
    goto return_label;
  }
  else ;
  
#line 654 
  tmp = devm_kmalloc(dev,n * size,flags);
  
#line 654 
  __retres = tmp;
  return_label: 
#line 654 
                return __retres;
}


#line 670 
void *devm_ioremap_resource(struct device *, struct resource *);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 996  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_platdata(struct device const *dev)
{
  void *__retres;
  
#line 998 
  __retres = dev->platform_data;
  
#line 998 
  return __retres;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 862 
int skb_pad(struct sk_buff *, int);


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_put(struct sk_buff *skb, unsigned int len)
{
  bool tmp_1;
  
#line 1691 
  unsigned char *tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1692 
  tmp_1 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 1692 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 1694 
    ldv_inline_asm();
    
#line 1692 
    ;
  }
  else ;
  
#line 1693 
  skb->tail += len;
  
#line 1694 
  skb->len += len;
  
#line 1695 
  return tmp;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_put_padto(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  
#line 2503 
  unsigned int size = skb->len;
  
#line 2505 
  if ((long)(size < len) != 0L) {
    int tmp;
    
#line 2506 
    len -= size;
    
#line 2507 
    tmp = skb_pad(skb,(int)len);
    
#line 2507 
    if (tmp != 0) {
      
#line 2508 
      __retres = -12;
      
#line 2508 
      goto return_label;
    }
    else ;
    
#line 2509 
    __skb_put(skb,len);
  }
  else ;
  
#line 2511 
  __retres = 0;
  return_label: 
#line 2511 
                return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property *of_find_property(struct device_node const *, char const *, int *);


#line 324 
struct device_node *of_parse_phandle(struct device_node const *, char const *, int);


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
__inline static bool of_property_read_bool(struct device_node const *np, char const *propname)
{
  bool __retres;
  
#line 837 
  struct property *prop = of_find_property(np,propname,(int *)0);
  
#line 839 
  __retres = (_Bool)(prop != (struct property *)0);
  
#line 839 
  return __retres;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
int mdiobus_register(struct mii_bus *);


#line 202 
void mdiobus_unregister(struct mii_bus *);


#line 742 
struct phy_device *phy_connect(struct net_device *, char const *, void (*)(struct net_device *), phy_interface_t);


#line 745 
void phy_disconnect(struct phy_device *);


#line 747 
void phy_start(struct phy_device *);


#line 748 
void phy_stop(struct phy_device *);


#line 749 
int phy_start_aneg(struct phy_device *);


#line 777 
int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);


#line 778 
int phy_ethtool_gset(struct phy_device *, struct ethtool_cmd *);


#line 779 
int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);


#line 781 
void phy_print_status(struct phy_device *);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_synchronize(struct napi_struct const *n)
{
  int tmp;
  
#line 523 
  goto ldv_42117;
  ldv_42116: 
#line 524 
  ;
  
#line 524 
  msleep(1U);
  ldv_42117: 
#line 525 
  ;
  
#line 523 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 523 
  if (tmp != 0) 
#line 525 
                goto ldv_42116; else 
#line 528 
                                     goto ldv_42118;
  ldv_42118: 
#line 529 
  ;
  
#line 530 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_90(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_92(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43762;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43762;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43762;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43762;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43762: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_43768;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43772;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43772;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43772;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43772;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43772: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_43768;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43781;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43781;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43781;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43781;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43781: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_43768;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43790;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43790;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43790;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43790;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43790: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_43768;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_43768;
    }
    ldv_43768: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_43800;
  ldv_43799: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_43800: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_43799; else 
#line 3294 
                                                   goto ldv_43801;
  ldv_43801: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_89(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_91(struct net_device *ldv_func_arg1);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 46 
int eth_change_mtu(struct net_device *, int);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_88(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);


#line 53 
int platform_get_irq(struct platform_device *, unsigned int);


#line 197 
static int ldv___platform_driver_register_93(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);


#line 202 
static void ldv_platform_driver_unregister_94(struct platform_driver *ldv_func_arg1);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device const *pdev)
{
  void *tmp;
  
#line 215 
  tmp = dev_get_drvdata(& pdev->dev);
  
#line 215 
  return tmp;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev, void *data)
{
  
#line 221 
  dev_set_drvdata(& pdev->dev,data);
  
#line 222 
  return;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio-bitbang.h"
struct mii_bus *alloc_mdio_bitbang(struct mdiobb_ctrl *);


#line 43 
void free_mdio_bitbang(struct mii_bus *);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_device.h"
struct of_device_id const *of_match_device(struct of_device_id const *, struct device const *);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
int of_get_phy_mode(struct device_node *);


#line 15 
void const *of_get_mac_address(struct device_node *);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
int __pm_runtime_idle(struct device *, int);


#line 41 
int __pm_runtime_resume(struct device *, int);


#line 45 
void pm_runtime_enable(struct device *);


#line 46 
void __pm_runtime_disable(struct device *, bool);


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
__inline static int pm_runtime_get_sync(struct device *dev)
{
  int tmp;
  
#line 229 
  tmp = __pm_runtime_resume(dev,4);
  
#line 229 
  return tmp;
}


#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
__inline static int pm_runtime_put(struct device *dev)
{
  int tmp;
  
#line 234 
  tmp = __pm_runtime_idle(dev,5);
  
#line 234 
  return tmp;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
__inline static int pm_runtime_put_sync(struct device *dev)
{
  int tmp;
  
#line 245 
  tmp = __pm_runtime_idle(dev,4);
  
#line 245 
  return tmp;
}


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_runtime.h"
__inline static void pm_runtime_disable(struct device *dev)
{
  
#line 270 
  __pm_runtime_disable(dev,(_Bool)1);
  
#line 271 
  return;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_mdio.h"
int of_mdiobus_register(struct mii_bus *, struct device_node *);


#line 18 
struct phy_device *of_phy_connect(struct net_device *, struct device_node *, void (*)(struct net_device *), u32, phy_interface_t);


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static void sh_eth_soft_swap(char *src, int len)
{
  
#line 539 
  return;
}


#line 551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static void sh_eth_write(struct net_device *ndev, u32 data, int enum_index)
{
  int tmp_0;
  
#line 554 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 555 
  u16 offset = *(mdp->reg_offset + enum_index);
  {
    
#line 557 
    int __ret_warn_on = (unsigned int)offset == 65535U;
    
#line 557 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 557 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h",557); else ;
    
#line 557 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 557 
  if ((long)tmp_0 != 0L) 
#line 558 
                         goto return_label; else ;
  
#line 560 
  iowrite32(data,mdp->addr + (int)offset);
  return_label: 
#line 561 
                return;
}


#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static u32 sh_eth_read(struct net_device *ndev, int enum_index)
{
  u32 __retres;
  int tmp_0;
  u32 tmp_1;
  
#line 565 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 566 
  u16 offset = *(mdp->reg_offset + enum_index);
  {
    
#line 568 
    int __ret_warn_on = (unsigned int)offset == 65535U;
    
#line 568 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 568 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h",568); else ;
    
#line 568 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 568 
  if ((long)tmp_0 != 0L) {
    
#line 569 
    __retres = 4294967295U;
    
#line 569 
    goto return_label;
  }
  else ;
  
#line 571 
  tmp_1 = ioread32(mdp->addr + (int)offset);
  
#line 571 
  __retres = tmp_1;
  return_label: 
#line 571 
                return __retres;
}


#line 574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static void *sh_eth_tsu_get_offset(struct sh_eth_private *mdp, int enum_index)
{
  void *__retres;
  
#line 577 
  __retres = mdp->tsu_addr + (int)*(mdp->reg_offset + enum_index);
  
#line 577 
  return __retres;
}


#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static void sh_eth_tsu_write(struct sh_eth_private *mdp, u32 data, int enum_index)
{
  
#line 583 
  iowrite32(data,mdp->tsu_addr + (int)*(mdp->reg_offset + enum_index));
  
#line 584 
  return;
}


#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.h"
__inline static u32 sh_eth_tsu_read(struct sh_eth_private *mdp, int enum_index)
{
  u32 tmp;
  
#line 588 
  tmp = ioread32(mdp->tsu_addr + (int)*(mdp->reg_offset + enum_index));
  
#line 588 
  return tmp;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const sh_eth_offset_gigabit[106U] = {(unsigned short)0U, (unsigned short)1024U, (unsigned short)1032U, (unsigned short)1040U, (unsigned short)1064U, (unsigned short)1072U, (unsigned short)16U, (unsigned short)20U, (unsigned short)24U, (unsigned short)28U, (unsigned short)48U, (unsigned short)52U, (unsigned short)56U, (unsigned short)60U, (unsigned short)1080U, (unsigned short)1088U, (unsigned short)1096U, (unsigned short)1104U, (unsigned short)1112U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1128U, (unsigned short)1120U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1280U, (unsigned short)1296U, (unsigned short)1304U, (unsigned short)1312U, (unsigned short)1320U, (unsigned short)65535U, (unsigned short)1324U, (unsigned short)1288U, (unsigned short)65535U, (unsigned short)1364U, (unsigned short)1368U, (unsigned short)1372U, (unsigned short)1376U, (unsigned short)1888U, (unsigned short)65535U, (unsigned short)1380U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1456U, (unsigned short)1460U, (unsigned short)1472U, (unsigned short)1480U, (unsigned short)1792U, (unsigned short)1800U, (unsigned short)1808U, (unsigned short)65535U, (unsigned short)1856U, (unsigned short)1864U, (unsigned short)1872U, (unsigned short)1880U, (unsigned short)1896U, (unsigned short)1904U, (unsigned short)1912U, (unsigned short)65535U, (unsigned short)1252U, (unsigned short)1936U, (unsigned short)0U, (unsigned short)4U, (unsigned short)16U, (unsigned short)20U, (unsigned short)24U, (unsigned short)32U, (unsigned short)36U, (unsigned short)40U, (unsigned short)44U, (unsigned short)48U, (unsigned short)52U, (unsigned short)56U, (unsigned short)64U, (unsigned short)68U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)80U, (unsigned short)84U, (unsigned short)72U, (unsigned short)76U, (unsigned short)88U, (unsigned short)92U, (unsigned short)96U, (unsigned short)100U, (unsigned short)112U, (unsigned short)116U, (unsigned short)120U, (unsigned short)124U, (unsigned short)256U, (unsigned short)128U, (unsigned short)132U, (unsigned short)136U, (unsigned short)140U, (unsigned short)144U, (unsigned short)148U, (unsigned short)160U, (unsigned short)160U, (unsigned short)168U, (unsigned short)172U, (unsigned short)176U, (unsigned short)180U};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const sh_eth_offset_fast_rz[106U] = {(unsigned short)0U, (unsigned short)1024U, (unsigned short)1032U, (unsigned short)1040U, (unsigned short)1064U, (unsigned short)1072U, (unsigned short)16U, (unsigned short)20U, (unsigned short)24U, (unsigned short)28U, (unsigned short)48U, (unsigned short)52U, (unsigned short)56U, (unsigned short)60U, (unsigned short)1080U, (unsigned short)1088U, (unsigned short)1096U, (unsigned short)1104U, (unsigned short)1112U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1128U, (unsigned short)1120U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1280U, (unsigned short)1296U, (unsigned short)1304U, (unsigned short)1312U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1288U, (unsigned short)65535U, (unsigned short)1364U, (unsigned short)1368U, (unsigned short)1372U, (unsigned short)1376U, (unsigned short)1888U, (unsigned short)65535U, (unsigned short)1380U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1472U, (unsigned short)1480U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1856U, (unsigned short)1864U, (unsigned short)1872U, (unsigned short)1880U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1912U, (unsigned short)65535U, (unsigned short)1252U, (unsigned short)65535U, (unsigned short)0U, (unsigned short)4U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)88U, (unsigned short)65535U, (unsigned short)96U, (unsigned short)100U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)256U, (unsigned short)128U, (unsigned short)132U, (unsigned short)136U, (unsigned short)140U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U};

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const sh_eth_offset_fast_rcar[106U] = {(unsigned short)65535U, (unsigned short)512U, (unsigned short)520U, (unsigned short)528U, (unsigned short)552U, (unsigned short)560U, (unsigned short)536U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)544U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)568U, (unsigned short)576U, (unsigned short)584U, (unsigned short)592U, (unsigned short)600U, (unsigned short)65535U, (unsigned short)612U, (unsigned short)616U, (unsigned short)620U, (unsigned short)624U, (unsigned short)65535U, (unsigned short)636U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)768U, (unsigned short)784U, (unsigned short)792U, (unsigned short)800U, (unsigned short)808U, (unsigned short)832U, (unsigned short)65535U, (unsigned short)776U, (unsigned short)848U, (unsigned short)852U, (unsigned short)856U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1012U, (unsigned short)864U, (unsigned short)868U, (unsigned short)872U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)960U, (unsigned short)968U, (unsigned short)976U, (unsigned short)980U, (unsigned short)984U, (unsigned short)988U, (unsigned short)996U, (unsigned short)1000U, (unsigned short)1004U, (unsigned short)1008U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)1016U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U};

#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const sh_eth_offset_fast_sh4[106U] = {(unsigned short)65535U, (unsigned short)0U, (unsigned short)8U, (unsigned short)16U, (unsigned short)40U, (unsigned short)48U, (unsigned short)24U, (unsigned short)216U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)32U, (unsigned short)204U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)56U, (unsigned short)64U, (unsigned short)72U, (unsigned short)80U, (unsigned short)88U, (unsigned short)65535U, (unsigned short)100U, (unsigned short)104U, (unsigned short)65535U, (unsigned short)112U, (unsigned short)120U, (unsigned short)124U, (unsigned short)200U, (unsigned short)212U, (unsigned short)256U, (unsigned short)272U, (unsigned short)280U, (unsigned short)288U, (unsigned short)296U, (unsigned short)320U, (unsigned short)65535U, (unsigned short)264U, (unsigned short)336U, (unsigned short)340U, (unsigned short)344U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)500U, (unsigned short)352U, (unsigned short)356U, (unsigned short)360U, (unsigned short)65535U, (unsigned short)364U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)448U, (unsigned short)456U, (unsigned short)464U, (unsigned short)468U, (unsigned short)472U, (unsigned short)476U, (unsigned short)484U, (unsigned short)488U, (unsigned short)492U, (unsigned short)496U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)504U, (unsigned short)508U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U};

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const sh_eth_offset_fast_sh3_sh2[106U] = {(unsigned short)65535U, (unsigned short)0U, (unsigned short)4U, (unsigned short)8U, (unsigned short)20U, (unsigned short)24U, (unsigned short)12U, (unsigned short)80U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)16U, (unsigned short)68U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)28U, (unsigned short)32U, (unsigned short)36U, (unsigned short)40U, (unsigned short)44U, (unsigned short)48U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)52U, (unsigned short)56U, (unsigned short)60U, (unsigned short)64U, (unsigned short)76U, (unsigned short)352U, (unsigned short)356U, (unsigned short)360U, (unsigned short)364U, (unsigned short)380U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)376U, (unsigned short)436U, (unsigned short)440U, (unsigned short)444U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)420U, (unsigned short)65535U, (unsigned short)452U, (unsigned short)65535U, (unsigned short)460U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)368U, (unsigned short)372U, (unsigned short)384U, (unsigned short)388U, (unsigned short)392U, (unsigned short)396U, (unsigned short)404U, (unsigned short)408U, (unsigned short)412U, (unsigned short)416U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)424U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)0U, (unsigned short)4U, (unsigned short)16U, (unsigned short)20U, (unsigned short)24U, (unsigned short)32U, (unsigned short)36U, (unsigned short)40U, (unsigned short)44U, (unsigned short)48U, (unsigned short)52U, (unsigned short)56U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)64U, (unsigned short)68U, (unsigned short)80U, (unsigned short)84U, (unsigned short)72U, (unsigned short)76U, (unsigned short)65535U, (unsigned short)65535U, (unsigned short)96U, (unsigned short)100U, (unsigned short)112U, (unsigned short)116U, (unsigned short)120U, (unsigned short)124U, (unsigned short)256U, (unsigned short)128U, (unsigned short)132U, (unsigned short)136U, (unsigned short)140U, (unsigned short)144U, (unsigned short)148U, (unsigned short)160U, (unsigned short)160U, (unsigned short)168U, (unsigned short)172U, (unsigned short)176U, (unsigned short)180U};

#line 404 
static void sh_eth_rcv_snd_disable(struct net_device *ndev);


#line 405 
static struct net_device_stats *sh_eth_get_stats(struct net_device *ndev);


#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static bool sh_eth_is_gether(struct sh_eth_private *mdp)
{
  bool __retres;
  
#line 409 
  __retres = (_Bool)(mdp->reg_offset == (u16 const *)(& sh_eth_offset_gigabit));
  
#line 409 
  return __retres;
}


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static bool sh_eth_is_rz_fast_ether(struct sh_eth_private *mdp)
{
  bool __retres;
  
#line 414 
  __retres = (_Bool)(mdp->reg_offset == (u16 const *)(& sh_eth_offset_fast_rz));
  
#line 414 
  return __retres;
}


#line 417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_select_mii(struct net_device *ndev)
{
  
#line 419 
  u32 value = 0U;
  
#line 420 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 422 
  switch ((unsigned int)mdp->phy_interface) {
    case (unsigned int)2: 
#line 423 
    ;
    
#line 424 
    value = 2U;
    
#line 425 
    goto ldv_46497;
    case (unsigned int)1: 
#line 426 
    ;
    
#line 427 
    value = 1U;
    
#line 428 
    goto ldv_46497;
    case (unsigned int)6: 
#line 429 
    ;
    
#line 430 
    value = 0U;
    
#line 431 
    goto ldv_46497;
    default: 
#line 432 
    ;
    
#line 433 
    netdev_warn((struct net_device const *)ndev,"PHY interface mode was not setup. Set to MII.\n");
    
#line 435 
    value = 1U;
    
#line 436 
    goto ldv_46497;
  }
  ldv_46497: 
#line 439 
  ;
  
#line 439 
  sh_eth_write(ndev,value,64);
  
#line 440 
  return;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_duplex(struct net_device *ndev)
{
  
#line 444 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 446 
  if (mdp->duplex != 0) {
    u32 tmp_0;
    
#line 447 
    tmp_0 = sh_eth_read(ndev,28);
    
#line 447 
    ;
    
#line 447 
    sh_eth_write(ndev,tmp_0 | 2U,28);
  }
  else {
    u32 tmp_1;
    
#line 449 
    tmp_1 = sh_eth_read(ndev,28);
    
#line 449 
    ;
    
#line 449 
    sh_eth_write(ndev,tmp_1 & 4294967293U,28);
  }
  
#line 450 
  return;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rate_r8a777x(struct net_device *ndev)
{
  
#line 455 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 457 
  switch (mdp->speed) {
    u32 tmp_0;
    u32 tmp_1;
    case 10: 
#line 458 
    ;
    
#line 459 
    tmp_0 = sh_eth_read(ndev,28);
    
#line 459 
    ;
    
#line 459 
    sh_eth_write(ndev,tmp_0 & 4294967291U,28);
    
#line 460 
    goto ldv_46510;
    case 100: 
#line 461 
    ;
    
#line 462 
    tmp_1 = sh_eth_read(ndev,28);
    
#line 462 
    ;
    
#line 462 
    sh_eth_write(ndev,tmp_1 | 4U,28);
    
#line 463 
    goto ldv_46510;
    default: 
#line 464 
    ;
    
#line 465 
    goto ldv_46510;
  }
  ldv_46510: 
#line 467 
  ;
  
#line 468 
  return;
}


#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data r8a777x_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_r8a777x, .register_type = 2, .eesipr_value = 33489055U, .ecsr_value = 21U, .ecsipr_value = 21U, .fdr_value = 3855U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 2100992U, .eesr_err_check = 1197146112U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = 0U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = 0U, .no_trimd = 0U, .no_ade = 0U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data r8a779x_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_r8a777x, .register_type = 2, .eesipr_value = 33489055U, .ecsr_value = 21U, .ecsipr_value = 21U, .fdr_value = 3855U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 2100992U, .eesr_err_check = 1197146112U, .trscer_err_mask = 128U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = 0U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = 0U, .no_trimd = 0U, .no_ade = 0U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rtrate = 0U};

#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rate_sh7724(struct net_device *ndev)
{
  
#line 520 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 522 
  switch (mdp->speed) {
    u32 tmp_0;
    u32 tmp_1;
    case 10: 
#line 523 
    ;
    
#line 524 
    tmp_0 = sh_eth_read(ndev,28);
    
#line 524 
    ;
    
#line 524 
    sh_eth_write(ndev,tmp_0 & 4294967279U,28);
    
#line 525 
    goto ldv_46520;
    case 100: 
#line 526 
    ;
    
#line 527 
    tmp_1 = sh_eth_read(ndev,28);
    
#line 527 
    ;
    
#line 527 
    sh_eth_write(ndev,tmp_1 | 16U,28);
    
#line 528 
    goto ldv_46520;
    default: 
#line 529 
    ;
    
#line 530 
    goto ldv_46520;
  }
  ldv_46520: 
#line 532 
  ;
  
#line 533 
  return;
}


#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7724_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_sh7724, .register_type = 3, .eesipr_value = 33489055U, .ecsr_value = 21U, .ecsipr_value = 21U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 131072U, .tx_check = 2100992U, .eesr_err_check = 1197146112U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = 0U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_trimd = 0U, .no_ade = 0U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rate_sh7757(struct net_device *ndev)
{
  
#line 560 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 562 
  switch (mdp->speed) {
    case 10: 
#line 563 
    ;
    
#line 564 
    sh_eth_write(ndev,0U,62);
    
#line 565 
    goto ldv_46529;
    case 100: 
#line 566 
    ;
    
#line 567 
    sh_eth_write(ndev,1U,62);
    
#line 568 
    goto ldv_46529;
    default: 
#line 569 
    ;
    
#line 570 
    goto ldv_46529;
  }
  ldv_46529: 
#line 572 
  ;
  
#line 573 
  return;
}


#line 575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7757_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_sh7757, .register_type = 3, .eesipr_value = 25165823U, .ecsr_value = 0U, .ecsipr_value = 0U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 131072U, .tx_check = 2100992U, .eesr_err_check = 1197146112U, .trscer_err_mask = 0U, .irq_flags = 128UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = 0U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_trimd = 0U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U};

#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_chip_reset_giga(struct net_device *ndev)
{
  int i;
  u32 mahr[2U];
  u32 malr[2U];
  
#line 608 
  i = 0;
  
#line 608 
  goto ldv_46540;
  ldv_46539: 
#line 609 
  ;
  
#line 609 
  malr[i] = ioread32((void *)((unsigned long)(i * 2048) + 4276094408UL));
  
#line 610 
  mahr[i] = ioread32((void *)((unsigned long)(i * 2048) + 4276094400UL));
  
#line 608 
  i += 1;
  ldv_46540: 
#line 609 
  ;
  
#line 608 
  if (i <= 1) 
#line 610 
              goto ldv_46539; else 
#line 613 
                                   goto ldv_46541;
  ldv_46541: 
#line 614 
  ;
  
#line 614 
  iowrite32(1U,(void *)4276099072);
  
#line 615 
  if (1) 
#line 615 
         __const_udelay(4295000UL);
  else {
    
#line 615 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp;
      
#line 615 
      goto ldv_46544;
      ldv_46543: 
#line 616 
      ;
      
#line 615 
      __const_udelay(4295000UL);
      ldv_46544: 
#line 617 
      ;
      
#line 615 
      tmp = __ms;
      
#line 615 
      __ms -= 1UL;
      
#line 615 
      ;
      
#line 615 
      if (tmp != 0UL) 
#line 617 
                      goto ldv_46543; else 
#line 620 
                                           goto ldv_46545;
      ldv_46545: 
#line 621 
      ;
    }
  }
  
#line 618 
  i = 0;
  
#line 618 
  goto ldv_46547;
  ldv_46546: 
#line 619 
  ;
  
#line 619 
  iowrite32(malr[i],(void *)((unsigned long)(i * 2048) + 4276094408UL));
  
#line 620 
  iowrite32(mahr[i],(void *)((unsigned long)(i * 2048) + 4276094400UL));
  
#line 618 
  i += 1;
  ldv_46547: 
#line 619 
  ;
  
#line 618 
  if (i <= 1) 
#line 620 
              goto ldv_46546; else 
#line 623 
                                   goto ldv_46548;
  ldv_46548: 
#line 624 
  ;
  
#line 625 
  return;
}


#line 624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rate_giga(struct net_device *ndev)
{
  
#line 626 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 628 
  switch (mdp->speed) {
    case 10: 
#line 629 
    ;
    
#line 630 
    sh_eth_write(ndev,0U,47);
    
#line 631 
    goto ldv_46554;
    case 100: 
#line 632 
    ;
    
#line 633 
    sh_eth_write(ndev,16U,47);
    
#line 634 
    goto ldv_46554;
    case 1000: 
#line 635 
    ;
    
#line 636 
    sh_eth_write(ndev,32U,47);
    
#line 637 
    goto ldv_46554;
    default: 
#line 638 
    ;
    
#line 639 
    goto ldv_46554;
  }
  ldv_46554: 
#line 641 
  ;
  
#line 642 
  return;
}


#line 644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7757_data_giga = {.chip_reset = & sh_eth_chip_reset_giga, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_giga, .register_type = 0, .eesipr_value = 25165823U, .ecsr_value = 3U, .ecsipr_value = 7U, .fdr_value = 1839U, .fcftr_value = 0U, .rpadir_value = 131072U, .tx_check = 538968064U, .eesr_err_check = 3344629760U, .trscer_err_mask = 0U, .irq_flags = 128UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_trimd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_chip_reset(struct net_device *ndev)
{
  
#line 676 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 679 
  sh_eth_tsu_write(mdp,1U,65);
  
#line 680 
  if (1) 
#line 680 
         __const_udelay(4295000UL);
  else {
    
#line 680 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 680 
      goto ldv_46565;
      ldv_46564: 
#line 681 
      ;
      
#line 680 
      __const_udelay(4295000UL);
      ldv_46565: 
#line 682 
      ;
      
#line 680 
      tmp_0 = __ms;
      
#line 680 
      __ms -= 1UL;
      
#line 680 
      ;
      
#line 680 
      if (tmp_0 != 0UL) 
#line 682 
                        goto ldv_46564; else 
#line 685 
                                             goto ldv_46566;
      ldv_46566: 
#line 686 
      ;
    }
  }
  
#line 689 
  return;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rate_gether(struct net_device *ndev)
{
  
#line 685 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 687 
  switch (mdp->speed) {
    case 10: 
#line 688 
    ;
    
#line 689 
    sh_eth_write(ndev,0U,47);
    
#line 690 
    goto ldv_46572;
    case 100: 
#line 691 
    ;
    
#line 692 
    sh_eth_write(ndev,4U,47);
    
#line 693 
    goto ldv_46572;
    case 1000: 
#line 694 
    ;
    
#line 695 
    sh_eth_write(ndev,1U,47);
    
#line 696 
    goto ldv_46572;
    default: 
#line 697 
    ;
    
#line 698 
    goto ldv_46572;
  }
  ldv_46572: 
#line 700 
  ;
  
#line 701 
  return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7734_data = {.chip_reset = & sh_eth_chip_reset, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_gether, .register_type = 0, .eesipr_value = 25165823U, .ecsr_value = 3U, .ecsipr_value = 7U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 538968064U, .eesr_err_check = 3344629760U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = 0U, .no_trimd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .select_mii = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7763_data = {.chip_reset = & sh_eth_chip_reset, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_gether, .register_type = 0, .eesipr_value = 25165823U, .ecsr_value = 3U, .ecsipr_value = 7U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 538968064U, .eesr_err_check = 3344564224U, .trscer_err_mask = 0U, .irq_flags = 128UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = 0U, .no_trimd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_chip_reset_r8a7740(struct net_device *ndev)
{
  
#line 761 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 764 
  sh_eth_tsu_write(mdp,1U,65);
  
#line 765 
  if (1) 
#line 765 
         __const_udelay(4295000UL);
  else {
    
#line 765 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 765 
      goto ldv_46584;
      ldv_46583: 
#line 766 
      ;
      
#line 765 
      __const_udelay(4295000UL);
      ldv_46584: 
#line 767 
      ;
      
#line 765 
      tmp_0 = __ms;
      
#line 765 
      __ms -= 1UL;
      
#line 765 
      ;
      
#line 765 
      if (tmp_0 != 0UL) 
#line 767 
                        goto ldv_46583; else 
#line 770 
                                             goto ldv_46585;
      ldv_46585: 
#line 771 
      ;
    }
  }
  
#line 767 
  sh_eth_select_mii(ndev);
  
#line 768 
  return;
}


#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data r8a7740_data = {.chip_reset = & sh_eth_chip_reset_r8a7740, .set_duplex = & sh_eth_set_duplex, .set_rate = & sh_eth_set_rate_gether, .register_type = 0, .eesipr_value = 25165823U, .ecsr_value = 3U, .ecsipr_value = 7U, .fdr_value = 1807U, .fcftr_value = 0U, .rpadir_value = 131072U, .tx_check = 538968064U, .eesr_err_check = 3344629760U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_trimd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = 0U, .select_mii = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .shift_rd0 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rmiimode = 0U, .rtrate = 0U};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data r7s72100_data = {.chip_reset = & sh_eth_chip_reset, .set_duplex = & sh_eth_set_duplex, .set_rate = (void (*)(struct net_device *))0, .register_type = 1, .eesipr_value = 4286513311U, .ecsr_value = 1U, .ecsipr_value = 1U, .fdr_value = 1807U, .fcftr_value = 0U, .rpadir_value = 131072U, .tx_check = 538968064U, .eesr_err_check = 3344629760U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_trimd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .no_ade = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_crc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .select_mii = 0U, .shift_rd0 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rmiimode = 0U, .rtrate = 0U};

#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh7619_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = (void (*)(struct net_device *))0, .set_rate = (void (*)(struct net_device *))0, .register_type = 4, .eesipr_value = 25165823U, .ecsr_value = 0U, .ecsipr_value = 0U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 0U, .eesr_err_check = 0U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .mpr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .tpauser = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .bculr = 0U, .tsu = 0U, .hw_swap = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .rpadir = 0U, .no_trimd = 0U, .no_ade = 0U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_cpu_data sh771x_data = {.chip_reset = (void (*)(struct net_device *))0, .set_duplex = (void (*)(struct net_device *))0, .set_rate = (void (*)(struct net_device *))0, .register_type = 4, .eesipr_value = 25165823U, .ecsr_value = 0U, .ecsipr_value = 0U, .fdr_value = 0U, .fcftr_value = 0U, .rpadir_value = 0U, .tx_check = 0U, .eesr_err_check = 0U, .trscer_err_mask = 0U, .irq_flags = 0UL, .no_psr = 0U, .apr = 0U, .mpr = 0U, .tpauser = 0U, .bculr = 0U, .tsu = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U, .hw_swap = 0U, .rpadir = 0U, .no_trimd = 0U, .no_ade = 0U, .hw_crc = 0U, .select_mii = 0U, .shift_rd0 = 0U, .rmiimode = 0U, .rtrate = 0U};

#line 851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_default_cpu_data(struct sh_eth_cpu_data *cd)
{
  
#line 853 
  if (cd->ecsr_value == 0U) 
#line 854 
                            cd->ecsr_value = 55U; else ;
  
#line 856 
  if (cd->ecsipr_value == 0U) 
#line 857 
                              cd->ecsipr_value = 55U; else ;
  
#line 859 
  if (cd->fcftr_value == 0U) 
#line 860 
                             cd->fcftr_value = 458759U; else ;
  
#line 863 
  if (cd->fdr_value == 0U) 
#line 864 
                           cd->fdr_value = 1799U; else ;
  
#line 866 
  if (cd->tx_check == 0U) 
#line 867 
                          cd->tx_check = 2100992U; else ;
  
#line 869 
  if (cd->eesr_err_check == 0U) 
#line 870 
                                cd->eesr_err_check = 1205534720U; else ;
  
#line 872 
  if (cd->trscer_err_mask == 0U) 
#line 873 
                                 cd->trscer_err_mask = 656U; else ;
  
#line 874 
  return;
}


#line 876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_check_reset(struct net_device *ndev)
{
  u32 tmp;
  
#line 878 
  int ret = 0;
  
#line 879 
  int cnt = 100;
  
#line 881 
  goto ldv_46604;
  ldv_46603: 
#line 882 
  ;
  
#line 882 
  tmp = sh_eth_read(ndev,1);
  
#line 882 
  if ((tmp & 3U) == 0U) 
#line 883 
                        goto ldv_46598; else ;
  
#line 884 
  if (1) 
#line 884 
         __const_udelay(4295000UL);
  else {
    
#line 884 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 884 
      goto ldv_46601;
      ldv_46600: 
#line 885 
      ;
      
#line 884 
      __const_udelay(4295000UL);
      ldv_46601: 
#line 886 
      ;
      
#line 884 
      tmp_0 = __ms;
      
#line 884 
      __ms -= 1UL;
      
#line 884 
      ;
      
#line 884 
      if (tmp_0 != 0UL) 
#line 886 
                        goto ldv_46600; else 
#line 889 
                                             goto ldv_46602;
      ldv_46602: 
#line 890 
      ;
    }
  }
  
#line 885 
  cnt -= 1;
  ldv_46604: 
#line 886 
  ;
  
#line 881 
  if (cnt > 0) 
#line 883 
               goto ldv_46603; else 
#line 886 
                                    goto ldv_46598;
  ldv_46598: 
#line 887 
  ;
  
#line 887 
  if (cnt <= 0) {
    
#line 888 
    netdev_err((struct net_device const *)ndev,"Device reset failed\n");
    
#line 889 
    ret = -110;
  }
  else ;
  
#line 891 
  return ret;
}


#line 894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_reset(struct net_device *ndev)
{
  int __retres;
  bool tmp_4;
  
#line 896 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 897 
  int ret = 0;
  
#line 899 
  tmp_4 = sh_eth_is_gether(mdp);
  
#line 899 
  if ((int)tmp_4 != 0) 
#line 899 
                       goto _LOR;
  else {
    bool tmp_5;
    
#line 899 
    tmp_5 = sh_eth_is_rz_fast_ether(mdp);
    
#line 899 
    if ((int)tmp_5 != 0) {
      _LOR: {
              u32 tmp_0;
              
#line 900 
              sh_eth_write(ndev,3U,0);
              
#line 901 
              tmp_0 = sh_eth_read(ndev,1);
              
#line 901 
              ;
              
#line 901 
              sh_eth_write(ndev,tmp_0 | 3U,1);
              
#line 904 
              ret = sh_eth_check_reset(ndev);
              
#line 905 
              if (ret != 0) {
                
#line 906 
                __retres = ret;
                
#line 906 
                goto return_label;
              }
              else ;
              
#line 909 
              sh_eth_write(ndev,0U,6);
              
#line 910 
              sh_eth_write(ndev,0U,7);
              
#line 911 
              sh_eth_write(ndev,0U,8);
              
#line 912 
              sh_eth_write(ndev,0U,9);
              
#line 913 
              sh_eth_write(ndev,0U,10);
              
#line 914 
              sh_eth_write(ndev,0U,11);
              
#line 915 
              sh_eth_write(ndev,0U,12);
              
#line 916 
              sh_eth_write(ndev,0U,13);
              
#line 919 
              if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
                
#line 920 
                sh_eth_write(ndev,0U,63); else ;
              
#line 923 
              if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
                
#line 924 
                sh_eth_select_mii(ndev); else ;
            }
    }
    else {
      u32 tmp_1;
      u32 tmp_3;
      
#line 926 
      tmp_1 = sh_eth_read(ndev,1);
      
#line 926 
      ;
      
#line 926 
      sh_eth_write(ndev,tmp_1 | 1U,1);
      
#line 928 
      if (1) 
#line 928 
             __const_udelay(12885000UL);
      else {
        
#line 928 
        unsigned long __ms = 3UL;
        {
          unsigned long tmp_2;
          
#line 928 
          goto ldv_46612;
          ldv_46611: 
#line 929 
          ;
          
#line 928 
          __const_udelay(4295000UL);
          ldv_46612: 
#line 930 
          ;
          
#line 928 
          tmp_2 = __ms;
          
#line 928 
          __ms -= 1UL;
          
#line 928 
          ;
          
#line 928 
          if (tmp_2 != 0UL) 
#line 930 
                            goto ldv_46611; else 
#line 933 
                                                 goto ldv_46613;
          ldv_46613: 
#line 934 
          ;
        }
      }
      
#line 929 
      tmp_3 = sh_eth_read(ndev,1);
      
#line 929 
      ;
      
#line 929 
      sh_eth_write(ndev,tmp_3 & 4294967294U,1);
    }
  }
  
#line 933 
  __retres = ret;
  return_label: 
#line 933 
                return __retres;
}


#line 936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_receive_align(struct sk_buff *skb)
{
  
#line 938 
  uintptr_t reserve = (unsigned long)skb->data & 1UL;
  
#line 940 
  if (reserve != 0UL) 
#line 941 
                      skb_reserve(skb,(int)((uintptr_t)2U - reserve)); else ;
  
#line 942 
  return;
}


#line 946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
__inline static __u32 cpu_to_edmac(struct sh_eth_private *mdp, u32 x)
{
  __u32 __retres;
  
#line 948 
  switch (mdp->edmac_endian) {
    unsigned int tmp_0;
    case 0: 
#line 949 
    ;
    
#line 950 
    __retres = x;
    
#line 950 
    goto return_label;
    case 1: 
#line 951 
    ;
    
#line 952 
    if (0 != 0) 
#line 952 
                tmp_0 = (((x << 24) | ((x << 8) & 16711680U)) | ((x >> 8) & 65280U)) | (x >> 24); else 
                                                                    
#line 952 
                                                                    tmp_0 = __fswab32(x);
    
#line 952 
    __retres = tmp_0;
    
#line 952 
    goto return_label;
  }
  
#line 954 
  __retres = x;
  return_label: 
#line 954 
                return __retres;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void update_mac_address(struct net_device *ndev)
{
  
#line 971 
  sh_eth_write(ndev,(unsigned int)(((((int)*(ndev->dev_addr) << 24) | ((int)*(ndev->dev_addr + 1U) << 16)) | ((int)*(ndev->dev_addr + 2U) << 8)) | (int)*(ndev->dev_addr + 3U)),49);
  
#line 974 
  sh_eth_write(ndev,(unsigned int)(((int)*(ndev->dev_addr + 4U) << 8) | (int)*(ndev->dev_addr + 5U)),50);
  
#line 976 
  return;
}


#line 985  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void read_mac_address(struct net_device *ndev, unsigned char *mac)
{
  
#line 987 
  if ((((((unsigned int)*mac != 0U || (unsigned int)*(mac + 1U) != 0U) || (unsigned int)*(mac + 2U) != 0U) || (unsigned int)*(mac + 3U) != 0U) || (unsigned int)*(mac + 4U) != 0U) || (unsigned int)*(mac + 5U) != 0U) 
    
#line 988 
    memcpy((void *)ndev->dev_addr,(void const *)mac,6UL);
  else {
    u32 tmp;
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_4;
    
#line 990 
    tmp = sh_eth_read(ndev,49);
    
#line 990 
    *(ndev->dev_addr) = (unsigned char)(tmp >> 24);
    
#line 991 
    tmp_0 = sh_eth_read(ndev,49);
    
#line 991 
    *(ndev->dev_addr + 1U) = (unsigned char)(tmp_0 >> 16);
    
#line 992 
    tmp_1 = sh_eth_read(ndev,49);
    
#line 992 
    *(ndev->dev_addr + 2U) = (unsigned char)(tmp_1 >> 8);
    
#line 993 
    tmp_2 = sh_eth_read(ndev,49);
    
#line 993 
    *(ndev->dev_addr + 3U) = (unsigned char)tmp_2;
    
#line 994 
    tmp_3 = sh_eth_read(ndev,50);
    
#line 994 
    *(ndev->dev_addr + 4U) = (unsigned char)(tmp_3 >> 8);
    
#line 995 
    tmp_4 = sh_eth_read(ndev,50);
    
#line 995 
    *(ndev->dev_addr + 5U) = (unsigned char)tmp_4;
  }
  
#line 997 
  return;
}


#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u32 sh_eth_get_edtrr_trns(struct sh_eth_private *mdp)
{
  u32 __retres;
  bool tmp;
  
#line 1001 
  tmp = sh_eth_is_gether(mdp);
  
#line 1001 
  if ((int)tmp != 0) 
#line 1001 
                     goto _LOR;
  else {
    bool tmp_0;
    
#line 1001 
    tmp_0 = sh_eth_is_rz_fast_ether(mdp);
    
#line 1001 
    if ((int)tmp_0 != 0) {
      _LOR: {
              
#line 1002 
              __retres = 3U;
              
#line 1002 
              goto return_label;
            }
    }
    else {
      
#line 1004 
      __retres = 1U;
      
#line 1004 
      goto return_label;
    }
  }
  return_label: 
#line 1001 
                return __retres;
}


#line 1018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void bb_set(void *addr, u32 msk)
{
  unsigned int tmp;
  
#line 1020 
  ;
  
#line 1020 
  tmp = ioread32(addr);
  
#line 1020 
  ;
  
#line 1020 
  iowrite32(tmp | msk,addr);
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void bb_clr(void *addr, u32 msk)
{
  unsigned int tmp;
  
#line 1026 
  ;
  
#line 1026 
  tmp = ioread32(addr);
  
#line 1026 
  ;
  
#line 1026 
  iowrite32(tmp & ~ msk,addr);
  
#line 1027 
  return;
}


#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int bb_read(void *addr, u32 msk)
{
  int __retres;
  unsigned int tmp;
  
#line 1032 
  tmp = ioread32(addr);
  
#line 1032 
  ;
  
#line 1032 
  __retres = (tmp & msk) != 0U;
  
#line 1032 
  return __retres;
}


#line 1036  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_mmd_ctrl(struct mdiobb_ctrl *ctrl, int bit)
{
  struct bb_info *tmp;
  {
    
#line 1038 
    struct mdiobb_ctrl const *__mptr = (struct mdiobb_ctrl const *)ctrl;
    
#line 1038 
    tmp = (struct bb_info *)__mptr + 18446744073709551608U;
  }
  
#line 1038 
  struct bb_info *bitbang = tmp;
  
#line 1040 
  if (bitbang->set_gate != (void (*)(void *))0) 
#line 1041 
                                                (*(bitbang->set_gate))(bitbang->addr); else ;
  
#line 1043 
  if (bit != 0) 
#line 1044 
                bb_set(bitbang->addr,bitbang->mmd_msk); else 
#line 1046 
                                                             bb_clr(bitbang->addr,bitbang->mmd_msk);
  
#line 1047 
  return;
}


#line 1050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_set_mdio(struct mdiobb_ctrl *ctrl, int bit)
{
  struct bb_info *tmp;
  {
    
#line 1052 
    struct mdiobb_ctrl const *__mptr = (struct mdiobb_ctrl const *)ctrl;
    
#line 1052 
    tmp = (struct bb_info *)__mptr + 18446744073709551608U;
  }
  
#line 1052 
  struct bb_info *bitbang = tmp;
  
#line 1054 
  if (bitbang->set_gate != (void (*)(void *))0) 
#line 1055 
                                                (*(bitbang->set_gate))(bitbang->addr); else ;
  
#line 1057 
  if (bit != 0) 
#line 1058 
                bb_set(bitbang->addr,bitbang->mdo_msk); else 
#line 1060 
                                                             bb_clr(bitbang->addr,bitbang->mdo_msk);
  
#line 1061 
  return;
}


#line 1064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_get_mdio(struct mdiobb_ctrl *ctrl)
{
  struct bb_info *tmp;
  int tmp_0;
  {
    
#line 1066 
    struct mdiobb_ctrl const *__mptr = (struct mdiobb_ctrl const *)ctrl;
    
#line 1066 
    tmp = (struct bb_info *)__mptr + 18446744073709551608U;
  }
  
#line 1066 
  struct bb_info *bitbang = tmp;
  
#line 1068 
  if (bitbang->set_gate != (void (*)(void *))0) 
#line 1069 
                                                (*(bitbang->set_gate))(bitbang->addr); else ;
  
#line 1071 
  tmp_0 = bb_read(bitbang->addr,bitbang->mdi_msk);
  
#line 1071 
  return tmp_0;
}


#line 1075  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_mdc_ctrl(struct mdiobb_ctrl *ctrl, int bit)
{
  struct bb_info *tmp;
  {
    
#line 1077 
    struct mdiobb_ctrl const *__mptr = (struct mdiobb_ctrl const *)ctrl;
    
#line 1077 
    tmp = (struct bb_info *)__mptr + 18446744073709551608U;
  }
  
#line 1077 
  struct bb_info *bitbang = tmp;
  
#line 1079 
  if (bitbang->set_gate != (void (*)(void *))0) 
#line 1080 
                                                (*(bitbang->set_gate))(bitbang->addr); else ;
  
#line 1082 
  if (bit != 0) 
#line 1083 
                bb_set(bitbang->addr,bitbang->mdc_msk); else 
#line 1085 
                                                             bb_clr(bitbang->addr,bitbang->mdc_msk);
  
#line 1086 
  return;
}


#line 1089  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct mdiobb_ops bb_ops = {.owner = & __this_module, .set_mdc = & sh_mdc_ctrl, .set_mdio_dir = & sh_mmd_ctrl, .set_mdio_data = & sh_set_mdio, .get_mdio_data = & sh_get_mdio};

#line 1098  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_ring_free(struct net_device *ndev)
{
  int i;
  
#line 1100 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1104 
  if (mdp->rx_skbuff != (struct sk_buff **)0) {
    
#line 1105 
    i = 0;
    
#line 1105 
    goto ldv_46695;
    ldv_46694: 
#line 1106 
    ;
    
#line 1106 
    consume_skb(*(mdp->rx_skbuff + i));
    
#line 1105 
    i += 1;
    ldv_46695: 
#line 1106 
    ;
    
#line 1105 
    if (mdp->num_rx_ring > (unsigned int)i) 
#line 1107 
                                            goto ldv_46694; else 
#line 1110 
                                                                 goto ldv_46696;
    ldv_46696: 
#line 1111 
    ;
  }
  else ;
  
#line 1108 
  kfree((void const *)mdp->rx_skbuff);
  
#line 1109 
  mdp->rx_skbuff = (struct sk_buff **)0;
  
#line 1112 
  if (mdp->tx_skbuff != (struct sk_buff **)0) {
    
#line 1113 
    i = 0;
    
#line 1113 
    goto ldv_46698;
    ldv_46697: 
#line 1114 
    ;
    
#line 1114 
    consume_skb(*(mdp->tx_skbuff + i));
    
#line 1113 
    i += 1;
    ldv_46698: 
#line 1114 
    ;
    
#line 1113 
    if (mdp->num_tx_ring > (unsigned int)i) 
#line 1115 
                                            goto ldv_46697; else 
#line 1118 
                                                                 goto ldv_46699;
    ldv_46699: 
#line 1119 
    ;
  }
  else ;
  
#line 1116 
  kfree((void const *)mdp->tx_skbuff);
  
#line 1117 
  mdp->tx_skbuff = (struct sk_buff **)0;
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_ring_format(struct net_device *ndev)
{
  int i;
  struct sk_buff *skb;
  dma_addr_t dma_addr;
  int tmp_0;
  __u32 tmp_3;
  __u32 tmp_6;
  
#line 1123 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1126 
  struct sh_eth_rxdesc *rxdesc = (struct sh_eth_rxdesc *)0;
  
#line 1127 
  struct sh_eth_txdesc *txdesc = (struct sh_eth_txdesc *)0;
  
#line 1128 
  int rx_ringsize = (int)(mdp->num_rx_ring * 16U);
  
#line 1129 
  int tx_ringsize = (int)(mdp->num_tx_ring * 16U);
  
#line 1130 
  int skbuff_size = (int)(mdp->rx_buf_sz + 1U);
  
#line 1133 
  mdp->cur_rx = 0U;
  
#line 1134 
  mdp->cur_tx = 0U;
  
#line 1135 
  mdp->dirty_rx = 0U;
  
#line 1136 
  mdp->dirty_tx = 0U;
  
#line 1138 
  memset((void *)mdp->rx_ring,0,(unsigned long)rx_ringsize);
  
#line 1141 
  i = 0;
  
#line 1141 
  goto ldv_46714;
  ldv_46713: 
#line 1142 
  ;
  
#line 1143 
  *(mdp->rx_skbuff + i) = (struct sk_buff *)0;
  
#line 1144 
  skb = netdev_alloc_skb(ndev,(unsigned int)skbuff_size);
  
#line 1145 
  if (skb == (struct sk_buff *)0) 
#line 1146 
                                  goto ldv_46712; else ;
  
#line 1147 
  sh_eth_set_receive_align(skb);
  
#line 1150 
  rxdesc = mdp->rx_ring + i;
  
#line 1152 
  rxdesc->buffer_length = (unsigned short)(((unsigned int)((unsigned short)mdp->rx_buf_sz) + 15U) & 65520U);
  
#line 1153 
  dma_addr = dma_map_single_attrs(& ndev->dev,(void *)skb->data,(unsigned long)rxdesc->buffer_length,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 1156 
  tmp_0 = dma_mapping_error(& ndev->dev,dma_addr);
  
#line 1156 
  if (tmp_0 != 0) {
    
#line 1157 
    kfree_skb(skb);
    
#line 1158 
    goto ldv_46712;
  }
  else ;
  
#line 1160 
  *(mdp->rx_skbuff + i) = skb;
  
#line 1161 
  rxdesc->addr = (unsigned int)dma_addr;
  
#line 1162 
  rxdesc->status = cpu_to_edmac(mdp,2952790016U);
  
#line 1165 
  if (i == 0) {
    bool tmp_1;
    
#line 1166 
    sh_eth_write(ndev,(unsigned int)mdp->rx_desc_dma,10);
    
#line 1167 
    tmp_1 = sh_eth_is_gether(mdp);
    
#line 1167 
    if ((int)tmp_1 != 0) 
#line 1169 
                         sh_eth_write(ndev,(unsigned int)mdp->rx_desc_dma,11);
    else {
      bool tmp_2;
      
#line 1167 
      tmp_2 = sh_eth_is_rz_fast_ether(mdp);
      
#line 1167 
      if ((int)tmp_2 != 0) 
#line 1169 
                           sh_eth_write(ndev,(unsigned int)mdp->rx_desc_dma,11); else ;
    }
  }
  else ;
  
#line 1141 
  i += 1;
  ldv_46714: 
#line 1142 
  ;
  
#line 1141 
  if (mdp->num_rx_ring > (unsigned int)i) 
#line 1143 
                                          goto ldv_46713; else 
#line 1146 
                                                               goto ldv_46712;
  ldv_46712: 
#line 1147 
  ;
  
#line 1173 
  mdp->dirty_rx = (unsigned int)i - mdp->num_rx_ring;
  
#line 1176 
  tmp_3 = cpu_to_edmac(mdp,1073741824U);
  
#line 1176 
  rxdesc->status |= tmp_3;
  
#line 1178 
  memset((void *)mdp->tx_ring,0,(unsigned long)tx_ringsize);
  
#line 1181 
  i = 0;
  
#line 1181 
  goto ldv_46716;
  ldv_46715: 
#line 1182 
  ;
  
#line 1182 
  *(mdp->tx_skbuff + i) = (struct sk_buff *)0;
  
#line 1183 
  txdesc = mdp->tx_ring + i;
  
#line 1184 
  txdesc->status = cpu_to_edmac(mdp,805306368U);
  
#line 1185 
  txdesc->buffer_length = (unsigned short)0U;
  
#line 1186 
  if (i == 0) {
    bool tmp_4;
    
#line 1188 
    sh_eth_write(ndev,(unsigned int)mdp->tx_desc_dma,6);
    
#line 1189 
    tmp_4 = sh_eth_is_gether(mdp);
    
#line 1189 
    if ((int)tmp_4 != 0) 
#line 1191 
                         sh_eth_write(ndev,(unsigned int)mdp->tx_desc_dma,7);
    else {
      bool tmp_5;
      
#line 1189 
      tmp_5 = sh_eth_is_rz_fast_ether(mdp);
      
#line 1189 
      if ((int)tmp_5 != 0) 
#line 1191 
                           sh_eth_write(ndev,(unsigned int)mdp->tx_desc_dma,7); else ;
    }
  }
  else ;
  
#line 1181 
  i += 1;
  ldv_46716: 
#line 1182 
  ;
  
#line 1181 
  if (mdp->num_tx_ring > (unsigned int)i) 
#line 1183 
                                          goto ldv_46715; else 
#line 1186 
                                                               goto ldv_46717;
  ldv_46717: 
#line 1187 
  ;
  
#line 1195 
  tmp_6 = cpu_to_edmac(mdp,1073741824U);
  
#line 1195 
  txdesc->status |= tmp_6;
  
#line 1196 
  return;
}


#line 1199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_ring_init(struct net_device *ndev)
{
  int __retres;
  int rx_ringsize;
  int tx_ringsize;
  
#line 1201 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1202 
  int ret = 0;
  
#line 1209 
  if (ndev->mtu > 1492U) 
#line 1209 
                         mdp->rx_buf_sz = ((ndev->mtu + 33U) & 4294967288U) + 18U; else 
                                                                    
#line 1209 
                                                                    mdp->rx_buf_sz = 1538U;
  
#line 1211 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1212 
                                                              mdp->rx_buf_sz = mdp->rx_buf_sz; else ;
  
#line 1215 
  mdp->rx_skbuff = (struct sk_buff **)kmalloc_array((unsigned long)mdp->num_rx_ring,8UL,208U);
  
#line 1217 
  if (mdp->rx_skbuff == (struct sk_buff **)0) {
    
#line 1218 
    ret = -12;
    
#line 1219 
    __retres = ret;
    
#line 1219 
    goto return_label;
  }
  else ;
  
#line 1222 
  mdp->tx_skbuff = (struct sk_buff **)kmalloc_array((unsigned long)mdp->num_tx_ring,8UL,208U);
  
#line 1224 
  if (mdp->tx_skbuff == (struct sk_buff **)0) {
    
#line 1225 
    ret = -12;
    
#line 1226 
    goto skb_ring_free;
  }
  else ;
  
#line 1230 
  rx_ringsize = (int)(mdp->num_rx_ring * 16U);
  
#line 1231 
  mdp->rx_ring = (struct sh_eth_rxdesc *)dma_alloc_attrs((struct device *)0,(unsigned long)rx_ringsize,& mdp->rx_desc_dma,208U,(struct dma_attrs *)0);
  
#line 1233 
  if (mdp->rx_ring == (struct sh_eth_rxdesc *)0) {
    
#line 1234 
    ret = -12;
    
#line 1235 
    goto desc_ring_free;
  }
  else ;
  
#line 1238 
  mdp->dirty_rx = 0U;
  
#line 1241 
  tx_ringsize = (int)(mdp->num_tx_ring * 16U);
  
#line 1242 
  mdp->tx_ring = (struct sh_eth_txdesc *)dma_alloc_attrs((struct device *)0,(unsigned long)tx_ringsize,& mdp->tx_desc_dma,208U,(struct dma_attrs *)0);
  
#line 1244 
  if (mdp->tx_ring == (struct sh_eth_txdesc *)0) {
    
#line 1245 
    ret = -12;
    
#line 1246 
    goto desc_ring_free;
  }
  else ;
  
#line 1248 
  __retres = ret;
  
#line 1248 
  goto return_label;
  desc_ring_free: 
#line 1250 
  ;
  
#line 1252 
  dma_free_attrs((struct device *)0,(unsigned long)rx_ringsize,(void *)mdp->rx_ring,mdp->rx_desc_dma,(struct dma_attrs *)0);
  skb_ring_free: 
#line 1254 
  ;
  
#line 1256 
  sh_eth_ring_free(ndev);
  
#line 1257 
  mdp->tx_ring = (struct sh_eth_txdesc *)0;
  
#line 1258 
  mdp->rx_ring = (struct sh_eth_rxdesc *)0;
  
#line 1260 
  __retres = ret;
  return_label: 
#line 1260 
                return __retres;
}


#line 1263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_free_dma_buffer(struct sh_eth_private *mdp)
{
  int ringsize;
  
#line 1267 
  if (mdp->rx_ring != (struct sh_eth_rxdesc *)0) {
    
#line 1268 
    ringsize = (int)(mdp->num_rx_ring * 16U);
    
#line 1269 
    dma_free_attrs((struct device *)0,(unsigned long)ringsize,(void *)mdp->rx_ring,mdp->rx_desc_dma,(struct dma_attrs *)0);
    
#line 1271 
    mdp->rx_ring = (struct sh_eth_rxdesc *)0;
  }
  else ;
  
#line 1274 
  if (mdp->tx_ring != (struct sh_eth_txdesc *)0) {
    
#line 1275 
    ringsize = (int)(mdp->num_tx_ring * 16U);
    
#line 1276 
    dma_free_attrs((struct device *)0,(unsigned long)ringsize,(void *)mdp->tx_ring,mdp->tx_desc_dma,(struct dma_attrs *)0);
    
#line 1278 
    mdp->tx_ring = (struct sh_eth_txdesc *)0;
  }
  else ;
  
#line 1280 
  return;
}


#line 1282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_dev_init(struct net_device *ndev, bool start)
{
  int __retres;
  u32 val;
  u32 tmp_0;
  u32 tmp_1;
  int tmp_2;
  
#line 1284 
  int ret = 0;
  
#line 1285 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1289 
  ret = sh_eth_reset(ndev);
  
#line 1290 
  if (ret != 0) {
    
#line 1291 
    __retres = ret;
    
#line 1291 
    goto return_label;
  }
  else ;
  
#line 1293 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
#line 1294 
                                                              sh_eth_write(ndev,1U,22); else ;
  
#line 1297 
  sh_eth_ring_format(ndev);
  
#line 1298 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1299 
                                                              sh_eth_write(ndev,(mdp->cd)->rpadir_value,24); else ;
  
#line 1302 
  sh_eth_write(ndev,0U,5);
  
#line 1305 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1306 
                                                              sh_eth_write(ndev,64U,1); else 
                                                                    
#line 1309 
                                                                    sh_eth_write(ndev,0U,1);
  
#line 1312 
  sh_eth_write(ndev,(mdp->cd)->fdr_value,17);
  
#line 1313 
  sh_eth_write(ndev,0U,16);
  
#line 1316 
  sh_eth_write(ndev,1U,18);
  
#line 1318 
  sh_eth_write(ndev,(mdp->cd)->trscer_err_mask,14);
  
#line 1320 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1321 
                                                              sh_eth_write(ndev,2048U,48); else ;
  
#line 1323 
  sh_eth_write(ndev,(mdp->cd)->fcftr_value,23);
  
#line 1325 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) == 0U) 
#line 1326 
                                                              sh_eth_write(ndev,0U,25); else ;
  
#line 1329 
  sh_eth_write(ndev,ndev->mtu + 22U,35);
  
#line 1332 
  tmp_0 = sh_eth_read(ndev,4);
  
#line 1332 
  ;
  
#line 1332 
  sh_eth_write(ndev,tmp_0,4);
  
#line 1333 
  if ((int)start != 0) {
    
#line 1334 
    mdp->irq_enabled = (_Bool)1;
    
#line 1335 
    sh_eth_write(ndev,(mdp->cd)->eesipr_value,5);
  }
  else ;
  
#line 1339 
  tmp_1 = sh_eth_read(ndev,28);
  
#line 1340 
  if (mdp->duplex != 0) 
#line 1340 
                        tmp_2 = 2; else 
#line 1340 
                                        tmp_2 = 0;
  
#line 1339 
  val = ((tmp_1 & 2U) | (unsigned int)tmp_2) | 524384U;
  
#line 1342 
  sh_eth_write(ndev,val,28);
  
#line 1344 
  if ((mdp->cd)->set_rate != (void (*)(struct net_device *))0) 
#line 1345 
                                                               (*((mdp->cd)->set_rate))(ndev); else ;
  
#line 1348 
  sh_eth_write(ndev,(mdp->cd)->ecsr_value,29);
  
#line 1351 
  if ((int)start != 0) 
#line 1352 
                       sh_eth_write(ndev,(mdp->cd)->ecsipr_value,30); else ;
  
#line 1355 
  update_mac_address(ndev);
  
#line 1358 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1359 
                                                              sh_eth_write(ndev,1U,37); else ;
  
#line 1360 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1361 
                                                              sh_eth_write(ndev,1U,38); else ;
  
#line 1362 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1363 
                                                              sh_eth_write(ndev,0U,43); else ;
  
#line 1365 
  if ((int)start != 0) {
    
#line 1367 
    sh_eth_write(ndev,1U,3);
    
#line 1369 
    netif_start_queue(ndev);
  }
  else ;
  
#line 1372 
  __retres = ret;
  return_label: 
#line 1372 
                return __retres;
}


#line 1375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_dev_exit(struct net_device *ndev)
{
  int i;
  __u32 tmp_0;
  
#line 1377 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1383 
  i = 0;
  
#line 1383 
  goto ldv_46744;
  ldv_46743: 
#line 1384 
  ;
  
#line 1384 
  tmp_0 = cpu_to_edmac(mdp,2147483648U);
  
#line 1384 
  (mdp->tx_ring + i)->status &= ~ tmp_0;
  
#line 1383 
  i += 1;
  ldv_46744: 
#line 1384 
  ;
  
#line 1383 
  if (mdp->num_tx_ring > (unsigned int)i) 
#line 1385 
                                          goto ldv_46743; else 
#line 1388 
                                                               goto ldv_46745;
  ldv_46745: 
#line 1389 
  ;
  
#line 1387 
  sh_eth_rcv_snd_disable(ndev);
  
#line 1390 
  sh_eth_write(ndev,0U,3);
  
#line 1397 
  msleep(2U);
  
#line 1398 
  sh_eth_get_stats(ndev);
  
#line 1399 
  sh_eth_reset(ndev);
  
#line 1402 
  update_mac_address(ndev);
  
#line 1403 
  return;
}


#line 1406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_txfree(struct net_device *ndev)
{
  struct sh_eth_txdesc *txdesc;
  __u32 tmp_0;
  
#line 1408 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1410 
  int free_num = 0;
  
#line 1411 
  int entry = 0;
  
#line 1413 
  goto ldv_46755;
  ldv_46754: 
#line 1414 
  ;
  
#line 1414 
  entry = (int)(mdp->dirty_tx % mdp->num_tx_ring);
  
#line 1415 
  txdesc = mdp->tx_ring + entry;
  
#line 1416 
  tmp_0 = cpu_to_edmac(mdp,2147483648U);
  
#line 1416 
  ;
  
#line 1416 
  if ((txdesc->status & tmp_0) != 0U) 
#line 1417 
                                      goto ldv_46753; else ;
  
#line 1418 
  ldv_inline_asm();
  
#line 1420 
  if ((mdp->msg_enable & 1024) != 0) {
    __u32 tmp_1;
    
#line 1420 
    tmp_1 = cpu_to_edmac(mdp,txdesc->status);
    
#line 1420 
    ;
    
#line 1420 
    ;
    
#line 1420 
    netdev_info((struct net_device const *)ndev,"tx entry %d status 0x%08x\n",entry,tmp_1);
  }
  else ;
  
#line 1424 
  if (*(mdp->tx_skbuff + entry) != (struct sk_buff *)0) {
    
#line 1425 
    dma_unmap_single_attrs(& ndev->dev,(unsigned long long)txdesc->addr,(unsigned long)txdesc->buffer_length,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 1427 
    dev_kfree_skb_irq(*(mdp->tx_skbuff + entry));
    
#line 1428 
    *(mdp->tx_skbuff + entry) = (struct sk_buff *)0;
    
#line 1429 
    free_num += 1;
  }
  else ;
  
#line 1431 
  txdesc->status = cpu_to_edmac(mdp,805306368U);
  
#line 1432 
  if (mdp->num_tx_ring + 4294967295U <= (unsigned int)entry) {
    __u32 tmp_2;
    
#line 1433 
    tmp_2 = cpu_to_edmac(mdp,1073741824U);
    
#line 1433 
    txdesc->status |= tmp_2;
  }
  else ;
  
#line 1435 
  ndev->stats.tx_packets += 1UL;
  
#line 1436 
  ndev->stats.tx_bytes += (unsigned long)txdesc->buffer_length;
  
#line 1413 
  mdp->dirty_tx += 1U;
  ldv_46755: 
#line 1414 
  ;
  
#line 1413 
  if (mdp->cur_tx != mdp->dirty_tx) 
#line 1415 
                                    goto ldv_46754; else 
#line 1418 
                                                         goto ldv_46753;
  ldv_46753: 
#line 1419 
  ;
  
#line 1438 
  return free_num;
}


#line 1442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_rx(struct net_device *ndev, u32 intr_status, int *quota)
{
  int __retres;
  struct sh_eth_rxdesc *rxdesc;
  int limit;
  struct sk_buff *skb;
  u32 desc_status;
  dma_addr_t dma_addr;
  int tmp_1;
  __u32 tmp_3;
  u32 tmp_9;
  
#line 1444 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1447 
  int entry = (int)(mdp->cur_rx % mdp->num_rx_ring);
  
#line 1448 
  int boguscnt = (int)((mdp->dirty_rx + mdp->num_rx_ring) - mdp->cur_rx);
  
#line 1451 
  u16 pkt_len = (unsigned short)0U;
  
#line 1453 
  int skbuff_size = (int)(mdp->rx_buf_sz + 1U);
  {
    int tmp_0;
    
#line 1456 
    int _min1 = boguscnt;
    
#line 1456 
    int _min2 = *quota;
    
#line 1456 
    if (_min1 < _min2) 
#line 1456 
                       tmp_0 = _min1; else 
#line 1456 
                                           tmp_0 = _min2;
    
#line 1456 
    tmp_1 = tmp_0;
  }
  
#line 1456 
  boguscnt = tmp_1;
  
#line 1457 
  limit = boguscnt;
  
#line 1458 
  rxdesc = mdp->rx_ring + entry;
  
#line 1459 
  goto ldv_46776;
  ldv_46775: 
#line 1460 
  ;
  
#line 1461 
  ldv_inline_asm();
  
#line 1462 
  desc_status = cpu_to_edmac(mdp,rxdesc->status);
  
#line 1463 
  pkt_len = rxdesc->frame_length;
  
#line 1465 
  boguscnt -= 1;
  
#line 1465 
  if (boguscnt < 0) 
#line 1466 
                    goto ldv_46774; else ;
  
#line 1468 
  if ((mdp->msg_enable & 2048) != 0) 
#line 1468 
                                     netdev_info((struct net_device const *)ndev,"rx entry %d status 0x%08x len %d\n",entry,desc_status,(int)pkt_len); else ;
  
#line 1472 
  if ((desc_status & 268435456U) == 0U) 
#line 1473 
                                        ndev->stats.rx_length_errors += 1UL; else ;
  
#line 1481 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
#line 1482 
                                                              desc_status >>= 16; else ;
  
#line 1484 
  if ((desc_status & 575U) != 0U) {
    
#line 1486 
    ndev->stats.rx_errors += 1UL;
    
#line 1487 
    if ((desc_status & 1U) != 0U) 
#line 1488 
                                  ndev->stats.rx_crc_errors += 1UL; else ;
    
#line 1489 
    if ((desc_status & 2U) != 0U) 
#line 1490 
                                  ndev->stats.rx_frame_errors += 1UL; else ;
    
#line 1491 
    if ((desc_status & 4U) != 0U) 
#line 1492 
                                  ndev->stats.rx_length_errors += 1UL; else ;
    
#line 1493 
    if ((desc_status & 8U) != 0U) 
#line 1494 
                                  ndev->stats.rx_length_errors += 1UL; else ;
    
#line 1495 
    if ((desc_status & 32U) != 0U) 
#line 1496 
                                   ndev->stats.rx_missed_errors += 1UL; else ;
    
#line 1497 
    if ((desc_status & 512U) != 0U) 
#line 1498 
                                    ndev->stats.rx_over_errors += 1UL; else ;
  }
  else {
    
#line 1500 
    if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) {
      void *tmp_2;
      
#line 1501 
      ;
      
#line 1502 
      tmp_2 = phys_to_virt((unsigned long long)(rxdesc->addr + 3U) & 4294967292ULL);
      
#line 1501 
      sh_eth_soft_swap((char *)tmp_2,(int)pkt_len + 2);
    }
    else ;
    
#line 1504 
    skb = *(mdp->rx_skbuff + entry);
    
#line 1505 
    *(mdp->rx_skbuff + entry) = (struct sk_buff *)0;
    
#line 1506 
    if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 1507 
                                                                skb_reserve(skb,0); else ;
    
#line 1508 
    dma_unmap_single_attrs(& ndev->dev,(unsigned long long)rxdesc->addr,(unsigned long)(mdp->rx_buf_sz + 15U) & 4294967280UL,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1511 
    skb_put(skb,(unsigned int)pkt_len);
    
#line 1512 
    skb->protocol = eth_type_trans(skb,ndev);
    
#line 1513 
    netif_receive_skb(skb);
    
#line 1514 
    ndev->stats.rx_packets += 1UL;
    
#line 1515 
    ndev->stats.rx_bytes += (unsigned long)pkt_len;
    
#line 1516 
    if ((desc_status & 128U) != 0U) 
#line 1517 
                                    ndev->stats.multicast += 1UL; else ;
  }
  
#line 1519 
  mdp->cur_rx += 1U;
  
#line 1519 
  entry = (int)(mdp->cur_rx % mdp->num_rx_ring);
  
#line 1520 
  rxdesc = mdp->rx_ring + entry;
  ldv_46776: 
#line 1521 
  ;
  
#line 1459 
  tmp_3 = cpu_to_edmac(mdp,2147483648U);
  
#line 1459 
  ;
  
#line 1459 
  if ((rxdesc->status & tmp_3) == 0U) 
#line 1461 
                                      goto ldv_46775; else 
#line 1464 
                                                           goto ldv_46774;
  ldv_46774: 
#line 1465 
  ;
  
#line 1524 
  goto ldv_46779;
  ldv_46778: 
#line 1525 
  ;
  
#line 1525 
  entry = (int)(mdp->dirty_rx % mdp->num_rx_ring);
  
#line 1526 
  rxdesc = mdp->rx_ring + entry;
  
#line 1528 
  rxdesc->buffer_length = (unsigned short)(((unsigned int)((unsigned short)mdp->rx_buf_sz) + 15U) & 65520U);
  
#line 1530 
  if (*(mdp->rx_skbuff + entry) == (struct sk_buff *)0) {
    int tmp_4;
    
#line 1531 
    skb = netdev_alloc_skb(ndev,(unsigned int)skbuff_size);
    
#line 1532 
    if (skb == (struct sk_buff *)0) 
#line 1533 
                                    goto ldv_46777; else ;
    
#line 1534 
    sh_eth_set_receive_align(skb);
    
#line 1535 
    dma_addr = dma_map_single_attrs(& ndev->dev,(void *)skb->data,(unsigned long)rxdesc->buffer_length,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1538 
    tmp_4 = dma_mapping_error(& ndev->dev,dma_addr);
    
#line 1538 
    if (tmp_4 != 0) {
      
#line 1539 
      kfree_skb(skb);
      
#line 1540 
      goto ldv_46777;
    }
    else ;
    
#line 1542 
    *(mdp->rx_skbuff + entry) = skb;
    
#line 1544 
    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 1545 
    rxdesc->addr = (unsigned int)dma_addr;
  }
  else ;
  
#line 1547 
  ldv_inline_asm();
  
#line 1548 
  if (mdp->num_rx_ring + 4294967295U <= (unsigned int)entry) {
    __u32 tmp_5;
    
#line 1550 
    tmp_5 = cpu_to_edmac(mdp,4026531840U);
    
#line 1550 
    rxdesc->status |= tmp_5;
  }
  else {
    __u32 tmp_6;
    
#line 1553 
    tmp_6 = cpu_to_edmac(mdp,2952790016U);
    
#line 1553 
    rxdesc->status |= tmp_6;
  }
  
#line 1524 
  mdp->dirty_rx += 1U;
  ldv_46779: 
#line 1525 
  ;
  
#line 1524 
  if (mdp->cur_rx != mdp->dirty_rx) 
#line 1526 
                                    goto ldv_46778; else 
#line 1529 
                                                         goto ldv_46777;
  ldv_46777: 
#line 1530 
  ;
  
#line 1558 
  tmp_9 = sh_eth_read(ndev,3);
  
#line 1558 
  if ((tmp_9 & 1U) == 0U) {
    
#line 1560 
    if ((intr_status & 131072U) != 0U && (unsigned int)*(mdp->reg_offset + 11U) != 65535U) {
      u32 tmp_7;
      u32 tmp_8;
      
#line 1562 
      tmp_7 = sh_eth_read(ndev,11);
      
#line 1562 
      tmp_8 = sh_eth_read(ndev,10);
      
#line 1562 
      u32 count = (tmp_7 - tmp_8) >> 4;
      
#line 1565 
      mdp->cur_rx = count;
      
#line 1566 
      mdp->dirty_rx = count;
    }
    else ;
    
#line 1568 
    sh_eth_write(ndev,1U,3);
  }
  else ;
  
#line 1571 
  *quota -= (limit - boguscnt) + -1;
  
#line 1573 
  __retres = *quota <= 0;
  
#line 1573 
  return __retres;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_rcv_snd_disable(struct net_device *ndev)
{
  u32 tmp;
  
#line 1579 
  tmp = sh_eth_read(ndev,28);
  
#line 1579 
  ;
  
#line 1579 
  sh_eth_write(ndev,tmp & 4294967199U,28);
  
#line 1580 
  return;
}


#line 1583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_rcv_snd_enable(struct net_device *ndev)
{
  u32 tmp;
  
#line 1586 
  tmp = sh_eth_read(ndev,28);
  
#line 1586 
  ;
  
#line 1586 
  sh_eth_write(ndev,tmp | 96U,28);
  
#line 1587 
  return;
}


#line 1591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_error(struct net_device *ndev, u32 intr_status)
{
  u32 felic_stat;
  u32 link_stat;
  u32 mask;
  
#line 1593 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1598 
  if ((intr_status & 4194304U) != 0U) {
    
#line 1599 
    felic_stat = sh_eth_read(ndev,29);
    
#line 1600 
    sh_eth_write(ndev,felic_stat,29);
    
#line 1601 
    if ((felic_stat & 1U) != 0U) 
#line 1602 
                                 ndev->stats.tx_carrier_errors += 1UL; else ;
    
#line 1603 
    if ((felic_stat & 4U) != 0U) {
      
#line 1605 
      if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U || (unsigned int)*((unsigned char *)mdp + 524UL) != 0U) 
        
#line 1606 
        goto ignore_link;
      else {
        
#line 1608 
        link_stat = sh_eth_read(ndev,32);
        
#line 1609 
        if ((unsigned int)*((unsigned char *)mdp + 524UL) != 0U) 
#line 1610 
                                                                 link_stat = ~ link_stat; else ;
      }
      
#line 1612 
      if ((link_stat & 1U) == 0U) 
#line 1613 
                                  sh_eth_rcv_snd_disable(ndev);
      else {
        u32 tmp_0;
        u32 tmp_1;
        u32 tmp_2;
        
#line 1616 
        tmp_0 = sh_eth_read(ndev,5);
        
#line 1616 
        ;
        
#line 1616 
        sh_eth_write(ndev,tmp_0 & 4290772991U,5);
        
#line 1619 
        tmp_1 = sh_eth_read(ndev,29);
        
#line 1619 
        ;
        
#line 1619 
        sh_eth_write(ndev,tmp_1,29);
        
#line 1621 
        tmp_2 = sh_eth_read(ndev,5);
        
#line 1621 
        ;
        
#line 1621 
        sh_eth_write(ndev,tmp_2 | 4194304U,5);
        
#line 1624 
        sh_eth_rcv_snd_enable(ndev);
      }
    }
    else ;
  }
  else ;
  ignore_link: 
#line 1629 
  ;
  
#line 1630 
  if ((intr_status & 1073741824U) != 0U) {
    
#line 1632 
    if ((intr_status & 67108864U) != 0U) {
      
#line 1633 
      ndev->stats.tx_aborted_errors += 1UL;
      
#line 1634 
      if ((mdp->msg_enable & 128) != 0) 
#line 1634 
                                        netdev_err((struct net_device const *)ndev,"Transmit Abort\n"); else ;
    }
    else ;
  }
  else ;
  
#line 1638 
  if ((intr_status & 33554432U) != 0U) {
    
#line 1640 
    if ((intr_status & 16777216U) != 0U) 
#line 1642 
                                         ndev->stats.rx_frame_errors += 1UL; else ;
  }
  else ;
  
#line 1646 
  if ((intr_status & 1048576U) != 0U) {
    
#line 1648 
    ndev->stats.tx_fifo_errors += 1UL;
    
#line 1649 
    if ((mdp->msg_enable & 128) != 0) 
#line 1649 
                                      netdev_err((struct net_device const *)ndev,"Transmit Descriptor Empty\n"); else ;
  }
  else ;
  
#line 1652 
  if ((intr_status & 524288U) != 0U) {
    
#line 1654 
    ndev->stats.tx_fifo_errors += 1UL;
    
#line 1655 
    if ((mdp->msg_enable & 128) != 0) 
#line 1655 
                                      netdev_err((struct net_device const *)ndev,"Transmit FIFO Under flow\n"); else ;
  }
  else ;
  
#line 1658 
  if ((intr_status & 131072U) != 0U) 
#line 1660 
                                     ndev->stats.rx_over_errors += 1UL; else ;
  
#line 1663 
  if ((intr_status & 65536U) != 0U) 
#line 1665 
                                    ndev->stats.rx_fifo_errors += 1UL; else ;
  
#line 1668 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) == 0U && (intr_status & 8388608U) != 0U) {
    
#line 1670 
    ndev->stats.tx_fifo_errors += 1UL;
    
#line 1671 
    if ((mdp->msg_enable & 128) != 0) 
#line 1671 
                                      netdev_err((struct net_device const *)ndev,"Address Error\n"); else ;
  }
  else ;
  
#line 1674 
  mask = 1150812160U;
  
#line 1675 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
#line 1676 
                                                              mask &= 4286578687U; else ;
  
#line 1677 
  if ((intr_status & mask) != 0U) {
    u32 tmp_5;
    
#line 1679 
    u32 edtrr = sh_eth_read(ndev,2);
    
#line 1682 
    netdev_err((struct net_device const *)ndev,"TX error. status=%8.8x cur_tx=%8.8x dirty_tx=%8.8x state=%8.8x EDTRR=%8.8x.\n",intr_status,mdp->cur_tx,mdp->dirty_tx,(unsigned int)ndev->state,edtrr);
    
#line 1686 
    sh_eth_txfree(ndev);
    
#line 1689 
    tmp_5 = sh_eth_get_edtrr_trns(mdp);
    
#line 1689 
    ;
    
#line 1689 
    if (tmp_5 != edtrr) {
      u32 tmp_4;
      
#line 1691 
      tmp_4 = sh_eth_get_edtrr_trns(mdp);
      
#line 1691 
      ;
      
#line 1691 
      sh_eth_write(ndev,tmp_4,2);
    }
    else ;
    
#line 1694 
    netif_wake_queue(ndev);
  }
  else ;
  
#line 1696 
  return;
}


#line 1698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static irqreturn_t sh_eth_interrupt(int irq, void *netdev)
{
  u32 intr_status;
  u32 intr_enable;
  
#line 1700 
  struct net_device *ndev = (struct net_device *)netdev;
  
#line 1701 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1702 
  struct sh_eth_cpu_data *cd = mdp->cd;
  
#line 1703 
  irqreturn_t ret = IRQ_NONE;
  
#line 1706 
  ldv_spin_lock_72(& mdp->lock);
  
#line 1709 
  intr_status = sh_eth_read(ndev,4);
  
#line 1715 
  intr_enable = sh_eth_read(ndev,5);
  
#line 1716 
  intr_status = (intr_enable | 4194304U) & intr_status;
  
#line 1717 
  if ((((cd->tx_check | cd->eesr_err_check) | 262303U) & intr_status) != 0U) 
    
#line 1718 
    ret = IRQ_HANDLED; else 
#line 1720 
                            goto out;
  
#line 1722 
  if ((long)((int)mdp->irq_enabled != 0) == 0L) {
    
#line 1723 
    sh_eth_write(ndev,0U,5);
    
#line 1724 
    goto out;
  }
  else ;
  
#line 1727 
  if ((intr_status & 262303U) != 0U) {
    bool tmp_0;
    
#line 1728 
    tmp_0 = napi_schedule_prep(& mdp->napi);
    
#line 1728 
    if ((int)tmp_0 != 0) {
      
#line 1730 
      sh_eth_write(ndev,intr_enable & 4294704992U,5);
      
#line 1732 
      __napi_schedule(& mdp->napi);
    }
    else 
#line 1734 
         netdev_warn((struct net_device const *)ndev,"ignoring interrupt, status 0x%08x, mask 0x%08x.\n",intr_status,intr_enable);
  }
  else ;
  
#line 1741 
  if ((cd->tx_check & intr_status) != 0U) {
    
#line 1743 
    sh_eth_write(ndev,cd->tx_check & intr_status,4);
    
#line 1745 
    sh_eth_txfree(ndev);
    
#line 1746 
    netif_wake_queue(ndev);
  }
  else ;
  
#line 1749 
  if ((cd->eesr_err_check & intr_status) != 0U) {
    
#line 1751 
    sh_eth_write(ndev,cd->eesr_err_check & intr_status,4);
    
#line 1753 
    sh_eth_error(ndev,intr_status);
  }
  else ;
  out: 
#line 1756 
  ;
  
#line 1757 
  ldv_spin_unlock_73(& mdp->lock);
  
#line 1759 
  return ret;
}


#line 1762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct sh_eth_private *tmp;
  u32 intr_status;
  int tmp_0;
  {
    
#line 1764 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1764 
    tmp = (struct sh_eth_private *)__mptr + 18446744073709551424U;
  }
  
#line 1764 
  struct sh_eth_private *mdp = tmp;
  
#line 1766 
  struct net_device *ndev = napi->dev;
  
#line 1767 
  int quota = budget;
  ldv_46820: 
#line 1769 
  ;
  
#line 1771 
  intr_status = sh_eth_read(ndev,4);
  
#line 1772 
  if ((intr_status & 262303U) == 0U) 
#line 1773 
                                     goto ldv_46818; else ;
  
#line 1775 
  sh_eth_write(ndev,intr_status & 262303U,4);
  
#line 1777 
  tmp_0 = sh_eth_rx(ndev,intr_status,& quota);
  
#line 1777 
  if (tmp_0 != 0) 
#line 1778 
                  goto out; else ;
  
#line 1771 
  goto ldv_46820;
  ldv_46818: 
#line 1772 
  ;
  
#line 1781 
  napi_complete(napi);
  
#line 1784 
  if ((int)mdp->irq_enabled != 0) 
#line 1785 
                                  sh_eth_write(ndev,(mdp->cd)->eesipr_value,5); else ;
  out: 
#line 1786 
  ;
  
#line 1787 
  __retres = budget - quota;
  
#line 1787 
  return __retres;
}


#line 1791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_adjust_link(struct net_device *ndev)
{
  
#line 1793 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1794 
  struct phy_device *phydev = mdp->phydev;
  
#line 1795 
  int new_state = 0;
  
#line 1797 
  if (phydev->link != 0) {
    
#line 1798 
    if (phydev->duplex != mdp->duplex) {
      
#line 1799 
      new_state = 1;
      
#line 1800 
      mdp->duplex = phydev->duplex;
      
#line 1801 
      if ((mdp->cd)->set_duplex != (void (*)(struct net_device *))0) 
        
#line 1802 
        (*((mdp->cd)->set_duplex))(ndev); else ;
    }
    else ;
    
#line 1805 
    if (phydev->speed != mdp->speed) {
      
#line 1806 
      new_state = 1;
      
#line 1807 
      mdp->speed = phydev->speed;
      
#line 1808 
      if ((mdp->cd)->set_rate != (void (*)(struct net_device *))0) 
#line 1809 
                                                                   (*((mdp->cd)->set_rate))(ndev); else ;
    }
    else ;
    
#line 1811 
    if (mdp->link == 0) {
      u32 tmp_0;
      
#line 1812 
      tmp_0 = sh_eth_read(ndev,28);
      
#line 1812 
      ;
      
#line 1812 
      sh_eth_write(ndev,tmp_0 & 4294901759U,28);
      
#line 1815 
      new_state = 1;
      
#line 1816 
      mdp->link = phydev->link;
      
#line 1817 
      if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U || (unsigned int)*((unsigned char *)mdp + 524UL) != 0U) 
        
#line 1818 
        sh_eth_rcv_snd_enable(ndev); else ;
    }
    else ;
  }
  else 
    
#line 1820 
    if (mdp->link != 0) {
      
#line 1821 
      new_state = 1;
      
#line 1822 
      mdp->link = 0;
      
#line 1823 
      mdp->speed = 0;
      
#line 1824 
      mdp->duplex = -1;
      
#line 1825 
      if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U || (unsigned int)*((unsigned char *)mdp + 524UL) != 0U) 
        
#line 1826 
        sh_eth_rcv_snd_disable(ndev); else ;
    }
    else ;
  
#line 1829 
  if (new_state != 0 && (mdp->msg_enable & 4) != 0) 
#line 1830 
                                                    phy_print_status(phydev); else ;
  
#line 1831 
  return;
}


#line 1834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_phy_init(struct net_device *ndev)
{
  int __retres;
  bool tmp_2;
  
#line 1836 
  struct device_node *np = (ndev->dev.parent)->of_node;
  
#line 1837 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1838 
  struct phy_device *phydev = (struct phy_device *)0;
  
#line 1840 
  mdp->link = 0;
  
#line 1841 
  mdp->speed = 0;
  
#line 1842 
  mdp->duplex = -1;
  
#line 1845 
  if (np != (struct device_node *)0) {
    struct device_node *pn;
    
#line 1848 
    pn = of_parse_phandle((struct device_node const *)np,"phy-handle",0);
    
#line 1849 
    phydev = of_phy_connect(ndev,pn,& sh_eth_adjust_link,0U,mdp->phy_interface);
    
#line 1853 
    if (phydev == (struct phy_device *)0) 
#line 1854 
                                          phydev = (struct phy_device *)ERR_PTR(-2L); else ;
  }
  else {
    char phy_id[20U];
    
#line 1858 
    snprintf((char *)(& phy_id),20UL,"%s:%02x",(char *)(& (mdp->mii_bus)->id),mdp->phy_id);
    
#line 1861 
    phydev = phy_connect(ndev,(char const *)(& phy_id),& sh_eth_adjust_link,mdp->phy_interface);
  }
  
#line 1865 
  tmp_2 = IS_ERR((void const *)phydev);
  
#line 1865 
  if ((int)tmp_2 != 0) {
    long tmp_1;
    
#line 1866 
    netdev_err((struct net_device const *)ndev,"failed to connect PHY\n");
    
#line 1867 
    tmp_1 = PTR_ERR((void const *)phydev);
    
#line 1867 
    __retres = (int)tmp_1;
    
#line 1867 
    goto return_label;
  }
  else ;
  
#line 1870 
  netdev_info((struct net_device const *)ndev,"attached PHY %d (IRQ %d) to driver %s\n",phydev->addr,phydev->irq,(phydev->drv)->name);
  
#line 1873 
  mdp->phydev = phydev;
  
#line 1875 
  __retres = 0;
  return_label: 
#line 1875 
                return __retres;
}


#line 1879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_phy_start(struct net_device *ndev)
{
  int __retres;
  int ret;
  
#line 1881 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1884 
  ret = sh_eth_phy_init(ndev);
  
#line 1885 
  if (ret != 0) {
    
#line 1886 
    __retres = ret;
    
#line 1886 
    goto return_label;
  }
  else ;
  
#line 1888 
  phy_start(mdp->phydev);
  
#line 1890 
  __retres = 0;
  return_label: 
#line 1890 
                return __retres;
}


#line 1893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_get_settings(struct net_device *ndev, struct ethtool_cmd *ecmd)
{
  int __retres;
  unsigned long flags;
  int ret;
  
#line 1896 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1900 
  if (mdp->phydev == (struct phy_device *)0) {
    
#line 1901 
    __retres = -19;
    
#line 1901 
    goto return_label;
  }
  else ;
  
#line 1903 
  ldv___ldv_spin_lock_74(& mdp->lock);
  
#line 1904 
  ret = phy_ethtool_gset(mdp->phydev,ecmd);
  
#line 1905 
  ldv_spin_unlock_irqrestore_75(& mdp->lock,flags);
  
#line 1907 
  __retres = ret;
  return_label: 
#line 1907 
                return __retres;
}


#line 1910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_set_settings(struct net_device *ndev, struct ethtool_cmd *ecmd)
{
  int __retres;
  unsigned long flags;
  int ret;
  
#line 1913 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1917 
  if (mdp->phydev == (struct phy_device *)0) {
    
#line 1918 
    __retres = -19;
    
#line 1918 
    goto return_label;
  }
  else ;
  
#line 1920 
  ldv___ldv_spin_lock_76(& mdp->lock);
  
#line 1923 
  sh_eth_rcv_snd_disable(ndev);
  
#line 1925 
  ret = phy_ethtool_sset(mdp->phydev,ecmd);
  
#line 1926 
  if (ret != 0) 
#line 1927 
                goto error_exit; else ;
  
#line 1929 
  if ((unsigned int)ecmd->duplex == 1U) 
#line 1930 
                                        mdp->duplex = 1; else 
#line 1932 
                                                              mdp->duplex = 0;
  
#line 1934 
  if ((mdp->cd)->set_duplex != (void (*)(struct net_device *))0) 
#line 1935 
                                                                 (*((mdp->cd)->set_duplex))(ndev); else ;
  error_exit: 
#line 1937 
  ;
  
#line 1938 
  if (1) 
#line 1938 
         __const_udelay(4295000UL);
  else {
    
#line 1938 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 1938 
      goto ldv_46857;
      ldv_46856: 
#line 1939 
      ;
      
#line 1938 
      __const_udelay(4295000UL);
      ldv_46857: 
#line 1940 
      ;
      
#line 1938 
      tmp_0 = __ms;
      
#line 1938 
      __ms -= 1UL;
      
#line 1938 
      ;
      
#line 1938 
      if (tmp_0 != 0UL) 
#line 1940 
                        goto ldv_46856; else 
#line 1943 
                                             goto ldv_46858;
      ldv_46858: 
#line 1944 
      ;
    }
  }
  
#line 1941 
  sh_eth_rcv_snd_enable(ndev);
  
#line 1943 
  ldv_spin_unlock_irqrestore_77(& mdp->lock,flags);
  
#line 1945 
  __retres = ret;
  return_label: 
#line 1945 
                return __retres;
}


#line 1963 
void __compiletime_assert_1963(void);


#line 1956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static size_t __sh_eth_get_regs(struct net_device *ndev, u32 *buf)
{
  size_t __retres;
  u32 *valid_map;
  size_t len;
  
#line 1958 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 1959 
  struct sh_eth_cpu_data *cd = mdp->cd;
  {
    
#line 1963 
    bool __cond = (_Bool)0;
    
#line 1963 
    if ((int)__cond != 0) 
#line 1963 
                          __compiletime_assert_1963(); else ;
  }
  
#line 1968 
  len = 8UL;
  
#line 1969 
  if (buf != (u32 *)0U) {
    
#line 1970 
    valid_map = buf;
    
#line 1971 
    buf += len;
  }
  else 
#line 1973 
       valid_map = (u32 *)0U;
  
#line 1994 
  if ((unsigned int)*(mdp->reg_offset) != 65535U) {
    
#line 1994 
    if (buf != (u32 *)0U) {
      u32 *tmp_0;
      
#line 1994 
      *valid_map |= 1U;
      
#line 1994 
      tmp_0 = buf;
      
#line 1994 
      buf += 1;
      
#line 1994 
      *tmp_0 = sh_eth_read(ndev,0);
    }
    else ;
    
#line 1994 
    len += 1UL;
  }
  else ;
  
#line 1995 
  if ((unsigned int)*(mdp->reg_offset + 1U) != 65535U) {
    
#line 1995 
    if (buf != (u32 *)0U) {
      u32 *tmp_1;
      
#line 1995 
      *valid_map |= 2U;
      
#line 1995 
      tmp_1 = buf;
      
#line 1995 
      buf += 1;
      
#line 1995 
      *tmp_1 = sh_eth_read(ndev,1);
    }
    else ;
    
#line 1995 
    len += 1UL;
  }
  else ;
  
#line 1996 
  if ((unsigned int)*(mdp->reg_offset + 2U) != 65535U) {
    
#line 1996 
    if (buf != (u32 *)0U) {
      u32 *tmp_2;
      
#line 1996 
      *valid_map |= 4U;
      
#line 1996 
      tmp_2 = buf;
      
#line 1996 
      buf += 1;
      
#line 1996 
      *tmp_2 = sh_eth_read(ndev,2);
    }
    else ;
    
#line 1996 
    len += 1UL;
  }
  else ;
  
#line 1997 
  if ((unsigned int)*(mdp->reg_offset + 3U) != 65535U) {
    
#line 1997 
    if (buf != (u32 *)0U) {
      u32 *tmp_3;
      
#line 1997 
      *valid_map |= 8U;
      
#line 1997 
      tmp_3 = buf;
      
#line 1997 
      buf += 1;
      
#line 1997 
      *tmp_3 = sh_eth_read(ndev,3);
    }
    else ;
    
#line 1997 
    len += 1UL;
  }
  else ;
  
#line 1998 
  if ((unsigned int)*(mdp->reg_offset + 4U) != 65535U) {
    
#line 1998 
    if (buf != (u32 *)0U) {
      u32 *tmp_4;
      
#line 1998 
      *valid_map |= 16U;
      
#line 1998 
      tmp_4 = buf;
      
#line 1998 
      buf += 1;
      
#line 1998 
      *tmp_4 = sh_eth_read(ndev,4);
    }
    else ;
    
#line 1998 
    len += 1UL;
  }
  else ;
  
#line 1999 
  if ((unsigned int)*(mdp->reg_offset + 5U) != 65535U) {
    
#line 1999 
    if (buf != (u32 *)0U) {
      u32 *tmp_5;
      
#line 1999 
      *valid_map |= 32U;
      
#line 1999 
      tmp_5 = buf;
      
#line 1999 
      buf += 1;
      
#line 1999 
      *tmp_5 = sh_eth_read(ndev,5);
    }
    else ;
    
#line 1999 
    len += 1UL;
  }
  else ;
  
#line 2000 
  if ((unsigned int)*(mdp->reg_offset + 6U) != 65535U) {
    
#line 2000 
    if (buf != (u32 *)0U) {
      u32 *tmp_6;
      
#line 2000 
      *valid_map |= 64U;
      
#line 2000 
      tmp_6 = buf;
      
#line 2000 
      buf += 1;
      
#line 2000 
      *tmp_6 = sh_eth_read(ndev,6);
    }
    else ;
    
#line 2000 
    len += 1UL;
  }
  else ;
  
#line 2001 
  if ((unsigned int)*(mdp->reg_offset + 7U) != 65535U) {
    
#line 2001 
    if (buf != (u32 *)0U) {
      u32 *tmp_7;
      
#line 2001 
      *valid_map |= 128U;
      
#line 2001 
      tmp_7 = buf;
      
#line 2001 
      buf += 1;
      
#line 2001 
      *tmp_7 = sh_eth_read(ndev,7);
    }
    else ;
    
#line 2001 
    len += 1UL;
  }
  else ;
  
#line 2002 
  if ((unsigned int)*(mdp->reg_offset + 8U) != 65535U) {
    
#line 2002 
    if (buf != (u32 *)0U) {
      u32 *tmp_8;
      
#line 2002 
      *valid_map |= 256U;
      
#line 2002 
      tmp_8 = buf;
      
#line 2002 
      buf += 1;
      
#line 2002 
      *tmp_8 = sh_eth_read(ndev,8);
    }
    else ;
    
#line 2002 
    len += 1UL;
  }
  else ;
  
#line 2003 
  if ((unsigned int)*(mdp->reg_offset + 9U) != 65535U) {
    
#line 2003 
    if (buf != (u32 *)0U) {
      u32 *tmp_9;
      
#line 2003 
      *valid_map |= 512U;
      
#line 2003 
      tmp_9 = buf;
      
#line 2003 
      buf += 1;
      
#line 2003 
      *tmp_9 = sh_eth_read(ndev,9);
    }
    else ;
    
#line 2003 
    len += 1UL;
  }
  else ;
  
#line 2004 
  if ((unsigned int)*(mdp->reg_offset + 10U) != 65535U) {
    
#line 2004 
    if (buf != (u32 *)0U) {
      u32 *tmp_10;
      
#line 2004 
      *valid_map |= 1024U;
      
#line 2004 
      tmp_10 = buf;
      
#line 2004 
      buf += 1;
      
#line 2004 
      *tmp_10 = sh_eth_read(ndev,10);
    }
    else ;
    
#line 2004 
    len += 1UL;
  }
  else ;
  
#line 2005 
  if ((unsigned int)*(mdp->reg_offset + 11U) != 65535U) {
    
#line 2005 
    if (buf != (u32 *)0U) {
      u32 *tmp_11;
      
#line 2005 
      *valid_map |= 2048U;
      
#line 2005 
      tmp_11 = buf;
      
#line 2005 
      buf += 1;
      
#line 2005 
      *tmp_11 = sh_eth_read(ndev,11);
    }
    else ;
    
#line 2005 
    len += 1UL;
  }
  else ;
  
#line 2006 
  if ((unsigned int)*(mdp->reg_offset + 12U) != 65535U) {
    
#line 2006 
    if (buf != (u32 *)0U) {
      u32 *tmp_12;
      
#line 2006 
      *valid_map |= 4096U;
      
#line 2006 
      tmp_12 = buf;
      
#line 2006 
      buf += 1;
      
#line 2006 
      *tmp_12 = sh_eth_read(ndev,12);
    }
    else ;
    
#line 2006 
    len += 1UL;
  }
  else ;
  
#line 2007 
  if ((unsigned int)*(mdp->reg_offset + 13U) != 65535U) {
    
#line 2007 
    if (buf != (u32 *)0U) {
      u32 *tmp_13;
      
#line 2007 
      *valid_map |= 8192U;
      
#line 2007 
      tmp_13 = buf;
      
#line 2007 
      buf += 1;
      
#line 2007 
      *tmp_13 = sh_eth_read(ndev,13);
    }
    else ;
    
#line 2007 
    len += 1UL;
  }
  else ;
  
#line 2008 
  if ((unsigned int)*(mdp->reg_offset + 14U) != 65535U) {
    
#line 2008 
    if (buf != (u32 *)0U) {
      u32 *tmp_14;
      
#line 2008 
      *valid_map |= 16384U;
      
#line 2008 
      tmp_14 = buf;
      
#line 2008 
      buf += 1;
      
#line 2008 
      *tmp_14 = sh_eth_read(ndev,14);
    }
    else ;
    
#line 2008 
    len += 1UL;
  }
  else ;
  
#line 2009 
  if ((unsigned int)*(mdp->reg_offset + 15U) != 65535U) {
    
#line 2009 
    if (buf != (u32 *)0U) {
      u32 *tmp_15;
      
#line 2009 
      *valid_map |= 32768U;
      
#line 2009 
      tmp_15 = buf;
      
#line 2009 
      buf += 1;
      
#line 2009 
      *tmp_15 = sh_eth_read(ndev,15);
    }
    else ;
    
#line 2009 
    len += 1UL;
  }
  else ;
  
#line 2010 
  if ((unsigned int)*(mdp->reg_offset + 16U) != 65535U) {
    
#line 2010 
    if (buf != (u32 *)0U) {
      u32 *tmp_16;
      
#line 2010 
      *valid_map |= 65536U;
      
#line 2010 
      tmp_16 = buf;
      
#line 2010 
      buf += 1;
      
#line 2010 
      *tmp_16 = sh_eth_read(ndev,16);
    }
    else ;
    
#line 2010 
    len += 1UL;
  }
  else ;
  
#line 2011 
  if ((unsigned int)*(mdp->reg_offset + 17U) != 65535U) {
    
#line 2011 
    if (buf != (u32 *)0U) {
      u32 *tmp_17;
      
#line 2011 
      *valid_map |= 131072U;
      
#line 2011 
      tmp_17 = buf;
      
#line 2011 
      buf += 1;
      
#line 2011 
      *tmp_17 = sh_eth_read(ndev,17);
    }
    else ;
    
#line 2011 
    len += 1UL;
  }
  else ;
  
#line 2012 
  if ((unsigned int)*(mdp->reg_offset + 18U) != 65535U) {
    
#line 2012 
    if (buf != (u32 *)0U) {
      u32 *tmp_18;
      
#line 2012 
      *valid_map |= 262144U;
      
#line 2012 
      tmp_18 = buf;
      
#line 2012 
      buf += 1;
      
#line 2012 
      *tmp_18 = sh_eth_read(ndev,18);
    }
    else ;
    
#line 2012 
    len += 1UL;
  }
  else ;
  
#line 2013 
  if ((unsigned int)*(mdp->reg_offset + 20U) != 65535U) {
    
#line 2013 
    if (buf != (u32 *)0U) {
      u32 *tmp_19;
      
#line 2013 
      *valid_map |= 1048576U;
      
#line 2013 
      tmp_19 = buf;
      
#line 2013 
      buf += 1;
      
#line 2013 
      *tmp_19 = sh_eth_read(ndev,20);
    }
    else ;
    
#line 2013 
    len += 1UL;
  }
  else ;
  
#line 2014 
  if ((unsigned int)*(mdp->reg_offset + 21U) != 65535U) {
    
#line 2014 
    if (buf != (u32 *)0U) {
      u32 *tmp_20;
      
#line 2014 
      *valid_map |= 2097152U;
      
#line 2014 
      tmp_20 = buf;
      
#line 2014 
      buf += 1;
      
#line 2014 
      *tmp_20 = sh_eth_read(ndev,21);
    }
    else ;
    
#line 2014 
    len += 1UL;
  }
  else ;
  
#line 2015 
  if ((unsigned int)*((unsigned char *)cd + 73UL) != 0U) {
    
#line 2016 
    if ((unsigned int)*(mdp->reg_offset + 22U) != 65535U) {
      
#line 2016 
      if (buf != (u32 *)0U) {
        u32 *tmp_21;
        
#line 2016 
        *valid_map |= 4194304U;
        
#line 2016 
        tmp_21 = buf;
        
#line 2016 
        buf += 1;
        
#line 2016 
        *tmp_21 = sh_eth_read(ndev,22);
      }
      else ;
      
#line 2016 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2017 
  if ((unsigned int)*(mdp->reg_offset + 23U) != 65535U) {
    
#line 2017 
    if (buf != (u32 *)0U) {
      u32 *tmp_22;
      
#line 2017 
      *valid_map |= 8388608U;
      
#line 2017 
      tmp_22 = buf;
      
#line 2017 
      buf += 1;
      
#line 2017 
      *tmp_22 = sh_eth_read(ndev,23);
    }
    else ;
    
#line 2017 
    len += 1UL;
  }
  else ;
  
#line 2018 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2019 
    if ((unsigned int)*(mdp->reg_offset + 24U) != 65535U) {
      
#line 2019 
      if (buf != (u32 *)0U) {
        u32 *tmp_23;
        
#line 2019 
        *valid_map |= 16777216U;
        
#line 2019 
        tmp_23 = buf;
        
#line 2019 
        buf += 1;
        
#line 2019 
        *tmp_23 = sh_eth_read(ndev,24);
      }
      else ;
      
#line 2019 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2020 
  if ((unsigned int)*((unsigned char *)cd + 73UL) == 0U) {
    
#line 2021 
    if ((unsigned int)*(mdp->reg_offset + 25U) != 65535U) {
      
#line 2021 
      if (buf != (u32 *)0U) {
        u32 *tmp_24;
        
#line 2021 
        *valid_map |= 33554432U;
        
#line 2021 
        tmp_24 = buf;
        
#line 2021 
        buf += 1;
        
#line 2021 
        *tmp_24 = sh_eth_read(ndev,25);
      }
      else ;
      
#line 2021 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2022 
  if ((unsigned int)*(mdp->reg_offset + 28U) != 65535U) {
    
#line 2022 
    if (buf != (u32 *)0U) {
      u32 *tmp_25;
      
#line 2022 
      *valid_map |= 268435456U;
      
#line 2022 
      tmp_25 = buf;
      
#line 2022 
      buf += 1;
      
#line 2022 
      *tmp_25 = sh_eth_read(ndev,28);
    }
    else ;
    
#line 2022 
    len += 1UL;
  }
  else ;
  
#line 2023 
  if ((unsigned int)*(mdp->reg_offset + 29U) != 65535U) {
    
#line 2023 
    if (buf != (u32 *)0U) {
      u32 *tmp_26;
      
#line 2023 
      *valid_map |= 536870912U;
      
#line 2023 
      tmp_26 = buf;
      
#line 2023 
      buf += 1;
      
#line 2023 
      *tmp_26 = sh_eth_read(ndev,29);
    }
    else ;
    
#line 2023 
    len += 1UL;
  }
  else ;
  
#line 2024 
  if ((unsigned int)*(mdp->reg_offset + 30U) != 65535U) {
    
#line 2024 
    if (buf != (u32 *)0U) {
      u32 *tmp_27;
      
#line 2024 
      *valid_map |= 1073741824U;
      
#line 2024 
      tmp_27 = buf;
      
#line 2024 
      buf += 1;
      
#line 2024 
      *tmp_27 = sh_eth_read(ndev,30);
    }
    else ;
    
#line 2024 
    len += 1UL;
  }
  else ;
  
#line 2025 
  if ((unsigned int)*(mdp->reg_offset + 31U) != 65535U) {
    
#line 2025 
    if (buf != (u32 *)0U) {
      u32 *tmp_28;
      
#line 2025 
      *valid_map |= 2147483648U;
      
#line 2025 
      tmp_28 = buf;
      
#line 2025 
      buf += 1;
      
#line 2025 
      *tmp_28 = sh_eth_read(ndev,31);
    }
    else ;
    
#line 2025 
    len += 1UL;
  }
  else ;
  
#line 2026 
  if ((unsigned int)*((unsigned char *)cd + 72UL) == 0U) {
    
#line 2027 
    if ((unsigned int)*(mdp->reg_offset + 32U) != 65535U) {
      
#line 2027 
      if (buf != (u32 *)0U) {
        u32 *tmp_29;
        
#line 2027 
        *(valid_map + 1U) |= 1U;
        
#line 2027 
        tmp_29 = buf;
        
#line 2027 
        buf += 1;
        
#line 2027 
        *tmp_29 = sh_eth_read(ndev,32);
      }
      else ;
      
#line 2027 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2028 
  if ((unsigned int)*(mdp->reg_offset + 33U) != 65535U) {
    
#line 2028 
    if (buf != (u32 *)0U) {
      u32 *tmp_30;
      
#line 2028 
      *(valid_map + 1U) |= 2U;
      
#line 2028 
      tmp_30 = buf;
      
#line 2028 
      buf += 1;
      
#line 2028 
      *tmp_30 = sh_eth_read(ndev,33);
    }
    else ;
    
#line 2028 
    len += 1UL;
  }
  else ;
  
#line 2029 
  if ((unsigned int)*(mdp->reg_offset + 35U) != 65535U) {
    
#line 2029 
    if (buf != (u32 *)0U) {
      u32 *tmp_31;
      
#line 2029 
      *(valid_map + 1U) |= 8U;
      
#line 2029 
      tmp_31 = buf;
      
#line 2029 
      buf += 1;
      
#line 2029 
      *tmp_31 = sh_eth_read(ndev,35);
    }
    else ;
    
#line 2029 
    len += 1UL;
  }
  else ;
  
#line 2030 
  if ((unsigned int)*(mdp->reg_offset + 36U) != 65535U) {
    
#line 2030 
    if (buf != (u32 *)0U) {
      u32 *tmp_32;
      
#line 2030 
      *(valid_map + 1U) |= 16U;
      
#line 2030 
      tmp_32 = buf;
      
#line 2030 
      buf += 1;
      
#line 2030 
      *tmp_32 = sh_eth_read(ndev,36);
    }
    else ;
    
#line 2030 
    len += 1UL;
  }
  else ;
  
#line 2031 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2032 
    if ((unsigned int)*(mdp->reg_offset + 37U) != 65535U) {
      
#line 2032 
      if (buf != (u32 *)0U) {
        u32 *tmp_33;
        
#line 2032 
        *(valid_map + 1U) |= 32U;
        
#line 2032 
        tmp_33 = buf;
        
#line 2032 
        buf += 1;
        
#line 2032 
        *tmp_33 = sh_eth_read(ndev,37);
      }
      else ;
      
#line 2032 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2033 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2034 
    if ((unsigned int)*(mdp->reg_offset + 38U) != 65535U) {
      
#line 2034 
      if (buf != (u32 *)0U) {
        u32 *tmp_34;
        
#line 2034 
        *(valid_map + 1U) |= 64U;
        
#line 2034 
        tmp_34 = buf;
        
#line 2034 
        buf += 1;
        
#line 2034 
        *tmp_34 = sh_eth_read(ndev,38);
      }
      else ;
      
#line 2034 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2035 
  if ((unsigned int)*(mdp->reg_offset + 41U) != 65535U) {
    
#line 2035 
    if (buf != (u32 *)0U) {
      u32 *tmp_35;
      
#line 2035 
      *(valid_map + 1U) |= 512U;
      
#line 2035 
      tmp_35 = buf;
      
#line 2035 
      buf += 1;
      
#line 2035 
      *tmp_35 = sh_eth_read(ndev,41);
    }
    else ;
    
#line 2035 
    len += 1UL;
  }
  else ;
  
#line 2036 
  if ((unsigned int)*(mdp->reg_offset + 42U) != 65535U) {
    
#line 2036 
    if (buf != (u32 *)0U) {
      u32 *tmp_36;
      
#line 2036 
      *(valid_map + 1U) |= 1024U;
      
#line 2036 
      tmp_36 = buf;
      
#line 2036 
      buf += 1;
      
#line 2036 
      *tmp_36 = sh_eth_read(ndev,42);
    }
    else ;
    
#line 2036 
    len += 1UL;
  }
  else ;
  
#line 2037 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2038 
    if ((unsigned int)*(mdp->reg_offset + 43U) != 65535U) {
      
#line 2038 
      if (buf != (u32 *)0U) {
        u32 *tmp_37;
        
#line 2038 
        *(valid_map + 1U) |= 2048U;
        
#line 2038 
        tmp_37 = buf;
        
#line 2038 
        buf += 1;
        
#line 2038 
        *tmp_37 = sh_eth_read(ndev,43);
      }
      else ;
      
#line 2038 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2039 
  if ((unsigned int)*(mdp->reg_offset + 44U) != 65535U) {
    
#line 2039 
    if (buf != (u32 *)0U) {
      u32 *tmp_38;
      
#line 2039 
      *(valid_map + 1U) |= 4096U;
      
#line 2039 
      tmp_38 = buf;
      
#line 2039 
      buf += 1;
      
#line 2039 
      *tmp_38 = sh_eth_read(ndev,44);
    }
    else ;
    
#line 2039 
    len += 1UL;
  }
  else ;
  
#line 2040 
  if ((unsigned int)*(mdp->reg_offset + 47U) != 65535U) {
    
#line 2040 
    if (buf != (u32 *)0U) {
      u32 *tmp_39;
      
#line 2040 
      *(valid_map + 1U) |= 32768U;
      
#line 2040 
      tmp_39 = buf;
      
#line 2040 
      buf += 1;
      
#line 2040 
      *tmp_39 = sh_eth_read(ndev,47);
    }
    else ;
    
#line 2040 
    len += 1UL;
  }
  else ;
  
#line 2041 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2042 
    if ((unsigned int)*(mdp->reg_offset + 48U) != 65535U) {
      
#line 2042 
      if (buf != (u32 *)0U) {
        u32 *tmp_40;
        
#line 2042 
        *(valid_map + 1U) |= 65536U;
        
#line 2042 
        tmp_40 = buf;
        
#line 2042 
        buf += 1;
        
#line 2042 
        *tmp_40 = sh_eth_read(ndev,48);
      }
      else ;
      
#line 2042 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2043 
  if ((unsigned int)*(mdp->reg_offset + 49U) != 65535U) {
    
#line 2043 
    if (buf != (u32 *)0U) {
      u32 *tmp_41;
      
#line 2043 
      *(valid_map + 1U) |= 131072U;
      
#line 2043 
      tmp_41 = buf;
      
#line 2043 
      buf += 1;
      
#line 2043 
      *tmp_41 = sh_eth_read(ndev,49);
    }
    else ;
    
#line 2043 
    len += 1UL;
  }
  else ;
  
#line 2044 
  if ((unsigned int)*(mdp->reg_offset + 50U) != 65535U) {
    
#line 2044 
    if (buf != (u32 *)0U) {
      u32 *tmp_42;
      
#line 2044 
      *(valid_map + 1U) |= 262144U;
      
#line 2044 
      tmp_42 = buf;
      
#line 2044 
      buf += 1;
      
#line 2044 
      *tmp_42 = sh_eth_read(ndev,50);
    }
    else ;
    
#line 2044 
    len += 1UL;
  }
  else ;
  
#line 2045 
  if ((unsigned int)*(mdp->reg_offset + 51U) != 65535U) {
    
#line 2045 
    if (buf != (u32 *)0U) {
      u32 *tmp_43;
      
#line 2045 
      *(valid_map + 1U) |= 524288U;
      
#line 2045 
      tmp_43 = buf;
      
#line 2045 
      buf += 1;
      
#line 2045 
      *tmp_43 = sh_eth_read(ndev,51);
    }
    else ;
    
#line 2045 
    len += 1UL;
  }
  else ;
  
#line 2046 
  if ((unsigned int)*(mdp->reg_offset + 52U) != 65535U) {
    
#line 2046 
    if (buf != (u32 *)0U) {
      u32 *tmp_44;
      
#line 2046 
      *(valid_map + 1U) |= 1048576U;
      
#line 2046 
      tmp_44 = buf;
      
#line 2046 
      buf += 1;
      
#line 2046 
      *tmp_44 = sh_eth_read(ndev,52);
    }
    else ;
    
#line 2046 
    len += 1UL;
  }
  else ;
  
#line 2047 
  if ((unsigned int)*(mdp->reg_offset + 53U) != 65535U) {
    
#line 2047 
    if (buf != (u32 *)0U) {
      u32 *tmp_45;
      
#line 2047 
      *(valid_map + 1U) |= 2097152U;
      
#line 2047 
      tmp_45 = buf;
      
#line 2047 
      buf += 1;
      
#line 2047 
      *tmp_45 = sh_eth_read(ndev,53);
    }
    else ;
    
#line 2047 
    len += 1UL;
  }
  else ;
  
#line 2048 
  if ((unsigned int)*(mdp->reg_offset + 54U) != 65535U) {
    
#line 2048 
    if (buf != (u32 *)0U) {
      u32 *tmp_46;
      
#line 2048 
      *(valid_map + 1U) |= 4194304U;
      
#line 2048 
      tmp_46 = buf;
      
#line 2048 
      buf += 1;
      
#line 2048 
      *tmp_46 = sh_eth_read(ndev,54);
    }
    else ;
    
#line 2048 
    len += 1UL;
  }
  else ;
  
#line 2049 
  if ((unsigned int)*(mdp->reg_offset + 55U) != 65535U) {
    
#line 2049 
    if (buf != (u32 *)0U) {
      u32 *tmp_47;
      
#line 2049 
      *(valid_map + 1U) |= 8388608U;
      
#line 2049 
      tmp_47 = buf;
      
#line 2049 
      buf += 1;
      
#line 2049 
      *tmp_47 = sh_eth_read(ndev,55);
    }
    else ;
    
#line 2049 
    len += 1UL;
  }
  else ;
  
#line 2050 
  if ((unsigned int)*(mdp->reg_offset + 56U) != 65535U) {
    
#line 2050 
    if (buf != (u32 *)0U) {
      u32 *tmp_48;
      
#line 2050 
      *(valid_map + 1U) |= 16777216U;
      
#line 2050 
      tmp_48 = buf;
      
#line 2050 
      buf += 1;
      
#line 2050 
      *tmp_48 = sh_eth_read(ndev,56);
    }
    else ;
    
#line 2050 
    len += 1UL;
  }
  else ;
  
#line 2051 
  if ((unsigned int)*(mdp->reg_offset + 57U) != 65535U) {
    
#line 2051 
    if (buf != (u32 *)0U) {
      u32 *tmp_49;
      
#line 2051 
      *(valid_map + 1U) |= 33554432U;
      
#line 2051 
      tmp_49 = buf;
      
#line 2051 
      buf += 1;
      
#line 2051 
      *tmp_49 = sh_eth_read(ndev,57);
    }
    else ;
    
#line 2051 
    len += 1UL;
  }
  else ;
  
#line 2052 
  if ((unsigned int)*(mdp->reg_offset + 58U) != 65535U) {
    
#line 2052 
    if (buf != (u32 *)0U) {
      u32 *tmp_50;
      
#line 2052 
      *(valid_map + 1U) |= 67108864U;
      
#line 2052 
      tmp_50 = buf;
      
#line 2052 
      buf += 1;
      
#line 2052 
      *tmp_50 = sh_eth_read(ndev,58);
    }
    else ;
    
#line 2052 
    len += 1UL;
  }
  else ;
  
#line 2053 
  if ((unsigned int)*(mdp->reg_offset + 59U) != 65535U) {
    
#line 2053 
    if (buf != (u32 *)0U) {
      u32 *tmp_51;
      
#line 2053 
      *(valid_map + 1U) |= 134217728U;
      
#line 2053 
      tmp_51 = buf;
      
#line 2053 
      buf += 1;
      
#line 2053 
      *tmp_51 = sh_eth_read(ndev,59);
    }
    else ;
    
#line 2053 
    len += 1UL;
  }
  else ;
  
#line 2054 
  if ((unsigned int)*(mdp->reg_offset + 60U) != 65535U) {
    
#line 2054 
    if (buf != (u32 *)0U) {
      u32 *tmp_52;
      
#line 2054 
      *(valid_map + 1U) |= 268435456U;
      
#line 2054 
      tmp_52 = buf;
      
#line 2054 
      buf += 1;
      
#line 2054 
      *tmp_52 = sh_eth_read(ndev,60);
    }
    else ;
    
#line 2054 
    len += 1UL;
  }
  else ;
  
#line 2055 
  if ((unsigned int)*(mdp->reg_offset + 61U) != 65535U) {
    
#line 2055 
    if (buf != (u32 *)0U) {
      u32 *tmp_53;
      
#line 2055 
      *(valid_map + 1U) |= 536870912U;
      
#line 2055 
      tmp_53 = buf;
      
#line 2055 
      buf += 1;
      
#line 2055 
      *tmp_53 = sh_eth_read(ndev,61);
    }
    else ;
    
#line 2055 
    len += 1UL;
  }
  else ;
  
#line 2056 
  if ((unsigned int)*((unsigned char *)cd + 73UL) != 0U) {
    
#line 2057 
    if ((unsigned int)*(mdp->reg_offset + 62U) != 65535U) {
      
#line 2057 
      if (buf != (u32 *)0U) {
        u32 *tmp_54;
        
#line 2057 
        *(valid_map + 1U) |= 1073741824U;
        
#line 2057 
        tmp_54 = buf;
        
#line 2057 
        buf += 1;
        
#line 2057 
        *tmp_54 = sh_eth_read(ndev,62);
      }
      else ;
      
#line 2057 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2058 
  if ((unsigned int)*((unsigned char *)cd + 73UL) != 0U) {
    
#line 2059 
    if ((unsigned int)*(mdp->reg_offset + 63U) != 65535U) {
      
#line 2059 
      if (buf != (u32 *)0U) {
        u32 *tmp_55;
        
#line 2059 
        *(valid_map + 1U) |= 2147483648U;
        
#line 2059 
        tmp_55 = buf;
        
#line 2059 
        buf += 1;
        
#line 2059 
        *tmp_55 = sh_eth_read(ndev,63);
      }
      else ;
      
#line 2059 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2060 
  if ((unsigned int)*((unsigned char *)cd + 73UL) != 0U) {
    
#line 2061 
    if ((unsigned int)*(mdp->reg_offset + 64U) != 65535U) {
      
#line 2061 
      if (buf != (u32 *)0U) {
        u32 *tmp_56;
        
#line 2061 
        *(valid_map + 2U) |= 1U;
        
#line 2061 
        tmp_56 = buf;
        
#line 2061 
        buf += 1;
        
#line 2061 
        *tmp_56 = sh_eth_read(ndev,64);
      }
      else ;
      
#line 2061 
      len += 1UL;
    }
    else ;
  }
  else ;
  
#line 2062 
  if ((unsigned int)*(mdp->reg_offset + 65U) != 65535U) {
    
#line 2062 
    if (buf != (u32 *)0U) {
      u32 *tmp_57;
      
#line 2062 
      *(valid_map + 2U) |= 2U;
      
#line 2062 
      tmp_57 = buf;
      
#line 2062 
      buf += 1;
      
#line 2062 
      *tmp_57 = sh_eth_read(ndev,65);
    }
    else ;
    
#line 2062 
    len += 1UL;
  }
  else ;
  
#line 2063 
  if ((unsigned int)*((unsigned char *)cd + 72UL) != 0U) {
    
#line 2064 
    if ((unsigned int)*(mdp->reg_offset + 66U) != 65535U) {
      
#line 2064 
      if (buf != (u32 *)0U) {
        u32 *tmp_58;
        
#line 2064 
        *(valid_map + 2U) |= 4U;
        
#line 2064 
        tmp_58 = buf;
        
#line 2064 
        buf += 1;
        
#line 2064 
        *tmp_58 = sh_eth_tsu_read(mdp,66);
      }
      else ;
      
#line 2064 
      len += 1UL;
    }
    else ;
    
#line 2065 
    if ((unsigned int)*(mdp->reg_offset + 67U) != 65535U) {
      
#line 2065 
      if (buf != (u32 *)0U) {
        u32 *tmp_59;
        
#line 2065 
        *(valid_map + 2U) |= 8U;
        
#line 2065 
        tmp_59 = buf;
        
#line 2065 
        buf += 1;
        
#line 2065 
        *tmp_59 = sh_eth_tsu_read(mdp,67);
      }
      else ;
      
#line 2065 
      len += 1UL;
    }
    else ;
    
#line 2066 
    if ((unsigned int)*(mdp->reg_offset + 68U) != 65535U) {
      
#line 2066 
      if (buf != (u32 *)0U) {
        u32 *tmp_60;
        
#line 2066 
        *(valid_map + 2U) |= 16U;
        
#line 2066 
        tmp_60 = buf;
        
#line 2066 
        buf += 1;
        
#line 2066 
        *tmp_60 = sh_eth_tsu_read(mdp,68);
      }
      else ;
      
#line 2066 
      len += 1UL;
    }
    else ;
    
#line 2067 
    if ((unsigned int)*(mdp->reg_offset + 69U) != 65535U) {
      
#line 2067 
      if (buf != (u32 *)0U) {
        u32 *tmp_61;
        
#line 2067 
        *(valid_map + 2U) |= 32U;
        
#line 2067 
        tmp_61 = buf;
        
#line 2067 
        buf += 1;
        
#line 2067 
        *tmp_61 = sh_eth_tsu_read(mdp,69);
      }
      else ;
      
#line 2067 
      len += 1UL;
    }
    else ;
    
#line 2068 
    if ((unsigned int)*(mdp->reg_offset + 70U) != 65535U) {
      
#line 2068 
      if (buf != (u32 *)0U) {
        u32 *tmp_62;
        
#line 2068 
        *(valid_map + 2U) |= 64U;
        
#line 2068 
        tmp_62 = buf;
        
#line 2068 
        buf += 1;
        
#line 2068 
        *tmp_62 = sh_eth_tsu_read(mdp,70);
      }
      else ;
      
#line 2068 
      len += 1UL;
    }
    else ;
    
#line 2069 
    if ((unsigned int)*(mdp->reg_offset + 71U) != 65535U) {
      
#line 2069 
      if (buf != (u32 *)0U) {
        u32 *tmp_63;
        
#line 2069 
        *(valid_map + 2U) |= 128U;
        
#line 2069 
        tmp_63 = buf;
        
#line 2069 
        buf += 1;
        
#line 2069 
        *tmp_63 = sh_eth_tsu_read(mdp,71);
      }
      else ;
      
#line 2069 
      len += 1UL;
    }
    else ;
    
#line 2070 
    if ((unsigned int)*(mdp->reg_offset + 72U) != 65535U) {
      
#line 2070 
      if (buf != (u32 *)0U) {
        u32 *tmp_64;
        
#line 2070 
        *(valid_map + 2U) |= 256U;
        
#line 2070 
        tmp_64 = buf;
        
#line 2070 
        buf += 1;
        
#line 2070 
        *tmp_64 = sh_eth_tsu_read(mdp,72);
      }
      else ;
      
#line 2070 
      len += 1UL;
    }
    else ;
    
#line 2071 
    if ((unsigned int)*(mdp->reg_offset + 73U) != 65535U) {
      
#line 2071 
      if (buf != (u32 *)0U) {
        u32 *tmp_65;
        
#line 2071 
        *(valid_map + 2U) |= 512U;
        
#line 2071 
        tmp_65 = buf;
        
#line 2071 
        buf += 1;
        
#line 2071 
        *tmp_65 = sh_eth_tsu_read(mdp,73);
      }
      else ;
      
#line 2071 
      len += 1UL;
    }
    else ;
    
#line 2072 
    if ((unsigned int)*(mdp->reg_offset + 74U) != 65535U) {
      
#line 2072 
      if (buf != (u32 *)0U) {
        u32 *tmp_66;
        
#line 2072 
        *(valid_map + 2U) |= 1024U;
        
#line 2072 
        tmp_66 = buf;
        
#line 2072 
        buf += 1;
        
#line 2072 
        *tmp_66 = sh_eth_tsu_read(mdp,74);
      }
      else ;
      
#line 2072 
      len += 1UL;
    }
    else ;
    
#line 2073 
    if ((unsigned int)*(mdp->reg_offset + 75U) != 65535U) {
      
#line 2073 
      if (buf != (u32 *)0U) {
        u32 *tmp_67;
        
#line 2073 
        *(valid_map + 2U) |= 2048U;
        
#line 2073 
        tmp_67 = buf;
        
#line 2073 
        buf += 1;
        
#line 2073 
        *tmp_67 = sh_eth_tsu_read(mdp,75);
      }
      else ;
      
#line 2073 
      len += 1UL;
    }
    else ;
    
#line 2074 
    if ((unsigned int)*(mdp->reg_offset + 76U) != 65535U) {
      
#line 2074 
      if (buf != (u32 *)0U) {
        u32 *tmp_68;
        
#line 2074 
        *(valid_map + 2U) |= 4096U;
        
#line 2074 
        tmp_68 = buf;
        
#line 2074 
        buf += 1;
        
#line 2074 
        *tmp_68 = sh_eth_tsu_read(mdp,76);
      }
      else ;
      
#line 2074 
      len += 1UL;
    }
    else ;
    
#line 2075 
    if ((unsigned int)*(mdp->reg_offset + 77U) != 65535U) {
      
#line 2075 
      if (buf != (u32 *)0U) {
        u32 *tmp_69;
        
#line 2075 
        *(valid_map + 2U) |= 8192U;
        
#line 2075 
        tmp_69 = buf;
        
#line 2075 
        buf += 1;
        
#line 2075 
        *tmp_69 = sh_eth_tsu_read(mdp,77);
      }
      else ;
      
#line 2075 
      len += 1UL;
    }
    else ;
    
#line 2076 
    if ((unsigned int)*(mdp->reg_offset + 78U) != 65535U) {
      
#line 2076 
      if (buf != (u32 *)0U) {
        u32 *tmp_70;
        
#line 2076 
        *(valid_map + 2U) |= 16384U;
        
#line 2076 
        tmp_70 = buf;
        
#line 2076 
        buf += 1;
        
#line 2076 
        *tmp_70 = sh_eth_tsu_read(mdp,78);
      }
      else ;
      
#line 2076 
      len += 1UL;
    }
    else ;
    
#line 2077 
    if ((unsigned int)*(mdp->reg_offset + 79U) != 65535U) {
      
#line 2077 
      if (buf != (u32 *)0U) {
        u32 *tmp_71;
        
#line 2077 
        *(valid_map + 2U) |= 32768U;
        
#line 2077 
        tmp_71 = buf;
        
#line 2077 
        buf += 1;
        
#line 2077 
        *tmp_71 = sh_eth_tsu_read(mdp,79);
      }
      else ;
      
#line 2077 
      len += 1UL;
    }
    else ;
    
#line 2078 
    if ((unsigned int)*(mdp->reg_offset + 80U) != 65535U) {
      
#line 2078 
      if (buf != (u32 *)0U) {
        u32 *tmp_72;
        
#line 2078 
        *(valid_map + 2U) |= 65536U;
        
#line 2078 
        tmp_72 = buf;
        
#line 2078 
        buf += 1;
        
#line 2078 
        *tmp_72 = sh_eth_tsu_read(mdp,80);
      }
      else ;
      
#line 2078 
      len += 1UL;
    }
    else ;
    
#line 2079 
    if ((unsigned int)*(mdp->reg_offset + 81U) != 65535U) {
      
#line 2079 
      if (buf != (u32 *)0U) {
        u32 *tmp_73;
        
#line 2079 
        *(valid_map + 2U) |= 131072U;
        
#line 2079 
        tmp_73 = buf;
        
#line 2079 
        buf += 1;
        
#line 2079 
        *tmp_73 = sh_eth_tsu_read(mdp,81);
      }
      else ;
      
#line 2079 
      len += 1UL;
    }
    else ;
    
#line 2080 
    if ((unsigned int)*(mdp->reg_offset + 82U) != 65535U) {
      
#line 2080 
      if (buf != (u32 *)0U) {
        u32 *tmp_74;
        
#line 2080 
        *(valid_map + 2U) |= 262144U;
        
#line 2080 
        tmp_74 = buf;
        
#line 2080 
        buf += 1;
        
#line 2080 
        *tmp_74 = sh_eth_tsu_read(mdp,82);
      }
      else ;
      
#line 2080 
      len += 1UL;
    }
    else ;
    
#line 2081 
    if ((unsigned int)*(mdp->reg_offset + 83U) != 65535U) {
      
#line 2081 
      if (buf != (u32 *)0U) {
        u32 *tmp_75;
        
#line 2081 
        *(valid_map + 2U) |= 524288U;
        
#line 2081 
        tmp_75 = buf;
        
#line 2081 
        buf += 1;
        
#line 2081 
        *tmp_75 = sh_eth_tsu_read(mdp,83);
      }
      else ;
      
#line 2081 
      len += 1UL;
    }
    else ;
    
#line 2082 
    if ((unsigned int)*(mdp->reg_offset + 84U) != 65535U) {
      
#line 2082 
      if (buf != (u32 *)0U) {
        u32 *tmp_76;
        
#line 2082 
        *(valid_map + 2U) |= 1048576U;
        
#line 2082 
        tmp_76 = buf;
        
#line 2082 
        buf += 1;
        
#line 2082 
        *tmp_76 = sh_eth_tsu_read(mdp,84);
      }
      else ;
      
#line 2082 
      len += 1UL;
    }
    else ;
    
#line 2083 
    if ((unsigned int)*(mdp->reg_offset + 85U) != 65535U) {
      
#line 2083 
      if (buf != (u32 *)0U) {
        u32 *tmp_77;
        
#line 2083 
        *(valid_map + 2U) |= 2097152U;
        
#line 2083 
        tmp_77 = buf;
        
#line 2083 
        buf += 1;
        
#line 2083 
        *tmp_77 = sh_eth_tsu_read(mdp,85);
      }
      else ;
      
#line 2083 
      len += 1UL;
    }
    else ;
    
#line 2084 
    if ((unsigned int)*(mdp->reg_offset + 86U) != 65535U) {
      
#line 2084 
      if (buf != (u32 *)0U) {
        u32 *tmp_78;
        
#line 2084 
        *(valid_map + 2U) |= 4194304U;
        
#line 2084 
        tmp_78 = buf;
        
#line 2084 
        buf += 1;
        
#line 2084 
        *tmp_78 = sh_eth_tsu_read(mdp,86);
      }
      else ;
      
#line 2084 
      len += 1UL;
    }
    else ;
    
#line 2085 
    if ((unsigned int)*(mdp->reg_offset + 87U) != 65535U) {
      
#line 2085 
      if (buf != (u32 *)0U) {
        u32 *tmp_79;
        
#line 2085 
        *(valid_map + 2U) |= 8388608U;
        
#line 2085 
        tmp_79 = buf;
        
#line 2085 
        buf += 1;
        
#line 2085 
        *tmp_79 = sh_eth_tsu_read(mdp,87);
      }
      else ;
      
#line 2085 
      len += 1UL;
    }
    else ;
    
#line 2086 
    if ((unsigned int)*(mdp->reg_offset + 88U) != 65535U) {
      
#line 2086 
      if (buf != (u32 *)0U) {
        u32 *tmp_80;
        
#line 2086 
        *(valid_map + 2U) |= 16777216U;
        
#line 2086 
        tmp_80 = buf;
        
#line 2086 
        buf += 1;
        
#line 2086 
        *tmp_80 = sh_eth_tsu_read(mdp,88);
      }
      else ;
      
#line 2086 
      len += 1UL;
    }
    else ;
    
#line 2087 
    if ((unsigned int)*(mdp->reg_offset + 89U) != 65535U) {
      
#line 2087 
      if (buf != (u32 *)0U) {
        u32 *tmp_81;
        
#line 2087 
        *(valid_map + 2U) |= 33554432U;
        
#line 2087 
        tmp_81 = buf;
        
#line 2087 
        buf += 1;
        
#line 2087 
        *tmp_81 = sh_eth_tsu_read(mdp,89);
      }
      else ;
      
#line 2087 
      len += 1UL;
    }
    else ;
    
#line 2088 
    if ((unsigned int)*(mdp->reg_offset + 90U) != 65535U) {
      
#line 2088 
      if (buf != (u32 *)0U) {
        u32 *tmp_82;
        
#line 2088 
        *(valid_map + 2U) |= 67108864U;
        
#line 2088 
        tmp_82 = buf;
        
#line 2088 
        buf += 1;
        
#line 2088 
        *tmp_82 = sh_eth_tsu_read(mdp,90);
      }
      else ;
      
#line 2088 
      len += 1UL;
    }
    else ;
    
#line 2089 
    if ((unsigned int)*(mdp->reg_offset + 91U) != 65535U) {
      
#line 2089 
      if (buf != (u32 *)0U) {
        u32 *tmp_83;
        
#line 2089 
        *(valid_map + 2U) |= 134217728U;
        
#line 2089 
        tmp_83 = buf;
        
#line 2089 
        buf += 1;
        
#line 2089 
        *tmp_83 = sh_eth_tsu_read(mdp,91);
      }
      else ;
      
#line 2089 
      len += 1UL;
    }
    else ;
    
#line 2090 
    if ((unsigned int)*(mdp->reg_offset + 92U) != 65535U) {
      
#line 2090 
      if (buf != (u32 *)0U) {
        u32 *tmp_84;
        
#line 2090 
        *(valid_map + 2U) |= 268435456U;
        
#line 2090 
        tmp_84 = buf;
        
#line 2090 
        buf += 1;
        
#line 2090 
        *tmp_84 = sh_eth_tsu_read(mdp,92);
      }
      else ;
      
#line 2090 
      len += 1UL;
    }
    else ;
    
#line 2091 
    if ((unsigned int)*(mdp->reg_offset + 93U) != 65535U) {
      
#line 2095 
      if (buf != (u32 *)0U) {
        unsigned int i;
        u32 *tmp_85;
        
#line 2098 
        *(valid_map + 2U) |= 536870912U;
        
#line 2099 
        i = 0U;
        
#line 2099 
        goto ldv_46873;
        ldv_46872: 
#line 2100 
        ;
        
#line 2100 
        tmp_85 = buf;
        
#line 2100 
        buf += 1;
        
#line 2100 
        *tmp_85 = ioread32(mdp->tsu_addr + ((unsigned int)*(mdp->reg_offset + 93U) + i * 4U));
        
#line 2099 
        i += 1U;
        ldv_46873: 
#line 2100 
        ;
        
#line 2099 
        if (i <= 63U) 
#line 2101 
                      goto ldv_46872; else 
#line 2104 
                                           goto ldv_46874;
        ldv_46874: 
#line 2105 
        ;
      }
      else ;
      
#line 2105 
      len += 64UL;
    }
    else ;
  }
  else ;
  
#line 2114 
  __retres = len * 4UL;
  
#line 2114 
  return __retres;
}


#line 2117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_get_regs_len(struct net_device *ndev)
{
  int __retres;
  size_t tmp;
  
#line 2119 
  tmp = __sh_eth_get_regs(ndev,(u32 *)0U);
  
#line 2119 
  __retres = (int)tmp;
  
#line 2119 
  return __retres;
}


#line 2122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_get_regs(struct net_device *ndev, struct ethtool_regs *regs, void *buf)
{
  
#line 2125 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2127 
  regs->version = 1U;
  
#line 2129 
  pm_runtime_get_sync(& (mdp->pdev)->dev);
  
#line 2130 
  __sh_eth_get_regs(ndev,(u32 *)buf);
  
#line 2131 
  pm_runtime_put_sync(& (mdp->pdev)->dev);
  
#line 2132 
  return;
}


#line 2134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_nway_reset(struct net_device *ndev)
{
  int __retres;
  unsigned long flags;
  int ret;
  
#line 2136 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2140 
  if (mdp->phydev == (struct phy_device *)0) {
    
#line 2141 
    __retres = -19;
    
#line 2141 
    goto return_label;
  }
  else ;
  
#line 2143 
  ldv___ldv_spin_lock_78(& mdp->lock);
  
#line 2144 
  ret = phy_start_aneg(mdp->phydev);
  
#line 2145 
  ldv_spin_unlock_irqrestore_79(& mdp->lock,flags);
  
#line 2147 
  __retres = ret;
  return_label: 
#line 2147 
                return __retres;
}


#line 2150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u32 sh_eth_get_msglevel(struct net_device *ndev)
{
  u32 __retres;
  
#line 2152 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2153 
  __retres = (unsigned int)mdp->msg_enable;
  
#line 2153 
  return __retres;
}


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_msglevel(struct net_device *ndev, u32 value)
{
  
#line 2158 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2159 
  mdp->msg_enable = (int)value;
  
#line 2160 
  return;
}


#line 2162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static char const sh_eth_gstrings_stats[4U][32U] = {{(char)'r', (char)'x', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'d', (char)'i', (char)'r', (char)'t', (char)'y', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'i', (char)'r', (char)'t', (char)'y', (char)'\000'}};

#line 2168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 2170 
  switch (sset) {
    case 1: 
#line 2171 
    ;
    
#line 2172 
    __retres = 4;
    
#line 2172 
    goto return_label;
    default: 
#line 2173 
    ;
    
#line 2174 
    __retres = -95;
    
#line 2174 
    goto return_label;
  }
  return_label: 
#line 2170 
                return __retres;
}


#line 2178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_get_ethtool_stats(struct net_device *ndev, struct ethtool_stats *stats, u64 *data)
{
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 2181 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2182 
  int i = 0;
  
#line 2185 
  tmp_0 = i;
  
#line 2185 
  i += 1;
  
#line 2185 
  *(data + tmp_0) = (unsigned long long)mdp->cur_rx;
  
#line 2186 
  tmp_1 = i;
  
#line 2186 
  i += 1;
  
#line 2186 
  *(data + tmp_1) = (unsigned long long)mdp->cur_tx;
  
#line 2187 
  tmp_2 = i;
  
#line 2187 
  i += 1;
  
#line 2187 
  *(data + tmp_2) = (unsigned long long)mdp->dirty_rx;
  
#line 2188 
  tmp_3 = i;
  
#line 2188 
  i += 1;
  
#line 2188 
  *(data + tmp_3) = (unsigned long long)mdp->dirty_tx;
  
#line 2189 
  return;
}


#line 2191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_get_strings(struct net_device *ndev, u32 stringset, u8 *data)
{
  
#line 2193 
  switch (stringset) {
    case (u32)1: 
#line 2194 
    ;
    
#line 2195 
    memcpy((void *)data,(void const *)(& sh_eth_gstrings_stats),128UL);
    
#line 2197 
    goto ldv_46922;
  }
  ldv_46922: 
#line 2199 
  ;
  
#line 2200 
  return;
}


#line 2201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_get_ringparam(struct net_device *ndev, struct ethtool_ringparam *ring)
{
  
#line 2204 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2206 
  ring->rx_max_pending = 1024U;
  
#line 2207 
  ring->tx_max_pending = 1024U;
  
#line 2208 
  ring->rx_pending = mdp->num_rx_ring;
  
#line 2209 
  ring->tx_pending = mdp->num_tx_ring;
  
#line 2210 
  return;
}


#line 2212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_set_ringparam(struct net_device *ndev, struct ethtool_ringparam *ring)
{
  int __retres;
  int ret;
  bool tmp_0;
  bool tmp_1;
  
#line 2215 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2218 
  if (((ring->tx_pending > 1024U || ring->rx_pending > 1024U) || ring->tx_pending <= 63U) || ring->rx_pending <= 63U) {
    
#line 2222 
    __retres = -22;
    
#line 2222 
    goto return_label;
  }
  else ;
  
#line 2223 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    
#line 2224 
    __retres = -22;
    
#line 2224 
    goto return_label;
  }
  else ;
  
#line 2226 
  tmp_0 = netif_running((struct net_device const *)ndev);
  
#line 2226 
  if ((int)tmp_0 != 0) {
    
#line 2227 
    netif_device_detach(ndev);
    
#line 2228 
    netif_tx_disable(ndev);
    
#line 2235 
    mdp->irq_enabled = (_Bool)0;
    
#line 2236 
    synchronize_irq((unsigned int)ndev->irq);
    
#line 2237 
    napi_synchronize((struct napi_struct const *)(& mdp->napi));
    
#line 2238 
    sh_eth_write(ndev,0U,5);
    
#line 2240 
    sh_eth_dev_exit(ndev);
    
#line 2243 
    sh_eth_ring_free(ndev);
    
#line 2245 
    sh_eth_free_dma_buffer(mdp);
  }
  else ;
  
#line 2249 
  mdp->num_rx_ring = ring->rx_pending;
  
#line 2250 
  mdp->num_tx_ring = ring->tx_pending;
  
#line 2252 
  tmp_1 = netif_running((struct net_device const *)ndev);
  
#line 2252 
  if ((int)tmp_1 != 0) {
    
#line 2253 
    ret = sh_eth_ring_init(ndev);
    
#line 2254 
    if (ret < 0) {
      
#line 2255 
      netdev_err((struct net_device const *)ndev,"%s: sh_eth_ring_init failed.\n","sh_eth_set_ringparam");
      
#line 2257 
      __retres = ret;
      
#line 2257 
      goto return_label;
    }
    else ;
    
#line 2259 
    ret = sh_eth_dev_init(ndev,(_Bool)0);
    
#line 2260 
    if (ret < 0) {
      
#line 2261 
      netdev_err((struct net_device const *)ndev,"%s: sh_eth_dev_init failed.\n","sh_eth_set_ringparam");
      
#line 2263 
      __retres = ret;
      
#line 2263 
      goto return_label;
    }
    else ;
    
#line 2266 
    mdp->irq_enabled = (_Bool)1;
    
#line 2267 
    sh_eth_write(ndev,(mdp->cd)->eesipr_value,5);
    
#line 2269 
    sh_eth_write(ndev,1U,3);
    
#line 2270 
    netif_device_attach(ndev);
  }
  else ;
  
#line 2273 
  __retres = 0;
  return_label: 
#line 2273 
                return __retres;
}


#line 2276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct ethtool_ops const sh_eth_ethtool_ops = {.get_settings = & sh_eth_get_settings, .set_settings = & sh_eth_set_settings, .get_drvinfo = (void (*)(struct net_device *, struct ethtool_drvinfo *))0, .get_regs_len = & sh_eth_get_regs_len, .get_regs = & sh_eth_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & sh_eth_get_msglevel, .set_msglevel = & sh_eth_set_msglevel, .nway_reset = & sh_eth_nway_reset, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & sh_eth_get_ringparam, .set_ringparam = & sh_eth_set_ringparam, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & sh_eth_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & sh_eth_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & sh_eth_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_open(struct net_device *ndev)
{
  int __retres;
  
#line 2295 
  int ret = 0;
  
#line 2296 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2298 
  pm_runtime_get_sync(& (mdp->pdev)->dev);
  
#line 2300 
  napi_enable(& mdp->napi);
  
#line 2302 
  ret = ldv_request_irq_80((unsigned int)ndev->irq,& sh_eth_interrupt,(mdp->cd)->irq_flags,(char const *)(& ndev->name),(void *)ndev);
  
#line 2304 
  if (ret != 0) {
    
#line 2305 
    netdev_err((struct net_device const *)ndev,"Can not assign IRQ number\n");
    
#line 2306 
    goto out_napi_off;
  }
  else ;
  
#line 2310 
  ret = sh_eth_ring_init(ndev);
  
#line 2311 
  if (ret != 0) 
#line 2312 
                goto out_free_irq; else ;
  
#line 2315 
  ret = sh_eth_dev_init(ndev,(_Bool)1);
  
#line 2316 
  if (ret != 0) 
#line 2317 
                goto out_free_irq; else ;
  
#line 2320 
  ret = sh_eth_phy_start(ndev);
  
#line 2321 
  if (ret != 0) 
#line 2322 
                goto out_free_irq; else ;
  
#line 2324 
  mdp->is_opened = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2326 
  __retres = ret;
  
#line 2326 
  goto return_label;
  out_free_irq: 
#line 2328 
  ;
  
#line 2329 
  ldv_free_irq_81((unsigned int)ndev->irq,(void *)ndev);
  out_napi_off: 
#line 2330 
  ;
  
#line 2331 
  napi_disable(& mdp->napi);
  
#line 2332 
  pm_runtime_put_sync(& (mdp->pdev)->dev);
  
#line 2333 
  __retres = ret;
  return_label: 
#line 2333 
                return __retres;
}


#line 2337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_tx_timeout(struct net_device *ndev)
{
  struct sh_eth_rxdesc *rxdesc;
  int i;
  
#line 2339 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2343 
  netif_start_queue(ndev);
  
#line 2345 
  if ((mdp->msg_enable & 8) != 0) {
    u32 tmp_0;
    
#line 2345 
    tmp_0 = sh_eth_read(ndev,4);
    
#line 2345 
    ;
    
#line 2345 
    netdev_err((struct net_device const *)ndev,"transmit timed out, status %8.8x, resetting...\n",tmp_0);
  }
  else ;
  
#line 2350 
  ndev->stats.tx_errors += 1UL;
  
#line 2353 
  i = 0;
  
#line 2353 
  goto ldv_46950;
  ldv_46949: 
#line 2354 
  ;
  
#line 2354 
  rxdesc = mdp->rx_ring + i;
  
#line 2355 
  rxdesc->status = 0U;
  
#line 2356 
  rxdesc->addr = 3135176912U;
  
#line 2357 
  consume_skb(*(mdp->rx_skbuff + i));
  
#line 2358 
  *(mdp->rx_skbuff + i) = (struct sk_buff *)0;
  
#line 2353 
  i += 1;
  ldv_46950: 
#line 2354 
  ;
  
#line 2353 
  if (mdp->num_rx_ring > (unsigned int)i) 
#line 2355 
                                          goto ldv_46949; else 
#line 2358 
                                                               goto ldv_46951;
  ldv_46951: 
#line 2359 
  ;
  
#line 2360 
  i = 0;
  
#line 2360 
  goto ldv_46953;
  ldv_46952: 
#line 2361 
  ;
  
#line 2361 
  consume_skb(*(mdp->tx_skbuff + i));
  
#line 2362 
  *(mdp->tx_skbuff + i) = (struct sk_buff *)0;
  
#line 2360 
  i += 1;
  ldv_46953: 
#line 2361 
  ;
  
#line 2360 
  if (mdp->num_tx_ring > (unsigned int)i) 
#line 2362 
                                          goto ldv_46952; else 
#line 2365 
                                                               goto ldv_46954;
  ldv_46954: 
#line 2366 
  ;
  
#line 2366 
  sh_eth_dev_init(ndev,(_Bool)1);
  
#line 2367 
  return;
}


#line 2370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_start_xmit(struct sk_buff *skb, struct net_device *ndev)
{
  int __retres;
  struct sh_eth_txdesc *txdesc;
  u32 entry;
  unsigned long flags;
  int tmp_1;
  dma_addr_t tmp_3;
  int tmp_4;
  u32 tmp_8;
  u32 tmp_9;
  
#line 2372 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2377 
  ldv___ldv_spin_lock_82(& mdp->lock);
  
#line 2378 
  if (mdp->cur_tx - mdp->dirty_tx >= mdp->num_tx_ring + 4294967292U) {
    int tmp_0;
    
#line 2379 
    tmp_0 = sh_eth_txfree(ndev);
    
#line 2379 
    if (tmp_0 == 0) {
      
#line 2380 
      if ((mdp->msg_enable & 256) != 0) 
#line 2380 
                                        netdev_warn((struct net_device const *)ndev,"TxFD exhausted.\n"); else ;
      
#line 2381 
      netif_start_queue(ndev);
      
#line 2382 
      ldv_spin_unlock_irqrestore_83(& mdp->lock,flags);
      
#line 2383 
      __retres = 16;
      
#line 2383 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2386 
  ldv_spin_unlock_irqrestore_84(& mdp->lock,flags);
  
#line 2388 
  tmp_1 = skb_put_padto(skb,60U);
  
#line 2388 
  if (tmp_1 != 0) {
    
#line 2389 
    __retres = 0;
    
#line 2389 
    goto return_label;
  }
  else ;
  
#line 2391 
  entry = mdp->cur_tx % mdp->num_tx_ring;
  
#line 2392 
  *(mdp->tx_skbuff + entry) = skb;
  
#line 2393 
  txdesc = mdp->tx_ring + entry;
  
#line 2395 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) {
    void *tmp_2;
    
#line 2396 
    ;
    
#line 2396 
    tmp_2 = phys_to_virt((unsigned long long)(txdesc->addr + 3U) & 4294967292ULL);
    
#line 2396 
    sh_eth_soft_swap((char *)tmp_2,(int)(skb->len + 2U));
  }
  else ;
  
#line 2398 
  tmp_3 = dma_map_single_attrs(& ndev->dev,(void *)skb->data,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 2398 
  txdesc->addr = (unsigned int)tmp_3;
  
#line 2400 
  tmp_4 = dma_mapping_error(& ndev->dev,(unsigned long long)txdesc->addr);
  
#line 2400 
  if (tmp_4 != 0) {
    
#line 2401 
    kfree_skb(skb);
    
#line 2402 
    __retres = 0;
    
#line 2402 
    goto return_label;
  }
  else ;
  
#line 2404 
  txdesc->buffer_length = (unsigned short)skb->len;
  
#line 2405 
  ldv_inline_asm();
  
#line 2407 
  if (mdp->num_tx_ring + 4294967295U <= entry) {
    __u32 tmp_5;
    
#line 2408 
    tmp_5 = cpu_to_edmac(mdp,3221225472U);
    
#line 2408 
    txdesc->status |= tmp_5;
  }
  else {
    __u32 tmp_6;
    
#line 2410 
    tmp_6 = cpu_to_edmac(mdp,2147483648U);
    
#line 2410 
    txdesc->status |= tmp_6;
  }
  
#line 2412 
  mdp->cur_tx += 1U;
  
#line 2414 
  tmp_8 = sh_eth_read(ndev,2);
  
#line 2414 
  tmp_9 = sh_eth_get_edtrr_trns(mdp);
  
#line 2414 
  if ((tmp_8 & tmp_9) == 0U) {
    u32 tmp_7;
    
#line 2415 
    tmp_7 = sh_eth_get_edtrr_trns(mdp);
    
#line 2415 
    ;
    
#line 2415 
    sh_eth_write(ndev,tmp_7,2);
  }
  else ;
  
#line 2417 
  __retres = 0;
  return_label: 
#line 2417 
                return __retres;
}


#line 2426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_update_stat(struct net_device *ndev, unsigned long *stat, int reg)
{
  
#line 2428 
  u32 delta = sh_eth_read(ndev,reg);
  
#line 2430 
  if (delta != 0U) {
    
#line 2431 
    *stat += (unsigned long)delta;
    
#line 2432 
    sh_eth_write(ndev,0U,reg);
  }
  else ;
  
#line 2434 
  return;
}


#line 2436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct net_device_stats *sh_eth_get_stats(struct net_device *ndev)
{
  struct net_device_stats *__retres;
  bool tmp_0;
  bool tmp_1;
  
#line 2438 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2440 
  tmp_0 = sh_eth_is_rz_fast_ether(mdp);
  
#line 2440 
  if ((int)tmp_0 != 0) {
    
#line 2441 
    __retres = & ndev->stats;
    
#line 2441 
    goto return_label;
  }
  else ;
  
#line 2443 
  if ((unsigned int)*((unsigned char *)mdp + 524UL) == 0U) {
    
#line 2444 
    __retres = & ndev->stats;
    
#line 2444 
    goto return_label;
  }
  else ;
  
#line 2446 
  sh_eth_update_stat(ndev,& ndev->stats.tx_dropped,51);
  
#line 2447 
  sh_eth_update_stat(ndev,& ndev->stats.collisions,52);
  
#line 2448 
  sh_eth_update_stat(ndev,& ndev->stats.tx_carrier_errors,53);
  
#line 2450 
  tmp_1 = sh_eth_is_gether(mdp);
  
#line 2450 
  if ((int)tmp_1 != 0) {
    
#line 2451 
    sh_eth_update_stat(ndev,& ndev->stats.tx_carrier_errors,59);
    
#line 2453 
    sh_eth_update_stat(ndev,& ndev->stats.tx_carrier_errors,60);
  }
  else 
#line 2456 
       sh_eth_update_stat(ndev,& ndev->stats.tx_carrier_errors,54);
  
#line 2460 
  __retres = & ndev->stats;
  return_label: 
#line 2460 
                return __retres;
}


#line 2464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_close(struct net_device *ndev)
{
  int __retres;
  
#line 2466 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2468 
  netif_start_queue(ndev);
  
#line 2474 
  mdp->irq_enabled = (_Bool)0;
  
#line 2475 
  synchronize_irq((unsigned int)ndev->irq);
  
#line 2476 
  napi_disable(& mdp->napi);
  
#line 2477 
  sh_eth_write(ndev,0U,5);
  
#line 2479 
  sh_eth_dev_exit(ndev);
  
#line 2482 
  if (mdp->phydev != (struct phy_device *)0) {
    
#line 2483 
    phy_stop(mdp->phydev);
    
#line 2484 
    phy_disconnect(mdp->phydev);
    
#line 2485 
    mdp->phydev = (struct phy_device *)0;
  }
  else ;
  
#line 2488 
  ldv_free_irq_85((unsigned int)ndev->irq,(void *)ndev);
  
#line 2491 
  sh_eth_ring_free(ndev);
  
#line 2494 
  sh_eth_free_dma_buffer(mdp);
  
#line 2496 
  pm_runtime_put_sync(& (mdp->pdev)->dev);
  
#line 2498 
  mdp->is_opened = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 2500 
  __retres = 0;
  
#line 2500 
  return __retres;
}


#line 2504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_do_ioctl(struct net_device *ndev, struct ifreq *rq, int cmd)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 2506 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2507 
  struct phy_device *phydev = mdp->phydev;
  
#line 2509 
  tmp_0 = netif_running((struct net_device const *)ndev);
  
#line 2509 
  if (tmp_0) 
#line 2509 
             tmp_1 = 0; else 
#line 2509 
                             tmp_1 = 1;
  
#line 2509 
  if (tmp_1) {
    
#line 2510 
    __retres = -22;
    
#line 2510 
    goto return_label;
  }
  else ;
  
#line 2512 
  if (phydev == (struct phy_device *)0) {
    
#line 2513 
    __retres = -19;
    
#line 2513 
    goto return_label;
  }
  else ;
  
#line 2515 
  tmp_2 = phy_mii_ioctl(phydev,rq,cmd);
  
#line 2515 
  __retres = tmp_2;
  return_label: 
#line 2515 
                return __retres;
}


#line 2519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void *sh_eth_tsu_get_post_reg_offset(struct sh_eth_private *mdp, int entry)
{
  void *__retres;
  void *tmp;
  
#line 2522 
  tmp = sh_eth_tsu_get_offset(mdp,89);
  
#line 2522 
  ;
  
#line 2522 
  __retres = tmp + (entry / 8) * 4;
  
#line 2522 
  return __retres;
}


#line 2525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u32 sh_eth_tsu_get_post_mask(int entry)
{
  u32 __retres;
  
#line 2527 
  __retres = (unsigned int)(15 << (7 - entry % 8) * 4);
  
#line 2527 
  return __retres;
}


#line 2530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u32 sh_eth_tsu_get_post_bit(struct sh_eth_private *mdp, int entry)
{
  u32 __retres;
  
#line 2532 
  __retres = (unsigned int)((8 >> (mdp->port << 1)) << (7 - entry % 8) * 4);
  
#line 2532 
  return __retres;
}


#line 2535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_tsu_enable_cam_entry_post(struct net_device *ndev, int entry)
{
  u32 tmp_0;
  void *reg_offset;
  u32 tmp_1;
  
#line 2538 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2542 
  reg_offset = sh_eth_tsu_get_post_reg_offset(mdp,entry);
  
#line 2543 
  tmp_0 = ioread32(reg_offset);
  
#line 2544 
  ;
  
#line 2544 
  tmp_1 = sh_eth_tsu_get_post_bit(mdp,entry);
  
#line 2544 
  ;
  
#line 2544 
  iowrite32(tmp_1 | tmp_0,reg_offset);
  
#line 2545 
  return;
}


#line 2547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static bool sh_eth_tsu_disable_cam_entry_post(struct net_device *ndev, int entry)
{
  bool __retres;
  u32 post_mask;
  u32 ref_mask;
  u32 tmp_0;
  void *reg_offset;
  u32 tmp_1;
  
#line 2550 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2554 
  reg_offset = sh_eth_tsu_get_post_reg_offset(mdp,entry);
  
#line 2555 
  post_mask = sh_eth_tsu_get_post_mask(entry);
  
#line 2556 
  tmp_1 = sh_eth_tsu_get_post_bit(mdp,entry);
  
#line 2556 
  ref_mask = tmp_1 & ~ post_mask;
  
#line 2558 
  tmp_0 = ioread32(reg_offset);
  
#line 2559 
  iowrite32(~ post_mask & tmp_0,reg_offset);
  
#line 2562 
  __retres = (_Bool)((tmp_0 & ref_mask) != 0U);
  
#line 2562 
  return __retres;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_busy(struct net_device *ndev)
{
  int __retres;
  u32 tmp_0;
  
#line 2567 
  int timeout = 50000;
  
#line 2568 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2570 
  goto ldv_47018;
  ldv_47017: 
#line 2571 
  ;
  
#line 2571 
  __const_udelay(42950UL);
  
#line 2572 
  timeout -= 1;
  
#line 2573 
  if (timeout <= 0) {
    
#line 2574 
    netdev_err((struct net_device const *)ndev,"%s: timeout\n","sh_eth_tsu_busy");
    
#line 2575 
    __retres = -110;
    
#line 2575 
    goto return_label;
  }
  else ;
  ldv_47018: 
#line 2577 
  ;
  
#line 2570 
  tmp_0 = sh_eth_tsu_read(mdp,87);
  
#line 2570 
  if ((tmp_0 & 1U) != 0U) 
#line 2572 
                          goto ldv_47017; else 
#line 2575 
                                               goto ldv_47019;
  ldv_47019: 
#line 2576 
  ;
  
#line 2579 
  __retres = 0;
  return_label: 
#line 2579 
                return __retres;
}


#line 2582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_write_entry(struct net_device *ndev, void *reg, u8 const *addr)
{
  int __retres;
  u32 val;
  int tmp;
  int tmp_0;
  
#line 2587 
  val = (unsigned int)(((((int)*addr << 24) | ((int)*(addr + 1U) << 16)) | ((int)*(addr + 2U) << 8)) | (int)*(addr + 3U));
  
#line 2588 
  iowrite32(val,reg);
  
#line 2589 
  tmp = sh_eth_tsu_busy(ndev);
  
#line 2589 
  if (tmp < 0) {
    
#line 2590 
    __retres = -16;
    
#line 2590 
    goto return_label;
  }
  else ;
  
#line 2592 
  val = (unsigned int)(((int)*(addr + 4U) << 8) | (int)*(addr + 5U));
  
#line 2593 
  iowrite32(val,reg + 4U);
  
#line 2594 
  tmp_0 = sh_eth_tsu_busy(ndev);
  
#line 2594 
  if (tmp_0 < 0) {
    
#line 2595 
    __retres = -16;
    
#line 2595 
    goto return_label;
  }
  else ;
  
#line 2597 
  __retres = 0;
  return_label: 
#line 2597 
                return __retres;
}


#line 2600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_tsu_read_entry(void *reg, u8 *addr)
{
  u32 val;
  
#line 2604 
  val = ioread32(reg);
  
#line 2605 
  *addr = (unsigned char)(val >> 24);
  
#line 2606 
  *(addr + 1U) = (unsigned char)(val >> 16);
  
#line 2607 
  *(addr + 2U) = (unsigned char)(val >> 8);
  
#line 2608 
  *(addr + 3U) = (unsigned char)val;
  
#line 2609 
  val = ioread32(reg + 4U);
  
#line 2610 
  *(addr + 4U) = (unsigned char)(val >> 8);
  
#line 2611 
  *(addr + 5U) = (unsigned char)val;
  
#line 2612 
  return;
}


#line 2615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_find_entry(struct net_device *ndev, u8 const *addr)
{
  int __retres;
  int i;
  u8 c_addr[6U];
  bool tmp_1;
  
#line 2617 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2618 
  void *reg_offset = sh_eth_tsu_get_offset(mdp,93);
  
#line 2622 
  i = 0;
  
#line 2622 
  goto ldv_47040;
  ldv_47039: 
#line 2623 
  ;
  
#line 2623 
  sh_eth_tsu_read_entry(reg_offset,(u8 *)(& c_addr));
  
#line 2624 
  tmp_1 = ether_addr_equal(addr,(u8 const *)(& c_addr));
  
#line 2624 
  if ((int)tmp_1 != 0) {
    
#line 2625 
    __retres = i;
    
#line 2625 
    goto return_label;
  }
  else ;
  
#line 2622 
  i += 1;
  
#line 2622 
  reg_offset += 8U;
  ldv_47040: 
#line 2623 
  ;
  
#line 2622 
  if (i <= 31) 
#line 2624 
               goto ldv_47039; else 
#line 2627 
                                    goto ldv_47041;
  ldv_47041: 
#line 2628 
  ;
  
#line 2628 
  __retres = -2;
  return_label: 
#line 2628 
                return __retres;
}


#line 2631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_find_empty(struct net_device *ndev)
{
  u8 blank[6U];
  int entry;
  int tmp;
  
#line 2636 
  memset((void *)(& blank),0,6UL);
  
#line 2637 
  entry = sh_eth_tsu_find_entry(ndev,(u8 const *)(& blank));
  
#line 2638 
  if (entry >= 0) 
#line 2638 
                  tmp = entry; else 
#line 2638 
                                    tmp = -12;
  
#line 2638 
  return tmp;
}


#line 2641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_disable_cam_entry_table(struct net_device *ndev, int entry)
{
  int __retres;
  int ret;
  u8 blank[6U];
  u32 tmp_1;
  
#line 2644 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2645 
  void *reg_offset = sh_eth_tsu_get_offset(mdp,93);
  
#line 2649 
  tmp_1 = sh_eth_tsu_read(mdp,88);
  
#line 2649 
  ;
  
#line 2649 
  ;
  
#line 2649 
  sh_eth_tsu_write(mdp,tmp_1 & (unsigned int)(~ (1 << (31 - entry))),88);
  
#line 2652 
  memset((void *)(& blank),0,6UL);
  
#line 2653 
  ret = sh_eth_tsu_write_entry(ndev,reg_offset + entry * 8,(u8 const *)(& blank));
  
#line 2654 
  if (ret < 0) {
    
#line 2655 
    __retres = ret;
    
#line 2655 
    goto return_label;
  }
  else ;
  
#line 2656 
  __retres = 0;
  return_label: 
#line 2656 
                return __retres;
}


#line 2659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_add_entry(struct net_device *ndev, u8 const *addr)
{
  int __retres;
  int i;
  int ret;
  
#line 2661 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2662 
  void *reg_offset = sh_eth_tsu_get_offset(mdp,93);
  
#line 2665 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) {
    
#line 2666 
    __retres = 0;
    
#line 2666 
    goto return_label;
  }
  else ;
  
#line 2668 
  i = sh_eth_tsu_find_entry(ndev,addr);
  
#line 2669 
  if (i < 0) {
    u32 tmp_1;
    
#line 2671 
    i = sh_eth_tsu_find_empty(ndev);
    
#line 2672 
    if (i < 0) {
      
#line 2673 
      __retres = -12;
      
#line 2673 
      goto return_label;
    }
    else ;
    
#line 2674 
    ret = sh_eth_tsu_write_entry(ndev,reg_offset + i * 8,addr);
    
#line 2675 
    if (ret < 0) {
      
#line 2676 
      __retres = ret;
      
#line 2676 
      goto return_label;
    }
    else ;
    
#line 2679 
    tmp_1 = sh_eth_tsu_read(mdp,88);
    
#line 2679 
    ;
    
#line 2679 
    ;
    
#line 2679 
    sh_eth_tsu_write(mdp,tmp_1 | (unsigned int)(1 << (31 - i)),88);
  }
  else ;
  
#line 2684 
  sh_eth_tsu_enable_cam_entry_post(ndev,i);
  
#line 2686 
  __retres = 0;
  return_label: 
#line 2686 
                return __retres;
}


#line 2689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_del_entry(struct net_device *ndev, u8 const *addr)
{
  int __retres;
  int i;
  int ret;
  
#line 2691 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2694 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) {
    
#line 2695 
    __retres = 0;
    
#line 2695 
    goto return_label;
  }
  else ;
  
#line 2697 
  i = sh_eth_tsu_find_entry(ndev,addr);
  
#line 2698 
  if (i != 0) {
    bool tmp_0;
    
#line 2700 
    tmp_0 = sh_eth_tsu_disable_cam_entry_post(ndev,i);
    
#line 2700 
    if ((int)tmp_0 != 0) 
#line 2701 
                         goto done; else ;
    
#line 2704 
    ret = sh_eth_tsu_disable_cam_entry_table(ndev,i);
    
#line 2705 
    if (ret < 0) {
      
#line 2706 
      __retres = ret;
      
#line 2706 
      goto return_label;
    }
    else ;
  }
  else ;
  done: 
#line 2708 
  ;
  
#line 2709 
  __retres = 0;
  return_label: 
#line 2709 
                return __retres;
}


#line 2712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_tsu_purge_all(struct net_device *ndev)
{
  int __retres;
  int i;
  int ret;
  bool tmp_0;
  
#line 2714 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2717 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) {
    
#line 2718 
    __retres = 0;
    
#line 2718 
    goto return_label;
  }
  else ;
  
#line 2720 
  i = 0;
  
#line 2720 
  goto ldv_47079;
  ldv_47078: 
#line 2721 
  ;
  
#line 2721 
  tmp_0 = sh_eth_tsu_disable_cam_entry_post(ndev,i);
  
#line 2721 
  if ((int)tmp_0 != 0) 
#line 2722 
                       goto ldv_47077; else ;
  
#line 2725 
  ret = sh_eth_tsu_disable_cam_entry_table(ndev,i);
  
#line 2726 
  if (ret < 0) {
    
#line 2727 
    __retres = ret;
    
#line 2727 
    goto return_label;
  }
  else ;
  ldv_47077: 
#line 2728 
  ;
  
#line 2720 
  i += 1;
  ldv_47079: 
#line 2721 
  ;
  
#line 2720 
  if (i <= 31) 
#line 2722 
               goto ldv_47078; else 
#line 2725 
                                    goto ldv_47080;
  ldv_47080: 
#line 2726 
  ;
  
#line 2730 
  __retres = 0;
  return_label: 
#line 2730 
                return __retres;
}


#line 2733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_tsu_purge_mcast(struct net_device *ndev)
{
  u8 addr[6U];
  int i;
  bool tmp_1;
  
#line 2735 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2737 
  void *reg_offset = sh_eth_tsu_get_offset(mdp,93);
  
#line 2740 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) 
#line 2741 
                                                              goto return_label; else ;
  
#line 2743 
  i = 0;
  
#line 2743 
  goto ldv_47089;
  ldv_47088: 
#line 2744 
  ;
  
#line 2744 
  sh_eth_tsu_read_entry(reg_offset,(u8 *)(& addr));
  
#line 2745 
  tmp_1 = is_multicast_ether_addr((u8 const *)(& addr));
  
#line 2745 
  if ((int)tmp_1 != 0) 
#line 2746 
                       sh_eth_tsu_del_entry(ndev,(u8 const *)(& addr)); else ;
  
#line 2743 
  i += 1;
  
#line 2743 
  reg_offset += 8U;
  ldv_47089: 
#line 2744 
  ;
  
#line 2743 
  if (i <= 31) 
#line 2745 
               goto ldv_47088; else 
#line 2748 
                                    goto ldv_47090;
  ldv_47090: 
#line 2749 
  ;
  return_label: 
#line 2750 
                return;
}


#line 2751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_set_rx_mode(struct net_device *ndev)
{
  u32 ecmr_bits;
  unsigned long flags;
  u32 tmp_0;
  
#line 2753 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2755 
  int mcast_all = 0;
  
#line 2758 
  ldv___ldv_spin_lock_86(& mdp->lock);
  
#line 2762 
  tmp_0 = sh_eth_read(ndev,28);
  
#line 2762 
  ecmr_bits = tmp_0 & 4294967294U;
  
#line 2763 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 2764 
                                                              ecmr_bits |= 8192U; else ;
  
#line 2766 
  if ((ndev->flags & 4096U) == 0U) {
    
#line 2767 
    sh_eth_tsu_purge_mcast(ndev);
    
#line 2768 
    mcast_all = 1;
  }
  else ;
  
#line 2770 
  if ((ndev->flags & 512U) != 0U) {
    
#line 2771 
    sh_eth_tsu_purge_mcast(ndev);
    
#line 2772 
    ecmr_bits &= 4294959103U;
    
#line 2773 
    mcast_all = 1;
  }
  else ;
  
#line 2776 
  if ((ndev->flags & 256U) != 0U) {
    
#line 2777 
    sh_eth_tsu_purge_all(ndev);
    
#line 2778 
    ecmr_bits = (ecmr_bits & 4294959102U) | 1U;
  }
  else 
    
#line 2779 
    if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) {
      struct netdev_hw_addr *ha;
      struct netdev_hw_addr *tmp_1;
      int tmp_3;
      struct netdev_hw_addr *tmp_4;
      {
        
#line 2781 
        struct list_head const *__mptr = (struct list_head const *)ndev->mc.list.next;
        
#line 2781 
        tmp_1 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 2781 
      ha = tmp_1;
      
#line 2781 
      goto ldv_47105;
      ldv_47104: 
#line 2782 
      ;
      
#line 2782 
      if (mcast_all != 0) {
        bool tmp_2;
        
#line 2782 
        tmp_2 = is_multicast_ether_addr((u8 const *)(& ha->addr));
        
#line 2782 
        if ((int)tmp_2 != 0) 
#line 2783 
                             goto ldv_47103; else ;
      }
      else ;
      
#line 2785 
      tmp_3 = sh_eth_tsu_add_entry(ndev,(u8 const *)(& ha->addr));
      
#line 2785 
      if (tmp_3 < 0) {
        
#line 2786 
        if (mcast_all == 0) {
          
#line 2787 
          sh_eth_tsu_purge_mcast(ndev);
          
#line 2788 
          ecmr_bits &= 4294959103U;
          
#line 2789 
          mcast_all = 1;
        }
        else ;
      }
      else ;
      ldv_47103: 
#line 2791 
      ;
      {
        
#line 2781 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 2781 
        tmp_4 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 2781 
      ha = tmp_4;
      ldv_47105: 
#line 2783 
      ;
      
#line 2781 
      if (& ha->list != & ndev->mc.list) 
#line 2783 
                                         goto ldv_47104; else 
#line 2786 
                                                              goto ldv_47106;
      ldv_47106: 
#line 2787 
      ;
    }
    else ;
  
#line 2796 
  sh_eth_write(ndev,ecmr_bits,28);
  
#line 2798 
  ldv_spin_unlock_irqrestore_87(& mdp->lock,flags);
  
#line 2799 
  return;
}


#line 2801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_get_vtag_index(struct sh_eth_private *mdp)
{
  int __retres;
  
#line 2803 
  if (mdp->port == 0) {
    
#line 2804 
    __retres = 85;
    
#line 2804 
    goto return_label;
  }
  else {
    
#line 2806 
    __retres = 86;
    
#line 2806 
    goto return_label;
  }
  return_label: 
#line 2803 
                return __retres;
}


#line 2809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_vlan_rx_add_vid(struct net_device *ndev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 2812 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2813 
  int vtag_reg_index = sh_eth_get_vtag_index(mdp);
  
#line 2815 
  if ((long)((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) != 0L) {
    
#line 2816 
    __retres = -1;
    
#line 2816 
    goto return_label;
  }
  else ;
  
#line 2819 
  if ((unsigned int)vid == 0U) {
    
#line 2820 
    __retres = 0;
    
#line 2820 
    goto return_label;
  }
  else ;
  
#line 2822 
  mdp->vlan_num_ids += 1;
  
#line 2827 
  if (mdp->vlan_num_ids > 1) {
    
#line 2829 
    sh_eth_tsu_write(mdp,0U,vtag_reg_index);
    
#line 2830 
    __retres = 0;
    
#line 2830 
    goto return_label;
  }
  else ;
  
#line 2833 
  sh_eth_tsu_write(mdp,((unsigned int)vid & 4095U) | 2147483648U,vtag_reg_index);
  
#line 2836 
  __retres = 0;
  return_label: 
#line 2836 
                return __retres;
}


#line 2839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_vlan_rx_kill_vid(struct net_device *ndev, __be16 proto, u16 vid)
{
  int __retres;
  
#line 2842 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 2843 
  int vtag_reg_index = sh_eth_get_vtag_index(mdp);
  
#line 2845 
  if ((long)((unsigned int)*((unsigned char *)mdp->cd + 72UL) == 0U) != 0L) {
    
#line 2846 
    __retres = -1;
    
#line 2846 
    goto return_label;
  }
  else ;
  
#line 2849 
  if ((unsigned int)vid == 0U) {
    
#line 2850 
    __retres = 0;
    
#line 2850 
    goto return_label;
  }
  else ;
  
#line 2852 
  mdp->vlan_num_ids -= 1;
  
#line 2853 
  sh_eth_tsu_write(mdp,0U,vtag_reg_index);
  
#line 2855 
  __retres = 0;
  return_label: 
#line 2855 
                return __retres;
}


#line 2859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_tsu_init(struct sh_eth_private *mdp)
{
  bool tmp;
  bool tmp_0;
  
#line 2861 
  tmp = sh_eth_is_rz_fast_ether(mdp);
  
#line 2861 
  if ((int)tmp != 0) {
    
#line 2862 
    sh_eth_tsu_write(mdp,0U,88);
    
#line 2863 
    goto return_label;
  }
  else ;
  
#line 2866 
  sh_eth_tsu_write(mdp,0U,67);
  
#line 2867 
  sh_eth_tsu_write(mdp,0U,68);
  
#line 2868 
  sh_eth_tsu_write(mdp,0U,69);
  
#line 2869 
  sh_eth_tsu_write(mdp,12U,70);
  
#line 2870 
  sh_eth_tsu_write(mdp,12U,71);
  
#line 2871 
  sh_eth_tsu_write(mdp,0U,72);
  
#line 2872 
  sh_eth_tsu_write(mdp,0U,73);
  
#line 2873 
  sh_eth_tsu_write(mdp,0U,74);
  
#line 2874 
  sh_eth_tsu_write(mdp,0U,75);
  
#line 2875 
  sh_eth_tsu_write(mdp,12288U,76);
  
#line 2876 
  tmp_0 = sh_eth_is_gether(mdp);
  
#line 2876 
  if ((int)tmp_0 != 0) {
    
#line 2877 
    sh_eth_tsu_write(mdp,0U,77);
    
#line 2878 
    sh_eth_tsu_write(mdp,0U,78);
  }
  else {
    
#line 2880 
    sh_eth_tsu_write(mdp,0U,79);
    
#line 2881 
    sh_eth_tsu_write(mdp,0U,80);
  }
  
#line 2883 
  sh_eth_tsu_write(mdp,0U,81);
  
#line 2884 
  sh_eth_tsu_write(mdp,0U,82);
  
#line 2885 
  sh_eth_tsu_write(mdp,0U,88);
  
#line 2886 
  sh_eth_tsu_write(mdp,0U,89);
  
#line 2887 
  sh_eth_tsu_write(mdp,0U,90);
  
#line 2888 
  sh_eth_tsu_write(mdp,0U,91);
  
#line 2889 
  sh_eth_tsu_write(mdp,0U,92);
  return_label: 
#line 2890 
                return;
}


#line 2893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_mdio_release(struct sh_eth_private *mdp)
{
  int __retres;
  
#line 2896 
  mdiobus_unregister(mdp->mii_bus);
  
#line 2899 
  free_mdio_bitbang(mdp->mii_bus);
  
#line 2901 
  __retres = 0;
  
#line 2901 
  return __retres;
}


#line 2905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_mdio_init(struct sh_eth_private *mdp, struct sh_eth_plat_data *pd)
{
  int __retres;
  int ret;
  int i;
  struct bb_info *bitbang;
  
#line 2910 
  struct platform_device *pdev = mdp->pdev;
  
#line 2911 
  struct device *dev = & (mdp->pdev)->dev;
  
#line 2914 
  bitbang = (struct bb_info *)devm_kzalloc(dev,48UL,208U);
  
#line 2915 
  if (bitbang == (struct bb_info *)0) {
    
#line 2916 
    __retres = -12;
    
#line 2916 
    goto return_label;
  }
  else ;
  
#line 2919 
  bitbang->addr = mdp->addr + (int)*(mdp->reg_offset + 31U);
  
#line 2920 
  bitbang->set_gate = pd->set_mdio_gate;
  
#line 2921 
  bitbang->mdi_msk = 8U;
  
#line 2922 
  bitbang->mdo_msk = 4U;
  
#line 2923 
  bitbang->mmd_msk = 2U;
  
#line 2924 
  bitbang->mdc_msk = 1U;
  
#line 2925 
  bitbang->ctrl.ops = (struct mdiobb_ops const *)(& bb_ops);
  
#line 2928 
  mdp->mii_bus = alloc_mdio_bitbang(& bitbang->ctrl);
  
#line 2929 
  if (mdp->mii_bus == (struct mii_bus *)0) {
    
#line 2930 
    __retres = -12;
    
#line 2930 
    goto return_label;
  }
  else ;
  
#line 2933 
  (mdp->mii_bus)->name = "sh_mii";
  
#line 2934 
  (mdp->mii_bus)->parent = dev;
  
#line 2935 
  snprintf((char *)(& (mdp->mii_bus)->id),17UL,"%s-%x",pdev->name,pdev->id);
  
#line 2939 
  (mdp->mii_bus)->irq = (int *)devm_kmalloc_array(dev,32UL,4UL,208U);
  
#line 2941 
  if ((mdp->mii_bus)->irq == (int *)0) {
    
#line 2942 
    ret = -12;
    
#line 2943 
    goto out_free_bus;
  }
  else ;
  
#line 2947 
  if (dev->of_node != (struct device_node *)0) 
#line 2948 
                                               ret = of_mdiobus_register(mdp->mii_bus,dev->of_node);
  else {
    
#line 2950 
    i = 0;
    
#line 2950 
    goto ldv_47141;
    ldv_47140: 
#line 2951 
    ;
    
#line 2951 
    *((mdp->mii_bus)->irq + i) = -1;
    
#line 2950 
    i += 1;
    ldv_47141: 
#line 2951 
    ;
    
#line 2950 
    if (i <= 31) 
#line 2952 
                 goto ldv_47140; else 
#line 2955 
                                      goto ldv_47142;
    ldv_47142: 
#line 2956 
    ;
    
#line 2952 
    if (pd->phy_irq > 0) 
#line 2953 
                         *((mdp->mii_bus)->irq + pd->phy) = pd->phy_irq; else ;
    
#line 2955 
    ret = mdiobus_register(mdp->mii_bus);
  }
  
#line 2958 
  if (ret != 0) 
#line 2959 
                goto out_free_bus; else ;
  
#line 2961 
  __retres = 0;
  
#line 2961 
  goto return_label;
  out_free_bus: 
#line 2963 
  ;
  
#line 2964 
  free_mdio_bitbang(mdp->mii_bus);
  
#line 2965 
  __retres = ret;
  return_label: 
#line 2965 
                return __retres;
}


#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static u16 const *sh_eth_get_register_offset(int register_type)
{
  
#line 2970 
  u16 const *reg_offset = (u16 const *)0U;
  
#line 2972 
  switch (register_type) {
    case 0: 
#line 2973 
    ;
    
#line 2974 
    reg_offset = (u16 const *)(& sh_eth_offset_gigabit);
    
#line 2975 
    goto ldv_47148;
    case 1: 
#line 2976 
    ;
    
#line 2977 
    reg_offset = (u16 const *)(& sh_eth_offset_fast_rz);
    
#line 2978 
    goto ldv_47148;
    case 2: 
#line 2979 
    ;
    
#line 2980 
    reg_offset = (u16 const *)(& sh_eth_offset_fast_rcar);
    
#line 2981 
    goto ldv_47148;
    case 3: 
#line 2982 
    ;
    
#line 2983 
    reg_offset = (u16 const *)(& sh_eth_offset_fast_sh4);
    
#line 2984 
    goto ldv_47148;
    case 4: 
#line 2985 
    ;
    
#line 2986 
    reg_offset = (u16 const *)(& sh_eth_offset_fast_sh3_sh2);
    
#line 2987 
    goto ldv_47148;
    default: 
#line 2988 
    ;
    
#line 2989 
    goto ldv_47148;
  }
  ldv_47148: 
#line 2992 
  ;
  
#line 2992 
  return reg_offset;
}


#line 2995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct net_device_ops const sh_eth_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & sh_eth_open, .ndo_stop = & sh_eth_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& sh_eth_start_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & sh_eth_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & sh_eth_do_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & eth_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & sh_eth_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & sh_eth_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3008  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct net_device_ops const sh_eth_netdev_ops_tsu = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & sh_eth_open, .ndo_stop = & sh_eth_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& sh_eth_start_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & sh_eth_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & sh_eth_do_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & eth_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & sh_eth_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & sh_eth_get_stats, .ndo_vlan_rx_add_vid = & sh_eth_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & sh_eth_vlan_rx_kill_vid, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct sh_eth_plat_data *sh_eth_parse_dt(struct device *dev)
{
  struct sh_eth_plat_data *__retres;
  struct sh_eth_plat_data *pdata;
  char const *mac_addr;
  int tmp_0;
  bool tmp_2;
  bool tmp_3;
  
#line 3026 
  struct device_node *np = dev->of_node;
  
#line 3030 
  pdata = (struct sh_eth_plat_data *)devm_kzalloc(dev,32UL,208U);
  
#line 3031 
  if (pdata == (struct sh_eth_plat_data *)0) {
    
#line 3032 
    __retres = (struct sh_eth_plat_data *)0;
    
#line 3032 
    goto return_label;
  }
  else ;
  
#line 3034 
  tmp_0 = of_get_phy_mode(np);
  
#line 3034 
  pdata->phy_interface = (enum ldv_28407)tmp_0;
  
#line 3036 
  mac_addr = (char const *)of_get_mac_address(np);
  
#line 3037 
  if (mac_addr != (char const *)0) 
#line 3038 
                                   memcpy((void *)(& pdata->mac_addr),(void const *)mac_addr,6UL); else ;
  
#line 3040 
  tmp_2 = of_property_read_bool((struct device_node const *)np,"renesas,no-ether-link");
  
#line 3040 
  pdata->no_ether_link = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))tmp_2;
  
#line 3042 
  tmp_3 = of_property_read_bool((struct device_node const *)np,"renesas,ether-link-active-low");
  
#line 3042 
  pdata->ether_link_active_low = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))tmp_3;
  
#line 3045 
  __retres = pdata;
  return_label: 
#line 3045 
                return __retres;
}


#line 3048  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct of_device_id const sh_eth_match_table[9U] = {{.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'g', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'4', (char)'0', (char)'\000'}, .data = (void const *)(& r8a7740_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'7', (char)'8', (char)'\000'}, .data = (void const *)(& r8a777x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'7', (char)'9', (char)'\000'}, .data = (void const *)(& r8a777x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'0', (char)'\000'}, .data = (void const *)(& r8a779x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'1', (char)'\000'}, .data = (void const *)(& r8a779x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'3', (char)'\000'}, .data = (void const *)(& r8a779x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'4', (char)'\000'}, .data = (void const *)(& r8a779x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'r', (char)'e', (char)'n', (char)'e', (char)'s', (char)'a', (char)'s', (char)',', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'-', (char)'r', (char)'7', (char)'s', (char)'7', (char)'2', (char)'1', (char)'0', (char)'0', (char)'\000'}, .data = (void const *)(& r7s72100_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .data = (void const *)0}};

#line 3059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
struct of_device_id const __mod_of__sh_eth_match_table_device_table[9U];

#line 3067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_drv_probe(struct platform_device *pdev)
{
  int __retres;
  int ret;
  struct resource *res;
  bool tmp_2;
  int tmp_4;
  bool tmp_3;
  
#line 3069 
  int devno = 0;
  
#line 3071 
  struct net_device *ndev = (struct net_device *)0;
  
#line 3072 
  struct sh_eth_private *mdp = (struct sh_eth_private *)0;
  
#line 3073 
  struct sh_eth_plat_data *pd = dev_get_platdata((struct device const *)(& pdev->dev));
  
#line 3074 
  struct platform_device_id const *id = pdev->id_entry;
  
#line 3077 
  res = platform_get_resource(pdev,512U,0U);
  
#line 3079 
  ndev = ldv_alloc_etherdev_mqs_88(528,1U,1U);
  
#line 3080 
  if (ndev == (struct net_device *)0) {
    
#line 3081 
    __retres = -12;
    
#line 3081 
    goto return_label;
  }
  else ;
  
#line 3083 
  pm_runtime_enable(& pdev->dev);
  
#line 3084 
  pm_runtime_get_sync(& pdev->dev);
  
#line 3086 
  devno = pdev->id;
  
#line 3087 
  if (devno < 0) 
#line 3088 
                 devno = 0; else ;
  
#line 3090 
  ndev->dma = (unsigned char)255U;
  
#line 3091 
  ret = platform_get_irq(pdev,0U);
  
#line 3092 
  if (ret < 0) {
    
#line 3093 
    ret = -19;
    
#line 3094 
    goto out_release;
  }
  else ;
  
#line 3096 
  ndev->irq = ret;
  
#line 3098 
  ndev->dev.parent = & pdev->dev;
  
#line 3100 
  mdp = (struct sh_eth_private *)netdev_priv((struct net_device const *)ndev);
  
#line 3101 
  mdp->num_tx_ring = 64U;
  
#line 3102 
  mdp->num_rx_ring = 64U;
  
#line 3103 
  mdp->addr = devm_ioremap_resource(& pdev->dev,res);
  
#line 3104 
  tmp_2 = IS_ERR((void const *)mdp->addr);
  
#line 3104 
  if ((int)tmp_2 != 0) {
    long tmp_1;
    
#line 3105 
    tmp_1 = PTR_ERR((void const *)mdp->addr);
    
#line 3105 
    ret = (int)tmp_1;
    
#line 3106 
    goto out_release;
  }
  else ;
  
#line 3109 
  ndev->base_addr = (unsigned long)res->start;
  
#line 3111 
  spinlock_check(& mdp->lock);
  {
    struct lock_class_key __key;
    
#line 3111 
    __raw_spin_lock_init(& mdp->lock.__anonCompField_spinlock_18.rlock,"&(&mdp->lock)->rlock",& __key);
  }
  
#line 3112 
  mdp->pdev = pdev;
  
#line 3114 
  if (pdev->dev.of_node != (struct device_node *)0) 
#line 3115 
                                                    pd = sh_eth_parse_dt(& pdev->dev); else ;
  
#line 3116 
  if (pd == (struct sh_eth_plat_data *)0) {
    
#line 3117 
    dev_err((struct device const *)(& pdev->dev),"no platform data\n");
    
#line 3118 
    ret = -22;
    
#line 3119 
    goto out_release;
  }
  else ;
  
#line 3123 
  mdp->phy_id = (unsigned int)pd->phy;
  
#line 3124 
  mdp->phy_interface = pd->phy_interface;
  
#line 3126 
  mdp->edmac_endian = pd->edmac_endian;
  
#line 3127 
  mdp->no_ether_link = pd->no_ether_link;
  
#line 3128 
  mdp->ether_link_active_low = pd->ether_link_active_low;
  
#line 3131 
  if (id != (struct platform_device_id const *)0) 
#line 3132 
                                                  mdp->cd = (struct sh_eth_cpu_data *)id->driver_data;
  else {
    struct of_device_id const *match;
    
#line 3136 
    match = of_match_device((struct of_device_id const *)(& sh_eth_match_table),(struct device const *)(& pdev->dev));
    
#line 3138 
    mdp->cd = (struct sh_eth_cpu_data *)match->data;
  }
  
#line 3140 
  mdp->reg_offset = sh_eth_get_register_offset((mdp->cd)->register_type);
  
#line 3141 
  if (mdp->reg_offset == (u16 const *)0U) {
    
#line 3142 
    dev_err((struct device const *)(& pdev->dev),"Unknown register type (%d)\n",(mdp->cd)->register_type);
    
#line 3144 
    ret = -22;
    
#line 3145 
    goto out_release;
  }
  else ;
  
#line 3147 
  sh_eth_set_default_cpu_data(mdp->cd);
  
#line 3150 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 3151 
                                                              ndev->netdev_ops = & sh_eth_netdev_ops_tsu; else 
                                                                    
#line 3153 
                                                                    ndev->netdev_ops = & sh_eth_netdev_ops;
  
#line 3154 
  ndev->ethtool_ops = & sh_eth_ethtool_ops;
  
#line 3155 
  ndev->watchdog_timeo = 1250;
  
#line 3158 
  mdp->msg_enable = 204;
  
#line 3161 
  read_mac_address(ndev,(unsigned char *)(& pd->mac_addr));
  
#line 3162 
  tmp_3 = is_valid_ether_addr((u8 const *)ndev->dev_addr);
  
#line 3162 
  if (tmp_3) 
#line 3162 
             tmp_4 = 0; else 
#line 3162 
                             tmp_4 = 1;
  
#line 3162 
  if (tmp_4) {
    
#line 3163 
    dev_warn((struct device const *)(& pdev->dev),"no valid MAC address supplied, using a random one.\n");
    
#line 3165 
    eth_hw_addr_random(ndev);
  }
  else ;
  
#line 3169 
  if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) {
    struct resource *rtsu;
    bool tmp_6;
    
#line 3171 
    rtsu = platform_get_resource(pdev,512U,1U);
    
#line 3172 
    mdp->tsu_addr = devm_ioremap_resource(& pdev->dev,rtsu);
    
#line 3173 
    tmp_6 = IS_ERR((void const *)mdp->tsu_addr);
    
#line 3173 
    if ((int)tmp_6 != 0) {
      long tmp_5;
      
#line 3174 
      tmp_5 = PTR_ERR((void const *)mdp->tsu_addr);
      
#line 3174 
      ret = (int)tmp_5;
      
#line 3175 
      goto out_release;
    }
    else ;
    
#line 3177 
    mdp->port = devno % 2;
    
#line 3178 
    ndev->features = 512ULL;
  }
  else ;
  
#line 3182 
  if (devno == 0 || (unsigned int)*((unsigned char *)pd + 30UL) != 0U) {
    
#line 3183 
    if ((mdp->cd)->chip_reset != (void (*)(struct net_device *))0) 
#line 3184 
                                                                   (*((mdp->cd)->chip_reset))(ndev); else ;
    
#line 3186 
    if ((unsigned int)*((unsigned char *)mdp->cd + 72UL) != 0U) 
#line 3188 
                                                                sh_eth_tsu_init(mdp); else ;
  }
  else ;
  
#line 3192 
  if ((unsigned int)*((unsigned char *)mdp->cd + 73UL) != 0U) 
#line 3193 
                                                              sh_eth_write(ndev,1U,22); else ;
  
#line 3196 
  ret = sh_mdio_init(mdp,pd);
  
#line 3197 
  if (ret != 0) {
    
#line 3198 
    dev_err((struct device const *)(& ndev->dev),"failed to initialise MDIO\n");
    
#line 3199 
    goto out_release;
  }
  else ;
  
#line 3202 
  netif_napi_add(ndev,& mdp->napi,& sh_eth_poll,64);
  
#line 3205 
  ret = ldv_register_netdev_89(ndev);
  
#line 3206 
  if (ret != 0) 
#line 3207 
                goto out_napi_del; else ;
  
#line 3210 
  netdev_info((struct net_device const *)ndev,"Base address at 0x%x, %pM, IRQ %d.\n",(unsigned int)ndev->base_addr,ndev->dev_addr,ndev->irq);
  
#line 3213 
  pm_runtime_put(& pdev->dev);
  
#line 3214 
  platform_set_drvdata(pdev,(void *)ndev);
  
#line 3216 
  __retres = ret;
  
#line 3216 
  goto return_label;
  out_napi_del: 
#line 3218 
  ;
  
#line 3219 
  netif_napi_del(& mdp->napi);
  
#line 3220 
  sh_mdio_release(mdp);
  out_release: 
#line 3222 
  ;
  
#line 3224 
  if (ndev != (struct net_device *)0) 
#line 3225 
                                      ldv_free_netdev_90(ndev); else ;
  
#line 3227 
  pm_runtime_put(& pdev->dev);
  
#line 3228 
  pm_runtime_disable(& pdev->dev);
  
#line 3229 
  __retres = ret;
  return_label: 
#line 3229 
                return __retres;
}


#line 3232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_drv_remove(struct platform_device *pdev)
{
  int __retres;
  
#line 3234 
  struct net_device *ndev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 3235 
  struct sh_eth_private *mdp = netdev_priv((struct net_device const *)ndev);
  
#line 3237 
  ldv_unregister_netdev_91(ndev);
  
#line 3238 
  netif_napi_del(& mdp->napi);
  
#line 3239 
  sh_mdio_release(mdp);
  
#line 3240 
  pm_runtime_disable(& pdev->dev);
  
#line 3241 
  ldv_free_netdev_92(ndev);
  
#line 3243 
  __retres = 0;
  
#line 3243 
  return __retres;
}


#line 3248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_suspend(struct device *dev)
{
  bool tmp_0;
  
#line 3250 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 3251 
  int ret = 0;
  
#line 3253 
  tmp_0 = netif_running((struct net_device const *)ndev);
  
#line 3253 
  if ((int)tmp_0 != 0) {
    
#line 3254 
    netif_device_detach(ndev);
    
#line 3255 
    ret = sh_eth_close(ndev);
  }
  else ;
  
#line 3258 
  return ret;
}


#line 3261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_resume(struct device *dev)
{
  int __retres;
  bool tmp_0;
  
#line 3263 
  struct net_device *ndev = dev_get_drvdata((struct device const *)dev);
  
#line 3264 
  int ret = 0;
  
#line 3266 
  tmp_0 = netif_running((struct net_device const *)ndev);
  
#line 3266 
  if ((int)tmp_0 != 0) {
    
#line 3267 
    ret = sh_eth_open(ndev);
    
#line 3268 
    if (ret < 0) {
      
#line 3269 
      __retres = ret;
      
#line 3269 
      goto return_label;
    }
    else ;
    
#line 3270 
    netif_device_attach(ndev);
  }
  else ;
  
#line 3273 
  __retres = ret;
  return_label: 
#line 3273 
                return __retres;
}


#line 3277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_runtime_nop(struct device *dev)
{
  int __retres;
  
#line 3286 
  __retres = 0;
  
#line 3286 
  return __retres;
}


#line 3289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct dev_pm_ops const sh_eth_dev_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & sh_eth_suspend, .resume = & sh_eth_resume, .freeze = & sh_eth_suspend, .thaw = & sh_eth_resume, .poweroff = & sh_eth_suspend, .restore = & sh_eth_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = & sh_eth_runtime_nop, .runtime_resume = & sh_eth_runtime_nop, .runtime_idle = (int (*)(struct device *))0};

#line 3298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct platform_device_id sh_eth_id_table[15U] = {{.name = {(char)'s', (char)'h', (char)'7', (char)'6', (char)'1', (char)'9', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7619_data)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'1', (char)'x', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh771x_data)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'2', (char)'4', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7724_data)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'3', (char)'4', (char)'-', (char)'g', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7734_data)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'5', (char)'7', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7757_data)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'5', (char)'7', (char)'-', (char)'g', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7757_data_giga)}, {.name = {(char)'s', (char)'h', (char)'7', (char)'7', (char)'6', (char)'3', (char)'-', (char)'g', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& sh7763_data)}, {.name = {(char)'r', (char)'7', (char)'s', (char)'7', (char)'2', (char)'1', (char)'0', (char)'0', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r7s72100_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'4', (char)'0', (char)'-', (char)'g', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a7740_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'7', (char)'x', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a777x_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'0', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a779x_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'1', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a779x_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'3', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a779x_data)}, {.name = {(char)'r', (char)'8', (char)'a', (char)'7', (char)'7', (char)'9', (char)'4', (char)'-', (char)'e', (char)'t', (char)'h', (char)'e', (char)'r', (char)'\000'}, .driver_data = (unsigned long)(& r8a779x_data)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .driver_data = 0UL}};

#line 3315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
struct platform_device_id const __mod_platform__sh_eth_id_table_device_table[15U];

#line 3317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static struct platform_driver sh_eth_driver = {.probe = & sh_eth_drv_probe, .remove = & sh_eth_drv_remove, .shutdown = (void (*)(struct platform_device *))0, .suspend = (int (*)(struct platform_device *, pm_message_t ))0, .resume = (int (*)(struct platform_device *))0, .driver = {.name = "sh-eth", .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)(& sh_eth_match_table), .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & sh_eth_dev_pm_ops, .p = (struct driver_private *)0}, .id_table = (struct platform_device_id const *)(& sh_eth_id_table), .prevent_deferred_probe = (_Bool)0};

#line 3328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static int sh_eth_driver_init(void)
{
  int tmp;
  
#line 3328 
  tmp = ldv___platform_driver_register_93(& sh_eth_driver,& __this_module);
  
#line 3328 
  return tmp;
}


#line 3328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/renesas/sh_eth.c"
static void sh_eth_driver_exit(void)
{
  
#line 3328 
  ldv_platform_driver_unregister_94(& sh_eth_driver);
  
#line 3329 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
struct platform_driver *ldv_emg_alias_sh_eth_driver_2 = & sh_eth_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
struct dev_pm_ops *ldv_emg_alias_sh_eth_dev_pm_ops_3 = (struct dev_pm_ops *)(& sh_eth_dev_pm_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_8)(struct net_device *) = & ethtool_op_get_link;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int (*ldv_emg_alias_eth_change_mtu_7)(struct net_device *, int ) = & eth_change_mtu;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int (*ldv_emg_alias_eth_validate_addr_5)(struct net_device *) = & eth_validate_addr;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int (*ldv_emg_alias_eth_mac_addr_12)(struct net_device *, void *) = & eth_mac_addr;

#line 64 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 65 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 66 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0);


#line 68 
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);


#line 69 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_get_strings_20(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 76 
  sh_eth_get_strings(arg0,arg1,arg2);
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_tx_timeout_4(struct net_device *arg0)
{
  
#line 81 
  sh_eth_tx_timeout(arg0);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_get_settings_13(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 86 
  tmp = sh_eth_get_settings(arg0,arg1);
  
#line 86 
  return tmp;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_sh_eth_driver_init(void)
{
  int tmp;
  
#line 91 
  tmp = sh_eth_driver_init();
  
#line 91 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_do_ioctl_17(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 95 
  tmp = sh_eth_do_ioctl(arg0,arg1,arg2);
  
#line 95 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_set_rx_mode_16(struct net_device *arg0)
{
  
#line 100 
  sh_eth_set_rx_mode(arg0);
  
#line 101 
  return;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_get_regs_len_22(struct net_device *arg0)
{
  int tmp;
  
#line 105 
  tmp = sh_eth_get_regs_len(arg0);
  
#line 105 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
unsigned int ldv_emg_wrapper_sh_eth_get_msglevel_10(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 110 
  tmp = sh_eth_get_msglevel(arg0);
  
#line 110 
  return tmp;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_vlan_rx_add_vid_15(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 115 
  tmp = sh_eth_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 115 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_get_ringparam_21(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 120 
  sh_eth_get_ringparam(arg0,arg1);
  
#line 121 
  return;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_set_msglevel_3(struct net_device *arg0, unsigned int arg1)
{
  
#line 125 
  sh_eth_set_msglevel(arg0,arg1);
  
#line 126 
  return;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_get_ethtool_stats_6(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 130 
  sh_eth_get_ethtool_stats(arg0,arg1,arg2);
  
#line 131 
  return;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_get_sset_count_14(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 135 
  tmp = sh_eth_get_sset_count(arg0,arg1);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
struct net_device_stats *ldv_emg_wrapper_sh_eth_get_stats_19(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 140 
  tmp = sh_eth_get_stats(arg0);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_wrapper_sh_eth_get_regs_18(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 145 
  sh_eth_get_regs(arg0,arg1,arg2);
  
#line 146 
  return;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_vlan_rx_kill_vid_23(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 150 
  tmp = sh_eth_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 150 
  return tmp;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
void ldv_emg_sh_eth_driver_exit(void)
{
  
#line 155 
  sh_eth_driver_exit();
  
#line 156 
  return;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_start_xmit_11(struct sk_buff *arg0, struct net_device *arg1)
{
  int tmp;
  
#line 159 
  tmp = sh_eth_start_xmit(arg0,arg1);
  
#line 159 
  return tmp;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_set_ringparam_9(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 164 
  tmp = sh_eth_set_ringparam(arg0,arg1);
  
#line 164 
  return tmp;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_drv_remove_3(struct platform_device *arg0)
{
  int tmp;
  
#line 169 
  tmp = sh_eth_drv_remove(arg0);
  
#line 169 
  return tmp;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_runtime_nop_5(struct device *arg0)
{
  int tmp;
  
#line 174 
  tmp = sh_eth_runtime_nop(arg0);
  
#line 174 
  return tmp;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_nway_reset_24(struct net_device *arg0)
{
  int tmp;
  
#line 179 
  tmp = sh_eth_nway_reset(arg0);
  
#line 179 
  return tmp;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
enum irqreturn ldv_emg_wrapper_sh_eth_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 184 
  tmp = sh_eth_interrupt(arg0,arg1);
  
#line 184 
  return tmp;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_set_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 189 
  tmp = sh_eth_set_settings(arg0,arg1);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_drv_probe_2(struct platform_device *arg0)
{
  int tmp;
  
#line 194 
  tmp = sh_eth_drv_probe(arg0);
  
#line 194 
  return tmp;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_resume_4(struct device *arg0)
{
  int tmp;
  
#line 199 
  tmp = sh_eth_resume(arg0);
  
#line 199 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 204 
  tmp = sh_eth_suspend(arg0);
  
#line 204 
  return tmp;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 209 
  tmp = sh_eth_open(arg0);
  
#line 209 
  return tmp;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
int ldv_emg_wrapper_sh_eth_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 214 
  tmp = sh_eth_close(arg0);
  
#line 214 
  return tmp;
}


#line 219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void *ERR_PTR(long error)
{
  void *tmp;
  
#line 222 
  tmp = ldv_err_ptr(error);
  
#line 222 
  return tmp;
}


#line 226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 229 
  tmp = ldv_ptr_err(ptr);
  
#line 229 
  return tmp;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 237 
  ret = ldv_is_err(ptr);
  
#line 238 
  __retres = (_Bool)(ret != 0L);
  
#line 238 
  return __retres;
}


#line 639  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 642 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 642 
  return tmp;
}


#line 756  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 760 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 762 
  spin_lock(lock);
  
#line 763 
  return;
}


#line 799  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 803 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 805 
  spin_unlock(lock);
  
#line 806 
  return;
}


#line 889  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_lock_72(spinlock_t *lock)
{
  
#line 893 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 895 
  spin_lock(lock);
  
#line 896 
  return;
}


#line 899  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_73(spinlock_t *lock)
{
  
#line 903 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 905 
  spin_unlock(lock);
  
#line 906 
  return;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 913 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 915 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 916 
  return;
}


#line 919  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 923 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 925 
  spin_unlock_irqrestore(lock,flags);
  
#line 926 
  return;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 933 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 935 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 936 
  return;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 943 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 945 
  spin_unlock_irqrestore(lock,flags);
  
#line 946 
  return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1)
{
  
#line 953 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 955 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags)
{
  
#line 963 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 965 
  spin_unlock_irqrestore(lock,flags);
  
#line 966 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static int ldv_request_irq_80(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 973 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 973 
  return tmp;
}


#line 977  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 981 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 982 
  return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1)
{
  
#line 989 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 991 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 999 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 1001 
  spin_unlock_irqrestore(lock,flags);
  
#line 1002 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 1009 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 1011 
  spin_unlock_irqrestore(lock,flags);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1019 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1)
{
  
#line 1027 
  ldv_spin_model_lock((char *)"lock_of_sh_eth_private");
  
#line 1029 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 1037 
  ldv_spin_model_unlock((char *)"lock_of_sh_eth_private");
  
#line 1039 
  spin_unlock_irqrestore(lock,flags);
  
#line 1040 
  return;
}


#line 1043  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_88(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1047 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1047 
  return tmp;
}


#line 1051  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static int ldv_register_netdev_89(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1055 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1055 
  return tmp;
}


#line 1059  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_free_netdev_90(struct net_device *ldv_func_arg1)
{
  
#line 1063 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1064 
  return;
}


#line 1067  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_unregister_netdev_91(struct net_device *ldv_func_arg1)
{
  
#line 1071 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_free_netdev_92(struct net_device *ldv_func_arg1)
{
  
#line 1079 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1080 
  return;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static int ldv___platform_driver_register_93(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  int tmp;
  
#line 1087 
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
  
#line 1087 
  return tmp;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/weaver/.tmp_sh_eth.c.aux"
static void ldv_platform_driver_unregister_94(struct platform_driver *ldv_func_arg1)
{
  
#line 1095 
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  
#line 1096 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
int main(void);


#line 77 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 79 
void *ldv_pm_ops_scenario_11(void *arg0);


#line 80 
void *ldv_interrupt_scenario_10(void *arg0);


#line 81 
void ldv_dispatch_register_8_4(struct net_device *arg0);


#line 82 
void ldv_dispatch_register_7_3(struct platform_driver *arg0);


#line 84 
void *ldv_platform_instance_12(void *arg0);


#line 85 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 86 
void *ldv_initialization_1(void *arg0);


#line 87 
void ldv_dispatch_irq_register_9_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 88 
void ldv_dispatch_pm_register_12_17(void);


#line 89 
void ldv_dispatch_pm_deregister_12_16(void);


#line 90 
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0);


#line 93 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 109 
  ldv_initialize();
  
#line 112 
  ldv_initialization_1((void *)0);
  
#line 114 
  __retres = 0;
  
#line 114 
  return __retres;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0)
{
  
#line 122 
  struct platform_driver *ldv_4_platform_driver = ldv_emg_alias_sh_eth_driver_2;
  
#line 125 
  ldv_4_platform_driver = arg0;
  
#line 129 
  ldv_dispatch_deregister_4_1(ldv_4_platform_driver);
  
#line 133 
  goto return_label;
  return_label: 
#line 135 
                return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_10;
  int tmp;
  
#line 143 
  tmp = ldv_undef_int();
  
#line 143 
  switch (tmp) {
    case 0: 
#line 144 
    ;
    
#line 145 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 146 
    __VERIFIER_assume(ret == 0);
    
#line 147 
    goto ldv_43259;
    default: 
#line 149 
    ;
    
#line 149 
    __VERIFIER_assume(0);
  }
  ldv_43259: 
#line 150 
  ;
  
#line 151 
  return;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 162 
  tmp_0 = ldv_undef_int();
  
#line 162 
  if (tmp_0 != 0) {
    
#line 164 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 168 
    __retres = ldv_5_netdev;
    
#line 168 
    goto return_label;
  }
  else {
    
#line 175 
    __retres = (struct net_device *)0;
    
#line 175 
    goto return_label;
  }
  return_label: 
#line 162 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_11(void *arg0)
{
  void *__retres;
  struct device *ldv_11_device;
  int tmp;
  
#line 188 
  struct dev_pm_ops *ldv_11_pm_ops = ldv_emg_alias_sh_eth_dev_pm_ops_3;
  
#line 192 
  ldv_free(arg0);
  
#line 199 
  goto ldv_do_11;
  
#line 201 
  __retres = (void *)0;
  
#line 201 
  goto return_label;
  ldv_do_11: 
#line 204 
  ;
  
#line 207 
  tmp = ldv_undef_int();
  
#line 207 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 208 
    ;
    
#line 210 
    if (ldv_11_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 212 
                                                                    (*(ldv_11_pm_ops->runtime_idle))(ldv_11_device); else ;
    
#line 220 
    goto ldv_do_11;
    case 2: 
#line 223 
    ;
    
#line 226 
    ldv_emg_wrapper_sh_eth_runtime_nop_5(ldv_11_device);
    
#line 231 
    ldv_emg_wrapper_sh_eth_runtime_nop_5(ldv_11_device);
    
#line 238 
    goto ldv_do_11;
    case 3: 
#line 241 
    ;
    
#line 243 
    if (ldv_11_pm_ops->prepare != (int (*)(struct device *))0) 
#line 245 
                                                               (*(ldv_11_pm_ops->prepare))(ldv_11_device); else ;
    
#line 249 
    tmp_0 = ldv_undef_int();
    
#line 249 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 250 
      ;
      
#line 253 
      ldv_emg_wrapper_sh_eth_suspend_2(ldv_11_device);
      
#line 256 
      tmp_1 = ldv_undef_int();
      
#line 256 
      if (tmp_1 != 0) {
        
#line 258 
        if (ldv_11_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 260 
          (*(ldv_11_pm_ops->suspend_noirq))(ldv_11_device); else ;
        
#line 265 
        if (ldv_11_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 267 
          (*(ldv_11_pm_ops->resume_noirq))(ldv_11_device); else ;
      }
      else {
        
#line 274 
        if (ldv_11_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 276 
          (*(ldv_11_pm_ops->suspend_late))(ldv_11_device); else ;
        
#line 281 
        if (ldv_11_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 283 
          (*(ldv_11_pm_ops->resume_early))(ldv_11_device); else ;
      }
      
#line 290 
      ldv_emg_wrapper_sh_eth_resume_4(ldv_11_device);
      
#line 293 
      goto ldv_43277;
      case 2: 
#line 295 
      ;
      
#line 298 
      ldv_emg_wrapper_sh_eth_suspend_2(ldv_11_device);
      
#line 301 
      tmp_2 = ldv_undef_int();
      
#line 301 
      if (tmp_2 != 0) {
        
#line 303 
        if (ldv_11_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 305 
          (*(ldv_11_pm_ops->freeze_late))(ldv_11_device); else ;
        
#line 310 
        if (ldv_11_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 312 
          (*(ldv_11_pm_ops->thaw_early))(ldv_11_device); else ;
      }
      else {
        
#line 319 
        if (ldv_11_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 321 
          (*(ldv_11_pm_ops->freeze_noirq))(ldv_11_device); else ;
        
#line 326 
        if (ldv_11_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 328 
          (*(ldv_11_pm_ops->thaw_noirq))(ldv_11_device); else ;
      }
      
#line 335 
      ldv_emg_wrapper_sh_eth_resume_4(ldv_11_device);
      
#line 338 
      goto ldv_43277;
      case 3: 
#line 340 
      ;
      
#line 343 
      ldv_emg_wrapper_sh_eth_suspend_2(ldv_11_device);
      
#line 346 
      tmp_3 = ldv_undef_int();
      
#line 346 
      if (tmp_3 != 0) {
        
#line 348 
        if (ldv_11_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 350 
          (*(ldv_11_pm_ops->poweroff_late))(ldv_11_device); else ;
        
#line 355 
        if (ldv_11_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 357 
          (*(ldv_11_pm_ops->restore_early))(ldv_11_device); else ;
      }
      else {
        
#line 364 
        if (ldv_11_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 366 
          (*(ldv_11_pm_ops->poweroff_noirq))(ldv_11_device); else ;
        
#line 371 
        if (ldv_11_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 373 
          (*(ldv_11_pm_ops->restore_noirq))(ldv_11_device); else ;
      }
      
#line 380 
      ldv_emg_wrapper_sh_eth_resume_4(ldv_11_device);
      
#line 383 
      goto ldv_43277;
      default: 
#line 385 
      ;
      
#line 385 
      __VERIFIER_assume(0);
    }
    ldv_43277: 
#line 388 
    ;
    
#line 388 
    if (ldv_11_pm_ops->complete != (void (*)(struct device *))0) 
#line 390 
                                                                 (*(ldv_11_pm_ops->complete))(ldv_11_device); else ;
    
#line 398 
    goto ldv_do_11;
    case 4: 
#line 401 
    ;
    
#line 407 
    __retres = (void *)0;
    
#line 407 
    goto return_label;
    default: 
#line 410 
    ;
    
#line 410 
    __VERIFIER_assume(0);
  }
  
#line 413 
  __retres = (void *)0;
  return_label: 
#line 413 
                return __retres;
}


#line 418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_10(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_10_ret_val;
  int ldv_10_line;
  void *ldv_10_data;
  enum irqreturn (*ldv_10_thread)(int , void *);
  int tmp;
  
#line 424 
  enum irqreturn (*ldv_10_callback)(int , void *) = & ldv_emg_wrapper_sh_eth_interrupt_2;
  
#line 427 
  struct ldv_struct_interrupt_scenario_10 *data = (struct ldv_struct_interrupt_scenario_10 *)arg0;
  
#line 432 
  if (data != (struct ldv_struct_interrupt_scenario_10 *)0) {
    
#line 433 
    ldv_10_line = data->arg0;
    
#line 434 
    ldv_10_callback = data->arg1;
    
#line 435 
    ldv_10_thread = data->arg2;
    
#line 436 
    ldv_10_data = data->arg3;
    
#line 437 
    ldv_free((void *)data);
  }
  else ;
  
#line 443 
  ldv_switch_to_interrupt_context();
  
#line 445 
  ldv_10_ret_val = ldv_emg_wrapper_sh_eth_interrupt_2(ldv_10_line,ldv_10_data);
  
#line 447 
  ldv_switch_to_process_context();
  
#line 450 
  tmp = ldv_undef_int();
  
#line 450 
  if (tmp != 0) {
    
#line 452 
    __VERIFIER_assume(ldv_10_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 456 
    if (ldv_10_thread != (enum irqreturn (*)(int , void *))0) 
#line 458 
                                                              (*ldv_10_thread)(ldv_10_line,ldv_10_data); else ;
  }
  else 
#line 465 
       __VERIFIER_assume(ldv_10_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 474 
  __retres = (void *)0;
  
#line 474 
  goto return_label;
  
#line 476 
  __retres = (void *)0;
  return_label: 
#line 476 
                return __retres;
}


#line 481  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 484 
  tmp = ldv_undef_int();
  
#line 484 
  switch (tmp) {
    case 0: 
#line 485 
    ;
    
#line 486 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 487 
    cf_arg_13->arg0 = arg0;
    
#line 488 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 489 
    __VERIFIER_assume(ret == 0);
    
#line 490 
    goto ldv_43302;
    default: 
#line 492 
    ;
    
#line 492 
    __VERIFIER_assume(0);
  }
  ldv_43302: 
#line 493 
  ;
  
#line 494 
  return;
}


#line 498  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_12;
  int tmp;
  
#line 501 
  tmp = ldv_undef_int();
  
#line 501 
  switch (tmp) {
    case 0: 
#line 502 
    ;
    
#line 503 
    cf_arg_12 = (struct ldv_struct_platform_instance_12 *)ldv_xmalloc(16UL);
    
#line 504 
    cf_arg_12->arg0 = arg0;
    
#line 505 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_platform_instance_12,(void *)cf_arg_12);
    
#line 506 
    __VERIFIER_assume(ret == 0);
    
#line 507 
    goto ldv_43310;
    default: 
#line 509 
    ;
    
#line 509 
    __VERIFIER_assume(0);
  }
  ldv_43310: 
#line 510 
  ;
  
#line 511 
  return;
}


#line 515  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_9_line;
  void *ldv_9_data;
  enum irqreturn (*ldv_9_thread)(int , void *);
  int tmp_0;
  
#line 520 
  enum irqreturn (*ldv_9_callback)(int , void *) = & ldv_emg_wrapper_sh_eth_interrupt_2;
  
#line 525 
  tmp_0 = ldv_undef_int();
  
#line 525 
  if (tmp_0 != 0) {
    
#line 527 
    ldv_9_line = (int)arg0;
    
#line 528 
    ldv_9_callback = arg1;
    
#line 529 
    ldv_9_thread = (enum irqreturn (*)(int , void *))0;
    
#line 530 
    ldv_9_data = arg4;
    
#line 534 
    ldv_dispatch_irq_register_9_3(ldv_9_line,ldv_9_callback,ldv_9_thread,ldv_9_data);
    
#line 538 
    __retres = 0;
    
#line 538 
    goto return_label;
  }
  else {
    int tmp;
    
#line 545 
    tmp = ldv_undef_int_negative();
    
#line 545 
    __retres = tmp;
    
#line 545 
    goto return_label;
  }
  return_label: 
#line 525 
                return __retres;
}


#line 555  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_platform_instance_12(void *arg0)
{
  void *__retres;
  struct platform_device *ldv_12_ldv_param_0_2;
  struct platform_device *ldv_12_ldv_param_0_3;
  int tmp_1;
  int tmp_2;
  
#line 559 
  struct platform_driver *ldv_12_container = ldv_emg_alias_sh_eth_driver_2;
  
#line 561 
  int ldv_12_probed = 1;
  
#line 563 
  struct ldv_struct_platform_instance_12 *data = (struct ldv_struct_platform_instance_12 *)arg0;
  
#line 567 
  ldv_12_probed = 1;
  
#line 570 
  if (data != (struct ldv_struct_platform_instance_12 *)0) {
    
#line 571 
    ldv_12_container = data->arg0;
    
#line 572 
    ldv_free((void *)data);
  }
  else ;
  
#line 583 
  goto ldv_main_12;
  
#line 585 
  __retres = (void *)0;
  
#line 585 
  goto return_label;
  ldv_main_12: 
#line 588 
  ;
  
#line 591 
  tmp_1 = ldv_undef_int();
  
#line 591 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 593 
    ldv_12_ldv_param_0_2 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 598 
    ldv_pre_probe();
    
#line 600 
    ldv_12_probed = ldv_emg_wrapper_sh_eth_drv_probe_2(ldv_12_ldv_param_0_2);
    
#line 602 
    ldv_12_probed = ldv_post_probe(ldv_12_probed);
    
#line 606 
    ldv_free((void *)ldv_12_ldv_param_0_2);
    
#line 609 
    tmp_0 = ldv_undef_int();
    
#line 609 
    if (tmp_0 != 0) {
      
#line 611 
      __VERIFIER_assume(ldv_12_probed == 0);
      
#line 618 
      goto ldv_call_12;
    }
    else {
      
#line 622 
      __VERIFIER_assume(ldv_12_probed != 0);
      
#line 629 
      goto ldv_main_12;
    }
  }
  else {
    
#line 641 
    __retres = (void *)0;
    
#line 641 
    goto return_label;
  }
  
#line 644 
  __retres = (void *)0;
  
#line 644 
  goto return_label;
  ldv_call_12: 
#line 647 
  ;
  
#line 650 
  tmp_2 = ldv_undef_int();
  
#line 650 
  switch (tmp_2) {
    case 1: 
#line 651 
    ;
    
#line 660 
    goto ldv_call_12;
    case 2: 
#line 663 
    ;
    
#line 665 
    ldv_dispatch_pm_register_12_17();
    
#line 669 
    ldv_dispatch_pm_deregister_12_16();
    
#line 676 
    goto ldv_call_12;
    case 3: 
#line 679 
    ;
    
#line 681 
    ldv_12_ldv_param_0_3 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 686 
    ldv_emg_wrapper_sh_eth_drv_remove_3(ldv_12_ldv_param_0_3);
    
#line 690 
    ldv_free((void *)ldv_12_ldv_param_0_3);
    
#line 694 
    ldv_12_probed = 1;
    
#line 701 
    goto ldv_main_12;
    default: 
#line 704 
    ;
    
#line 704 
    __VERIFIER_assume(0);
  }
  
#line 707 
  __retres = (void *)0;
  return_label: 
#line 707 
                return __retres;
}


#line 712  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  unsigned int ldv_13_ldv_param_1_3;
  struct ethtool_cmd *ldv_13_ldv_param_1_10;
  void *ldv_13_ldv_param_2_17;
  int ldv_13_ldv_param_2_15;
  struct sk_buff *ldv_13_ldv_param_0_8;
  struct ifreq *ldv_13_ldv_param_1_14;
  struct ethtool_cmd *ldv_13_ldv_param_1_2;
  int ldv_13_ldv_param_1_4;
  struct ethtool_stats *ldv_13_ldv_param_1_5;
  int ldv_13_ldv_param_1_11;
  unsigned short ldv_13_ldv_param_1_12;
  struct ethtool_regs *ldv_13_ldv_param_1_16;
  unsigned int ldv_13_ldv_param_1_18;
  struct ethtool_ringparam *ldv_13_ldv_param_1_20;
  unsigned char *ldv_13_ldv_param_2_19;
  unsigned short ldv_13_ldv_param_1_21;
  void *ldv_13_ldv_param_1_9;
  unsigned short ldv_13_ldv_param_2_13;
  unsigned long long *ldv_13_ldv_param_2_6;
  struct net_device *ldv_13_container;
  unsigned short ldv_13_ldv_param_2_22;
  struct ethtool_ringparam *ldv_13_ldv_param_1_7;
  int tmp_10;
  
#line 738 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 743 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 744 
    ldv_13_container = data->arg0;
    
#line 745 
    ldv_free((void *)data);
  }
  else ;
  
#line 753 
  goto ldv_call_13;
  
#line 755 
  __retres = (void *)0;
  
#line 755 
  goto return_label;
  ldv_call_13: 
#line 758 
  ;
  
#line 761 
  tmp_10 = ldv_undef_int();
  
#line 761 
  if (tmp_10 != 0) {
    int tmp_0;
    
#line 763 
    ldv_13_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 766 
    tmp_0 = ldv_undef_int();
    
#line 766 
    switch (tmp_0) {
      case 1: 
#line 767 
      ;
      
#line 770 
      ldv_emg_wrapper_sh_eth_set_settings_2(ldv_13_container,ldv_13_ldv_param_1_2);
      
#line 773 
      goto ldv_43371;
      case 2: 
#line 775 
      ;
      
#line 778 
      ldv_emg_wrapper_sh_eth_set_rx_mode_16(ldv_13_container);
      
#line 781 
      goto ldv_43371;
      case 3: 
#line 783 
      ;
      
#line 786 
      ldv_emg_wrapper_sh_eth_nway_reset_24(ldv_13_container);
      
#line 789 
      goto ldv_43371;
      case 4: 
#line 791 
      ;
      
#line 797 
      ldv_emg_wrapper_sh_eth_vlan_rx_kill_vid_23(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_21),(unsigned short)((int)ldv_13_ldv_param_2_22));
      
#line 803 
      goto ldv_43371;
      case 5: 
#line 805 
      ;
      
#line 808 
      ldv_emg_wrapper_sh_eth_get_regs_len_22(ldv_13_container);
      
#line 811 
      goto ldv_43371;
      case 6: 
#line 813 
      ;
      
#line 815 
      ldv_13_ldv_param_1_20 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 820 
      ldv_emg_wrapper_sh_eth_get_ringparam_21(ldv_13_container,ldv_13_ldv_param_1_20);
      
#line 824 
      ldv_free((void *)ldv_13_ldv_param_1_20);
      
#line 827 
      goto ldv_43371;
      case 7: 
#line 829 
      ;
      
#line 831 
      ldv_13_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 836 
      ldv_emg_wrapper_sh_eth_get_strings_20(ldv_13_container,ldv_13_ldv_param_1_18,ldv_13_ldv_param_2_19);
      
#line 840 
      ldv_free((void *)ldv_13_ldv_param_2_19);
      
#line 843 
      goto ldv_43371;
      case 8: 
#line 845 
      ;
      
#line 848 
      ldv_emg_wrapper_sh_eth_get_stats_19(ldv_13_container);
      
#line 851 
      goto ldv_43371;
      case 9: 
#line 853 
      ;
      
#line 856 
      ldv_emg_wrapper_sh_eth_tx_timeout_4(ldv_13_container);
      
#line 859 
      goto ldv_43371;
      case 10: 
#line 861 
      ;
      
#line 863 
      ldv_13_ldv_param_1_16 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 864 
      ldv_13_ldv_param_2_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 869 
      ldv_emg_wrapper_sh_eth_get_regs_18(ldv_13_container,ldv_13_ldv_param_1_16,ldv_13_ldv_param_2_17);
      
#line 873 
      ldv_free((void *)ldv_13_ldv_param_1_16);
      
#line 874 
      ldv_free(ldv_13_ldv_param_2_17);
      
#line 877 
      goto ldv_43371;
      case 11: 
#line 879 
      ;
      
#line 881 
      ldv_13_ldv_param_1_14 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 886 
      ldv_emg_wrapper_sh_eth_do_ioctl_17(ldv_13_container,ldv_13_ldv_param_1_14,ldv_13_ldv_param_2_15);
      
#line 890 
      ldv_free((void *)ldv_13_ldv_param_1_14);
      
#line 893 
      goto ldv_43371;
      case 12: 
#line 895 
      ;
      
#line 898 
      ldv_emg_wrapper_sh_eth_set_rx_mode_16(ldv_13_container);
      
#line 901 
      goto ldv_43371;
      case 13: 
#line 903 
      ;
      
#line 909 
      ldv_emg_wrapper_sh_eth_vlan_rx_add_vid_15(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_12),(unsigned short)((int)ldv_13_ldv_param_2_13));
      
#line 915 
      goto ldv_43371;
      case 14: 
#line 917 
      ;
      
#line 923 
      ldv_emg_wrapper_sh_eth_get_sset_count_14(ldv_13_container,ldv_13_ldv_param_1_11);
      
#line 929 
      goto ldv_43371;
      case 15: 
#line 931 
      ;
      
#line 933 
      ldv_13_ldv_param_1_10 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 938 
      ldv_emg_wrapper_sh_eth_get_settings_13(ldv_13_container,ldv_13_ldv_param_1_10);
      
#line 942 
      ldv_free((void *)ldv_13_ldv_param_1_10);
      
#line 945 
      goto ldv_43371;
      case 16: 
#line 947 
      ;
      
#line 949 
      ldv_13_ldv_param_1_9 = ldv_xmalloc_unknown_size(0UL);
      
#line 954 
      (*ldv_emg_alias_eth_mac_addr_12)(ldv_13_container,ldv_13_ldv_param_1_9);
      
#line 958 
      ldv_free(ldv_13_ldv_param_1_9);
      
#line 961 
      goto ldv_43371;
      case 17: 
#line 963 
      ;
      
#line 965 
      ldv_13_ldv_param_0_8 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 970 
      ldv_emg_wrapper_sh_eth_start_xmit_11(ldv_13_ldv_param_0_8,ldv_13_container);
      
#line 974 
      ldv_free((void *)ldv_13_ldv_param_0_8);
      
#line 977 
      goto ldv_43371;
      case 18: 
#line 979 
      ;
      
#line 982 
      ldv_emg_wrapper_sh_eth_get_msglevel_10(ldv_13_container);
      
#line 985 
      goto ldv_43371;
      case 19: 
#line 987 
      ;
      
#line 989 
      ldv_13_ldv_param_1_7 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 994 
      ldv_emg_wrapper_sh_eth_set_ringparam_9(ldv_13_container,ldv_13_ldv_param_1_7);
      
#line 998 
      ldv_free((void *)ldv_13_ldv_param_1_7);
      
#line 1001 
      goto ldv_43371;
      case 20: 
#line 1003 
      ;
      
#line 1006 
      (*ldv_emg_alias_ethtool_op_get_link_8)(ldv_13_container);
      
#line 1009 
      goto ldv_43371;
      case 21: 
#line 1011 
      ;
      
#line 1014 
      (*ldv_emg_alias_eth_validate_addr_5)(ldv_13_container);
      
#line 1017 
      goto ldv_43371;
      case 22: 
#line 1019 
      ;
      
#line 1021 
      ldv_13_ldv_param_1_5 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1022 
      ldv_13_ldv_param_2_6 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1027 
      ldv_emg_wrapper_sh_eth_get_ethtool_stats_6(ldv_13_container,ldv_13_ldv_param_1_5,ldv_13_ldv_param_2_6);
      
#line 1031 
      ldv_free((void *)ldv_13_ldv_param_1_5);
      
#line 1032 
      ldv_free((void *)ldv_13_ldv_param_2_6);
      
#line 1035 
      goto ldv_43371;
      case 23: 
#line 1037 
      ;
      
#line 1043 
      (*ldv_emg_alias_eth_change_mtu_7)(ldv_13_container,ldv_13_ldv_param_1_4);
      
#line 1049 
      goto ldv_43371;
      case 24: 
#line 1051 
      ;
      
#line 1054 
      ldv_emg_wrapper_sh_eth_tx_timeout_4(ldv_13_container);
      
#line 1057 
      goto ldv_43371;
      case 25: 
#line 1059 
      ;
      
#line 1065 
      ldv_emg_wrapper_sh_eth_set_msglevel_3(ldv_13_container,ldv_13_ldv_param_1_3);
      
#line 1071 
      goto ldv_43371;
      default: 
#line 1073 
      ;
      
#line 1073 
      __VERIFIER_assume(0);
    }
    ldv_43371: 
#line 1076 
    ;
    
#line 1076 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 1083 
    goto ldv_call_13;
  }
  else {
    
#line 1091 
    __retres = (void *)0;
    
#line 1091 
    goto return_label;
  }
  
#line 1094 
  __retres = (void *)0;
  return_label: 
#line 1094 
                return __retres;
}


#line 1099  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1106 
  ldv_1_ret = ldv_emg_sh_eth_driver_init();
  
#line 1107 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1110 
  tmp = ldv_undef_int();
  
#line 1110 
  if (tmp != 0) {
    
#line 1112 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1116 
    __retres = (void *)0;
    
#line 1116 
    goto return_label;
  }
  else {
    
#line 1120 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1125 
    ldv_emg_sh_eth_driver_exit();
    
#line 1129 
    __retres = (void *)0;
    
#line 1129 
    goto return_label;
  }
  
#line 1132 
  __retres = (void *)0;
  return_label: 
#line 1132 
                return __retres;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_9_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_10 *cf_arg_10;
  int tmp;
  
#line 1140 
  tmp = ldv_undef_int();
  
#line 1140 
  switch (tmp) {
    case 0: 
#line 1141 
    ;
    
#line 1142 
    cf_arg_10 = (struct ldv_struct_interrupt_scenario_10 *)ldv_xmalloc(32UL);
    
#line 1143 
    cf_arg_10->arg0 = arg0;
    
#line 1144 
    cf_arg_10->arg1 = arg1;
    
#line 1145 
    cf_arg_10->arg2 = arg2;
    
#line 1146 
    cf_arg_10->arg3 = arg3;
    
#line 1147 
    ret = pthread_create(& ldv_thread_10,(pthread_attr_t const *)0,& ldv_interrupt_scenario_10,(void *)cf_arg_10);
    
#line 1148 
    __VERIFIER_assume(ret == 0);
    
#line 1149 
    goto ldv_43414;
    default: 
#line 1151 
    ;
    
#line 1151 
    __VERIFIER_assume(0);
  }
  ldv_43414: 
#line 1152 
  ;
  
#line 1153 
  return;
}


#line 1157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_register_12_17(void)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_11;
  int tmp;
  
#line 1160 
  tmp = ldv_undef_int();
  
#line 1160 
  switch (tmp) {
    case 0: 
#line 1161 
    ;
    
#line 1162 
    cf_arg_11 = (struct ldv_struct_platform_instance_12 *)ldv_xmalloc(16UL);
    
#line 1163 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_pm_ops_scenario_11,(void *)cf_arg_11);
    
#line 1164 
    __VERIFIER_assume(ret == 0);
    
#line 1165 
    goto ldv_43422;
    default: 
#line 1167 
    ;
    
#line 1167 
    __VERIFIER_assume(0);
  }
  ldv_43422: 
#line 1168 
  ;
  
#line 1169 
  return;
}


#line 1173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_deregister_12_16(void)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_11;
  int tmp;
  
#line 1176 
  tmp = ldv_undef_int();
  
#line 1176 
  switch (tmp) {
    case 0: 
#line 1177 
    ;
    
#line 1178 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1179 
    __VERIFIER_assume(ret == 0);
    
#line 1180 
    goto ldv_43430;
    default: 
#line 1182 
    ;
    
#line 1182 
    __VERIFIER_assume(0);
  }
  ldv_43430: 
#line 1183 
  ;
  
#line 1184 
  return;
}


#line 1188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_12 *cf_arg_12;
  int tmp;
  
#line 1191 
  tmp = ldv_undef_int();
  
#line 1191 
  switch (tmp) {
    case 0: 
#line 1192 
    ;
    
#line 1193 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 1194 
    __VERIFIER_assume(ret == 0);
    
#line 1195 
    goto ldv_43438;
    default: 
#line 1197 
    ;
    
#line 1197 
    __VERIFIER_assume(0);
  }
  ldv_43438: 
#line 1198 
  ;
  
#line 1199 
  return;
}


#line 1203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1209 
  ldv_6_netdev = arg0;
  
#line 1214 
  ldv_emg_wrapper_sh_eth_close_2(ldv_6_netdev);
  
#line 1218 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1222 
  goto return_label;
  return_label: 
#line 1224 
                return;
}


#line 1229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1235 
  ldv_3_line = (int)arg0;
  
#line 1239 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1243 
  goto return_label;
  return_label: 
#line 1245 
                return;
}


#line 1250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1253 
  tmp = ldv_undef_int();
  
#line 1253 
  switch (tmp) {
    case 0: 
#line 1254 
    ;
    
#line 1255 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1256 
    __VERIFIER_assume(ret == 0);
    
#line 1257 
    goto ldv_43455;
    default: 
#line 1259 
    ;
    
#line 1259 
    __VERIFIER_assume(0);
  }
  ldv_43455: 
#line 1260 
  ;
  
#line 1261 
  return;
}


#line 1265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1271 
  ldv_2_netdev = arg0;
  
#line 1272 
  ldv_free((void *)ldv_2_netdev);
  
#line 1276 
  goto return_label;
  return_label: 
#line 1278 
                return;
}


#line 1283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  int __retres;
  int tmp_0;
  
#line 1286 
  struct platform_driver *ldv_7_platform_driver = ldv_emg_alias_sh_eth_driver_2;
  
#line 1290 
  tmp_0 = ldv_undef_int();
  
#line 1290 
  if (tmp_0 != 0) {
    
#line 1292 
    ldv_7_platform_driver = arg0;
    
#line 1296 
    ldv_dispatch_register_7_3(ldv_7_platform_driver);
    
#line 1300 
    __retres = 0;
    
#line 1300 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1307 
    tmp = ldv_undef_int_negative();
    
#line 1307 
    __retres = tmp;
    
#line 1307 
    goto return_label;
  }
  return_label: 
#line 1290 
                return __retres;
}


#line 1317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/renesas/sh_eth.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_8_netdev;
  int tmp_3;
  
#line 1321 
  int ldv_8_ret = ldv_undef_int();
  
#line 1324 
  ldv_8_ret = ldv_undef_int();
  
#line 1327 
  tmp_3 = ldv_undef_int();
  
#line 1327 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1329 
    ldv_8_netdev = arg0;
    
#line 1334 
    ldv_8_ret = ldv_emg_wrapper_sh_eth_open_2(ldv_8_netdev);
    
#line 1337 
    tmp_1 = ldv_undef_int();
    
#line 1337 
    if (tmp_1 != 0) {
      
#line 1339 
      __VERIFIER_assume(ldv_8_ret == 0);
      
#line 1343 
      ldv_dispatch_register_8_4(ldv_8_netdev);
      
#line 1347 
      __retres = 0;
      
#line 1347 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1354 
      __VERIFIER_assume(ldv_8_ret != 0);
      
#line 1355 
      ldv_failed_register_netdev();
      
#line 1356 
      tmp_0 = ldv_undef_int_negative();
      
#line 1356 
      __retres = tmp_0;
      
#line 1356 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1364 
    ldv_failed_register_netdev();
    
#line 1365 
    tmp_2 = ldv_undef_int_negative();
    
#line 1365 
    __retres = tmp_2;
    
#line 1365 
    goto return_label;
  }
  return_label: 
#line 1327 
                return __retres;
}


