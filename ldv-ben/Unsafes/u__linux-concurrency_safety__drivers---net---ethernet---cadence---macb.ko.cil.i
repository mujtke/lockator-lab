/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11493 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 213 
struct clk;

#line 487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
struct device_node;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_48 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_48 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_49 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_49 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_50 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_50 nodemask_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_180 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_180 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_182 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_183 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_184 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_187 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_186 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_187 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_188 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_189 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_181 {
   int _pad[28U] ;
   struct __anonstruct__kill_182 _kill ;
   struct __anonstruct__timer_183 _timer ;
   struct __anonstruct__rt_184 _rt ;
   struct __anonstruct__sigchld_185 _sigchld ;
   struct __anonstruct__sigfault_186 _sigfault ;
   struct __anonstruct__sigpoll_188 _sigpoll ;
   struct __anonstruct__sigsys_189 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_181 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_196 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_199 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   struct keyring_index_key index_key ;
   struct __anonstruct_199 __anonCompField___anonunion_198_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_200 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_202 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   union __anonunion_payload_202 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_196 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_197 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_198 __anonCompField_key_53 ;
   union __anonunion_type_data_200 type_data ;
   union __anonunion_201 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_229 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_228 {
   struct __anonstruct_229 __anonCompField___anonunion_228_65 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_228 __anonCompField_radix_tree_node_66 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqdomain.h"
struct path;

#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqdomain.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/pinctrl.h"
struct gpio_desc;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct pinctrl;

#line 68 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 15 
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct iommu_ops;

#line 21 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_233 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_233 __anonCompField_iov_iter_67 ;
   unsigned long nr_segs ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_235 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_235 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_236 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_236 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_237 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_237 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_238 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_238 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_239 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_239 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_240 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_240 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_241 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_241 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_242 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_242 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_243 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_244 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_243 ifr_ifrn ;
   union __anonunion_ifr_ifru_244 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_249 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_248 {
   struct __anonstruct_249 __anonCompField___anonunion_248_68 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_248 __anonCompField_lockref_69 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_251 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_70 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_250 __anonCompField_qstr_71 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_252 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_252 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_256 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_256 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_257 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_257 __anonCompField_kqid_73 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_262 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_260 __anonCompField_inode_74 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_261 __anonCompField_inode_75 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_262 __anonCompField_inode_76 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_263 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_263 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_265 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_264 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_265 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_264 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_280 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_280 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27143 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27143 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_285 __anonCompField_nf_bridge_info_80 ;
   union __anonunion_286 __anonCompField_nf_bridge_info_81 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_287 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_287 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_289 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   u64 v64 ;
   struct __anonstruct_289 __anonCompField___anonunion_288_82 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_288 __anonCompField_skb_mstamp_83 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_292 __anonCompField___anonstruct_291_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   struct __anonstruct_291 __anonCompField___anonunion_290_85 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_294 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_293 {
   __wsum csum ;
   struct __anonstruct_294 __anonCompField___anonunion_293_87 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_290 __anonCompField_sk_buff_86 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_293 __anonCompField_sk_buff_88 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_295 __anonCompField_sk_buff_89 ;
   __u32 secmark ;
   union __anonunion_296 __anonCompField_sk_buff_90 ;
   union __anonunion_297 __anonCompField_sk_buff_91 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28729 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28729 phy_interface_t;

#line 126 
enum ldv_28782 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28782 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30492 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30493 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30492 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30493 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct macb_platform_data {
   u32 phy_mask ;
   int phy_irq_pin ;
   u8 is_rmii ;
   u8 rev_eth_addr ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_data/macb.h"
struct mfd_cell;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_data/macb.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device *) ;
   int (*remove)(struct platform_device *) ;
   void (*shutdown)(struct platform_device *) ;
   int (*suspend)(struct platform_device *, pm_message_t ) ;
   int (*resume)(struct platform_device *) ;
   struct device_driver driver ;
   struct platform_device_id const *id_table ;
   bool prevent_deferred_probe ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
struct macb_dma_desc {
   u32 addr ;
   u32 ctrl ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb_tx_skb {
   struct sk_buff *skb ;
   dma_addr_t mapping ;
   size_t size ;
   bool mapped_as_page ;
};

#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb_stats {
   u32 rx_pause_frames ;
   u32 tx_ok ;
   u32 tx_single_cols ;
   u32 tx_multiple_cols ;
   u32 rx_ok ;
   u32 rx_fcs_errors ;
   u32 rx_align_errors ;
   u32 tx_deferred ;
   u32 tx_late_cols ;
   u32 tx_excessive_cols ;
   u32 tx_underruns ;
   u32 tx_carrier_errors ;
   u32 rx_resource_errors ;
   u32 rx_overruns ;
   u32 rx_symbol_errors ;
   u32 rx_oversize_pkts ;
   u32 rx_jabbers ;
   u32 rx_undersize_pkts ;
   u32 sqe_test_errors ;
   u32 rx_length_mismatch ;
   u32 tx_pause_frames ;
};

#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct gem_stats {
   u32 tx_octets_31_0 ;
   u32 tx_octets_47_32 ;
   u32 tx_frames ;
   u32 tx_broadcast_frames ;
   u32 tx_multicast_frames ;
   u32 tx_pause_frames ;
   u32 tx_64_byte_frames ;
   u32 tx_65_127_byte_frames ;
   u32 tx_128_255_byte_frames ;
   u32 tx_256_511_byte_frames ;
   u32 tx_512_1023_byte_frames ;
   u32 tx_1024_1518_byte_frames ;
   u32 tx_greater_than_1518_byte_frames ;
   u32 tx_underrun ;
   u32 tx_single_collision_frames ;
   u32 tx_multiple_collision_frames ;
   u32 tx_excessive_collisions ;
   u32 tx_late_collisions ;
   u32 tx_deferred_frames ;
   u32 tx_carrier_sense_errors ;
   u32 rx_octets_31_0 ;
   u32 rx_octets_47_32 ;
   u32 rx_frames ;
   u32 rx_broadcast_frames ;
   u32 rx_multicast_frames ;
   u32 rx_pause_frames ;
   u32 rx_64_byte_frames ;
   u32 rx_65_127_byte_frames ;
   u32 rx_128_255_byte_frames ;
   u32 rx_256_511_byte_frames ;
   u32 rx_512_1023_byte_frames ;
   u32 rx_1024_1518_byte_frames ;
   u32 rx_greater_than_1518_byte_frames ;
   u32 rx_undersized_frames ;
   u32 rx_oversize_frames ;
   u32 rx_jabbers ;
   u32 rx_frame_check_sequence_errors ;
   u32 rx_length_field_frame_errors ;
   u32 rx_symbol_errors ;
   u32 rx_alignment_errors ;
   u32 rx_resource_errors ;
   u32 rx_overruns ;
   u32 rx_ip_header_checksum_errors ;
   u32 rx_tcp_checksum_errors ;
   u32 rx_udp_checksum_errors ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct gem_statistic {
   char stat_string[32U] ;
   int offset ;
   u32 stat_bits ;
};

#line 678 
struct macb;

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb_or_gem_ops {
   int (*mog_alloc_rx_buffers)(struct macb *) ;
   void (*mog_free_rx_buffers)(struct macb *) ;
   void (*mog_init_rings)(struct macb *) ;
   int (*mog_rx)(struct macb *, int ) ;
};

#line 753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb_config {
   u32 caps ;
   unsigned int dma_burst_length ;
   int (*clk_init)(struct platform_device *, struct clk **, struct clk **, struct clk **) ;
   int (*init)(struct platform_device *) ;
   int jumbo_max_len ;
};

#line 762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb_queue {
   struct macb *bp ;
   int irq ;
   unsigned int ISR ;
   unsigned int IER ;
   unsigned int IDR ;
   unsigned int IMR ;
   unsigned int TBQP ;
   unsigned int tx_head ;
   unsigned int tx_tail ;
   struct macb_dma_desc *tx_ring ;
   struct macb_tx_skb *tx_skb ;
   dma_addr_t tx_ring_dma ;
   struct work_struct tx_error_task ;
};

#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
union __anonunion_hw_stats_326 {
   struct macb_stats macb ;
   struct gem_stats gem ;
};

#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
struct macb {
   void *regs ;
   bool native_io ;
   u32 (*macb_reg_readl)(struct macb *, int ) ;
   void (*macb_reg_writel)(struct macb *, int , u32 ) ;
   unsigned int rx_tail ;
   unsigned int rx_prepared_head ;
   struct macb_dma_desc *rx_ring ;
   struct sk_buff **rx_skbuff ;
   void *rx_buffers ;
   size_t rx_buffer_size ;
   unsigned int num_queues ;
   unsigned int queue_mask ;
   struct macb_queue queues[8U] ;
   spinlock_t lock ;
   struct platform_device *pdev ;
   struct clk *pclk ;
   struct clk *hclk ;
   struct clk *tx_clk ;
   struct net_device *dev ;
   struct napi_struct napi ;
   struct net_device_stats stats ;
   union __anonunion_hw_stats_326 hw_stats ;
   dma_addr_t rx_ring_dma ;
   dma_addr_t rx_buffers_dma ;
   struct macb_or_gem_ops macbgem_ops ;
   struct mii_bus *mii_bus ;
   struct phy_device *phy_dev ;
   int link ;
   int speed ;
   int duplex ;
   u32 caps ;
   unsigned int dma_burst_length ;
   phy_interface_t phy_interface ;
   struct sk_buff *skb ;
   dma_addr_t skb_physaddr ;
   int skb_length ;
   unsigned int max_tx_length ;
   u64 ethtool_stats[43U] ;
   unsigned int rx_frm_len_mask ;
   unsigned int jumbo_max_len ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct ldv_struct_platform_instance_9 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};

#line 17  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_10 {
   struct net_device *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/fvtp/.tmp_macb.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 59 
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  unsigned long tmp;
  {
    unsigned long __ret;
    
#line 831 
    unsigned long __edi = __edi;
    
#line 831 
    unsigned long __esi = __esi;
    
#line 831 
    unsigned long __edx = __edx;
    
#line 831 
    unsigned long __ecx = __ecx;
    
#line 831 
    unsigned long __eax = __eax;
    
#line 831 
    if ((long)(pv_irq_ops.save_fl.func == (void *)0) != 0L) {
      
#line 833 
      ldv_inline_asm();
      
#line 831 
      ;
    }
    else ;
    
#line 835 
    ldv_inline_asm();
    
#line 831 
    __ret = __eax;
    
#line 831 
    tmp = __ret;
  }
  
#line 831 
  return tmp;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  
#line 836 
  unsigned long __edi = __edi;
  
#line 836 
  unsigned long __esi = __esi;
  
#line 836 
  unsigned long __edx = __edx;
  
#line 836 
  unsigned long __ecx = __ecx;
  
#line 836 
  unsigned long __eax = __eax;
  
#line 836 
  if ((long)(pv_irq_ops.restore_fl.func == (void *)0) != 0L) {
    
#line 838 
    ldv_inline_asm();
    
#line 836 
    ;
  }
  else ;
  
#line 839 
  ldv_inline_asm();
  
#line 841 
  return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  
#line 841 
  unsigned long __edi = __edi;
  
#line 841 
  unsigned long __esi = __esi;
  
#line 841 
  unsigned long __edx = __edx;
  
#line 841 
  unsigned long __ecx = __ecx;
  
#line 841 
  unsigned long __eax = __eax;
  
#line 841 
  if ((long)(pv_irq_ops.irq_disable.func == (void *)0) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 844 
  ldv_inline_asm();
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void)
{
  unsigned long f;
  
#line 853 
  f = arch_local_save_flags();
  
#line 854 
  arch_local_irq_disable();
  
#line 855 
  return f;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  int __retres;
  
#line 153 
  __retres = (flags & 512UL) == 0UL;
  
#line 153 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqflags.h"
void trace_hardirqs_on(void);


#line 21 
void trace_hardirqs_off(void);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  
#line 567 
  ldv_inline_asm();
  
#line 568 
  return;
}


#line 570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  
#line 572 
  rep_nop();
  
#line 573 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_76(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_78(spinlock_t *lock);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 285 
unsigned int jiffies_to_usecs(unsigned long const);


#line 365 
unsigned long __usecs_to_jiffies(unsigned int const);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 369 
  __retres = (unsigned long)(((long)u + 3999L) / 4000L);
  
#line 369 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 410 
  if (0 != 0) {
    unsigned int tmp;
    unsigned long tmp_0;
    
#line 411 
    tmp = jiffies_to_usecs(4611686018427387902UL);
    
#line 411 
    ;
    
#line 411 
    if (tmp < u) {
      
#line 412 
      __retres = 4611686018427387902UL;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    tmp_0 = _usecs_to_jiffies(u);
    
#line 413 
    __retres = tmp_0;
    
#line 413 
    goto return_label;
  }
  else {
    unsigned long tmp_1;
    
#line 415 
    tmp_1 = __usecs_to_jiffies(u);
    
#line 415 
    __retres = tmp_1;
    
#line 415 
    goto return_label;
  }
  return_label: 
#line 410 
                return __retres;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 560 
static bool ldv_schedule_work_77(struct work_struct *work);


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
int clk_prepare(struct clk *);


#line 193 
void clk_unprepare(struct clk *);


#line 237 
struct clk *devm_clk_get(struct device *, char const *);


#line 249 
int clk_enable(struct clk *);


#line 265 
void clk_disable(struct clk *);


#line 272 
unsigned long clk_get_rate(struct clk *);


#line 325 
long clk_round_rate(struct clk *, unsigned long);


#line 334 
int clk_set_rate(struct clk *, unsigned long);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static int clk_prepare_enable(struct clk *clk)
{
  int __retres;
  int ret;
  
#line 471 
  ret = clk_prepare(clk);
  
#line 472 
  if (ret != 0) {
    
#line 473 
    __retres = ret;
    
#line 473 
    goto return_label;
  }
  else ;
  
#line 474 
  ret = clk_enable(clk);
  
#line 475 
  if (ret != 0) 
#line 476 
                clk_unprepare(clk); else ;
  
#line 478 
  __retres = ret;
  return_label: 
#line 478 
                return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/clk.h"
__inline static void clk_disable_unprepare(struct clk *clk)
{
  
#line 484 
  clk_disable(clk);
  
#line 485 
  clk_unprepare(clk);
  
#line 486 
  return;
}


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int __readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 63 
  ldv_inline_asm();
  
#line 62 
  return ret;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void __writel(unsigned int val, void volatile *addr)
{
  
#line 72 
  ldv_inline_asm();
  
#line 73 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct of_device_id const *of_match_node(struct of_device_id const *, struct device_node const *);


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gpio/consumer.h"
int gpiod_to_irq(struct gpio_desc const *);


#line 131 
struct gpio_desc *gpio_to_desc(unsigned int);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/gpio.h"
__inline static bool gpio_is_valid(int number)
{
  bool __retres;
  
#line 43 
  __retres = (_Bool)((unsigned int)number <= 511U);
  
#line 43 
  return __retres;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/gpio.h"
__inline static int __gpio_to_irq(unsigned int gpio)
{
  int tmp_0;
  struct gpio_desc *tmp;
  
#line 109 
  tmp = gpio_to_desc(gpio);
  
#line 109 
  tmp_0 = gpiod_to_irq((struct gpio_desc const *)tmp);
  
#line 109 
  return tmp_0;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gpio.h"
__inline static int gpio_to_irq(unsigned int gpio)
{
  int tmp;
  
#line 70 
  tmp = __gpio_to_irq(gpio);
  
#line 70 
  return tmp;
}


#line 84 
int devm_gpio_request(struct device *, unsigned int, char const *);


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
int devm_request_threaded_irq(struct device *, unsigned int, irqreturn_t (*)(int , void *), irqreturn_t (*)(int , void *), unsigned long, char const *, void *);


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev, unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long irqflags, char const *devname, void *dev_id)
{
  int tmp;
  
#line 161 
  tmp = devm_request_threaded_irq(dev,irq,handler,(irqreturn_t (*)(int , void *))0,irqflags,devname,dev_id);
  
#line 161 
  return tmp;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void usleep_range(unsigned long, unsigned long);


#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void *devm_ioremap_resource(struct device *, struct resource *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 996  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_platdata(struct device const *dev)
{
  void *__retres;
  
#line 998 
  __retres = dev->platform_data;
  
#line 998 
  return __retres;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_pull(struct sk_buff *skb, unsigned int len)
{
  unsigned char *__retres;
  
#line 1709 
  skb->len -= len;
  
#line 1710 
  if ((long)(skb->len < skb->data_len) != 0L) {
    
#line 1712 
    ldv_inline_asm();
    
#line 1710 
    ;
  }
  else ;
  
#line 1711 
  skb->data += len;
  
#line 1711 
  __retres = skb->data;
  
#line 1711 
  return __retres;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data_offset(struct sk_buff *skb, int const offset, void const *from, unsigned int const len)
{
  
#line 2815 
  memcpy((void *)(skb->data + offset),from,(unsigned long)len);
  
#line 2816 
  return;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 86 
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus *mdiobus_alloc_size(size_t);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
__inline static struct mii_bus *mdiobus_alloc(void)
{
  struct mii_bus *tmp;
  
#line 198 
  tmp = mdiobus_alloc_size(0UL);
  
#line 198 
  return tmp;
}


#line 201 
int mdiobus_register(struct mii_bus *);


#line 202 
void mdiobus_unregister(struct mii_bus *);


#line 203 
void mdiobus_free(struct mii_bus *);


#line 211 
struct phy_device *mdiobus_scan(struct mii_bus *, int);


#line 736 
struct phy_device *phy_find_first(struct mii_bus *);


#line 739 
int phy_connect_direct(struct net_device *, struct phy_device *, void (*)(struct net_device *), phy_interface_t);


#line 745 
void phy_disconnect(struct phy_device *);


#line 747 
void phy_start(struct phy_device *);


#line 748 
void phy_stop(struct phy_device *);


#line 777 
int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);


#line 778 
int phy_ethtool_gset(struct phy_device *, struct ethtool_cmd *);


#line 779 
int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_reschedule(struct napi_struct *napi)
{
  bool __retres;
  bool tmp;
  
#line 442 
  tmp = napi_schedule_prep(napi);
  
#line 442 
  if ((int)tmp != 0) {
    
#line 443 
    __napi_schedule(napi);
    
#line 444 
    __retres = (_Bool)1;
    
#line 444 
    goto return_label;
  }
  else ;
  
#line 446 
  __retres = (_Bool)0;
  return_label: 
#line 446 
                return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_43924;
  ldv_43923: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_43924: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_43923; else 
#line 2540 
                                                   goto ldv_43925;
  ldv_43925: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_subqueue(struct net_device *dev, u16 queue_index)
{
  
#line 2804 
  struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)queue_index);
  
#line 2805 
  netif_tx_start_queue(txq);
  
#line 2806 
  return;
}


#line 2815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_subqueue_stopped(struct net_device const *dev, u16 queue_index)
{
  bool tmp_0;
  
#line 2818 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  
#line 2820 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)txq);
  
#line 2820 
  return tmp_0;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_85(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 46 
int eth_change_mtu(struct net_device *, int);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_84(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);


#line 53 
int platform_get_irq(struct platform_device *, unsigned int);


#line 197 
static int ldv___platform_driver_register_90(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2);


#line 202 
static void ldv_platform_driver_unregister_91(struct platform_driver *ldv_func_arg1);


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device const *pdev)
{
  void *tmp;
  
#line 215 
  tmp = dev_get_drvdata(& pdev->dev);
  
#line 215 
  return tmp;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev, void *data)
{
  
#line 221 
  dev_set_drvdata(& pdev->dev,data);
  
#line 222 
  return;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_mdio.h"
int of_mdiobus_register(struct mii_bus *, struct device_node *);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
int of_get_phy_mode(struct device_node *);


#line 15 
void const *of_get_mac_address(struct device_node *);


#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
static struct gem_statistic const gem_statistics[43U] = {{.stat_string = {(char)'t', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = 256, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 264, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 268, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 272, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 276, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 280, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 284, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 288, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 292, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 296, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 300, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'g', (char)'r', (char)'e', (char)'a', (char)'t', (char)'e', (char)'r', (char)'_', (char)'t', (char)'h', (char)'a', (char)'n', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s'}, .offset = 304, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)'\000'}, .offset = 308, .stat_bits = 576U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 312, .stat_bits = 1088U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'p', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 316, .stat_bits = 1088U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'c', (char)'e', (char)'s', (char)'s', (char)'i', (char)'v', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .offset = 320, .stat_bits = 1216U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .offset = 324, .stat_bits = 1088U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 328, .stat_bits = 0U}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'s', (char)'e', (char)'n', (char)'s', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 332, .stat_bits = 1088U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = 336, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 344, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 348, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 352, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 356, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 360, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 364, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 368, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 372, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 376, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 380, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'g', (char)'r', (char)'e', (char)'a', (char)'t', (char)'e', (char)'r', (char)'_', (char)'t', (char)'h', (char)'a', (char)'n', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s'}, .offset = 384, .stat_bits = 0U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'d', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 388, .stat_bits = 3U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}, .offset = 392, .stat_bits = 3U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'s', (char)'\000'}, .offset = 396, .stat_bits = 3U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'_', (char)'s', (char)'e', (char)'q', (char)'u', (char)'e', (char)'n', (char)'c', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 400, .stat_bits = 9U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'f', (char)'i', (char)'e', (char)'l', (char)'d', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 404, .stat_bits = 1U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'s', (char)'y', (char)'m', (char)'b', (char)'o', (char)'l', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 408, .stat_bits = 17U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'m', (char)'e', (char)'n', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 412, .stat_bits = 5U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'o', (char)'u', (char)'r', (char)'c', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 416, .stat_bits = 5U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)'s', (char)'\000'}, .offset = 420, .stat_bits = 33U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'i', (char)'p', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'s', (char)'u', (char)'m', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 424, .stat_bits = 1U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'p', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'s', (char)'u', (char)'m', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 428, .stat_bits = 1U}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'d', (char)'p', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'s', (char)'u', (char)'m', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .offset = 432, .stat_bits = 1U}};

#line 840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.h"
__inline static bool macb_is_gem(struct macb *bp)
{
  bool __retres;
  
#line 842 
  __retres = (_Bool)(bp->caps < (u32)0);
  
#line 842 
  return __retres;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static unsigned int macb_tx_ring_wrap(unsigned int index)
{
  unsigned int __retres;
  
#line 68 
  __retres = index & 127U;
  
#line 68 
  return __retres;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_dma_desc *macb_tx_desc(struct macb_queue *queue, unsigned int index)
{
  struct macb_dma_desc *__retres;
  unsigned int tmp;
  
#line 74 
  tmp = macb_tx_ring_wrap(index);
  
#line 74 
  ;
  
#line 74 
  __retres = queue->tx_ring + tmp;
  
#line 74 
  return __retres;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_tx_skb *macb_tx_skb(struct macb_queue *queue, unsigned int index)
{
  struct macb_tx_skb *__retres;
  unsigned int tmp;
  
#line 80 
  tmp = macb_tx_ring_wrap(index);
  
#line 80 
  ;
  
#line 80 
  __retres = queue->tx_skb + tmp;
  
#line 80 
  return __retres;
}


#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static dma_addr_t macb_tx_dma(struct macb_queue *queue, unsigned int index)
{
  dma_addr_t __retres;
  dma_addr_t offset;
  unsigned int tmp;
  
#line 87 
  tmp = macb_tx_ring_wrap(index);
  
#line 87 
  offset = (unsigned long long)((unsigned long)tmp * 8UL);
  
#line 89 
  __retres = queue->tx_ring_dma + offset;
  
#line 89 
  return __retres;
}


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static unsigned int macb_rx_ring_wrap(unsigned int index)
{
  unsigned int __retres;
  
#line 94 
  __retres = index & 511U;
  
#line 94 
  return __retres;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_dma_desc *macb_rx_desc(struct macb *bp, unsigned int index)
{
  struct macb_dma_desc *__retres;
  unsigned int tmp;
  
#line 99 
  tmp = macb_rx_ring_wrap(index);
  
#line 99 
  ;
  
#line 99 
  __retres = bp->rx_ring + tmp;
  
#line 99 
  return __retres;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void *macb_rx_buffer(struct macb *bp, unsigned int index)
{
  void *__retres;
  unsigned int tmp;
  
#line 104 
  tmp = macb_rx_ring_wrap(index);
  
#line 104 
  ;
  
#line 104 
  __retres = bp->rx_buffers + bp->rx_buffer_size * (unsigned long)tmp;
  
#line 104 
  return __retres;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static u32 hw_readl_native(struct macb *bp, int offset)
{
  u32 tmp;
  
#line 110 
  tmp = __readl((void const volatile *)(bp->regs + offset));
  
#line 110 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void hw_writel_native(struct macb *bp, int offset, u32 value)
{
  
#line 115 
  __writel(value,(void volatile *)(bp->regs + offset));
  
#line 116 
  return;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static u32 hw_readl(struct macb *bp, int offset)
{
  u32 tmp;
  
#line 120 
  tmp = __readl((void const volatile *)(bp->regs + offset));
  
#line 120 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void hw_writel(struct macb *bp, int offset, u32 value)
{
  
#line 125 
  __writel(value,(void volatile *)(bp->regs + offset));
  
#line 126 
  return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static bool hw_is_native_io(void *addr)
{
  bool __retres;
  
#line 135 
  u32 value = 2U;
  
#line 137 
  __writel(value,(void volatile *)addr);
  
#line 138 
  value = __readl((void const volatile *)addr);
  
#line 141 
  __writel(0U,(void volatile *)addr);
  
#line 143 
  __retres = (_Bool)(value == 2U);
  
#line 143 
  return __retres;
}


#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static bool hw_is_gem(void *addr, bool native_io)
{
  bool __retres;
  u32 id;
  
#line 150 
  if ((int)native_io != 0) 
#line 151 
                           id = __readl((void const volatile *)(addr + 252U)); else 
                                                                    
#line 153 
                                                                    id = __readl((void const volatile *)(addr + 252U));
  
#line 155 
  __retres = (_Bool)(((id >> 16) & 4095U) > 1U);
  
#line 155 
  return __retres;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_set_hwaddr(struct macb *bp)
{
  u32 bottom;
  u16 top;
  
#line 163 
  bottom = *((u32 *)(bp->dev)->dev_addr);
  {
    bool tmp;
    
#line 164 
    tmp = macb_is_gem(bp);
    
#line 164 
    if ((int)tmp != 0) 
#line 164 
                       (*(bp->macb_reg_writel))(bp,136,bottom); else 
                                                                  
#line 164 
                                                                  (*(bp->macb_reg_writel))(bp,152,bottom);
  }
  
#line 165 
  top = *((u16 *)((bp->dev)->dev_addr + 4U));
  {
    bool tmp_0;
    
#line 166 
    tmp_0 = macb_is_gem(bp);
    
#line 166 
    if ((int)tmp_0 != 0) 
#line 166 
                         (*(bp->macb_reg_writel))(bp,140,(unsigned int)top); else 
                                                                    
#line 166 
                                                                    (*(bp->macb_reg_writel))(bp,156,(unsigned int)top);
  }
  {
    bool tmp_1;
    
#line 169 
    tmp_1 = macb_is_gem(bp);
    
#line 169 
    if ((int)tmp_1 != 0) 
#line 169 
                         (*(bp->macb_reg_writel))(bp,144,0U); else 
#line 169 
                                                                   (*(bp->macb_reg_writel))(bp,160,0U);
  }
  {
    bool tmp_2;
    
#line 170 
    tmp_2 = macb_is_gem(bp);
    
#line 170 
    if ((int)tmp_2 != 0) 
#line 170 
                         (*(bp->macb_reg_writel))(bp,148,0U); else 
#line 170 
                                                                   (*(bp->macb_reg_writel))(bp,164,0U);
  }
  {
    bool tmp_3;
    
#line 171 
    tmp_3 = macb_is_gem(bp);
    
#line 171 
    if ((int)tmp_3 != 0) 
#line 171 
                         (*(bp->macb_reg_writel))(bp,152,0U); else 
#line 171 
                                                                   (*(bp->macb_reg_writel))(bp,168,0U);
  }
  {
    bool tmp_4;
    
#line 172 
    tmp_4 = macb_is_gem(bp);
    
#line 172 
    if ((int)tmp_4 != 0) 
#line 172 
                         (*(bp->macb_reg_writel))(bp,156,0U); else 
#line 172 
                                                                   (*(bp->macb_reg_writel))(bp,172,0U);
  }
  {
    bool tmp_5;
    
#line 173 
    tmp_5 = macb_is_gem(bp);
    
#line 173 
    if ((int)tmp_5 != 0) 
#line 173 
                         (*(bp->macb_reg_writel))(bp,160,0U); else 
#line 173 
                                                                   (*(bp->macb_reg_writel))(bp,176,0U);
  }
  {
    bool tmp_6;
    
#line 174 
    tmp_6 = macb_is_gem(bp);
    
#line 174 
    if ((int)tmp_6 != 0) 
#line 174 
                         (*(bp->macb_reg_writel))(bp,164,0U); else 
#line 174 
                                                                   (*(bp->macb_reg_writel))(bp,180,0U);
  }
  
#line 176 
  return;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_get_hwaddr(struct macb *bp)
{
  struct macb_platform_data *pdata;
  u32 bottom;
  u16 top;
  u8 addr[6U];
  int i;
  u32 tmp_1;
  u32 tmp_3;
  bool tmp_4;
  
#line 185 
  pdata = (struct macb_platform_data *)dev_get_platdata((struct device const *)(& (bp->pdev)->dev));
  
#line 188 
  i = 0;
  
#line 188 
  goto ldv_45907;
  ldv_45906: 
#line 189 
  ;
  {
    u32 __v;
    {
      bool tmp_0;
      
#line 189 
      tmp_0 = macb_is_gem(bp);
      
#line 189 
      if ((int)tmp_0 != 0) 
#line 189 
                           __v = (*(bp->macb_reg_readl))(bp,(i + 17) * 8); else 
                                                                    
#line 189 
                                                                    __v = (*(bp->macb_reg_readl))(bp,(i + 19) * 8);
    }
    
#line 189 
    tmp_1 = __v;
  }
  
#line 189 
  bottom = tmp_1;
  {
    u32 __v_0;
    {
      bool tmp_2;
      
#line 190 
      tmp_2 = macb_is_gem(bp);
      
#line 190 
      if ((int)tmp_2 != 0) 
#line 190 
                           __v_0 = (*(bp->macb_reg_readl))(bp,i * 8 + 140); else 
                                                                    
#line 190 
                                                                    __v_0 = (*(bp->macb_reg_readl))(bp,i * 8 + 156);
    }
    
#line 190 
    tmp_3 = __v_0;
  }
  
#line 190 
  top = (unsigned short)tmp_3;
  
#line 192 
  if (pdata != (struct macb_platform_data *)0 && (unsigned int)pdata->rev_eth_addr != 0U) {
    
#line 193 
    addr[5] = (unsigned char)bottom;
    
#line 194 
    addr[4] = (unsigned char)(bottom >> 8);
    
#line 195 
    addr[3] = (unsigned char)(bottom >> 16);
    
#line 196 
    addr[2] = (unsigned char)(bottom >> 24);
    
#line 197 
    addr[1] = (unsigned char)top;
    
#line 198 
    addr[0] = (unsigned char)((int)top >> 8);
  }
  else {
    
#line 200 
    addr[0] = (unsigned char)bottom;
    
#line 201 
    addr[1] = (unsigned char)(bottom >> 8);
    
#line 202 
    addr[2] = (unsigned char)(bottom >> 16);
    
#line 203 
    addr[3] = (unsigned char)(bottom >> 24);
    
#line 204 
    addr[4] = (unsigned char)top;
    
#line 205 
    addr[5] = (unsigned char)((int)top >> 8);
  }
  
#line 208 
  tmp_4 = is_valid_ether_addr((u8 const *)(& addr));
  
#line 208 
  if ((int)tmp_4 != 0) {
    
#line 209 
    memcpy((void *)(bp->dev)->dev_addr,(void const *)(& addr),6UL);
    
#line 210 
    goto return_label;
  }
  else ;
  
#line 188 
  i += 1;
  ldv_45907: 
#line 189 
  ;
  
#line 188 
  if (i <= 3) 
#line 190 
              goto ldv_45906; else 
#line 193 
                                   goto ldv_45908;
  ldv_45908: 
#line 194 
  ;
  
#line 214 
  _dev_info((struct device const *)(& (bp->pdev)->dev),"invalid hw address, using random\n");
  
#line 215 
  eth_hw_addr_random(bp->dev);
  return_label: 
#line 216 
                return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_mdio_read(struct mii_bus *bus, int mii_id, int regnum)
{
  int value;
  u32 tmp;
  u32 tmp_0;
  
#line 220 
  struct macb *bp = (struct macb *)bus->priv;
  
#line 223 
  (*(bp->macb_reg_writel))(bp,52,(unsigned int)(((((mii_id << 23) & 260046848) | 1610612736) | ((regnum << 18) & 8126464)) | 131072));
  
#line 230 
  goto ldv_45917;
  ldv_45916: 
#line 231 
  ;
  
#line 231 
  cpu_relax();
  ldv_45917: 
#line 232 
  ;
  
#line 230 
  tmp = (*(bp->macb_reg_readl))(bp,8);
  
#line 230 
  if ((tmp & 4U) == 0U) 
#line 232 
                        goto ldv_45916; else 
#line 235 
                                             goto ldv_45918;
  ldv_45918: 
#line 236 
  ;
  
#line 233 
  tmp_0 = (*(bp->macb_reg_readl))(bp,52);
  
#line 233 
  value = (int)tmp_0 & 65535;
  
#line 235 
  return value;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_mdio_write(struct mii_bus *bus, int mii_id, int regnum, u16 value)
{
  int __retres;
  u32 tmp;
  
#line 241 
  struct macb *bp = (struct macb *)bus->priv;
  
#line 243 
  (*(bp->macb_reg_writel))(bp,52,(unsigned int)((((((mii_id << 23) & 260046848) | 1342177280) | ((regnum << 18) & 8126464)) | 131072) | (int)value));
  
#line 251 
  goto ldv_45927;
  ldv_45926: 
#line 252 
  ;
  
#line 252 
  cpu_relax();
  ldv_45927: 
#line 253 
  ;
  
#line 251 
  tmp = (*(bp->macb_reg_readl))(bp,8);
  
#line 251 
  if ((tmp & 4U) == 0U) 
#line 253 
                        goto ldv_45926; else 
#line 256 
                                             goto ldv_45928;
  ldv_45928: 
#line 257 
  ;
  
#line 254 
  __retres = 0;
  
#line 254 
  return __retres;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_set_tx_clk(struct clk *clk, int speed, struct net_device *dev)
{
  long ferr;
  long rate;
  long rate_rounded;
  long tmp_0;
  int tmp_1;
  
#line 267 
  if (clk == (struct clk *)0) 
#line 268 
                              goto return_label; else ;
  
#line 270 
  switch (speed) {
    case 10: 
#line 271 
    ;
    
#line 272 
    rate = 2500000L;
    
#line 273 
    goto ldv_45938;
    case 100: 
#line 274 
    ;
    
#line 275 
    rate = 25000000L;
    
#line 276 
    goto ldv_45938;
    case 1000: 
#line 277 
    ;
    
#line 278 
    rate = 125000000L;
    
#line 279 
    goto ldv_45938;
    default: 
#line 280 
    ;
    
#line 281 
    goto return_label;
  }
  ldv_45938: 
#line 284 
  ;
  
#line 284 
  rate_rounded = clk_round_rate(clk,(unsigned long)rate);
  
#line 285 
  if (rate_rounded < 0L) 
#line 286 
                         goto return_label; else ;
  {
    long ret;
    {
      
#line 291 
      long __x = rate_rounded - rate;
      
#line 291 
      if (__x < (long)0) 
#line 291 
                         ret = - __x; else 
#line 291 
                                           ret = __x;
    }
    
#line 291 
    tmp_0 = ret;
  }
  
#line 291 
  ferr = tmp_0;
  
#line 292 
  ferr = ((rate / 100000L + ferr) + -1L) / (rate / 100000L);
  
#line 293 
  if (ferr > 5L) 
#line 294 
                 netdev_warn((struct net_device const *)dev,"unable to generate target frequency: %ld Hz\n",rate); else ;
  
#line 297 
  tmp_1 = clk_set_rate(clk,(unsigned long)rate_rounded);
  
#line 297 
  if (tmp_1 != 0) 
#line 298 
                  netdev_err((struct net_device const *)dev,"adjusting tx_clk failed.\n"); else ;
  return_label: 
#line 299 
                return;
}


#line 301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_handle_link_change(struct net_device *dev)
{
  unsigned long flags;
  
#line 303 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 304 
  struct phy_device *phydev = bp->phy_dev;
  
#line 306 
  int status_change = 0;
  
#line 308 
  ldv___ldv_spin_lock_72(& bp->lock);
  
#line 310 
  if (phydev->link != 0) {
    
#line 311 
    if (bp->speed != phydev->speed || bp->duplex != phydev->duplex) {
      u32 reg;
      bool tmp_0;
      
#line 315 
      reg = (*(bp->macb_reg_readl))(bp,4);
      
#line 316 
      reg &= 4294967292U;
      
#line 317 
      tmp_0 = macb_is_gem(bp);
      
#line 317 
      if ((int)tmp_0 != 0) 
#line 318 
                           reg &= 4294966271U; else ;
      
#line 320 
      if (phydev->duplex != 0) 
#line 321 
                               reg |= 2U; else ;
      
#line 322 
      if (phydev->speed == 100) 
#line 323 
                                reg |= 1U; else ;
      
#line 324 
      if (phydev->speed == 1000 && (bp->caps & 536870912U) != 0U) 
#line 326 
                                                                  reg |= 1024U; else ;
      {
        bool tmp_1;
        
#line 328 
        tmp_1 = macb_is_gem(bp);
        
#line 328 
        if ((int)tmp_1 != 0) 
#line 328 
                             (*(bp->macb_reg_writel))(bp,4,reg); else 
                                                                   
#line 328 
                                                                   (*(bp->macb_reg_writel))(bp,4,reg);
      }
      
#line 330 
      bp->speed = phydev->speed;
      
#line 331 
      bp->duplex = phydev->duplex;
      
#line 332 
      status_change = 1;
    }
    else ;
  }
  else ;
  
#line 336 
  if (phydev->link != bp->link) {
    
#line 337 
    if (phydev->link == 0) {
      
#line 338 
      bp->speed = 0;
      
#line 339 
      bp->duplex = -1;
    }
    else ;
    
#line 341 
    bp->link = phydev->link;
    
#line 343 
    status_change = 1;
  }
  else ;
  
#line 346 
  ldv_spin_unlock_irqrestore_73(& bp->lock,flags);
  
#line 348 
  if (status_change != 0) 
    
#line 349 
    if (phydev->link != 0) {
      char *tmp_2;
      
#line 353 
      macb_set_tx_clk(bp->tx_clk,phydev->speed,dev);
      
#line 355 
      netif_carrier_on(dev);
      
#line 357 
      if (phydev->duplex == 1) 
#line 357 
                               tmp_2 = (char *)"Full"; else 
#line 357 
                                                            tmp_2 = (char *)"Half";
      
#line 356 
      ;
      
#line 356 
      ;
      
#line 356 
      netdev_info((struct net_device const *)dev,"link up (%d/%s)\n",phydev->speed,tmp_2);
    }
    else {
      
#line 361 
      netif_carrier_off(dev);
      
#line 362 
      netdev_info((struct net_device const *)dev,"link down\n");
    }
  else ;
  
#line 364 
  return;
}


#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_mii_probe(struct net_device *dev)
{
  int __retres;
  struct macb_platform_data *pdata;
  struct phy_device *phydev;
  int phy_irq;
  int ret;
  bool tmp_2;
  
#line 370 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 376 
  phydev = phy_find_first(bp->mii_bus);
  
#line 377 
  if (phydev == (struct phy_device *)0) {
    
#line 378 
    netdev_err((struct net_device const *)dev,"no PHY found\n");
    
#line 379 
    __retres = -6;
    
#line 379 
    goto return_label;
  }
  else ;
  
#line 382 
  pdata = (struct macb_platform_data *)dev_get_platdata((struct device const *)(& (bp->pdev)->dev));
  
#line 383 
  if (pdata != (struct macb_platform_data *)0) {
    bool tmp_1;
    
#line 383 
    tmp_1 = gpio_is_valid(pdata->phy_irq_pin);
    
#line 383 
    if ((int)tmp_1 != 0) {
      
#line 384 
      ret = devm_gpio_request(& (bp->pdev)->dev,(unsigned int)pdata->phy_irq_pin,"phy int");
      
#line 385 
      if (ret == 0) {
        
#line 386 
        phy_irq = gpio_to_irq((unsigned int)pdata->phy_irq_pin);
        
#line 387 
        if (-1 > phy_irq) 
#line 387 
                          phydev->irq = -1; else 
#line 387 
                                                 phydev->irq = phy_irq;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 392 
  ret = phy_connect_direct(dev,phydev,& macb_handle_link_change,bp->phy_interface);
  
#line 394 
  if (ret != 0) {
    
#line 395 
    netdev_err((struct net_device const *)dev,"Could not attach to PHY\n");
    
#line 396 
    __retres = ret;
    
#line 396 
    goto return_label;
  }
  else ;
  
#line 400 
  tmp_2 = macb_is_gem(bp);
  
#line 400 
  if ((int)tmp_2 != 0) 
    
#line 400 
    if ((bp->caps & 536870912U) != 0U) 
#line 401 
                                       phydev->supported &= 767U; else 
                                                                    
#line 403 
                                                                    phydev->supported &= 719U;
  else 
#line 403 
       phydev->supported &= 719U;
  
#line 405 
  if ((bp->caps & 8U) != 0U) 
#line 406 
                             phydev->supported &= 4294967279U; else ;
  
#line 408 
  phydev->advertising = phydev->supported;
  
#line 410 
  bp->link = 0;
  
#line 411 
  bp->speed = 0;
  
#line 412 
  bp->duplex = -1;
  
#line 413 
  bp->phy_dev = phydev;
  
#line 415 
  __retres = 0;
  return_label: 
#line 415 
                return __retres;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_mii_init(struct macb *bp)
{
  int __retres;
  struct macb_platform_data *pdata;
  struct device_node *np;
  int i;
  
#line 422 
  int err = -6;
  
#line 425 
  (*(bp->macb_reg_writel))(bp,0,16U);
  
#line 427 
  bp->mii_bus = mdiobus_alloc();
  
#line 428 
  if (bp->mii_bus == (struct mii_bus *)0) {
    
#line 429 
    err = -12;
    
#line 430 
    goto err_out;
  }
  else ;
  
#line 433 
  (bp->mii_bus)->name = "MACB_mii_bus";
  
#line 434 
  (bp->mii_bus)->read = & macb_mdio_read;
  
#line 435 
  (bp->mii_bus)->write = & macb_mdio_write;
  
#line 436 
  snprintf((char *)(& (bp->mii_bus)->id),17UL,"%s-%x",(bp->pdev)->name,(bp->pdev)->id);
  
#line 438 
  (bp->mii_bus)->priv = (void *)bp;
  
#line 439 
  (bp->mii_bus)->parent = & (bp->dev)->dev;
  
#line 440 
  pdata = (struct macb_platform_data *)dev_get_platdata((struct device const *)(& (bp->pdev)->dev));
  
#line 442 
  (bp->mii_bus)->irq = (int *)kmalloc(128UL,208U);
  
#line 443 
  if ((bp->mii_bus)->irq == (int *)0) {
    
#line 444 
    err = -12;
    
#line 445 
    goto err_out_free_mdiobus;
  }
  else ;
  
#line 448 
  dev_set_drvdata(& (bp->dev)->dev,(void *)bp->mii_bus);
  
#line 450 
  np = (bp->pdev)->dev.of_node;
  
#line 451 
  if (np != (struct device_node *)0) {
    
#line 453 
    err = of_mdiobus_register(bp->mii_bus,np);
    
#line 457 
    if (err == 0) {
      struct phy_device *tmp_3;
      
#line 457 
      tmp_3 = phy_find_first(bp->mii_bus);
      
#line 457 
      if (tmp_3 == (struct phy_device *)0) {
        
#line 458 
        i = 0;
        
#line 458 
        goto ldv_45974;
        ldv_45973: 
#line 459 
        ;
        {
          struct phy_device *phydev;
          bool tmp_2;
          
#line 461 
          phydev = mdiobus_scan(bp->mii_bus,i);
          
#line 462 
          tmp_2 = IS_ERR((void const *)phydev);
          
#line 462 
          if ((int)tmp_2 != 0) {
            long tmp_1;
            
#line 463 
            tmp_1 = PTR_ERR((void const *)phydev);
            
#line 463 
            err = (int)tmp_1;
            
#line 464 
            goto ldv_45972;
          }
          else ;
        }
        
#line 458 
        i += 1;
        ldv_45974: 
#line 459 
        ;
        
#line 458 
        if (i <= 31) 
#line 460 
                     goto ldv_45973; else 
#line 463 
                                          goto ldv_45972;
        ldv_45972: 
#line 464 
        ;
        
#line 468 
        if (err != 0) 
#line 469 
                      goto err_out_unregister_bus; else ;
      }
      else ;
    }
    else ;
  }
  else {
    
#line 472 
    i = 0;
    
#line 472 
    goto ldv_45977;
    ldv_45976: 
#line 473 
    ;
    
#line 473 
    *((bp->mii_bus)->irq + i) = -1;
    
#line 472 
    i += 1;
    ldv_45977: 
#line 473 
    ;
    
#line 472 
    if (i <= 31) 
#line 474 
                 goto ldv_45976; else 
#line 477 
                                      goto ldv_45978;
    ldv_45978: 
#line 478 
    ;
    
#line 475 
    if (pdata != (struct macb_platform_data *)0) 
#line 476 
                                                 (bp->mii_bus)->phy_mask = pdata->phy_mask; else ;
    
#line 478 
    err = mdiobus_register(bp->mii_bus);
  }
  
#line 481 
  if (err != 0) 
#line 482 
                goto err_out_free_mdio_irq; else ;
  
#line 484 
  err = macb_mii_probe(bp->dev);
  
#line 485 
  if (err != 0) 
#line 486 
                goto err_out_unregister_bus; else ;
  
#line 488 
  __retres = 0;
  
#line 488 
  goto return_label;
  err_out_unregister_bus: 
#line 490 
  ;
  
#line 491 
  mdiobus_unregister(bp->mii_bus);
  err_out_free_mdio_irq: 
#line 492 
  ;
  
#line 493 
  kfree((void const *)(bp->mii_bus)->irq);
  err_out_free_mdiobus: 
#line 494 
  ;
  
#line 495 
  mdiobus_free(bp->mii_bus);
  err_out: 
#line 496 
  ;
  
#line 497 
  __retres = err;
  return_label: 
#line 497 
                return __retres;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_update_stats(struct macb *bp)
{
  u32 tmp_0;
  
#line 502 
  u32 *p = & bp->hw_stats.macb.rx_pause_frames;
  
#line 503 
  u32 *end = & bp->hw_stats.macb.tx_pause_frames + 1U;
  
#line 504 
  int offset = 60;
  {
    
#line 506 
    int __ret_warn_on = (long)end - (long)p != 84L;
    
#line 506 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 506 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c",506); else ;
    
#line 506 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 508 
  goto ldv_45989;
  ldv_45988: 
#line 509 
  ;
  
#line 509 
  tmp_0 = (*(bp->macb_reg_readl))(bp,offset);
  
#line 509 
  *p += tmp_0;
  
#line 508 
  p += 1;
  
#line 508 
  offset += 4;
  ldv_45989: 
#line 509 
  ;
  
#line 508 
  if (p < end) 
#line 510 
               goto ldv_45988; else 
#line 513 
                                    goto ldv_45990;
  ldv_45990: 
#line 514 
  ;
  
#line 515 
  return;
}


#line 512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_halt_tx(struct macb *bp)
{
  int __retres;
  unsigned long halt_time;
  unsigned long timeout;
  u32 status;
  u32 tmp;
  unsigned long tmp_0;
  int tmp_1;
  
#line 517 
  tmp = (*(bp->macb_reg_readl))(bp,0);
  
#line 517 
  ;
  
#line 517 
  (*(bp->macb_reg_writel))(bp,0,tmp | 1024U);
  
#line 519 
  tmp_0 = usecs_to_jiffies(1230U);
  
#line 519 
  timeout = tmp_0 + jiffies;
  ldv_46003: 
#line 520 
  ;
  
#line 521 
  halt_time = jiffies;
  
#line 522 
  status = (*(bp->macb_reg_readl))(bp,20);
  
#line 523 
  if ((status & 8U) == 0U) {
    
#line 524 
    __retres = 0;
    
#line 524 
    goto return_label;
  }
  else ;
  
#line 526 
  usleep_range(10UL,250UL);
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 527 
    tmp_1 = 1;
  }
  
#line 527 
  if (tmp_1 != 0) {
    int tmp_2;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 527 
      tmp_2 = 1;
    }
    
#line 527 
    if (tmp_2 != 0) {
      
#line 527 
      if ((long)(halt_time - timeout) < 0L) 
#line 529 
                                            goto ldv_46003; else 
#line 532 
                                                                 goto ldv_46004;
    }
    else 
#line 532 
         goto ldv_46004;
  }
  else 
#line 532 
       goto ldv_46004;
  ldv_46004: 
#line 533 
  ;
  
#line 529 
  __retres = -110;
  return_label: 
#line 529 
                return __retres;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_tx_unmap(struct macb *bp, struct macb_tx_skb *tx_skb)
{
  
#line 534 
  if (tx_skb->mapping != 0ULL) {
    
#line 535 
    if ((int)tx_skb->mapped_as_page != 0) 
#line 536 
                                          dma_unmap_page(& (bp->pdev)->dev,tx_skb->mapping,tx_skb->size,(enum dma_data_direction)DMA_TO_DEVICE); else 
                                                                    
#line 539 
                                                                    dma_unmap_single_attrs(& (bp->pdev)->dev,tx_skb->mapping,tx_skb->size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 541 
    tx_skb->mapping = 0ULL;
  }
  else ;
  
#line 544 
  if (tx_skb->skb != (struct sk_buff *)0) {
    
#line 545 
    dev_kfree_skb_any(tx_skb->skb);
    
#line 546 
    tx_skb->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 548 
  return;
}


#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_tx_error_task(struct work_struct *work)
{
  struct macb_queue *tmp;
  struct macb_tx_skb *tx_skb;
  struct macb_dma_desc *desc;
  struct sk_buff *skb;
  unsigned int tail;
  unsigned long flags;
  int tmp_0;
  u32 tmp_2;
  u32 tmp_3;
  {
    
#line 552 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 552 
    tmp = (struct macb_queue *)__mptr + 18446744073709551552U;
  }
  
#line 552 
  struct macb_queue *queue = tmp;
  
#line 554 
  struct macb *bp = queue->bp;
  
#line 571 
  ldv___ldv_spin_lock_74(& bp->lock);
  
#line 574 
  netif_tx_stop_all_queues(bp->dev);
  
#line 581 
  tmp_0 = macb_halt_tx(bp);
  
#line 581 
  if (tmp_0 != 0) 
#line 583 
                  netdev_err((struct net_device const *)bp->dev,"BUG: halt tx timed out\n"); else ;
  
#line 589 
  tail = queue->tx_tail;
  
#line 589 
  goto ldv_46028;
  ldv_46027: 
#line 590 
  ;
  {
    u32 ctrl;
    
#line 592 
    desc = macb_tx_desc(queue,tail);
    
#line 593 
    ctrl = desc->ctrl;
    
#line 594 
    tx_skb = macb_tx_skb(queue,tail);
    
#line 595 
    skb = tx_skb->skb;
    
#line 597 
    if (ctrl < (u32)0) {
      
#line 599 
      goto ldv_46024;
      ldv_46023: 
#line 600 
      ;
      
#line 600 
      macb_tx_unmap(bp,tx_skb);
      
#line 601 
      tail += 1U;
      
#line 602 
      tx_skb = macb_tx_skb(queue,tail);
      
#line 603 
      skb = tx_skb->skb;
      ldv_46024: 
#line 604 
      ;
      
#line 599 
      if (skb == (struct sk_buff *)0) 
#line 601 
                                      goto ldv_46023; else 
#line 604 
                                                           goto ldv_46025;
      ldv_46025: 
#line 605 
      ;
      
#line 609 
      if ((ctrl & 134217728U) == 0U) {
        
#line 612 
        bp->stats.tx_packets += 1UL;
        
#line 613 
        bp->stats.tx_bytes += (unsigned long)skb->len;
      }
      else ;
    }
    else {
      
#line 621 
      if ((ctrl & 134217728U) != 0U) 
#line 622 
                                     netdev_err((struct net_device const *)bp->dev,"BUG: TX buffers exhausted mid-frame\n"); else ;
      
#line 625 
      desc->ctrl = ctrl | 2147483648U;
    }
    
#line 628 
    macb_tx_unmap(bp,tx_skb);
  }
  
#line 589 
  tail += 1U;
  ldv_46028: 
#line 590 
  ;
  
#line 589 
  if (queue->tx_head != tail) 
#line 591 
                              goto ldv_46027; else 
#line 594 
                                                   goto ldv_46029;
  ldv_46029: 
#line 595 
  ;
  
#line 632 
  desc = macb_tx_desc(queue,0U);
  
#line 633 
  desc->addr = 0U;
  
#line 634 
  desc->ctrl = 2147483648U;
  
#line 635 
  ldv_inline_asm();
  
#line 640 
  (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->TBQP,(unsigned int)queue->tx_ring_dma);
  
#line 642 
  queue->tx_head = 0U;
  
#line 643 
  queue->tx_tail = 0U;
  
#line 646 
  tmp_2 = (*(bp->macb_reg_readl))(bp,20);
  
#line 646 
  ;
  
#line 646 
  (*(bp->macb_reg_writel))(bp,20,tmp_2);
  
#line 647 
  (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IER,240U);
  
#line 650 
  netif_tx_start_all_queues(bp->dev);
  
#line 651 
  tmp_3 = (*(bp->macb_reg_readl))(bp,0);
  
#line 651 
  ;
  
#line 651 
  (*(bp->macb_reg_writel))(bp,0,tmp_3 | 512U);
  
#line 653 
  ldv_spin_unlock_irqrestore_75(& bp->lock,flags);
  
#line 654 
  return;
}


#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_tx_interrupt(struct macb_queue *queue)
{
  unsigned int tail;
  unsigned int head;
  u32 status;
  bool tmp_0;
  
#line 661 
  struct macb *bp = queue->bp;
  
#line 662 
  u16 queue_index = (unsigned short)(((long)queue - (long)(& bp->queues)) / 144L);
  
#line 664 
  status = (*(bp->macb_reg_readl))(bp,20);
  
#line 665 
  (*(bp->macb_reg_writel))(bp,20,status);
  
#line 667 
  if ((bp->caps & 1U) != 0U) 
#line 668 
                             (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->ISR,128U); else ;
  
#line 673 
  head = queue->tx_head;
  
#line 674 
  tail = queue->tx_tail;
  
#line 674 
  goto ldv_46048;
  ldv_46047: 
#line 675 
  ;
  {
    struct macb_tx_skb *tx_skb;
    struct sk_buff *skb;
    struct macb_dma_desc *desc;
    u32 ctrl;
    
#line 680 
    desc = macb_tx_desc(queue,tail);
    
#line 681 
    ldv_inline_asm();
    
#line 685 
    ctrl = desc->ctrl;
    
#line 690 
    if (ctrl >= (u32)0) 
#line 691 
                        goto ldv_46043; else ;
    ldv_46046: 
#line 692 
    ;
    
#line 695 
    tx_skb = macb_tx_skb(queue,tail);
    
#line 696 
    skb = tx_skb->skb;
    
#line 699 
    if (skb != (struct sk_buff *)0) {
      
#line 702 
      bp->stats.tx_packets += 1UL;
      
#line 703 
      bp->stats.tx_bytes += (unsigned long)skb->len;
    }
    else ;
    
#line 707 
    macb_tx_unmap(bp,tx_skb);
    
#line 713 
    if (skb != (struct sk_buff *)0) 
#line 714 
                                    goto ldv_46045; else ;
    
#line 694 
    tail += 1U;
    
#line 695 
    goto ldv_46046;
    ldv_46045: 
#line 696 
    ;
  }
  
#line 674 
  tail += 1U;
  ldv_46048: 
#line 675 
  ;
  
#line 674 
  if (tail != head) 
#line 676 
                    goto ldv_46047; else 
#line 679 
                                         goto ldv_46043;
  ldv_46043: 
#line 680 
  ;
  
#line 718 
  queue->tx_tail = tail;
  
#line 719 
  tmp_0 = __netif_subqueue_stopped((struct net_device const *)bp->dev,(unsigned short)((int)queue_index));
  
#line 719 
  if ((int)tmp_0 != 0) {
    
#line 719 
    if (((queue->tx_head - queue->tx_tail) & 127U) <= 96U) 
#line 722 
                                                           netif_wake_subqueue(bp->dev,(unsigned short)((int)queue_index)); else ;
  }
  else ;
  
#line 723 
  return;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_rx_refill(struct macb *bp)
{
  unsigned int entry;
  struct sk_buff *skb;
  dma_addr_t paddr;
  
#line 731 
  goto ldv_46057;
  ldv_46056: 
#line 732 
  ;
  
#line 732 
  entry = macb_rx_ring_wrap(bp->rx_prepared_head);
  
#line 733 
  ldv_inline_asm();
  
#line 737 
  bp->rx_prepared_head += 1U;
  
#line 739 
  if (*(bp->rx_skbuff + entry) == (struct sk_buff *)0) {
    int tmp;
    
#line 741 
    skb = netdev_alloc_skb(bp->dev,(unsigned int)bp->rx_buffer_size);
    
#line 742 
    if ((long)(skb == (struct sk_buff *)0) != 0L) {
      
#line 743 
      netdev_err((struct net_device const *)bp->dev,"Unable to allocate sk_buff\n");
      
#line 745 
      goto ldv_46055;
    }
    else ;
    
#line 749 
    paddr = dma_map_single_attrs(& (bp->pdev)->dev,(void *)skb->data,bp->rx_buffer_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 751 
    tmp = dma_mapping_error(& (bp->pdev)->dev,paddr);
    
#line 751 
    if (tmp != 0) {
      
#line 752 
      consume_skb(skb);
      
#line 753 
      goto ldv_46055;
    }
    else ;
    
#line 756 
    *(bp->rx_skbuff + entry) = skb;
    
#line 758 
    if (entry == 511U) 
#line 759 
                       paddr |= 2ULL; else ;
    
#line 760 
    (bp->rx_ring + entry)->addr = (unsigned int)paddr;
    
#line 761 
    (bp->rx_ring + entry)->ctrl = 0U;
    
#line 764 
    skb_reserve(skb,0);
  }
  else {
    
#line 766 
    (bp->rx_ring + entry)->addr &= 4294967294U;
    
#line 767 
    (bp->rx_ring + entry)->ctrl = 0U;
  }
  ldv_46057: 
#line 769 
  ;
  
#line 731 
  if ((((bp->rx_tail - bp->rx_prepared_head) - 1U) & 511U) != 0U) 
#line 733 
                                                                  goto ldv_46056; else 
                                                                    
#line 736 
                                                                    goto ldv_46055;
  ldv_46055: 
#line 737 
  ;
  
#line 738 
  ldv_inline_asm();
  
#line 776 
  return;
}


#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void discard_partial_frame(struct macb *bp, unsigned int begin, unsigned int end)
{
  unsigned int frag;
  
#line 784 
  frag = begin;
  
#line 784 
  goto ldv_46067;
  ldv_46066: 
#line 785 
  ;
  {
    
#line 785 
    struct macb_dma_desc *desc = macb_rx_desc(bp,frag);
    
#line 786 
    desc->addr &= 4294967294U;
  }
  
#line 784 
  frag += 1U;
  ldv_46067: 
#line 785 
  ;
  
#line 784 
  if (frag != end) 
#line 786 
                   goto ldv_46066; else 
#line 789 
                                        goto ldv_46068;
  ldv_46068: 
#line 790 
  ;
  
#line 791 
  ldv_inline_asm();
  
#line 792 
  return;
}


#line 799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int gem_rx(struct macb *bp, int budget)
{
  unsigned int len;
  unsigned int entry;
  struct sk_buff *skb;
  struct macb_dma_desc *desc;
  
#line 805 
  int count = 0;
  
#line 807 
  goto ldv_46083;
  ldv_46082: 
#line 808 
  ;
  {
    u32 addr;
    u32 ctrl;
    
#line 810 
    entry = macb_rx_ring_wrap(bp->rx_tail);
    
#line 811 
    desc = bp->rx_ring + entry;
    
#line 812 
    ldv_inline_asm();
    
#line 816 
    addr = desc->addr;
    
#line 817 
    ctrl = desc->ctrl;
    
#line 819 
    if ((addr & 1U) == 0U) 
#line 820 
                           goto ldv_46080; else ;
    
#line 822 
    bp->rx_tail += 1U;
    
#line 823 
    count += 1;
    
#line 825 
    if ((ctrl & 16384U) == 0U || (ctrl & 32768U) == 0U) {
      
#line 826 
      netdev_err((struct net_device const *)bp->dev,"not whole frame pointed by descriptor\n");
      
#line 828 
      bp->stats.rx_dropped += 1UL;
      
#line 829 
      goto ldv_46080;
    }
    else ;
    
#line 831 
    skb = *(bp->rx_skbuff + entry);
    
#line 832 
    if ((long)(skb == (struct sk_buff *)0) != 0L) {
      
#line 833 
      netdev_err((struct net_device const *)bp->dev,"inconsistent Rx descriptor chain\n");
      
#line 835 
      bp->stats.rx_dropped += 1UL;
      
#line 836 
      goto ldv_46080;
    }
    else ;
    
#line 839 
    *(bp->rx_skbuff + entry) = (struct sk_buff *)0;
    
#line 840 
    len = bp->rx_frm_len_mask & ctrl;
    
#line 844 
    skb_put(skb,len);
    
#line 845 
    addr &= 4294967292U;
    
#line 846 
    dma_unmap_single_attrs(& (bp->pdev)->dev,(unsigned long long)addr,bp->rx_buffer_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 849 
    skb->protocol = eth_type_trans(skb,bp->dev);
    
#line 850 
    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 851 
    if ((((bp->dev)->features & 17179869184ULL) != 0ULL && ((bp->dev)->flags & 256U) == 0U) && (ctrl & 8388608U) != 0U) 
      
#line 854 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
    
#line 856 
    bp->stats.rx_packets += 1UL;
    
#line 857 
    bp->stats.rx_bytes += (unsigned long)skb->len;
    
#line 868 
    netif_receive_skb(skb);
  }
  ldv_46083: 
#line 870 
  ;
  
#line 807 
  if (count < budget) 
#line 809 
                      goto ldv_46082; else 
#line 812 
                                           goto ldv_46080;
  ldv_46080: 
#line 813 
  ;
  
#line 871 
  gem_rx_refill(bp);
  
#line 873 
  return count;
}


#line 876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_rx_frame(struct macb *bp, unsigned int first_frag, unsigned int last_frag)
{
  int __retres;
  unsigned int len;
  unsigned int frag;
  unsigned int offset;
  struct sk_buff *skb;
  struct macb_dma_desc *desc;
  
#line 885 
  desc = macb_rx_desc(bp,last_frag);
  
#line 886 
  len = desc->ctrl & bp->rx_frm_len_mask;
  
#line 901 
  skb = netdev_alloc_skb(bp->dev,len);
  
#line 902 
  if (skb == (struct sk_buff *)0) {
    
#line 903 
    bp->stats.rx_dropped += 1UL;
    
#line 904 
    frag = first_frag;
    ldv_46096: 
#line 905 
    ;
    
#line 905 
    desc = macb_rx_desc(bp,frag);
    
#line 906 
    desc->addr &= 4294967294U;
    
#line 907 
    if (frag == last_frag) 
#line 908 
                           goto ldv_46095; else ;
    
#line 904 
    frag += 1U;
    
#line 905 
    goto ldv_46096;
    ldv_46095: 
#line 906 
    ;
    
#line 907 
    ldv_inline_asm();
    
#line 914 
    __retres = 1;
    
#line 914 
    goto return_label;
  }
  else ;
  
#line 917 
  offset = 0U;
  
#line 918 
  len = len;
  
#line 919 
  skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 920 
  skb_put(skb,len);
  
#line 922 
  frag = first_frag;
  ldv_46099: 
#line 923 
  ;
  {
    void *tmp_1;
    
#line 923 
    unsigned int frag_len = (unsigned int)bp->rx_buffer_size;
    
#line 925 
    if (offset + frag_len > len) {
      
#line 926 
      if ((long)(frag != last_frag) != 0L) {
        
#line 928 
        ldv_inline_asm();
        
#line 926 
        ;
      }
      else ;
      
#line 927 
      frag_len = len - offset;
    }
    else ;
    
#line 929 
    ;
    
#line 930 
    tmp_1 = macb_rx_buffer(bp,frag);
    
#line 929 
    ;
    
#line 929 
    ;
    
#line 929 
    skb_copy_to_linear_data_offset(skb,(int)offset,(void const *)tmp_1,frag_len);
    
#line 931 
    offset = (unsigned int)bp->rx_buffer_size + offset;
    
#line 932 
    desc = macb_rx_desc(bp,frag);
    
#line 933 
    desc->addr &= 4294967294U;
    
#line 935 
    if (frag == last_frag) 
#line 936 
                           goto ldv_46098; else ;
  }
  
#line 922 
  frag += 1U;
  
#line 922 
  goto ldv_46099;
  ldv_46098: 
#line 923 
  ;
  
#line 924 
  ldv_inline_asm();
  
#line 942 
  __skb_pull(skb,0U);
  
#line 943 
  skb->protocol = eth_type_trans(skb,bp->dev);
  
#line 945 
  bp->stats.rx_packets += 1UL;
  
#line 946 
  bp->stats.rx_bytes += (unsigned long)skb->len;
  
#line 949 
  netif_receive_skb(skb);
  
#line 951 
  __retres = 0;
  return_label: 
#line 951 
                return __retres;
}


#line 954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_rx(struct macb *bp, int budget)
{
  unsigned int tail;
  
#line 956 
  int received = 0;
  
#line 958 
  int first_frag = -1;
  
#line 960 
  tail = bp->rx_tail;
  
#line 960 
  goto ldv_46114;
  ldv_46113: 
#line 961 
  ;
  {
    u32 addr;
    u32 ctrl;
    
#line 961 
    struct macb_dma_desc *desc = macb_rx_desc(bp,tail);
    
#line 963 
    ldv_inline_asm();
    
#line 967 
    addr = desc->addr;
    
#line 968 
    ctrl = desc->ctrl;
    
#line 970 
    if ((addr & 1U) == 0U) 
#line 971 
                           goto ldv_46111; else ;
    
#line 973 
    if ((ctrl & 16384U) != 0U) {
      
#line 974 
      if (first_frag != -1) 
#line 975 
                            discard_partial_frame(bp,(unsigned int)first_frag,tail); else ;
      
#line 976 
      first_frag = (int)tail;
    }
    else ;
    
#line 979 
    if ((ctrl & 32768U) != 0U) {
      int dropped;
      
#line 981 
      if ((long)(first_frag == -1) != 0L) {
        
#line 983 
        ldv_inline_asm();
        
#line 981 
        ;
      }
      else ;
      
#line 983 
      dropped = macb_rx_frame(bp,(unsigned int)first_frag,tail);
      
#line 984 
      first_frag = -1;
      
#line 985 
      if (dropped == 0) {
        
#line 986 
        received += 1;
        
#line 987 
        budget -= 1;
      }
      else ;
    }
    else ;
  }
  
#line 960 
  tail += 1U;
  ldv_46114: 
#line 961 
  ;
  
#line 960 
  if (budget > 0) 
#line 962 
                  goto ldv_46113; else 
#line 965 
                                       goto ldv_46111;
  ldv_46111: 
#line 966 
  ;
  
#line 992 
  if (first_frag != -1) 
#line 993 
                        bp->rx_tail = (unsigned int)first_frag; else 
                                                                  
#line 995 
                                                                  bp->rx_tail = tail;
  
#line 997 
  return received;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_poll(struct napi_struct *napi, int budget)
{
  struct macb *tmp;
  int work_done;
  u32 status;
  {
    
#line 1002 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1002 
    tmp = (struct macb *)__mptr + 18446744073709550272U;
  }
  
#line 1002 
  struct macb *bp = tmp;
  
#line 1006 
  status = (*(bp->macb_reg_readl))(bp,32);
  
#line 1007 
  (*(bp->macb_reg_writel))(bp,32,status);
  
#line 1009 
  work_done = 0;
  
#line 1014 
  work_done = (*(bp->macbgem_ops.mog_rx))(bp,budget);
  
#line 1015 
  if (work_done < budget) {
    
#line 1016 
    napi_complete(napi);
    
#line 1019 
    status = (*(bp->macb_reg_readl))(bp,32);
    
#line 1020 
    if (status != 0U) {
      
#line 1021 
      if ((bp->caps & 1U) != 0U) 
#line 1022 
                                 (*(bp->macb_reg_writel))(bp,36,2U); else ;
      
#line 1023 
      napi_reschedule(napi);
    }
    else 
#line 1025 
         (*(bp->macb_reg_writel))(bp,40,1030U);
  }
  else ;
  
#line 1031 
  return work_done;
}


#line 1034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static irqreturn_t macb_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 status;
  u32 ctrl;
  int tmp_0;
  bool tmp;
  
#line 1036 
  struct macb_queue *queue = (struct macb_queue *)dev_id;
  
#line 1037 
  struct macb *bp = queue->bp;
  
#line 1038 
  struct net_device *dev = bp->dev;
  
#line 1041 
  status = (*((queue->bp)->macb_reg_readl))(queue->bp,(int)queue->ISR);
  
#line 1043 
  if ((long)(status == 0U) != 0L) {
    
#line 1044 
    __retres = IRQ_NONE;
    
#line 1044 
    goto return_label;
  }
  else ;
  
#line 1046 
  ldv_spin_lock_76(& bp->lock);
  
#line 1048 
  goto ldv_46138;
  ldv_46137: 
#line 1049 
  ;
  
#line 1050 
  tmp = netif_running((struct net_device const *)dev);
  
#line 1050 
  if (tmp) 
#line 1050 
           tmp_0 = 0; else 
#line 1050 
                           tmp_0 = 1;
  
#line 1050 
  if ((long)tmp_0 != 0L) {
    
#line 1051 
    (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IDR,4294967295U);
    
#line 1052 
    goto ldv_46134;
  }
  else ;
  
#line 1059 
  if ((status & 1030U) != 0U) {
    bool tmp_1;
    
#line 1067 
    (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IDR,1030U);
    
#line 1068 
    if ((bp->caps & 1U) != 0U) 
#line 1069 
                               (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->ISR,2U); else ;
    
#line 1071 
    tmp_1 = napi_schedule_prep(& bp->napi);
    
#line 1071 
    if ((int)tmp_1 != 0) 
#line 1073 
                         __napi_schedule(& bp->napi); else ;
  }
  else ;
  
#line 1077 
  if ((long)((status & 112U) != 0U) != 0L) {
    
#line 1078 
    (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IDR,240U);
    
#line 1079 
    ldv_schedule_work_77(& queue->tx_error_task);
    
#line 1081 
    if ((bp->caps & 1U) != 0U) 
#line 1082 
                               (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->ISR,112U); else ;
    
#line 1084 
    goto ldv_46134;
  }
  else ;
  
#line 1087 
  if ((status & 128U) != 0U) 
#line 1088 
                             macb_tx_interrupt(queue); else ;
  
#line 1101 
  if ((status & 4U) != 0U) {
    
#line 1102 
    ctrl = (*(bp->macb_reg_readl))(bp,0);
    
#line 1103 
    (*(bp->macb_reg_writel))(bp,0,ctrl & 4294967291U);
    
#line 1104 
    (*(bp->macb_reg_writel))(bp,0,ctrl | 4U);
    
#line 1106 
    if ((bp->caps & 1U) != 0U) 
#line 1107 
                               (*(bp->macb_reg_writel))(bp,36,4U); else ;
  }
  else ;
  
#line 1110 
  if ((status & 1024U) != 0U) {
    bool tmp_2;
    
#line 1112 
    tmp_2 = macb_is_gem(bp);
    
#line 1112 
    if ((int)tmp_2 != 0) 
#line 1113 
                         bp->hw_stats.gem.rx_overruns += 1U; else 
#line 1115 
                                                                  bp->hw_stats.macb.rx_overruns += 1U;
    
#line 1117 
    if ((bp->caps & 1U) != 0U) 
#line 1118 
                               (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->ISR,1024U); else ;
  }
  else ;
  
#line 1121 
  if ((status & 2048U) != 0U) {
    
#line 1127 
    netdev_err((struct net_device const *)dev,"DMA bus error: HRESP not OK\n");
    
#line 1129 
    if ((bp->caps & 1U) != 0U) 
#line 1130 
                               (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->ISR,2048U); else ;
  }
  else ;
  
#line 1133 
  status = (*((queue->bp)->macb_reg_readl))(queue->bp,(int)queue->ISR);
  ldv_46138: 
#line 1134 
  ;
  
#line 1048 
  if (status != 0U) 
#line 1050 
                    goto ldv_46137; else 
#line 1053 
                                         goto ldv_46134;
  ldv_46134: 
#line 1054 
  ;
  
#line 1136 
  ldv_spin_unlock_78(& bp->lock);
  
#line 1138 
  __retres = IRQ_HANDLED;
  return_label: 
#line 1138 
                return __retres;
}


#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_poll_controller(struct net_device *dev)
{
  struct macb_queue *queue;
  unsigned long flags;
  unsigned int q;
  int tmp_1;
  
#line 1148 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 1153 
  flags = arch_local_irq_save();
  
#line 1153 
  trace_hardirqs_off();
  
#line 1154 
  q = 0U;
  
#line 1154 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1154 
  goto ldv_46150;
  ldv_46149: 
#line 1155 
  ;
  
#line 1155 
  macb_interrupt(dev->irq,(void *)queue);
  
#line 1154 
  q += 1U;
  
#line 1154 
  queue += 1;
  ldv_46150: 
#line 1155 
  ;
  
#line 1154 
  if (bp->num_queues > q) 
#line 1156 
                          goto ldv_46149; else 
#line 1159 
                                               goto ldv_46151;
  ldv_46151: 
#line 1160 
  ;
  {
    unsigned long __dummy_2;
    unsigned long __dummy2_2;
    
  }
  
#line 1156 
  tmp_1 = arch_irqs_disabled_flags(flags);
  
#line 1156 
  if (tmp_1 != 0) {
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 1156 
    arch_local_irq_restore(flags);
    
#line 1156 
    trace_hardirqs_off();
  }
  else {
    
#line 1156 
    trace_hardirqs_on();
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 1156 
    arch_local_irq_restore(flags);
  }
  
#line 1158 
  return;
}


#line 1160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static unsigned int macb_tx_map(struct macb *bp, struct macb_queue *queue, struct sk_buff *skb)
{
  unsigned int __retres;
  dma_addr_t mapping;
  unsigned int len;
  unsigned int entry;
  unsigned int i;
  struct macb_dma_desc *desc;
  unsigned int offset;
  unsigned int size;
  unsigned int f;
  unsigned char *tmp;
  u32 ctrl;
  unsigned int tmp_1;
  int tmp_2;
  
#line 1165 
  unsigned int tx_head = queue->tx_head;
  
#line 1166 
  struct macb_tx_skb *tx_skb = (struct macb_tx_skb *)0;
  
#line 1168 
  unsigned int count = 0U;
  
#line 1169 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1169 
  unsigned int nr_frags = (unsigned int)((struct skb_shared_info *)tmp)->nr_frags;
  
#line 1170 
  unsigned int eof = 1U;
  
#line 1174 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 1175 
  offset = 0U;
  
#line 1176 
  goto ldv_46186;
  ldv_46185: 
#line 1177 
  ;
  {
    unsigned int tmp_0;
    
#line 1177 
    unsigned int _min1 = len;
    
#line 1177 
    unsigned int _min2 = bp->max_tx_length;
    
#line 1177 
    if (_min1 < _min2) 
#line 1177 
                       tmp_0 = _min1; else 
#line 1177 
                                           tmp_0 = _min2;
    
#line 1177 
    tmp_1 = tmp_0;
  }
  
#line 1177 
  size = tmp_1;
  
#line 1178 
  entry = macb_tx_ring_wrap(tx_head);
  
#line 1179 
  tx_skb = queue->tx_skb + entry;
  
#line 1181 
  mapping = dma_map_single_attrs(& (bp->pdev)->dev,(void *)(skb->data + offset),(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1184 
  tmp_2 = dma_mapping_error(& (bp->pdev)->dev,mapping);
  
#line 1184 
  if (tmp_2 != 0) 
#line 1185 
                  goto dma_error; else ;
  
#line 1188 
  tx_skb->skb = (struct sk_buff *)0;
  
#line 1189 
  tx_skb->mapping = mapping;
  
#line 1190 
  tx_skb->size = (unsigned long)size;
  
#line 1191 
  tx_skb->mapped_as_page = (_Bool)0;
  
#line 1193 
  len -= size;
  
#line 1194 
  offset += size;
  
#line 1195 
  count += 1U;
  
#line 1196 
  tx_head += 1U;
  ldv_46186: 
#line 1197 
  ;
  
#line 1176 
  if (len != 0U) 
#line 1178 
                 goto ldv_46185; else 
#line 1181 
                                      goto ldv_46187;
  ldv_46187: 
#line 1182 
  ;
  
#line 1200 
  f = 0U;
  
#line 1200 
  goto ldv_46196;
  ldv_46195: 
#line 1201 
  ;
  {
    unsigned char *tmp_3;
    unsigned int tmp_5;
    int tmp_6;
    
#line 1201 
    tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1201 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_3)->frags[f]);
    
#line 1203 
    len = skb_frag_size(frag);
    
#line 1204 
    offset = 0U;
    
#line 1205 
    goto ldv_46193;
    ldv_46192: 
#line 1206 
    ;
    {
      unsigned int tmp_4;
      
#line 1206 
      unsigned int _min1_0 = len;
      
#line 1206 
      unsigned int _min2_0 = bp->max_tx_length;
      
#line 1206 
      if (_min1_0 < _min2_0) 
#line 1206 
                             tmp_4 = _min1_0; else 
#line 1206 
                                                   tmp_4 = _min2_0;
      
#line 1206 
      tmp_5 = tmp_4;
    }
    
#line 1206 
    size = tmp_5;
    
#line 1207 
    entry = macb_tx_ring_wrap(tx_head);
    
#line 1208 
    tx_skb = queue->tx_skb + entry;
    
#line 1210 
    mapping = skb_frag_dma_map(& (bp->pdev)->dev,frag,(unsigned long)offset,(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 1212 
    tmp_6 = dma_mapping_error(& (bp->pdev)->dev,mapping);
    
#line 1212 
    if (tmp_6 != 0) 
#line 1213 
                    goto dma_error; else ;
    
#line 1216 
    tx_skb->skb = (struct sk_buff *)0;
    
#line 1217 
    tx_skb->mapping = mapping;
    
#line 1218 
    tx_skb->size = (unsigned long)size;
    
#line 1219 
    tx_skb->mapped_as_page = (_Bool)1;
    
#line 1221 
    len -= size;
    
#line 1222 
    offset += size;
    
#line 1223 
    count += 1U;
    
#line 1224 
    tx_head += 1U;
    ldv_46193: 
#line 1225 
    ;
    
#line 1205 
    if (len != 0U) 
#line 1207 
                   goto ldv_46192; else 
#line 1210 
                                        goto ldv_46194;
    ldv_46194: 
#line 1211 
    ;
  }
  
#line 1200 
  f += 1U;
  ldv_46196: 
#line 1201 
  ;
  
#line 1200 
  if (f < nr_frags) 
#line 1202 
                    goto ldv_46195; else 
#line 1205 
                                         goto ldv_46197;
  ldv_46197: 
#line 1206 
  ;
  
#line 1229 
  if ((long)(tx_skb == (struct macb_tx_skb *)0) != 0L) {
    
#line 1230 
    netdev_err((struct net_device const *)bp->dev,"BUG! empty skb!\n");
    
#line 1231 
    __retres = 0U;
    
#line 1231 
    goto return_label;
  }
  else ;
  
#line 1235 
  tx_skb->skb = skb;
  
#line 1244 
  i = tx_head;
  
#line 1245 
  entry = macb_tx_ring_wrap(i);
  
#line 1246 
  ctrl = 2147483648U;
  
#line 1247 
  desc = queue->tx_ring + entry;
  
#line 1248 
  desc->ctrl = ctrl;
  ldv_46198: 
#line 1249 
  ;
  
#line 1251 
  i -= 1U;
  
#line 1252 
  entry = macb_tx_ring_wrap(i);
  
#line 1253 
  tx_skb = queue->tx_skb + entry;
  
#line 1254 
  desc = queue->tx_ring + entry;
  
#line 1256 
  ctrl = (unsigned int)tx_skb->size;
  
#line 1257 
  if (eof != 0U) {
    
#line 1258 
    ctrl |= 32768U;
    
#line 1259 
    eof = 0U;
  }
  else ;
  
#line 1261 
  if ((long)(entry == 127U) != 0L) 
#line 1262 
                                   ctrl |= 1073741824U; else ;
  
#line 1265 
  desc->addr = (unsigned int)tx_skb->mapping;
  
#line 1266 
  ldv_inline_asm();
  
#line 1270 
  desc->ctrl = ctrl;
  
#line 1271 
  if (queue->tx_head != i) 
#line 1273 
                           goto ldv_46198; else 
#line 1276 
                                                goto ldv_46199;
  ldv_46199: 
#line 1277 
  ;
  
#line 1273 
  queue->tx_head = tx_head;
  
#line 1275 
  __retres = count;
  
#line 1275 
  goto return_label;
  dma_error: 
#line 1277 
  ;
  
#line 1278 
  netdev_err((struct net_device const *)bp->dev,"TX DMA map failed\n");
  
#line 1280 
  i = queue->tx_head;
  
#line 1280 
  goto ldv_46201;
  ldv_46200: 
#line 1281 
  ;
  
#line 1281 
  tx_skb = macb_tx_skb(queue,i);
  
#line 1283 
  macb_tx_unmap(bp,tx_skb);
  
#line 1280 
  i += 1U;
  ldv_46201: 
#line 1281 
  ;
  
#line 1280 
  if (i != tx_head) 
#line 1282 
                    goto ldv_46200; else 
#line 1285 
                                         goto ldv_46202;
  ldv_46202: 
#line 1286 
  ;
  
#line 1286 
  __retres = 0U;
  return_label: 
#line 1286 
                return __retres;
}


#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  unsigned int count;
  unsigned int nr_frags;
  unsigned int frag_size;
  unsigned int f;
  unsigned int tmp_1;
  unsigned char *tmp_2;
  unsigned char *tmp_3;
  unsigned int tmp_4;
  u32 tmp_5;
  
#line 1291 
  u16 queue_index = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 1292 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1293 
  struct macb_queue *queue = & bp->queues[(int)queue_index];
  
#line 1310 
  tmp_1 = skb_headlen((struct sk_buff const *)skb);
  
#line 1310 
  count = ((tmp_1 + bp->max_tx_length) + 4294967295U) / bp->max_tx_length;
  
#line 1311 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1311 
  nr_frags = (unsigned int)((struct skb_shared_info *)tmp_2)->nr_frags;
  
#line 1312 
  f = 0U;
  
#line 1312 
  goto ldv_46216;
  ldv_46215: 
#line 1313 
  ;
  
#line 1313 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1313 
  frag_size = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_3)->frags[f]));
  
#line 1314 
  count = ((bp->max_tx_length + frag_size) + 4294967295U) / bp->max_tx_length + count;
  
#line 1312 
  f += 1U;
  ldv_46216: 
#line 1313 
  ;
  
#line 1312 
  if (f < nr_frags) 
#line 1314 
                    goto ldv_46215; else 
#line 1317 
                                         goto ldv_46217;
  ldv_46217: 
#line 1318 
  ;
  
#line 1317 
  ldv___ldv_spin_lock_79(& bp->lock);
  
#line 1320 
  if ((((queue->tx_tail - queue->tx_head) - 1U) & 127U) < count) {
    
#line 1321 
    netif_stop_subqueue(dev,(unsigned short)((int)queue_index));
    
#line 1322 
    ldv_spin_unlock_irqrestore_80(& bp->lock,flags);
    {
      
#line 1323 
      struct _ddebug descriptor = {.modname = "macb", .function = "macb_start_xmit", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "tx_head = %u, tx_tail = %u\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1324U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1323 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1323 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"tx_head = %u, tx_tail = %u\n",queue->tx_head,queue->tx_tail); else ;
    }
    
#line 1325 
    __retres = 16;
    
#line 1325 
    goto return_label;
  }
  else ;
  
#line 1329 
  tmp_4 = macb_tx_map(bp,queue,skb);
  
#line 1329 
  if (tmp_4 == 0U) {
    
#line 1330 
    dev_kfree_skb_any(skb);
    
#line 1331 
    goto unlock;
  }
  else ;
  
#line 1333 
  ldv_inline_asm();
  
#line 1337 
  skb_tx_timestamp(skb);
  
#line 1339 
  tmp_5 = (*(bp->macb_reg_readl))(bp,0);
  
#line 1339 
  ;
  
#line 1339 
  (*(bp->macb_reg_writel))(bp,0,tmp_5 | 512U);
  
#line 1341 
  if ((((queue->tx_tail - queue->tx_head) - 1U) & 127U) == 0U) 
#line 1342 
                                                               netif_stop_subqueue(dev,(unsigned short)((int)queue_index)); else ;
  unlock: 
#line 1344 
  ;
  
#line 1345 
  ldv_spin_unlock_irqrestore_81(& bp->lock,flags);
  
#line 1347 
  __retres = 0;
  return_label: 
#line 1347 
                return __retres;
}


#line 1350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_init_rx_buffer_size(struct macb *bp, size_t size)
{
  int tmp_1;
  bool tmp_0;
  
#line 1352 
  tmp_0 = macb_is_gem(bp);
  
#line 1352 
  if (tmp_0) 
#line 1352 
             tmp_1 = 0; else 
#line 1352 
                             tmp_1 = 1;
  
#line 1352 
  if (tmp_1) 
#line 1353 
             bp->rx_buffer_size = 128UL;
  else {
    
#line 1355 
    bp->rx_buffer_size = size;
    
#line 1357 
    if ((bp->rx_buffer_size & 63UL) != 0UL) {
      unsigned long tmp;
      {
        
#line 1358 
        struct _ddebug descriptor = {.modname = "macb", .function = "macb_init_rx_buffer_size", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "RX buffer must be multiple of %d bytes, expanding\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1360U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
        
#line 1358 
        if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1358 
                                                            __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"RX buffer must be multiple of %d bytes, expanding\n",64); else ;
      }
      {
        
#line 1362 
        int const __y = 64;
        
#line 1362 
        tmp = (bp->rx_buffer_size + 63UL) & 18446744073709551552UL;
      }
      
#line 1361 
      bp->rx_buffer_size = tmp;
    }
    else ;
  }
  {
    
#line 1366 
    struct _ddebug descriptor_0 = {.modname = "macb", .function = "macb_init_rx_buffer_size", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "mtu [%u] rx_buffer_size [%Zu]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1367U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1366 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1366 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)bp->dev,"mtu [%u] rx_buffer_size [%Zu]\n",(bp->dev)->mtu,bp->rx_buffer_size); else ;
  }
  
#line 1368 
  return;
}


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_free_rx_buffers(struct macb *bp)
{
  struct sk_buff *skb;
  struct macb_dma_desc *desc;
  dma_addr_t addr;
  int i;
  
#line 1377 
  if (bp->rx_skbuff == (struct sk_buff **)0) 
#line 1378 
                                             goto return_label; else ;
  
#line 1380 
  i = 0;
  
#line 1380 
  goto ldv_46239;
  ldv_46238: 
#line 1381 
  ;
  
#line 1381 
  skb = *(bp->rx_skbuff + i);
  
#line 1383 
  if (skb == (struct sk_buff *)0) 
#line 1384 
                                  goto ldv_46237; else ;
  
#line 1386 
  desc = bp->rx_ring + i;
  
#line 1387 
  addr = (unsigned long long)desc->addr & 4294967292ULL;
  
#line 1388 
  dma_unmap_single_attrs(& (bp->pdev)->dev,addr,bp->rx_buffer_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 1390 
  dev_kfree_skb_any(skb);
  
#line 1391 
  skb = (struct sk_buff *)0;
  ldv_46237: 
#line 1392 
  ;
  
#line 1380 
  i += 1;
  ldv_46239: 
#line 1381 
  ;
  
#line 1380 
  if (i <= 511) 
#line 1382 
                goto ldv_46238; else 
#line 1385 
                                     goto ldv_46240;
  ldv_46240: 
#line 1386 
  ;
  
#line 1394 
  kfree((void const *)bp->rx_skbuff);
  
#line 1395 
  bp->rx_skbuff = (struct sk_buff **)0;
  return_label: 
#line 1396 
                return;
}


#line 1398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_free_rx_buffers(struct macb *bp)
{
  
#line 1400 
  if (bp->rx_buffers != (void *)0) {
    
#line 1401 
    dma_free_attrs(& (bp->pdev)->dev,bp->rx_buffer_size * 512UL,bp->rx_buffers,bp->rx_buffers_dma,(struct dma_attrs *)0);
    
#line 1404 
    bp->rx_buffers = (void *)0;
  }
  else ;
  
#line 1406 
  return;
}


#line 1408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_free_consistent(struct macb *bp)
{
  struct macb_queue *queue;
  unsigned int q;
  
#line 1413 
  (*(bp->macbgem_ops.mog_free_rx_buffers))(bp);
  
#line 1414 
  if (bp->rx_ring != (struct macb_dma_desc *)0) {
    
#line 1415 
    dma_free_attrs(& (bp->pdev)->dev,4096UL,(void *)bp->rx_ring,bp->rx_ring_dma,(struct dma_attrs *)0);
    
#line 1417 
    bp->rx_ring = (struct macb_dma_desc *)0;
  }
  else ;
  
#line 1420 
  q = 0U;
  
#line 1420 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1420 
  goto ldv_46250;
  ldv_46249: 
#line 1421 
  ;
  
#line 1421 
  kfree((void const *)queue->tx_skb);
  
#line 1422 
  queue->tx_skb = (struct macb_tx_skb *)0;
  
#line 1423 
  if (queue->tx_ring != (struct macb_dma_desc *)0) {
    
#line 1424 
    dma_free_attrs(& (bp->pdev)->dev,1024UL,(void *)queue->tx_ring,queue->tx_ring_dma,(struct dma_attrs *)0);
    
#line 1426 
    queue->tx_ring = (struct macb_dma_desc *)0;
  }
  else ;
  
#line 1420 
  q += 1U;
  
#line 1420 
  queue += 1;
  ldv_46250: 
#line 1421 
  ;
  
#line 1420 
  if (bp->num_queues > q) 
#line 1422 
                          goto ldv_46249; else 
#line 1425 
                                               goto ldv_46251;
  ldv_46251: 
#line 1426 
  ;
  
#line 1427 
  return;
}


#line 1431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int gem_alloc_rx_buffers(struct macb *bp)
{
  int __retres;
  int size;
  
#line 1435 
  size = 4096;
  
#line 1436 
  bp->rx_skbuff = (struct sk_buff **)kzalloc((unsigned long)size,208U);
  
#line 1437 
  if (bp->rx_skbuff == (struct sk_buff **)0) {
    
#line 1438 
    __retres = -12;
    
#line 1438 
    goto return_label;
  }
  else {
    
#line 1440 
    struct _ddebug descriptor = {.modname = "macb", .function = "gem_alloc_rx_buffers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Allocated %d RX struct sk_buff entries at %p\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1442U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1440 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1440 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"Allocated %d RX struct sk_buff entries at %p\n",512,bp->rx_skbuff); else ;
  }
  
#line 1443 
  __retres = 0;
  return_label: 
#line 1443 
                return __retres;
}


#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_alloc_rx_buffers(struct macb *bp)
{
  int __retres;
  int size;
  
#line 1450 
  size = (int)(bp->rx_buffer_size * (size_t)512U);
  
#line 1451 
  bp->rx_buffers = dma_alloc_attrs(& (bp->pdev)->dev,(unsigned long)size,& bp->rx_buffers_dma,208U,(struct dma_attrs *)0);
  
#line 1453 
  if (bp->rx_buffers == (void *)0) {
    
#line 1454 
    __retres = -12;
    
#line 1454 
    goto return_label;
  }
  else {
    
#line 1456 
    struct _ddebug descriptor = {.modname = "macb", .function = "macb_alloc_rx_buffers", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Allocated RX buffers of %d bytes at %08lx (mapped %p)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1458U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1456 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1456 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"Allocated RX buffers of %d bytes at %08lx (mapped %p)\n",size,(unsigned long)bp->rx_buffers_dma,bp->rx_buffers); else ;
  }
  
#line 1459 
  __retres = 0;
  return_label: 
#line 1459 
                return __retres;
}


#line 1462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_alloc_consistent(struct macb *bp)
{
  int __retres;
  struct macb_queue *queue;
  unsigned int q;
  int size;
  int tmp_2;
  
#line 1468 
  q = 0U;
  
#line 1468 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1468 
  goto ldv_46274;
  ldv_46273: 
#line 1469 
  ;
  
#line 1469 
  size = 1024;
  
#line 1470 
  queue->tx_ring = (struct macb_dma_desc *)dma_alloc_attrs(& (bp->pdev)->dev,(unsigned long)size,& queue->tx_ring_dma,208U,(struct dma_attrs *)0);
  
#line 1473 
  if (queue->tx_ring == (struct macb_dma_desc *)0) 
#line 1474 
                                                   goto out_err; else ;
  {
    
#line 1475 
    struct _ddebug descriptor = {.modname = "macb", .function = "macb_alloc_consistent", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Allocated TX ring for queue %u of %d bytes at %08lx (mapped %p)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1478U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1475 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1475 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"Allocated TX ring for queue %u of %d bytes at %08lx (mapped %p)\n",q,size,(unsigned long)queue->tx_ring_dma,queue->tx_ring); else ;
  }
  
#line 1480 
  size = 4096;
  
#line 1481 
  queue->tx_skb = (struct macb_tx_skb *)kmalloc((unsigned long)size,208U);
  
#line 1482 
  if (queue->tx_skb == (struct macb_tx_skb *)0) 
#line 1483 
                                                goto out_err; else ;
  
#line 1468 
  q += 1U;
  
#line 1468 
  queue += 1;
  ldv_46274: 
#line 1469 
  ;
  
#line 1468 
  if (bp->num_queues > q) 
#line 1470 
                          goto ldv_46273; else 
#line 1473 
                                               goto ldv_46275;
  ldv_46275: 
#line 1474 
  ;
  
#line 1486 
  size = 4096;
  
#line 1487 
  bp->rx_ring = (struct macb_dma_desc *)dma_alloc_attrs(& (bp->pdev)->dev,(unsigned long)size,& bp->rx_ring_dma,208U,(struct dma_attrs *)0);
  
#line 1489 
  if (bp->rx_ring == (struct macb_dma_desc *)0) 
#line 1490 
                                                goto out_err; else ;
  {
    
#line 1491 
    struct _ddebug descriptor_0 = {.modname = "macb", .function = "macb_alloc_consistent", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Allocated RX ring of %d bytes at %08lx (mapped %p)\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1493U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1491 
    if ((long)(((int)descriptor_0.flags & 1) != 0) != 0L) 
#line 1491 
                                                          __dynamic_netdev_dbg(& descriptor_0,(struct net_device const *)bp->dev,"Allocated RX ring of %d bytes at %08lx (mapped %p)\n",size,(unsigned long)bp->rx_ring_dma,bp->rx_ring); else ;
  }
  
#line 1495 
  tmp_2 = (*(bp->macbgem_ops.mog_alloc_rx_buffers))(bp);
  
#line 1495 
  if (tmp_2 != 0) 
#line 1496 
                  goto out_err; else ;
  
#line 1498 
  __retres = 0;
  
#line 1498 
  goto return_label;
  out_err: 
#line 1500 
  ;
  
#line 1501 
  macb_free_consistent(bp);
  
#line 1502 
  __retres = -12;
  return_label: 
#line 1502 
                return __retres;
}


#line 1505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_init_rings(struct macb *bp)
{
  struct macb_queue *queue;
  unsigned int q;
  int i;
  
#line 1511 
  q = 0U;
  
#line 1511 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1511 
  goto ldv_46287;
  ldv_46286: 
#line 1512 
  ;
  
#line 1512 
  i = 0;
  
#line 1512 
  goto ldv_46284;
  ldv_46283: 
#line 1513 
  ;
  
#line 1513 
  (queue->tx_ring + i)->addr = 0U;
  
#line 1514 
  (queue->tx_ring + i)->ctrl = 2147483648U;
  
#line 1512 
  i += 1;
  ldv_46284: 
#line 1513 
  ;
  
#line 1512 
  if (i <= 127) 
#line 1514 
                goto ldv_46283; else 
#line 1517 
                                     goto ldv_46285;
  ldv_46285: 
#line 1518 
  ;
  
#line 1516 
  (queue->tx_ring + 127U)->ctrl |= 1073741824U;
  
#line 1517 
  queue->tx_head = 0U;
  
#line 1518 
  queue->tx_tail = 0U;
  
#line 1511 
  q += 1U;
  
#line 1511 
  queue += 1;
  ldv_46287: 
#line 1512 
  ;
  
#line 1511 
  if (bp->num_queues > q) 
#line 1513 
                          goto ldv_46286; else 
#line 1516 
                                               goto ldv_46288;
  ldv_46288: 
#line 1517 
  ;
  
#line 1521 
  bp->rx_tail = 0U;
  
#line 1522 
  bp->rx_prepared_head = 0U;
  
#line 1524 
  gem_rx_refill(bp);
  
#line 1525 
  return;
}


#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_init_rings(struct macb *bp)
{
  int i;
  dma_addr_t addr;
  
#line 1532 
  addr = bp->rx_buffers_dma;
  
#line 1533 
  i = 0;
  
#line 1533 
  goto ldv_46295;
  ldv_46294: 
#line 1534 
  ;
  
#line 1534 
  (bp->rx_ring + i)->addr = (unsigned int)addr;
  
#line 1535 
  (bp->rx_ring + i)->ctrl = 0U;
  
#line 1536 
  addr = (unsigned long long)bp->rx_buffer_size + addr;
  
#line 1533 
  i += 1;
  ldv_46295: 
#line 1534 
  ;
  
#line 1533 
  if (i <= 511) 
#line 1535 
                goto ldv_46294; else 
#line 1538 
                                     goto ldv_46296;
  ldv_46296: 
#line 1539 
  ;
  
#line 1538 
  (bp->rx_ring + 511U)->addr |= 2U;
  
#line 1540 
  i = 0;
  
#line 1540 
  goto ldv_46298;
  ldv_46297: 
#line 1541 
  ;
  
#line 1541 
  (bp->queues[0].tx_ring + i)->addr = 0U;
  
#line 1542 
  (bp->queues[0].tx_ring + i)->ctrl = 2147483648U;
  
#line 1540 
  i += 1;
  ldv_46298: 
#line 1541 
  ;
  
#line 1540 
  if (i <= 127) 
#line 1542 
                goto ldv_46297; else 
#line 1545 
                                     goto ldv_46299;
  ldv_46299: 
#line 1546 
  ;
  
#line 1544 
  bp->queues[0].tx_head = 0U;
  
#line 1545 
  bp->queues[0].tx_tail = 0U;
  
#line 1546 
  (bp->queues[0].tx_ring + 127U)->ctrl |= 1073741824U;
  
#line 1548 
  bp->rx_tail = 0U;
  
#line 1549 
  return;
}


#line 1551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_reset_hw(struct macb *bp)
{
  struct macb_queue *queue;
  unsigned int q;
  
#line 1560 
  (*(bp->macb_reg_writel))(bp,0,0U);
  
#line 1563 
  (*(bp->macb_reg_writel))(bp,0,32U);
  
#line 1566 
  (*(bp->macb_reg_writel))(bp,20,4294967295U);
  
#line 1567 
  (*(bp->macb_reg_writel))(bp,32,4294967295U);
  
#line 1570 
  q = 0U;
  
#line 1570 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1570 
  goto ldv_46306;
  ldv_46305: 
#line 1571 
  ;
  
#line 1571 
  (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IDR,4294967295U);
  
#line 1572 
  (*((queue->bp)->macb_reg_readl))(queue->bp,(int)queue->ISR);
  
#line 1570 
  q += 1U;
  
#line 1570 
  queue += 1;
  ldv_46306: 
#line 1571 
  ;
  
#line 1570 
  if (bp->num_queues > q) 
#line 1572 
                          goto ldv_46305; else 
#line 1575 
                                               goto ldv_46307;
  ldv_46307: 
#line 1576 
  ;
  
#line 1577 
  return;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static u32 gem_mdc_clk_div(struct macb *bp)
{
  u32 config;
  
#line 1579 
  unsigned long pclk_hz = clk_get_rate(bp->pclk);
  
#line 1581 
  if (pclk_hz <= 20000000UL) 
#line 1582 
                             config = 0U;
  else 
    
#line 1583 
    if (pclk_hz <= 40000000UL) 
#line 1584 
                               config = 262144U;
    else 
      
#line 1585 
      if (pclk_hz <= 80000000UL) 
#line 1586 
                                 config = 524288U;
      else 
        
#line 1587 
        if (pclk_hz <= 120000000UL) 
#line 1588 
                                    config = 786432U;
        else 
          
#line 1589 
          if (pclk_hz <= 160000000UL) 
#line 1590 
                                      config = 1048576U; else 
#line 1592 
                                                              config = 1310720U;
  
#line 1594 
  return config;
}


#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static u32 macb_mdc_clk_div(struct macb *bp)
{
  u32 __retres;
  u32 config;
  unsigned long pclk_hz;
  bool tmp_0;
  
#line 1602 
  tmp_0 = macb_is_gem(bp);
  
#line 1602 
  if ((int)tmp_0 != 0) {
    u32 tmp;
    
#line 1603 
    tmp = gem_mdc_clk_div(bp);
    
#line 1603 
    __retres = tmp;
    
#line 1603 
    goto return_label;
  }
  else ;
  
#line 1605 
  pclk_hz = clk_get_rate(bp->pclk);
  
#line 1606 
  if (pclk_hz <= 20000000UL) 
#line 1607 
                             config = 0U;
  else 
    
#line 1608 
    if (pclk_hz <= 40000000UL) 
#line 1609 
                               config = 1024U;
    else 
      
#line 1610 
      if (pclk_hz <= 80000000UL) 
#line 1611 
                                 config = 2048U; else 
#line 1613 
                                                      config = 3072U;
  
#line 1615 
  __retres = config;
  return_label: 
#line 1615 
                return __retres;
}


#line 1623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static u32 macb_dbw(struct macb *bp)
{
  u32 __retres;
  int tmp_0;
  bool tmp;
  u32 tmp_1;
  
#line 1625 
  tmp = macb_is_gem(bp);
  
#line 1625 
  if (tmp) 
#line 1625 
           tmp_0 = 0; else 
#line 1625 
                           tmp_0 = 1;
  
#line 1625 
  if (tmp_0) {
    
#line 1626 
    __retres = 0U;
    
#line 1626 
    goto return_label;
  }
  else ;
  
#line 1628 
  tmp_1 = (*(bp->macb_reg_readl))(bp,640);
  
#line 1628 
  switch ((tmp_1 >> 25) & 7U) {
    case (unsigned int)4: 
#line 1629 
    ;
    
#line 1630 
    __retres = 4194304U;
    
#line 1630 
    goto return_label;
    case (unsigned int)2: 
#line 1631 
    ;
    
#line 1632 
    __retres = 2097152U;
    
#line 1632 
    goto return_label;
    case (unsigned int)1: 
#line 1633 
    ;
    default: 
#line 1634 
    ;
    
#line 1635 
    __retres = 0U;
    
#line 1635 
    goto return_label;
  }
  return_label: 
#line 1628 
                return __retres;
}


#line 1647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_configure_dma(struct macb *bp)
{
  u32 dmacfg;
  bool tmp_0;
  
#line 1651 
  tmp_0 = macb_is_gem(bp);
  
#line 1651 
  if ((int)tmp_0 != 0) {
    u32 tmp;
    
#line 1652 
    tmp = (*(bp->macb_reg_readl))(bp,16);
    
#line 1652 
    dmacfg = tmp & 4278255615U;
    
#line 1653 
    dmacfg = (((unsigned int)(bp->rx_buffer_size / 64UL) << 16U) & 16711680U) | dmacfg;
    
#line 1654 
    if (bp->dma_burst_length != 0U) 
#line 1655 
                                    dmacfg = (dmacfg & 4294967264U) | (bp->dma_burst_length & 31U); else ;
    
#line 1656 
    dmacfg |= 1792U;
    
#line 1657 
    dmacfg &= 4294967167U;
    
#line 1659 
    if ((int)bp->native_io != 0) 
#line 1660 
                                 dmacfg &= 4294967231U; else 
#line 1662 
                                                             dmacfg |= 64U;
    
#line 1664 
    if (((bp->dev)->features & 8ULL) != 0ULL) 
#line 1665 
                                              dmacfg |= 2048U; else 
#line 1667 
                                                                    dmacfg &= 4294965247U;
    {
      
#line 1668 
      struct _ddebug descriptor = {.modname = "macb", .function = "macb_configure_dma", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Cadence configure DMA with 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1669U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1668 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1668 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"Cadence configure DMA with 0x%08x\n",dmacfg); else ;
    }
    
#line 1670 
    (*(bp->macb_reg_writel))(bp,16,dmacfg);
  }
  else ;
  
#line 1672 
  return;
}


#line 1674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_init_hw(struct macb *bp)
{
  struct macb_queue *queue;
  unsigned int q;
  u32 config;
  u32 tmp_0;
  
#line 1681 
  macb_reset_hw(bp);
  
#line 1682 
  macb_set_hwaddr(bp);
  
#line 1684 
  config = macb_mdc_clk_div(bp);
  
#line 1685 
  config = config;
  
#line 1686 
  config |= 8192U;
  
#line 1687 
  config |= 131072U;
  
#line 1688 
  if ((bp->caps & 8U) != 0U) 
#line 1689 
                             config |= 8U; else 
#line 1691 
                                                config |= 256U;
  
#line 1692 
  if (((bp->dev)->flags & 256U) != 0U) 
#line 1693 
                                       config |= 16U;
  else {
    bool tmp;
    
#line 1694 
    tmp = macb_is_gem(bp);
    
#line 1694 
    if ((int)tmp != 0) {
      
#line 1694 
      if (((bp->dev)->features & 17179869184ULL) != 0ULL) 
#line 1695 
                                                          config |= 16777216U; else ;
    }
    else ;
  }
  
#line 1696 
  if (((bp->dev)->flags & 2U) == 0U) 
#line 1697 
                                     config |= 32U; else ;
  
#line 1698 
  tmp_0 = macb_dbw(bp);
  
#line 1698 
  config = tmp_0 | config;
  
#line 1699 
  (*(bp->macb_reg_writel))(bp,4,config);
  
#line 1700 
  if ((bp->caps & 8U) != 0U && bp->jumbo_max_len != 0U) 
#line 1701 
                                                        (*(bp->macb_reg_writel))(bp,72,bp->jumbo_max_len); else ;
  
#line 1702 
  bp->speed = 10;
  
#line 1703 
  bp->duplex = 0;
  
#line 1704 
  bp->rx_frm_len_mask = 4095U;
  
#line 1705 
  if ((bp->caps & 8U) != 0U) 
#line 1706 
                             bp->rx_frm_len_mask = 16383U; else ;
  
#line 1708 
  macb_configure_dma(bp);
  
#line 1711 
  (*(bp->macb_reg_writel))(bp,24,(unsigned int)bp->rx_ring_dma);
  
#line 1712 
  q = 0U;
  
#line 1712 
  queue = (struct macb_queue *)(& bp->queues);
  
#line 1712 
  goto ldv_46338;
  ldv_46337: 
#line 1713 
  ;
  
#line 1713 
  (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->TBQP,(unsigned int)queue->tx_ring_dma);
  
#line 1716 
  (*((queue->bp)->macb_reg_writel))(queue->bp,(int)queue->IER,3318U);
  
#line 1712 
  q += 1U;
  
#line 1712 
  queue += 1;
  ldv_46338: 
#line 1713 
  ;
  
#line 1712 
  if (bp->num_queues > q) 
#line 1714 
                          goto ldv_46337; else 
#line 1717 
                                               goto ldv_46339;
  ldv_46339: 
#line 1718 
  ;
  
#line 1723 
  (*(bp->macb_reg_writel))(bp,0,28U);
  
#line 1724 
  return;
}


#line 1760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
__inline static int hash_bit_value(int bitnr, __u8 *addr)
{
  int __retres;
  
#line 1762 
  if ((((int)*(addr + bitnr / 8) >> bitnr % 8) & 1) != 0) {
    
#line 1763 
    __retres = 1;
    
#line 1763 
    goto return_label;
  }
  else ;
  
#line 1764 
  __retres = 0;
  return_label: 
#line 1764 
                return __retres;
}


#line 1770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int hash_get_index(__u8 *addr)
{
  int i;
  int j;
  int bitval;
  int tmp;
  
#line 1773 
  int hash_index = 0;
  
#line 1775 
  j = 0;
  
#line 1775 
  goto ldv_46355;
  ldv_46354: 
#line 1776 
  ;
  
#line 1776 
  i = 0;
  
#line 1776 
  bitval = 0;
  
#line 1776 
  goto ldv_46352;
  ldv_46351: 
#line 1777 
  ;
  
#line 1777 
  tmp = hash_bit_value(i * 6 + j,addr);
  
#line 1777 
  bitval = tmp ^ bitval;
  
#line 1776 
  i += 1;
  ldv_46352: 
#line 1777 
  ;
  
#line 1776 
  if (i <= 7) 
#line 1778 
              goto ldv_46351; else 
#line 1781 
                                   goto ldv_46353;
  ldv_46353: 
#line 1782 
  ;
  
#line 1779 
  hash_index = (bitval << j) | hash_index;
  
#line 1775 
  j += 1;
  ldv_46355: 
#line 1776 
  ;
  
#line 1775 
  if (j <= 5) 
#line 1777 
              goto ldv_46354; else 
#line 1780 
                                   goto ldv_46356;
  ldv_46356: 
#line 1781 
  ;
  
#line 1782 
  return hash_index;
}


#line 1788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_sethashtable(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  unsigned long mc_filter[2U];
  unsigned int bitnr;
  struct netdev_hw_addr *tmp_0;
  int tmp_1;
  struct netdev_hw_addr *tmp_2;
  
#line 1793 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1795 
  mc_filter[1] = 0UL;
  
#line 1795 
  mc_filter[0] = mc_filter[1];
  {
    
#line 1797 
    struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
    
#line 1797 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 1797 
  ha = tmp_0;
  
#line 1797 
  goto ldv_46369;
  ldv_46368: 
#line 1798 
  ;
  
#line 1798 
  tmp_1 = hash_get_index((__u8 *)(& ha->addr));
  
#line 1798 
  bitnr = (unsigned int)tmp_1;
  
#line 1799 
  mc_filter[bitnr >> 5] |= (unsigned long)(1 << (bitnr & 31U));
  {
    
#line 1797 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 1797 
    tmp_2 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 1797 
  ha = tmp_2;
  ldv_46369: 
#line 1799 
  ;
  
#line 1797 
  if (& ha->list != & dev->mc.list) 
#line 1799 
                                    goto ldv_46368; else 
#line 1802 
                                                         goto ldv_46370;
  ldv_46370: 
#line 1803 
  ;
  {
    bool tmp_3;
    
#line 1802 
    tmp_3 = macb_is_gem(bp);
    
#line 1802 
    if ((int)tmp_3 != 0) 
#line 1802 
                         (*(bp->macb_reg_writel))(bp,128,(unsigned int)mc_filter[0]); else 
                                                                    
#line 1802 
                                                                    (*(bp->macb_reg_writel))(bp,144,(unsigned int)mc_filter[0]);
  }
  {
    bool tmp_4;
    
#line 1803 
    tmp_4 = macb_is_gem(bp);
    
#line 1803 
    if ((int)tmp_4 != 0) 
#line 1803 
                         (*(bp->macb_reg_writel))(bp,132,(unsigned int)mc_filter[1]); else 
                                                                    
#line 1803 
                                                                    (*(bp->macb_reg_writel))(bp,148,(unsigned int)mc_filter[1]);
  }
  
#line 1805 
  return;
}


#line 1809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_set_rx_mode(struct net_device *dev)
{
  unsigned long cfg;
  u32 tmp_0;
  
#line 1812 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1814 
  tmp_0 = (*(bp->macb_reg_readl))(bp,4);
  
#line 1814 
  cfg = (unsigned long)tmp_0;
  
#line 1816 
  if ((dev->flags & 256U) != 0U) {
    bool tmp_1;
    
#line 1818 
    cfg |= 16UL;
    
#line 1821 
    tmp_1 = macb_is_gem(bp);
    
#line 1821 
    if ((int)tmp_1 != 0) 
#line 1822 
                         cfg &= 18446744073692774399UL; else ;
  }
  else {
    bool tmp_2;
    
#line 1825 
    cfg &= 18446744073709551599UL;
    
#line 1828 
    tmp_2 = macb_is_gem(bp);
    
#line 1828 
    if ((int)tmp_2 != 0) {
      
#line 1828 
      if ((dev->features & 17179869184ULL) != 0ULL) 
#line 1829 
                                                    cfg |= 16777216UL; else ;
    }
    else ;
  }
  
#line 1832 
  if ((dev->flags & 512U) != 0U) {
    {
      bool tmp_3;
      
#line 1834 
      tmp_3 = macb_is_gem(bp);
      
#line 1834 
      if ((int)tmp_3 != 0) 
#line 1834 
                           (*(bp->macb_reg_writel))(bp,128,4294967295U); else 
                                                                    
#line 1834 
                                                                    (*(bp->macb_reg_writel))(bp,144,4294967295U);
    }
    {
      bool tmp_4;
      
#line 1835 
      tmp_4 = macb_is_gem(bp);
      
#line 1835 
      if ((int)tmp_4 != 0) 
#line 1835 
                           (*(bp->macb_reg_writel))(bp,132,4294967295U); else 
                                                                    
#line 1835 
                                                                    (*(bp->macb_reg_writel))(bp,148,4294967295U);
    }
    
#line 1836 
    cfg |= 64UL;
  }
  else 
    
#line 1837 
    if (dev->mc.count != 0) {
      
#line 1839 
      macb_sethashtable(dev);
      
#line 1840 
      cfg |= 64UL;
    }
    else 
      
#line 1841 
      if ((dev->flags & 4294966783U) != 0U) {
        {
          bool tmp_5;
          
#line 1843 
          tmp_5 = macb_is_gem(bp);
          
#line 1843 
          if ((int)tmp_5 != 0) 
#line 1843 
                               (*(bp->macb_reg_writel))(bp,128,0U); else 
                                                                    
#line 1843 
                                                                    (*(bp->macb_reg_writel))(bp,144,0U);
        }
        {
          bool tmp_6;
          
#line 1844 
          tmp_6 = macb_is_gem(bp);
          
#line 1844 
          if ((int)tmp_6 != 0) 
#line 1844 
                               (*(bp->macb_reg_writel))(bp,132,0U); else 
                                                                    
#line 1844 
                                                                    (*(bp->macb_reg_writel))(bp,148,0U);
        }
        
#line 1845 
        cfg &= 18446744073709551551UL;
      }
      else ;
  
#line 1848 
  (*(bp->macb_reg_writel))(bp,4,(unsigned int)cfg);
  
#line 1849 
  return;
}


#line 1851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_open(struct net_device *dev)
{
  int __retres;
  int err;
  
#line 1853 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1854 
  size_t bufsz = (unsigned long)(dev->mtu + 18U);
  {
    
#line 1857 
    struct _ddebug descriptor = {.modname = "macb", .function = "macb_open", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "open\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1857U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1857 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1857 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)bp->dev,"open\n"); else ;
  }
  
#line 1860 
  netif_carrier_off(dev);
  
#line 1863 
  if (bp->phy_dev == (struct phy_device *)0) {
    
#line 1864 
    __retres = -11;
    
#line 1864 
    goto return_label;
  }
  else ;
  
#line 1867 
  macb_init_rx_buffer_size(bp,bufsz);
  
#line 1869 
  err = macb_alloc_consistent(bp);
  
#line 1870 
  if (err != 0) {
    
#line 1871 
    netdev_err((struct net_device const *)dev,"Unable to allocate DMA memory (error %d)\n",err);
    
#line 1873 
    __retres = err;
    
#line 1873 
    goto return_label;
  }
  else ;
  
#line 1876 
  napi_enable(& bp->napi);
  
#line 1878 
  (*(bp->macbgem_ops.mog_init_rings))(bp);
  
#line 1879 
  macb_init_hw(bp);
  
#line 1882 
  phy_start(bp->phy_dev);
  
#line 1884 
  netif_tx_start_all_queues(dev);
  
#line 1886 
  __retres = 0;
  return_label: 
#line 1886 
                return __retres;
}


#line 1889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_close(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  
#line 1891 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1894 
  netif_tx_stop_all_queues(dev);
  
#line 1895 
  napi_disable(& bp->napi);
  
#line 1897 
  if (bp->phy_dev != (struct phy_device *)0) 
#line 1898 
                                             phy_stop(bp->phy_dev); else ;
  
#line 1900 
  ldv___ldv_spin_lock_82(& bp->lock);
  
#line 1901 
  macb_reset_hw(bp);
  
#line 1902 
  netif_carrier_off(dev);
  
#line 1903 
  ldv_spin_unlock_irqrestore_83(& bp->lock,flags);
  
#line 1905 
  macb_free_consistent(bp);
  
#line 1907 
  __retres = 0;
  
#line 1907 
  return __retres;
}


#line 1910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  u32 max_mtu;
  bool tmp_0;
  
#line 1912 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 1915 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 1915 
  if ((int)tmp_0 != 0) {
    
#line 1916 
    __retres = -16;
    
#line 1916 
    goto return_label;
  }
  else ;
  
#line 1918 
  max_mtu = 1500U;
  
#line 1919 
  if ((bp->caps & 8U) != 0U) {
    u32 tmp_1;
    
#line 1920 
    tmp_1 = (*(bp->macb_reg_readl))(bp,72);
    
#line 1920 
    max_mtu = tmp_1 + 4294967278U;
  }
  else ;
  
#line 1922 
  if ((unsigned int)new_mtu > max_mtu || new_mtu <= 67) {
    
#line 1923 
    __retres = -22;
    
#line 1923 
    goto return_label;
  }
  else ;
  
#line 1925 
  dev->mtu = (unsigned int)new_mtu;
  
#line 1927 
  __retres = 0;
  return_label: 
#line 1927 
                return __retres;
}


#line 1930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_update_stats(struct macb *bp)
{
  unsigned int i;
  
#line 1933 
  u32 *p = & bp->hw_stats.gem.tx_octets_31_0;
  
#line 1935 
  i = 0U;
  
#line 1935 
  goto ldv_46406;
  ldv_46405: 
#line 1936 
  ;
  {
    u32 tmp;
    
#line 1936 
    u32 offset = (unsigned int)gem_statistics[i].offset;
    
#line 1937 
    tmp = (*(bp->macb_reg_readl))(bp,(int)offset);
    
#line 1937 
    u64 val = (unsigned long long)tmp;
    
#line 1939 
    bp->ethtool_stats[i] += val;
    
#line 1940 
    *p += (unsigned int)val;
    
#line 1942 
    if (offset == 256U || offset == 336U) {
      u32 tmp_0;
      
#line 1944 
      tmp_0 = (*(bp->macb_reg_readl))(bp,(int)(offset + 4U));
      
#line 1944 
      val = (unsigned long long)tmp_0;
      
#line 1945 
      bp->ethtool_stats[i] += val << 32;
      
#line 1946 
      p += 1;
      
#line 1946 
      *p += (unsigned int)val;
    }
    else ;
  }
  
#line 1935 
  i += 1U;
  
#line 1935 
  p += 1;
  ldv_46406: 
#line 1936 
  ;
  
#line 1935 
  if (i <= 42U) 
#line 1937 
                goto ldv_46405; else 
#line 1940 
                                     goto ldv_46407;
  ldv_46407: 
#line 1941 
  ;
  
#line 1942 
  return;
}


#line 1951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct net_device_stats *gem_get_stats(struct macb *bp)
{
  
#line 1953 
  struct gem_stats *hwstat = & bp->hw_stats.gem;
  
#line 1954 
  struct net_device_stats *nstat = & bp->stats;
  
#line 1956 
  gem_update_stats(bp);
  
#line 1958 
  nstat->rx_errors = (unsigned long)(((((((hwstat->rx_frame_check_sequence_errors + hwstat->rx_alignment_errors) + hwstat->rx_resource_errors) + hwstat->rx_overruns) + hwstat->rx_oversize_frames) + hwstat->rx_jabbers) + hwstat->rx_undersized_frames) + hwstat->rx_length_field_frame_errors);
  
#line 1966 
  nstat->tx_errors = (unsigned long)(((hwstat->tx_late_collisions + hwstat->tx_excessive_collisions) + hwstat->tx_underrun) + hwstat->tx_carrier_sense_errors);
  
#line 1970 
  nstat->multicast = (unsigned long)hwstat->rx_multicast_frames;
  
#line 1971 
  nstat->collisions = (unsigned long)((hwstat->tx_single_collision_frames + hwstat->tx_multiple_collision_frames) + hwstat->tx_excessive_collisions);
  
#line 1974 
  nstat->rx_length_errors = (unsigned long)(((hwstat->rx_oversize_frames + hwstat->rx_jabbers) + hwstat->rx_undersized_frames) + hwstat->rx_length_field_frame_errors);
  
#line 1978 
  nstat->rx_over_errors = (unsigned long)hwstat->rx_resource_errors;
  
#line 1979 
  nstat->rx_crc_errors = (unsigned long)hwstat->rx_frame_check_sequence_errors;
  
#line 1980 
  nstat->rx_frame_errors = (unsigned long)hwstat->rx_alignment_errors;
  
#line 1981 
  nstat->rx_fifo_errors = (unsigned long)hwstat->rx_overruns;
  
#line 1982 
  nstat->tx_aborted_errors = (unsigned long)hwstat->tx_excessive_collisions;
  
#line 1983 
  nstat->tx_carrier_errors = (unsigned long)hwstat->tx_carrier_sense_errors;
  
#line 1984 
  nstat->tx_fifo_errors = (unsigned long)hwstat->tx_underrun;
  
#line 1986 
  return nstat;
}


#line 1989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  struct macb *bp;
  
#line 1994 
  bp = (struct macb *)netdev_priv((struct net_device const *)dev);
  
#line 1995 
  gem_update_stats(bp);
  
#line 1996 
  memcpy((void *)data,(void const *)(& bp->ethtool_stats),344UL);
  
#line 1997 
  return;
}


#line 1999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int gem_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 2001 
  switch (sset) {
    case 1: 
#line 2002 
    ;
    
#line 2003 
    __retres = 43;
    
#line 2003 
    goto return_label;
    default: 
#line 2004 
    ;
    
#line 2005 
    __retres = -95;
    
#line 2005 
    goto return_label;
  }
  return_label: 
#line 2001 
                return __retres;
}


#line 2009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void gem_get_ethtool_strings(struct net_device *dev, u32 sset, u8 *p)
{
  unsigned int i;
  
#line 2013 
  switch (sset) {
    case (u32)1: 
#line 2014 
    ;
    
#line 2015 
    i = 0U;
    
#line 2015 
    goto ldv_46442;
    ldv_46441: 
#line 2016 
    ;
    
#line 2016 
    memcpy((void *)p,(void const *)(& gem_statistics[i].stat_string),32UL);
    
#line 2015 
    i += 1U;
    
#line 2015 
    p += 32U;
    ldv_46442: 
#line 2016 
    ;
    
#line 2015 
    if (i <= 42U) 
#line 2017 
                  goto ldv_46441; else 
#line 2020 
                                       goto ldv_46443;
    ldv_46443: 
#line 2021 
    ;
    
#line 2018 
    goto ldv_46444;
  }
  ldv_46444: 
#line 2020 
  ;
  
#line 2021 
  return;
}


#line 2022  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct net_device_stats *macb_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  bool tmp_1;
  
#line 2024 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2025 
  struct net_device_stats *nstat = & bp->stats;
  
#line 2026 
  struct macb_stats *hwstat = & bp->hw_stats.macb;
  
#line 2028 
  tmp_1 = macb_is_gem(bp);
  
#line 2028 
  if ((int)tmp_1 != 0) {
    struct net_device_stats *tmp_0;
    
#line 2029 
    tmp_0 = gem_get_stats(bp);
    
#line 2029 
    __retres = tmp_0;
    
#line 2029 
    goto return_label;
  }
  else ;
  
#line 2032 
  macb_update_stats(bp);
  
#line 2035 
  nstat->rx_errors = (unsigned long)(((((((hwstat->rx_fcs_errors + hwstat->rx_align_errors) + hwstat->rx_resource_errors) + hwstat->rx_overruns) + hwstat->rx_oversize_pkts) + hwstat->rx_jabbers) + hwstat->rx_undersize_pkts) + hwstat->rx_length_mismatch);
  
#line 2043 
  nstat->tx_errors = (unsigned long)((((hwstat->tx_late_cols + hwstat->tx_excessive_cols) + hwstat->tx_underruns) + hwstat->tx_carrier_errors) + hwstat->sqe_test_errors);
  
#line 2048 
  nstat->collisions = (unsigned long)((hwstat->tx_single_cols + hwstat->tx_multiple_cols) + hwstat->tx_excessive_cols);
  
#line 2051 
  nstat->rx_length_errors = (unsigned long)(((hwstat->rx_oversize_pkts + hwstat->rx_jabbers) + hwstat->rx_undersize_pkts) + hwstat->rx_length_mismatch);
  
#line 2055 
  nstat->rx_over_errors = (unsigned long)(hwstat->rx_resource_errors + hwstat->rx_overruns);
  
#line 2057 
  nstat->rx_crc_errors = (unsigned long)hwstat->rx_fcs_errors;
  
#line 2058 
  nstat->rx_frame_errors = (unsigned long)hwstat->rx_align_errors;
  
#line 2059 
  nstat->rx_fifo_errors = (unsigned long)hwstat->rx_overruns;
  
#line 2061 
  nstat->tx_aborted_errors = (unsigned long)hwstat->tx_excessive_cols;
  
#line 2062 
  nstat->tx_carrier_errors = (unsigned long)hwstat->tx_carrier_errors;
  
#line 2063 
  nstat->tx_fifo_errors = (unsigned long)hwstat->tx_underruns;
  
#line 2066 
  __retres = nstat;
  return_label: 
#line 2066 
                return __retres;
}


#line 2069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int tmp_0;
  
#line 2071 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2072 
  struct phy_device *phydev = bp->phy_dev;
  
#line 2074 
  if (phydev == (struct phy_device *)0) {
    
#line 2075 
    __retres = -19;
    
#line 2075 
    goto return_label;
  }
  else ;
  
#line 2077 
  tmp_0 = phy_ethtool_gset(phydev,cmd);
  
#line 2077 
  __retres = tmp_0;
  return_label: 
#line 2077 
                return __retres;
}


#line 2080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int tmp_0;
  
#line 2082 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2083 
  struct phy_device *phydev = bp->phy_dev;
  
#line 2085 
  if (phydev == (struct phy_device *)0) {
    
#line 2086 
    __retres = -19;
    
#line 2086 
    goto return_label;
  }
  else ;
  
#line 2088 
  tmp_0 = phy_ethtool_sset(phydev,cmd);
  
#line 2088 
  __retres = tmp_0;
  return_label: 
#line 2088 
                return __retres;
}


#line 2091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 2093 
  __retres = 64;
  
#line 2093 
  return __retres;
}


#line 2096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *p)
{
  unsigned int tail;
  unsigned int head;
  u32 tmp_0;
  u32 tmp_2;
  dma_addr_t tmp_3;
  dma_addr_t tmp_4;
  u32 tmp_6;
  bool tmp_7;
  
#line 2099 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2101 
  u32 *regs_buff = (u32 *)p;
  
#line 2103 
  tmp_0 = (*(bp->macb_reg_readl))(bp,252);
  
#line 2103 
  regs->version = (tmp_0 & 65535U) | 2U;
  
#line 2106 
  tail = macb_tx_ring_wrap(bp->queues[0].tx_tail);
  
#line 2107 
  head = macb_tx_ring_wrap(bp->queues[0].tx_head);
  
#line 2109 
  *regs_buff = (*(bp->macb_reg_readl))(bp,0);
  {
    u32 __v;
    {
      bool tmp_1;
      
#line 2110 
      tmp_1 = macb_is_gem(bp);
      
#line 2110 
      if ((int)tmp_1 != 0) 
#line 2110 
                           __v = (*(bp->macb_reg_readl))(bp,4); else 
                                                                  
#line 2110 
                                                                  __v = (*(bp->macb_reg_readl))(bp,4);
    }
    
#line 2110 
    tmp_2 = __v;
  }
  
#line 2110 
  *(regs_buff + 1U) = tmp_2;
  
#line 2111 
  *(regs_buff + 2U) = (*(bp->macb_reg_readl))(bp,8);
  
#line 2112 
  *(regs_buff + 3U) = (*(bp->macb_reg_readl))(bp,20);
  
#line 2113 
  *(regs_buff + 4U) = (*(bp->macb_reg_readl))(bp,24);
  
#line 2114 
  *(regs_buff + 5U) = (*(bp->macb_reg_readl))(bp,28);
  
#line 2115 
  *(regs_buff + 6U) = (*(bp->macb_reg_readl))(bp,32);
  
#line 2116 
  *(regs_buff + 7U) = (*(bp->macb_reg_readl))(bp,48);
  
#line 2118 
  *(regs_buff + 8U) = tail;
  
#line 2119 
  *(regs_buff + 9U) = head;
  
#line 2120 
  tmp_3 = macb_tx_dma(& bp->queues[0],tail);
  
#line 2120 
  *(regs_buff + 10U) = (unsigned int)tmp_3;
  
#line 2121 
  tmp_4 = macb_tx_dma(& bp->queues[0],head);
  
#line 2121 
  *(regs_buff + 11U) = (unsigned int)tmp_4;
  {
    u32 __v_0;
    {
      bool tmp_5;
      
#line 2123 
      tmp_5 = macb_is_gem(bp);
      
#line 2123 
      if ((int)tmp_5 != 0) 
#line 2123 
                           __v_0 = (*(bp->macb_reg_readl))(bp,12); else 
                                                                    
#line 2123 
                                                                    __v_0 = (*(bp->macb_reg_readl))(bp,192);
    }
    
#line 2123 
    tmp_6 = __v_0;
  }
  
#line 2123 
  *(regs_buff + 12U) = tmp_6;
  
#line 2124 
  tmp_7 = macb_is_gem(bp);
  
#line 2124 
  if ((int)tmp_7 != 0) 
#line 2125 
                       *(regs_buff + 13U) = (*(bp->macb_reg_readl))(bp,16); else ;
  
#line 2126 
  return;
}


#line 2129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct ethtool_ops const macb_ethtool_ops = {.get_settings = & macb_get_settings, .set_settings = & macb_set_settings, .get_drvinfo = (void (*)(struct net_device *, struct ethtool_drvinfo *))0, .get_regs_len = & macb_get_regs_len, .get_regs = & macb_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & ethtool_op_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct ethtool_ops const gem_ethtool_ops = {.get_settings = & macb_get_settings, .set_settings = & macb_set_settings, .get_drvinfo = (void (*)(struct net_device *, struct ethtool_drvinfo *))0, .get_regs_len = & macb_get_regs_len, .get_regs = & macb_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & gem_get_ethtool_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & gem_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & gem_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & ethtool_op_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 2152 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2153 
  struct phy_device *phydev = bp->phy_dev;
  
#line 2155 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2155 
  if (tmp_0) 
#line 2155 
             tmp_1 = 0; else 
#line 2155 
                             tmp_1 = 1;
  
#line 2155 
  if (tmp_1) {
    
#line 2156 
    __retres = -22;
    
#line 2156 
    goto return_label;
  }
  else ;
  
#line 2158 
  if (phydev == (struct phy_device *)0) {
    
#line 2159 
    __retres = -19;
    
#line 2159 
    goto return_label;
  }
  else ;
  
#line 2161 
  tmp_2 = phy_mii_ioctl(phydev,rq,cmd);
  
#line 2161 
  __retres = tmp_2;
  return_label: 
#line 2161 
                return __retres;
}


#line 2164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2167 
  struct macb *bp = netdev_priv((struct net_device const *)netdev);
  
#line 2168 
  netdev_features_t changed = netdev->features ^ features;
  
#line 2171 
  if ((changed & 8ULL) != 0ULL) {
    bool tmp_0;
    
#line 2171 
    tmp_0 = macb_is_gem(bp);
    
#line 2171 
    if ((int)tmp_0 != 0) {
      u32 dmacfg;
      
#line 2174 
      dmacfg = (*(bp->macb_reg_readl))(bp,16);
      
#line 2175 
      if ((features & 8ULL) != 0ULL) 
#line 2176 
                                     dmacfg |= 2048U; else 
#line 2178 
                                                           dmacfg &= 4294965247U;
      
#line 2179 
      (*(bp->macb_reg_writel))(bp,16,dmacfg);
    }
    else ;
  }
  else ;
  
#line 2183 
  if ((changed & 17179869184ULL) != 0ULL) {
    bool tmp_1;
    
#line 2183 
    tmp_1 = macb_is_gem(bp);
    
#line 2183 
    if ((int)tmp_1 != 0) {
      u32 netcfg;
      
#line 2186 
      netcfg = (*(bp->macb_reg_readl))(bp,4);
      
#line 2187 
      if ((features & 17179869184ULL) != 0ULL && (netdev->flags & 256U) == 0U) 
        
#line 2189 
        netcfg |= 16777216U; else 
#line 2191 
                                  netcfg &= 4278190079U;
      
#line 2192 
      (*(bp->macb_reg_writel))(bp,4,netcfg);
    }
    else ;
  }
  else ;
  
#line 2195 
  __retres = 0;
  
#line 2195 
  return __retres;
}


#line 2198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct net_device_ops const macb_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & macb_open, .ndo_stop = & macb_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& macb_start_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & macb_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & macb_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & macb_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & macb_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & macb_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & macb_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_configure_caps(struct macb *bp, struct macb_config const *dt_conf)
{
  u32 dcfg;
  bool tmp;
  
#line 2222 
  if (dt_conf != (struct macb_config const *)0) 
#line 2223 
                                                bp->caps = dt_conf->caps; else ;
  
#line 2225 
  tmp = hw_is_gem(bp->regs,(_Bool)((bool)((int)bp->native_io) != 0));
  
#line 2225 
  if ((int)tmp != 0) {
    
#line 2226 
    bp->caps |= 2147483648U;
    
#line 2228 
    dcfg = (*(bp->macb_reg_readl))(bp,640);
    
#line 2229 
    if ((dcfg & 8388608U) == 0U) 
#line 2230 
                                 bp->caps |= 1U; else ;
    
#line 2231 
    dcfg = (*(bp->macb_reg_readl))(bp,644);
    
#line 2232 
    if ((dcfg & 3145728U) == 0U) 
#line 2233 
                                 bp->caps |= 268435456U; else ;
  }
  else ;
  {
    
#line 2236 
    struct _ddebug descriptor = {.modname = "macb", .function = "macb_configure_caps", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c", .format = "Cadence caps 0x%08x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2236U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2236 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 2236 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)(& (bp->pdev)->dev),"Cadence caps 0x%08x\n",bp->caps); else ;
  }
  
#line 2238 
  return;
}


#line 2239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_probe_queues(void *mem, bool native_io, unsigned int *queue_mask, unsigned int *num_queues)
{
  unsigned int hw_q;
  int tmp_0;
  bool tmp;
  unsigned int tmp_1;
  
#line 2246 
  *queue_mask = 1U;
  
#line 2247 
  *num_queues = 1U;
  
#line 2255 
  tmp = hw_is_gem(mem,(_Bool)((bool)((int)native_io) != 0));
  
#line 2255 
  if (tmp) 
#line 2255 
           tmp_0 = 0; else 
#line 2255 
                           tmp_0 = 1;
  
#line 2255 
  if (tmp_0) 
#line 2256 
             goto return_label; else ;
  
#line 2259 
  tmp_1 = __readl((void const volatile *)(mem + 660U));
  
#line 2259 
  *queue_mask = tmp_1 & 255U;
  
#line 2261 
  *queue_mask |= 1U;
  
#line 2263 
  hw_q = 1U;
  
#line 2263 
  goto ldv_46512;
  ldv_46511: 
#line 2264 
  ;
  
#line 2264 
  if ((*queue_mask & (unsigned int)(1 << hw_q)) != 0U) 
#line 2265 
                                                       *num_queues += 1U; else ;
  
#line 2263 
  hw_q += 1U;
  ldv_46512: 
#line 2264 
  ;
  
#line 2263 
  if (hw_q <= 7U) 
#line 2265 
                  goto ldv_46511; else 
#line 2268 
                                       goto ldv_46513;
  ldv_46513: 
#line 2269 
  ;
  return_label: 
#line 2270 
                return;
}


#line 2268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_clk_init(struct platform_device *pdev, struct clk **pclk, struct clk **hclk, struct clk **tx_clk)
{
  int __retres;
  int err;
  bool tmp_0;
  bool tmp_2;
  bool tmp_3;
  
#line 2273 
  *pclk = devm_clk_get(& pdev->dev,"pclk");
  
#line 2274 
  tmp_0 = IS_ERR((void const *)*pclk);
  
#line 2274 
  if ((int)tmp_0 != 0) {
    long tmp;
    
#line 2275 
    tmp = PTR_ERR((void const *)*pclk);
    
#line 2275 
    err = (int)tmp;
    
#line 2276 
    dev_err((struct device const *)(& pdev->dev),"failed to get macb_clk (%u)\n",err);
    
#line 2277 
    __retres = err;
    
#line 2277 
    goto return_label;
  }
  else ;
  
#line 2280 
  *hclk = devm_clk_get(& pdev->dev,"hclk");
  
#line 2281 
  tmp_2 = IS_ERR((void const *)*hclk);
  
#line 2281 
  if ((int)tmp_2 != 0) {
    long tmp_1;
    
#line 2282 
    tmp_1 = PTR_ERR((void const *)*hclk);
    
#line 2282 
    err = (int)tmp_1;
    
#line 2283 
    dev_err((struct device const *)(& pdev->dev),"failed to get hclk (%u)\n",err);
    
#line 2284 
    __retres = err;
    
#line 2284 
    goto return_label;
  }
  else ;
  
#line 2287 
  *tx_clk = devm_clk_get(& pdev->dev,"tx_clk");
  
#line 2288 
  tmp_3 = IS_ERR((void const *)*tx_clk);
  
#line 2288 
  if ((int)tmp_3 != 0) 
#line 2289 
                       *tx_clk = (struct clk *)0; else ;
  
#line 2291 
  err = clk_prepare_enable(*pclk);
  
#line 2292 
  if (err != 0) {
    
#line 2293 
    dev_err((struct device const *)(& pdev->dev),"failed to enable pclk (%u)\n",err);
    
#line 2294 
    __retres = err;
    
#line 2294 
    goto return_label;
  }
  else ;
  
#line 2297 
  err = clk_prepare_enable(*hclk);
  
#line 2298 
  if (err != 0) {
    
#line 2299 
    dev_err((struct device const *)(& pdev->dev),"failed to enable hclk (%u)\n",err);
    
#line 2300 
    goto err_disable_pclk;
  }
  else ;
  
#line 2303 
  err = clk_prepare_enable(*tx_clk);
  
#line 2304 
  if (err != 0) {
    
#line 2305 
    dev_err((struct device const *)(& pdev->dev),"failed to enable tx_clk (%u)\n",err);
    
#line 2306 
    goto err_disable_hclk;
  }
  else ;
  
#line 2309 
  __retres = 0;
  
#line 2309 
  goto return_label;
  err_disable_hclk: 
#line 2311 
  ;
  
#line 2312 
  clk_disable_unprepare(*hclk);
  err_disable_pclk: 
#line 2314 
  ;
  
#line 2315 
  clk_disable_unprepare(*pclk);
  
#line 2317 
  __retres = err;
  return_label: 
#line 2317 
                return __retres;
}


#line 2320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_init(struct platform_device *pdev)
{
  int __retres;
  unsigned int hw_q;
  unsigned int q;
  struct macb_queue *queue;
  int err;
  u32 val;
  bool tmp_1;
  bool tmp_2;
  u32 tmp_4;
  
#line 2322 
  struct net_device *dev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 2324 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2333 
  hw_q = 0U;
  
#line 2333 
  q = 0U;
  
#line 2333 
  goto ldv_46537;
  ldv_46536: 
#line 2334 
  ;
  
#line 2334 
  if ((bp->queue_mask & (unsigned int)(1 << hw_q)) == 0U) 
#line 2335 
                                                          goto ldv_46533; else ;
  
#line 2337 
  queue = & bp->queues[q];
  
#line 2338 
  queue->bp = bp;
  
#line 2339 
  if (hw_q != 0U) {
    
#line 2340 
    queue->ISR = ((hw_q + 4294967295U) << 2) + 1024U;
    
#line 2341 
    queue->IER = ((hw_q + 4294967295U) << 2) + 1536U;
    
#line 2342 
    queue->IDR = ((hw_q + 4294967295U) << 2) + 1568U;
    
#line 2343 
    queue->IMR = ((hw_q + 4294967295U) << 2) + 1600U;
    
#line 2344 
    queue->TBQP = ((hw_q + 4294967295U) << 2) + 1088U;
  }
  else {
    
#line 2347 
    queue->ISR = 36U;
    
#line 2348 
    queue->IER = 40U;
    
#line 2349 
    queue->IDR = 44U;
    
#line 2350 
    queue->IMR = 48U;
    
#line 2351 
    queue->TBQP = 28U;
  }
  
#line 2359 
  queue->irq = platform_get_irq(pdev,q);
  
#line 2360 
  err = devm_request_irq(& pdev->dev,(unsigned int)queue->irq,& macb_interrupt,128UL,(char const *)(& dev->name),(void *)queue);
  
#line 2362 
  if (err != 0) {
    
#line 2363 
    dev_err((struct device const *)(& pdev->dev),"Unable to request IRQ %d (error %d)\n",queue->irq,err);
    
#line 2366 
    __retres = err;
    
#line 2366 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 2369 
    __init_work(& queue->tx_error_task,0);
    
#line 2369 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2369 
    queue->tx_error_task.data = __constr_expr_37;
    
#line 2369 
    lockdep_init_map(& queue->tx_error_task.lockdep_map,"(&queue->tx_error_task)",& __key,0);
    
#line 2369 
    INIT_LIST_HEAD(& queue->tx_error_task.entry);
    
#line 2369 
    queue->tx_error_task.func = & macb_tx_error_task;
  }
  
#line 2370 
  q += 1U;
  ldv_46533: 
#line 2371 
  ;
  
#line 2333 
  hw_q += 1U;
  ldv_46537: 
#line 2334 
  ;
  
#line 2333 
  if (hw_q <= 7U) 
#line 2335 
                  goto ldv_46536; else 
#line 2338 
                                       goto ldv_46538;
  ldv_46538: 
#line 2339 
  ;
  
#line 2373 
  dev->netdev_ops = & macb_netdev_ops;
  
#line 2374 
  netif_napi_add(dev,& bp->napi,& macb_poll,64);
  
#line 2377 
  tmp_1 = macb_is_gem(bp);
  
#line 2377 
  if ((int)tmp_1 != 0) {
    
#line 2378 
    bp->max_tx_length = 16383U;
    
#line 2379 
    bp->macbgem_ops.mog_alloc_rx_buffers = & gem_alloc_rx_buffers;
    
#line 2380 
    bp->macbgem_ops.mog_free_rx_buffers = & gem_free_rx_buffers;
    
#line 2381 
    bp->macbgem_ops.mog_init_rings = & gem_init_rings;
    
#line 2382 
    bp->macbgem_ops.mog_rx = & gem_rx;
    
#line 2383 
    dev->ethtool_ops = & gem_ethtool_ops;
  }
  else {
    
#line 2385 
    bp->max_tx_length = 2047U;
    
#line 2386 
    bp->macbgem_ops.mog_alloc_rx_buffers = & macb_alloc_rx_buffers;
    
#line 2387 
    bp->macbgem_ops.mog_free_rx_buffers = & macb_free_rx_buffers;
    
#line 2388 
    bp->macbgem_ops.mog_init_rings = & macb_init_rings;
    
#line 2389 
    bp->macbgem_ops.mog_rx = & macb_rx;
    
#line 2390 
    dev->ethtool_ops = & macb_ethtool_ops;
  }
  
#line 2394 
  dev->hw_features = 1ULL;
  
#line 2396 
  tmp_2 = macb_is_gem(bp);
  
#line 2396 
  if ((int)tmp_2 != 0) {
    
#line 2396 
    if ((bp->caps & 268435456U) == 0U) 
#line 2397 
                                       dev->hw_features |= 17179869192ULL; else ;
  }
  else ;
  
#line 2398 
  if ((bp->caps & 1073741824U) != 0U) 
#line 2399 
                                      dev->hw_features &= 18446744073709551614ULL; else ;
  
#line 2400 
  dev->features = dev->hw_features;
  
#line 2402 
  val = 0U;
  
#line 2403 
  if (bp->phy_interface == (unsigned int)PHY_INTERFACE_MODE_RGMII) 
#line 2404 
                                                                   val = 1U;
  else 
    
#line 2405 
    if (bp->phy_interface == (unsigned int)PHY_INTERFACE_MODE_RMII && (bp->caps & 4U) != 0U) 
      
#line 2407 
      val = 1U;
    else 
      
#line 2408 
      if ((bp->caps & 4U) == 0U) 
#line 2409 
                                 val = 1U; else ;
  
#line 2411 
  if ((bp->caps & 2U) != 0U) 
#line 2412 
                             val |= 2U; else ;
  {
    bool tmp_3;
    
#line 2414 
    tmp_3 = macb_is_gem(bp);
    
#line 2414 
    if ((int)tmp_3 != 0) 
#line 2414 
                         (*(bp->macb_reg_writel))(bp,12,val); else 
#line 2414 
                                                                   (*(bp->macb_reg_writel))(bp,192,val);
  }
  
#line 2417 
  val = macb_mdc_clk_div(bp);
  
#line 2418 
  tmp_4 = macb_dbw(bp);
  
#line 2418 
  val = tmp_4 | val;
  
#line 2419 
  (*(bp->macb_reg_writel))(bp,4,val);
  
#line 2421 
  __retres = 0;
  return_label: 
#line 2421 
                return __retres;
}


#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_start(struct net_device *dev)
{
  int __retres;
  dma_addr_t addr;
  u32 ctl;
  int i;
  
#line 2433 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2438 
  lp->rx_ring = (struct macb_dma_desc *)dma_alloc_attrs(& (lp->pdev)->dev,72UL,& lp->rx_ring_dma,208U,(struct dma_attrs *)0);
  
#line 2442 
  if (lp->rx_ring == (struct macb_dma_desc *)0) {
    
#line 2443 
    __retres = -12;
    
#line 2443 
    goto return_label;
  }
  else ;
  
#line 2445 
  lp->rx_buffers = dma_alloc_attrs(& (lp->pdev)->dev,13824UL,& lp->rx_buffers_dma,208U,(struct dma_attrs *)0);
  
#line 2449 
  if (lp->rx_buffers == (void *)0) {
    
#line 2450 
    dma_free_attrs(& (lp->pdev)->dev,72UL,(void *)lp->rx_ring,lp->rx_ring_dma,(struct dma_attrs *)0);
    
#line 2454 
    lp->rx_ring = (struct macb_dma_desc *)0;
    
#line 2455 
    __retres = -12;
    
#line 2455 
    goto return_label;
  }
  else ;
  
#line 2458 
  addr = lp->rx_buffers_dma;
  
#line 2459 
  i = 0;
  
#line 2459 
  goto ldv_46547;
  ldv_46546: 
#line 2460 
  ;
  
#line 2460 
  (lp->rx_ring + i)->addr = (unsigned int)addr;
  
#line 2461 
  (lp->rx_ring + i)->ctrl = 0U;
  
#line 2462 
  addr += 1536ULL;
  
#line 2459 
  i += 1;
  ldv_46547: 
#line 2460 
  ;
  
#line 2459 
  if (i <= 8) 
#line 2461 
              goto ldv_46546; else 
#line 2464 
                                   goto ldv_46548;
  ldv_46548: 
#line 2465 
  ;
  
#line 2466 
  (lp->rx_ring + 8U)->addr |= 2U;
  
#line 2469 
  lp->rx_tail = 0U;
  
#line 2472 
  (*(lp->macb_reg_writel))(lp,24,(unsigned int)lp->rx_ring_dma);
  
#line 2475 
  ctl = (*(lp->macb_reg_readl))(lp,0);
  
#line 2476 
  (*(lp->macb_reg_writel))(lp,0,ctl | 12U);
  
#line 2478 
  __retres = 0;
  return_label: 
#line 2478 
                return __retres;
}


#line 2482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_open(struct net_device *dev)
{
  int __retres;
  u32 ctl;
  int ret;
  
#line 2484 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2489 
  ctl = (*(lp->macb_reg_readl))(lp,0);
  
#line 2490 
  (*(lp->macb_reg_writel))(lp,0,ctl | 32U);
  
#line 2492 
  macb_set_hwaddr(lp);
  
#line 2494 
  ret = at91ether_start(dev);
  
#line 2495 
  if (ret != 0) {
    
#line 2496 
    __retres = ret;
    
#line 2496 
    goto return_label;
  }
  else ;
  
#line 2499 
  (*(lp->macb_reg_writel))(lp,40,3254U);
  
#line 2508 
  phy_start(lp->phy_dev);
  
#line 2510 
  netif_start_queue(dev);
  
#line 2512 
  __retres = 0;
  return_label: 
#line 2512 
                return __retres;
}


#line 2516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_close(struct net_device *dev)
{
  int __retres;
  u32 ctl;
  
#line 2518 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2522 
  ctl = (*(lp->macb_reg_readl))(lp,0);
  
#line 2523 
  (*(lp->macb_reg_writel))(lp,0,ctl & 4294967283U);
  
#line 2526 
  (*(lp->macb_reg_writel))(lp,44,3254U);
  
#line 2534 
  netif_start_queue(dev);
  
#line 2536 
  dma_free_attrs(& (lp->pdev)->dev,72UL,(void *)lp->rx_ring,lp->rx_ring_dma,(struct dma_attrs *)0);
  
#line 2540 
  lp->rx_ring = (struct macb_dma_desc *)0;
  
#line 2542 
  dma_free_attrs(& (lp->pdev)->dev,13824UL,lp->rx_buffers,lp->rx_buffers_dma,(struct dma_attrs *)0);
  
#line 2545 
  lp->rx_buffers = (void *)0;
  
#line 2547 
  __retres = 0;
  
#line 2547 
  return __retres;
}


#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  int __retres;
  u32 tmp_0;
  
#line 2553 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2555 
  tmp_0 = (*(lp->macb_reg_readl))(lp,20);
  
#line 2555 
  if ((tmp_0 & 16U) != 0U) {
    
#line 2556 
    netif_start_queue(dev);
    
#line 2559 
    lp->skb = skb;
    
#line 2560 
    lp->skb_length = (int)skb->len;
    
#line 2561 
    lp->skb_physaddr = dma_map_single_attrs((struct device *)0,(void *)skb->data,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 2565 
    (*(lp->macb_reg_writel))(lp,12,(unsigned int)lp->skb_physaddr);
    
#line 2567 
    (*(lp->macb_reg_writel))(lp,16,skb->len);
  }
  else {
    
#line 2570 
    netdev_err((struct net_device const *)dev,"%s called, but device is busy!\n","at91ether_start_xmit");
    
#line 2571 
    __retres = 16;
    
#line 2571 
    goto return_label;
  }
  
#line 2574 
  __retres = 0;
  return_label: 
#line 2574 
                return __retres;
}


#line 2580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void at91ether_rx(struct net_device *dev)
{
  unsigned char *p_recv;
  struct sk_buff *skb;
  unsigned int pktlen;
  
#line 2582 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2587 
  goto ldv_46574;
  ldv_46573: 
#line 2588 
  ;
  
#line 2588 
  p_recv = (unsigned char *)(lp->rx_buffers + lp->rx_tail * 1536U);
  
#line 2589 
  pktlen = (lp->rx_ring + lp->rx_tail)->ctrl & 4095U;
  
#line 2590 
  skb = netdev_alloc_skb(dev,pktlen + 2U);
  
#line 2591 
  if (skb != (struct sk_buff *)0) {
    unsigned char *tmp_0;
    
#line 2592 
    skb_reserve(skb,2);
    
#line 2593 
    ;
    
#line 2593 
    ;
    
#line 2593 
    tmp_0 = skb_put(skb,pktlen);
    
#line 2593 
    memcpy((void *)tmp_0,(void const *)p_recv,(unsigned long)pktlen);
    
#line 2595 
    skb->protocol = eth_type_trans(skb,dev);
    
#line 2596 
    lp->stats.rx_packets += 1UL;
    
#line 2597 
    lp->stats.rx_bytes += (unsigned long)pktlen;
    
#line 2598 
    netif_rx(skb);
  }
  else 
#line 2600 
       lp->stats.rx_dropped += 1UL;
  
#line 2603 
  if (((lp->rx_ring + lp->rx_tail)->ctrl & 1073741824U) != 0U) 
#line 2604 
                                                               lp->stats.multicast += 1UL; else ;
  
#line 2607 
  (lp->rx_ring + lp->rx_tail)->addr &= 4294967294U;
  
#line 2610 
  if (lp->rx_tail == 8U) 
#line 2611 
                         lp->rx_tail = 0U; else 
#line 2613 
                                                lp->rx_tail += 1U;
  ldv_46574: 
#line 2614 
  ;
  
#line 2587 
  if (((lp->rx_ring + lp->rx_tail)->addr & 1U) != 0U) 
#line 2589 
                                                      goto ldv_46573; else 
                                                                    
#line 2592 
                                                                    goto ldv_46575;
  ldv_46575: 
#line 2593 
  ;
  
#line 2594 
  return;
}


#line 2618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static irqreturn_t at91ether_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 intstatus;
  u32 ctl;
  
#line 2620 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 2621 
  struct macb *lp = netdev_priv((struct net_device const *)dev);
  
#line 2627 
  intstatus = (*(lp->macb_reg_readl))(lp,36);
  
#line 2630 
  if ((intstatus & 2U) != 0U) 
#line 2631 
                              at91ether_rx(dev); else ;
  
#line 2634 
  if ((intstatus & 128U) != 0U) {
    
#line 2636 
    if ((intstatus & 48U) != 0U) 
#line 2637 
                                 lp->stats.tx_errors += 1UL; else ;
    
#line 2639 
    if (lp->skb != (struct sk_buff *)0) {
      
#line 2640 
      dev_kfree_skb_irq(lp->skb);
      
#line 2641 
      lp->skb = (struct sk_buff *)0;
      
#line 2642 
      dma_unmap_single_attrs((struct device *)0,lp->skb_physaddr,(unsigned long)lp->skb_length,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 2644 
      lp->stats.tx_packets += 1UL;
      
#line 2645 
      lp->stats.tx_bytes += (unsigned long)lp->skb_length;
    }
    else ;
    
#line 2647 
    netif_wake_queue(dev);
  }
  else ;
  
#line 2651 
  if ((intstatus & 4U) != 0U) {
    
#line 2652 
    ctl = (*(lp->macb_reg_readl))(lp,0);
    
#line 2653 
    (*(lp->macb_reg_writel))(lp,0,ctl & 4294967291U);
    
#line 2654 
    (*(lp->macb_reg_writel))(lp,0,ctl | 4U);
  }
  else ;
  
#line 2657 
  if ((intstatus & 1024U) != 0U) 
#line 2658 
                                 netdev_err((struct net_device const *)dev,"ROVR error\n"); else ;
  
#line 2660 
  __retres = IRQ_HANDLED;
  
#line 2660 
  return __retres;
}


#line 2664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void at91ether_poll_controller(struct net_device *dev)
{
  unsigned long flags;
  int tmp_0;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 2668 
  flags = arch_local_irq_save();
  
#line 2668 
  trace_hardirqs_off();
  
#line 2669 
  at91ether_interrupt(dev->irq,(void *)dev);
  {
    unsigned long __dummy_2;
    unsigned long __dummy2_2;
    
  }
  
#line 2670 
  tmp_0 = arch_irqs_disabled_flags(flags);
  
#line 2670 
  if (tmp_0 != 0) {
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 2670 
    arch_local_irq_restore(flags);
    
#line 2670 
    trace_hardirqs_off();
  }
  else {
    
#line 2670 
    trace_hardirqs_on();
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 2670 
    arch_local_irq_restore(flags);
  }
  
#line 2672 
  return;
}


#line 2674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct net_device_ops const at91ether_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & at91ether_open, .ndo_stop = & at91ether_close, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& at91ether_start_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & macb_set_rx_mode, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & macb_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & eth_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & macb_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & at91ether_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_clk_init(struct platform_device *pdev, struct clk **pclk, struct clk **hclk, struct clk **tx_clk)
{
  int __retres;
  int err;
  bool tmp_0;
  
#line 2694 
  *hclk = (struct clk *)0;
  
#line 2695 
  *tx_clk = (struct clk *)0;
  
#line 2697 
  *pclk = devm_clk_get(& pdev->dev,"ether_clk");
  
#line 2698 
  tmp_0 = IS_ERR((void const *)*pclk);
  
#line 2698 
  if ((int)tmp_0 != 0) {
    long tmp;
    
#line 2699 
    tmp = PTR_ERR((void const *)*pclk);
    
#line 2699 
    __retres = (int)tmp;
    
#line 2699 
    goto return_label;
  }
  else ;
  
#line 2701 
  err = clk_prepare_enable(*pclk);
  
#line 2702 
  if (err != 0) {
    
#line 2703 
    dev_err((struct device const *)(& pdev->dev),"failed to enable pclk (%u)\n",err);
    
#line 2704 
    __retres = err;
    
#line 2704 
    goto return_label;
  }
  else ;
  
#line 2707 
  __retres = 0;
  return_label: 
#line 2707 
                return __retres;
}


#line 2710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int at91ether_init(struct platform_device *pdev)
{
  int __retres;
  int err;
  u32 reg;
  
#line 2712 
  struct net_device *dev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 2713 
  struct macb *bp = netdev_priv((struct net_device const *)dev);
  
#line 2717 
  dev->netdev_ops = & at91ether_netdev_ops;
  
#line 2718 
  dev->ethtool_ops = & macb_ethtool_ops;
  
#line 2720 
  err = devm_request_irq(& pdev->dev,(unsigned int)dev->irq,& at91ether_interrupt,0UL,(char const *)(& dev->name),(void *)dev);
  
#line 2722 
  if (err != 0) {
    
#line 2723 
    __retres = err;
    
#line 2723 
    goto return_label;
  }
  else ;
  
#line 2725 
  (*(bp->macb_reg_writel))(bp,0,0U);
  
#line 2727 
  reg = 2304U;
  
#line 2728 
  if (bp->phy_interface == (unsigned int)PHY_INTERFACE_MODE_RMII) 
#line 2729 
                                                                  reg |= 8192U; else ;
  
#line 2731 
  (*(bp->macb_reg_writel))(bp,4,reg);
  
#line 2733 
  __retres = 0;
  return_label: 
#line 2733 
                return __retres;
}


#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const at91sam9260_config = {.caps = 6U, .dma_burst_length = 0U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const pc302gem_config = {.caps = 1610612736U, .dma_burst_length = 16U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const sama5d2_config = {.caps = 0U, .dma_burst_length = 16U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const sama5d3_config = {.caps = 1610612736U, .dma_burst_length = 16U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const sama5d4_config = {.caps = 0U, .dma_burst_length = 4U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const emac_config = {.caps = 0U, .dma_burst_length = 0U, .clk_init = & at91ether_clk_init, .init = & at91ether_init, .jumbo_max_len = 0};

#line 2776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const zynqmp_config = {.caps = 1610612744U, .dma_burst_length = 16U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 10240};

#line 2785  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct macb_config const zynq_config = {.caps = 1610612744U, .dma_burst_length = 16U, .clk_init = & macb_clk_init, .init = & macb_init, .jumbo_max_len = 0};

#line 2793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct of_device_id const macb_dt_ids[13U] = {{.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'a', (char)'t', (char)'3', (char)'2', (char)'a', (char)'p', (char)'7', (char)'0', (char)'0', (char)'0', (char)'-', (char)'m', (char)'a', (char)'c', (char)'b', (char)'\000'}, .data = (void const *)0}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'a', (char)'t', (char)'9', (char)'1', (char)'s', (char)'a', (char)'m', (char)'9', (char)'2', (char)'6', (char)'0', (char)'-', (char)'m', (char)'a', (char)'c', (char)'b', (char)'\000'}, .data = (void const *)(& at91sam9260_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'m', (char)'a', (char)'c', (char)'b', (char)'\000'}, .data = (void const *)0}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'p', (char)'c', (char)'3', (char)'0', (char)'2', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& pc302gem_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& pc302gem_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'a', (char)'t', (char)'m', (char)'e', (char)'l', (char)',', (char)'s', (char)'a', (char)'m', (char)'a', (char)'5', (char)'d', (char)'2', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& sama5d2_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'a', (char)'t', (char)'m', (char)'e', (char)'l', (char)',', (char)'s', (char)'a', (char)'m', (char)'a', (char)'5', (char)'d', (char)'3', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& sama5d3_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'a', (char)'t', (char)'m', (char)'e', (char)'l', (char)',', (char)'s', (char)'a', (char)'m', (char)'a', (char)'5', (char)'d', (char)'4', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& sama5d4_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'a', (char)'t', (char)'9', (char)'1', (char)'r', (char)'m', (char)'9', (char)'2', (char)'0', (char)'0', (char)'-', (char)'e', (char)'m', (char)'a', (char)'c', (char)'\000'}, .data = (void const *)(& emac_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'e', (char)'m', (char)'a', (char)'c', (char)'\000'}, .data = (void const *)(& emac_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'z', (char)'y', (char)'n', (char)'q', (char)'m', (char)'p', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& zynqmp_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)'c', (char)'d', (char)'n', (char)'s', (char)',', (char)'z', (char)'y', (char)'n', (char)'q', (char)'-', (char)'g', (char)'e', (char)'m', (char)'\000'}, .data = (void const *)(& zynq_config)}, {.name = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .type = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .compatible = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .data = (void const *)0}};

#line 2808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
struct of_device_id const __mod_of__macb_dt_ids_device_table[13U];

#line 2811  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_probe(struct platform_device *pdev)
{
  int __retres;
  struct clk *pclk;
  struct clk *hclk;
  struct clk *tx_clk;
  unsigned int queue_mask;
  unsigned int num_queues;
  struct macb_platform_data *pdata;
  bool native_io;
  struct phy_device *phydev;
  struct net_device *dev;
  struct resource *regs;
  void *mem;
  char const *mac;
  struct macb *bp;
  int err;
  bool tmp_0;
  u32 tmp_4;
  char *tmp_6;
  bool tmp_5;
  char const *tmp_7;
  
#line 2813 
  int (*clk_init)(struct platform_device *, struct clk **, struct clk **, struct clk **) = & macb_clk_init;
  
#line 2816 
  int (*init)(struct platform_device *) = & macb_init;
  
#line 2817 
  struct device_node *np = pdev->dev.of_node;
  
#line 2818 
  struct macb_config const *macb_config = (struct macb_config const *)0;
  
#line 2831 
  regs = platform_get_resource(pdev,512U,0U);
  
#line 2832 
  mem = devm_ioremap_resource(& pdev->dev,regs);
  
#line 2833 
  tmp_0 = IS_ERR((void const *)mem);
  
#line 2833 
  if ((int)tmp_0 != 0) {
    long tmp;
    
#line 2834 
    tmp = PTR_ERR((void const *)mem);
    
#line 2834 
    __retres = (int)tmp;
    
#line 2834 
    goto return_label;
  }
  else ;
  
#line 2836 
  if (np != (struct device_node *)0) {
    struct of_device_id const *match;
    
#line 2839 
    match = of_match_node((struct of_device_id const *)(& macb_dt_ids),(struct device_node const *)np);
    
#line 2840 
    if (match != (struct of_device_id const *)0 && match->data != (void const *)0) {
      
#line 2841 
      macb_config = (struct macb_config const *)match->data;
      
#line 2842 
      clk_init = macb_config->clk_init;
      
#line 2843 
      init = macb_config->init;
    }
    else ;
  }
  else ;
  
#line 2847 
  err = (*clk_init)(pdev,& pclk,& hclk,& tx_clk);
  
#line 2848 
  if (err != 0) {
    
#line 2849 
    __retres = err;
    
#line 2849 
    goto return_label;
  }
  else ;
  
#line 2851 
  native_io = hw_is_native_io(mem);
  
#line 2853 
  macb_probe_queues(mem,(_Bool)((bool)((int)native_io) != 0),& queue_mask,& num_queues);
  
#line 2854 
  dev = ldv_alloc_etherdev_mqs_84(2456,num_queues,num_queues);
  
#line 2855 
  if (dev == (struct net_device *)0) {
    
#line 2856 
    err = -12;
    
#line 2857 
    goto err_disable_clocks;
  }
  else ;
  
#line 2860 
  dev->base_addr = (unsigned long)regs->start;
  
#line 2862 
  dev->dev.parent = & pdev->dev;
  
#line 2864 
  bp = (struct macb *)netdev_priv((struct net_device const *)dev);
  
#line 2865 
  bp->pdev = pdev;
  
#line 2866 
  bp->dev = dev;
  
#line 2867 
  bp->regs = mem;
  
#line 2868 
  bp->native_io = native_io;
  
#line 2869 
  if ((int)native_io != 0) {
    
#line 2870 
    bp->macb_reg_readl = & hw_readl_native;
    
#line 2871 
    bp->macb_reg_writel = & hw_writel_native;
  }
  else {
    
#line 2873 
    bp->macb_reg_readl = & hw_readl;
    
#line 2874 
    bp->macb_reg_writel = & hw_writel;
  }
  
#line 2876 
  bp->num_queues = num_queues;
  
#line 2877 
  bp->queue_mask = queue_mask;
  
#line 2878 
  if (macb_config != (struct macb_config const *)0) 
#line 2879 
                                                    bp->dma_burst_length = macb_config->dma_burst_length; else ;
  
#line 2880 
  bp->pclk = pclk;
  
#line 2881 
  bp->hclk = hclk;
  
#line 2882 
  bp->tx_clk = tx_clk;
  
#line 2883 
  if (macb_config != (struct macb_config const *)0) 
#line 2884 
                                                    bp->jumbo_max_len = (unsigned int)macb_config->jumbo_max_len; else ;
  
#line 2886 
  spinlock_check(& bp->lock);
  {
    struct lock_class_key __key;
    
#line 2886 
    __raw_spin_lock_init(& bp->lock.__anonCompField_spinlock_18.rlock,"&(&bp->lock)->rlock",& __key);
  }
  
#line 2889 
  macb_configure_caps(bp,macb_config);
  
#line 2891 
  platform_set_drvdata(pdev,(void *)dev);
  
#line 2893 
  dev->irq = platform_get_irq(pdev,0U);
  
#line 2894 
  if (dev->irq < 0) {
    
#line 2895 
    err = dev->irq;
    
#line 2896 
    goto err_disable_clocks;
  }
  else ;
  
#line 2899 
  mac = (char const *)of_get_mac_address(np);
  
#line 2900 
  if (mac != (char const *)0) 
#line 2901 
                              memcpy((void *)(bp->dev)->dev_addr,(void const *)mac,6UL); else 
                                                                    
#line 2903 
                                                                    macb_get_hwaddr(bp);
  
#line 2905 
  err = of_get_phy_mode(np);
  
#line 2906 
  if (err < 0) {
    
#line 2907 
    pdata = (struct macb_platform_data *)dev_get_platdata((struct device const *)(& pdev->dev));
    
#line 2908 
    if (pdata != (struct macb_platform_data *)0 && (unsigned int)pdata->is_rmii != 0U) 
      
#line 2909 
      bp->phy_interface = PHY_INTERFACE_MODE_RMII; else 
#line 2911 
                                                        bp->phy_interface = PHY_INTERFACE_MODE_MII;
  }
  else 
#line 2913 
       bp->phy_interface = (enum ldv_28729)err;
  
#line 2917 
  err = (*init)(pdev);
  
#line 2918 
  if (err != 0) 
#line 2919 
                goto err_out_free_netdev; else ;
  
#line 2921 
  err = ldv_register_netdev_85(dev);
  
#line 2922 
  if (err != 0) {
    
#line 2923 
    dev_err((struct device const *)(& pdev->dev),"Cannot register net device, aborting.\n");
    
#line 2924 
    goto err_out_unregister_netdev;
  }
  else ;
  
#line 2927 
  err = macb_mii_init(bp);
  
#line 2928 
  if (err != 0) 
#line 2929 
                goto err_out_unregister_netdev; else ;
  
#line 2931 
  netif_carrier_off(dev);
  
#line 2933 
  ;
  
#line 2933 
  ;
  
#line 2933 
  ;
  
#line 2934 
  tmp_4 = (*(bp->macb_reg_readl))(bp,252);
  
#line 2933 
  tmp_5 = macb_is_gem(bp);
  
#line 2933 
  if ((int)tmp_5 != 0) 
#line 2933 
                       tmp_6 = (char *)"GEM"; else 
#line 2933 
                                                   tmp_6 = (char *)"MACB";
  
#line 2933 
  ;
  
#line 2933 
  netdev_info((struct net_device const *)dev,"Cadence %s rev 0x%08x at 0x%08lx irq %d (%pM)\n",tmp_6,tmp_4,dev->base_addr,dev->irq,dev->dev_addr);
  
#line 2937 
  phydev = bp->phy_dev;
  
#line 2938 
  ;
  
#line 2939 
  tmp_7 = dev_name((struct device const *)(& phydev->dev));
  
#line 2938 
  ;
  
#line 2938 
  ;
  
#line 2938 
  netdev_info((struct net_device const *)dev,"attached PHY driver [%s] (mii_bus:phy_addr=%s, irq=%d)\n",(phydev->drv)->name,tmp_7,phydev->irq);
  
#line 2941 
  __retres = 0;
  
#line 2941 
  goto return_label;
  err_out_unregister_netdev: 
#line 2943 
  ;
  
#line 2944 
  ldv_unregister_netdev_86(dev);
  err_out_free_netdev: 
#line 2946 
  ;
  
#line 2947 
  ldv_free_netdev_87(dev);
  err_disable_clocks: 
#line 2949 
  ;
  
#line 2950 
  clk_disable_unprepare(tx_clk);
  
#line 2951 
  clk_disable_unprepare(hclk);
  
#line 2952 
  clk_disable_unprepare(pclk);
  
#line 2954 
  __retres = err;
  return_label: 
#line 2954 
                return __retres;
}


#line 2957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_remove(struct platform_device *pdev)
{
  int __retres;
  struct net_device *dev;
  struct macb *bp;
  
#line 2962 
  dev = (struct net_device *)platform_get_drvdata((struct platform_device const *)pdev);
  
#line 2964 
  if (dev != (struct net_device *)0) {
    
#line 2965 
    bp = (struct macb *)netdev_priv((struct net_device const *)dev);
    
#line 2966 
    if (bp->phy_dev != (struct phy_device *)0) 
#line 2967 
                                               phy_disconnect(bp->phy_dev); else ;
    
#line 2968 
    mdiobus_unregister(bp->mii_bus);
    
#line 2969 
    kfree((void const *)(bp->mii_bus)->irq);
    
#line 2970 
    mdiobus_free(bp->mii_bus);
    
#line 2971 
    ldv_unregister_netdev_88(dev);
    
#line 2972 
    clk_disable_unprepare(bp->tx_clk);
    
#line 2973 
    clk_disable_unprepare(bp->hclk);
    
#line 2974 
    clk_disable_unprepare(bp->pclk);
    
#line 2975 
    ldv_free_netdev_89(dev);
  }
  else ;
  
#line 2978 
  __retres = 0;
  
#line 2978 
  return __retres;
}


#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_suspend(struct device *dev)
{
  int __retres;
  struct platform_device *tmp;
  {
    
#line 2983 
    struct device const *__mptr = (struct device const *)dev;
    
#line 2983 
    tmp = (struct platform_device *)__mptr + 18446744073709551600U;
  }
  
#line 2983 
  struct platform_device *pdev = tmp;
  
#line 2984 
  struct net_device *netdev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 2985 
  struct macb *bp = netdev_priv((struct net_device const *)netdev);
  
#line 2987 
  netif_carrier_off(netdev);
  
#line 2988 
  netif_device_detach(netdev);
  
#line 2990 
  clk_disable_unprepare(bp->tx_clk);
  
#line 2991 
  clk_disable_unprepare(bp->hclk);
  
#line 2992 
  clk_disable_unprepare(bp->pclk);
  
#line 2994 
  __retres = 0;
  
#line 2994 
  return __retres;
}


#line 2997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_resume(struct device *dev)
{
  int __retres;
  struct platform_device *tmp;
  {
    
#line 2999 
    struct device const *__mptr = (struct device const *)dev;
    
#line 2999 
    tmp = (struct platform_device *)__mptr + 18446744073709551600U;
  }
  
#line 2999 
  struct platform_device *pdev = tmp;
  
#line 3000 
  struct net_device *netdev = platform_get_drvdata((struct platform_device const *)pdev);
  
#line 3001 
  struct macb *bp = netdev_priv((struct net_device const *)netdev);
  
#line 3003 
  clk_prepare_enable(bp->pclk);
  
#line 3004 
  clk_prepare_enable(bp->hclk);
  
#line 3005 
  clk_prepare_enable(bp->tx_clk);
  
#line 3007 
  netif_device_attach(netdev);
  
#line 3009 
  __retres = 0;
  
#line 3009 
  return __retres;
}


#line 3012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct dev_pm_ops const macb_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & macb_suspend, .resume = & macb_resume, .freeze = & macb_suspend, .thaw = & macb_resume, .poweroff = & macb_suspend, .restore = & macb_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 3014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static struct platform_driver macb_driver = {.probe = & macb_probe, .remove = & macb_remove, .shutdown = (void (*)(struct platform_device *))0, .suspend = (int (*)(struct platform_device *, pm_message_t ))0, .resume = (int (*)(struct platform_device *))0, .driver = {.name = "macb", .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)(& macb_dt_ids), .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & macb_pm_ops, .p = (struct driver_private *)0}, .id_table = (struct platform_device_id const *)0, .prevent_deferred_probe = (_Bool)0};

#line 3024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static int macb_driver_init(void)
{
  int tmp;
  
#line 3024 
  tmp = ldv___platform_driver_register_90(& macb_driver,& __this_module);
  
#line 3024 
  return tmp;
}


#line 3024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cadence/macb.c"
static void macb_driver_exit(void)
{
  
#line 3024 
  ldv_platform_driver_unregister_91(& macb_driver);
  
#line 3025 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_4)(struct net_device *) = & ethtool_op_get_link;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int (*ldv_emg_alias_ethtool_op_get_ts_info_16)(struct net_device *, struct ethtool_ts_info *) = & ethtool_op_get_ts_info;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
struct dev_pm_ops *ldv_emg_alias_macb_pm_ops_3 = (struct dev_pm_ops *)(& macb_pm_ops);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int (*ldv_emg_alias_eth_mac_addr_18)(struct net_device *, void *) = & eth_mac_addr;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int (*ldv_emg_alias_eth_validate_addr_9)(struct net_device *) = & eth_validate_addr;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
struct platform_driver *ldv_emg_alias_macb_driver_2 = & macb_driver;

#line 64 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 65 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 66 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0);


#line 68 
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1);


#line 69 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_ioctl_7(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 75 
  tmp = macb_ioctl(arg0,arg1,arg2);
  
#line 75 
  return tmp;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_get_regs_len_6(struct net_device *arg0)
{
  int tmp;
  
#line 80 
  tmp = macb_get_regs_len(arg0);
  
#line 80 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_at91ether_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 85 
  tmp = at91ether_close(arg0);
  
#line 85 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_at91ether_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 90 
  tmp = at91ether_open(arg0);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_macb_driver_exit(void)
{
  
#line 95 
  macb_driver_exit();
  
#line 96 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_macb_driver_init(void)
{
  int tmp;
  
#line 99 
  tmp = macb_driver_init();
  
#line 99 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 103 
  tmp = macb_open(arg0);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_get_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 108 
  tmp = macb_get_settings(arg0,arg1);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_probe_2(struct platform_device *arg0)
{
  int tmp;
  
#line 113 
  tmp = macb_probe(arg0);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_wrapper_gem_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 118 
  gem_get_ethtool_stats(arg0,arg1,arg2);
  
#line 119 
  return;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_remove_3(struct platform_device *arg0)
{
  int tmp;
  
#line 123 
  tmp = macb_remove(arg0);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_set_features_13(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 128 
  tmp = macb_set_features(arg0,arg1);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_wrapper_gem_get_ethtool_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 133 
  gem_get_ethtool_strings(arg0,arg1,arg2);
  
#line 134 
  return;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 138 
  tmp = macb_suspend(arg0);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_gem_get_sset_count_3(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 143 
  tmp = gem_get_sset_count(arg0,arg1);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 148 
  tmp = macb_close(arg0);
  
#line 148 
  return tmp;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_start_xmit_17(struct sk_buff *arg0, struct net_device *arg1)
{
  int tmp;
  
#line 153 
  tmp = macb_start_xmit(arg0,arg1);
  
#line 153 
  return tmp;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_resume_4(struct device *arg0)
{
  int tmp;
  
#line 158 
  tmp = macb_resume(arg0);
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_set_settings_11(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 163 
  tmp = macb_set_settings(arg0,arg1);
  
#line 163 
  return tmp;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_wrapper_macb_get_regs_12(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 168 
  macb_get_regs(arg0,arg1,arg2);
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
int ldv_emg_wrapper_macb_change_mtu_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 173 
  tmp = macb_change_mtu(arg0,arg1);
  
#line 173 
  return tmp;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_wrapper_macb_set_rx_mode_19(struct net_device *arg0)
{
  
#line 178 
  macb_set_rx_mode(arg0);
  
#line 179 
  return;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
struct net_device_stats *ldv_emg_wrapper_macb_get_stats_14(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 183 
  tmp = macb_get_stats(arg0);
  
#line 183 
  return tmp;
}


#line 187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
void ldv_emg_wrapper_macb_poll_controller_15(struct net_device *arg0)
{
  
#line 188 
  macb_poll_controller(arg0);
  
#line 189 
  return;
}


#line 200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 203 
  tmp = ldv_ptr_err(ptr);
  
#line 203 
  return tmp;
}


#line 207  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 211 
  ret = ldv_is_err(ptr);
  
#line 212 
  __retres = (_Bool)(ret != 0L);
  
#line 212 
  return __retres;
}


#line 561  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 564 
  tmp = ldv_kmalloc(size,flags);
  
#line 564 
  return tmp;
}


#line 582  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 585 
  tmp = ldv_kzalloc(size,flags);
  
#line 585 
  return tmp;
}


#line 863  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 867 
  ldv_spin_model_lock((char *)"lock_of_macb");
  
#line 869 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 870 
  return;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 877 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 879 
  spin_unlock_irqrestore(lock,flags);
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 887 
  ldv_spin_model_lock((char *)"lock_of_macb");
  
#line 889 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 897 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 899 
  spin_unlock_irqrestore(lock,flags);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_lock_76(spinlock_t *lock)
{
  
#line 907 
  ldv_spin_model_lock((char *)"lock_of_macb");
  
#line 909 
  spin_lock(lock);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static bool ldv_schedule_work_77(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 917 
  tmp = ldv_emg_schedule_work(work);
  
#line 917 
  __retres = tmp != 0;
  
#line 917 
  return __retres;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_78(spinlock_t *lock)
{
  
#line 925 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 927 
  spin_unlock(lock);
  
#line 928 
  return;
}


#line 931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 935 
  ldv_spin_model_lock((char *)"lock_of_macb");
  
#line 937 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 938 
  return;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 945 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 947 
  spin_unlock_irqrestore(lock,flags);
  
#line 948 
  return;
}


#line 951  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags)
{
  
#line 955 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 957 
  spin_unlock_irqrestore(lock,flags);
  
#line 958 
  return;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1)
{
  
#line 965 
  ldv_spin_model_lock((char *)"lock_of_macb");
  
#line 967 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 975 
  ldv_spin_model_unlock((char *)"lock_of_macb");
  
#line 977 
  spin_unlock_irqrestore(lock,flags);
  
#line 978 
  return;
}


#line 981  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_84(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 985 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 985 
  return tmp;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static int ldv_register_netdev_85(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 993 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 993 
  return tmp;
}


#line 997  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1)
{
  
#line 1001 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1002 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1)
{
  
#line 1009 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1010 
  return;
}


#line 1013  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 1017 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1018 
  return;
}


#line 1021  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1)
{
  
#line 1025 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1026 
  return;
}


#line 1029  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static int ldv___platform_driver_register_90(struct platform_driver *ldv_func_arg1, struct module *ldv_func_arg2)
{
  int tmp;
  
#line 1033 
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1,ldv_func_arg2);
  
#line 1033 
  return tmp;
}


#line 1037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/weaver/.tmp_macb.c.aux"
static void ldv_platform_driver_unregister_91(struct platform_driver *ldv_func_arg1)
{
  
#line 1041 
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  
#line 1042 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 31 
void *memset(void *, int, size_t);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 59 
void ldv_dispatch_deregister_3_1(struct platform_driver *arg0);


#line 60 
void ldv_dispatch_pm_register_9_17(void);


#line 61 
void *ldv_platform_instance_9(void *arg0);


#line 63 
int main(void);


#line 66 
void *ldv_pm_ops_scenario_11(void *arg0);


#line 67 
void *ldv_random_allocationless_scenario_10(void *arg0);


#line 68 
void ldv_dispatch_register_8_4(struct net_device *arg0);


#line 69 
void ldv_dispatch_register_7_3(struct platform_driver *arg0);


#line 70 
void ldv_dispatch_pm_deregister_9_16(void);


#line 73 
void *ldv_initialization_1(void *arg0);


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_9;

#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_10 *cf_arg_10;
  int tmp;
  
#line 86 
  tmp = ldv_undef_int();
  
#line 86 
  switch (tmp) {
    case 0: 
#line 87 
    ;
    
#line 88 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 89 
    __VERIFIER_assume(ret == 0);
    
#line 90 
    goto ldv_43200;
    default: 
#line 92 
    ;
    
#line 92 
    __VERIFIER_assume(0);
  }
  ldv_43200: 
#line 93 
  ;
  
#line 94 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 104 
  ldv_5_netdev = arg0;
  
#line 109 
  ldv_emg_wrapper_macb_close_2(ldv_5_netdev);
  
#line 113 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 117 
  goto return_label;
  return_label: 
#line 119 
                return;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_3_1(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_9 *cf_arg_9;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  switch (tmp) {
    case 0: 
#line 128 
    ;
    
#line 129 
    ret = pthread_join(ldv_thread_9,(void **)0);
    
#line 130 
    __VERIFIER_assume(ret == 0);
    
#line 131 
    goto ldv_43212;
    default: 
#line 133 
    ;
    
#line 133 
    __VERIFIER_assume(0);
  }
  ldv_43212: 
#line 134 
  ;
  
#line 135 
  return;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_register_9_17(void)
{
  int ret;
  struct ldv_struct_platform_instance_9 *cf_arg_11;
  int tmp;
  
#line 142 
  tmp = ldv_undef_int();
  
#line 142 
  switch (tmp) {
    case 0: 
#line 143 
    ;
    
#line 144 
    cf_arg_11 = (struct ldv_struct_platform_instance_9 *)ldv_xmalloc(16UL);
    
#line 145 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_pm_ops_scenario_11,(void *)cf_arg_11);
    
#line 146 
    __VERIFIER_assume(ret == 0);
    
#line 147 
    goto ldv_43220;
    default: 
#line 149 
    ;
    
#line 149 
    __VERIFIER_assume(0);
  }
  ldv_43220: 
#line 150 
  ;
  
#line 151 
  return;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_platform_instance_9(void *arg0)
{
  void *__retres;
  struct platform_device *ldv_9_ldv_param_0_2;
  struct platform_device *ldv_9_ldv_param_0_3;
  int tmp_1;
  int tmp_2;
  
#line 159 
  struct platform_driver *ldv_9_container = ldv_emg_alias_macb_driver_2;
  
#line 161 
  int ldv_9_probed = 1;
  
#line 163 
  struct ldv_struct_platform_instance_9 *data = (struct ldv_struct_platform_instance_9 *)arg0;
  
#line 167 
  ldv_9_probed = 1;
  
#line 170 
  if (data != (struct ldv_struct_platform_instance_9 *)0) {
    
#line 171 
    ldv_9_container = data->arg0;
    
#line 172 
    ldv_free((void *)data);
  }
  else ;
  
#line 183 
  goto ldv_main_9;
  
#line 185 
  __retres = (void *)0;
  
#line 185 
  goto return_label;
  ldv_main_9: 
#line 188 
  ;
  
#line 191 
  tmp_1 = ldv_undef_int();
  
#line 191 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 193 
    ldv_9_ldv_param_0_2 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 198 
    ldv_pre_probe();
    
#line 200 
    ldv_9_probed = ldv_emg_wrapper_macb_probe_2(ldv_9_ldv_param_0_2);
    
#line 202 
    ldv_9_probed = ldv_post_probe(ldv_9_probed);
    
#line 206 
    ldv_free((void *)ldv_9_ldv_param_0_2);
    
#line 209 
    tmp_0 = ldv_undef_int();
    
#line 209 
    if (tmp_0 != 0) {
      
#line 211 
      __VERIFIER_assume(ldv_9_probed == 0);
      
#line 218 
      goto ldv_call_9;
    }
    else {
      
#line 222 
      __VERIFIER_assume(ldv_9_probed != 0);
      
#line 229 
      goto ldv_main_9;
    }
  }
  else {
    
#line 241 
    __retres = (void *)0;
    
#line 241 
    goto return_label;
  }
  
#line 244 
  __retres = (void *)0;
  
#line 244 
  goto return_label;
  ldv_call_9: 
#line 247 
  ;
  
#line 250 
  tmp_2 = ldv_undef_int();
  
#line 250 
  switch (tmp_2) {
    case 1: 
#line 251 
    ;
    
#line 260 
    goto ldv_call_9;
    case 2: 
#line 263 
    ;
    
#line 265 
    ldv_dispatch_pm_register_9_17();
    
#line 269 
    ldv_dispatch_pm_deregister_9_16();
    
#line 276 
    goto ldv_call_9;
    case 3: 
#line 279 
    ;
    
#line 281 
    ldv_9_ldv_param_0_3 = (struct platform_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 286 
    ldv_emg_wrapper_macb_remove_3(ldv_9_ldv_param_0_3);
    
#line 290 
    ldv_free((void *)ldv_9_ldv_param_0_3);
    
#line 294 
    ldv_9_probed = 1;
    
#line 301 
    goto ldv_main_9;
    default: 
#line 304 
    ;
    
#line 304 
    __VERIFIER_assume(0);
  }
  
#line 307 
  __retres = (void *)0;
  return_label: 
#line 307 
                return __retres;
}


#line 312  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0)
{
  
#line 315 
  struct platform_driver *ldv_3_platform_driver = ldv_emg_alias_macb_driver_2;
  
#line 318 
  ldv_3_platform_driver = arg0;
  
#line 322 
  ldv_dispatch_deregister_3_1(ldv_3_platform_driver);
  
#line 326 
  goto return_label;
  return_label: 
#line 328 
                return;
}


#line 333  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 336 
  ldv_initialize();
  
#line 339 
  ldv_initialization_1((void *)0);
  
#line 341 
  __retres = 0;
  
#line 341 
  return __retres;
}


#line 346  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___platform_driver_register(struct platform_driver *arg0, struct module *arg1)
{
  int __retres;
  int tmp_0;
  
#line 349 
  struct platform_driver *ldv_7_platform_driver = ldv_emg_alias_macb_driver_2;
  
#line 353 
  tmp_0 = ldv_undef_int();
  
#line 353 
  if (tmp_0 != 0) {
    
#line 355 
    ldv_7_platform_driver = arg0;
    
#line 359 
    ldv_dispatch_register_7_3(ldv_7_platform_driver);
    
#line 363 
    __retres = 0;
    
#line 363 
    goto return_label;
  }
  else {
    int tmp;
    
#line 370 
    tmp = ldv_undef_int_negative();
    
#line 370 
    __retres = tmp;
    
#line 370 
    goto return_label;
  }
  return_label: 
#line 353 
                return __retres;
}


#line 380  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 387 
  tmp_0 = ldv_undef_int();
  
#line 387 
  if (tmp_0 != 0) {
    
#line 389 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 393 
    __retres = ldv_4_netdev;
    
#line 393 
    goto return_label;
  }
  else {
    
#line 400 
    __retres = (struct net_device *)0;
    
#line 400 
    goto return_label;
  }
  return_label: 
#line 387 
                return __retres;
}


#line 410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_11(void *arg0)
{
  void *__retres;
  struct device *ldv_11_device;
  int tmp;
  
#line 413 
  struct dev_pm_ops *ldv_11_pm_ops = ldv_emg_alias_macb_pm_ops_3;
  
#line 417 
  ldv_free(arg0);
  
#line 424 
  goto ldv_do_11;
  
#line 426 
  __retres = (void *)0;
  
#line 426 
  goto return_label;
  ldv_do_11: 
#line 429 
  ;
  
#line 432 
  tmp = ldv_undef_int();
  
#line 432 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 433 
    ;
    
#line 435 
    if (ldv_11_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 437 
                                                                    (*(ldv_11_pm_ops->runtime_idle))(ldv_11_device); else ;
    
#line 445 
    goto ldv_do_11;
    case 2: 
#line 448 
    ;
    
#line 450 
    if (ldv_11_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 452 
      (*(ldv_11_pm_ops->runtime_suspend))(ldv_11_device); else ;
    
#line 457 
    if (ldv_11_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 459 
      (*(ldv_11_pm_ops->runtime_resume))(ldv_11_device); else ;
    
#line 467 
    goto ldv_do_11;
    case 3: 
#line 470 
    ;
    
#line 472 
    if (ldv_11_pm_ops->prepare != (int (*)(struct device *))0) 
#line 474 
                                                               (*(ldv_11_pm_ops->prepare))(ldv_11_device); else ;
    
#line 478 
    tmp_0 = ldv_undef_int();
    
#line 478 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 479 
      ;
      
#line 482 
      ldv_emg_wrapper_macb_suspend_2(ldv_11_device);
      
#line 485 
      tmp_1 = ldv_undef_int();
      
#line 485 
      if (tmp_1 != 0) {
        
#line 487 
        if (ldv_11_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 489 
          (*(ldv_11_pm_ops->suspend_noirq))(ldv_11_device); else ;
        
#line 494 
        if (ldv_11_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 496 
          (*(ldv_11_pm_ops->resume_noirq))(ldv_11_device); else ;
      }
      else {
        
#line 503 
        if (ldv_11_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 505 
          (*(ldv_11_pm_ops->suspend_late))(ldv_11_device); else ;
        
#line 510 
        if (ldv_11_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 512 
          (*(ldv_11_pm_ops->resume_early))(ldv_11_device); else ;
      }
      
#line 519 
      ldv_emg_wrapper_macb_resume_4(ldv_11_device);
      
#line 522 
      goto ldv_43264;
      case 2: 
#line 524 
      ;
      
#line 527 
      ldv_emg_wrapper_macb_suspend_2(ldv_11_device);
      
#line 530 
      tmp_2 = ldv_undef_int();
      
#line 530 
      if (tmp_2 != 0) {
        
#line 532 
        if (ldv_11_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 534 
          (*(ldv_11_pm_ops->freeze_late))(ldv_11_device); else ;
        
#line 539 
        if (ldv_11_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 541 
          (*(ldv_11_pm_ops->thaw_early))(ldv_11_device); else ;
      }
      else {
        
#line 548 
        if (ldv_11_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 550 
          (*(ldv_11_pm_ops->freeze_noirq))(ldv_11_device); else ;
        
#line 555 
        if (ldv_11_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 557 
          (*(ldv_11_pm_ops->thaw_noirq))(ldv_11_device); else ;
      }
      
#line 564 
      ldv_emg_wrapper_macb_resume_4(ldv_11_device);
      
#line 567 
      goto ldv_43264;
      case 3: 
#line 569 
      ;
      
#line 572 
      ldv_emg_wrapper_macb_suspend_2(ldv_11_device);
      
#line 575 
      tmp_3 = ldv_undef_int();
      
#line 575 
      if (tmp_3 != 0) {
        
#line 577 
        if (ldv_11_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 579 
          (*(ldv_11_pm_ops->poweroff_late))(ldv_11_device); else ;
        
#line 584 
        if (ldv_11_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 586 
          (*(ldv_11_pm_ops->restore_early))(ldv_11_device); else ;
      }
      else {
        
#line 593 
        if (ldv_11_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 595 
          (*(ldv_11_pm_ops->poweroff_noirq))(ldv_11_device); else ;
        
#line 600 
        if (ldv_11_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 602 
          (*(ldv_11_pm_ops->restore_noirq))(ldv_11_device); else ;
      }
      
#line 609 
      ldv_emg_wrapper_macb_resume_4(ldv_11_device);
      
#line 612 
      goto ldv_43264;
      default: 
#line 614 
      ;
      
#line 614 
      __VERIFIER_assume(0);
    }
    ldv_43264: 
#line 617 
    ;
    
#line 617 
    if (ldv_11_pm_ops->complete != (void (*)(struct device *))0) 
#line 619 
                                                                 (*(ldv_11_pm_ops->complete))(ldv_11_device); else ;
    
#line 627 
    goto ldv_do_11;
    case 4: 
#line 630 
    ;
    
#line 636 
    __retres = (void *)0;
    
#line 636 
    goto return_label;
    default: 
#line 639 
    ;
    
#line 639 
    __VERIFIER_assume(0);
  }
  
#line 642 
  __retres = (void *)0;
  return_label: 
#line 642 
                return __retres;
}


#line 647  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_10(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_10_ldv_param_0_17;
  unsigned long long ldv_10_ldv_param_1_3;
  struct ethtool_cmd *ldv_10_ldv_param_1_10;
  unsigned int ldv_10_ldv_param_1_15;
  void *ldv_10_ldv_param_2_12;
  struct ethtool_stats *ldv_10_ldv_param_1_7;
  void *ldv_10_ldv_param_1_14;
  struct ethtool_cmd *ldv_10_ldv_param_1_2;
  struct ethtool_ts_info *ldv_10_ldv_param_1_4;
  struct ifreq *ldv_10_ldv_param_1_5;
  struct ethtool_regs *ldv_10_ldv_param_1_11;
  unsigned long long *ldv_10_ldv_param_2_8;
  int ldv_10_ldv_param_2_6;
  struct net_device *ldv_10_container;
  int ldv_10_ldv_param_1_9;
  unsigned char *ldv_10_ldv_param_2_16;
  int ldv_10_ldv_param_1_13;
  int tmp_9;
  
#line 668 
  struct ldv_struct_random_allocationless_scenario_10 *data = (struct ldv_struct_random_allocationless_scenario_10 *)arg0;
  
#line 673 
  if (data != (struct ldv_struct_random_allocationless_scenario_10 *)0) {
    
#line 674 
    ldv_10_container = data->arg0;
    
#line 675 
    ldv_free((void *)data);
  }
  else ;
  
#line 683 
  goto ldv_call_10;
  
#line 685 
  __retres = (void *)0;
  
#line 685 
  goto return_label;
  ldv_call_10: 
#line 688 
  ;
  
#line 691 
  tmp_9 = ldv_undef_int();
  
#line 691 
  if (tmp_9 != 0) {
    int tmp_0;
    
#line 693 
    ldv_10_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 696 
    tmp_0 = ldv_undef_int();
    
#line 696 
    switch (tmp_0) {
      case 1: 
#line 697 
      ;
      
#line 700 
      ldv_emg_wrapper_macb_get_settings_2(ldv_10_container,ldv_10_ldv_param_1_2);
      
#line 703 
      goto ldv_43293;
      case 2: 
#line 705 
      ;
      
#line 708 
      ldv_emg_wrapper_macb_set_rx_mode_19(ldv_10_container);
      
#line 711 
      goto ldv_43293;
      case 3: 
#line 713 
      ;
      
#line 716 
      ldv_emg_wrapper_macb_poll_controller_15(ldv_10_container);
      
#line 719 
      goto ldv_43293;
      case 4: 
#line 721 
      ;
      
#line 723 
      ldv_10_ldv_param_0_17 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 728 
      ldv_emg_wrapper_macb_start_xmit_17(ldv_10_ldv_param_0_17,ldv_10_container);
      
#line 732 
      ldv_free((void *)ldv_10_ldv_param_0_17);
      
#line 735 
      goto ldv_43293;
      case 5: 
#line 737 
      ;
      
#line 740 
      ldv_emg_wrapper_macb_get_regs_len_6(ldv_10_container);
      
#line 743 
      goto ldv_43293;
      case 6: 
#line 745 
      ;
      
#line 747 
      ldv_10_ldv_param_2_16 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 752 
      ldv_emg_wrapper_gem_get_ethtool_strings_5(ldv_10_container,ldv_10_ldv_param_1_15,ldv_10_ldv_param_2_16);
      
#line 756 
      ldv_free((void *)ldv_10_ldv_param_2_16);
      
#line 759 
      goto ldv_43293;
      case 7: 
#line 761 
      ;
      
#line 763 
      ldv_10_ldv_param_1_14 = ldv_xmalloc_unknown_size(0UL);
      
#line 768 
      (*ldv_emg_alias_eth_mac_addr_18)(ldv_10_container,ldv_10_ldv_param_1_14);
      
#line 772 
      ldv_free(ldv_10_ldv_param_1_14);
      
#line 775 
      goto ldv_43293;
      case 8: 
#line 777 
      ;
      
#line 780 
      ldv_emg_wrapper_macb_get_stats_14(ldv_10_container);
      
#line 783 
      goto ldv_43293;
      case 9: 
#line 785 
      ;
      
#line 791 
      ldv_emg_wrapper_gem_get_sset_count_3(ldv_10_container,ldv_10_ldv_param_1_13);
      
#line 797 
      goto ldv_43293;
      case 10: 
#line 799 
      ;
      
#line 801 
      ldv_10_ldv_param_2_12 = ldv_xmalloc_unknown_size(0UL);
      
#line 802 
      ldv_10_ldv_param_1_11 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 807 
      ldv_emg_wrapper_macb_get_regs_12(ldv_10_container,ldv_10_ldv_param_1_11,ldv_10_ldv_param_2_12);
      
#line 811 
      ldv_free(ldv_10_ldv_param_2_12);
      
#line 812 
      ldv_free((void *)ldv_10_ldv_param_1_11);
      
#line 815 
      goto ldv_43293;
      case 11: 
#line 817 
      ;
      
#line 819 
      ldv_10_ldv_param_1_10 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 824 
      ldv_emg_wrapper_macb_set_settings_11(ldv_10_container,ldv_10_ldv_param_1_10);
      
#line 828 
      ldv_free((void *)ldv_10_ldv_param_1_10);
      
#line 831 
      goto ldv_43293;
      case 12: 
#line 833 
      ;
      
#line 839 
      ldv_emg_wrapper_macb_change_mtu_10(ldv_10_container,ldv_10_ldv_param_1_9);
      
#line 845 
      goto ldv_43293;
      case 13: 
#line 847 
      ;
      
#line 850 
      (*ldv_emg_alias_eth_validate_addr_9)(ldv_10_container);
      
#line 853 
      goto ldv_43293;
      case 14: 
#line 855 
      ;
      
#line 857 
      ldv_10_ldv_param_2_8 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 858 
      ldv_10_ldv_param_1_7 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 863 
      ldv_emg_wrapper_gem_get_ethtool_stats_8(ldv_10_container,ldv_10_ldv_param_1_7,ldv_10_ldv_param_2_8);
      
#line 867 
      ldv_free((void *)ldv_10_ldv_param_2_8);
      
#line 868 
      ldv_free((void *)ldv_10_ldv_param_1_7);
      
#line 871 
      goto ldv_43293;
      case 15: 
#line 873 
      ;
      
#line 875 
      ldv_10_ldv_param_1_5 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 880 
      ldv_emg_wrapper_macb_ioctl_7(ldv_10_container,ldv_10_ldv_param_1_5,ldv_10_ldv_param_2_6);
      
#line 884 
      ldv_free((void *)ldv_10_ldv_param_1_5);
      
#line 887 
      goto ldv_43293;
      case 16: 
#line 889 
      ;
      
#line 892 
      ldv_emg_wrapper_macb_get_regs_len_6(ldv_10_container);
      
#line 895 
      goto ldv_43293;
      case 17: 
#line 897 
      ;
      
#line 899 
      ldv_10_ldv_param_1_4 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 904 
      (*ldv_emg_alias_ethtool_op_get_ts_info_16)(ldv_10_container,ldv_10_ldv_param_1_4);
      
#line 908 
      ldv_free((void *)ldv_10_ldv_param_1_4);
      
#line 911 
      goto ldv_43293;
      case 18: 
#line 913 
      ;
      
#line 916 
      (*ldv_emg_alias_ethtool_op_get_link_4)(ldv_10_container);
      
#line 919 
      goto ldv_43293;
      case 19: 
#line 921 
      ;
      
#line 927 
      ldv_emg_wrapper_macb_set_features_13(ldv_10_container,ldv_10_ldv_param_1_3);
      
#line 933 
      goto ldv_43293;
      default: 
#line 935 
      ;
      
#line 935 
      __VERIFIER_assume(0);
    }
    ldv_43293: 
#line 938 
    ;
    
#line 938 
    ldv_free((void *)ldv_10_ldv_param_1_2);
    
#line 945 
    goto ldv_call_10;
  }
  else {
    
#line 953 
    __retres = (void *)0;
    
#line 953 
    goto return_label;
  }
  
#line 956 
  __retres = (void *)0;
  return_label: 
#line 956 
                return __retres;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_10 *cf_arg_10;
  int tmp;
  
#line 964 
  tmp = ldv_undef_int();
  
#line 964 
  switch (tmp) {
    case 0: 
#line 965 
    ;
    
#line 966 
    cf_arg_10 = (struct ldv_struct_random_allocationless_scenario_10 *)ldv_xmalloc(16UL);
    
#line 967 
    cf_arg_10->arg0 = arg0;
    
#line 968 
    ret = pthread_create(& ldv_thread_10,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_10,(void *)cf_arg_10);
    
#line 969 
    __VERIFIER_assume(ret == 0);
    
#line 970 
    goto ldv_43319;
    default: 
#line 972 
    ;
    
#line 972 
    __VERIFIER_assume(0);
  }
  ldv_43319: 
#line 973 
  ;
  
#line 974 
  return;
}


#line 978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct platform_driver *arg0)
{
  int ret;
  struct ldv_struct_platform_instance_9 *cf_arg_9;
  int tmp;
  
#line 981 
  tmp = ldv_undef_int();
  
#line 981 
  switch (tmp) {
    case 0: 
#line 982 
    ;
    
#line 983 
    cf_arg_9 = (struct ldv_struct_platform_instance_9 *)ldv_xmalloc(16UL);
    
#line 984 
    cf_arg_9->arg0 = arg0;
    
#line 985 
    ret = pthread_create(& ldv_thread_9,(pthread_attr_t const *)0,& ldv_platform_instance_9,(void *)cf_arg_9);
    
#line 986 
    __VERIFIER_assume(ret == 0);
    
#line 987 
    goto ldv_43327;
    default: 
#line 989 
    ;
    
#line 989 
    __VERIFIER_assume(0);
  }
  ldv_43327: 
#line 990 
  ;
  
#line 991 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_pm_deregister_9_16(void)
{
  int ret;
  struct ldv_struct_platform_instance_9 *cf_arg_11;
  int tmp;
  
#line 998 
  tmp = ldv_undef_int();
  
#line 998 
  switch (tmp) {
    case 0: 
#line 999 
    ;
    
#line 1000 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1001 
    __VERIFIER_assume(ret == 0);
    
#line 1002 
    goto ldv_43335;
    default: 
#line 1004 
    ;
    
#line 1004 
    __VERIFIER_assume(0);
  }
  ldv_43335: 
#line 1005 
  ;
  
#line 1006 
  return;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_6_work_struct;
  int tmp;
  
#line 1017 
  tmp = ldv_undef_int();
  
#line 1017 
  if (tmp != 0) {
    
#line 1019 
    ldv_6_work_struct = arg0;
    
#line 1023 
    if (ldv_6_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1025 
      (*(ldv_6_work_struct->func))(ldv_6_work_struct); else ;
    
#line 1030 
    __retres = (_Bool)1;
    
#line 1030 
    goto return_label;
  }
  else {
    
#line 1037 
    __retres = (_Bool)0;
    
#line 1037 
    goto return_label;
  }
  return_label: 
#line 1017 
                return __retres;
}


#line 1047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1053 
  ldv_2_netdev = arg0;
  
#line 1054 
  ldv_free((void *)ldv_2_netdev);
  
#line 1058 
  goto return_label;
  return_label: 
#line 1060 
                return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1072 
  ldv_1_ret = ldv_emg_macb_driver_init();
  
#line 1073 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1076 
  tmp = ldv_undef_int();
  
#line 1076 
  if (tmp != 0) {
    
#line 1078 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1082 
    __retres = (void *)0;
    
#line 1082 
    goto return_label;
  }
  else {
    
#line 1086 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1091 
    ldv_emg_macb_driver_exit();
    
#line 1095 
    __retres = (void *)0;
    
#line 1095 
    goto return_label;
  }
  
#line 1098 
  __retres = (void *)0;
  return_label: 
#line 1098 
                return __retres;
}


#line 1103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cadence/macb.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_8_netdev;
  int tmp_3;
  
#line 1107 
  int ldv_8_ret = ldv_undef_int();
  
#line 1110 
  ldv_8_ret = ldv_undef_int();
  
#line 1113 
  tmp_3 = ldv_undef_int();
  
#line 1113 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1115 
    ldv_8_netdev = arg0;
    
#line 1120 
    ldv_8_ret = ldv_emg_wrapper_macb_open_2(ldv_8_netdev);
    
#line 1123 
    tmp_1 = ldv_undef_int();
    
#line 1123 
    if (tmp_1 != 0) {
      
#line 1125 
      __VERIFIER_assume(ldv_8_ret == 0);
      
#line 1129 
      ldv_dispatch_register_8_4(ldv_8_netdev);
      
#line 1133 
      __retres = 0;
      
#line 1133 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1140 
      __VERIFIER_assume(ldv_8_ret != 0);
      
#line 1141 
      ldv_failed_register_netdev();
      
#line 1142 
      tmp_0 = ldv_undef_int_negative();
      
#line 1142 
      __retres = tmp_0;
      
#line 1142 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1150 
    ldv_failed_register_netdev();
    
#line 1151 
    tmp_2 = ldv_undef_int_negative();
    
#line 1151 
    __retres = tmp_2;
    
#line 1151 
    goto return_label;
  }
  return_label: 
#line 1113 
                return __retres;
}


